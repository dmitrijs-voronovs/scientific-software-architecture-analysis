id,quality_attribute,keyword,matched_word,match_idx,sentence,source,filename,author,repo,version,wiki,url
https://root.cern/doc/master/classTNtuple.html:41472,Performance,cache,cache,41472,"bed by the last 3 parameters matches the content of the branch. ;  ; Long64_t GetCacheAutoSize (bool withDefault=false);  Used for automatic sizing of the cache. ;  ; virtual TLeaf * GetLeafImpl (const char *branchname, const char *leafname);  Return pointer to the 1st Leaf named name in any Branch of this Tree or any branch in the list of friend trees. ;  ; char GetNewlineValue (std::istream &inputStream);  Determine which newline this file is using. ;  ; void ImportClusterRanges (TTree *fromtree);  Appends the cluster range information stored in 'fromtree' to this tree, including the value of fAutoFlush. ;  ; virtual void KeepCircular ();  Keep a maximum of fMaxEntries in memory. ;  ; void MoveReadCache (TFile *src, TDirectory *dir);  Move a cache from a file to the current file in dir. ;  ; Int_t SetBranchAddressImp (TBranch *branch, void *addr, TBranch **ptr);  Change branch address, dealing with clone trees properly. ;  ; Int_t SetCacheSizeAux (bool autocache=true, Long64_t cacheSize=0);  Set the size of the file cache and create it if possible. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Float_t * fArgs;  ! [fNvar] Array of variables ;  ; Int_t fNvar;  Number of columns. ;  ;  Protected Attributes inherited from TTree; TList * fAliases;  List of aliases for expressions based on the tree branches. ;  ; std::atomic< UInt_t > fAllocationCount {0};  indicates basket should be resized to exact memory usage, but causes significant ;  ; Long64_t fAutoFlush;  Auto-flush tree when fAutoFlush entries written or -fAutoFlush (compressed) bytes produced. ;  ; Long64_t fAutoSave;  Autosave tree when fAutoSave entries written or -fAutoSave (compressed) bytes produced. ;  ; TObjArray fBranches;  List of Branches. ;  ; TBranchRef * fBranchRef;  Branch supporting the TRefTable (if any) ; ",MatchSource.WIKI,doc/master/classTNtuple.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtuple.html
https://root.cern/doc/master/classTNtuple.html:42476,Performance,cache,cache,42476,"rorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Float_t * fArgs;  ! [fNvar] Array of variables ;  ; Int_t fNvar;  Number of columns. ;  ;  Protected Attributes inherited from TTree; TList * fAliases;  List of aliases for expressions based on the tree branches. ;  ; std::atomic< UInt_t > fAllocationCount {0};  indicates basket should be resized to exact memory usage, but causes significant ;  ; Long64_t fAutoFlush;  Auto-flush tree when fAutoFlush entries written or -fAutoFlush (compressed) bytes produced. ;  ; Long64_t fAutoSave;  Autosave tree when fAutoSave entries written or -fAutoSave (compressed) bytes produced. ;  ; TObjArray fBranches;  List of Branches. ;  ; TBranchRef * fBranchRef;  Branch supporting the TRefTable (if any) ;  ; bool fCacheDoAutoInit;  ! true if cache auto creation or resize check is needed ;  ; bool fCacheDoClusterPrefetch;  ! true if cache is prefetching whole clusters ;  ; Long64_t fCacheSize;  ! Maximum size of file buffers ;  ; bool fCacheUserSet;  ! true if the cache setting was explicitly given by user ;  ; Long64_t fChainOffset;  ! Offset of 1st entry of this Tree in a TChain ;  ; TList * fClones;  ! List of cloned trees which share our addresses ;  ; Long64_t * fClusterRangeEnd;  [fNClusterRange] Last entry of a cluster range. ;  ; Long64_t * fClusterSize;  [fNClusterRange] Number of entries in each cluster for a given range. ;  ; Int_t fDebug;  ! Debug level ;  ; Long64_t fDebugMax;  ! Last entry number to debug ;  ; Long64_t fDebugMin;  ! First entry number to debug ;  ; Int_t fDefaultEntryOffsetLen;  Initial Length of fEntryOffset table in the basket buffers. ;  ; TDirectory * fDirectory;  ! Pointer to directory holding this tree ;  ; Long64_t fEntries;  Number of entries. ;  ; TEntryList * fEntryList;  ! Pointer to event selection list (if one) ;  ; Long64_t fEstimate;  Number of entries to estimate histogram limits. ;  ; TEventList * fEventList;  ! Pointer to event selection list (if one) ;  ; TList * f",MatchSource.WIKI,doc/master/classTNtuple.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtuple.html
https://root.cern/doc/master/classTNtuple.html:42568,Performance,cache,cache,42568,"rorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Float_t * fArgs;  ! [fNvar] Array of variables ;  ; Int_t fNvar;  Number of columns. ;  ;  Protected Attributes inherited from TTree; TList * fAliases;  List of aliases for expressions based on the tree branches. ;  ; std::atomic< UInt_t > fAllocationCount {0};  indicates basket should be resized to exact memory usage, but causes significant ;  ; Long64_t fAutoFlush;  Auto-flush tree when fAutoFlush entries written or -fAutoFlush (compressed) bytes produced. ;  ; Long64_t fAutoSave;  Autosave tree when fAutoSave entries written or -fAutoSave (compressed) bytes produced. ;  ; TObjArray fBranches;  List of Branches. ;  ; TBranchRef * fBranchRef;  Branch supporting the TRefTable (if any) ;  ; bool fCacheDoAutoInit;  ! true if cache auto creation or resize check is needed ;  ; bool fCacheDoClusterPrefetch;  ! true if cache is prefetching whole clusters ;  ; Long64_t fCacheSize;  ! Maximum size of file buffers ;  ; bool fCacheUserSet;  ! true if the cache setting was explicitly given by user ;  ; Long64_t fChainOffset;  ! Offset of 1st entry of this Tree in a TChain ;  ; TList * fClones;  ! List of cloned trees which share our addresses ;  ; Long64_t * fClusterRangeEnd;  [fNClusterRange] Last entry of a cluster range. ;  ; Long64_t * fClusterSize;  [fNClusterRange] Number of entries in each cluster for a given range. ;  ; Int_t fDebug;  ! Debug level ;  ; Long64_t fDebugMax;  ! Last entry number to debug ;  ; Long64_t fDebugMin;  ! First entry number to debug ;  ; Int_t fDefaultEntryOffsetLen;  Initial Length of fEntryOffset table in the basket buffers. ;  ; TDirectory * fDirectory;  ! Pointer to directory holding this tree ;  ; Long64_t fEntries;  Number of entries. ;  ; TEntryList * fEntryList;  ! Pointer to event selection list (if one) ;  ; Long64_t fEstimate;  Number of entries to estimate histogram limits. ;  ; TEventList * fEventList;  ! Pointer to event selection list (if one) ;  ; TList * f",MatchSource.WIKI,doc/master/classTNtuple.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtuple.html
https://root.cern/doc/master/classTNtuple.html:42702,Performance,cache,cache,42702,"rorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Float_t * fArgs;  ! [fNvar] Array of variables ;  ; Int_t fNvar;  Number of columns. ;  ;  Protected Attributes inherited from TTree; TList * fAliases;  List of aliases for expressions based on the tree branches. ;  ; std::atomic< UInt_t > fAllocationCount {0};  indicates basket should be resized to exact memory usage, but causes significant ;  ; Long64_t fAutoFlush;  Auto-flush tree when fAutoFlush entries written or -fAutoFlush (compressed) bytes produced. ;  ; Long64_t fAutoSave;  Autosave tree when fAutoSave entries written or -fAutoSave (compressed) bytes produced. ;  ; TObjArray fBranches;  List of Branches. ;  ; TBranchRef * fBranchRef;  Branch supporting the TRefTable (if any) ;  ; bool fCacheDoAutoInit;  ! true if cache auto creation or resize check is needed ;  ; bool fCacheDoClusterPrefetch;  ! true if cache is prefetching whole clusters ;  ; Long64_t fCacheSize;  ! Maximum size of file buffers ;  ; bool fCacheUserSet;  ! true if the cache setting was explicitly given by user ;  ; Long64_t fChainOffset;  ! Offset of 1st entry of this Tree in a TChain ;  ; TList * fClones;  ! List of cloned trees which share our addresses ;  ; Long64_t * fClusterRangeEnd;  [fNClusterRange] Last entry of a cluster range. ;  ; Long64_t * fClusterSize;  [fNClusterRange] Number of entries in each cluster for a given range. ;  ; Int_t fDebug;  ! Debug level ;  ; Long64_t fDebugMax;  ! Last entry number to debug ;  ; Long64_t fDebugMin;  ! First entry number to debug ;  ; Int_t fDefaultEntryOffsetLen;  Initial Length of fEntryOffset table in the basket buffers. ;  ; TDirectory * fDirectory;  ! Pointer to directory holding this tree ;  ; Long64_t fEntries;  Number of entries. ;  ; TEntryList * fEntryList;  ! Pointer to event selection list (if one) ;  ; Long64_t fEstimate;  Number of entries to estimate histogram limits. ;  ; TEventList * fEventList;  ! Pointer to event selection list (if one) ;  ; TList * f",MatchSource.WIKI,doc/master/classTNtuple.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtuple.html
https://root.cern/doc/master/classTNtuple.html:44101,Performance,multi-thread,multi-threading,44101, cluster for a given range. ;  ; Int_t fDebug;  ! Debug level ;  ; Long64_t fDebugMax;  ! Last entry number to debug ;  ; Long64_t fDebugMin;  ! First entry number to debug ;  ; Int_t fDefaultEntryOffsetLen;  Initial Length of fEntryOffset table in the basket buffers. ;  ; TDirectory * fDirectory;  ! Pointer to directory holding this tree ;  ; Long64_t fEntries;  Number of entries. ;  ; TEntryList * fEntryList;  ! Pointer to event selection list (if one) ;  ; Long64_t fEstimate;  Number of entries to estimate histogram limits. ;  ; TEventList * fEventList;  ! Pointer to event selection list (if one) ;  ; TList * fExternalFriends;  ! List of TFriendsElement pointing to us and need to be notified of LoadTree. Content not owned. ;  ; Int_t fFileNumber;  ! current file number (if file extensions) ;  ; Long64_t fFlushedBytes;  Number of auto-flushed bytes. ;  ; UInt_t fFriendLockStatus;  ! Record which method is locking the friend recursion ;  ; TList * fFriends;  pointer to list of friend elements ;  ; bool fIMTEnabled;  ! true if implicit multi-threading is enabled for this tree ;  ; TArrayI fIndex;  Index of sorted values. ;  ; TArrayD fIndexValues;  Sorted index values. ;  ; TIOFeatures fIOFeatures {0};  IO features to define for newly-written baskets and branches. ;  ; TObjArray fLeaves;  Direct pointers to individual branch leaves. ;  ; Int_t fMakeClass;  ! not zero when processing code generated by MakeClass ;  ; Int_t fMaxClusterRange;  ! Memory allocated for the cluster range. ;  ; Long64_t fMaxEntries;  Maximum number of entries in case of circular buffers. ;  ; Long64_t fMaxEntryLoop;  Maximum number of entries to process. ;  ; Long64_t fMaxVirtualSize;  Maximum total size of buffers kept in memory. ;  ; Int_t fNClusterRange;  Number of Cluster range in addition to the one defined by 'AutoFlush'. ;  ; UInt_t fNEntriesSinceSorting;  ! Number of entries processed since the last re-sorting of branches ;  ; Int_t fNfill;  ! Local for EntryLoop ;  ; TObject * fNotif,MatchSource.WIKI,doc/master/classTNtuple.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtuple.html
https://root.cern/doc/master/classTNtuple.html:45081,Performance,load,loading,45081,"recursion ;  ; TList * fFriends;  pointer to list of friend elements ;  ; bool fIMTEnabled;  ! true if implicit multi-threading is enabled for this tree ;  ; TArrayI fIndex;  Index of sorted values. ;  ; TArrayD fIndexValues;  Sorted index values. ;  ; TIOFeatures fIOFeatures {0};  IO features to define for newly-written baskets and branches. ;  ; TObjArray fLeaves;  Direct pointers to individual branch leaves. ;  ; Int_t fMakeClass;  ! not zero when processing code generated by MakeClass ;  ; Int_t fMaxClusterRange;  ! Memory allocated for the cluster range. ;  ; Long64_t fMaxEntries;  Maximum number of entries in case of circular buffers. ;  ; Long64_t fMaxEntryLoop;  Maximum number of entries to process. ;  ; Long64_t fMaxVirtualSize;  Maximum total size of buffers kept in memory. ;  ; Int_t fNClusterRange;  Number of Cluster range in addition to the one defined by 'AutoFlush'. ;  ; UInt_t fNEntriesSinceSorting;  ! Number of entries processed since the last re-sorting of branches ;  ; Int_t fNfill;  ! Local for EntryLoop ;  ; TObject * fNotify;  Object to be notified when loading a Tree. ;  ; Int_t fPacketSize;  ! Number of entries in one packet for parallel root ;  ; TVirtualPerfStats * fPerfStats;  ! pointer to the current perf stats object ;  ; TVirtualTreePlayer * fPlayer;  ! Pointer to current Tree player ;  ; Long64_t fReadEntry;  ! Number of the entry being processed ;  ; Long64_t fSavedBytes;  Number of autosaved bytes. ;  ; Int_t fScanField;  Number of runs before prompting in Scan. ;  ; std::vector< TBranch * > fSeqBranches;  ! Branches to be processed sequentially when IMT is on ;  ; std::vector< std::pair< Long64_t, TBranch * > > fSortedBranches;  ! Branches to be processed in parallel when IMT is on, sorted by average task time ;  ; Float_t fTargetMemoryRatio {1.1f};  ! Ratio for memory usage in uncompressed buffers versus actual occupancy. ;  ; Int_t fTimerInterval;  Timer interval in milliseconds. ;  ; std::atomic< Long64_t > fTotalBuffers;  ! Tota",MatchSource.WIKI,doc/master/classTNtuple.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtuple.html
https://root.cern/doc/master/classTNtuple.html:20015,Safety,recover,recover,20015,"ain) ;  ; virtual void RemoveExternalFriend (TFriendElement *);  Removes external friend. ;  ; virtual void RemoveFriend (TTree *);  Remove a friend from the list of friends. ;  ; virtual void Reset (Option_t *option="""");  Reset baskets, buffers and entries count in all branches and leaves. ;  ; virtual void ResetAfterMerge (TFileMergeInfo *);  Resets the state of this TTree after a merge (keep the customization but forget the data). ;  ; virtual Long64_t Scan (const char *varexp="""", const char *selection="""", Option_t *option="""", Long64_t nentries=kMaxEntries, Long64_t firstentry=0);  Loop over tree entries and print entries passing selection. ;  ; virtual bool SetAlias (const char *aliasName, const char *aliasFormula);  Set a tree variable alias. ;  ; virtual void SetAutoFlush (Long64_t autof=-30000000);  This function may be called at the start of a program to change the default value for fAutoFlush. ;  ; virtual void SetAutoSave (Long64_t autos=-300000000);  In case of a program crash, it will be possible to recover the data in the tree up to the last AutoSave point. ;  ; virtual void SetBasketSize (const char *bname, Int_t buffsize=16000);  Set a branch's basket size. ;  ; template<class T > ; Int_t SetBranchAddress (const char *bname, T **add, TBranch **ptr=nullptr);  ; template<class T > ; Int_t SetBranchAddress (const char *bname, T *add, TBranch **ptr=nullptr);  ; virtual Int_t SetBranchAddress (const char *bname, void *add, TBranch **ptr, TClass *realClass, EDataType datatype, bool isptr);  Verify the validity of the type of addr before calling SetBranchAddress. ;  ; virtual Int_t SetBranchAddress (const char *bname, void *add, TBranch **ptr=nullptr);  Change branch address, dealing with clone trees properly. ;  ; virtual Int_t SetBranchAddress (const char *bname, void *add, TClass *realClass, EDataType datatype, bool isptr);  Verify the validity of the type of addr before calling SetBranchAddress. ;  ; virtual void SetBranchStatus (const char *bname, bool s",MatchSource.WIKI,doc/master/classTNtuple.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtuple.html
https://root.cern/doc/master/classTNtuple.html:39460,Safety,detect,detection,39460,"  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  . Protected Member Functions; Int_t Fill () override;  Fill a Ntuple with current values in fArgs. ;  ;  Protected Member Functions inherited from TTree; virtual TBranch * BranchImp (const char *branchname, const char *classname, TClass *ptrClass, void *addobj, Int_t bufsize, Int_t splitlevel);  Same as TTree::Branch() with added check that addobj matches className. ;  ; virtual TBranch * BranchImp (const char *branchname, TClass *ptrClass, void *addobj, Int_t bufsize, Int_t splitlevel);  Same as TTree::Branch but automatic detection of the class name. ;  ; virtual TBranch * BranchImpArr (const char *branchname, EDataType datatype, std::size_t N, void *addobj, Int_t bufsize, Int_t splitlevel);  ; virtual TBranch * BranchImpRef (const char *branchname, const char *classname, TClass *ptrClass, void *addobj, Int_t bufsize, Int_t splitlevel);  Same as TTree::Branch but automatic detection of the class name. ;  ; virtual TBranch * BranchImpRef (const char *branchname, TClass *ptrClass, EDataType datatype, void *addobj, Int_t bufsize, Int_t splitlevel);  Same as TTree::Branch but automatic detection of the class name. ;  ; virtual TBranch * BronchExec (const char *name, const char *classname, void *addobj, bool isptrptr, Int_t bufsize, Int_t splitlevel);  Helper function implementing TTree::Bronch and TTree::Branch(const char *name, T &obj);. ;  ; virtual Int_t CheckBranchAddressType (TBranch *branch, TClass *ptrClass, EDataType datatype, bool p",MatchSource.WIKI,doc/master/classTNtuple.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtuple.html
https://root.cern/doc/master/classTNtuple.html:39818,Safety,detect,detection,39818,"rnal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  . Protected Member Functions; Int_t Fill () override;  Fill a Ntuple with current values in fArgs. ;  ;  Protected Member Functions inherited from TTree; virtual TBranch * BranchImp (const char *branchname, const char *classname, TClass *ptrClass, void *addobj, Int_t bufsize, Int_t splitlevel);  Same as TTree::Branch() with added check that addobj matches className. ;  ; virtual TBranch * BranchImp (const char *branchname, TClass *ptrClass, void *addobj, Int_t bufsize, Int_t splitlevel);  Same as TTree::Branch but automatic detection of the class name. ;  ; virtual TBranch * BranchImpArr (const char *branchname, EDataType datatype, std::size_t N, void *addobj, Int_t bufsize, Int_t splitlevel);  ; virtual TBranch * BranchImpRef (const char *branchname, const char *classname, TClass *ptrClass, void *addobj, Int_t bufsize, Int_t splitlevel);  Same as TTree::Branch but automatic detection of the class name. ;  ; virtual TBranch * BranchImpRef (const char *branchname, TClass *ptrClass, EDataType datatype, void *addobj, Int_t bufsize, Int_t splitlevel);  Same as TTree::Branch but automatic detection of the class name. ;  ; virtual TBranch * BronchExec (const char *name, const char *classname, void *addobj, bool isptrptr, Int_t bufsize, Int_t splitlevel);  Helper function implementing TTree::Bronch and TTree::Branch(const char *name, T &obj);. ;  ; virtual Int_t CheckBranchAddressType (TBranch *branch, TClass *ptrClass, EDataType datatype, bool ptr);  Check whether or not the address described by the last 3 parameters matches the content of the branch. ;  ; Long64_t GetCacheAutoSize (bool withDefault=false);  Used for automatic sizing of the cache. ;  ; virtual TLeaf * GetLeafImpl (const char *branchname, const cha",MatchSource.WIKI,doc/master/classTNtuple.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtuple.html
https://root.cern/doc/master/classTNtuple.html:40031,Safety,detect,detection,40031,"ctions; Int_t Fill () override;  Fill a Ntuple with current values in fArgs. ;  ;  Protected Member Functions inherited from TTree; virtual TBranch * BranchImp (const char *branchname, const char *classname, TClass *ptrClass, void *addobj, Int_t bufsize, Int_t splitlevel);  Same as TTree::Branch() with added check that addobj matches className. ;  ; virtual TBranch * BranchImp (const char *branchname, TClass *ptrClass, void *addobj, Int_t bufsize, Int_t splitlevel);  Same as TTree::Branch but automatic detection of the class name. ;  ; virtual TBranch * BranchImpArr (const char *branchname, EDataType datatype, std::size_t N, void *addobj, Int_t bufsize, Int_t splitlevel);  ; virtual TBranch * BranchImpRef (const char *branchname, const char *classname, TClass *ptrClass, void *addobj, Int_t bufsize, Int_t splitlevel);  Same as TTree::Branch but automatic detection of the class name. ;  ; virtual TBranch * BranchImpRef (const char *branchname, TClass *ptrClass, EDataType datatype, void *addobj, Int_t bufsize, Int_t splitlevel);  Same as TTree::Branch but automatic detection of the class name. ;  ; virtual TBranch * BronchExec (const char *name, const char *classname, void *addobj, bool isptrptr, Int_t bufsize, Int_t splitlevel);  Helper function implementing TTree::Bronch and TTree::Branch(const char *name, T &obj);. ;  ; virtual Int_t CheckBranchAddressType (TBranch *branch, TClass *ptrClass, EDataType datatype, bool ptr);  Check whether or not the address described by the last 3 parameters matches the content of the branch. ;  ; Long64_t GetCacheAutoSize (bool withDefault=false);  Used for automatic sizing of the cache. ;  ; virtual TLeaf * GetLeafImpl (const char *branchname, const char *leafname);  Return pointer to the 1st Leaf named name in any Branch of this Tree or any branch in the list of friend trees. ;  ; char GetNewlineValue (std::istream &inputStream);  Determine which newline this file is using. ;  ; void ImportClusterRanges (TTree *fromtree);  Appends t",MatchSource.WIKI,doc/master/classTNtuple.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtuple.html
https://root.cern/doc/master/classTNtuple.html:25855,Security,hash,hash,25855,"nst char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object ",MatchSource.WIKI,doc/master/classTNtuple.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtuple.html
https://root.cern/doc/master/classTNtuple.html:343,Usability,simpl,simple,343,". ROOT: TNtuple Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TNtuple Class ReferenceTree Library. ; A simple TTree restricted to a list of float variables only. ; Each variable goes to a separate branch.; A Ntuple is created via TNtuple(name,title,varlist,bufsize); namechar name[80]Definition TGX11.cxx:110; TNtuple::TNtupleTNtuple()Default constructor for Ntuple.Definition TNtuple.cxx:46; It is filled via: TNtuple::Fill(*x) or; TNtuple::Fill(v1,v2,v3.....); TNtuple::FillInt_t Fill() overrideFill a Ntuple with current values in fArgs.Definition TNtuple.cxx:169; xDouble_t x[n]Definition legend1.C:17; v2@ v2Definition rootcling_impl.cxx:3702; v3@ v3Definition rootcling_impl.cxx:3703; v1@ v1Definition rootcling_impl.cxx:3701. Definition at line 28 of file TNtuple.h. Public Member Functions;  TNtuple ();  Default constructor for Ntuple. ;  ;  TNtuple (const char *name, const char *title, const char *varlist, Int_t bufsize=32000);  Create an Ntuple. ;  ;  ~TNtuple () override;  Default destructor for an Ntuple. ;  ; void Browse (TBrowser *b) override;  Browse content of the ntuple. ;  ; TTree * CloneTree (Long64_t nentries=-1, Option_t *option="""") override;  Create a clone of this tree and copy nentries. ;  ; virtual Int_t Fill (const Float_t *x);  Fill a Ntuple with an array of floats. ;  ; Int_t Fill (Double_t x0);  ; virtual Int_t Fill (Float_t x0, Float_t x1=0, Float_t x2=0, Float_t x3=0, Float_t x4=0, Float_t x5=0, Float_t x6=0, Float_t x7=0, Float_t x8=0, Float_t x9=0, Float_t x10=0, Float_t x11=0, Float_t x12=0, Float_t x13=0, Float_t x14=0);  Fill a Ntuple: Each Ntuple item is an argument. ;  ; Int_t Fill (Int_t x0);  ; Float_t * GetArgs () const;  ; virtual Int_t GetNvar () const;  ; TClass * IsA () const override;  ; Long64_t ",MatchSource.WIKI,doc/master/classTNtuple.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtuple.html
https://root.cern/doc/master/classTNtuple.html:6773,Usability,undo,undo,6773,"00, Int_t splitlevel=99);  Deprecated function. Use next function instead. ;  ; virtual TBranch * BranchOld (const char *name, const char *classname, void *addobj, Int_t bufsize=32000, Int_t splitlevel=1);  Create a new TTree BranchObject. ;  ; virtual TBranch * BranchRef ();  Build the optional branch supporting the TRefTable. ;  ; virtual TBranch * Bronch (const char *name, const char *classname, void *addobj, Int_t bufsize=32000, Int_t splitlevel=99);  Create a new TTree BranchElement. ;  ; void Browse (TBrowser *) override;  Browse content of the TTree. ;  ; virtual Int_t BuildIndex (const char *majorname, const char *minorname=""0"");  Build a Tree Index (default is TTreeIndex). ;  ; TStreamerInfo * BuildStreamerInfo (TClass *cl, void *pointer=nullptr, bool canOptimize=true);  Build StreamerInfo for class cl. ;  ; virtual TFile * ChangeFile (TFile *file);  Called by TTree::Fill() when file has reached its maximum fgMaxTreeSize. ;  ; virtual void CopyAddresses (TTree *, bool undo=false);  Set branch addresses of passed tree equal to ours. ;  ; virtual Long64_t CopyEntries (TTree *tree, Long64_t nentries=-1, Option_t *option="""", bool needCopyAddresses=false);  Copy nentries from given tree to this tree. ;  ; virtual TTree * CopyTree (const char *selection, Option_t *option="""", Long64_t nentries=kMaxEntries, Long64_t firstentry=0);  Copy a tree with selection. ;  ; virtual TBasket * CreateBasket (TBranch *);  Create a basket for this tree and given branch. ;  ; Int_t Debug () const;  ; void Delete (Option_t *option="""") override;  Delete this tree from memory or/and disk. ;  ; virtual void DirectoryAutoAdd (TDirectory *);  Called by TKey and TObject::Clone to automatically add us to a directory when we are read from a file. ;  ; virtual Long64_t Draw (const char *varexp, const char *selection, Option_t *option="""", Long64_t nentries=kMaxEntries, Long64_t firstentry=0);  Draw expression varexp for entries and objects that pass a (optional) selection. ;  ; virtual Long6",MatchSource.WIKI,doc/master/classTNtuple.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtuple.html
https://root.cern/doc/master/classTNtuple.html:18481,Usability,simpl,simply,18481,"const;  Print statistics about the TreeCache for this tree. ;  ; virtual Long64_t Process (const char *filename, Option_t *option="""", Long64_t nentries=kMaxEntries, Long64_t firstentry=0);  Process this tree executing the TSelector code in the specified filename. ;  ; virtual Long64_t Process (TSelector *selector, Option_t *option="""", Long64_t nentries=kMaxEntries, Long64_t firstentry=0);  Process this tree executing the code in the specified selector. ;  ; virtual Long64_t Project (const char *hname, const char *varexp, const char *selection="""", Option_t *option="""", Long64_t nentries=kMaxEntries, Long64_t firstentry=0);  Make a projection of a tree using selections. ;  ; virtual TSQLResult * Query (const char *varexp="""", const char *selection="""", Option_t *option="""", Long64_t nentries=kMaxEntries, Long64_t firstentry=0);  Loop over entries and return a TSQLResult object containing entries following selection. ;  ; virtual Long64_t ReadFile (const char *filename, const char *branchDescriptor="""", char delimiter=' ');  Create or simply read branches from filename. ;  ; void RecursiveRemove (TObject *obj) override;  Make sure that obj (which is being deleted or will soon be) is no longer referenced by this TTree. ;  ; virtual void Refresh ();  Refresh contents of this tree and its branches from the current status on disk. ;  ; virtual void RegisterExternalFriend (TFriendElement *);  Record a TFriendElement that we need to warn when the chain switches to a new file (typically this is because this chain is a friend of another TChain) ;  ; virtual void RemoveExternalFriend (TFriendElement *);  Removes external friend. ;  ; virtual void RemoveFriend (TTree *);  Remove a friend from the list of friends. ;  ; virtual void Reset (Option_t *option="""");  Reset baskets, buffers and entries count in all branches and leaves. ;  ; virtual void ResetAfterMerge (TFileMergeInfo *);  Resets the state of this TTree after a merge (keep the customization but forget the data). ;  ; virtual ",MatchSource.WIKI,doc/master/classTNtuple.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtuple.html
https://root.cern/doc/master/classTNtuple.html:21312,Usability,learn,learning,21312,"T > ; Int_t SetBranchAddress (const char *bname, T **add, TBranch **ptr=nullptr);  ; template<class T > ; Int_t SetBranchAddress (const char *bname, T *add, TBranch **ptr=nullptr);  ; virtual Int_t SetBranchAddress (const char *bname, void *add, TBranch **ptr, TClass *realClass, EDataType datatype, bool isptr);  Verify the validity of the type of addr before calling SetBranchAddress. ;  ; virtual Int_t SetBranchAddress (const char *bname, void *add, TBranch **ptr=nullptr);  Change branch address, dealing with clone trees properly. ;  ; virtual Int_t SetBranchAddress (const char *bname, void *add, TClass *realClass, EDataType datatype, bool isptr);  Verify the validity of the type of addr before calling SetBranchAddress. ;  ; virtual void SetBranchStatus (const char *bname, bool status=true, UInt_t *found=nullptr);  Set branch status to Process or DoNotProcess. ;  ; virtual Int_t SetCacheEntryRange (Long64_t first, Long64_t last);  interface to TTreeCache to set the cache entry range ;  ; virtual void SetCacheLearnEntries (Int_t n=10);  Interface to TTreeCache to set the number of entries for the learning phase. ;  ; virtual Int_t SetCacheSize (Long64_t cachesize=-1);  Set maximum size of the file cache . ;  ; virtual void SetChainOffset (Long64_t offset=0);  ; virtual void SetCircular (Long64_t maxEntries);  Enable/Disable circularity for this tree. ;  ; virtual void SetClusterPrefetch (bool enabled);  ; virtual void SetDebug (Int_t level=1, Long64_t min=0, Long64_t max=9999999);  Set the debug level and the debug range. ;  ; virtual void SetDefaultEntryOffsetLen (Int_t newdefault, bool updateExisting=false);  Update the default value for the branch's fEntryOffsetLen. ;  ; virtual void SetDirectory (TDirectory *dir);  Change the tree's directory. ;  ; virtual Long64_t SetEntries (Long64_t n=-1);  Change number of entries in the tree. ;  ; virtual void SetEntryList (TEntryList *list, Option_t *opt="""");  Set an EntryList. ;  ; virtual void SetEstimate (Long64_t nentri",MatchSource.WIKI,doc/master/classTNtuple.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtuple.html
https://root.cern/doc/master/classTNtuple.html:24226,Usability,learn,learning,24226," is loaded. ;  ; virtual void SetObject (const char *name, const char *title);  Change the name and title of this tree. ;  ; virtual void SetParallelUnzip (bool opt=true, Float_t RelSize=-1);  Enable or disable parallel unzipping of Tree buffers. ;  ; virtual void SetPerfStats (TVirtualPerfStats *perf);  Set perf stats. ;  ; virtual void SetScanField (Int_t n=50);  Sets the default maximum number of lines to be shown before <CR> when calling Scan(). ;  ; void SetTargetMemoryRatio (Float_t ratio);  ; virtual void SetTimerInterval (Int_t msec=333);  ; virtual void SetTreeIndex (TVirtualIndex *index);  The current TreeIndex is replaced by the new index. ;  ; virtual void SetUpdate (Int_t freq=0);  ; virtual void SetWeight (Double_t w=1, Option_t *option="""");  Set tree weight. ;  ; virtual void Show (Long64_t entry=-1, Int_t lenmax=20);  Print values of all active leaves for entry. ;  ; virtual void StartViewer ();  Start the TTreeViewer on this tree. ;  ; virtual Int_t StopCacheLearningPhase ();  Stop the cache learning phase. ;  ; void Streamer (TBuffer &) override;  Stream a class object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Int_t UnbinnedFit (const char *funcname, const char *varexp, const char *selection="""", Option_t *option="""", Long64_t nentries=kMaxEntries, Long64_t firstentry=0);  Unbinned fit of one or more variable(s) from a tree. ;  ; void UseCurrentStyle () override;  Replace current attributes by current style. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write this object to the current directory. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ",MatchSource.WIKI,doc/master/classTNtuple.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtuple.html
https://root.cern/doc/master/classTNtupleD.html:19976,Availability,recover,recover,19976,"ain) ;  ; virtual void RemoveExternalFriend (TFriendElement *);  Removes external friend. ;  ; virtual void RemoveFriend (TTree *);  Remove a friend from the list of friends. ;  ; virtual void Reset (Option_t *option="""");  Reset baskets, buffers and entries count in all branches and leaves. ;  ; virtual void ResetAfterMerge (TFileMergeInfo *);  Resets the state of this TTree after a merge (keep the customization but forget the data). ;  ; virtual Long64_t Scan (const char *varexp="""", const char *selection="""", Option_t *option="""", Long64_t nentries=kMaxEntries, Long64_t firstentry=0);  Loop over tree entries and print entries passing selection. ;  ; virtual bool SetAlias (const char *aliasName, const char *aliasFormula);  Set a tree variable alias. ;  ; virtual void SetAutoFlush (Long64_t autof=-30000000);  This function may be called at the start of a program to change the default value for fAutoFlush. ;  ; virtual void SetAutoSave (Long64_t autos=-300000000);  In case of a program crash, it will be possible to recover the data in the tree up to the last AutoSave point. ;  ; virtual void SetBasketSize (const char *bname, Int_t buffsize=16000);  Set a branch's basket size. ;  ; template<class T > ; Int_t SetBranchAddress (const char *bname, T **add, TBranch **ptr=nullptr);  ; template<class T > ; Int_t SetBranchAddress (const char *bname, T *add, TBranch **ptr=nullptr);  ; virtual Int_t SetBranchAddress (const char *bname, void *add, TBranch **ptr, TClass *realClass, EDataType datatype, bool isptr);  Verify the validity of the type of addr before calling SetBranchAddress. ;  ; virtual Int_t SetBranchAddress (const char *bname, void *add, TBranch **ptr=nullptr);  Change branch address, dealing with clone trees properly. ;  ; virtual Int_t SetBranchAddress (const char *bname, void *add, TClass *realClass, EDataType datatype, bool isptr);  Verify the validity of the type of addr before calling SetBranchAddress. ;  ; virtual void SetBranchStatus (const char *bname, bool s",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:27619,Availability,error,error,27619," *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:27708,Availability,error,error,27708,"ave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:27863,Availability,error,error,27863,"hether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:28160,Availability,error,error,28160,"putes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:31879,Availability,error,error,31879,"is method must be overridden if a class wants to paint itself. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:15162,Deployability,update,update,15162,"ual Int_t GetScanField () const;  ; TTreeFormula * GetSelect ();  ; virtual Long64_t GetSelectedRows ();  ; Float_t GetTargetMemoryRatio () const;  ; virtual Int_t GetTimerInterval () const;  ; virtual Long64_t GetTotBytes () const;  ; TBuffer * GetTransientBuffer (Int_t size);  Returns the transient buffer currently used by this TTree for reading/writing baskets. ;  ; virtual TTree * GetTree () const;  ; virtual TVirtualIndex * GetTreeIndex () const;  ; virtual Int_t GetTreeNumber () const;  ; virtual Int_t GetUpdate () const;  ; virtual TList * GetUserInfo ();  Return a pointer to the list containing user objects associated to this tree. ;  ; virtual Double_t * GetV1 ();  ; virtual Double_t * GetV2 ();  ; virtual Double_t * GetV3 ();  ; virtual Double_t * GetV4 ();  ; virtual Double_t * GetVal (Int_t i);  ; TTreeFormula * GetVar (Int_t i);  ; TTreeFormula * GetVar1 ();  ; TTreeFormula * GetVar2 ();  ; TTreeFormula * GetVar3 ();  ; TTreeFormula * GetVar4 ();  ; virtual Double_t * GetW ();  ; virtual Double_t GetWeight () const;  ; virtual Long64_t GetZipBytes () const;  ; virtual void IncrementTotalBuffers (Int_t nbytes);  ; virtual bool InPlaceClone (TDirectory *newdirectory, const char *options="""");  Copy the content to a new new file, update this TTree with the new location information and attach this TTree to the new directory. ;  ; TClass * IsA () const override;  ; bool IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; virtual Int_t LoadBaskets (Long64_t maxmemory=2000000000);  Read in memory all baskets from all branches up to the limit of maxmemory bytes. ;  ; virtual Long64_t LoadTree (Long64_t entry);  Set current entry. ;  ; virtual Long64_t LoadTreeFriend (Long64_t entry, TTree *T);  Load entry on behalf of our master tree, we may use an index. ;  ; virtual Int_t MakeClass (const char *classname=nullptr, Option_t *option="""");  Generate a skeleton analysis class for this ",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:21774,Deployability,update,updateExisting,21774,", EDataType datatype, bool isptr);  Verify the validity of the type of addr before calling SetBranchAddress. ;  ; virtual void SetBranchStatus (const char *bname, bool status=true, UInt_t *found=nullptr);  Set branch status to Process or DoNotProcess. ;  ; virtual Int_t SetCacheEntryRange (Long64_t first, Long64_t last);  interface to TTreeCache to set the cache entry range ;  ; virtual void SetCacheLearnEntries (Int_t n=10);  Interface to TTreeCache to set the number of entries for the learning phase. ;  ; virtual Int_t SetCacheSize (Long64_t cachesize=-1);  Set maximum size of the file cache . ;  ; virtual void SetChainOffset (Long64_t offset=0);  ; virtual void SetCircular (Long64_t maxEntries);  Enable/Disable circularity for this tree. ;  ; virtual void SetClusterPrefetch (bool enabled);  ; virtual void SetDebug (Int_t level=1, Long64_t min=0, Long64_t max=9999999);  Set the debug level and the debug range. ;  ; virtual void SetDefaultEntryOffsetLen (Int_t newdefault, bool updateExisting=false);  Update the default value for the branch's fEntryOffsetLen. ;  ; virtual void SetDirectory (TDirectory *dir);  Change the tree's directory. ;  ; virtual Long64_t SetEntries (Long64_t n=-1);  Change number of entries in the tree. ;  ; virtual void SetEntryList (TEntryList *list, Option_t *opt="""");  Set an EntryList. ;  ; virtual void SetEstimate (Long64_t nentries=1000000);  Set number of entries to estimate variable limits. ;  ; virtual void SetEventList (TEventList *list);  This function transfroms the given TEventList into a TEntryList The new TEntryList is owned by the TTree and gets deleted when the tree is deleted. ;  ; virtual void SetFileNumber (Int_t number=0);  Set fFileNumber to number. ;  ; virtual void SetImplicitMT (bool enabled);  ; ROOT::TIOFeatures SetIOFeatures (const ROOT::TIOFeatures &);  Provide the end-user with the ability to enable/disable various experimental IO features for this TTree. ;  ; virtual void SetMakeClass (Int_t make);  Set all the br",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:44484,Energy Efficiency,allocate,allocated,44484,event selection list (if one) ;  ; Long64_t fEstimate;  Number of entries to estimate histogram limits. ;  ; TEventList * fEventList;  ! Pointer to event selection list (if one) ;  ; TList * fExternalFriends;  ! List of TFriendsElement pointing to us and need to be notified of LoadTree. Content not owned. ;  ; Int_t fFileNumber;  ! current file number (if file extensions) ;  ; Long64_t fFlushedBytes;  Number of auto-flushed bytes. ;  ; UInt_t fFriendLockStatus;  ! Record which method is locking the friend recursion ;  ; TList * fFriends;  pointer to list of friend elements ;  ; bool fIMTEnabled;  ! true if implicit multi-threading is enabled for this tree ;  ; TArrayI fIndex;  Index of sorted values. ;  ; TArrayD fIndexValues;  Sorted index values. ;  ; TIOFeatures fIOFeatures {0};  IO features to define for newly-written baskets and branches. ;  ; TObjArray fLeaves;  Direct pointers to individual branch leaves. ;  ; Int_t fMakeClass;  ! not zero when processing code generated by MakeClass ;  ; Int_t fMaxClusterRange;  ! Memory allocated for the cluster range. ;  ; Long64_t fMaxEntries;  Maximum number of entries in case of circular buffers. ;  ; Long64_t fMaxEntryLoop;  Maximum number of entries to process. ;  ; Long64_t fMaxVirtualSize;  Maximum total size of buffers kept in memory. ;  ; Int_t fNClusterRange;  Number of Cluster range in addition to the one defined by 'AutoFlush'. ;  ; UInt_t fNEntriesSinceSorting;  ! Number of entries processed since the last re-sorting of branches ;  ; Int_t fNfill;  ! Local for EntryLoop ;  ; TObject * fNotify;  Object to be notified when loading a Tree. ;  ; Int_t fPacketSize;  ! Number of entries in one packet for parallel root ;  ; TVirtualPerfStats * fPerfStats;  ! pointer to the current perf stats object ;  ; TVirtualTreePlayer * fPlayer;  ! Pointer to current Tree player ;  ; Long64_t fReadEntry;  ! Number of the entry being processed ;  ; Long64_t fSavedBytes;  Number of autosaved bytes. ;  ; Int_t fScanField;  Number of r,MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:50166,Energy Efficiency,energy,energy,50166,"1 )); , ;   kSetBranchStatus = (1ULL << ( 12 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Attributes inherited from TTree; static Int_t fgBranchStyle = 1;  Old/New branch style. ;  ; static Long64_t fgMaxTreeSize = 100000000000LL;  Maximum size of a file containing a Tree. ;  . #include <TNtupleD.h>. Inheritance diagram for TNtupleD:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TNtupleD() [1/3]. TNtupleD::TNtupleD ; (; const TNtupleD & ; ). privatedelete . ◆ TNtupleD() [2/3]. TNtupleD::TNtupleD ; (; ). Default constructor for Ntuple. ; Definition at line 45 of file TNtupleD.cxx. ◆ TNtupleD() [3/3]. TNtupleD::TNtupleD ; (; const char * ; name, . const char * ; title, . const char * ; varlist, . Int_t ; bufsize = 32000 . ). Create an Ntuple. ; The parameter varlist describes the list of the ntuple variables separated by a colon:; Example: x:y:z:energy; For each variable in the list a separate branch is created.; NOTE:; Use TTree to create branches with variables of different data types.; Use TTree when the number of branches is large (> 100). . Definition at line 65 of file TNtupleD.cxx. ◆ ~TNtupleD(). TNtupleD::~TNtupleD ; (; ). override . Default destructor for an Ntuple. ; Definition at line 104 of file TNtupleD.cxx. Member Function Documentation. ◆ Browse(). void TNtupleD::Browse ; (; TBrowser * ; b). overridevirtual . Browse content. ; Reimplemented from TObject.; Definition at line 139 of file TNtupleD.cxx. ◆ Class(). static TClass * TNtupleD::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TNtupleD::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TNtupleD::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 58 of file TNtupleD.h. ◆ DeclFileName(). static c",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:21105,Integrability,interface,interface,21105,"T > ; Int_t SetBranchAddress (const char *bname, T **add, TBranch **ptr=nullptr);  ; template<class T > ; Int_t SetBranchAddress (const char *bname, T *add, TBranch **ptr=nullptr);  ; virtual Int_t SetBranchAddress (const char *bname, void *add, TBranch **ptr, TClass *realClass, EDataType datatype, bool isptr);  Verify the validity of the type of addr before calling SetBranchAddress. ;  ; virtual Int_t SetBranchAddress (const char *bname, void *add, TBranch **ptr=nullptr);  Change branch address, dealing with clone trees properly. ;  ; virtual Int_t SetBranchAddress (const char *bname, void *add, TClass *realClass, EDataType datatype, bool isptr);  Verify the validity of the type of addr before calling SetBranchAddress. ;  ; virtual void SetBranchStatus (const char *bname, bool status=true, UInt_t *found=nullptr);  Set branch status to Process or DoNotProcess. ;  ; virtual Int_t SetCacheEntryRange (Long64_t first, Long64_t last);  interface to TTreeCache to set the cache entry range ;  ; virtual void SetCacheLearnEntries (Int_t n=10);  Interface to TTreeCache to set the number of entries for the learning phase. ;  ; virtual Int_t SetCacheSize (Long64_t cachesize=-1);  Set maximum size of the file cache . ;  ; virtual void SetChainOffset (Long64_t offset=0);  ; virtual void SetCircular (Long64_t maxEntries);  Enable/Disable circularity for this tree. ;  ; virtual void SetClusterPrefetch (bool enabled);  ; virtual void SetDebug (Int_t level=1, Long64_t min=0, Long64_t max=9999999);  Set the debug level and the debug range. ;  ; virtual void SetDefaultEntryOffsetLen (Int_t newdefault, bool updateExisting=false);  Update the default value for the branch's fEntryOffsetLen. ;  ; virtual void SetDirectory (TDirectory *dir);  Change the tree's directory. ;  ; virtual Long64_t SetEntries (Long64_t n=-1);  Change number of entries in the tree. ;  ; virtual void SetEntryList (TEntryList *list, Option_t *opt="""");  Set an EntryList. ;  ; virtual void SetEstimate (Long64_t nentri",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:27625,Integrability,message,message,27625," *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:28166,Integrability,message,message,28166,"putes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:29156,Integrability,message,message,29156,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *a",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:31885,Integrability,message,message,31885,"is method must be overridden if a class wants to paint itself. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:32076,Integrability,message,message,32076,"  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1); ",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:389,Modifiability,variab,variables,389,". ROOT: TNtupleD Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TNtupleD Class ReferenceTree Library. ; A simple TTree restricted to a list of double variables only. ; Each variable goes to a separate branch.; A Ntuple is created via TNtupleD(name,title,varlist,bufsize); namechar name[80]Definition TGX11.cxx:110; TNtupleD::TNtupleDTNtupleD()Default constructor for Ntuple.Definition TNtupleD.cxx:45; It is filled via: TNtupleD::Fill(*x) or; TNtupleD::Fill(v1,v2,v3.....); TNtupleD::FillInt_t Fill() overrideFill a Ntuple with current values in fArgs.Definition TNtupleD.cxx:150; xDouble_t x[n]Definition legend1.C:17; v2@ v2Definition rootcling_impl.cxx:3702; v3@ v3Definition rootcling_impl.cxx:3703; v1@ v1Definition rootcling_impl.cxx:3701. Definition at line 28 of file TNtupleD.h. Public Member Functions;  TNtupleD ();  Default constructor for Ntuple. ;  ;  TNtupleD (const char *name, const char *title, const char *varlist, Int_t bufsize=32000);  Create an Ntuple. ;  ;  ~TNtupleD () override;  Default destructor for an Ntuple. ;  ; void Browse (TBrowser *b) override;  Browse content. ;  ; virtual Int_t Fill (const Double_t *x);  Fill a Ntuple with an array of floats. ;  ; virtual Int_t Fill (Double_t x0, Double_t x1, Double_t x2=0, Double_t x3=0, Double_t x4=0, Double_t x5=0, Double_t x6=0, Double_t x7=0, Double_t x8=0, Double_t x9=0, Double_t x10=0, Double_t x11=0, Double_t x12=0, Double_t x13=0, Double_t x14=0);  Fill a Ntuple: Each Ntuple item is an argument. ;  ; Double_t * GetArgs () const;  ; virtual Int_t GetNvar () const;  ; TClass * IsA () const override;  ; Long64_t ReadStream (std::istream &inputstream, const char *branchDescriptor="""", char delimiter=' ') override;  Read from filename as many columns as variables in the ntupl",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:412,Modifiability,variab,variable,412,". ROOT: TNtupleD Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TNtupleD Class ReferenceTree Library. ; A simple TTree restricted to a list of double variables only. ; Each variable goes to a separate branch.; A Ntuple is created via TNtupleD(name,title,varlist,bufsize); namechar name[80]Definition TGX11.cxx:110; TNtupleD::TNtupleDTNtupleD()Default constructor for Ntuple.Definition TNtupleD.cxx:45; It is filled via: TNtupleD::Fill(*x) or; TNtupleD::Fill(v1,v2,v3.....); TNtupleD::FillInt_t Fill() overrideFill a Ntuple with current values in fArgs.Definition TNtupleD.cxx:150; xDouble_t x[n]Definition legend1.C:17; v2@ v2Definition rootcling_impl.cxx:3702; v3@ v3Definition rootcling_impl.cxx:3703; v1@ v1Definition rootcling_impl.cxx:3701. Definition at line 28 of file TNtupleD.h. Public Member Functions;  TNtupleD ();  Default constructor for Ntuple. ;  ;  TNtupleD (const char *name, const char *title, const char *varlist, Int_t bufsize=32000);  Create an Ntuple. ;  ;  ~TNtupleD () override;  Default destructor for an Ntuple. ;  ; void Browse (TBrowser *b) override;  Browse content. ;  ; virtual Int_t Fill (const Double_t *x);  Fill a Ntuple with an array of floats. ;  ; virtual Int_t Fill (Double_t x0, Double_t x1, Double_t x2=0, Double_t x3=0, Double_t x4=0, Double_t x5=0, Double_t x6=0, Double_t x7=0, Double_t x8=0, Double_t x9=0, Double_t x10=0, Double_t x11=0, Double_t x12=0, Double_t x13=0, Double_t x14=0);  Fill a Ntuple: Each Ntuple item is an argument. ;  ; Double_t * GetArgs () const;  ; virtual Int_t GetNvar () const;  ; TClass * IsA () const override;  ; Long64_t ReadStream (std::istream &inputstream, const char *branchDescriptor="""", char delimiter=' ') override;  Read from filename as many columns as variables in the ntupl",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:1979,Modifiability,variab,variables,1979,"tcling_impl.cxx:3703; v1@ v1Definition rootcling_impl.cxx:3701. Definition at line 28 of file TNtupleD.h. Public Member Functions;  TNtupleD ();  Default constructor for Ntuple. ;  ;  TNtupleD (const char *name, const char *title, const char *varlist, Int_t bufsize=32000);  Create an Ntuple. ;  ;  ~TNtupleD () override;  Default destructor for an Ntuple. ;  ; void Browse (TBrowser *b) override;  Browse content. ;  ; virtual Int_t Fill (const Double_t *x);  Fill a Ntuple with an array of floats. ;  ; virtual Int_t Fill (Double_t x0, Double_t x1, Double_t x2=0, Double_t x3=0, Double_t x4=0, Double_t x5=0, Double_t x6=0, Double_t x7=0, Double_t x8=0, Double_t x9=0, Double_t x10=0, Double_t x11=0, Double_t x12=0, Double_t x13=0, Double_t x14=0);  Fill a Ntuple: Each Ntuple item is an argument. ;  ; Double_t * GetArgs () const;  ; virtual Int_t GetNvar () const;  ; TClass * IsA () const override;  ; Long64_t ReadStream (std::istream &inputstream, const char *branchDescriptor="""", char delimiter=' ') override;  Read from filename as many columns as variables in the ntuple the function returns the number of rows found in the file The second argument ""branchDescriptor"" is currently not used. ;  ; void ResetBranchAddress (TBranch *) override;  Reset the branch addresses to the internal fArgs array. ;  ; void ResetBranchAddresses () override;  Reset the branch addresses to the internal fArgs array. ;  ; void Streamer (TBuffer &) override;  Stream a class object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TTree;  TTree ();  Default constructor and I/O constructor. ;  ;  TTree (const char *name, const char *title, Int_t splitlevel=99, TDirectory *dir=(::ROOT::Internal::TDirectoryAtomicAdapter{}));  Normal tree constructor. ;  ;  TTree (const TTree &tt)=delete;  ;  ~TTree () override;  Destructor. ;  ; void AddAllocationCount (UInt_t count);  ; virtual Int_t AddBranchToCache (const char *bname, bool subbranches=fal",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:2492,Modifiability,inherit,inherited,2492,"x2=0, Double_t x3=0, Double_t x4=0, Double_t x5=0, Double_t x6=0, Double_t x7=0, Double_t x8=0, Double_t x9=0, Double_t x10=0, Double_t x11=0, Double_t x12=0, Double_t x13=0, Double_t x14=0);  Fill a Ntuple: Each Ntuple item is an argument. ;  ; Double_t * GetArgs () const;  ; virtual Int_t GetNvar () const;  ; TClass * IsA () const override;  ; Long64_t ReadStream (std::istream &inputstream, const char *branchDescriptor="""", char delimiter=' ') override;  Read from filename as many columns as variables in the ntuple the function returns the number of rows found in the file The second argument ""branchDescriptor"" is currently not used. ;  ; void ResetBranchAddress (TBranch *) override;  Reset the branch addresses to the internal fArgs array. ;  ; void ResetBranchAddresses () override;  Reset the branch addresses to the internal fArgs array. ;  ; void Streamer (TBuffer &) override;  Stream a class object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TTree;  TTree ();  Default constructor and I/O constructor. ;  ;  TTree (const char *name, const char *title, Int_t splitlevel=99, TDirectory *dir=(::ROOT::Internal::TDirectoryAtomicAdapter{}));  Normal tree constructor. ;  ;  TTree (const TTree &tt)=delete;  ;  ~TTree () override;  Destructor. ;  ; void AddAllocationCount (UInt_t count);  ; virtual Int_t AddBranchToCache (const char *bname, bool subbranches=false);  Add branch with name bname to the Tree cache. ;  ; virtual Int_t AddBranchToCache (TBranch *branch, bool subbranches=false);  Add branch b to the Tree cache. ;  ; void AddClone (TTree *);  Add a cloned tree to our list of trees to be notified whenever we change our branch addresses or when we are deleted. ;  ; virtual TFriendElement * AddFriend (const char *treename, const char *filename="""");  Add a TFriendElement to the list of friends. ;  ; virtual TFriendElement * AddFriend (const char *treename, TFile *file);  Add a TFriendElement to the list ",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:19691,Modifiability,variab,variable,19691,"h ();  Refresh contents of this tree and its branches from the current status on disk. ;  ; virtual void RegisterExternalFriend (TFriendElement *);  Record a TFriendElement that we need to warn when the chain switches to a new file (typically this is because this chain is a friend of another TChain) ;  ; virtual void RemoveExternalFriend (TFriendElement *);  Removes external friend. ;  ; virtual void RemoveFriend (TTree *);  Remove a friend from the list of friends. ;  ; virtual void Reset (Option_t *option="""");  Reset baskets, buffers and entries count in all branches and leaves. ;  ; virtual void ResetAfterMerge (TFileMergeInfo *);  Resets the state of this TTree after a merge (keep the customization but forget the data). ;  ; virtual Long64_t Scan (const char *varexp="""", const char *selection="""", Option_t *option="""", Long64_t nentries=kMaxEntries, Long64_t firstentry=0);  Loop over tree entries and print entries passing selection. ;  ; virtual bool SetAlias (const char *aliasName, const char *aliasFormula);  Set a tree variable alias. ;  ; virtual void SetAutoFlush (Long64_t autof=-30000000);  This function may be called at the start of a program to change the default value for fAutoFlush. ;  ; virtual void SetAutoSave (Long64_t autos=-300000000);  In case of a program crash, it will be possible to recover the data in the tree up to the last AutoSave point. ;  ; virtual void SetBasketSize (const char *bname, Int_t buffsize=16000);  Set a branch's basket size. ;  ; template<class T > ; Int_t SetBranchAddress (const char *bname, T **add, TBranch **ptr=nullptr);  ; template<class T > ; Int_t SetBranchAddress (const char *bname, T *add, TBranch **ptr=nullptr);  ; virtual Int_t SetBranchAddress (const char *bname, void *add, TBranch **ptr, TClass *realClass, EDataType datatype, bool isptr);  Verify the validity of the type of addr before calling SetBranchAddress. ;  ; virtual Int_t SetBranchAddress (const char *bname, void *add, TBranch **ptr=nullptr);  Change branch ",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:22208,Modifiability,variab,variable,22208,"al void SetCacheLearnEntries (Int_t n=10);  Interface to TTreeCache to set the number of entries for the learning phase. ;  ; virtual Int_t SetCacheSize (Long64_t cachesize=-1);  Set maximum size of the file cache . ;  ; virtual void SetChainOffset (Long64_t offset=0);  ; virtual void SetCircular (Long64_t maxEntries);  Enable/Disable circularity for this tree. ;  ; virtual void SetClusterPrefetch (bool enabled);  ; virtual void SetDebug (Int_t level=1, Long64_t min=0, Long64_t max=9999999);  Set the debug level and the debug range. ;  ; virtual void SetDefaultEntryOffsetLen (Int_t newdefault, bool updateExisting=false);  Update the default value for the branch's fEntryOffsetLen. ;  ; virtual void SetDirectory (TDirectory *dir);  Change the tree's directory. ;  ; virtual Long64_t SetEntries (Long64_t n=-1);  Change number of entries in the tree. ;  ; virtual void SetEntryList (TEntryList *list, Option_t *opt="""");  Set an EntryList. ;  ; virtual void SetEstimate (Long64_t nentries=1000000);  Set number of entries to estimate variable limits. ;  ; virtual void SetEventList (TEventList *list);  This function transfroms the given TEventList into a TEntryList The new TEntryList is owned by the TTree and gets deleted when the tree is deleted. ;  ; virtual void SetFileNumber (Int_t number=0);  Set fFileNumber to number. ;  ; virtual void SetImplicitMT (bool enabled);  ; ROOT::TIOFeatures SetIOFeatures (const ROOT::TIOFeatures &);  Provide the end-user with the ability to enable/disable various experimental IO features for this TTree. ;  ; virtual void SetMakeClass (Int_t make);  Set all the branches in this TTree to be in decomposed object mode (also known as MakeClass mode). ;  ; virtual void SetMaxEntryLoop (Long64_t maxev=kMaxEntries);  ; virtual void SetMaxVirtualSize (Long64_t size=0);  ; void SetName (const char *name) override;  Change the name of this tree. ;  ; virtual void SetNotify (TObject *obj);  Sets the address of the object to be notified when the tree is lo",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:24538,Modifiability,variab,variable,24538," virtual void SetPerfStats (TVirtualPerfStats *perf);  Set perf stats. ;  ; virtual void SetScanField (Int_t n=50);  Sets the default maximum number of lines to be shown before <CR> when calling Scan(). ;  ; void SetTargetMemoryRatio (Float_t ratio);  ; virtual void SetTimerInterval (Int_t msec=333);  ; virtual void SetTreeIndex (TVirtualIndex *index);  The current TreeIndex is replaced by the new index. ;  ; virtual void SetUpdate (Int_t freq=0);  ; virtual void SetWeight (Double_t w=1, Option_t *option="""");  Set tree weight. ;  ; virtual void Show (Long64_t entry=-1, Int_t lenmax=20);  Print values of all active leaves for entry. ;  ; virtual void StartViewer ();  Start the TTreeViewer on this tree. ;  ; virtual Int_t StopCacheLearningPhase ();  Stop the cache learning phase. ;  ; void Streamer (TBuffer &) override;  Stream a class object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Int_t UnbinnedFit (const char *funcname, const char *varexp, const char *selection="""", Option_t *option="""", Long64_t nentries=kMaxEntries, Long64_t firstentry=0);  Unbinned fit of one or more variable(s) from a tree. ;  ; void UseCurrentStyle () override;  Replace current attributes by current style. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write this object to the current directory. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare ",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:24948,Modifiability,inherit,inherited,24948,"x=20);  Print values of all active leaves for entry. ;  ; virtual void StartViewer ();  Start the TTreeViewer on this tree. ;  ; virtual Int_t StopCacheLearningPhase ();  Stop the cache learning phase. ;  ; void Streamer (TBuffer &) override;  Stream a class object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Int_t UnbinnedFit (const char *funcname, const char *varexp, const char *selection="""", Option_t *option="""", Long64_t nentries=kMaxEntries, Long64_t firstentry=0);  Unbinned fit of one or more variable(s) from a tree. ;  ; void UseCurrentStyle () override;  Replace current attributes by current style. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write this object to the current directory. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:26417,Modifiability,inherit,inherited,26417," ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:27255,Modifiability,inherit,inheritance,27255,"zeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:29254,Modifiability,inherit,inherits,29254,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method to declare a ",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:29371,Modifiability,inherit,inherits,29371,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method to declare a method obsolete. ;  ; void operator delete (void *ptr);  Operator delete. ;  ; void operator delete (void *ptr, void",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:32115,Modifiability,inherit,inherited,32115,"rectory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ; ",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:33620,Modifiability,inherit,inherited,33620,";  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetLineAttributes ();  Invoke the DialogCanvas Line attributes. ;  ; virtual void SetLineColor (Color_t lcolor);  Set the line color. ;  ; virtual void SetLineColorAlpha (Color_t lcolor, Float_t lalpha);  Set a transparent line color. ;  ; virtual void SetLineStyle (Style_t lstyle);  Set the line style. ;  ; virtual void SetLineWidth (Width_t lwidth);  Set the line width. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttFill;  TAttFill ();  AttFill default constructor. ;  ;  TAttFill (Color_t fcolor, Style_t fstyle);  AttFill normal constructor. ;  ; virtual ~TAttFill ();  AttFill destructor. ;  ; void Copy (TAttFill &attfill) const;  Copy this fill attributes to a new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ; ",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:34875,Modifiability,inherit,inherited,34875,"his fill attributes to a new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; virtual void SetFillStyle (Style_t fstyle);  Set the fill area style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttMarker;  TAttMarker ();  TAttMarker default constructor. ;  ;  TAttMarker (Color_t color, Style_t style, Size_t msize);  TAttMarker normal constructor. ;  ; virtual ~TAttMarker ();  TAttMarker destructor. ;  ; void Copy (TAttMarker &attmarker) const;  Copy this marker attributes to a new TAttMarker. ;  ; virtual Color_t GetMarkerColor () const;  Return the marker color. ;  ; virtual Size_t GetMarkerSize () const;  Return the marker size. ;  ; virtual Style_t GetMarkerStyle () const;  Return the marker style. ;  ; virtual void Modify ();  Change current marker attributes if necessary. ;  ; virtual void ResetAttMarker (Option_t *toption="""");  Reset this marker attributes to the default values. ;  ; virtual void SaveMarkerAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t sizdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetMarkerAttributes ();  Invoke the DialogCanvas Marker attrib",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:36489,Modifiability,inherit,inherited,36489,"ttMarker (Option_t *toption="""");  Reset this marker attributes to the default values. ;  ; virtual void SaveMarkerAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t sizdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetMarkerAttributes ();  Invoke the DialogCanvas Marker attributes. ;  ; virtual void SetMarkerColor (Color_t mcolor=1);  Set the marker color. ;  ; virtual void SetMarkerColorAlpha (Color_t mcolor, Float_t malpha);  Set a transparent marker color. ;  ; virtual void SetMarkerSize (Size_t msize=1);  Set the marker size. ;  ; virtual void SetMarkerStyle (Style_t mstyle=1);  Set the marker style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TTree; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetBranchStyle ();  Static function returning the current branch style. ;  ; static Long64_t GetMaxTreeSize ();  Static function which returns the tree file size limit in bytes. ;  ; static TTree * MergeTrees (TList *list, Option_t *option="""");  Static function merging the trees in the TList into a new tree. ;  ; static void SetBranchStyle (Int_t style=1);  Set the current branch style. ;  ; static void SetMaxTreeSize (Long64_t maxsize=100000000000LL);  Set the maximum size in bytes of a Tree file (static function). ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static co",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:37238,Modifiability,inherit,inherited,37238,"eName ();  ;  Static Public Member Functions inherited from TTree; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetBranchStyle ();  Static function returning the current branch style. ;  ; static Long64_t GetMaxTreeSize ();  Static function which returns the tree file size limit in bytes. ;  ; static TTree * MergeTrees (TList *list, Option_t *option="""");  Static function merging the trees in the TList into a new tree. ;  ; static void SetBranchStyle (Int_t style=1);  Set the current branch style. ;  ; static void SetMaxTreeSize (Long64_t maxsize=100000000000LL);  Set the maximum size in bytes of a Tree file (static function). ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ;",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:37448,Modifiability,inherit,inherited,37448,"eName ();  ;  Static Public Member Functions inherited from TTree; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetBranchStyle ();  Static function returning the current branch style. ;  ; static Long64_t GetMaxTreeSize ();  Static function which returns the tree file size limit in bytes. ;  ; static TTree * MergeTrees (TList *list, Option_t *option="""");  Static function merging the trees in the TList into a new tree. ;  ; static void SetBranchStyle (Int_t style=1);  Set the current branch style. ;  ; static void SetMaxTreeSize (Long64_t maxsize=100000000000LL);  Set the maximum size in bytes of a Tree file (static function). ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ;",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:37966,Modifiability,inherit,inherited,37966,"e ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  . Protected Member Functions; Int_t Fill () override;  Fill a Ntuple with current values in fArgs. ;  ;  Protected Member Functions inherited from TTree; virtual TBranch * BranchImp (const char *branchname, const char *classname, TClass *ptrClass, void *addobj, Int_t bufsize, Int_t splitlevel);  Same as TTree::Branch() with added check that addobj matches className. ;  ; virtual TBranch * BranchImp (const char *branchname, TClass *ptrClass, void *addobj, Int_t bufsize, Int_t splitlevel);  Same as TTree::Branch b",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:38178,Modifiability,inherit,inherited,38178,"e ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  . Protected Member Functions; Int_t Fill () override;  Fill a Ntuple with current values in fArgs. ;  ;  Protected Member Functions inherited from TTree; virtual TBranch * BranchImp (const char *branchname, const char *classname, TClass *ptrClass, void *addobj, Int_t bufsize, Int_t splitlevel);  Same as TTree::Branch() with added check that addobj matches className. ;  ; virtual TBranch * BranchImp (const char *branchname, TClass *ptrClass, void *addobj, Int_t bufsize, Int_t splitlevel);  Same as TTree::Branch b",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:38390,Modifiability,inherit,inherited,38390,"e ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  . Protected Member Functions; Int_t Fill () override;  Fill a Ntuple with current values in fArgs. ;  ;  Protected Member Functions inherited from TTree; virtual TBranch * BranchImp (const char *branchname, const char *classname, TClass *ptrClass, void *addobj, Int_t bufsize, Int_t splitlevel);  Same as TTree::Branch() with added check that addobj matches className. ;  ; virtual TBranch * BranchImp (const char *branchname, TClass *ptrClass, void *addobj, Int_t bufsize, Int_t splitlevel);  Same as TTree::Branch b",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:39023,Modifiability,inherit,inherited,39023,"* DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  . Protected Member Functions; Int_t Fill () override;  Fill a Ntuple with current values in fArgs. ;  ;  Protected Member Functions inherited from TTree; virtual TBranch * BranchImp (const char *branchname, const char *classname, TClass *ptrClass, void *addobj, Int_t bufsize, Int_t splitlevel);  Same as TTree::Branch() with added check that addobj matches className. ;  ; virtual TBranch * BranchImp (const char *branchname, TClass *ptrClass, void *addobj, Int_t bufsize, Int_t splitlevel);  Same as TTree::Branch but automatic detection of the class name. ;  ; virtual TBranch * BranchImpArr (const char *branchname, EDataType datatype, std::size_t N, void *addobj, Int_t bufsize, Int_t splitlevel);  ; virtual TBranch * BranchImpRef (const char *branchname, const char *classname, TClass *ptrClass, void *addobj, Int_t bufsize, Int_t splitlevel);  Same as TTree::Branch but automatic detection of the class name. ;  ; virtual TBranch * BranchImpRef (const char *branchname, TClass *ptrClass, EDataType datatype, void *addobj, Int_t bufsize, Int_t splitlevel);  Same as TTree::Branch but automatic detection of the class name. ;  ; virtual TBranch * BronchExec (const char *name, const char *classname, void *addobj, bool isptrptr",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:41499,Modifiability,inherit,inherited,41499,". ;  ; virtual TLeaf * GetLeafImpl (const char *branchname, const char *leafname);  Return pointer to the 1st Leaf named name in any Branch of this Tree or any branch in the list of friend trees. ;  ; char GetNewlineValue (std::istream &inputStream);  Determine which newline this file is using. ;  ; void ImportClusterRanges (TTree *fromtree);  Appends the cluster range information stored in 'fromtree' to this tree, including the value of fAutoFlush. ;  ; virtual void KeepCircular ();  Keep a maximum of fMaxEntries in memory. ;  ; void MoveReadCache (TFile *src, TDirectory *dir);  Move a cache from a file to the current file in dir. ;  ; Int_t SetBranchAddressImp (TBranch *branch, void *addr, TBranch **ptr);  Change branch address, dealing with clone trees properly. ;  ; Int_t SetCacheSizeAux (bool autocache=true, Long64_t cacheSize=0);  Set the size of the file cache and create it if possible. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t * fArgs;  ! [fNvar] Array of variables ;  ; Int_t fNvar;  Number of columns. ;  ;  Protected Attributes inherited from TTree; TList * fAliases;  List of aliases for expressions based on the tree branches. ;  ; std::atomic< UInt_t > fAllocationCount {0};  indicates basket should be resized to exact memory usage, but causes significant ;  ; Long64_t fAutoFlush;  Auto-flush tree when fAutoFlush entries written or -fAutoFlush (compressed) bytes produced. ;  ; Long64_t fAutoSave;  Autosave tree when fAutoSave entries written or -fAutoSave (compressed) bytes produced. ;  ; TObjArray fBranches;  List of Branches. ;  ; TBranchRef * fBranchRef;  Branch supporting the TRefTable (if any) ;  ; bool fCacheDoAutoInit;  ! true if cache auto creation or resize check is needed ;  ; bool fCacheDoClusterPrefetch;  ! true if cache is prefetching whole cl",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:41742,Modifiability,variab,variables,41742,"st of friend trees. ;  ; char GetNewlineValue (std::istream &inputStream);  Determine which newline this file is using. ;  ; void ImportClusterRanges (TTree *fromtree);  Appends the cluster range information stored in 'fromtree' to this tree, including the value of fAutoFlush. ;  ; virtual void KeepCircular ();  Keep a maximum of fMaxEntries in memory. ;  ; void MoveReadCache (TFile *src, TDirectory *dir);  Move a cache from a file to the current file in dir. ;  ; Int_t SetBranchAddressImp (TBranch *branch, void *addr, TBranch **ptr);  Change branch address, dealing with clone trees properly. ;  ; Int_t SetCacheSizeAux (bool autocache=true, Long64_t cacheSize=0);  Set the size of the file cache and create it if possible. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t * fArgs;  ! [fNvar] Array of variables ;  ; Int_t fNvar;  Number of columns. ;  ;  Protected Attributes inherited from TTree; TList * fAliases;  List of aliases for expressions based on the tree branches. ;  ; std::atomic< UInt_t > fAllocationCount {0};  indicates basket should be resized to exact memory usage, but causes significant ;  ; Long64_t fAutoFlush;  Auto-flush tree when fAutoFlush entries written or -fAutoFlush (compressed) bytes produced. ;  ; Long64_t fAutoSave;  Autosave tree when fAutoSave entries written or -fAutoSave (compressed) bytes produced. ;  ; TObjArray fBranches;  List of Branches. ;  ; TBranchRef * fBranchRef;  Branch supporting the TRefTable (if any) ;  ; bool fCacheDoAutoInit;  ! true if cache auto creation or resize check is needed ;  ; bool fCacheDoClusterPrefetch;  ! true if cache is prefetching whole clusters ;  ; Long64_t fCacheSize;  ! Maximum size of file buffers ;  ; bool fCacheUserSet;  ! true if the cache setting was explicitly given by user ;  ; Long64_t fChainOffset; ",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:41817,Modifiability,inherit,inherited,41817,". ;  ; void ImportClusterRanges (TTree *fromtree);  Appends the cluster range information stored in 'fromtree' to this tree, including the value of fAutoFlush. ;  ; virtual void KeepCircular ();  Keep a maximum of fMaxEntries in memory. ;  ; void MoveReadCache (TFile *src, TDirectory *dir);  Move a cache from a file to the current file in dir. ;  ; Int_t SetBranchAddressImp (TBranch *branch, void *addr, TBranch **ptr);  Change branch address, dealing with clone trees properly. ;  ; Int_t SetCacheSizeAux (bool autocache=true, Long64_t cacheSize=0);  Set the size of the file cache and create it if possible. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t * fArgs;  ! [fNvar] Array of variables ;  ; Int_t fNvar;  Number of columns. ;  ;  Protected Attributes inherited from TTree; TList * fAliases;  List of aliases for expressions based on the tree branches. ;  ; std::atomic< UInt_t > fAllocationCount {0};  indicates basket should be resized to exact memory usage, but causes significant ;  ; Long64_t fAutoFlush;  Auto-flush tree when fAutoFlush entries written or -fAutoFlush (compressed) bytes produced. ;  ; Long64_t fAutoSave;  Autosave tree when fAutoSave entries written or -fAutoSave (compressed) bytes produced. ;  ; TObjArray fBranches;  List of Branches. ;  ; TBranchRef * fBranchRef;  Branch supporting the TRefTable (if any) ;  ; bool fCacheDoAutoInit;  ! true if cache auto creation or resize check is needed ;  ; bool fCacheDoClusterPrefetch;  ! true if cache is prefetching whole clusters ;  ; Long64_t fCacheSize;  ! Maximum size of file buffers ;  ; bool fCacheUserSet;  ! true if the cache setting was explicitly given by user ;  ; Long64_t fChainOffset;  ! Offset of 1st entry of this Tree in a TChain ;  ; TList * fClones;  ! List of cloned trees which share our addresse",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:46522,Modifiability,inherit,inherited,46522,"td::vector< std::pair< Long64_t, TBranch * > > fSortedBranches;  ! Branches to be processed in parallel when IMT is on, sorted by average task time ;  ; Float_t fTargetMemoryRatio {1.1f};  ! Ratio for memory usage in uncompressed buffers versus actual occupancy. ;  ; Int_t fTimerInterval;  Timer interval in milliseconds. ;  ; std::atomic< Long64_t > fTotalBuffers;  ! Total number of bytes in branch buffers ;  ; Long64_t fTotBytes;  Total number of bytes in all branches before compression. ;  ; TBuffer * fTransientBuffer;  ! Pointer to the current transient buffer. ;  ; TVirtualIndex * fTreeIndex;  Pointer to the tree Index (if any) ;  ; Int_t fUpdate;  Update frequency for EntryLoop. ;  ; TList * fUserInfo;  pointer to a list of user objects associated to this Tree ;  ; Double_t fWeight;  Tree weight (see TTree::SetWeight) ;  ; Long64_t fZipBytes;  Total number of bytes in all branches after compression. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Private Member Functions;  TNtupleD (const TNtupleD &)=delete;  ; TNtupleD & operator= (const TNtupleD &)=delete;  . Additional Inherited Members;  Public Types inherited from TTree; enum  { kSplitCollectionOfPointers = 100; };  ; enum  ESetBranchAddressStatus { ;   kMissingBranch = -5; , kInternalError = -4; , kMissingCompiledCollectionProxy = -3; , kMismatch = -2; , ;   kClassMismatch = -1; , kMatch = 0; , kMatchConversion = 1; , kMatchConversionCollection = 2; , ;   kMakeClass = 3; , kVoidPtr = 4; , kNoCheck = 5; , kNeedE",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:46604,Modifiability,inherit,inherited,46604,"td::vector< std::pair< Long64_t, TBranch * > > fSortedBranches;  ! Branches to be processed in parallel when IMT is on, sorted by average task time ;  ; Float_t fTargetMemoryRatio {1.1f};  ! Ratio for memory usage in uncompressed buffers versus actual occupancy. ;  ; Int_t fTimerInterval;  Timer interval in milliseconds. ;  ; std::atomic< Long64_t > fTotalBuffers;  ! Total number of bytes in branch buffers ;  ; Long64_t fTotBytes;  Total number of bytes in all branches before compression. ;  ; TBuffer * fTransientBuffer;  ! Pointer to the current transient buffer. ;  ; TVirtualIndex * fTreeIndex;  Pointer to the tree Index (if any) ;  ; Int_t fUpdate;  Update frequency for EntryLoop. ;  ; TList * fUserInfo;  pointer to a list of user objects associated to this Tree ;  ; Double_t fWeight;  Tree weight (see TTree::SetWeight) ;  ; Long64_t fZipBytes;  Total number of bytes in all branches after compression. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Private Member Functions;  TNtupleD (const TNtupleD &)=delete;  ; TNtupleD & operator= (const TNtupleD &)=delete;  . Additional Inherited Members;  Public Types inherited from TTree; enum  { kSplitCollectionOfPointers = 100; };  ; enum  ESetBranchAddressStatus { ;   kMissingBranch = -5; , kInternalError = -4; , kMissingCompiledCollectionProxy = -3; , kMismatch = -2; , ;   kClassMismatch = -1; , kMatch = 0; , kMatchConversion = 1; , kMatchConversionCollection = 2; , ;   kMakeClass = 3; , kVoidPtr = 4; , kNoCheck = 5; , kNeedE",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:46765,Modifiability,inherit,inherited,46765,"ry usage in uncompressed buffers versus actual occupancy. ;  ; Int_t fTimerInterval;  Timer interval in milliseconds. ;  ; std::atomic< Long64_t > fTotalBuffers;  ! Total number of bytes in branch buffers ;  ; Long64_t fTotBytes;  Total number of bytes in all branches before compression. ;  ; TBuffer * fTransientBuffer;  ! Pointer to the current transient buffer. ;  ; TVirtualIndex * fTreeIndex;  Pointer to the tree Index (if any) ;  ; Int_t fUpdate;  Update frequency for EntryLoop. ;  ; TList * fUserInfo;  pointer to a list of user objects associated to this Tree ;  ; Double_t fWeight;  Tree weight (see TTree::SetWeight) ;  ; Long64_t fZipBytes;  Total number of bytes in all branches after compression. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Private Member Functions;  TNtupleD (const TNtupleD &)=delete;  ; TNtupleD & operator= (const TNtupleD &)=delete;  . Additional Inherited Members;  Public Types inherited from TTree; enum  { kSplitCollectionOfPointers = 100; };  ; enum  ESetBranchAddressStatus { ;   kMissingBranch = -5; , kInternalError = -4; , kMissingCompiledCollectionProxy = -3; , kMismatch = -2; , ;   kClassMismatch = -1; , kMatch = 0; , kMatchConversion = 1; , kMatchConversionCollection = 2; , ;   kMakeClass = 3; , kVoidPtr = 4; , kNoCheck = 5; , kNeedEnableDecomposedObj = (1ULL << ( 29 )); , ;   kNeedDisableDecomposedObj = (1ULL << ( 30 )); , kDecomposedObjMask = kNeedEnableDecomposedObj | kNeedDisableDecomposedObj. };  ; enum  EStatusBits { kForceRead",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:46898,Modifiability,inherit,inherited,46898,"c< Long64_t > fTotalBuffers;  ! Total number of bytes in branch buffers ;  ; Long64_t fTotBytes;  Total number of bytes in all branches before compression. ;  ; TBuffer * fTransientBuffer;  ! Pointer to the current transient buffer. ;  ; TVirtualIndex * fTreeIndex;  Pointer to the tree Index (if any) ;  ; Int_t fUpdate;  Update frequency for EntryLoop. ;  ; TList * fUserInfo;  pointer to a list of user objects associated to this Tree ;  ; Double_t fWeight;  Tree weight (see TTree::SetWeight) ;  ; Long64_t fZipBytes;  Total number of bytes in all branches after compression. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Private Member Functions;  TNtupleD (const TNtupleD &)=delete;  ; TNtupleD & operator= (const TNtupleD &)=delete;  . Additional Inherited Members;  Public Types inherited from TTree; enum  { kSplitCollectionOfPointers = 100; };  ; enum  ESetBranchAddressStatus { ;   kMissingBranch = -5; , kInternalError = -4; , kMissingCompiledCollectionProxy = -3; , kMismatch = -2; , ;   kClassMismatch = -1; , kMatch = 0; , kMatchConversion = 1; , kMatchConversionCollection = 2; , ;   kMakeClass = 3; , kVoidPtr = 4; , kNoCheck = 5; , kNeedEnableDecomposedObj = (1ULL << ( 29 )); , ;   kNeedDisableDecomposedObj = (1ULL << ( 30 )); , kDecomposedObjMask = kNeedEnableDecomposedObj | kNeedDisableDecomposedObj. };  ; enum  EStatusBits { kForceRead = (1ULL << ( 11 )); , kCircular = (1ULL << ( 12 )); , kOnlyFlushAtCluster = (1ULL << ( 14 )); , kEntriesReshuffled = (1ULL << ( 19 ))",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:47209,Modifiability,inherit,inherited,47209,"bytes in all branches after compression. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Private Member Functions;  TNtupleD (const TNtupleD &)=delete;  ; TNtupleD & operator= (const TNtupleD &)=delete;  . Additional Inherited Members;  Public Types inherited from TTree; enum  { kSplitCollectionOfPointers = 100; };  ; enum  ESetBranchAddressStatus { ;   kMissingBranch = -5; , kInternalError = -4; , kMissingCompiledCollectionProxy = -3; , kMismatch = -2; , ;   kClassMismatch = -1; , kMatch = 0; , kMatchConversion = 1; , kMatchConversionCollection = 2; , ;   kMakeClass = 3; , kVoidPtr = 4; , kNoCheck = 5; , kNeedEnableDecomposedObj = (1ULL << ( 29 )); , ;   kNeedDisableDecomposedObj = (1ULL << ( 30 )); , kDecomposedObjMask = kNeedEnableDecomposedObj | kNeedDisableDecomposedObj. };  ; enum  EStatusBits { kForceRead = (1ULL << ( 11 )); , kCircular = (1ULL << ( 12 )); , kOnlyFlushAtCluster = (1ULL << ( 14 )); , kEntriesReshuffled = (1ULL << ( 19 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCa",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:47938,Modifiability,inherit,inherited,47938,"olor_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Private Member Functions;  TNtupleD (const TNtupleD &)=delete;  ; TNtupleD & operator= (const TNtupleD &)=delete;  . Additional Inherited Members;  Public Types inherited from TTree; enum  { kSplitCollectionOfPointers = 100; };  ; enum  ESetBranchAddressStatus { ;   kMissingBranch = -5; , kInternalError = -4; , kMissingCompiledCollectionProxy = -3; , kMismatch = -2; , ;   kClassMismatch = -1; , kMatch = 0; , kMatchConversion = 1; , kMatchConversionCollection = 2; , ;   kMakeClass = 3; , kVoidPtr = 4; , kNoCheck = 5; , kNeedEnableDecomposedObj = (1ULL << ( 29 )); , ;   kNeedDisableDecomposedObj = (1ULL << ( 30 )); , kDecomposedObjMask = kNeedEnableDecomposedObj | kNeedDisableDecomposedObj. };  ; enum  EStatusBits { kForceRead = (1ULL << ( 11 )); , kCircular = (1ULL << ( 12 )); , kOnlyFlushAtCluster = (1ULL << ( 14 )); , kEntriesReshuffled = (1ULL << ( 19 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Attributes inherited from TTree; static constexpr Long64_t kMaxEntries = TVirtualTreePlayer::kMaxEntries;  ;  Protected Types inherited from TTree; enum  ELockStatusBits { ;   kFindBranch = (1ULL << ( 0 )); , kFindLeaf = (1ULL << ( 1 )); , kGetAlias = (1ULL << ( 2 )); , kGetBranch = (1ULL << ( 3 )); , ;   kGetEntry = (1ULL << ( 4 )); , kGetEntryWit",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:48588,Modifiability,inherit,inherited,48588,"); , kEntriesReshuffled = (1ULL << ( 19 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Attributes inherited from TTree; static constexpr Long64_t kMaxEntries = TVirtualTreePlayer::kMaxEntries;  ;  Protected Types inherited from TTree; enum  ELockStatusBits { ;   kFindBranch = (1ULL << ( 0 )); , kFindLeaf = (1ULL << ( 1 )); , kGetAlias = (1ULL << ( 2 )); , kGetBranch = (1ULL << ( 3 )); , ;   kGetEntry = (1ULL << ( 4 )); , kGetEntryWithIndex = (1ULL << ( 5 )); , kGetFriend = (1ULL << ( 6 )); , kGetFriendAlias = (1ULL << ( 7 )); , ;   kGetLeaf = (1ULL << ( 8 )); , kLoadTree = (1ULL << ( 9 )); , kPrint = (1ULL << ( 10 )); , kRemoveFriend = (1ULL << ( 11 )); , ;   kSetBranchStatus = (1ULL << ( 12 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Attributes inherited from TTree; static Int_t fgBranchStyle = 1;  Old/New branch style. ;  ; static Long64_t fgMaxTreeSize = 100000000000LL;  Maximum size of a file containing a Tree. ;  . #include <TNtupleD.h>. Inheritance diagram for TNtupleD:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TNtupleD() [1/3]. TNtupleD::TNtupleD ; (; const TNtupleD & ; ). privatedelete . ◆ TNtupleD() [2/3]. TNtupleD::TNtupleD ; (; ). Default constructor for Ntuple. ; Definition at line 45 ",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:48703,Modifiability,inherit,inherited,48703,"); , kEntriesReshuffled = (1ULL << ( 19 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Attributes inherited from TTree; static constexpr Long64_t kMaxEntries = TVirtualTreePlayer::kMaxEntries;  ;  Protected Types inherited from TTree; enum  ELockStatusBits { ;   kFindBranch = (1ULL << ( 0 )); , kFindLeaf = (1ULL << ( 1 )); , kGetAlias = (1ULL << ( 2 )); , kGetBranch = (1ULL << ( 3 )); , ;   kGetEntry = (1ULL << ( 4 )); , kGetEntryWithIndex = (1ULL << ( 5 )); , kGetFriend = (1ULL << ( 6 )); , kGetFriendAlias = (1ULL << ( 7 )); , ;   kGetLeaf = (1ULL << ( 8 )); , kLoadTree = (1ULL << ( 9 )); , kPrint = (1ULL << ( 10 )); , kRemoveFriend = (1ULL << ( 11 )); , ;   kSetBranchStatus = (1ULL << ( 12 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Attributes inherited from TTree; static Int_t fgBranchStyle = 1;  Old/New branch style. ;  ; static Long64_t fgMaxTreeSize = 100000000000LL;  Maximum size of a file containing a Tree. ;  . #include <TNtupleD.h>. Inheritance diagram for TNtupleD:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TNtupleD() [1/3]. TNtupleD::TNtupleD ; (; const TNtupleD & ; ). privatedelete . ◆ TNtupleD() [2/3]. TNtupleD::TNtupleD ; (; ). Default constructor for Ntuple. ; Definition at line 45 ",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:49218,Modifiability,inherit,inherited,49218,"num  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Attributes inherited from TTree; static constexpr Long64_t kMaxEntries = TVirtualTreePlayer::kMaxEntries;  ;  Protected Types inherited from TTree; enum  ELockStatusBits { ;   kFindBranch = (1ULL << ( 0 )); , kFindLeaf = (1ULL << ( 1 )); , kGetAlias = (1ULL << ( 2 )); , kGetBranch = (1ULL << ( 3 )); , ;   kGetEntry = (1ULL << ( 4 )); , kGetEntryWithIndex = (1ULL << ( 5 )); , kGetFriend = (1ULL << ( 6 )); , kGetFriendAlias = (1ULL << ( 7 )); , ;   kGetLeaf = (1ULL << ( 8 )); , kLoadTree = (1ULL << ( 9 )); , kPrint = (1ULL << ( 10 )); , kRemoveFriend = (1ULL << ( 11 )); , ;   kSetBranchStatus = (1ULL << ( 12 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Attributes inherited from TTree; static Int_t fgBranchStyle = 1;  Old/New branch style. ;  ; static Long64_t fgMaxTreeSize = 100000000000LL;  Maximum size of a file containing a Tree. ;  . #include <TNtupleD.h>. Inheritance diagram for TNtupleD:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TNtupleD() [1/3]. TNtupleD::TNtupleD ; (; const TNtupleD & ; ). privatedelete . ◆ TNtupleD() [2/3]. TNtupleD::TNtupleD ; (; ). Default constructor for Ntuple. ; Definition at line 45 of file TNtupleD.cxx. ◆ TNtupleD() [3/3]. TNtupleD::TNtupleD ; (; const char * ; name, . const char * ; title, . const char * ; varlist, . Int_t ; bufsize = 32000 . ). Create an Ntuple. ; The parameter varlist describes the list of the ntuple variables separated by a colon:; Example: x:y:z:energy; For each variable in the list a separate branch is created.; NOTE:; Use TTree to create branches with variables of diffe",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:49318,Modifiability,inherit,inherited,49318,"num  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Attributes inherited from TTree; static constexpr Long64_t kMaxEntries = TVirtualTreePlayer::kMaxEntries;  ;  Protected Types inherited from TTree; enum  ELockStatusBits { ;   kFindBranch = (1ULL << ( 0 )); , kFindLeaf = (1ULL << ( 1 )); , kGetAlias = (1ULL << ( 2 )); , kGetBranch = (1ULL << ( 3 )); , ;   kGetEntry = (1ULL << ( 4 )); , kGetEntryWithIndex = (1ULL << ( 5 )); , kGetFriend = (1ULL << ( 6 )); , kGetFriendAlias = (1ULL << ( 7 )); , ;   kGetLeaf = (1ULL << ( 8 )); , kLoadTree = (1ULL << ( 9 )); , kPrint = (1ULL << ( 10 )); , kRemoveFriend = (1ULL << ( 11 )); , ;   kSetBranchStatus = (1ULL << ( 12 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Attributes inherited from TTree; static Int_t fgBranchStyle = 1;  Old/New branch style. ;  ; static Long64_t fgMaxTreeSize = 100000000000LL;  Maximum size of a file containing a Tree. ;  . #include <TNtupleD.h>. Inheritance diagram for TNtupleD:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TNtupleD() [1/3]. TNtupleD::TNtupleD ; (; const TNtupleD & ; ). privatedelete . ◆ TNtupleD() [2/3]. TNtupleD::TNtupleD ; (; ). Default constructor for Ntuple. ; Definition at line 45 of file TNtupleD.cxx. ◆ TNtupleD() [3/3]. TNtupleD::TNtupleD ; (; const char * ; name, . const char * ; title, . const char * ; varlist, . Int_t ; bufsize = 32000 . ). Create an Ntuple. ; The parameter varlist describes the list of the ntuple variables separated by a colon:; Example: x:y:z:energy; For each variable in the list a separate branch is created.; NOTE:; Use TTree to create branches with variables of diffe",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:50118,Modifiability,variab,variables,50118,"1 )); , ;   kSetBranchStatus = (1ULL << ( 12 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Attributes inherited from TTree; static Int_t fgBranchStyle = 1;  Old/New branch style. ;  ; static Long64_t fgMaxTreeSize = 100000000000LL;  Maximum size of a file containing a Tree. ;  . #include <TNtupleD.h>. Inheritance diagram for TNtupleD:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TNtupleD() [1/3]. TNtupleD::TNtupleD ; (; const TNtupleD & ; ). privatedelete . ◆ TNtupleD() [2/3]. TNtupleD::TNtupleD ; (; ). Default constructor for Ntuple. ; Definition at line 45 of file TNtupleD.cxx. ◆ TNtupleD() [3/3]. TNtupleD::TNtupleD ; (; const char * ; name, . const char * ; title, . const char * ; varlist, . Int_t ; bufsize = 32000 . ). Create an Ntuple. ; The parameter varlist describes the list of the ntuple variables separated by a colon:; Example: x:y:z:energy; For each variable in the list a separate branch is created.; NOTE:; Use TTree to create branches with variables of different data types.; Use TTree when the number of branches is large (> 100). . Definition at line 65 of file TNtupleD.cxx. ◆ ~TNtupleD(). TNtupleD::~TNtupleD ; (; ). override . Default destructor for an Ntuple. ; Definition at line 104 of file TNtupleD.cxx. Member Function Documentation. ◆ Browse(). void TNtupleD::Browse ; (; TBrowser * ; b). overridevirtual . Browse content. ; Reimplemented from TObject.; Definition at line 139 of file TNtupleD.cxx. ◆ Class(). static TClass * TNtupleD::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TNtupleD::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TNtupleD::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 58 of file TNtupleD.h. ◆ DeclFileName(). static c",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:50183,Modifiability,variab,variable,50183,"1 )); , ;   kSetBranchStatus = (1ULL << ( 12 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Attributes inherited from TTree; static Int_t fgBranchStyle = 1;  Old/New branch style. ;  ; static Long64_t fgMaxTreeSize = 100000000000LL;  Maximum size of a file containing a Tree. ;  . #include <TNtupleD.h>. Inheritance diagram for TNtupleD:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TNtupleD() [1/3]. TNtupleD::TNtupleD ; (; const TNtupleD & ; ). privatedelete . ◆ TNtupleD() [2/3]. TNtupleD::TNtupleD ; (; ). Default constructor for Ntuple. ; Definition at line 45 of file TNtupleD.cxx. ◆ TNtupleD() [3/3]. TNtupleD::TNtupleD ; (; const char * ; name, . const char * ; title, . const char * ; varlist, . Int_t ; bufsize = 32000 . ). Create an Ntuple. ; The parameter varlist describes the list of the ntuple variables separated by a colon:; Example: x:y:z:energy; For each variable in the list a separate branch is created.; NOTE:; Use TTree to create branches with variables of different data types.; Use TTree when the number of branches is large (> 100). . Definition at line 65 of file TNtupleD.cxx. ◆ ~TNtupleD(). TNtupleD::~TNtupleD ; (; ). override . Default destructor for an Ntuple. ; Definition at line 104 of file TNtupleD.cxx. Member Function Documentation. ◆ Browse(). void TNtupleD::Browse ; (; TBrowser * ; b). overridevirtual . Browse content. ; Reimplemented from TObject.; Definition at line 139 of file TNtupleD.cxx. ◆ Class(). static TClass * TNtupleD::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TNtupleD::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TNtupleD::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 58 of file TNtupleD.h. ◆ DeclFileName(). static c",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:50276,Modifiability,variab,variables,50276," << ( 3 )); };  ;  Static Protected Attributes inherited from TTree; static Int_t fgBranchStyle = 1;  Old/New branch style. ;  ; static Long64_t fgMaxTreeSize = 100000000000LL;  Maximum size of a file containing a Tree. ;  . #include <TNtupleD.h>. Inheritance diagram for TNtupleD:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TNtupleD() [1/3]. TNtupleD::TNtupleD ; (; const TNtupleD & ; ). privatedelete . ◆ TNtupleD() [2/3]. TNtupleD::TNtupleD ; (; ). Default constructor for Ntuple. ; Definition at line 45 of file TNtupleD.cxx. ◆ TNtupleD() [3/3]. TNtupleD::TNtupleD ; (; const char * ; name, . const char * ; title, . const char * ; varlist, . Int_t ; bufsize = 32000 . ). Create an Ntuple. ; The parameter varlist describes the list of the ntuple variables separated by a colon:; Example: x:y:z:energy; For each variable in the list a separate branch is created.; NOTE:; Use TTree to create branches with variables of different data types.; Use TTree when the number of branches is large (> 100). . Definition at line 65 of file TNtupleD.cxx. ◆ ~TNtupleD(). TNtupleD::~TNtupleD ; (; ). override . Default destructor for an Ntuple. ; Definition at line 104 of file TNtupleD.cxx. Member Function Documentation. ◆ Browse(). void TNtupleD::Browse ; (; TBrowser * ; b). overridevirtual . Browse content. ; Reimplemented from TObject.; Definition at line 139 of file TNtupleD.cxx. ◆ Class(). static TClass * TNtupleD::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TNtupleD::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TNtupleD::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 58 of file TNtupleD.h. ◆ DeclFileName(). static const char * TNtupleD::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definiti",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:52902,Modifiability,variab,variables,52902,"0, . Double_t ; x9 = 0, . Double_t ; x10 = 0, . Double_t ; x11 = 0, . Double_t ; x12 = 0, . Double_t ; x13 = 0, . Double_t ; x14 = 0 . ). virtual . Fill a Ntuple: Each Ntuple item is an argument. ; Definition at line 171 of file TNtupleD.cxx. ◆ GetArgs(). Double_t * TNtupleD::GetArgs ; (; ); const. inline . Definition at line 53 of file TNtupleD.h. ◆ GetNvar(). virtual Int_t TNtupleD::GetNvar ; (; ); const. inlinevirtual . Definition at line 52 of file TNtupleD.h. ◆ IsA(). TClass * TNtupleD::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TNamed.; Definition at line 58 of file TNtupleD.h. ◆ operator=(). TNtupleD & TNtupleD::operator= ; (; const TNtupleD & ; ). privatedelete . ◆ ReadStream(). Long64_t TNtupleD::ReadStream ; (; std::istream & ; inputStream, . const char * ; branchDescriptor = """", . char ; delimiter = ' ' . ). overridevirtual . Read from filename as many columns as variables in the ntuple the function returns the number of rows found in the file The second argument ""branchDescriptor"" is currently not used. ; Lines in the input file starting with ""#"" are ignored. ; Reimplemented from TTree.; Definition at line 200 of file TNtupleD.cxx. ◆ ResetBranchAddress(). void TNtupleD::ResetBranchAddress ; (; TBranch * ; branch). overridevirtual . Reset the branch addresses to the internal fArgs array. ; Use this method when the addresses were changed via calls to SetBranchAddress(). ; Reimplemented from TTree.; Definition at line 114 of file TNtupleD.cxx. ◆ ResetBranchAddresses(). void TNtupleD::ResetBranchAddresses ; (; ). overridevirtual . Reset the branch addresses to the internal fArgs array. ; Use this method when the addresses were changed via calls to SetBranchAddress(). ; Reimplemented from TTree.; Definition at line 128 of file TNtupleD.cxx. ◆ Streamer(). void TNtupleD::Streamer ; (; TBuffer & ; b). overridevirtual . Stream a class object. ; Reimplemented from TNamed.; Definition at line 229 of file ",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:54214,Modifiability,variab,variables,54214,"; (; const TNtupleD & ; ). privatedelete . ◆ ReadStream(). Long64_t TNtupleD::ReadStream ; (; std::istream & ; inputStream, . const char * ; branchDescriptor = """", . char ; delimiter = ' ' . ). overridevirtual . Read from filename as many columns as variables in the ntuple the function returns the number of rows found in the file The second argument ""branchDescriptor"" is currently not used. ; Lines in the input file starting with ""#"" are ignored. ; Reimplemented from TTree.; Definition at line 200 of file TNtupleD.cxx. ◆ ResetBranchAddress(). void TNtupleD::ResetBranchAddress ; (; TBranch * ; branch). overridevirtual . Reset the branch addresses to the internal fArgs array. ; Use this method when the addresses were changed via calls to SetBranchAddress(). ; Reimplemented from TTree.; Definition at line 114 of file TNtupleD.cxx. ◆ ResetBranchAddresses(). void TNtupleD::ResetBranchAddresses ; (; ). overridevirtual . Reset the branch addresses to the internal fArgs array. ; Use this method when the addresses were changed via calls to SetBranchAddress(). ; Reimplemented from TTree.; Definition at line 128 of file TNtupleD.cxx. ◆ Streamer(). void TNtupleD::Streamer ; (; TBuffer & ; b). overridevirtual . Stream a class object. ; Reimplemented from TNamed.; Definition at line 229 of file TNtupleD.cxx. ◆ StreamerNVirtual(). void TNtupleD::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 58 of file TNtupleD.h. Member Data Documentation. ◆ fArgs. Double_t* TNtupleD::fArgs. protected . ! [fNvar] Array of variables ; Definition at line 32 of file TNtupleD.h. ◆ fNvar. Int_t TNtupleD::fNvar. protected . Number of columns. ; Definition at line 31 of file TNtupleD.h. Libraries for TNtupleD:. [legend]; The documentation for this class was generated from the following files:; tree/tree/inc/TNtupleD.h; tree/tree/src/TNtupleD.cxx. TNtupleD. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:03 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:2967,Performance,cache,cache,2967," *branchDescriptor="""", char delimiter=' ') override;  Read from filename as many columns as variables in the ntuple the function returns the number of rows found in the file The second argument ""branchDescriptor"" is currently not used. ;  ; void ResetBranchAddress (TBranch *) override;  Reset the branch addresses to the internal fArgs array. ;  ; void ResetBranchAddresses () override;  Reset the branch addresses to the internal fArgs array. ;  ; void Streamer (TBuffer &) override;  Stream a class object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TTree;  TTree ();  Default constructor and I/O constructor. ;  ;  TTree (const char *name, const char *title, Int_t splitlevel=99, TDirectory *dir=(::ROOT::Internal::TDirectoryAtomicAdapter{}));  Normal tree constructor. ;  ;  TTree (const TTree &tt)=delete;  ;  ~TTree () override;  Destructor. ;  ; void AddAllocationCount (UInt_t count);  ; virtual Int_t AddBranchToCache (const char *bname, bool subbranches=false);  Add branch with name bname to the Tree cache. ;  ; virtual Int_t AddBranchToCache (TBranch *branch, bool subbranches=false);  Add branch b to the Tree cache. ;  ; void AddClone (TTree *);  Add a cloned tree to our list of trees to be notified whenever we change our branch addresses or when we are deleted. ;  ; virtual TFriendElement * AddFriend (const char *treename, const char *filename="""");  Add a TFriendElement to the list of friends. ;  ; virtual TFriendElement * AddFriend (const char *treename, TFile *file);  Add a TFriendElement to the list of friends. ;  ; virtual TFriendElement * AddFriend (TTree *tree, const char *alias="""", bool warn=false);  Add a TFriendElement to the list of friends. ;  ; virtual void AddTotBytes (Int_t tot);  ; virtual void AddZipBytes (Int_t zip);  ; virtual Long64_t AutoSave (Option_t *option="""");  AutoSave tree header every fAutoSave bytes. ;  ; virtual Int_t Branch (const char *folder, Int_t bufsize=32000, Int_t ",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:3079,Performance,cache,cache,3079,"umber of rows found in the file The second argument ""branchDescriptor"" is currently not used. ;  ; void ResetBranchAddress (TBranch *) override;  Reset the branch addresses to the internal fArgs array. ;  ; void ResetBranchAddresses () override;  Reset the branch addresses to the internal fArgs array. ;  ; void Streamer (TBuffer &) override;  Stream a class object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TTree;  TTree ();  Default constructor and I/O constructor. ;  ;  TTree (const char *name, const char *title, Int_t splitlevel=99, TDirectory *dir=(::ROOT::Internal::TDirectoryAtomicAdapter{}));  Normal tree constructor. ;  ;  TTree (const TTree &tt)=delete;  ;  ~TTree () override;  Destructor. ;  ; void AddAllocationCount (UInt_t count);  ; virtual Int_t AddBranchToCache (const char *bname, bool subbranches=false);  Add branch with name bname to the Tree cache. ;  ; virtual Int_t AddBranchToCache (TBranch *branch, bool subbranches=false);  Add branch b to the Tree cache. ;  ; void AddClone (TTree *);  Add a cloned tree to our list of trees to be notified whenever we change our branch addresses or when we are deleted. ;  ; virtual TFriendElement * AddFriend (const char *treename, const char *filename="""");  Add a TFriendElement to the list of friends. ;  ; virtual TFriendElement * AddFriend (const char *treename, TFile *file);  Add a TFriendElement to the list of friends. ;  ; virtual TFriendElement * AddFriend (TTree *tree, const char *alias="""", bool warn=false);  Add a TFriendElement to the list of friends. ;  ; virtual void AddTotBytes (Int_t tot);  ; virtual void AddZipBytes (Int_t zip);  ; virtual Long64_t AutoSave (Option_t *option="""");  AutoSave tree header every fAutoSave bytes. ;  ; virtual Int_t Branch (const char *folder, Int_t bufsize=32000, Int_t splitlevel=99);  Create one branch for each element in the folder. ;  ; TBranch * Branch (const char *name, char *address, const char *leafli",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:8200,Performance,cache,cache,8200,"al TBasket * CreateBasket (TBranch *);  Create a basket for this tree and given branch. ;  ; Int_t Debug () const;  ; void Delete (Option_t *option="""") override;  Delete this tree from memory or/and disk. ;  ; virtual void DirectoryAutoAdd (TDirectory *);  Called by TKey and TObject::Clone to automatically add us to a directory when we are read from a file. ;  ; virtual Long64_t Draw (const char *varexp, const char *selection, Option_t *option="""", Long64_t nentries=kMaxEntries, Long64_t firstentry=0);  Draw expression varexp for entries and objects that pass a (optional) selection. ;  ; virtual Long64_t Draw (const char *varexp, const TCut &selection, Option_t *option="""", Long64_t nentries=kMaxEntries, Long64_t firstentry=0);  Draw expression varexp for specified entries. ;  ; void Draw (Option_t *opt) override;  Default Draw method for all objects. ;  ; virtual void DropBaskets ();  Remove some baskets from memory. ;  ; virtual Int_t DropBranchFromCache (const char *bname, bool subbranches=false);  Remove the branch with name 'bname' from the Tree cache. ;  ; virtual Int_t DropBranchFromCache (TBranch *branch, bool subbranches=false);  Remove the branch b from the Tree cache. ;  ; virtual void DropBuffers (Int_t nbytes);  Drop branch buffers to accommodate nbytes below MaxVirtualsize. ;  ; bool EnableCache ();  Enable the TTreeCache unless explicitly disabled for this TTree by a prior call to SetCacheSize(0). ;  ; virtual TBranch * FindBranch (const char *name);  Return the branch that correspond to the path 'branchname', which can include the name of the tree or the omitted name of the parent branches. ;  ; virtual TLeaf * FindLeaf (const char *name);  Find leaf.. ;  ; virtual Int_t Fit (const char *funcname, const char *varexp, const char *selection="""", Option_t *option="""", Option_t *goption="""", Long64_t nentries=kMaxEntries, Long64_t firstentry=0);  Fit a projected item(s) from a tree. ;  ; virtual Int_t FlushBaskets (bool create_cluster=true) const;  Write to d",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:8324,Performance,cache,cache,8324,"tion_t *option="""") override;  Delete this tree from memory or/and disk. ;  ; virtual void DirectoryAutoAdd (TDirectory *);  Called by TKey and TObject::Clone to automatically add us to a directory when we are read from a file. ;  ; virtual Long64_t Draw (const char *varexp, const char *selection, Option_t *option="""", Long64_t nentries=kMaxEntries, Long64_t firstentry=0);  Draw expression varexp for entries and objects that pass a (optional) selection. ;  ; virtual Long64_t Draw (const char *varexp, const TCut &selection, Option_t *option="""", Long64_t nentries=kMaxEntries, Long64_t firstentry=0);  Draw expression varexp for specified entries. ;  ; void Draw (Option_t *opt) override;  Default Draw method for all objects. ;  ; virtual void DropBaskets ();  Remove some baskets from memory. ;  ; virtual Int_t DropBranchFromCache (const char *bname, bool subbranches=false);  Remove the branch with name 'bname' from the Tree cache. ;  ; virtual Int_t DropBranchFromCache (TBranch *branch, bool subbranches=false);  Remove the branch b from the Tree cache. ;  ; virtual void DropBuffers (Int_t nbytes);  Drop branch buffers to accommodate nbytes below MaxVirtualsize. ;  ; bool EnableCache ();  Enable the TTreeCache unless explicitly disabled for this TTree by a prior call to SetCacheSize(0). ;  ; virtual TBranch * FindBranch (const char *name);  Return the branch that correspond to the path 'branchname', which can include the name of the tree or the omitted name of the parent branches. ;  ; virtual TLeaf * FindLeaf (const char *name);  Find leaf.. ;  ; virtual Int_t Fit (const char *funcname, const char *varexp, const char *selection="""", Option_t *option="""", Option_t *goption="""", Long64_t nentries=kMaxEntries, Long64_t firstentry=0);  Fit a projected item(s) from a tree. ;  ; virtual Int_t FlushBaskets (bool create_cluster=true) const;  Write to disk all the basket that have not yet been individually written and create an event cluster boundary (by default). ;  ; virtual const ",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:16782,Performance,load,loading,16782,"index. ;  ; virtual Int_t MakeClass (const char *classname=nullptr, Option_t *option="""");  Generate a skeleton analysis class for this tree. ;  ; virtual Int_t MakeCode (const char *filename=nullptr);  Generate a skeleton function for this tree. ;  ; virtual Int_t MakeProxy (const char *classname, const char *macrofilename=nullptr, const char *cutfilename=nullptr, const char *option=nullptr, Int_t maxUnrolling=3);  Generate a skeleton analysis class for this Tree using TBranchProxy. ;  ; virtual Int_t MakeSelector (const char *selector=nullptr, Option_t *option="""");  Generate skeleton selector class for this tree. ;  ; bool MemoryFull (Int_t nbytes);  Check if adding nbytes to memory we are still below MaxVirtualsize. ;  ; virtual Long64_t Merge (TCollection *list, Option_t *option="""");  Merge the trees in the TList into this tree. ;  ; virtual Long64_t Merge (TCollection *list, TFileMergeInfo *info);  Merge the trees in the TList into this tree. ;  ; bool Notify () override;  Function called when loading a new class library. ;  ; TTree & operator= (const TTree &tt)=delete;  ; virtual void OptimizeBaskets (ULong64_t maxMemory=10000000, Float_t minComp=1.1, Option_t *option="""");  This function may be called after having filled some entries in a Tree. ;  ; TPrincipal * Principal (const char *varexp="""", const char *selection="""", Option_t *option=""np"", Long64_t nentries=kMaxEntries, Long64_t firstentry=0);  Interface to the Principal Components Analysis class. ;  ; void Print (Option_t *option="""") const override;  Print a summary of the tree contents. ;  ; virtual void PrintCacheStats (Option_t *option="""") const;  Print statistics about the TreeCache for this tree. ;  ; virtual Long64_t Process (const char *filename, Option_t *option="""", Long64_t nentries=kMaxEntries, Long64_t firstentry=0);  Process this tree executing the TSelector code in the specified filename. ;  ; virtual Long64_t Process (TSelector *selector, Option_t *option="""", Long64_t nentries=kMaxEntries, Lon",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:21140,Performance,cache,cache,21140,"T > ; Int_t SetBranchAddress (const char *bname, T **add, TBranch **ptr=nullptr);  ; template<class T > ; Int_t SetBranchAddress (const char *bname, T *add, TBranch **ptr=nullptr);  ; virtual Int_t SetBranchAddress (const char *bname, void *add, TBranch **ptr, TClass *realClass, EDataType datatype, bool isptr);  Verify the validity of the type of addr before calling SetBranchAddress. ;  ; virtual Int_t SetBranchAddress (const char *bname, void *add, TBranch **ptr=nullptr);  Change branch address, dealing with clone trees properly. ;  ; virtual Int_t SetBranchAddress (const char *bname, void *add, TClass *realClass, EDataType datatype, bool isptr);  Verify the validity of the type of addr before calling SetBranchAddress. ;  ; virtual void SetBranchStatus (const char *bname, bool status=true, UInt_t *found=nullptr);  Set branch status to Process or DoNotProcess. ;  ; virtual Int_t SetCacheEntryRange (Long64_t first, Long64_t last);  interface to TTreeCache to set the cache entry range ;  ; virtual void SetCacheLearnEntries (Int_t n=10);  Interface to TTreeCache to set the number of entries for the learning phase. ;  ; virtual Int_t SetCacheSize (Long64_t cachesize=-1);  Set maximum size of the file cache . ;  ; virtual void SetChainOffset (Long64_t offset=0);  ; virtual void SetCircular (Long64_t maxEntries);  Enable/Disable circularity for this tree. ;  ; virtual void SetClusterPrefetch (bool enabled);  ; virtual void SetDebug (Int_t level=1, Long64_t min=0, Long64_t max=9999999);  Set the debug level and the debug range. ;  ; virtual void SetDefaultEntryOffsetLen (Int_t newdefault, bool updateExisting=false);  Update the default value for the branch's fEntryOffsetLen. ;  ; virtual void SetDirectory (TDirectory *dir);  Change the tree's directory. ;  ; virtual Long64_t SetEntries (Long64_t n=-1);  Change number of entries in the tree. ;  ; virtual void SetEntryList (TEntryList *list, Option_t *opt="""");  Set an EntryList. ;  ; virtual void SetEstimate (Long64_t nentri",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:21331,Performance,cache,cachesize,21331,"ptr);  ; virtual Int_t SetBranchAddress (const char *bname, void *add, TBranch **ptr, TClass *realClass, EDataType datatype, bool isptr);  Verify the validity of the type of addr before calling SetBranchAddress. ;  ; virtual Int_t SetBranchAddress (const char *bname, void *add, TBranch **ptr=nullptr);  Change branch address, dealing with clone trees properly. ;  ; virtual Int_t SetBranchAddress (const char *bname, void *add, TClass *realClass, EDataType datatype, bool isptr);  Verify the validity of the type of addr before calling SetBranchAddress. ;  ; virtual void SetBranchStatus (const char *bname, bool status=true, UInt_t *found=nullptr);  Set branch status to Process or DoNotProcess. ;  ; virtual Int_t SetCacheEntryRange (Long64_t first, Long64_t last);  interface to TTreeCache to set the cache entry range ;  ; virtual void SetCacheLearnEntries (Int_t n=10);  Interface to TTreeCache to set the number of entries for the learning phase. ;  ; virtual Int_t SetCacheSize (Long64_t cachesize=-1);  Set maximum size of the file cache . ;  ; virtual void SetChainOffset (Long64_t offset=0);  ; virtual void SetCircular (Long64_t maxEntries);  Enable/Disable circularity for this tree. ;  ; virtual void SetClusterPrefetch (bool enabled);  ; virtual void SetDebug (Int_t level=1, Long64_t min=0, Long64_t max=9999999);  Set the debug level and the debug range. ;  ; virtual void SetDefaultEntryOffsetLen (Int_t newdefault, bool updateExisting=false);  Update the default value for the branch's fEntryOffsetLen. ;  ; virtual void SetDirectory (TDirectory *dir);  Change the tree's directory. ;  ; virtual Long64_t SetEntries (Long64_t n=-1);  Change number of entries in the tree. ;  ; virtual void SetEntryList (TEntryList *list, Option_t *opt="""");  Set an EntryList. ;  ; virtual void SetEstimate (Long64_t nentries=1000000);  Set number of entries to estimate variable limits. ;  ; virtual void SetEventList (TEventList *list);  This function transfroms the given TEventList into a TEntry",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:21376,Performance,cache,cache,21376,"ptr);  ; virtual Int_t SetBranchAddress (const char *bname, void *add, TBranch **ptr, TClass *realClass, EDataType datatype, bool isptr);  Verify the validity of the type of addr before calling SetBranchAddress. ;  ; virtual Int_t SetBranchAddress (const char *bname, void *add, TBranch **ptr=nullptr);  Change branch address, dealing with clone trees properly. ;  ; virtual Int_t SetBranchAddress (const char *bname, void *add, TClass *realClass, EDataType datatype, bool isptr);  Verify the validity of the type of addr before calling SetBranchAddress. ;  ; virtual void SetBranchStatus (const char *bname, bool status=true, UInt_t *found=nullptr);  Set branch status to Process or DoNotProcess. ;  ; virtual Int_t SetCacheEntryRange (Long64_t first, Long64_t last);  interface to TTreeCache to set the cache entry range ;  ; virtual void SetCacheLearnEntries (Int_t n=10);  Interface to TTreeCache to set the number of entries for the learning phase. ;  ; virtual Int_t SetCacheSize (Long64_t cachesize=-1);  Set maximum size of the file cache . ;  ; virtual void SetChainOffset (Long64_t offset=0);  ; virtual void SetCircular (Long64_t maxEntries);  Enable/Disable circularity for this tree. ;  ; virtual void SetClusterPrefetch (bool enabled);  ; virtual void SetDebug (Int_t level=1, Long64_t min=0, Long64_t max=9999999);  Set the debug level and the debug range. ;  ; virtual void SetDefaultEntryOffsetLen (Int_t newdefault, bool updateExisting=false);  Update the default value for the branch's fEntryOffsetLen. ;  ; virtual void SetDirectory (TDirectory *dir);  Change the tree's directory. ;  ; virtual Long64_t SetEntries (Long64_t n=-1);  Change number of entries in the tree. ;  ; virtual void SetEntryList (TEntryList *list, Option_t *opt="""");  Set an EntryList. ;  ; virtual void SetEstimate (Long64_t nentries=1000000);  Set number of entries to estimate variable limits. ;  ; virtual void SetEventList (TEventList *list);  This function transfroms the given TEventList into a TEntry",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:23167,Performance,load,loaded,23167," ; virtual void SetEstimate (Long64_t nentries=1000000);  Set number of entries to estimate variable limits. ;  ; virtual void SetEventList (TEventList *list);  This function transfroms the given TEventList into a TEntryList The new TEntryList is owned by the TTree and gets deleted when the tree is deleted. ;  ; virtual void SetFileNumber (Int_t number=0);  Set fFileNumber to number. ;  ; virtual void SetImplicitMT (bool enabled);  ; ROOT::TIOFeatures SetIOFeatures (const ROOT::TIOFeatures &);  Provide the end-user with the ability to enable/disable various experimental IO features for this TTree. ;  ; virtual void SetMakeClass (Int_t make);  Set all the branches in this TTree to be in decomposed object mode (also known as MakeClass mode). ;  ; virtual void SetMaxEntryLoop (Long64_t maxev=kMaxEntries);  ; virtual void SetMaxVirtualSize (Long64_t size=0);  ; void SetName (const char *name) override;  Change the name of this tree. ;  ; virtual void SetNotify (TObject *obj);  Sets the address of the object to be notified when the tree is loaded. ;  ; virtual void SetObject (const char *name, const char *title);  Change the name and title of this tree. ;  ; virtual void SetParallelUnzip (bool opt=true, Float_t RelSize=-1);  Enable or disable parallel unzipping of Tree buffers. ;  ; virtual void SetPerfStats (TVirtualPerfStats *perf);  Set perf stats. ;  ; virtual void SetScanField (Int_t n=50);  Sets the default maximum number of lines to be shown before <CR> when calling Scan(). ;  ; void SetTargetMemoryRatio (Float_t ratio);  ; virtual void SetTimerInterval (Int_t msec=333);  ; virtual void SetTreeIndex (TVirtualIndex *index);  The current TreeIndex is replaced by the new index. ;  ; virtual void SetUpdate (Int_t freq=0);  ; virtual void SetWeight (Double_t w=1, Option_t *option="""");  Set tree weight. ;  ; virtual void Show (Long64_t entry=-1, Int_t lenmax=20);  Print values of all active leaves for entry. ;  ; virtual void StartViewer ();  Start the TTreeViewer on th",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:24181,Performance,cache,cache,24181," is loaded. ;  ; virtual void SetObject (const char *name, const char *title);  Change the name and title of this tree. ;  ; virtual void SetParallelUnzip (bool opt=true, Float_t RelSize=-1);  Enable or disable parallel unzipping of Tree buffers. ;  ; virtual void SetPerfStats (TVirtualPerfStats *perf);  Set perf stats. ;  ; virtual void SetScanField (Int_t n=50);  Sets the default maximum number of lines to be shown before <CR> when calling Scan(). ;  ; void SetTargetMemoryRatio (Float_t ratio);  ; virtual void SetTimerInterval (Int_t msec=333);  ; virtual void SetTreeIndex (TVirtualIndex *index);  The current TreeIndex is replaced by the new index. ;  ; virtual void SetUpdate (Int_t freq=0);  ; virtual void SetWeight (Double_t w=1, Option_t *option="""");  Set tree weight. ;  ; virtual void Show (Long64_t entry=-1, Int_t lenmax=20);  Print values of all active leaves for entry. ;  ; virtual void StartViewer ();  Start the TTreeViewer on this tree. ;  ; virtual Int_t StopCacheLearningPhase ();  Stop the cache learning phase. ;  ; void Streamer (TBuffer &) override;  Stream a class object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Int_t UnbinnedFit (const char *funcname, const char *varexp, const char *selection="""", Option_t *option="""", Long64_t nentries=kMaxEntries, Long64_t firstentry=0);  Unbinned fit of one or more variable(s) from a tree. ;  ; void UseCurrentStyle () override;  Replace current attributes by current style. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write this object to the current directory. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:40554,Performance,cache,cache,40554,"EDataType datatype, std::size_t N, void *addobj, Int_t bufsize, Int_t splitlevel);  ; virtual TBranch * BranchImpRef (const char *branchname, const char *classname, TClass *ptrClass, void *addobj, Int_t bufsize, Int_t splitlevel);  Same as TTree::Branch but automatic detection of the class name. ;  ; virtual TBranch * BranchImpRef (const char *branchname, TClass *ptrClass, EDataType datatype, void *addobj, Int_t bufsize, Int_t splitlevel);  Same as TTree::Branch but automatic detection of the class name. ;  ; virtual TBranch * BronchExec (const char *name, const char *classname, void *addobj, bool isptrptr, Int_t bufsize, Int_t splitlevel);  Helper function implementing TTree::Bronch and TTree::Branch(const char *name, T &obj);. ;  ; virtual Int_t CheckBranchAddressType (TBranch *branch, TClass *ptrClass, EDataType datatype, bool ptr);  Check whether or not the address described by the last 3 parameters matches the content of the branch. ;  ; Long64_t GetCacheAutoSize (bool withDefault=false);  Used for automatic sizing of the cache. ;  ; virtual TLeaf * GetLeafImpl (const char *branchname, const char *leafname);  Return pointer to the 1st Leaf named name in any Branch of this Tree or any branch in the list of friend trees. ;  ; char GetNewlineValue (std::istream &inputStream);  Determine which newline this file is using. ;  ; void ImportClusterRanges (TTree *fromtree);  Appends the cluster range information stored in 'fromtree' to this tree, including the value of fAutoFlush. ;  ; virtual void KeepCircular ();  Keep a maximum of fMaxEntries in memory. ;  ; void MoveReadCache (TFile *src, TDirectory *dir);  Move a cache from a file to the current file in dir. ;  ; Int_t SetBranchAddressImp (TBranch *branch, void *addr, TBranch **ptr);  Change branch address, dealing with clone trees properly. ;  ; Int_t SetCacheSizeAux (bool autocache=true, Long64_t cacheSize=0);  Set the size of the file cache and create it if possible. ;  ;  Protected Member Functions inherited fr",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:41153,Performance,cache,cache,41153,"t_t splitlevel);  Helper function implementing TTree::Bronch and TTree::Branch(const char *name, T &obj);. ;  ; virtual Int_t CheckBranchAddressType (TBranch *branch, TClass *ptrClass, EDataType datatype, bool ptr);  Check whether or not the address described by the last 3 parameters matches the content of the branch. ;  ; Long64_t GetCacheAutoSize (bool withDefault=false);  Used for automatic sizing of the cache. ;  ; virtual TLeaf * GetLeafImpl (const char *branchname, const char *leafname);  Return pointer to the 1st Leaf named name in any Branch of this Tree or any branch in the list of friend trees. ;  ; char GetNewlineValue (std::istream &inputStream);  Determine which newline this file is using. ;  ; void ImportClusterRanges (TTree *fromtree);  Appends the cluster range information stored in 'fromtree' to this tree, including the value of fAutoFlush. ;  ; virtual void KeepCircular ();  Keep a maximum of fMaxEntries in memory. ;  ; void MoveReadCache (TFile *src, TDirectory *dir);  Move a cache from a file to the current file in dir. ;  ; Int_t SetBranchAddressImp (TBranch *branch, void *addr, TBranch **ptr);  Change branch address, dealing with clone trees properly. ;  ; Int_t SetCacheSizeAux (bool autocache=true, Long64_t cacheSize=0);  Set the size of the file cache and create it if possible. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t * fArgs;  ! [fNvar] Array of variables ;  ; Int_t fNvar;  Number of columns. ;  ;  Protected Attributes inherited from TTree; TList * fAliases;  List of aliases for expressions based on the tree branches. ;  ; std::atomic< UInt_t > fAllocationCount {0};  indicates basket should be resized to exact memory usage, but causes significant ;  ; Long64_t fAutoFlush;  Auto-flush tree when fAutoFlush entries written or -fAutoFlush (comp",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:41393,Performance,cache,cacheSize,41393,"bed by the last 3 parameters matches the content of the branch. ;  ; Long64_t GetCacheAutoSize (bool withDefault=false);  Used for automatic sizing of the cache. ;  ; virtual TLeaf * GetLeafImpl (const char *branchname, const char *leafname);  Return pointer to the 1st Leaf named name in any Branch of this Tree or any branch in the list of friend trees. ;  ; char GetNewlineValue (std::istream &inputStream);  Determine which newline this file is using. ;  ; void ImportClusterRanges (TTree *fromtree);  Appends the cluster range information stored in 'fromtree' to this tree, including the value of fAutoFlush. ;  ; virtual void KeepCircular ();  Keep a maximum of fMaxEntries in memory. ;  ; void MoveReadCache (TFile *src, TDirectory *dir);  Move a cache from a file to the current file in dir. ;  ; Int_t SetBranchAddressImp (TBranch *branch, void *addr, TBranch **ptr);  Change branch address, dealing with clone trees properly. ;  ; Int_t SetCacheSizeAux (bool autocache=true, Long64_t cacheSize=0);  Set the size of the file cache and create it if possible. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t * fArgs;  ! [fNvar] Array of variables ;  ; Int_t fNvar;  Number of columns. ;  ;  Protected Attributes inherited from TTree; TList * fAliases;  List of aliases for expressions based on the tree branches. ;  ; std::atomic< UInt_t > fAllocationCount {0};  indicates basket should be resized to exact memory usage, but causes significant ;  ; Long64_t fAutoFlush;  Auto-flush tree when fAutoFlush entries written or -fAutoFlush (compressed) bytes produced. ;  ; Long64_t fAutoSave;  Autosave tree when fAutoSave entries written or -fAutoSave (compressed) bytes produced. ;  ; TObjArray fBranches;  List of Branches. ;  ; TBranchRef * fBranchRef;  Branch supporting the TRefTable (if any) ;",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:41433,Performance,cache,cache,41433,"bed by the last 3 parameters matches the content of the branch. ;  ; Long64_t GetCacheAutoSize (bool withDefault=false);  Used for automatic sizing of the cache. ;  ; virtual TLeaf * GetLeafImpl (const char *branchname, const char *leafname);  Return pointer to the 1st Leaf named name in any Branch of this Tree or any branch in the list of friend trees. ;  ; char GetNewlineValue (std::istream &inputStream);  Determine which newline this file is using. ;  ; void ImportClusterRanges (TTree *fromtree);  Appends the cluster range information stored in 'fromtree' to this tree, including the value of fAutoFlush. ;  ; virtual void KeepCircular ();  Keep a maximum of fMaxEntries in memory. ;  ; void MoveReadCache (TFile *src, TDirectory *dir);  Move a cache from a file to the current file in dir. ;  ; Int_t SetBranchAddressImp (TBranch *branch, void *addr, TBranch **ptr);  Change branch address, dealing with clone trees properly. ;  ; Int_t SetCacheSizeAux (bool autocache=true, Long64_t cacheSize=0);  Set the size of the file cache and create it if possible. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t * fArgs;  ! [fNvar] Array of variables ;  ; Int_t fNvar;  Number of columns. ;  ;  Protected Attributes inherited from TTree; TList * fAliases;  List of aliases for expressions based on the tree branches. ;  ; std::atomic< UInt_t > fAllocationCount {0};  indicates basket should be resized to exact memory usage, but causes significant ;  ; Long64_t fAutoFlush;  Auto-flush tree when fAutoFlush entries written or -fAutoFlush (compressed) bytes produced. ;  ; Long64_t fAutoSave;  Autosave tree when fAutoSave entries written or -fAutoSave (compressed) bytes produced. ;  ; TObjArray fBranches;  List of Branches. ;  ; TBranchRef * fBranchRef;  Branch supporting the TRefTable (if any) ;",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:42438,Performance,cache,cache,42438,"orHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t * fArgs;  ! [fNvar] Array of variables ;  ; Int_t fNvar;  Number of columns. ;  ;  Protected Attributes inherited from TTree; TList * fAliases;  List of aliases for expressions based on the tree branches. ;  ; std::atomic< UInt_t > fAllocationCount {0};  indicates basket should be resized to exact memory usage, but causes significant ;  ; Long64_t fAutoFlush;  Auto-flush tree when fAutoFlush entries written or -fAutoFlush (compressed) bytes produced. ;  ; Long64_t fAutoSave;  Autosave tree when fAutoSave entries written or -fAutoSave (compressed) bytes produced. ;  ; TObjArray fBranches;  List of Branches. ;  ; TBranchRef * fBranchRef;  Branch supporting the TRefTable (if any) ;  ; bool fCacheDoAutoInit;  ! true if cache auto creation or resize check is needed ;  ; bool fCacheDoClusterPrefetch;  ! true if cache is prefetching whole clusters ;  ; Long64_t fCacheSize;  ! Maximum size of file buffers ;  ; bool fCacheUserSet;  ! true if the cache setting was explicitly given by user ;  ; Long64_t fChainOffset;  ! Offset of 1st entry of this Tree in a TChain ;  ; TList * fClones;  ! List of cloned trees which share our addresses ;  ; Long64_t * fClusterRangeEnd;  [fNClusterRange] Last entry of a cluster range. ;  ; Long64_t * fClusterSize;  [fNClusterRange] Number of entries in each cluster for a given range. ;  ; Int_t fDebug;  ! Debug level ;  ; Long64_t fDebugMax;  ! Last entry number to debug ;  ; Long64_t fDebugMin;  ! First entry number to debug ;  ; Int_t fDefaultEntryOffsetLen;  Initial Length of fEntryOffset table in the basket buffers. ;  ; TDirectory * fDirectory;  ! Pointer to directory holding this tree ;  ; Long64_t fEntries;  Number of entries. ;  ; TEntryList * fEntryList;  ! Pointer to event selection list (if one) ;  ; Long64_t fEstimate;  Number of entries to estimate histogram limits. ;  ; TEventList * fEventList;  ! Pointer to event selection list (if one) ;  ; TList * f",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:42530,Performance,cache,cache,42530,"orHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t * fArgs;  ! [fNvar] Array of variables ;  ; Int_t fNvar;  Number of columns. ;  ;  Protected Attributes inherited from TTree; TList * fAliases;  List of aliases for expressions based on the tree branches. ;  ; std::atomic< UInt_t > fAllocationCount {0};  indicates basket should be resized to exact memory usage, but causes significant ;  ; Long64_t fAutoFlush;  Auto-flush tree when fAutoFlush entries written or -fAutoFlush (compressed) bytes produced. ;  ; Long64_t fAutoSave;  Autosave tree when fAutoSave entries written or -fAutoSave (compressed) bytes produced. ;  ; TObjArray fBranches;  List of Branches. ;  ; TBranchRef * fBranchRef;  Branch supporting the TRefTable (if any) ;  ; bool fCacheDoAutoInit;  ! true if cache auto creation or resize check is needed ;  ; bool fCacheDoClusterPrefetch;  ! true if cache is prefetching whole clusters ;  ; Long64_t fCacheSize;  ! Maximum size of file buffers ;  ; bool fCacheUserSet;  ! true if the cache setting was explicitly given by user ;  ; Long64_t fChainOffset;  ! Offset of 1st entry of this Tree in a TChain ;  ; TList * fClones;  ! List of cloned trees which share our addresses ;  ; Long64_t * fClusterRangeEnd;  [fNClusterRange] Last entry of a cluster range. ;  ; Long64_t * fClusterSize;  [fNClusterRange] Number of entries in each cluster for a given range. ;  ; Int_t fDebug;  ! Debug level ;  ; Long64_t fDebugMax;  ! Last entry number to debug ;  ; Long64_t fDebugMin;  ! First entry number to debug ;  ; Int_t fDefaultEntryOffsetLen;  Initial Length of fEntryOffset table in the basket buffers. ;  ; TDirectory * fDirectory;  ! Pointer to directory holding this tree ;  ; Long64_t fEntries;  Number of entries. ;  ; TEntryList * fEntryList;  ! Pointer to event selection list (if one) ;  ; Long64_t fEstimate;  Number of entries to estimate histogram limits. ;  ; TEventList * fEventList;  ! Pointer to event selection list (if one) ;  ; TList * f",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:42664,Performance,cache,cache,42664,"orHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t * fArgs;  ! [fNvar] Array of variables ;  ; Int_t fNvar;  Number of columns. ;  ;  Protected Attributes inherited from TTree; TList * fAliases;  List of aliases for expressions based on the tree branches. ;  ; std::atomic< UInt_t > fAllocationCount {0};  indicates basket should be resized to exact memory usage, but causes significant ;  ; Long64_t fAutoFlush;  Auto-flush tree when fAutoFlush entries written or -fAutoFlush (compressed) bytes produced. ;  ; Long64_t fAutoSave;  Autosave tree when fAutoSave entries written or -fAutoSave (compressed) bytes produced. ;  ; TObjArray fBranches;  List of Branches. ;  ; TBranchRef * fBranchRef;  Branch supporting the TRefTable (if any) ;  ; bool fCacheDoAutoInit;  ! true if cache auto creation or resize check is needed ;  ; bool fCacheDoClusterPrefetch;  ! true if cache is prefetching whole clusters ;  ; Long64_t fCacheSize;  ! Maximum size of file buffers ;  ; bool fCacheUserSet;  ! true if the cache setting was explicitly given by user ;  ; Long64_t fChainOffset;  ! Offset of 1st entry of this Tree in a TChain ;  ; TList * fClones;  ! List of cloned trees which share our addresses ;  ; Long64_t * fClusterRangeEnd;  [fNClusterRange] Last entry of a cluster range. ;  ; Long64_t * fClusterSize;  [fNClusterRange] Number of entries in each cluster for a given range. ;  ; Int_t fDebug;  ! Debug level ;  ; Long64_t fDebugMax;  ! Last entry number to debug ;  ; Long64_t fDebugMin;  ! First entry number to debug ;  ; Int_t fDefaultEntryOffsetLen;  Initial Length of fEntryOffset table in the basket buffers. ;  ; TDirectory * fDirectory;  ! Pointer to directory holding this tree ;  ; Long64_t fEntries;  Number of entries. ;  ; TEntryList * fEntryList;  ! Pointer to event selection list (if one) ;  ; Long64_t fEstimate;  Number of entries to estimate histogram limits. ;  ; TEventList * fEventList;  ! Pointer to event selection list (if one) ;  ; TList * f",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:44063,Performance,multi-thread,multi-threading,44063, cluster for a given range. ;  ; Int_t fDebug;  ! Debug level ;  ; Long64_t fDebugMax;  ! Last entry number to debug ;  ; Long64_t fDebugMin;  ! First entry number to debug ;  ; Int_t fDefaultEntryOffsetLen;  Initial Length of fEntryOffset table in the basket buffers. ;  ; TDirectory * fDirectory;  ! Pointer to directory holding this tree ;  ; Long64_t fEntries;  Number of entries. ;  ; TEntryList * fEntryList;  ! Pointer to event selection list (if one) ;  ; Long64_t fEstimate;  Number of entries to estimate histogram limits. ;  ; TEventList * fEventList;  ! Pointer to event selection list (if one) ;  ; TList * fExternalFriends;  ! List of TFriendsElement pointing to us and need to be notified of LoadTree. Content not owned. ;  ; Int_t fFileNumber;  ! current file number (if file extensions) ;  ; Long64_t fFlushedBytes;  Number of auto-flushed bytes. ;  ; UInt_t fFriendLockStatus;  ! Record which method is locking the friend recursion ;  ; TList * fFriends;  pointer to list of friend elements ;  ; bool fIMTEnabled;  ! true if implicit multi-threading is enabled for this tree ;  ; TArrayI fIndex;  Index of sorted values. ;  ; TArrayD fIndexValues;  Sorted index values. ;  ; TIOFeatures fIOFeatures {0};  IO features to define for newly-written baskets and branches. ;  ; TObjArray fLeaves;  Direct pointers to individual branch leaves. ;  ; Int_t fMakeClass;  ! not zero when processing code generated by MakeClass ;  ; Int_t fMaxClusterRange;  ! Memory allocated for the cluster range. ;  ; Long64_t fMaxEntries;  Maximum number of entries in case of circular buffers. ;  ; Long64_t fMaxEntryLoop;  Maximum number of entries to process. ;  ; Long64_t fMaxVirtualSize;  Maximum total size of buffers kept in memory. ;  ; Int_t fNClusterRange;  Number of Cluster range in addition to the one defined by 'AutoFlush'. ;  ; UInt_t fNEntriesSinceSorting;  ! Number of entries processed since the last re-sorting of branches ;  ; Int_t fNfill;  ! Local for EntryLoop ;  ; TObject * fNotif,MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:45043,Performance,load,loading,45043,"recursion ;  ; TList * fFriends;  pointer to list of friend elements ;  ; bool fIMTEnabled;  ! true if implicit multi-threading is enabled for this tree ;  ; TArrayI fIndex;  Index of sorted values. ;  ; TArrayD fIndexValues;  Sorted index values. ;  ; TIOFeatures fIOFeatures {0};  IO features to define for newly-written baskets and branches. ;  ; TObjArray fLeaves;  Direct pointers to individual branch leaves. ;  ; Int_t fMakeClass;  ! not zero when processing code generated by MakeClass ;  ; Int_t fMaxClusterRange;  ! Memory allocated for the cluster range. ;  ; Long64_t fMaxEntries;  Maximum number of entries in case of circular buffers. ;  ; Long64_t fMaxEntryLoop;  Maximum number of entries to process. ;  ; Long64_t fMaxVirtualSize;  Maximum total size of buffers kept in memory. ;  ; Int_t fNClusterRange;  Number of Cluster range in addition to the one defined by 'AutoFlush'. ;  ; UInt_t fNEntriesSinceSorting;  ! Number of entries processed since the last re-sorting of branches ;  ; Int_t fNfill;  ! Local for EntryLoop ;  ; TObject * fNotify;  Object to be notified when loading a Tree. ;  ; Int_t fPacketSize;  ! Number of entries in one packet for parallel root ;  ; TVirtualPerfStats * fPerfStats;  ! pointer to the current perf stats object ;  ; TVirtualTreePlayer * fPlayer;  ! Pointer to current Tree player ;  ; Long64_t fReadEntry;  ! Number of the entry being processed ;  ; Long64_t fSavedBytes;  Number of autosaved bytes. ;  ; Int_t fScanField;  Number of runs before prompting in Scan. ;  ; std::vector< TBranch * > fSeqBranches;  ! Branches to be processed sequentially when IMT is on ;  ; std::vector< std::pair< Long64_t, TBranch * > > fSortedBranches;  ! Branches to be processed in parallel when IMT is on, sorted by average task time ;  ; Float_t fTargetMemoryRatio {1.1f};  ! Ratio for memory usage in uncompressed buffers versus actual occupancy. ;  ; Int_t fTimerInterval;  Timer interval in milliseconds. ;  ; std::atomic< Long64_t > fTotalBuffers;  ! Tota",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:19976,Safety,recover,recover,19976,"ain) ;  ; virtual void RemoveExternalFriend (TFriendElement *);  Removes external friend. ;  ; virtual void RemoveFriend (TTree *);  Remove a friend from the list of friends. ;  ; virtual void Reset (Option_t *option="""");  Reset baskets, buffers and entries count in all branches and leaves. ;  ; virtual void ResetAfterMerge (TFileMergeInfo *);  Resets the state of this TTree after a merge (keep the customization but forget the data). ;  ; virtual Long64_t Scan (const char *varexp="""", const char *selection="""", Option_t *option="""", Long64_t nentries=kMaxEntries, Long64_t firstentry=0);  Loop over tree entries and print entries passing selection. ;  ; virtual bool SetAlias (const char *aliasName, const char *aliasFormula);  Set a tree variable alias. ;  ; virtual void SetAutoFlush (Long64_t autof=-30000000);  This function may be called at the start of a program to change the default value for fAutoFlush. ;  ; virtual void SetAutoSave (Long64_t autos=-300000000);  In case of a program crash, it will be possible to recover the data in the tree up to the last AutoSave point. ;  ; virtual void SetBasketSize (const char *bname, Int_t buffsize=16000);  Set a branch's basket size. ;  ; template<class T > ; Int_t SetBranchAddress (const char *bname, T **add, TBranch **ptr=nullptr);  ; template<class T > ; Int_t SetBranchAddress (const char *bname, T *add, TBranch **ptr=nullptr);  ; virtual Int_t SetBranchAddress (const char *bname, void *add, TBranch **ptr, TClass *realClass, EDataType datatype, bool isptr);  Verify the validity of the type of addr before calling SetBranchAddress. ;  ; virtual Int_t SetBranchAddress (const char *bname, void *add, TBranch **ptr=nullptr);  Change branch address, dealing with clone trees properly. ;  ; virtual Int_t SetBranchAddress (const char *bname, void *add, TClass *realClass, EDataType datatype, bool isptr);  Verify the validity of the type of addr before calling SetBranchAddress. ;  ; virtual void SetBranchStatus (const char *bname, bool s",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:39421,Safety,detect,detection,39421,"  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  . Protected Member Functions; Int_t Fill () override;  Fill a Ntuple with current values in fArgs. ;  ;  Protected Member Functions inherited from TTree; virtual TBranch * BranchImp (const char *branchname, const char *classname, TClass *ptrClass, void *addobj, Int_t bufsize, Int_t splitlevel);  Same as TTree::Branch() with added check that addobj matches className. ;  ; virtual TBranch * BranchImp (const char *branchname, TClass *ptrClass, void *addobj, Int_t bufsize, Int_t splitlevel);  Same as TTree::Branch but automatic detection of the class name. ;  ; virtual TBranch * BranchImpArr (const char *branchname, EDataType datatype, std::size_t N, void *addobj, Int_t bufsize, Int_t splitlevel);  ; virtual TBranch * BranchImpRef (const char *branchname, const char *classname, TClass *ptrClass, void *addobj, Int_t bufsize, Int_t splitlevel);  Same as TTree::Branch but automatic detection of the class name. ;  ; virtual TBranch * BranchImpRef (const char *branchname, TClass *ptrClass, EDataType datatype, void *addobj, Int_t bufsize, Int_t splitlevel);  Same as TTree::Branch but automatic detection of the class name. ;  ; virtual TBranch * BronchExec (const char *name, const char *classname, void *addobj, bool isptrptr, Int_t bufsize, Int_t splitlevel);  Helper function implementing TTree::Bronch and TTree::Branch(const char *name, T &obj);. ;  ; virtual Int_t CheckBranchAddressType (TBranch *branch, TClass *ptrClass, EDataType datatype, bool p",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:39779,Safety,detect,detection,39779,"rnal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  . Protected Member Functions; Int_t Fill () override;  Fill a Ntuple with current values in fArgs. ;  ;  Protected Member Functions inherited from TTree; virtual TBranch * BranchImp (const char *branchname, const char *classname, TClass *ptrClass, void *addobj, Int_t bufsize, Int_t splitlevel);  Same as TTree::Branch() with added check that addobj matches className. ;  ; virtual TBranch * BranchImp (const char *branchname, TClass *ptrClass, void *addobj, Int_t bufsize, Int_t splitlevel);  Same as TTree::Branch but automatic detection of the class name. ;  ; virtual TBranch * BranchImpArr (const char *branchname, EDataType datatype, std::size_t N, void *addobj, Int_t bufsize, Int_t splitlevel);  ; virtual TBranch * BranchImpRef (const char *branchname, const char *classname, TClass *ptrClass, void *addobj, Int_t bufsize, Int_t splitlevel);  Same as TTree::Branch but automatic detection of the class name. ;  ; virtual TBranch * BranchImpRef (const char *branchname, TClass *ptrClass, EDataType datatype, void *addobj, Int_t bufsize, Int_t splitlevel);  Same as TTree::Branch but automatic detection of the class name. ;  ; virtual TBranch * BronchExec (const char *name, const char *classname, void *addobj, bool isptrptr, Int_t bufsize, Int_t splitlevel);  Helper function implementing TTree::Bronch and TTree::Branch(const char *name, T &obj);. ;  ; virtual Int_t CheckBranchAddressType (TBranch *branch, TClass *ptrClass, EDataType datatype, bool ptr);  Check whether or not the address described by the last 3 parameters matches the content of the branch. ;  ; Long64_t GetCacheAutoSize (bool withDefault=false);  Used for automatic sizing of the cache. ;  ; virtual TLeaf * GetLeafImpl (const char *branchname, const cha",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:39992,Safety,detect,detection,39992,"ctions; Int_t Fill () override;  Fill a Ntuple with current values in fArgs. ;  ;  Protected Member Functions inherited from TTree; virtual TBranch * BranchImp (const char *branchname, const char *classname, TClass *ptrClass, void *addobj, Int_t bufsize, Int_t splitlevel);  Same as TTree::Branch() with added check that addobj matches className. ;  ; virtual TBranch * BranchImp (const char *branchname, TClass *ptrClass, void *addobj, Int_t bufsize, Int_t splitlevel);  Same as TTree::Branch but automatic detection of the class name. ;  ; virtual TBranch * BranchImpArr (const char *branchname, EDataType datatype, std::size_t N, void *addobj, Int_t bufsize, Int_t splitlevel);  ; virtual TBranch * BranchImpRef (const char *branchname, const char *classname, TClass *ptrClass, void *addobj, Int_t bufsize, Int_t splitlevel);  Same as TTree::Branch but automatic detection of the class name. ;  ; virtual TBranch * BranchImpRef (const char *branchname, TClass *ptrClass, EDataType datatype, void *addobj, Int_t bufsize, Int_t splitlevel);  Same as TTree::Branch but automatic detection of the class name. ;  ; virtual TBranch * BronchExec (const char *name, const char *classname, void *addobj, bool isptrptr, Int_t bufsize, Int_t splitlevel);  Helper function implementing TTree::Bronch and TTree::Branch(const char *name, T &obj);. ;  ; virtual Int_t CheckBranchAddressType (TBranch *branch, TClass *ptrClass, EDataType datatype, bool ptr);  Check whether or not the address described by the last 3 parameters matches the content of the branch. ;  ; Long64_t GetCacheAutoSize (bool withDefault=false);  Used for automatic sizing of the cache. ;  ; virtual TLeaf * GetLeafImpl (const char *branchname, const char *leafname);  Return pointer to the 1st Leaf named name in any Branch of this Tree or any branch in the list of friend trees. ;  ; char GetNewlineValue (std::istream &inputStream);  Determine which newline this file is using. ;  ; void ImportClusterRanges (TTree *fromtree);  Appends t",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:25816,Security,hash,hash,25816,"nst char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object ",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:345,Usability,simpl,simple,345,". ROOT: TNtupleD Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TNtupleD Class ReferenceTree Library. ; A simple TTree restricted to a list of double variables only. ; Each variable goes to a separate branch.; A Ntuple is created via TNtupleD(name,title,varlist,bufsize); namechar name[80]Definition TGX11.cxx:110; TNtupleD::TNtupleDTNtupleD()Default constructor for Ntuple.Definition TNtupleD.cxx:45; It is filled via: TNtupleD::Fill(*x) or; TNtupleD::Fill(v1,v2,v3.....); TNtupleD::FillInt_t Fill() overrideFill a Ntuple with current values in fArgs.Definition TNtupleD.cxx:150; xDouble_t x[n]Definition legend1.C:17; v2@ v2Definition rootcling_impl.cxx:3702; v3@ v3Definition rootcling_impl.cxx:3703; v1@ v1Definition rootcling_impl.cxx:3701. Definition at line 28 of file TNtupleD.h. Public Member Functions;  TNtupleD ();  Default constructor for Ntuple. ;  ;  TNtupleD (const char *name, const char *title, const char *varlist, Int_t bufsize=32000);  Create an Ntuple. ;  ;  ~TNtupleD () override;  Default destructor for an Ntuple. ;  ; void Browse (TBrowser *b) override;  Browse content. ;  ; virtual Int_t Fill (const Double_t *x);  Fill a Ntuple with an array of floats. ;  ; virtual Int_t Fill (Double_t x0, Double_t x1, Double_t x2=0, Double_t x3=0, Double_t x4=0, Double_t x5=0, Double_t x6=0, Double_t x7=0, Double_t x8=0, Double_t x9=0, Double_t x10=0, Double_t x11=0, Double_t x12=0, Double_t x13=0, Double_t x14=0);  Fill a Ntuple: Each Ntuple item is an argument. ;  ; Double_t * GetArgs () const;  ; virtual Int_t GetNvar () const;  ; TClass * IsA () const override;  ; Long64_t ReadStream (std::istream &inputstream, const char *branchDescriptor="""", char delimiter=' ') override;  Read from filename as many columns as variables in the ntupl",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:6734,Usability,undo,undo,6734,"e, const char *classname, void *addobj, Int_t bufsize=32000, Int_t splitlevel=1);  Create a new TTree BranchObject. ;  ; virtual TBranch * BranchRef ();  Build the optional branch supporting the TRefTable. ;  ; virtual TBranch * Bronch (const char *name, const char *classname, void *addobj, Int_t bufsize=32000, Int_t splitlevel=99);  Create a new TTree BranchElement. ;  ; void Browse (TBrowser *) override;  Browse content of the TTree. ;  ; virtual Int_t BuildIndex (const char *majorname, const char *minorname=""0"");  Build a Tree Index (default is TTreeIndex). ;  ; TStreamerInfo * BuildStreamerInfo (TClass *cl, void *pointer=nullptr, bool canOptimize=true);  Build StreamerInfo for class cl. ;  ; virtual TFile * ChangeFile (TFile *file);  Called by TTree::Fill() when file has reached its maximum fgMaxTreeSize. ;  ; virtual TTree * CloneTree (Long64_t nentries=-1, Option_t *option="""");  Create a clone of this tree and copy nentries. ;  ; virtual void CopyAddresses (TTree *, bool undo=false);  Set branch addresses of passed tree equal to ours. ;  ; virtual Long64_t CopyEntries (TTree *tree, Long64_t nentries=-1, Option_t *option="""", bool needCopyAddresses=false);  Copy nentries from given tree to this tree. ;  ; virtual TTree * CopyTree (const char *selection, Option_t *option="""", Long64_t nentries=kMaxEntries, Long64_t firstentry=0);  Copy a tree with selection. ;  ; virtual TBasket * CreateBasket (TBranch *);  Create a basket for this tree and given branch. ;  ; Int_t Debug () const;  ; void Delete (Option_t *option="""") override;  Delete this tree from memory or/and disk. ;  ; virtual void DirectoryAutoAdd (TDirectory *);  Called by TKey and TObject::Clone to automatically add us to a directory when we are read from a file. ;  ; virtual Long64_t Draw (const char *varexp, const char *selection, Option_t *option="""", Long64_t nentries=kMaxEntries, Long64_t firstentry=0);  Draw expression varexp for entries and objects that pass a (optional) selection. ;  ; virtual Long6",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:18442,Usability,simpl,simply,18442,"const;  Print statistics about the TreeCache for this tree. ;  ; virtual Long64_t Process (const char *filename, Option_t *option="""", Long64_t nentries=kMaxEntries, Long64_t firstentry=0);  Process this tree executing the TSelector code in the specified filename. ;  ; virtual Long64_t Process (TSelector *selector, Option_t *option="""", Long64_t nentries=kMaxEntries, Long64_t firstentry=0);  Process this tree executing the code in the specified selector. ;  ; virtual Long64_t Project (const char *hname, const char *varexp, const char *selection="""", Option_t *option="""", Long64_t nentries=kMaxEntries, Long64_t firstentry=0);  Make a projection of a tree using selections. ;  ; virtual TSQLResult * Query (const char *varexp="""", const char *selection="""", Option_t *option="""", Long64_t nentries=kMaxEntries, Long64_t firstentry=0);  Loop over entries and return a TSQLResult object containing entries following selection. ;  ; virtual Long64_t ReadFile (const char *filename, const char *branchDescriptor="""", char delimiter=' ');  Create or simply read branches from filename. ;  ; void RecursiveRemove (TObject *obj) override;  Make sure that obj (which is being deleted or will soon be) is no longer referenced by this TTree. ;  ; virtual void Refresh ();  Refresh contents of this tree and its branches from the current status on disk. ;  ; virtual void RegisterExternalFriend (TFriendElement *);  Record a TFriendElement that we need to warn when the chain switches to a new file (typically this is because this chain is a friend of another TChain) ;  ; virtual void RemoveExternalFriend (TFriendElement *);  Removes external friend. ;  ; virtual void RemoveFriend (TTree *);  Remove a friend from the list of friends. ;  ; virtual void Reset (Option_t *option="""");  Reset baskets, buffers and entries count in all branches and leaves. ;  ; virtual void ResetAfterMerge (TFileMergeInfo *);  Resets the state of this TTree after a merge (keep the customization but forget the data). ;  ; virtual ",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:21273,Usability,learn,learning,21273,"T > ; Int_t SetBranchAddress (const char *bname, T **add, TBranch **ptr=nullptr);  ; template<class T > ; Int_t SetBranchAddress (const char *bname, T *add, TBranch **ptr=nullptr);  ; virtual Int_t SetBranchAddress (const char *bname, void *add, TBranch **ptr, TClass *realClass, EDataType datatype, bool isptr);  Verify the validity of the type of addr before calling SetBranchAddress. ;  ; virtual Int_t SetBranchAddress (const char *bname, void *add, TBranch **ptr=nullptr);  Change branch address, dealing with clone trees properly. ;  ; virtual Int_t SetBranchAddress (const char *bname, void *add, TClass *realClass, EDataType datatype, bool isptr);  Verify the validity of the type of addr before calling SetBranchAddress. ;  ; virtual void SetBranchStatus (const char *bname, bool status=true, UInt_t *found=nullptr);  Set branch status to Process or DoNotProcess. ;  ; virtual Int_t SetCacheEntryRange (Long64_t first, Long64_t last);  interface to TTreeCache to set the cache entry range ;  ; virtual void SetCacheLearnEntries (Int_t n=10);  Interface to TTreeCache to set the number of entries for the learning phase. ;  ; virtual Int_t SetCacheSize (Long64_t cachesize=-1);  Set maximum size of the file cache . ;  ; virtual void SetChainOffset (Long64_t offset=0);  ; virtual void SetCircular (Long64_t maxEntries);  Enable/Disable circularity for this tree. ;  ; virtual void SetClusterPrefetch (bool enabled);  ; virtual void SetDebug (Int_t level=1, Long64_t min=0, Long64_t max=9999999);  Set the debug level and the debug range. ;  ; virtual void SetDefaultEntryOffsetLen (Int_t newdefault, bool updateExisting=false);  Update the default value for the branch's fEntryOffsetLen. ;  ; virtual void SetDirectory (TDirectory *dir);  Change the tree's directory. ;  ; virtual Long64_t SetEntries (Long64_t n=-1);  Change number of entries in the tree. ;  ; virtual void SetEntryList (TEntryList *list, Option_t *opt="""");  Set an EntryList. ;  ; virtual void SetEstimate (Long64_t nentri",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTNtupleD.html:24187,Usability,learn,learning,24187," is loaded. ;  ; virtual void SetObject (const char *name, const char *title);  Change the name and title of this tree. ;  ; virtual void SetParallelUnzip (bool opt=true, Float_t RelSize=-1);  Enable or disable parallel unzipping of Tree buffers. ;  ; virtual void SetPerfStats (TVirtualPerfStats *perf);  Set perf stats. ;  ; virtual void SetScanField (Int_t n=50);  Sets the default maximum number of lines to be shown before <CR> when calling Scan(). ;  ; void SetTargetMemoryRatio (Float_t ratio);  ; virtual void SetTimerInterval (Int_t msec=333);  ; virtual void SetTreeIndex (TVirtualIndex *index);  The current TreeIndex is replaced by the new index. ;  ; virtual void SetUpdate (Int_t freq=0);  ; virtual void SetWeight (Double_t w=1, Option_t *option="""");  Set tree weight. ;  ; virtual void Show (Long64_t entry=-1, Int_t lenmax=20);  Print values of all active leaves for entry. ;  ; virtual void StartViewer ();  Start the TTreeViewer on this tree. ;  ; virtual Int_t StopCacheLearningPhase ();  Stop the cache learning phase. ;  ; void Streamer (TBuffer &) override;  Stream a class object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Int_t UnbinnedFit (const char *funcname, const char *varexp, const char *selection="""", Option_t *option="""", Long64_t nentries=kMaxEntries, Long64_t firstentry=0);  Unbinned fit of one or more variable(s) from a tree. ;  ; void UseCurrentStyle () override;  Replace current attributes by current style. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write this object to the current directory. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ",MatchSource.WIKI,doc/master/classTNtupleD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTNtupleD.html
https://root.cern/doc/master/classTObjArray-members.html:2612,Availability,error,error,2612," TObject *obj) const overrideTCollectionvirtual; Compress()TObjArrayvirtual; Contains(const char *name) constTCollectioninline; Contains(const TObject *obj) constTCollectioninline; Copy(TObject &object) constTObjectvirtual; DeclFileName()TObjArrayinlinestatic; Delete(Option_t *option="""") overrideTObjArrayvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""") overrideTCollectionvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() const overrideTCollectionvirtual; EDeprecatedStatusBits enum nameTObject; EmptyGarbageCollection()TCollectionstatic; end() constTCollectioninline; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTCollectionprotected; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Expand(Int_t newSize)TObjArrayvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fContTObjArrayprotected; fgCurrentCollectionTCollectionprivatestatic; fgDtorOnlyTObjectprivatestatic; fgEmptyingGarbageTCollectionprivatestatic; fgGarbageCollectionTCollectionprivatestatic; fgGarbageStackTCollectionprivatestatic; fgObjectStatTObjectprivatestatic; FindObject(const char *name) const overrideTObjArrayvirtual; FindObject(const TObject *obj) const overrideTObjArrayvirtual; First() const overrideTObjArrayvirtual; fLastTObjArrayprotected; fLowerBoundTObjArrayprotected; fNameTCollectionprotected; fSizeTCollectionprotected; fSortedTSeqCollectionprotected; fUniqueIDTObjectprivate; GarbageCollect(TObject *obj)TCollectionstatic; GetAbsLast() constTObjArrayprotected; GetCollectionEntryName(TObject *entry) constTCollectionprotectedvirtual; GetCurrentCo",MatchSource.WIKI,doc/master/classTObjArray-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjArray-members.html
https://root.cern/doc/master/classTObjArray-members.html:2693,Availability,error,error,2693," TObject *obj) const overrideTCollectionvirtual; Compress()TObjArrayvirtual; Contains(const char *name) constTCollectioninline; Contains(const TObject *obj) constTCollectioninline; Copy(TObject &object) constTObjectvirtual; DeclFileName()TObjArrayinlinestatic; Delete(Option_t *option="""") overrideTObjArrayvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""") overrideTCollectionvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() const overrideTCollectionvirtual; EDeprecatedStatusBits enum nameTObject; EmptyGarbageCollection()TCollectionstatic; end() constTCollectioninline; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTCollectionprotected; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Expand(Int_t newSize)TObjArrayvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fContTObjArrayprotected; fgCurrentCollectionTCollectionprivatestatic; fgDtorOnlyTObjectprivatestatic; fgEmptyingGarbageTCollectionprivatestatic; fgGarbageCollectionTCollectionprivatestatic; fgGarbageStackTCollectionprivatestatic; fgObjectStatTObjectprivatestatic; FindObject(const char *name) const overrideTObjArrayvirtual; FindObject(const TObject *obj) const overrideTObjArrayvirtual; First() const overrideTObjArrayvirtual; fLastTObjArrayprotected; fLowerBoundTObjArrayprotected; fNameTCollectionprotected; fSizeTCollectionprotected; fSortedTSeqCollectionprotected; fUniqueIDTObjectprivate; GarbageCollect(TObject *obj)TCollectionstatic; GetAbsLast() constTObjArrayprotected; GetCollectionEntryName(TObject *entry) constTCollectionprotectedvirtual; GetCurrentCo",MatchSource.WIKI,doc/master/classTObjArray-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjArray-members.html
https://root.cern/doc/master/classTObjArray-members.html:191,Modifiability,inherit,inherited,191,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TObjArray Member List. This is the complete list of members for TObjArray, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TObject *obj) overrideTObjArrayinlinevirtual; AddAfter(const TObject *after, TObject *obj) overrideTObjArrayvirtual; AddAll(const TCollection *col)TCollectionvirtual; AddAt(TObject *obj, Int_t idx) overrideTObjArrayvirtual; AddAtAndExpand(TObject *obj, Int_t idx)TObjArrayvirtual; AddAtFree(TObject *obj)TObjArrayvirtual; AddBefore(const TObject *before, TObject *obj) overrideTObjArrayvirtual; AddFirst(TObject *obj) overrideTObjArrayvirtual; AddLast(TObject *obj) overrideTObjArrayvirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AddVector(TObject *obj1,...)TCollection; After(const TObject *obj) const overrideTObjArrayvirtual; AppendPad(Option_t *option="""")TObjectvirtual; AssertClass(TClass *cl) constTCollection; At(Int_t idx) const overrideTObjArrayinlinevirtual; Before(const TObject *obj) const overrideTObjArrayvirtual; begin() constTCollectioninline; BinarySearch(TObject *obj, Int_t upto=kMaxInt)TObjArrayvirtual; BoundsOk(const char *where, Int_t at) constTObjArrayinlineprotected; Browse(TBrowser *b) overrideTCollectionvirtual; Capacity() constTCollectioninline; Changed()TSeqCollectioninlineprotectedvirtual; CheckedHash()TObjectinline; Class()TObjArraystatic; Class_Name()TObjArraystatic; Class_Version()TObjArrayinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTObjArrayvirtual; Clone(const char *newname="""") const overrideTCollectionvirtual; Compare(const TObject *obj) const overrideTCollectionvirtual; Compress()TObjArrayvirtual; Contains(const char *name) constTCollectioninline; Contains(const TObject *obj) constTCollectioninline; Copy(TObject &object) constTObjectvirtual; DeclFileName()TObjArrayinlinestatic; Delete(Option_t *option="""") overrideTObjArrayvirtual; Distan",MatchSource.WIKI,doc/master/classTObjArray-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjArray-members.html
https://root.cern/doc/master/classTObjArray.html:12096,Availability,error,error,12096,"ar *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; v",MatchSource.WIKI,doc/master/classTObjArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjArray.html
https://root.cern/doc/master/classTObjArray.html:12185,Availability,error,error,12185,"leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTi",MatchSource.WIKI,doc/master/classTObjArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjArray.html
https://root.cern/doc/master/classTObjArray.html:12340,Availability,error,error,12340," whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is kn",MatchSource.WIKI,doc/master/classTObjArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjArray.html
https://root.cern/doc/master/classTObjArray.html:12637,Availability,error,error,12637,"bj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname""",MatchSource.WIKI,doc/master/classTObjArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjArray.html
https://root.cern/doc/master/classTObjArray.html:16114,Availability,error,error,16114," operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array ",MatchSource.WIKI,doc/master/classTObjArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjArray.html
https://root.cern/doc/master/classTObjArray.html:18778,Availability,error,error,18778,"t of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Int_t GetAbsLast () const;  Return absolute index to last object in array. ;  ; void Init (Int_t s, Int_t lowerBound);  Initialize a TObjArray. ;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TObject ** fCont;  ; Int_t fLast;  ; Int_t fLowerBound;  Array contents.",MatchSource.WIKI,doc/master/classTObjArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjArray.html
https://root.cern/doc/master/classTObjArray.html:21983,Availability,error,error,21983,"er flag. ; Definition at line 78 of file TObjArray.cxx. ◆ ~TObjArray(). TObjArray::~TObjArray ; (; ). virtual . Delete an array. ; Objects are not deleted unless the TObjArray is the owner (set via SetOwner()). ; Definition at line 94 of file TObjArray.cxx. Member Function Documentation. ◆ Add(). void TObjArray::Add ; (; TObject * ; obj). inlineoverridevirtual . Implements TCollection.; Definition at line 68 of file TObjArray.h. ◆ AddAfter(). void TObjArray::AddAfter ; (; const TObject * ; after, . TObject * ; obj . ). overridevirtual . Add object in the slot after object after. ; If after=0 add object in the last empty slot. Note that this will overwrite any object that might have already been in this slot. For insertion semantics use either a TList or a TOrdCollection. ; Implements TSeqCollection.; Definition at line 215 of file TObjArray.cxx. ◆ AddAt(). void TObjArray::AddAt ; (; TObject * ; obj, . Int_t ; idx . ). overridevirtual . Add object at position ids. ; Give an error when idx is out of bounds (i.e. the array is not expanded). ; Implements TSeqCollection.; Definition at line 254 of file TObjArray.cxx. ◆ AddAtAndExpand(). void TObjArray::AddAtAndExpand ; (; TObject * ; obj, . Int_t ; idx . ). virtual . Add object at position idx. ; If idx is larger than the current size of the array, expand the array (double its size). ; Reimplemented in TClonesArray.; Definition at line 235 of file TObjArray.cxx. ◆ AddAtFree(). Int_t TObjArray::AddAtFree ; (; TObject * ; obj). virtual . Return the position of the new object. ; Find the first empty cell or AddLast if there is no empty cell ; Reimplemented in TClonesArray.; Definition at line 269 of file TObjArray.cxx. ◆ AddBefore(). void TObjArray::AddBefore ; (; const TObject * ; before, . TObject * ; obj . ). overridevirtual . Add object in the slot before object before. ; If before=0 add object in the first slot. Note that this will overwrite any object that might have already been in this slot. For insertion semantics ",MatchSource.WIKI,doc/master/classTObjArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjArray.html
https://root.cern/doc/master/classTObjArray.html:31221,Availability,error,error,31221,"Iterator ; (; Bool_t ; dir = kIterForward); const. overridevirtual . Returns an array iterator. ; Implements TCollection.; Definition at line 649 of file TObjArray.cxx. ◆ operator=(). TObjArray & TObjArray::operator= ; (; const TObjArray & ; a). Assignment operator. Note, unsets the kIsOwner flag. ; Definition at line 107 of file TObjArray.cxx. ◆ operator[]() [1/2]. TObject *& TObjArray::operator[] ; (; Int_t ; i). virtual . Return the object at position i. ; Returns address at position 0 if i is out of bounds. Result may be used as an lvalue. ; Reimplemented in TClonesArray.; Definition at line 131 of file TObjArray.cxx. ◆ operator[]() [2/2]. TObject * TObjArray::operator[] ; (; Int_t ; i); const. virtual . Return the object at position at. Returns 0 if i is out of bounds. ; Reimplemented in TClonesArray.; Definition at line 149 of file TObjArray.cxx. ◆ OutOfBoundsError(). Bool_t TObjArray::OutOfBoundsError ; (; const char * ; where, . Int_t ; i . ); const. protected . Generate an out-of-bounds error. Always returns false. ; Definition at line 658 of file TObjArray.cxx. ◆ Randomize(). void TObjArray::Randomize ; (; Int_t ; ntimes = 1). virtual . Randomize objects inside the array, i.e. ; permute randomly objects. With fLast being the index of the last entry in the array, the following algorithm is applied to the array:. for each entry j between 0 and fLast, another entry k is chosen randomly between 0 and fLast.; the objects at j and k are swapped.; this process is repeated ntimes (ntimes = 1 by default). . Definition at line 795 of file TObjArray.cxx. ◆ RecursiveRemove(). void TObjArray::RecursiveRemove ; (; TObject * ; obj). overridevirtual . Remove object from this collection and recursively remove the object from all other objects (and collections). ; Reimplemented from TCollection.; Definition at line 668 of file TObjArray.cxx. ◆ Remove(). TObject * TObjArray::Remove ; (; TObject * ; obj). overridevirtual . Remove object from array. ; Implements TCollection.; D",MatchSource.WIKI,doc/master/classTObjArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjArray.html
https://root.cern/doc/master/classTObjArray.html:26857,Energy Efficiency,efficient,efficient,26857, the array AND delete all heap based objects. ; Implements TCollection.; Definition at line 356 of file TObjArray.cxx. ◆ Expand(). void TObjArray::Expand ; (; Int_t ; newSize). virtual . Expand or shrink the array to newSize elements. ; Reimplemented in TClonesArray.; Definition at line 387 of file TObjArray.cxx. ◆ FindObject() [1/2]. TObject * TObjArray::FindObject ; (; const char * ; name); const. overridevirtual . Find an object in this collection using its name. ; Requires a sequential scan till the object has been found. Returns 0 if object with specified name is not found. ; Reimplemented from TCollection.; Definition at line 415 of file TObjArray.cxx. ◆ FindObject() [2/2]. TObject * TObjArray::FindObject ; (; const TObject * ; iobj); const. overridevirtual . Find an object in this collection using the object's IsEqual() member function. ; Requires a sequential scan till the object has been found. Returns 0 if object is not found. Typically this function is overridden by a more efficient version in concrete collection classes (e.g. THashTable). ; Reimplemented from TCollection.; Definition at line 434 of file TObjArray.cxx. ◆ First(). TObject * TObjArray::First ; (; ); const. overridevirtual . Return the object in the first slot. ; Implements TSeqCollection.; Definition at line 496 of file TObjArray.cxx. ◆ GetAbsLast(). Int_t TObjArray::GetAbsLast ; (; ); const. protected . Return absolute index to last object in array. ; Returns -1 in case array is empty. ; Definition at line 539 of file TObjArray.cxx. ◆ GetEntries(). Int_t TObjArray::GetEntries ; (; ); const. overridevirtual . Return the number of objects in array (i.e. ; number of non-empty slots). Attention: use this method ONLY if you want to know the number of non-empty slots. This function loops over the complete array and is therefore very slow when applied in a loop. Most of the time you better use GetEntriesFast() (only in case when there are no empty slots). ; Reimplemented from TCollection.; Definit,MatchSource.WIKI,doc/master/classTObjArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjArray.html
https://root.cern/doc/master/classTObjArray.html:12102,Integrability,message,message,12102,"ar *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; v",MatchSource.WIKI,doc/master/classTObjArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjArray.html
https://root.cern/doc/master/classTObjArray.html:12643,Integrability,message,message,12643,"bj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname""",MatchSource.WIKI,doc/master/classTObjArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjArray.html
https://root.cern/doc/master/classTObjArray.html:13504,Integrability,message,message,13504,"ecute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *a",MatchSource.WIKI,doc/master/classTObjArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjArray.html
https://root.cern/doc/master/classTObjArray.html:16120,Integrability,message,message,16120," operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array ",MatchSource.WIKI,doc/master/classTObjArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjArray.html
https://root.cern/doc/master/classTObjArray.html:16493,Integrability,message,message,16493," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static ",MatchSource.WIKI,doc/master/classTObjArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjArray.html
https://root.cern/doc/master/classTObjArray.html:1874,Modifiability,inherit,inherited,1874,"will lead to the deletion of its contents.; You can either make a shallow copy of the array: otherarr = new TObjArray(*myarr);; *otherarr = *myarr;; TObjArrayAn array of TObjects.Definition TObjArray.h:31; in which case ownership (if any) is not transfered but the other array points to the same object as the original array. Note that if the content of either array is deleted the other array is not notified in any way (i.e. still points to the now deleted objects).; You can also make a deep copy of the array: otherarr = (TObjArray*)myarr->Clone();; in which case the array and the content are both duplicated (i.e. otherarr and myarr do not point to the same objects). If myarr is set to the be the owner of its content, otherarr will also be set to the owner of its own content. ; Definition at line 31 of file TObjArray.h. Public Types; typedef TObjArrayIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TObjArray (const TObjArray &a);  Create a copy of TObjArray a. Note, does not copy the kIsOwner flag. ;  ;  TObjArray (Int_t s=TCollection::kInitCapacity, Int_t lowerBound=0);  Create an object array. ;  ; virtual ~TObjArray ();  Delete an array. ;  ; void Add (TObject *obj) override;  ; void AddAfter (const TObject *after, TObject *obj) override;",MatchSource.WIKI,doc/master/classTObjArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjArray.html
https://root.cern/doc/master/classTObjArray.html:1981,Modifiability,inherit,inherited,1981,"will lead to the deletion of its contents.; You can either make a shallow copy of the array: otherarr = new TObjArray(*myarr);; *otherarr = *myarr;; TObjArrayAn array of TObjects.Definition TObjArray.h:31; in which case ownership (if any) is not transfered but the other array points to the same object as the original array. Note that if the content of either array is deleted the other array is not notified in any way (i.e. still points to the now deleted objects).; You can also make a deep copy of the array: otherarr = (TObjArray*)myarr->Clone();; in which case the array and the content are both duplicated (i.e. otherarr and myarr do not point to the same objects). If myarr is set to the be the owner of its content, otherarr will also be set to the owner of its own content. ; Definition at line 31 of file TObjArray.h. Public Types; typedef TObjArrayIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TObjArray (const TObjArray &a);  Create a copy of TObjArray a. Note, does not copy the kIsOwner flag. ;  ;  TObjArray (Int_t s=TCollection::kInitCapacity, Int_t lowerBound=0);  Create an object array. ;  ; virtual ~TObjArray ();  Delete an array. ;  ; void Add (TObject *obj) override;  ; void AddAfter (const TObject *after, TObject *obj) override;",MatchSource.WIKI,doc/master/classTObjArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjArray.html
https://root.cern/doc/master/classTObjArray.html:6711,Modifiability,inherit,inherited,6711,"oid Randomize (Int_t ntimes=1);  Randomize objects inside the array, i.e. ;  ; void RecursiveRemove (TObject *obj) override;  Remove object from this collection and recursively remove the object from all other objects (and collections). ;  ; TObject * Remove (TObject *obj) override;  Remove object from array. ;  ; TObject * RemoveAt (Int_t idx) override;  Remove object at index idx. ;  ; virtual void RemoveRange (Int_t idx1, Int_t idx2);  Remove objects from index idx1 to idx2 included. ;  ; void SetLast (Int_t last);  Set index of last object in array, effectively truncating the array. ;  ; virtual void Sort (Int_t upto=kMaxInt);  If objects in array are sortable (i.e. ;  ; void Streamer (TBuffer &) override;  Stream all objects in the array to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; TObject * UncheckedAt (Int_t i) const;  ;  Public Member Functions inherited from TSeqCollection; virtual ~TSeqCollection ();  ; void Add (TObject *obj) override;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual void RemoveBefore (TObject *before);  ; virtual void RemoveFirst ();  ; virtual void RemoveLast ();  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnSort ();  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this collection. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; vo",MatchSource.WIKI,doc/master/classTObjArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjArray.html
https://root.cern/doc/master/classTObjArray.html:7394,Modifiability,inherit,inherited,7394,"ting the array. ;  ; virtual void Sort (Int_t upto=kMaxInt);  If objects in array are sortable (i.e. ;  ; void Streamer (TBuffer &) override;  Stream all objects in the array to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; TObject * UncheckedAt (Int_t i) const;  ;  Public Member Functions inherited from TSeqCollection; virtual ~TSeqCollection ();  ; void Add (TObject *obj) override;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual void RemoveBefore (TObject *before);  ; virtual void RemoveFirst ();  ; virtual void RemoveLast ();  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnSort ();  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this collection. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIte",MatchSource.WIKI,doc/master/classTObjArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjArray.html
https://root.cern/doc/master/classTObjArray.html:7740,Modifiability,inherit,inherit,7740,"ons inherited from TSeqCollection; virtual ~TSeqCollection ();  ; void Add (TObject *obj) override;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual void RemoveBefore (TObject *before);  ; virtual void RemoveFirst ();  ; virtual void RemoveLast ();  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnSort ();  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this collection. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIter end () const;  ; const char * GetName () const override;  Return name of this collection. ;  ; virtual Int_t GetSize () const;  Return the capacity of the collection, i.e. ;  ; virtual Int_t GrowBy (Int_t delta) const;  Increase the collection's capacity by delta slots. ;  ; ULong_t Hash () const override;  Return hash value for th",MatchSource.WIKI,doc/master/classTObjArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjArray.html
https://root.cern/doc/master/classTObjArray.html:10896,Modifiability,inherit,inherited,10896," the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool UseRWLock (Bool_t enable=true);  Set this collection to use a RW lock upon access, making it thread safe. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *optio",MatchSource.WIKI,doc/master/classTObjArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjArray.html
https://root.cern/doc/master/classTObjArray.html:11801,Modifiability,inherit,inheritance,11801," bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () con",MatchSource.WIKI,doc/master/classTObjArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjArray.html
https://root.cern/doc/master/classTObjArray.html:13602,Modifiability,inherit,inherits,13602,"const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method to declare a ",MatchSource.WIKI,doc/master/classTObjArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjArray.html
https://root.cern/doc/master/classTObjArray.html:13719,Modifiability,inherit,inherits,13719,"n () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method to declare a method obsolete. ;  ; void operator delete (void *ptr);  Operator delete. ;  ; void operator delete (void *ptr, void",MatchSource.WIKI,doc/master/classTObjArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjArray.html
https://root.cern/doc/master/classTObjArray.html:16726,Modifiability,inherit,inherited,16726,"nset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be c",MatchSource.WIKI,doc/master/classTObjArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjArray.html
https://root.cern/doc/master/classTObjArray.html:17421,Modifiability,inherit,inherited,17421,"ing message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Bool",MatchSource.WIKI,doc/master/classTObjArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjArray.html
https://root.cern/doc/master/classTObjArray.html:17972,Modifiability,inherit,inherited,17972,"nt_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Int_t GetAbsLast () const;  Return absolute index to last object in array. ;  ; void Init (Int_t s, Int_t lowerBound);  Initialize a TObjArray. ;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For giv",MatchSource.WIKI,doc/master/classTObjArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjArray.html
https://root.cern/doc/master/classTObjArray.html:18840,Modifiability,inherit,inherited,18840,"Class * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Int_t GetAbsLast () const;  Return absolute index to last object in array. ;  ; void Init (Int_t s, Int_t lowerBound);  Initialize a TObjArray. ;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TObject ** fCont;  ; Int_t fLast;  ; Int_t fLowerBound;  Array contents. ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . Friends; class TClonesArray;  ; class TObjArrayIter;  . Additional Inherited Members;  Protected Types inher",MatchSource.WIKI,doc/master/classTObjArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjArray.html
https://root.cern/doc/master/classTObjArray.html:18950,Modifiability,inherit,inherited,18950,"Class * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Int_t GetAbsLast () const;  Return absolute index to last object in array. ;  ; void Init (Int_t s, Int_t lowerBound);  Initialize a TObjArray. ;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TObject ** fCont;  ; Int_t fLast;  ; Int_t fLowerBound;  Array contents. ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . Friends; class TClonesArray;  ; class TObjArrayIter;  . Additional Inherited Members;  Protected Types inher",MatchSource.WIKI,doc/master/classTObjArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjArray.html
https://root.cern/doc/master/classTObjArray.html:19458,Modifiability,inherit,inherited,19458,"re, Int_t at) const;  ; Int_t GetAbsLast () const;  Return absolute index to last object in array. ;  ; void Init (Int_t s, Int_t lowerBound);  Initialize a TObjArray. ;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TObject ** fCont;  ; Int_t fLast;  ; Int_t fLowerBound;  Array contents. ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . Friends; class TClonesArray;  ; class TObjArrayIter;  . Additional Inherited Members;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TObjArray.h>. Inheritance diagram for TObjArray:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ Iterator_t. typedef TObjArrayIter TObjArray::Iterator_t. Definition at line 47 of file TObjArray.h. Constructor & Destructor D",MatchSource.WIKI,doc/master/classTObjArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjArray.html
https://root.cern/doc/master/classTObjArray.html:19763,Modifiability,inherit,inherited,19763,"otected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TObject ** fCont;  ; Int_t fLast;  ; Int_t fLowerBound;  Array contents. ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . Friends; class TClonesArray;  ; class TObjArrayIter;  . Additional Inherited Members;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TObjArray.h>. Inheritance diagram for TObjArray:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ Iterator_t. typedef TObjArrayIter TObjArray::Iterator_t. Definition at line 47 of file TObjArray.h. Constructor & Destructor Documentation. ◆ TObjArray() [1/2]. TObjArray::TObjArray ; (; Int_t ; s = TCollection::kInitCapacity, . Int_t ; lowerBound = 0 . ). Create an object array. ; Using s one can set the array size (default is kInitCapacity=16) and lowerBound can be used to set the array lowerbound index (default is 0).",MatchSource.WIKI,doc/master/classTObjArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjArray.html
https://root.cern/doc/master/classTObjArray.html:19835,Modifiability,inherit,inherited,19835,"otected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TObject ** fCont;  ; Int_t fLast;  ; Int_t fLowerBound;  Array contents. ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . Friends; class TClonesArray;  ; class TObjArrayIter;  . Additional Inherited Members;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TObjArray.h>. Inheritance diagram for TObjArray:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ Iterator_t. typedef TObjArrayIter TObjArray::Iterator_t. Definition at line 47 of file TObjArray.h. Constructor & Destructor Documentation. ◆ TObjArray() [1/2]. TObjArray::TObjArray ; (; Int_t ; s = TCollection::kInitCapacity, . Int_t ; lowerBound = 0 . ). Create an object array. ; Using s one can set the array size (default is kInitCapacity=16) and lowerBound can be used to set the array lowerbound index (default is 0).",MatchSource.WIKI,doc/master/classTObjArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjArray.html
https://root.cern/doc/master/classTObjArray.html:20000,Modifiability,inherit,inherited,20000,"collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TObject ** fCont;  ; Int_t fLast;  ; Int_t fLowerBound;  Array contents. ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . Friends; class TClonesArray;  ; class TObjArrayIter;  . Additional Inherited Members;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TObjArray.h>. Inheritance diagram for TObjArray:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ Iterator_t. typedef TObjArrayIter TObjArray::Iterator_t. Definition at line 47 of file TObjArray.h. Constructor & Destructor Documentation. ◆ TObjArray() [1/2]. TObjArray::TObjArray ; (; Int_t ; s = TCollection::kInitCapacity, . Int_t ; lowerBound = 0 . ). Create an object array. ; Using s one can set the array size (default is kInitCapacity=16) and lowerBound can be used to set the array lowerbound index (default is 0). ; Definition at line 64 of file TObjArray.cxx. ◆ TObjArray() [2/2]. TObjArray::TObjArray ; (; const TObjArray & ; a). Create a copy of TObjArray a. Note, does not copy the kIsOwner flag. ; Definition at line 78 of file TObjArray.cxx. ◆ ~TObjArray(). TObjArray::",MatchSource.WIKI,doc/master/classTObjArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjArray.html
https://root.cern/doc/master/classTObjArray.html:20133,Modifiability,inherit,inherited,20133,"collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TObject ** fCont;  ; Int_t fLast;  ; Int_t fLowerBound;  Array contents. ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . Friends; class TClonesArray;  ; class TObjArrayIter;  . Additional Inherited Members;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TObjArray.h>. Inheritance diagram for TObjArray:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ Iterator_t. typedef TObjArrayIter TObjArray::Iterator_t. Definition at line 47 of file TObjArray.h. Constructor & Destructor Documentation. ◆ TObjArray() [1/2]. TObjArray::TObjArray ; (; Int_t ; s = TCollection::kInitCapacity, . Int_t ; lowerBound = 0 . ). Create an object array. ; Using s one can set the array size (default is kInitCapacity=16) and lowerBound can be used to set the array lowerbound index (default is 0). ; Definition at line 64 of file TObjArray.cxx. ◆ TObjArray() [2/2]. TObjArray::TObjArray ; (; const TObjArray & ; a). Create a copy of TObjArray a. Note, does not copy the kIsOwner flag. ; Definition at line 78 of file TObjArray.cxx. ◆ ~TObjArray(). TObjArray::",MatchSource.WIKI,doc/master/classTObjArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjArray.html
https://root.cern/doc/master/classTObjArray.html:19166,Performance,perform,perform,19166,"Class * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Int_t GetAbsLast () const;  Return absolute index to last object in array. ;  ; void Init (Int_t s, Int_t lowerBound);  Initialize a TObjArray. ;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TObject ** fCont;  ; Int_t fLast;  ; Int_t fLowerBound;  Array contents. ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . Friends; class TClonesArray;  ; class TObjArrayIter;  . Additional Inherited Members;  Protected Types inher",MatchSource.WIKI,doc/master/classTObjArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjArray.html
https://root.cern/doc/master/classTObjArray.html:28256,Performance,concurren,concurrently,28256,; const. protected . Return absolute index to last object in array. ; Returns -1 in case array is empty. ; Definition at line 539 of file TObjArray.cxx. ◆ GetEntries(). Int_t TObjArray::GetEntries ; (; ); const. overridevirtual . Return the number of objects in array (i.e. ; number of non-empty slots). Attention: use this method ONLY if you want to know the number of non-empty slots. This function loops over the complete array and is therefore very slow when applied in a loop. Most of the time you better use GetEntriesFast() (only in case when there are no empty slots). ; Reimplemented from TCollection.; Definition at line 523 of file TObjArray.cxx. ◆ GetEntriesFast(). Int_t TObjArray::GetEntriesFast ; (; ); const. inline . Definition at line 58 of file TObjArray.h. ◆ GetEntriesUnsafe(). Int_t TObjArray::GetEntriesUnsafe ; (; ); const. Return the number of objects in array (i.e. ; number of non-empty slots). This is a thread-unsafe version of GetEntriesFast. Use it only if sure it will not be invoked concurrently. ; Definition at line 565 of file TObjArray.cxx. ◆ GetLast(). Int_t TObjArray::GetLast ; (; ); const. overridevirtual . Return index of last object in array. ; Returns lowerBound-1 in case array is empty. ; Reimplemented from TSeqCollection.; Definition at line 577 of file TObjArray.cxx. ◆ GetObjectRef() [1/2]. TObject ** TObjArray::GetObjectRef ; (; ); const. inline . Definition at line 63 of file TObjArray.h. ◆ GetObjectRef() [2/2]. TObject ** TObjArray::GetObjectRef ; (; const TObject * ; obj); const. overridevirtual . Return address of pointer obj. If obj is 0 returns address of container. ; Implements TCollection.; Definition at line 587 of file TObjArray.cxx. ◆ IndexOf(). Int_t TObjArray::IndexOf ; (; const TObject * ; obj); const. overridevirtual . obj != 0 Return index of object in array. Returns lowerBound-1 in case array doesn't contain the obj.; obj == 0 Return the index of the first empty slot. Returns lowerBound-1 in case array doesn't contain a,MatchSource.WIKI,doc/master/classTObjArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjArray.html
https://root.cern/doc/master/classTObjArray.html:10602,Safety,safe,safe,10602,"d Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the wildcard. ;  ; virtual void Print (Option_t *option, Int_t recurse) const;  Print the collection header and its elements. ;  ; virtual void Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool UseRWLock (Bool_t enable=true);  Set this collection to use a RW lock upon access, making it thread safe. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () co",MatchSource.WIKI,doc/master/classTObjArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjArray.html
https://root.cern/doc/master/classTObjArray.html:28179,Safety,unsafe,unsafe,28179,xx. ◆ GetAbsLast(). Int_t TObjArray::GetAbsLast ; (; ); const. protected . Return absolute index to last object in array. ; Returns -1 in case array is empty. ; Definition at line 539 of file TObjArray.cxx. ◆ GetEntries(). Int_t TObjArray::GetEntries ; (; ); const. overridevirtual . Return the number of objects in array (i.e. ; number of non-empty slots). Attention: use this method ONLY if you want to know the number of non-empty slots. This function loops over the complete array and is therefore very slow when applied in a loop. Most of the time you better use GetEntriesFast() (only in case when there are no empty slots). ; Reimplemented from TCollection.; Definition at line 523 of file TObjArray.cxx. ◆ GetEntriesFast(). Int_t TObjArray::GetEntriesFast ; (; ); const. inline . Definition at line 58 of file TObjArray.h. ◆ GetEntriesUnsafe(). Int_t TObjArray::GetEntriesUnsafe ; (; ); const. Return the number of objects in array (i.e. ; number of non-empty slots). This is a thread-unsafe version of GetEntriesFast. Use it only if sure it will not be invoked concurrently. ; Definition at line 565 of file TObjArray.cxx. ◆ GetLast(). Int_t TObjArray::GetLast ; (; ); const. overridevirtual . Return index of last object in array. ; Returns lowerBound-1 in case array is empty. ; Reimplemented from TSeqCollection.; Definition at line 577 of file TObjArray.cxx. ◆ GetObjectRef() [1/2]. TObject ** TObjArray::GetObjectRef ; (; ); const. inline . Definition at line 63 of file TObjArray.h. ◆ GetObjectRef() [2/2]. TObject ** TObjArray::GetObjectRef ; (; const TObject * ; obj); const. overridevirtual . Return address of pointer obj. If obj is 0 returns address of container. ; Implements TCollection.; Definition at line 587 of file TObjArray.cxx. ◆ IndexOf(). Int_t TObjArray::IndexOf ; (; const TObject * ; obj); const. overridevirtual . obj != 0 Return index of object in array. Returns lowerBound-1 in case array doesn't contain the obj.; obj == 0 Return the index of the first empty slot,MatchSource.WIKI,doc/master/classTObjArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjArray.html
https://root.cern/doc/master/classTObjArray.html:8691,Security,hash,hash,8691,"lass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIter end () const;  ; const char * GetName () const override;  Return name of this collection. ;  ; virtual Int_t GetSize () const;  Return the capacity of the collection, i.e. ;  ; virtual Int_t GrowBy (Int_t delta) const;  Increase the collection's capacity by delta slots. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsArgNull (const char *where, const TObject *obj) const;  Returns true if object is a null pointer. ;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; Bool_t IsOwner () const;  ; Bool_t IsSortable () const override;  ; R__ALWAYS_INLINE Bool_t IsUsingRWLock () const;  ; void ls (Option_t *option="""") const override;  List (ls) all objects in this collection. ;  ; virtual TIterator * MakeReverseIterator () const;  ; Bool_t Notify () override;  'Notify' all objects in this collection. ;  ; TObject * operator() (const char *name) const;  Find an object in this collection by name. ;  ; void Paint (Option_t *option="""") override;  Paint all objects in this collection. ;  ; virtual void Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the wildcard. ;  ; virtual void Print (O",MatchSource.WIKI,doc/master/classTObjArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjArray.html
https://root.cern/doc/master/classTObjArray.html:10237,Security,access,accessible,10237," MakeReverseIterator () const;  ; Bool_t Notify () override;  'Notify' all objects in this collection. ;  ; TObject * operator() (const char *name) const;  Find an object in this collection by name. ;  ; void Paint (Option_t *option="""") override;  Paint all objects in this collection. ;  ; virtual void Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the wildcard. ;  ; virtual void Print (Option_t *option, Int_t recurse) const;  Print the collection header and its elements. ;  ; virtual void Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool UseRWLock (Bool_t enable=true);  Set this collection to use a RW lock upon access, making it thread safe. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract.",MatchSource.WIKI,doc/master/classTObjArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjArray.html
https://root.cern/doc/master/classTObjArray.html:10577,Security,access,access,10577,"d Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the wildcard. ;  ; virtual void Print (Option_t *option, Int_t recurse) const;  Print the collection header and its elements. ;  ; virtual void Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool UseRWLock (Bool_t enable=true);  Set this collection to use a RW lock upon access, making it thread safe. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () co",MatchSource.WIKI,doc/master/classTObjArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjArray.html
https://root.cern/doc/master/classTObjArray.html:17836,Security,access,accessible,17836,"s_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Int_t GetAbsLast () const;  Return absolute index to last object in array. ;  ; void Init (Int_t s, Int_t lowerBound);  Initialize a TObjArray. ;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  ;",MatchSource.WIKI,doc/master/classTObjArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjArray.html
https://root.cern/doc/master/classTObjArrayIter.html:1725,Modifiability,inherit,inherited,1725," ;  TObjArrayIter (const TObjArrayIter &iter);  Copy ctor. ;  ;  ~TObjArrayIter ();  ; const TCollection * GetCollection () const override;  ; TClass * IsA () const override;  ; TObject * Next () override;  Return next object in array. Returns 0 when no more objects in array. ;  ; Bool_t operator!= (const TIterator &aIter) const override;  This operator compares two TIterator objects. ;  ; Bool_t operator!= (const TObjArrayIter &aIter) const;  This operator compares two TObjArrayIter objects. ;  ; TObject * operator* () const override;  Return current object or nullptr. ;  ; TIterator & operator= (const TIterator &rhs) override;  Overridden assignment operator. ;  ; TObjArrayIter & operator= (const TObjArrayIter &rhs);  Overloaded assignment operator. ;  ; void Reset () override;  Reset array iterator. ;  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TIterator; virtual ~TIterator ();  ; virtual Option_t * GetOption () const;  ; TObject * operator() ();  ; Bool_t operator== (const TIterator &other) const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TIterator; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Member Functions;  TObjArrayIter ();  . Private Attributes; const TObjArray * fArray;  ; Int_t fCurCursor;  ; Int_t fCursor;  ; Bool_t fDirection;  . Additional Inherited Members;  Protected Member Functions inherited from TIterator;  TIterator ();  ;  TIterator (const TIterator &);  . #include <TObjArray.h>. Inheritance diagram for TObjArrayIter:. This browser is not able to show SVG: try Firefox, Ch",MatchSource.WIKI,doc/master/classTObjArrayIter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjArrayIter.html
https://root.cern/doc/master/classTObjArrayIter.html:2184,Modifiability,inherit,inherited,2184," ;  ; Bool_t operator!= (const TObjArrayIter &aIter) const;  This operator compares two TObjArrayIter objects. ;  ; TObject * operator* () const override;  Return current object or nullptr. ;  ; TIterator & operator= (const TIterator &rhs) override;  Overridden assignment operator. ;  ; TObjArrayIter & operator= (const TObjArrayIter &rhs);  Overloaded assignment operator. ;  ; void Reset () override;  Reset array iterator. ;  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TIterator; virtual ~TIterator ();  ; virtual Option_t * GetOption () const;  ; TObject * operator() ();  ; Bool_t operator== (const TIterator &other) const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TIterator; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Member Functions;  TObjArrayIter ();  . Private Attributes; const TObjArray * fArray;  ; Int_t fCurCursor;  ; Int_t fCursor;  ; Bool_t fDirection;  . Additional Inherited Members;  Protected Member Functions inherited from TIterator;  TIterator ();  ;  TIterator (const TIterator &);  . #include <TObjArray.h>. Inheritance diagram for TObjArrayIter:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ const_pointer. using TObjArrayIter::const_pointer = const TObject **. Definition at line 132 of file TObjArray.h. ◆ difference_type. using TObjArrayIter::difference_type = std::ptrdiff_t. Definition at line 130 of file TObjArray.h. ◆ iterator_category. using TObjArrayIter::iterator_category = std::bidirectional",MatchSource.WIKI,doc/master/classTObjArrayIter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjArrayIter.html
https://root.cern/doc/master/classTObjArrayIter.html:2581,Modifiability,inherit,inherited,2581," ;  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TIterator; virtual ~TIterator ();  ; virtual Option_t * GetOption () const;  ; TObject * operator() ();  ; Bool_t operator== (const TIterator &other) const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TIterator; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Member Functions;  TObjArrayIter ();  . Private Attributes; const TObjArray * fArray;  ; Int_t fCurCursor;  ; Int_t fCursor;  ; Bool_t fDirection;  . Additional Inherited Members;  Protected Member Functions inherited from TIterator;  TIterator ();  ;  TIterator (const TIterator &);  . #include <TObjArray.h>. Inheritance diagram for TObjArrayIter:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ const_pointer. using TObjArrayIter::const_pointer = const TObject **. Definition at line 132 of file TObjArray.h. ◆ difference_type. using TObjArrayIter::difference_type = std::ptrdiff_t. Definition at line 130 of file TObjArray.h. ◆ iterator_category. using TObjArrayIter::iterator_category = std::bidirectional_iterator_tag. Definition at line 128 of file TObjArray.h. ◆ pointer. using TObjArrayIter::pointer = TObject **. Definition at line 131 of file TObjArray.h. ◆ reference. using TObjArrayIter::reference = const TObject *&. Definition at line 133 of file TObjArray.h. ◆ value_type. using TObjArrayIter::value_type = TObject *. Definition at line 129 of file TObjArray.h. Constructor & Destructor Documentation. ◆ TObjArrayIter() [",MatchSource.WIKI,doc/master/classTObjArrayIter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjArrayIter.html
https://root.cern/doc/master/classTObject-members.html:1300,Availability,error,error,1300,"se(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TObjectstatic; Class_Name()TObjectstatic; Class_Version()TObjectinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; Copy(TObject &object) constTObjectvirtual; DeclFileName()TObjectinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; fUniqueIDTObjectprivate; GetDrawOption() constTObjectvirtual; GetDtorOnly()TObjectstatic; GetIconName() constTObjectvirtual; GetName() constTObjectvirtual; GetObjectInfo(Int_t px, Int_t py) constTObjectvirtual; GetObjectStat()TObjectstatic; GetOption() constTObjectinlinevirtual; GetTitle() constTObjectvirtual; GetUniqueID() constTObjectvirtual; HandleTimer(TTimer *timer)TObjectvirtual; Hash() constTObjectvirtual; HasInconsistentHash() constTObjectinline; Info(const char *method, const char *msgfmt,...) constTObjectvirtual; InheritsFrom(const char *classname) constTObjectvirtual; InheritsFrom(const TClass *cl) constT",MatchSource.WIKI,doc/master/classTObject-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject-members.html
https://root.cern/doc/master/classTObject-members.html:1381,Availability,error,error,1381,"se(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TObjectstatic; Class_Name()TObjectstatic; Class_Version()TObjectinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; Copy(TObject &object) constTObjectvirtual; DeclFileName()TObjectinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; fUniqueIDTObjectprivate; GetDrawOption() constTObjectvirtual; GetDtorOnly()TObjectstatic; GetIconName() constTObjectvirtual; GetName() constTObjectvirtual; GetObjectInfo(Int_t px, Int_t py) constTObjectvirtual; GetObjectStat()TObjectstatic; GetOption() constTObjectinlinevirtual; GetTitle() constTObjectvirtual; GetUniqueID() constTObjectvirtual; HandleTimer(TTimer *timer)TObjectvirtual; Hash() constTObjectvirtual; HasInconsistentHash() constTObjectinline; Info(const char *method, const char *msgfmt,...) constTObjectvirtual; InheritsFrom(const char *classname) constTObjectvirtual; InheritsFrom(const TClass *cl) constT",MatchSource.WIKI,doc/master/classTObject-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject-members.html
https://root.cern/doc/master/classTObject-members.html:187,Modifiability,inherit,inherited,187,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TObject Member List. This is the complete list of members for TObject, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TObjectstatic; Class_Name()TObjectstatic; Class_Version()TObjectinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; Copy(TObject &object) constTObjectvirtual; DeclFileName()TObjectinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; fUniqueIDTObjectprivate; GetDrawOption() constTObjectvirtual; GetDtorOnly()TObjectstatic; GetIconName() constTObjectvirtual; GetName() constTObjectvirtual; GetObjectInfo(Int_t px, Int_t py) constTObjectvirtual; GetObjectStat()TObjectstatic; GetOption() constTObjectinli",MatchSource.WIKI,doc/master/classTObject-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject-members.html
https://root.cern/doc/master/classTObject.html:607,Availability,error,error,607,". ROOT: TObject Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Member Functions |; Static Private Member Functions |; Private Attributes |; Static Private Attributes |; Friends |; List of all members ; TObject Class ReferenceCore ROOT classes » Base ROOT classes. ; Mother of all ROOT objects. ; The TObject class provides default behaviour and protocol for all objects in the ROOT system. It provides protocol for object I/O, error handling, sorting, inspection, printing, drawing, etc. Every object which inherits from TObject can be stored in the ROOT collection classes.; TObject's bits can be used as flags, bits 0 - 13 and 24-31 are reserved as global bits while bits 14 - 23 can be used in different class hierarchies (watch out for overlaps). ; Definition at line 41 of file TObject.h. Public Types; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; v",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:3350,Availability,error,error,3350,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:3439,Availability,error,error,3439,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:3594,Availability,error,error,3594,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:3891,Availability,error,error,3891,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:8565,Availability,error,error,8565,"ead (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static voi",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:32983,Availability,error,error,32983,"X of 1st point; fY1 0.15 Y of 1st point; fX2 0.67 X of 2nd point; fY2 0.83 Y of 2nd point; fUniqueID 0 object unique identifier; fBits 50331648 bit field status word; fLineColor 1 line color; fLineStyle 1 line style; fLineWidth 1 line width; fFillColor 19 fill area color; fFillStyle 1001 fill area style; X#define X(type, name); angleOption_t Option_t TPoint TPoint angleDefinition TGWin32VirtualXProxy.cxx:68; widthOption_t Option_t widthDefinition TGWin32VirtualXProxy.cxx:56; styleOption_t Option_t styleDefinition TGWin32VirtualXProxy.cxx:46; TObject::fUniqueIDUInt_t fUniqueIDobject unique identifierDefinition TObject.h:44; TObject::fBitsUInt_t fBitsbit field status wordDefinition TObject.h:45; lineTLine * lineDefinition entrylistblock_figure1.C:235. Reimplemented in TSystemFile, TCollection, TClass, TGFrame, and TGPack.; Definition at line 353 of file TObject.cxx. ◆ Error(). void TObject::Error ; (; const char * ; location, . const char * ; fmt, .  ; ... . ); const. virtual . Issue error message. ; Use ""location"" to specify the method where the error occurred. Accepts standard printf formatting arguments. ; Reimplemented in TFitResult.; Definition at line 993 of file TObject.cxx. ◆ Execute() [1/2]. void TObject::Execute ; (; const char * ; method, . const char * ; params, . Int_t * ; error = nullptr . ). virtual . Execute method on this object with the given parameter string, e.g. ; ""3.14,1,\""text\"""". ; Reimplemented in TMethodCall, TCling, TInterpreter, ROOT::R::TRInterface, and TContextMenu.; Definition at line 364 of file TObject.cxx. ◆ Execute() [2/2]. void TObject::Execute ; (; TMethod * ; method, . TObjArray * ; params, . Int_t * ; error = nullptr . ). virtual . Execute method on this object with parameters stored in the TObjArray. ; The TObjArray should contain an argv vector like: argv[0] ... argv[n] = the list of TObjString parameters; TObjStringCollectable string class.Definition TObjString.h:28; nconst Int_t nDefinition legend1.C:16. Reimplemented in TClin",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:33047,Availability,error,error,33047,"2 0.67 X of 2nd point; fY2 0.83 Y of 2nd point; fUniqueID 0 object unique identifier; fBits 50331648 bit field status word; fLineColor 1 line color; fLineStyle 1 line style; fLineWidth 1 line width; fFillColor 19 fill area color; fFillStyle 1001 fill area style; X#define X(type, name); angleOption_t Option_t TPoint TPoint angleDefinition TGWin32VirtualXProxy.cxx:68; widthOption_t Option_t widthDefinition TGWin32VirtualXProxy.cxx:56; styleOption_t Option_t styleDefinition TGWin32VirtualXProxy.cxx:46; TObject::fUniqueIDUInt_t fUniqueIDobject unique identifierDefinition TObject.h:44; TObject::fBitsUInt_t fBitsbit field status wordDefinition TObject.h:45; lineTLine * lineDefinition entrylistblock_figure1.C:235. Reimplemented in TSystemFile, TCollection, TClass, TGFrame, and TGPack.; Definition at line 353 of file TObject.cxx. ◆ Error(). void TObject::Error ; (; const char * ; location, . const char * ; fmt, .  ; ... . ); const. virtual . Issue error message. ; Use ""location"" to specify the method where the error occurred. Accepts standard printf formatting arguments. ; Reimplemented in TFitResult.; Definition at line 993 of file TObject.cxx. ◆ Execute() [1/2]. void TObject::Execute ; (; const char * ; method, . const char * ; params, . Int_t * ; error = nullptr . ). virtual . Execute method on this object with the given parameter string, e.g. ; ""3.14,1,\""text\"""". ; Reimplemented in TMethodCall, TCling, TInterpreter, ROOT::R::TRInterface, and TContextMenu.; Definition at line 364 of file TObject.cxx. ◆ Execute() [2/2]. void TObject::Execute ; (; TMethod * ; method, . TObjArray * ; params, . Int_t * ; error = nullptr . ). virtual . Execute method on this object with parameters stored in the TObjArray. ; The TObjArray should contain an argv vector like: argv[0] ... argv[n] = the list of TObjString parameters; TObjStringCollectable string class.Definition TObjString.h:28; nconst Int_t nDefinition legend1.C:16. Reimplemented in TCling, TMethodCall, TInterpreter, ROOT::R::TRIn",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:33291,Availability,error,error,33291,"define X(type, name); angleOption_t Option_t TPoint TPoint angleDefinition TGWin32VirtualXProxy.cxx:68; widthOption_t Option_t widthDefinition TGWin32VirtualXProxy.cxx:56; styleOption_t Option_t styleDefinition TGWin32VirtualXProxy.cxx:46; TObject::fUniqueIDUInt_t fUniqueIDobject unique identifierDefinition TObject.h:44; TObject::fBitsUInt_t fBitsbit field status wordDefinition TObject.h:45; lineTLine * lineDefinition entrylistblock_figure1.C:235. Reimplemented in TSystemFile, TCollection, TClass, TGFrame, and TGPack.; Definition at line 353 of file TObject.cxx. ◆ Error(). void TObject::Error ; (; const char * ; location, . const char * ; fmt, .  ; ... . ); const. virtual . Issue error message. ; Use ""location"" to specify the method where the error occurred. Accepts standard printf formatting arguments. ; Reimplemented in TFitResult.; Definition at line 993 of file TObject.cxx. ◆ Execute() [1/2]. void TObject::Execute ; (; const char * ; method, . const char * ; params, . Int_t * ; error = nullptr . ). virtual . Execute method on this object with the given parameter string, e.g. ; ""3.14,1,\""text\"""". ; Reimplemented in TMethodCall, TCling, TInterpreter, ROOT::R::TRInterface, and TContextMenu.; Definition at line 364 of file TObject.cxx. ◆ Execute() [2/2]. void TObject::Execute ; (; TMethod * ; method, . TObjArray * ; params, . Int_t * ; error = nullptr . ). virtual . Execute method on this object with parameters stored in the TObjArray. ; The TObjArray should contain an argv vector like: argv[0] ... argv[n] = the list of TObjString parameters; TObjStringCollectable string class.Definition TObjString.h:28; nconst Int_t nDefinition legend1.C:16. Reimplemented in TCling, TMethodCall, TInterpreter, ROOT::R::TRInterface, and TContextMenu.; Definition at line 382 of file TObject.cxx. ◆ ExecuteEvent(). void TObject::ExecuteEvent ; (; Int_t ; event, . Int_t ; px, . Int_t ; py . ). virtual . Execute action corresponding to an event at (px,py). ; This method must be overridden",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:33652,Availability,error,error,33652,"atus wordDefinition TObject.h:45; lineTLine * lineDefinition entrylistblock_figure1.C:235. Reimplemented in TSystemFile, TCollection, TClass, TGFrame, and TGPack.; Definition at line 353 of file TObject.cxx. ◆ Error(). void TObject::Error ; (; const char * ; location, . const char * ; fmt, .  ; ... . ); const. virtual . Issue error message. ; Use ""location"" to specify the method where the error occurred. Accepts standard printf formatting arguments. ; Reimplemented in TFitResult.; Definition at line 993 of file TObject.cxx. ◆ Execute() [1/2]. void TObject::Execute ; (; const char * ; method, . const char * ; params, . Int_t * ; error = nullptr . ). virtual . Execute method on this object with the given parameter string, e.g. ; ""3.14,1,\""text\"""". ; Reimplemented in TMethodCall, TCling, TInterpreter, ROOT::R::TRInterface, and TContextMenu.; Definition at line 364 of file TObject.cxx. ◆ Execute() [2/2]. void TObject::Execute ; (; TMethod * ; method, . TObjArray * ; params, . Int_t * ; error = nullptr . ). virtual . Execute method on this object with parameters stored in the TObjArray. ; The TObjArray should contain an argv vector like: argv[0] ... argv[n] = the list of TObjString parameters; TObjStringCollectable string class.Definition TObjString.h:28; nconst Int_t nDefinition legend1.C:16. Reimplemented in TCling, TMethodCall, TInterpreter, ROOT::R::TRInterface, and TContextMenu.; Definition at line 382 of file TObject.cxx. ◆ ExecuteEvent(). void TObject::ExecuteEvent ; (; Int_t ; event, . Int_t ; px, . Int_t ; py . ). virtual . Execute action corresponding to an event at (px,py). ; This method must be overridden if an object can react to graphics events. ; Reimplemented in TParallelCoord, TParallelCoordRange, TParallelCoordVar, TGeoManager, TGeoNode, TGeoShape, TGeoVolume, TGeoOverlap, TGeoTrack, TASImage, TASPaletteEditor::LimitLine, TButton, TCanvas, TGroupButton, TPad, TSliderBox, TBox, TCrown, TCurlyArc, TCurlyLine, TDiamond, TEllipse, TFrame, TGraphPolargram, T",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:35312,Availability,error,error,35312,"react to graphics events. ; Reimplemented in TParallelCoord, TParallelCoordRange, TParallelCoordVar, TGeoManager, TGeoNode, TGeoShape, TGeoVolume, TGeoOverlap, TGeoTrack, TASImage, TASPaletteEditor::LimitLine, TButton, TCanvas, TGroupButton, TPad, TSliderBox, TBox, TCrown, TCurlyArc, TCurlyLine, TDiamond, TEllipse, TFrame, TGraphPolargram, TLine, TLink, TMarker, TPave, TPolyLine, TText, TWbox, TGraphEdge, TGraphNode, TAxis3D, TMarker3DBox, TNode, TPolyLine3D, TPolyMarker3D, TView3D, TGL5DDataSet, TGLEventHandler, TGLHistPainter, TGLParametricEquation, TGLTH3Composition, TGLViewer, TAxis, TEfficiency, TF1, TF2, TF3, TGraph, TGraph2D, TH1, TPolyMarker, TScatter, TSpline, THistPainter, TPaletteAxis, TGenerator, TParticle, TPrimary, TFileDrawMap, TTreePerfStats, TSpider, TView, TVirtualHistPainter, TPie, and TGLScenePad.; Definition at line 398 of file TObject.cxx. ◆ Fatal(). void TObject::Fatal ; (; const char * ; location, . const char * ; fmt, .  ; ... . ); const. virtual . Issue fatal error message. ; Use ""location"" to specify the method where the fatal error occurred. Accepts standard printf formatting arguments. ; Definition at line 1021 of file TObject.cxx. ◆ FindObject() [1/2]. TObject * TObject::FindObject ; (; const char * ; name); const. virtual . Must be redefined in derived classes. ; This function is typically used with TCollections, but can also be used to find an object by name inside this object. ; Reimplemented in TListOfEnums, TMap, TDirectory, TFolder, TROOT, TListOfTypes, TListOfTypes, TBtree, TCollection, THashList, THashTable, TList, TObjArray, TListOfDataMembers, TListOfDataMembers, TListOfEnums, TListOfEnumsWithLock, TListOfFunctions, TListOfFunctionTemplates, TListOfFunctionTemplates, TViewPubDataMembers, TViewPubFunctions, TPad, TGeometry, THbookFile, TGraph, TGraph2D, TH1, RooAbsCollection, and RooLinkedList.; Definition at line 408 of file TObject.cxx. ◆ FindObject() [2/2]. TObject * TObject::FindObject ; (; const TObject * ; obj); const. vir",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:35382,Availability,error,error,35382,"allelCoord, TParallelCoordRange, TParallelCoordVar, TGeoManager, TGeoNode, TGeoShape, TGeoVolume, TGeoOverlap, TGeoTrack, TASImage, TASPaletteEditor::LimitLine, TButton, TCanvas, TGroupButton, TPad, TSliderBox, TBox, TCrown, TCurlyArc, TCurlyLine, TDiamond, TEllipse, TFrame, TGraphPolargram, TLine, TLink, TMarker, TPave, TPolyLine, TText, TWbox, TGraphEdge, TGraphNode, TAxis3D, TMarker3DBox, TNode, TPolyLine3D, TPolyMarker3D, TView3D, TGL5DDataSet, TGLEventHandler, TGLHistPainter, TGLParametricEquation, TGLTH3Composition, TGLViewer, TAxis, TEfficiency, TF1, TF2, TF3, TGraph, TGraph2D, TH1, TPolyMarker, TScatter, TSpline, THistPainter, TPaletteAxis, TGenerator, TParticle, TPrimary, TFileDrawMap, TTreePerfStats, TSpider, TView, TVirtualHistPainter, TPie, and TGLScenePad.; Definition at line 398 of file TObject.cxx. ◆ Fatal(). void TObject::Fatal ; (; const char * ; location, . const char * ; fmt, .  ; ... . ); const. virtual . Issue fatal error message. ; Use ""location"" to specify the method where the fatal error occurred. Accepts standard printf formatting arguments. ; Definition at line 1021 of file TObject.cxx. ◆ FindObject() [1/2]. TObject * TObject::FindObject ; (; const char * ; name); const. virtual . Must be redefined in derived classes. ; This function is typically used with TCollections, but can also be used to find an object by name inside this object. ; Reimplemented in TListOfEnums, TMap, TDirectory, TFolder, TROOT, TListOfTypes, TListOfTypes, TBtree, TCollection, THashList, THashTable, TList, TObjArray, TListOfDataMembers, TListOfDataMembers, TListOfEnums, TListOfEnumsWithLock, TListOfFunctions, TListOfFunctionTemplates, TListOfFunctionTemplates, TViewPubDataMembers, TViewPubFunctions, TPad, TGeometry, THbookFile, TGraph, TGraph2D, TH1, RooAbsCollection, and RooLinkedList.; Definition at line 408 of file TObject.cxx. ◆ FindObject() [2/2]. TObject * TObject::FindObject ; (; const TObject * ; obj); const. virtual . Must be redefined in derived classes. ; Th",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:42892,Availability,error,error,42892,"(; ); const. virtual . Return hash value for this object. ; Note: If this routine is overloaded in a derived class, this derived class should also add ROOT::CallRecursiveRemoveIfNeeded(*this); ROOT::CallRecursiveRemoveIfNeededvoid CallRecursiveRemoveIfNeeded(TObject &obj)call RecursiveRemove for obj if gROOT is valid and obj.TestBit(kMustCleanup) is true.Definition TROOT.h:395; Otherwise, when RecursiveRemove is called (by ~TObject or example) for this type of object, the transversal of THashList and THashTable containers will will have to be done without call Hash (and hence be linear rather than logarithmic complexity). You will also see warnings like Error in <ROOT::Internal::TCheckHashRecursiveRemoveConsistency::CheckRecursiveRemove>: The class SomeName overrides TObject::Hash but does not call TROOT::RecursiveRemove in its destructor.; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TObject::Hashvirtual ULong_t Hash() constReturn hash value for this object.Definition TObject.cxx:520; TROOT::RecursiveRemovevoid RecursiveRemove(TObject *obj) overrideRecursively remove this object from the list of Cleanups.Definition TROOT.cxx:2498. Reimplemented in TEnvRec, TNamed, TObjString, TParameter< AParamType >, TParameter< Long64_t >, TCollection, TPair, TASImagePlugin, TASPluginGS, TPad, TImagePlugin, TPave, TGObject, TGPicture, TIconBoxThumb, TClassDocInfo, THtml::TFileSysEntry, TStatistic, TDrawFeedback, TStatsFeedback, and RooLinkedList.; Definition at line 520 of file TObject.cxx. ◆ HasInconsistentHash(). Bool_t TObject::HasInconsistentHash ; (; ); const. inline . Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ; missing call to RecursiveRemove in destructor).; Note: Since the consistency is only tested for during inserts, this routine will return true for object th",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:85851,Availability,avail,available,85851," TObject::ResetBit ; (; UInt_t ; f). inline . Definition at line 198 of file TObject.h. ◆ SaveAs(). void TObject::SaveAs ; (; const char * ; filename = """", . Option_t * ; option = """" . ); const. virtual . Save this object in the file specified by filename. . if ""filename"" contains "".root"" the object is saved in filename as root binary file.; if ""filename"" contains "".xml"" the object is saved in filename as a xml ascii file.; if ""filename"" contains "".cc"" the object is saved in filename as C code independant from ROOT. The code is generated via SavePrimitive(). Specific code should be implemented in each object to handle this option. Like in TF1::SavePrimitive().; otherwise the object is written to filename as a CINT/C++ script. The C++ code to rebuild this object is generated via SavePrimitive(). The ""option"" parameter is passed to SavePrimitive. By default it is an empty string. It can be used to specify the Draw option in the code generated by SavePrimitive.; The function is available via the object context menu. . Reimplemented in TSpline, TFolder, TGeoVolume, TClassTree, TPad, TPaveClass, TGObject, TSpline3, TSpline5, ROOT::Experimental::XRooFit::xRooNode, TTreePerfStats, TVirtualPad, TGraph, and TH1.; Definition at line 692 of file TObject.cxx. ◆ SavePrimitive(). void TObject::SavePrimitive ; (; std::ostream & ; out, . Option_t * ; option = """" . ). virtual . Save a primitive as a C++ statement(s) on output stream ""out"". ; Reimplemented in TGeoTessellated, TGraphEdge, TGraphNode, TGeoIdentity, TStyle, TCurlyArc, TCurlyLine, TGedMarkerSelect, TGedPatternSelect, TGColorSelect, TGFont, TGVerticalLayout, TGHorizontalLayout, TGRowLayout, TGColumnLayout, TGMatrixLayout, TGTileLayout, TGListLayout, TGListDetailsLayout, TGTextLBEntry, TGNumberEntryField, TGNumberEntry, TGTableLayoutHints, TGTableLayout, TGTextEdit, TGTextView, TGXYLayoutHints, TGXYLayout, TRootContainer, TGHtml, TEfficiency, TExec, TMacro, TGeoArb8, TGeoTrap, TGeoGtra, TGeoBBox, TGeoBoolNode, TGeoUnion, T",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:115077,Availability,error,error,115077," TTreeSQL, TVirtualIndex, TVirtualTreePlayer, ROOT::Experimental::TTreeReaderFast, ROOT::Internal::TBranchProxyClassDescriptor, ROOT::Internal::TBranchProxyDescriptor, TChainIndex, TFileDrawMap, ROOT::Internal::TFriendProxyDescriptor, TSelectorDraw, TSelectorEntries, TTreeDrawArgsParser, TTreeFormula, TTreeFormulaManager, TTreeIndex, TTreePerfStats, TTreePlayer, TTreeReader, TParallelCoord, TParallelCoordRange, TParallelCoordSelect, TParallelCoordVar, TSpider, TTreeViewer, TTVRecord, TTVSession, iterplugin, h1analysis, h1analysisTreeReader, PyROOT::RegulatorCleanup, ROOT::Internal::TCheckHashRecursiveRemoveConsistency, and ROOT::Experimental::Internal::RKeyBlob.; Definition at line 894 of file TObject.cxx. ◆ StreamerNVirtual(). void TObject::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 243 of file TObject.h. ◆ SysError(). void TObject::SysError ; (; const char * ; location, . const char * ; fmt, .  ; ... . ); const. virtual . Issue system error message. ; Use ""location"" to specify the method where the system error occurred. Accepts standard printf formatting arguments. ; Definition at line 1007 of file TObject.cxx. ◆ TestBit(). R__ALWAYS_INLINE Bool_t TObject::TestBit ; (; UInt_t ; f); const. inline . Definition at line 199 of file TObject.h. ◆ TestBits(). Int_t TObject::TestBits ; (; UInt_t ; f); const. inline . Definition at line 200 of file TObject.h. ◆ UseCurrentStyle(). void TObject::UseCurrentStyle ; (; ). virtual . Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ; Reimplemented in TCanvas, TPad, TFrame, TPaveStats, TPaveText, TAxis3D, TGraph, TH1, and TTree.; Definition at line 807 of file TObject.cxx. ◆ Warning(). void TObject::Warning ; (; const char * ; location, . const char * ; fmt, .  ; ... . ); const. virtual . Issue warning message. ; Use ""location"" to specify the method where the warning occurred. Accepts stand",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:115148,Availability,error,error,115148,"::Experimental::TTreeReaderFast, ROOT::Internal::TBranchProxyClassDescriptor, ROOT::Internal::TBranchProxyDescriptor, TChainIndex, TFileDrawMap, ROOT::Internal::TFriendProxyDescriptor, TSelectorDraw, TSelectorEntries, TTreeDrawArgsParser, TTreeFormula, TTreeFormulaManager, TTreeIndex, TTreePerfStats, TTreePlayer, TTreeReader, TParallelCoord, TParallelCoordRange, TParallelCoordSelect, TParallelCoordVar, TSpider, TTreeViewer, TTVRecord, TTVSession, iterplugin, h1analysis, h1analysisTreeReader, PyROOT::RegulatorCleanup, ROOT::Internal::TCheckHashRecursiveRemoveConsistency, and ROOT::Experimental::Internal::RKeyBlob.; Definition at line 894 of file TObject.cxx. ◆ StreamerNVirtual(). void TObject::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 243 of file TObject.h. ◆ SysError(). void TObject::SysError ; (; const char * ; location, . const char * ; fmt, .  ; ... . ); const. virtual . Issue system error message. ; Use ""location"" to specify the method where the system error occurred. Accepts standard printf formatting arguments. ; Definition at line 1007 of file TObject.cxx. ◆ TestBit(). R__ALWAYS_INLINE Bool_t TObject::TestBit ; (; UInt_t ; f); const. inline . Definition at line 199 of file TObject.h. ◆ TestBits(). Int_t TObject::TestBits ; (; UInt_t ; f); const. inline . Definition at line 200 of file TObject.h. ◆ UseCurrentStyle(). void TObject::UseCurrentStyle ; (; ). virtual . Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ; Reimplemented in TCanvas, TPad, TFrame, TPaveStats, TPaveText, TAxis3D, TGraph, TH1, and TTree.; Definition at line 807 of file TObject.cxx. ◆ Warning(). void TObject::Warning ; (; const char * ; location, . const char * ; fmt, .  ; ... . ); const. virtual . Issue warning message. ; Use ""location"" to specify the method where the warning occurred. Accepts standard printf formatting arguments. ; Definition at l",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:18981,Energy Efficiency,allocate,allocated,18981,"ion (See TClass and TTree::Merge) . Definition at line 97 of file TObject.h. ◆ EDeprecatedStatusBits. enum TObject::EDeprecatedStatusBits. EnumeratorkObjInCanvas for backward compatibility only, use kMustCleanup . Definition at line 75 of file TObject.h. ◆ EStatusBits. enum TObject::EStatusBits. EnumeratorkCanDelete if object in a list can be deleted . kMustCleanup if object destructor must call RecursiveRemove() . kIsReferenced if object is referenced by a TRef or TRefArray . kHasUUID if object has a TUUID (its fUniqueID=UUIDNumber) . kCannotPick if object in a pad cannot be picked . kNoContextMenu if object does not want context menu . kInvalidObject if object ctor succeeded but object should not be used . Definition at line 61 of file TObject.h. Constructor & Destructor Documentation. ◆ TObject() [1/2]. TObject::TObject ; (; ). inline . TObject constructor. ; It sets the two data words of TObject to their initial values. The unique ID is set to 0 and the status word is set depending if the object is created on the stack or allocated on the heap. Depending on the ROOT environment variable ""Root.ObjStat"" (see TEnv) the object is added to the global TObjectTable for bookkeeping. ; Definition at line 254 of file TObject.h. ◆ TObject() [2/2]. TObject::TObject ; (; const TObject & ; object). inline . TObject copy ctor. ; Definition at line 272 of file TObject.h. ◆ ~TObject(). TObject::~TObject ; (; ). virtual . TObject destructor. ; Removes object from all canvases and object browsers if observer bit is on and remove from the global object table. ; Definition at line 164 of file TObject.cxx. Member Function Documentation. ◆ AbstractMethod(). void TObject::AbstractMethod ; (; const char * ; method); const. Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ; Definition at line 1035 of file TObject.cxx. ◆ AddToTObjectTable(). void TObject::AddToTObjectTable ; (; TObject * ; op). staticprivate . Private helper function which wil",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:27009,Energy Efficiency,allocate,allocated,27009,"extView, TDirectoryFile, TFile, TArc, TArrow, TAxis, TBox, TColor, TCrown, TEllipse, TF1, TFormula, TF12, TF2, TF3, ROOT::v5::TFormula, TFrame, THelix, TAxis3D, TH1, TH1C, TH1S, TH1I, TH1L, TH1F, TH1D, TH2, TH2C, TH2S, TH2I, TH2L, TH2F, TH2D, TH3, TH3C, TH3S, TH3I, TH3L, TH3F, TH3D, TProfile, TProfile2D, TProfile3D, TLine, TMarker, TNamed, TH2Poly, TLegend, TLegendEntry, TF1Convolution, TF1NormSum, TH1K, TF1AbsComposition, TPaletteAxis, TPave, TPaveLabel, TPaveClass, TPolyLine, TPolyLine3D, TPolyMarker3D, TPolyMarker, TPieSlice, TStyle, TLatex, TMathText, TText, TWbox, and TXTRU.; Definition at line 146 of file TObject.cxx. ◆ DeclFileName(). static const char * TObject::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 243 of file TObject.h. ◆ Delete(). void TObject::Delete ; (; Option_t * ; option = """"). virtual . Delete this object. ; Typically called as a command via the interpreter. Normally use ""delete"" operator when object has been allocated on the heap. ; Reimplemented in TDirectory, TDirectoryFile, TFile, TSystemDirectory, TSystemFile, TTreeViewer, TGItemContext, TCanvas, TGFrame, TGTextEdit, TAxis, RooLinkedList, TExMap, TObjectTable, TProtoClass, TKeySQL, TKeyXML, TQCommand, TBtree, TClonesArray, THashList, THashTable, TList, TMap, TObjArray, TOrdCollection, TRefArray, TListOfDataMembers, TListOfEnums, TListOfEnumsWithLock, TListOfFunctions, TListOfFunctionTemplates, TViewPubDataMembers, TViewPubFunctions, TThread, TKey, TMVA::Results, TTree, and TCollection.; Definition at line 254 of file TObject.cxx. ◆ DistancetoPrimitive(). Int_t TObject::DistancetoPrimitive ; (; Int_t ; px, . Int_t ; py . ). virtual . Computes distance from point (px,py) to the object. ; This member function must be implemented for each graphics primitive. This default function returns a big number (999999). ; Reimplemented in TGeoTessellated, TStyle, TGeoBBox, TGeoCompositeShape, TGeoCone, TGeoConeSeg, TGeoEltu, TGeoHalfS",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:118168,Energy Efficiency,reduce,reduces,118168,"d buffer is created to hold the compressed buffer.; Reservation of the corresponding space in the file by looking in the TFree list of free blocks of the file.; The buffer is written to the file. Bufsize can be given to force a given buffer size to write this object. By default, the buffersize will be taken from the average buffer size of all objects written to the current file so far.; If a name is specified, it will be the name of the key. If name is not given, the name of the key will be the name as returned by GetName().; The option can be a combination of: kSingleKey, kOverwrite or kWriteDelete Using the kOverwrite option a previous key with the same name is overwritten. The previous key is deleted before writing the new object. Using the kWriteDelete option a previous key with the same name is deleted only after the new object has been written. This option is safer than kOverwrite but it is slower. NOTE: Neither kOverwrite nor kWriteDelete reduces the size of a TFile– the space is simply freed up to be overwritten; in the case of a TTree, it is more complicated. If one opens a TTree, appends some entries, then writes it out, the behaviour is effectively the same. If, however, one creates a new TTree and writes it out in this way, only the metadata is replaced, effectively making the old data invisible without deleting it. TTree::Delete() can be used to mark all disk space occupied by a TTree as free before overwriting its metadata this way. The kSingleKey option is only used by TCollection::Write() to write a container with a single key instead of each object in the container with its own key.; An object is read from the file into memory via TKey::Read() or via TObject::Read().; The function returns the total number of bytes written to the file. It returns 0 if the object cannot be written. ; Reimplemented in TSQLFile, TXMLFile, TDirectory, TBuffer, TFile, TParallelMergingFile, TDirectoryFile, TCollection, TMap, and TTree.; Definition at line 864 of file TObjec",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:525,Integrability,protocol,protocol,525,". ROOT: TObject Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Member Functions |; Static Private Member Functions |; Private Attributes |; Static Private Attributes |; Friends |; List of all members ; TObject Class ReferenceCore ROOT classes » Base ROOT classes. ; Mother of all ROOT objects. ; The TObject class provides default behaviour and protocol for all objects in the ROOT system. It provides protocol for object I/O, error handling, sorting, inspection, printing, drawing, etc. Every object which inherits from TObject can be stored in the ROOT collection classes.; TObject's bits can be used as flags, bits 0 - 13 and 24-31 are reserved as global bits while bits 14 - 23 can be used in different class hierarchies (watch out for overlaps). ; Definition at line 41 of file TObject.h. Public Types; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; v",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:582,Integrability,protocol,protocol,582,". ROOT: TObject Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Member Functions |; Static Private Member Functions |; Private Attributes |; Static Private Attributes |; Friends |; List of all members ; TObject Class ReferenceCore ROOT classes » Base ROOT classes. ; Mother of all ROOT objects. ; The TObject class provides default behaviour and protocol for all objects in the ROOT system. It provides protocol for object I/O, error handling, sorting, inspection, printing, drawing, etc. Every object which inherits from TObject can be stored in the ROOT collection classes.; TObject's bits can be used as flags, bits 0 - 13 and 24-31 are reserved as global bits while bits 14 - 23 can be used in different class hierarchies (watch out for overlaps). ; Definition at line 41 of file TObject.h. Public Types; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; v",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:3356,Integrability,message,message,3356,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:3897,Integrability,message,message,3897,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:5099,Integrability,message,message,5099,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const ch",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:8571,Integrability,message,message,8571,"ead (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static voi",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:8944,Integrability,message,message,8944,"rimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (prote",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:18930,Integrability,depend,depending,18930,"ion (See TClass and TTree::Merge) . Definition at line 97 of file TObject.h. ◆ EDeprecatedStatusBits. enum TObject::EDeprecatedStatusBits. EnumeratorkObjInCanvas for backward compatibility only, use kMustCleanup . Definition at line 75 of file TObject.h. ◆ EStatusBits. enum TObject::EStatusBits. EnumeratorkCanDelete if object in a list can be deleted . kMustCleanup if object destructor must call RecursiveRemove() . kIsReferenced if object is referenced by a TRef or TRefArray . kHasUUID if object has a TUUID (its fUniqueID=UUIDNumber) . kCannotPick if object in a pad cannot be picked . kNoContextMenu if object does not want context menu . kInvalidObject if object ctor succeeded but object should not be used . Definition at line 61 of file TObject.h. Constructor & Destructor Documentation. ◆ TObject() [1/2]. TObject::TObject ; (; ). inline . TObject constructor. ; It sets the two data words of TObject to their initial values. The unique ID is set to 0 and the status word is set depending if the object is created on the stack or allocated on the heap. Depending on the ROOT environment variable ""Root.ObjStat"" (see TEnv) the object is added to the global TObjectTable for bookkeeping. ; Definition at line 254 of file TObject.h. ◆ TObject() [2/2]. TObject::TObject ; (; const TObject & ; object). inline . TObject copy ctor. ; Definition at line 272 of file TObject.h. ◆ ~TObject(). TObject::~TObject ; (; ). virtual . TObject destructor. ; Removes object from all canvases and object browsers if observer bit is on and remove from the global object table. ; Definition at line 164 of file TObject.cxx. Member Function Documentation. ◆ AbstractMethod(). void TObject::AbstractMethod ; (; const char * ; method); const. Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ; Definition at line 1035 of file TObject.cxx. ◆ AddToTObjectTable(). void TObject::AddToTObjectTable ; (; TObject * ; op). staticprivate . Private helper function which wil",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:20010,Integrability,depend,dependency,20010,"nding on the ROOT environment variable ""Root.ObjStat"" (see TEnv) the object is added to the global TObjectTable for bookkeeping. ; Definition at line 254 of file TObject.h. ◆ TObject() [2/2]. TObject::TObject ; (; const TObject & ; object). inline . TObject copy ctor. ; Definition at line 272 of file TObject.h. ◆ ~TObject(). TObject::~TObject ; (; ). virtual . TObject destructor. ; Removes object from all canvases and object browsers if observer bit is on and remove from the global object table. ; Definition at line 164 of file TObject.cxx. Member Function Documentation. ◆ AbstractMethod(). void TObject::AbstractMethod ; (; const char * ; method); const. Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ; Definition at line 1035 of file TObject.cxx. ◆ AddToTObjectTable(). void TObject::AddToTObjectTable ; (; TObject * ; op). staticprivate . Private helper function which will dispatch to TObjectTable::AddObj. ; Included here to avoid circular dependency between header files. ; Definition at line 181 of file TObject.cxx. ◆ AppendPad(). void TObject::AppendPad ; (; Option_t * ; option = """"). virtual . Append graphics object to current pad. ; In case no current pad is set yet, create a default canvas with the name ""c1"". ; Definition at line 190 of file TObject.cxx. ◆ Browse(). void TObject::Browse ; (; TBrowser * ; b). virtual . Browse object. May be overridden for another default action. ; Reimplemented in TASImage, TRecorder, TEfficiency, TGraph2D, TChain, TTree, TDirectory, TFolder, TMacro, TRemoteObject, TROOT, TStyle, TSystemDirectory, TSystemFile, TTask, TCollection, TPair, TBrowserObject, TBaseClass, TClass, TGeoManager, TGeoNode, TGeoVolume, TGeoOverlap, TGeoTrack, TCanvas, TPad, TAxis3D, TGeometry, TNode, TRootIconList, THbookBranch, THbookFile, THbookKey, TF1, TGraph, TH1, THnBase, ROOT::Internal::THnBaseBrowsable, THStack, TMultiDimFit, TMultiGraph, TPrincipal, TDirectoryFile, TKey, TKeyMapFile, TMapFile, TSPlot, T",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:21597,Integrability,rout,routine,21597,"Task, TCollection, TPair, TBrowserObject, TBaseClass, TClass, TGeoManager, TGeoNode, TGeoVolume, TGeoOverlap, TGeoTrack, TCanvas, TPad, TAxis3D, TGeometry, TNode, TRootIconList, THbookBranch, THbookFile, THbookKey, TF1, TGraph, TH1, THnBase, ROOT::Internal::THnBaseBrowsable, THStack, TMultiDimFit, TMultiGraph, TPrincipal, TDirectoryFile, TKey, TKeyMapFile, TMapFile, TSPlot, TDatabasePDG, TGenerator, TParticleClassPDG, TApplicationRemote, TProof, TProofChain, RooPlot, TBranch, TVirtualBranchBrowsable, TCollectionPropertyBrowsable, TBranchClones, TBranchElement, TBranchObject, TBranchSTL, TLeaf, TNtuple, TNtupleD, TTreePerfStats, ROOT::Experimental::XRooFit::xRooNode, and TQueryResult.; Definition at line 204 of file TObject.cxx. ◆ CheckedHash(). ULong_t TObject::CheckedHash ; (; ). inline . Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ; The intent is for this routine to be called instead of directly calling the function Hash during ""insert"" operations. See TObject::HasInconsistenTObjectHash();; (*) The setup is consistent when all classes in the class hierarchy that overload TObject::Hash do call ROOT::CallRecursiveRemoveIfNeeded in their destructor. i.e. it is safe to call the Hash virtual function during the RecursiveRemove operation. ; Definition at line 324 of file TObject.h. ◆ Class(). static TClass * TObject::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TObject::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TObject::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 243 of file TObject.h. ◆ ClassName(). const char * TObject::ClassName ; (; ); const. virtual . Returns name of class to which the object belongs. ; Definition at line 213 of file TObject.cxx. ◆ Clear(). virtual void TObject::Clear ; (; Option_t * ; = """"). ",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:32989,Integrability,message,message,32989,"X of 1st point; fY1 0.15 Y of 1st point; fX2 0.67 X of 2nd point; fY2 0.83 Y of 2nd point; fUniqueID 0 object unique identifier; fBits 50331648 bit field status word; fLineColor 1 line color; fLineStyle 1 line style; fLineWidth 1 line width; fFillColor 19 fill area color; fFillStyle 1001 fill area style; X#define X(type, name); angleOption_t Option_t TPoint TPoint angleDefinition TGWin32VirtualXProxy.cxx:68; widthOption_t Option_t widthDefinition TGWin32VirtualXProxy.cxx:56; styleOption_t Option_t styleDefinition TGWin32VirtualXProxy.cxx:46; TObject::fUniqueIDUInt_t fUniqueIDobject unique identifierDefinition TObject.h:44; TObject::fBitsUInt_t fBitsbit field status wordDefinition TObject.h:45; lineTLine * lineDefinition entrylistblock_figure1.C:235. Reimplemented in TSystemFile, TCollection, TClass, TGFrame, and TGPack.; Definition at line 353 of file TObject.cxx. ◆ Error(). void TObject::Error ; (; const char * ; location, . const char * ; fmt, .  ; ... . ); const. virtual . Issue error message. ; Use ""location"" to specify the method where the error occurred. Accepts standard printf formatting arguments. ; Reimplemented in TFitResult.; Definition at line 993 of file TObject.cxx. ◆ Execute() [1/2]. void TObject::Execute ; (; const char * ; method, . const char * ; params, . Int_t * ; error = nullptr . ). virtual . Execute method on this object with the given parameter string, e.g. ; ""3.14,1,\""text\"""". ; Reimplemented in TMethodCall, TCling, TInterpreter, ROOT::R::TRInterface, and TContextMenu.; Definition at line 364 of file TObject.cxx. ◆ Execute() [2/2]. void TObject::Execute ; (; TMethod * ; method, . TObjArray * ; params, . Int_t * ; error = nullptr . ). virtual . Execute method on this object with parameters stored in the TObjArray. ; The TObjArray should contain an argv vector like: argv[0] ... argv[n] = the list of TObjString parameters; TObjStringCollectable string class.Definition TObjString.h:28; nconst Int_t nDefinition legend1.C:16. Reimplemented in TClin",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:35318,Integrability,message,message,35318,"react to graphics events. ; Reimplemented in TParallelCoord, TParallelCoordRange, TParallelCoordVar, TGeoManager, TGeoNode, TGeoShape, TGeoVolume, TGeoOverlap, TGeoTrack, TASImage, TASPaletteEditor::LimitLine, TButton, TCanvas, TGroupButton, TPad, TSliderBox, TBox, TCrown, TCurlyArc, TCurlyLine, TDiamond, TEllipse, TFrame, TGraphPolargram, TLine, TLink, TMarker, TPave, TPolyLine, TText, TWbox, TGraphEdge, TGraphNode, TAxis3D, TMarker3DBox, TNode, TPolyLine3D, TPolyMarker3D, TView3D, TGL5DDataSet, TGLEventHandler, TGLHistPainter, TGLParametricEquation, TGLTH3Composition, TGLViewer, TAxis, TEfficiency, TF1, TF2, TF3, TGraph, TGraph2D, TH1, TPolyMarker, TScatter, TSpline, THistPainter, TPaletteAxis, TGenerator, TParticle, TPrimary, TFileDrawMap, TTreePerfStats, TSpider, TView, TVirtualHistPainter, TPie, and TGLScenePad.; Definition at line 398 of file TObject.cxx. ◆ Fatal(). void TObject::Fatal ; (; const char * ; location, . const char * ; fmt, .  ; ... . ); const. virtual . Issue fatal error message. ; Use ""location"" to specify the method where the fatal error occurred. Accepts standard printf formatting arguments. ; Definition at line 1021 of file TObject.cxx. ◆ FindObject() [1/2]. TObject * TObject::FindObject ; (; const char * ; name); const. virtual . Must be redefined in derived classes. ; This function is typically used with TCollections, but can also be used to find an object by name inside this object. ; Reimplemented in TListOfEnums, TMap, TDirectory, TFolder, TROOT, TListOfTypes, TListOfTypes, TBtree, TCollection, THashList, THashTable, TList, TObjArray, TListOfDataMembers, TListOfDataMembers, TListOfEnums, TListOfEnumsWithLock, TListOfFunctions, TListOfFunctionTemplates, TListOfFunctionTemplates, TViewPubDataMembers, TViewPubFunctions, TPad, TGeometry, THbookFile, TGraph, TGraph2D, TH1, RooAbsCollection, and RooLinkedList.; Definition at line 408 of file TObject.cxx. ◆ FindObject() [2/2]. TObject * TObject::FindObject ; (; const TObject * ; obj); const. vir",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:41966,Integrability,rout,routine,41966,"ile TObject.cxx. ◆ GetUniqueID(). UInt_t TObject::GetUniqueID ; (; ); const. virtual . Return the unique object id. ; Definition at line 462 of file TObject.cxx. ◆ HandleTimer(). Bool_t TObject::HandleTimer ; (; TTimer * ; timer). virtual . Execute action in response of a timer timing out. ; This method must be overridden if an object has to react to timers. ; Reimplemented in TGWindow, TGuiBldDragManager, TSessionViewer, TGraphTime, TGLEventHandler, TGCommandPlugin, TGDNDManager, TGFileContainer, TGPopupMenu, TGScrollBar, TGShutter, TGTextEdit, TGTextEditor, TGTextEntry, TGTextView, TGToolTip, TGHtml, TVirtualPacketizer, TProofPlayerRemote, TProofPlayerSlave, TProofPlayerSuperMaster, TProofPlayerLite, and TTreeViewer.; Definition at line 498 of file TObject.cxx. ◆ Hash(). ULong_t TObject::Hash ; (; ); const. virtual . Return hash value for this object. ; Note: If this routine is overloaded in a derived class, this derived class should also add ROOT::CallRecursiveRemoveIfNeeded(*this); ROOT::CallRecursiveRemoveIfNeededvoid CallRecursiveRemoveIfNeeded(TObject &obj)call RecursiveRemove for obj if gROOT is valid and obj.TestBit(kMustCleanup) is true.Definition TROOT.h:395; Otherwise, when RecursiveRemove is called (by ~TObject or example) for this type of object, the transversal of THashList and THashTable containers will will have to be done without call Hash (and hence be linear rather than logarithmic complexity). You will also see warnings like Error in <ROOT::Internal::TCheckHashRecursiveRemoveConsistency::CheckRecursiveRemove>: The class SomeName overrides TObject::Hash but does not call TROOT::RecursiveRemove in its destructor.; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TObject::Hashvirtual ULong_t Hash() constReturn hash value for this object.Definition TObject.cxx:520; TROOT::RecursiveRemovevoid RecursiveRemove(TObj",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:42898,Integrability,message,message,42898,"(; ); const. virtual . Return hash value for this object. ; Note: If this routine is overloaded in a derived class, this derived class should also add ROOT::CallRecursiveRemoveIfNeeded(*this); ROOT::CallRecursiveRemoveIfNeededvoid CallRecursiveRemoveIfNeeded(TObject &obj)call RecursiveRemove for obj if gROOT is valid and obj.TestBit(kMustCleanup) is true.Definition TROOT.h:395; Otherwise, when RecursiveRemove is called (by ~TObject or example) for this type of object, the transversal of THashList and THashTable containers will will have to be done without call Hash (and hence be linear rather than logarithmic complexity). You will also see warnings like Error in <ROOT::Internal::TCheckHashRecursiveRemoveConsistency::CheckRecursiveRemove>: The class SomeName overrides TObject::Hash but does not call TROOT::RecursiveRemove in its destructor.; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TObject::Hashvirtual ULong_t Hash() constReturn hash value for this object.Definition TObject.cxx:520; TROOT::RecursiveRemovevoid RecursiveRemove(TObject *obj) overrideRecursively remove this object from the list of Cleanups.Definition TROOT.cxx:2498. Reimplemented in TEnvRec, TNamed, TObjString, TParameter< AParamType >, TParameter< Long64_t >, TCollection, TPair, TASImagePlugin, TASPluginGS, TPad, TImagePlugin, TPave, TGObject, TGPicture, TIconBoxThumb, TClassDocInfo, THtml::TFileSysEntry, TStatistic, TDrawFeedback, TStatsFeedback, and RooLinkedList.; Definition at line 520 of file TObject.cxx. ◆ HasInconsistentHash(). Bool_t TObject::HasInconsistentHash ; (; ); const. inline . Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ; missing call to RecursiveRemove in destructor).; Note: Since the consistency is only tested for during inserts, this routine will return true for object th",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:43855,Integrability,rout,routine,43855,",...) constIssue error message.Definition TObject.cxx:993; TObject::Hashvirtual ULong_t Hash() constReturn hash value for this object.Definition TObject.cxx:520; TROOT::RecursiveRemovevoid RecursiveRemove(TObject *obj) overrideRecursively remove this object from the list of Cleanups.Definition TROOT.cxx:2498. Reimplemented in TEnvRec, TNamed, TObjString, TParameter< AParamType >, TParameter< Long64_t >, TCollection, TPair, TASImagePlugin, TASPluginGS, TPad, TImagePlugin, TPave, TGObject, TGPicture, TIconBoxThumb, TClassDocInfo, THtml::TFileSysEntry, TStatistic, TDrawFeedback, TStatsFeedback, and RooLinkedList.; Definition at line 520 of file TObject.cxx. ◆ HasInconsistentHash(). Bool_t TObject::HasInconsistentHash ; (; ); const. inline . Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ; missing call to RecursiveRemove in destructor).; Note: Since the consistency is only tested for during inserts, this routine will return true for object that have never been inserted whether or not they have a consistent setup. This has no negative side-effect as searching for the object with the right or wrong Hash will always yield a not-found answer (Since anyway no hash can be guaranteed unique, there is always a check) ; Definition at line 358 of file TObject.h. ◆ Info(). void TObject::Info ; (; const char * ; location, . const char * ; fmt, .  ; ... . ); const. virtual . Issue info message. ; Use ""location"" to specify the method where the warning occurred. Accepts standard printf formatting arguments. ; Definition at line 967 of file TObject.cxx. ◆ InheritsFrom() [1/2]. Bool_t TObject::InheritsFrom ; (; const char * ; classname); const. virtual . Returns kTRUE if object inherits from class ""classname"". ; Reimplemented in TClass.; Definition at line 530 of file TObject.cxx. ◆ InheritsFrom() [2/2]. Bool_t TObject::InheritsFrom ; (; const TClass * ; cl); const. virtual . Returns kTRUE if object inherits from TClass c",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:44333,Integrability,message,message,44333,"TPad, TImagePlugin, TPave, TGObject, TGPicture, TIconBoxThumb, TClassDocInfo, THtml::TFileSysEntry, TStatistic, TDrawFeedback, TStatsFeedback, and RooLinkedList.; Definition at line 520 of file TObject.cxx. ◆ HasInconsistentHash(). Bool_t TObject::HasInconsistentHash ; (; ); const. inline . Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ; missing call to RecursiveRemove in destructor).; Note: Since the consistency is only tested for during inserts, this routine will return true for object that have never been inserted whether or not they have a consistent setup. This has no negative side-effect as searching for the object with the right or wrong Hash will always yield a not-found answer (Since anyway no hash can be guaranteed unique, there is always a check) ; Definition at line 358 of file TObject.h. ◆ Info(). void TObject::Info ; (; const char * ; location, . const char * ; fmt, .  ; ... . ); const. virtual . Issue info message. ; Use ""location"" to specify the method where the warning occurred. Accepts standard printf formatting arguments. ; Definition at line 967 of file TObject.cxx. ◆ InheritsFrom() [1/2]. Bool_t TObject::InheritsFrom ; (; const char * ; classname); const. virtual . Returns kTRUE if object inherits from class ""classname"". ; Reimplemented in TClass.; Definition at line 530 of file TObject.cxx. ◆ InheritsFrom() [2/2]. Bool_t TObject::InheritsFrom ; (; const TClass * ; cl); const. virtual . Returns kTRUE if object inherits from TClass cl. ; Reimplemented in TClass.; Definition at line 538 of file TObject.cxx. ◆ Inspect(). void TObject::Inspect ; (; ); const. virtual . Dump contents of this object in a graphics canvas. ; Same action as Dump but in a graphical form. In addition pointers to other objects can be followed.; The following picture is the Inspect of a histogram object: . Reimplemented in TSystemFile, TInspectorObject, TGFrame, and ROOT::Experimental::XRooFit::xRooNode.; Defi",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:115083,Integrability,message,message,115083," TTreeSQL, TVirtualIndex, TVirtualTreePlayer, ROOT::Experimental::TTreeReaderFast, ROOT::Internal::TBranchProxyClassDescriptor, ROOT::Internal::TBranchProxyDescriptor, TChainIndex, TFileDrawMap, ROOT::Internal::TFriendProxyDescriptor, TSelectorDraw, TSelectorEntries, TTreeDrawArgsParser, TTreeFormula, TTreeFormulaManager, TTreeIndex, TTreePerfStats, TTreePlayer, TTreeReader, TParallelCoord, TParallelCoordRange, TParallelCoordSelect, TParallelCoordVar, TSpider, TTreeViewer, TTVRecord, TTVSession, iterplugin, h1analysis, h1analysisTreeReader, PyROOT::RegulatorCleanup, ROOT::Internal::TCheckHashRecursiveRemoveConsistency, and ROOT::Experimental::Internal::RKeyBlob.; Definition at line 894 of file TObject.cxx. ◆ StreamerNVirtual(). void TObject::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 243 of file TObject.h. ◆ SysError(). void TObject::SysError ; (; const char * ; location, . const char * ; fmt, .  ; ... . ); const. virtual . Issue system error message. ; Use ""location"" to specify the method where the system error occurred. Accepts standard printf formatting arguments. ; Definition at line 1007 of file TObject.cxx. ◆ TestBit(). R__ALWAYS_INLINE Bool_t TObject::TestBit ; (; UInt_t ; f); const. inline . Definition at line 199 of file TObject.h. ◆ TestBits(). Int_t TObject::TestBits ; (; UInt_t ; f); const. inline . Definition at line 200 of file TObject.h. ◆ UseCurrentStyle(). void TObject::UseCurrentStyle ; (; ). virtual . Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ; Reimplemented in TCanvas, TPad, TFrame, TPaveStats, TPaveText, TAxis3D, TGraph, TH1, and TTree.; Definition at line 807 of file TObject.cxx. ◆ Warning(). void TObject::Warning ; (; const char * ; location, . const char * ; fmt, .  ; ... . ); const. virtual . Issue warning message. ; Use ""location"" to specify the method where the warning occurred. Accepts stand",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:115988,Integrability,message,message,115988,"; const char * ; location, . const char * ; fmt, .  ; ... . ); const. virtual . Issue system error message. ; Use ""location"" to specify the method where the system error occurred. Accepts standard printf formatting arguments. ; Definition at line 1007 of file TObject.cxx. ◆ TestBit(). R__ALWAYS_INLINE Bool_t TObject::TestBit ; (; UInt_t ; f); const. inline . Definition at line 199 of file TObject.h. ◆ TestBits(). Int_t TObject::TestBits ; (; UInt_t ; f); const. inline . Definition at line 200 of file TObject.h. ◆ UseCurrentStyle(). void TObject::UseCurrentStyle ; (; ). virtual . Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ; Reimplemented in TCanvas, TPad, TFrame, TPaveStats, TPaveText, TAxis3D, TGraph, TH1, and TTree.; Definition at line 807 of file TObject.cxx. ◆ Warning(). void TObject::Warning ; (; const char * ; location, . const char * ; fmt, .  ; ... . ); const. virtual . Issue warning message. ; Use ""location"" to specify the method where the warning occurred. Accepts standard printf formatting arguments. ; Definition at line 979 of file TObject.cxx. ◆ Write() [1/2]. Int_t TObject::Write ; (; const char * ; name = nullptr, . Int_t ; option = 0, . Int_t ; bufsize = 0 . ). virtual . Write this object to the current directory. ; For more see the const version of this method. ; Reimplemented in TSQLFile, TXMLFile, TDirectory, TBuffer, TFile, TParallelMergingFile, ROOT::TBufferMergerFile, TDirectoryFile, TCollection, TMap, and TTree.; Definition at line 886 of file TObject.cxx. ◆ Write() [2/2]. Int_t TObject::Write ; (; const char * ; name = nullptr, . Int_t ; option = 0, . Int_t ; bufsize = 0 . ); const. virtual . Write this object to the current directory. ; The data structure corresponding to this object is serialized. The corresponding buffer is written to the current directory with an associated key with name ""name"".; Writing an object to a file involves the follo",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:687,Modifiability,inherit,inherits,687,". ROOT: TObject Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Member Functions |; Static Private Member Functions |; Private Attributes |; Static Private Attributes |; Friends |; List of all members ; TObject Class ReferenceCore ROOT classes » Base ROOT classes. ; Mother of all ROOT objects. ; The TObject class provides default behaviour and protocol for all objects in the ROOT system. It provides protocol for object I/O, error handling, sorting, inspection, printing, drawing, etc. Every object which inherits from TObject can be stored in the ROOT collection classes.; TObject's bits can be used as flags, bits 0 - 13 and 24-31 are reserved as global bits while bits 14 - 23 can be used in different class hierarchies (watch out for overlaps). ; Definition at line 41 of file TObject.h. Public Types; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; v",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:2986,Modifiability,inherit,inheritance,2986,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:5197,Modifiability,inherit,inherits,5197,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a b",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:5314,Modifiability,inherit,inherits,5314,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not pro",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:19038,Modifiability,variab,variable,19038,"dStatusBits. enum TObject::EDeprecatedStatusBits. EnumeratorkObjInCanvas for backward compatibility only, use kMustCleanup . Definition at line 75 of file TObject.h. ◆ EStatusBits. enum TObject::EStatusBits. EnumeratorkCanDelete if object in a list can be deleted . kMustCleanup if object destructor must call RecursiveRemove() . kIsReferenced if object is referenced by a TRef or TRefArray . kHasUUID if object has a TUUID (its fUniqueID=UUIDNumber) . kCannotPick if object in a pad cannot be picked . kNoContextMenu if object does not want context menu . kInvalidObject if object ctor succeeded but object should not be used . Definition at line 61 of file TObject.h. Constructor & Destructor Documentation. ◆ TObject() [1/2]. TObject::TObject ; (; ). inline . TObject constructor. ; It sets the two data words of TObject to their initial values. The unique ID is set to 0 and the status word is set depending if the object is created on the stack or allocated on the heap. Depending on the ROOT environment variable ""Root.ObjStat"" (see TEnv) the object is added to the global TObjectTable for bookkeeping. ; Definition at line 254 of file TObject.h. ◆ TObject() [2/2]. TObject::TObject ; (; const TObject & ; object). inline . TObject copy ctor. ; Definition at line 272 of file TObject.h. ◆ ~TObject(). TObject::~TObject ; (; ). virtual . TObject destructor. ; Removes object from all canvases and object browsers if observer bit is on and remove from the global object table. ; Definition at line 164 of file TObject.cxx. Member Function Documentation. ◆ AbstractMethod(). void TObject::AbstractMethod ; (; const char * ; method); const. Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ; Definition at line 1035 of file TObject.cxx. ◆ AddToTObjectTable(). void TObject::AddToTObjectTable ; (; TObject * ; op). staticprivate . Private helper function which will dispatch to TObjectTable::AddObj. ; Included here to avoid circular dependency between",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:30778,Modifiability,inherit,inheritance,30778,"emanSol, TGeoNode, TGeoPhysicalNode, TGeoPolygon, TGeoShape, TGeoVolume, TGeoOverlap, TGeoPainter, TGeoTrack, TGeoVGShape, TASImage, TButton, TCanvas, TColorWheel, TPad, TArrow, TBox, TDiamond, TEllipse, TFrame, TLegend, TMarker, TPave, TPaveLabel, TPavesText, TPaveText, TPolyLine, TWbox, TGraphStruct, TEveGeoNode, TEveGeoTopNode, TGeometry, THelix, TNode, TNodeDiv, TPolyLine3D, TPolyMarker3D, TStructViewer, TStructViewerGUI, TF1, TF2, TF3, TH1, TPolyMarker, TSpline, TFile, TMatrixTBase< Element >, TMatrixTBase< AReal >, TMatrixTBase< Double_t >, TVectorT< Element >, TVectorT< Double_t >, TMultiLayerPerceptron, TGenerator, RooAbsData, RooTreeDataStore, TTreePerfStats, TParallelCoordVar, TGItemContext, TVirtualPad, TPie, TGraph2D, TGraphPolar, TGraphPolargram, TParallelCoord, TParallelCoordRange, TSpider, RooPlot, and RooStats::SamplingDistPlot.; Definition at line 280 of file TObject.cxx. ◆ DrawClass(). void TObject::DrawClass ; (; ); const. virtual . Draw class inheritance tree of the class to which this object belongs. ; If a class B inherits from a class A, description of B is drawn on the right side of description of A. Member functions overridden by B are shown in class A with a blue line crossing-out the corresponding member function. The following picture is the class inheritance tree of class TPaveLabel:. Reimplemented in TSystemDirectory, TSystemFile, and TGFrame.; Definition at line 295 of file TObject.cxx. ◆ DrawClone(). TObject * TObject::DrawClone ; (; Option_t * ; option = """"); const. virtual . Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ; If pad was not selected - gPad will be used. ; Reimplemented in TSystemDirectory, TSystemFile, TGFrame, TAxis, and TCanvas.; Definition at line 305 of file TObject.cxx. ◆ Dump(). void TObject::Dump ; (; ); const. virtual . Dump contents of object on stdout. ; Using the information in the object dictionary (class TClass) each data member is interpreted. If a data member is a",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:30853,Modifiability,inherit,inherits,30853,"eoPainter, TGeoTrack, TGeoVGShape, TASImage, TButton, TCanvas, TColorWheel, TPad, TArrow, TBox, TDiamond, TEllipse, TFrame, TLegend, TMarker, TPave, TPaveLabel, TPavesText, TPaveText, TPolyLine, TWbox, TGraphStruct, TEveGeoNode, TEveGeoTopNode, TGeometry, THelix, TNode, TNodeDiv, TPolyLine3D, TPolyMarker3D, TStructViewer, TStructViewerGUI, TF1, TF2, TF3, TH1, TPolyMarker, TSpline, TFile, TMatrixTBase< Element >, TMatrixTBase< AReal >, TMatrixTBase< Double_t >, TVectorT< Element >, TVectorT< Double_t >, TMultiLayerPerceptron, TGenerator, RooAbsData, RooTreeDataStore, TTreePerfStats, TParallelCoordVar, TGItemContext, TVirtualPad, TPie, TGraph2D, TGraphPolar, TGraphPolargram, TParallelCoord, TParallelCoordRange, TSpider, RooPlot, and RooStats::SamplingDistPlot.; Definition at line 280 of file TObject.cxx. ◆ DrawClass(). void TObject::DrawClass ; (; ); const. virtual . Draw class inheritance tree of the class to which this object belongs. ; If a class B inherits from a class A, description of B is drawn on the right side of description of A. Member functions overridden by B are shown in class A with a blue line crossing-out the corresponding member function. The following picture is the class inheritance tree of class TPaveLabel:. Reimplemented in TSystemDirectory, TSystemFile, and TGFrame.; Definition at line 295 of file TObject.cxx. ◆ DrawClone(). TObject * TObject::DrawClone ; (; Option_t * ; option = """"); const. virtual . Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ; If pad was not selected - gPad will be used. ; Reimplemented in TSystemDirectory, TSystemFile, TGFrame, TAxis, and TCanvas.; Definition at line 305 of file TObject.cxx. ◆ Dump(). void TObject::Dump ; (; ); const. virtual . Dump contents of object on stdout. ; Using the information in the object dictionary (class TClass) each data member is interpreted. If a data member is a pointer, the pointer value is printed; The following output is the Dump of a TArrow obj",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:31097,Modifiability,inherit,inheritance,31097,"truct, TEveGeoNode, TEveGeoTopNode, TGeometry, THelix, TNode, TNodeDiv, TPolyLine3D, TPolyMarker3D, TStructViewer, TStructViewerGUI, TF1, TF2, TF3, TH1, TPolyMarker, TSpline, TFile, TMatrixTBase< Element >, TMatrixTBase< AReal >, TMatrixTBase< Double_t >, TVectorT< Element >, TVectorT< Double_t >, TMultiLayerPerceptron, TGenerator, RooAbsData, RooTreeDataStore, TTreePerfStats, TParallelCoordVar, TGItemContext, TVirtualPad, TPie, TGraph2D, TGraphPolar, TGraphPolargram, TParallelCoord, TParallelCoordRange, TSpider, RooPlot, and RooStats::SamplingDistPlot.; Definition at line 280 of file TObject.cxx. ◆ DrawClass(). void TObject::DrawClass ; (; ); const. virtual . Draw class inheritance tree of the class to which this object belongs. ; If a class B inherits from a class A, description of B is drawn on the right side of description of A. Member functions overridden by B are shown in class A with a blue line crossing-out the corresponding member function. The following picture is the class inheritance tree of class TPaveLabel:. Reimplemented in TSystemDirectory, TSystemFile, and TGFrame.; Definition at line 295 of file TObject.cxx. ◆ DrawClone(). TObject * TObject::DrawClone ; (; Option_t * ; option = """"); const. virtual . Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ; If pad was not selected - gPad will be used. ; Reimplemented in TSystemDirectory, TSystemFile, TGFrame, TAxis, and TCanvas.; Definition at line 305 of file TObject.cxx. ◆ Dump(). void TObject::Dump ; (; ); const. virtual . Dump contents of object on stdout. ; Using the information in the object dictionary (class TClass) each data member is interpreted. If a data member is a pointer, the pointer value is printed; The following output is the Dump of a TArrow object: fAngle 0 Arrow opening angle (degrees); fArrowSize 0.2 Arrow Size; fOption.*fData; fX1 0.1 X of 1st point; fY1 0.15 Y of 1st point; fX2 0.67 X of 2nd point; fY2 0.83 Y of 2nd point; fUniqueID 0 object un",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:44627,Modifiability,inherit,inherits,44627,"true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ; missing call to RecursiveRemove in destructor).; Note: Since the consistency is only tested for during inserts, this routine will return true for object that have never been inserted whether or not they have a consistent setup. This has no negative side-effect as searching for the object with the right or wrong Hash will always yield a not-found answer (Since anyway no hash can be guaranteed unique, there is always a check) ; Definition at line 358 of file TObject.h. ◆ Info(). void TObject::Info ; (; const char * ; location, . const char * ; fmt, .  ; ... . ); const. virtual . Issue info message. ; Use ""location"" to specify the method where the warning occurred. Accepts standard printf formatting arguments. ; Definition at line 967 of file TObject.cxx. ◆ InheritsFrom() [1/2]. Bool_t TObject::InheritsFrom ; (; const char * ; classname); const. virtual . Returns kTRUE if object inherits from class ""classname"". ; Reimplemented in TClass.; Definition at line 530 of file TObject.cxx. ◆ InheritsFrom() [2/2]. Bool_t TObject::InheritsFrom ; (; const TClass * ; cl); const. virtual . Returns kTRUE if object inherits from TClass cl. ; Reimplemented in TClass.; Definition at line 538 of file TObject.cxx. ◆ Inspect(). void TObject::Inspect ; (; ); const. virtual . Dump contents of this object in a graphics canvas. ; Same action as Dump but in a graphical form. In addition pointers to other objects can be followed.; The following picture is the Inspect of a histogram object: . Reimplemented in TSystemFile, TInspectorObject, TGFrame, and ROOT::Experimental::XRooFit::xRooNode.; Definition at line 551 of file TObject.cxx. ◆ InvertBit(). void TObject::InvertBit ; (; UInt_t ; f). inline . Definition at line 201 of file TObject.h. ◆ IsA(). virtual TClass * TObject::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Reimplemented in PyROOT::RegulatorCleanu",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:44853,Modifiability,inherit,inherits,44853,"is routine will return true for object that have never been inserted whether or not they have a consistent setup. This has no negative side-effect as searching for the object with the right or wrong Hash will always yield a not-found answer (Since anyway no hash can be guaranteed unique, there is always a check) ; Definition at line 358 of file TObject.h. ◆ Info(). void TObject::Info ; (; const char * ; location, . const char * ; fmt, .  ; ... . ); const. virtual . Issue info message. ; Use ""location"" to specify the method where the warning occurred. Accepts standard printf formatting arguments. ; Definition at line 967 of file TObject.cxx. ◆ InheritsFrom() [1/2]. Bool_t TObject::InheritsFrom ; (; const char * ; classname); const. virtual . Returns kTRUE if object inherits from class ""classname"". ; Reimplemented in TClass.; Definition at line 530 of file TObject.cxx. ◆ InheritsFrom() [2/2]. Bool_t TObject::InheritsFrom ; (; const TClass * ; cl); const. virtual . Returns kTRUE if object inherits from TClass cl. ; Reimplemented in TClass.; Definition at line 538 of file TObject.cxx. ◆ Inspect(). void TObject::Inspect ; (; ); const. virtual . Dump contents of this object in a graphics canvas. ; Same action as Dump but in a graphical form. In addition pointers to other objects can be followed.; The following picture is the Inspect of a histogram object: . Reimplemented in TSystemFile, TInspectorObject, TGFrame, and ROOT::Experimental::XRooFit::xRooNode.; Definition at line 551 of file TObject.cxx. ◆ InvertBit(). void TObject::InvertBit ; (; UInt_t ; f). inline . Definition at line 201 of file TObject.h. ◆ IsA(). virtual TClass * TObject::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Reimplemented in PyROOT::RegulatorCleanup, ROOT::R::TRDataFrame, ROOT::R::TRFunctionExport, ROOT::R::TRFunctionImport, ROOT::R::TRInterface, ROOT::R::TRObject, TVirtualMapFile, TDavixFile, TDavixSystem, ROOT::Experimental::XRooFit::xRooFit::StoredFitResult, ROOT",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:74124,Performance,load,load,74124,"t, TVirtualPad, TTask, TNode, and TGeometry.; Definition at line 579 of file TObject.cxx. ◆ MakeZombie(). void TObject::MakeZombie ; (; ). inlineprotected . Definition at line 53 of file TObject.h. ◆ MayNotUse(). void TObject::MayNotUse ; (; const char * ; method); const. Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ; Definition at line 1046 of file TObject.cxx. ◆ Notify(). Bool_t TObject::Notify ; (; ). virtual . This method must be overridden to handle object notification (the base implementation is no-op). ; Different objects in ROOT use the Notify method for different purposes, in coordination with other objects that call this method at the appropriate time.; For example, TLeaf uses it to load class information; TBranchRef to load contents of referenced branches TBranchRef; most notably, based on Notify, TChain implements a callback mechanism to inform interested parties when it switches to a new sub-tree. ; Reimplemented in TSelEvent, TMessageHandler, TNotifyLink< Type >, TNotifyLink< RNoCleanupNotifierHelper >, TNotifyLink< ROOT::Detail::TBranchProxy >, TNotifyLink< TTreeReader >, TFileHandler, TSignalHandler, TStdExceptionHandler, TProcessEventTimer, TTimer, TIdleTimer, TSingleShotCleaner, TCollection, TRefTable, TBrowserTimer, TInterruptHandler, TTermInputHandler, TThreadTimer, TGLRedrawTimer, TViewTimer, TGContainerKeyboardTimer, TGContainerScrollTimer, TGInputHandler, TViewUpdateTimer, TPopupDelayTimer, TRepeatTimer, TSBRepeatTimer, TGTextEditHist, TInsCharCom, TDelCharCom, TBreakLineCom, TInsTextCom, TDelTextCom, TBlinkTimer, TTipDelayTimer, TGuiBldDragManagerRepeatTimer, TARInterruptHandler, TASLogHandler, TASInterruptHandler, TASSigPipeHandler, TASInputHandler, TSocketHandler, TTimeOutTimer, TProofInterruptHandler, TProofInputHandler, TProofServLogHandle",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:74162,Performance,load,load,74162,"t, TVirtualPad, TTask, TNode, and TGeometry.; Definition at line 579 of file TObject.cxx. ◆ MakeZombie(). void TObject::MakeZombie ; (; ). inlineprotected . Definition at line 53 of file TObject.h. ◆ MayNotUse(). void TObject::MayNotUse ; (; const char * ; method); const. Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ; Definition at line 1046 of file TObject.cxx. ◆ Notify(). Bool_t TObject::Notify ; (; ). virtual . This method must be overridden to handle object notification (the base implementation is no-op). ; Different objects in ROOT use the Notify method for different purposes, in coordination with other objects that call this method at the appropriate time.; For example, TLeaf uses it to load class information; TBranchRef to load contents of referenced branches TBranchRef; most notably, based on Notify, TChain implements a callback mechanism to inform interested parties when it switches to a new sub-tree. ; Reimplemented in TSelEvent, TMessageHandler, TNotifyLink< Type >, TNotifyLink< RNoCleanupNotifierHelper >, TNotifyLink< ROOT::Detail::TBranchProxy >, TNotifyLink< TTreeReader >, TFileHandler, TSignalHandler, TStdExceptionHandler, TProcessEventTimer, TTimer, TIdleTimer, TSingleShotCleaner, TCollection, TRefTable, TBrowserTimer, TInterruptHandler, TTermInputHandler, TThreadTimer, TGLRedrawTimer, TViewTimer, TGContainerKeyboardTimer, TGContainerScrollTimer, TGInputHandler, TViewUpdateTimer, TPopupDelayTimer, TRepeatTimer, TSBRepeatTimer, TGTextEditHist, TInsCharCom, TDelCharCom, TBreakLineCom, TInsTextCom, TDelTextCom, TBlinkTimer, TTipDelayTimer, TGuiBldDragManagerRepeatTimer, TARInterruptHandler, TASLogHandler, TASInterruptHandler, TASSigPipeHandler, TASInputHandler, TSocketHandler, TTimeOutTimer, TProofInterruptHandler, TProofInputHandler, TProofServLogHandle",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:19995,Safety,avoid,avoid,19995,"nding on the ROOT environment variable ""Root.ObjStat"" (see TEnv) the object is added to the global TObjectTable for bookkeeping. ; Definition at line 254 of file TObject.h. ◆ TObject() [2/2]. TObject::TObject ; (; const TObject & ; object). inline . TObject copy ctor. ; Definition at line 272 of file TObject.h. ◆ ~TObject(). TObject::~TObject ; (; ). virtual . TObject destructor. ; Removes object from all canvases and object browsers if observer bit is on and remove from the global object table. ; Definition at line 164 of file TObject.cxx. Member Function Documentation. ◆ AbstractMethod(). void TObject::AbstractMethod ; (; const char * ; method); const. Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ; Definition at line 1035 of file TObject.cxx. ◆ AddToTObjectTable(). void TObject::AddToTObjectTable ; (; TObject * ; op). staticprivate . Private helper function which will dispatch to TObjectTable::AddObj. ; Included here to avoid circular dependency between header files. ; Definition at line 181 of file TObject.cxx. ◆ AppendPad(). void TObject::AppendPad ; (; Option_t * ; option = """"). virtual . Append graphics object to current pad. ; In case no current pad is set yet, create a default canvas with the name ""c1"". ; Definition at line 190 of file TObject.cxx. ◆ Browse(). void TObject::Browse ; (; TBrowser * ; b). virtual . Browse object. May be overridden for another default action. ; Reimplemented in TASImage, TRecorder, TEfficiency, TGraph2D, TChain, TTree, TDirectory, TFolder, TMacro, TRemoteObject, TROOT, TStyle, TSystemDirectory, TSystemFile, TTask, TCollection, TPair, TBrowserObject, TBaseClass, TClass, TGeoManager, TGeoNode, TGeoVolume, TGeoOverlap, TGeoTrack, TCanvas, TPad, TAxis3D, TGeometry, TNode, TRootIconList, THbookBranch, THbookFile, THbookKey, TF1, TGraph, TH1, THnBase, ROOT::Internal::THnBaseBrowsable, THStack, TMultiDimFit, TMultiGraph, TPrincipal, TDirectoryFile, TKey, TKeyMapFile, TMapFile, TSPlot, T",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:21905,Safety,safe,safe,21905,"ph, TPrincipal, TDirectoryFile, TKey, TKeyMapFile, TMapFile, TSPlot, TDatabasePDG, TGenerator, TParticleClassPDG, TApplicationRemote, TProof, TProofChain, RooPlot, TBranch, TVirtualBranchBrowsable, TCollectionPropertyBrowsable, TBranchClones, TBranchElement, TBranchObject, TBranchSTL, TLeaf, TNtuple, TNtupleD, TTreePerfStats, ROOT::Experimental::XRooFit::xRooNode, and TQueryResult.; Definition at line 204 of file TObject.cxx. ◆ CheckedHash(). ULong_t TObject::CheckedHash ; (; ). inline . Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ; The intent is for this routine to be called instead of directly calling the function Hash during ""insert"" operations. See TObject::HasInconsistenTObjectHash();; (*) The setup is consistent when all classes in the class hierarchy that overload TObject::Hash do call ROOT::CallRecursiveRemoveIfNeeded in their destructor. i.e. it is safe to call the Hash virtual function during the RecursiveRemove operation. ; Definition at line 324 of file TObject.h. ◆ Class(). static TClass * TObject::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TObject::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TObject::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 243 of file TObject.h. ◆ ClassName(). const char * TObject::ClassName ; (; ); const. virtual . Returns name of class to which the object belongs. ; Definition at line 213 of file TObject.cxx. ◆ Clear(). virtual void TObject::Clear ; (; Option_t * ; = """"). inlinevirtual . Reimplemented in TMVA::ResultsClassification, TMVA::ResultsMulticlass, TMVA::ResultsRegression, TMVA::ResultsClassification, TMVA::ResultsMulticlass, TMVA::ResultsRegression, TMrbSubevent_Caen, TNotifyLinkBase, TRefTable, ROOT::TSchemaRule, TGTextEdit, TGTextView, TGView, TGHtml, TStreamerInf",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:118086,Safety,safe,safer,118086,"t.; The TBuffer object is filled via the class::Streamer function.; If the file is compressed (default) a second buffer is created to hold the compressed buffer.; Reservation of the corresponding space in the file by looking in the TFree list of free blocks of the file.; The buffer is written to the file. Bufsize can be given to force a given buffer size to write this object. By default, the buffersize will be taken from the average buffer size of all objects written to the current file so far.; If a name is specified, it will be the name of the key. If name is not given, the name of the key will be the name as returned by GetName().; The option can be a combination of: kSingleKey, kOverwrite or kWriteDelete Using the kOverwrite option a previous key with the same name is overwritten. The previous key is deleted before writing the new object. Using the kWriteDelete option a previous key with the same name is deleted only after the new object has been written. This option is safer than kOverwrite but it is slower. NOTE: Neither kOverwrite nor kWriteDelete reduces the size of a TFile– the space is simply freed up to be overwritten; in the case of a TTree, it is more complicated. If one opens a TTree, appends some entries, then writes it out, the behaviour is effectively the same. If, however, one creates a new TTree and writes it out in this way, only the metadata is replaced, effectively making the old data invisible without deleting it. TTree::Delete() can be used to mark all disk space occupied by a TTree as free before overwriting its metadata this way. The kSingleKey option is only used by TCollection::Write() to write a container with a single key instead of each object in the container with its own key.; An object is read from the file into memory via TKey::Read() or via TObject::Read().; The function returns the total number of bytes written to the file. It returns 0 if the object cannot be written. ; Reimplemented in TSQLFile, TXMLFile, TDirectory, TBuffer, TF",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:4828,Security,hash,hash,4828," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other obje",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:41922,Security,hash,hash,41922,"extEntry, TRootIconList, TAxis, TKey, TMapFile, TParticle, TPrimary, TPackMgr, Axis2, TParallelCoordSelect, and TVirtualPad.; Definition at line 488 of file TObject.cxx. ◆ GetUniqueID(). UInt_t TObject::GetUniqueID ; (; ); const. virtual . Return the unique object id. ; Definition at line 462 of file TObject.cxx. ◆ HandleTimer(). Bool_t TObject::HandleTimer ; (; TTimer * ; timer). virtual . Execute action in response of a timer timing out. ; This method must be overridden if an object has to react to timers. ; Reimplemented in TGWindow, TGuiBldDragManager, TSessionViewer, TGraphTime, TGLEventHandler, TGCommandPlugin, TGDNDManager, TGFileContainer, TGPopupMenu, TGScrollBar, TGShutter, TGTextEdit, TGTextEditor, TGTextEntry, TGTextView, TGToolTip, TGHtml, TVirtualPacketizer, TProofPlayerRemote, TProofPlayerSlave, TProofPlayerSuperMaster, TProofPlayerLite, and TTreeViewer.; Definition at line 498 of file TObject.cxx. ◆ Hash(). ULong_t TObject::Hash ; (; ); const. virtual . Return hash value for this object. ; Note: If this routine is overloaded in a derived class, this derived class should also add ROOT::CallRecursiveRemoveIfNeeded(*this); ROOT::CallRecursiveRemoveIfNeededvoid CallRecursiveRemoveIfNeeded(TObject &obj)call RecursiveRemove for obj if gROOT is valid and obj.TestBit(kMustCleanup) is true.Definition TROOT.h:395; Otherwise, when RecursiveRemove is called (by ~TObject or example) for this type of object, the transversal of THashList and THashTable containers will will have to be done without call Hash (and hence be linear rather than logarithmic complexity). You will also see warnings like Error in <ROOT::Internal::TCheckHashRecursiveRemoveConsistency::CheckRecursiveRemove>: The class SomeName overrides TObject::Hash but does not call TROOT::RecursiveRemove in its destructor.; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:42982,Security,hash,hash,42982,"outine is overloaded in a derived class, this derived class should also add ROOT::CallRecursiveRemoveIfNeeded(*this); ROOT::CallRecursiveRemoveIfNeededvoid CallRecursiveRemoveIfNeeded(TObject &obj)call RecursiveRemove for obj if gROOT is valid and obj.TestBit(kMustCleanup) is true.Definition TROOT.h:395; Otherwise, when RecursiveRemove is called (by ~TObject or example) for this type of object, the transversal of THashList and THashTable containers will will have to be done without call Hash (and hence be linear rather than logarithmic complexity). You will also see warnings like Error in <ROOT::Internal::TCheckHashRecursiveRemoveConsistency::CheckRecursiveRemove>: The class SomeName overrides TObject::Hash but does not call TROOT::RecursiveRemove in its destructor.; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TObject::Hashvirtual ULong_t Hash() constReturn hash value for this object.Definition TObject.cxx:520; TROOT::RecursiveRemovevoid RecursiveRemove(TObject *obj) overrideRecursively remove this object from the list of Cleanups.Definition TROOT.cxx:2498. Reimplemented in TEnvRec, TNamed, TObjString, TParameter< AParamType >, TParameter< Long64_t >, TCollection, TPair, TASImagePlugin, TASPluginGS, TPad, TImagePlugin, TPave, TGObject, TGPicture, TIconBoxThumb, TClassDocInfo, THtml::TFileSysEntry, TStatistic, TDrawFeedback, TStatsFeedback, and RooLinkedList.; Definition at line 520 of file TObject.cxx. ◆ HasInconsistentHash(). Bool_t TObject::HasInconsistentHash ; (; ); const. inline . Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ; missing call to RecursiveRemove in destructor).; Note: Since the consistency is only tested for during inserts, this routine will return true for object that have never been inserted whether or not they have a consistent setup. T",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:44110,Security,hash,hash,44110,"t *obj) overrideRecursively remove this object from the list of Cleanups.Definition TROOT.cxx:2498. Reimplemented in TEnvRec, TNamed, TObjString, TParameter< AParamType >, TParameter< Long64_t >, TCollection, TPair, TASImagePlugin, TASPluginGS, TPad, TImagePlugin, TPave, TGObject, TGPicture, TIconBoxThumb, TClassDocInfo, THtml::TFileSysEntry, TStatistic, TDrawFeedback, TStatsFeedback, and RooLinkedList.; Definition at line 520 of file TObject.cxx. ◆ HasInconsistentHash(). Bool_t TObject::HasInconsistentHash ; (; ); const. inline . Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ; missing call to RecursiveRemove in destructor).; Note: Since the consistency is only tested for during inserts, this routine will return true for object that have never been inserted whether or not they have a consistent setup. This has no negative side-effect as searching for the object with the right or wrong Hash will always yield a not-found answer (Since anyway no hash can be guaranteed unique, there is always a check) ; Definition at line 358 of file TObject.h. ◆ Info(). void TObject::Info ; (; const char * ; location, . const char * ; fmt, .  ; ... . ); const. virtual . Issue info message. ; Use ""location"" to specify the method where the warning occurred. Accepts standard printf formatting arguments. ; Definition at line 967 of file TObject.cxx. ◆ InheritsFrom() [1/2]. Bool_t TObject::InheritsFrom ; (; const char * ; classname); const. virtual . Returns kTRUE if object inherits from class ""classname"". ; Reimplemented in TClass.; Definition at line 530 of file TObject.cxx. ◆ InheritsFrom() [2/2]. Bool_t TObject::InheritsFrom ; (; const TClass * ; cl); const. virtual . Returns kTRUE if object inherits from TClass cl. ; Reimplemented in TClass.; Definition at line 538 of file TObject.cxx. ◆ Inspect(). void TObject::Inspect ; (; ); const. virtual . Dump contents of this object in a graphics canvas. ; Same action as Dump but",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:42497,Testability,log,logarithmic,42497," be overridden if an object has to react to timers. ; Reimplemented in TGWindow, TGuiBldDragManager, TSessionViewer, TGraphTime, TGLEventHandler, TGCommandPlugin, TGDNDManager, TGFileContainer, TGPopupMenu, TGScrollBar, TGShutter, TGTextEdit, TGTextEditor, TGTextEntry, TGTextView, TGToolTip, TGHtml, TVirtualPacketizer, TProofPlayerRemote, TProofPlayerSlave, TProofPlayerSuperMaster, TProofPlayerLite, and TTreeViewer.; Definition at line 498 of file TObject.cxx. ◆ Hash(). ULong_t TObject::Hash ; (; ); const. virtual . Return hash value for this object. ; Note: If this routine is overloaded in a derived class, this derived class should also add ROOT::CallRecursiveRemoveIfNeeded(*this); ROOT::CallRecursiveRemoveIfNeededvoid CallRecursiveRemoveIfNeeded(TObject &obj)call RecursiveRemove for obj if gROOT is valid and obj.TestBit(kMustCleanup) is true.Definition TROOT.h:395; Otherwise, when RecursiveRemove is called (by ~TObject or example) for this type of object, the transversal of THashList and THashTable containers will will have to be done without call Hash (and hence be linear rather than logarithmic complexity). You will also see warnings like Error in <ROOT::Internal::TCheckHashRecursiveRemoveConsistency::CheckRecursiveRemove>: The class SomeName overrides TObject::Hash but does not call TROOT::RecursiveRemove in its destructor.; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TObject::Hashvirtual ULong_t Hash() constReturn hash value for this object.Definition TObject.cxx:520; TROOT::RecursiveRemovevoid RecursiveRemove(TObject *obj) overrideRecursively remove this object from the list of Cleanups.Definition TROOT.cxx:2498. Reimplemented in TEnvRec, TNamed, TObjString, TParameter< AParamType >, TParameter< Long64_t >, TCollection, TPair, TASImagePlugin, TASPluginGS, TPad, TImagePlugin, TPave, TGObject, TGPicture, TIconBoxThumb, ",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:43823,Testability,test,tested,43823,",...) constIssue error message.Definition TObject.cxx:993; TObject::Hashvirtual ULong_t Hash() constReturn hash value for this object.Definition TObject.cxx:520; TROOT::RecursiveRemovevoid RecursiveRemove(TObject *obj) overrideRecursively remove this object from the list of Cleanups.Definition TROOT.cxx:2498. Reimplemented in TEnvRec, TNamed, TObjString, TParameter< AParamType >, TParameter< Long64_t >, TCollection, TPair, TASImagePlugin, TASPluginGS, TPad, TImagePlugin, TPave, TGObject, TGPicture, TIconBoxThumb, TClassDocInfo, THtml::TFileSysEntry, TStatistic, TDrawFeedback, TStatsFeedback, and RooLinkedList.; Definition at line 520 of file TObject.cxx. ◆ HasInconsistentHash(). Bool_t TObject::HasInconsistentHash ; (; ); const. inline . Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ; missing call to RecursiveRemove in destructor).; Note: Since the consistency is only tested for during inserts, this routine will return true for object that have never been inserted whether or not they have a consistent setup. This has no negative side-effect as searching for the object with the right or wrong Hash will always yield a not-found answer (Since anyway no hash can be guaranteed unique, there is always a check) ; Definition at line 358 of file TObject.h. ◆ Info(). void TObject::Info ; (; const char * ; location, . const char * ; fmt, .  ; ... . ); const. virtual . Issue info message. ; Use ""location"" to specify the method where the warning occurred. Accepts standard printf formatting arguments. ; Definition at line 967 of file TObject.cxx. ◆ InheritsFrom() [1/2]. Bool_t TObject::InheritsFrom ; (; const char * ; classname); const. virtual . Returns kTRUE if object inherits from class ""classname"". ; Reimplemented in TClass.; Definition at line 530 of file TObject.cxx. ◆ InheritsFrom() [2/2]. Bool_t TObject::InheritsFrom ; (; const TClass * ; cl); const. virtual . Returns kTRUE if object inherits from TClass c",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObject.html:118210,Usability,simpl,simply,118210,"d buffer is created to hold the compressed buffer.; Reservation of the corresponding space in the file by looking in the TFree list of free blocks of the file.; The buffer is written to the file. Bufsize can be given to force a given buffer size to write this object. By default, the buffersize will be taken from the average buffer size of all objects written to the current file so far.; If a name is specified, it will be the name of the key. If name is not given, the name of the key will be the name as returned by GetName().; The option can be a combination of: kSingleKey, kOverwrite or kWriteDelete Using the kOverwrite option a previous key with the same name is overwritten. The previous key is deleted before writing the new object. Using the kWriteDelete option a previous key with the same name is deleted only after the new object has been written. This option is safer than kOverwrite but it is slower. NOTE: Neither kOverwrite nor kWriteDelete reduces the size of a TFile– the space is simply freed up to be overwritten; in the case of a TTree, it is more complicated. If one opens a TTree, appends some entries, then writes it out, the behaviour is effectively the same. If, however, one creates a new TTree and writes it out in this way, only the metadata is replaced, effectively making the old data invisible without deleting it. TTree::Delete() can be used to mark all disk space occupied by a TTree as free before overwriting its metadata this way. The kSingleKey option is only used by TCollection::Write() to write a container with a single key instead of each object in the container with its own key.; An object is read from the file into memory via TKey::Read() or via TObject::Read().; The function returns the total number of bytes written to the file. It returns 0 if the object cannot be written. ; Reimplemented in TSQLFile, TXMLFile, TDirectory, TBuffer, TFile, TParallelMergingFile, TDirectoryFile, TCollection, TMap, and TTree.; Definition at line 864 of file TObjec",MatchSource.WIKI,doc/master/classTObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObject.html
https://root.cern/doc/master/classTObjectRefSpy.html:2673,Availability,error,error,2673,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTObjectRefSpy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectRefSpy.html
https://root.cern/doc/master/classTObjectRefSpy.html:2762,Availability,error,error,2762,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTObjectRefSpy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectRefSpy.html
https://root.cern/doc/master/classTObjectRefSpy.html:2917,Availability,error,error,2917,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTObjectRefSpy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectRefSpy.html
https://root.cern/doc/master/classTObjectRefSpy.html:3214,Availability,error,error,3214,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTObjectRefSpy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectRefSpy.html
https://root.cern/doc/master/classTObjectRefSpy.html:7683,Availability,error,error,7683," the top of the display list. ;  ; virtual void Print (Option_t *option="""") const;  This method must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTObjectRefSpy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectRefSpy.html
https://root.cern/doc/master/classTObjectRefSpy.html:2679,Integrability,message,message,2679,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTObjectRefSpy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectRefSpy.html
https://root.cern/doc/master/classTObjectRefSpy.html:3220,Integrability,message,message,3220,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTObjectRefSpy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectRefSpy.html
https://root.cern/doc/master/classTObjectRefSpy.html:4422,Integrability,message,message,4422,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTObjectRefSpy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectRefSpy.html
https://root.cern/doc/master/classTObjectRefSpy.html:7689,Integrability,message,message,7689," the top of the display list. ;  ; virtual void Print (Option_t *option="""") const;  This method must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTObjectRefSpy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectRefSpy.html
https://root.cern/doc/master/classTObjectRefSpy.html:8062,Integrability,message,message,8062," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Prote",MatchSource.WIKI,doc/master/classTObjectRefSpy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectRefSpy.html
https://root.cern/doc/master/classTObjectRefSpy.html:912,Modifiability,inherit,inherited,912,". ROOT: TObjectRefSpy Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TObjectRefSpy Class Reference. . Definition at line 52 of file TObjectSpy.h. Public Member Functions;  TObjectRefSpy (TObject *&obj, Bool_t fixMustCleanupBit=kTRUE);  Register the object that must be spied. ;  ; virtual ~TObjectRefSpy ();  Cleanup. ;  ; TObject * GetObject () const;  ; TClass * IsA () const override;  ; void RecursiveRemove (TObject *obj) override;  Sets the object pointer to zero if the object is deleted in the RecursiveRemove() operation. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virt",MatchSource.WIKI,doc/master/classTObjectRefSpy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectRefSpy.html
https://root.cern/doc/master/classTObjectRefSpy.html:2309,Modifiability,inherit,inheritance,2309,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTObjectRefSpy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectRefSpy.html
https://root.cern/doc/master/classTObjectRefSpy.html:4520,Modifiability,inherit,inherits,4520,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTObjectRefSpy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectRefSpy.html
https://root.cern/doc/master/classTObjectRefSpy.html:4637,Modifiability,inherit,inherits,4637,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTObjectRefSpy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectRefSpy.html
https://root.cern/doc/master/classTObjectRefSpy.html:8563,Modifiability,inherit,inherited,8563,"reamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TObject *& fObj;  ; Bool_t fResetMustCleanupBit;  . Private Member Functions;  TObjectRefSpy (const TObjectRefSpy &s)=delete;  ; TObjectRefSpy & operator= (const TObjectRefSpy &s)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1UL",MatchSource.WIKI,doc/master/classTObjectRefSpy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectRefSpy.html
https://root.cern/doc/master/classTObjectRefSpy.html:9306,Modifiability,inherit,inherited,9306,"ctions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TObject *& fObj;  ; Bool_t fResetMustCleanupBit;  . Private Member Functions;  TObjectRefSpy (const TObjectRefSpy &s)=delete;  ; TObjectRefSpy & operator= (const TObjectRefSpy &s)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TObjectSpy.h>. Inheritance diagram for TObjectRefSpy:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera",MatchSource.WIKI,doc/master/classTObjectRefSpy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectRefSpy.html
https://root.cern/doc/master/classTObjectRefSpy.html:9947,Modifiability,inherit,inherited,9947,"tributes; TObject *& fObj;  ; Bool_t fResetMustCleanupBit;  . Private Member Functions;  TObjectRefSpy (const TObjectRefSpy &s)=delete;  ; TObjectRefSpy & operator= (const TObjectRefSpy &s)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TObjectSpy.h>. Inheritance diagram for TObjectRefSpy:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TObjectRefSpy() [1/2]. TObjectRefSpy::TObjectRefSpy ; (; const TObjectRefSpy & ; s). privatedelete . ◆ TObjectRefSpy() [2/2]. TObjectRefSpy::TObjectRefSpy ; (; TObject *& ; obj, . Bool_t ; fixMustCleanupBit = kTRUE . ). Register the object that must be spied. ; The object must have the kMustCleanup bit set. If the object has been deleted during a RecusiveRemove() operation, GetObject() will return 0. ; Definition at line 103 of file TObjectSpy.cxx. ◆ ~TObjectRefSpy(). TObjectRefSpy::~TObjectRefSpy ; (; ). virtual . Cleanup. ; Definition at line 123 of file TObjectSpy.cxx. Member Function Documentation. ◆ Class(). static TC",MatchSource.WIKI,doc/master/classTObjectRefSpy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectRefSpy.html
https://root.cern/doc/master/classTObjectRefSpy.html:10046,Modifiability,inherit,inherited,10046,"tributes; TObject *& fObj;  ; Bool_t fResetMustCleanupBit;  . Private Member Functions;  TObjectRefSpy (const TObjectRefSpy &s)=delete;  ; TObjectRefSpy & operator= (const TObjectRefSpy &s)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TObjectSpy.h>. Inheritance diagram for TObjectRefSpy:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TObjectRefSpy() [1/2]. TObjectRefSpy::TObjectRefSpy ; (; const TObjectRefSpy & ; s). privatedelete . ◆ TObjectRefSpy() [2/2]. TObjectRefSpy::TObjectRefSpy ; (; TObject *& ; obj, . Bool_t ; fixMustCleanupBit = kTRUE . ). Register the object that must be spied. ; The object must have the kMustCleanup bit set. If the object has been deleted during a RecusiveRemove() operation, GetObject() will return 0. ; Definition at line 103 of file TObjectSpy.cxx. ◆ ~TObjectRefSpy(). TObjectRefSpy::~TObjectRefSpy ; (; ). virtual . Cleanup. ; Definition at line 123 of file TObjectSpy.cxx. Member Function Documentation. ◆ Class(). static TC",MatchSource.WIKI,doc/master/classTObjectRefSpy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectRefSpy.html
https://root.cern/doc/master/classTObjectRefSpy.html:4151,Security,hash,hash,4151," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTObjectRefSpy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectRefSpy.html
https://root.cern/doc/master/classTObjectSpy.html:634,Availability,error,error,634,". ROOT: TObjectSpy Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TObjectSpy Class ReferenceCore ROOT classes » Base ROOT classes. ; Monitors objects for deletion and reflects the deletion by reverting the internal pointer to zero. ; When this pointer is zero we know the object has been deleted. This avoids the unsafe TestBit(kNotDeleted) hack. The spied object must have the kMustCleanup bit set otherwise you will get an error. ; Definition at line 30 of file TObjectSpy.h. Public Member Functions;  TObjectSpy (TObject *obj=nullptr, Bool_t fixMustCleanupBit=kTRUE);  Register the object that must be spied. ;  ; virtual ~TObjectSpy ();  Cleanup. ;  ; TObject * GetObject () const;  ; TClass * IsA () const override;  ; void RecursiveRemove (TObject *obj) override;  Sets the object pointer to zero if the object is deleted in the RecursiveRemove() operation. ;  ; void SetObject (TObject *obj, Bool_t fixMustCleanupBit=kTRUE);  Set obj as the spy target. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value",MatchSource.WIKI,doc/master/classTObjectSpy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectSpy.html
https://root.cern/doc/master/classTObjectSpy.html:3102,Availability,error,error,3102,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTObjectSpy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectSpy.html
https://root.cern/doc/master/classTObjectSpy.html:3191,Availability,error,error,3191,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTObjectSpy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectSpy.html
https://root.cern/doc/master/classTObjectSpy.html:3346,Availability,error,error,3346,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTObjectSpy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectSpy.html
https://root.cern/doc/master/classTObjectSpy.html:3643,Availability,error,error,3643,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTObjectSpy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectSpy.html
https://root.cern/doc/master/classTObjectSpy.html:8112,Availability,error,error,8112," the top of the display list. ;  ; virtual void Print (Option_t *option="""") const;  This method must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTObjectSpy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectSpy.html
https://root.cern/doc/master/classTObjectSpy.html:3108,Integrability,message,message,3108,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTObjectSpy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectSpy.html
https://root.cern/doc/master/classTObjectSpy.html:3649,Integrability,message,message,3649,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTObjectSpy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectSpy.html
https://root.cern/doc/master/classTObjectSpy.html:4851,Integrability,message,message,4851,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTObjectSpy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectSpy.html
https://root.cern/doc/master/classTObjectSpy.html:8118,Integrability,message,message,8118," the top of the display list. ;  ; virtual void Print (Option_t *option="""") const;  This method must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTObjectSpy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectSpy.html
https://root.cern/doc/master/classTObjectSpy.html:8491,Integrability,message,message,8491," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Prote",MatchSource.WIKI,doc/master/classTObjectSpy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectSpy.html
https://root.cern/doc/master/classTObjectSpy.html:1341,Modifiability,inherit,inherited,1341,"ase ROOT classes. ; Monitors objects for deletion and reflects the deletion by reverting the internal pointer to zero. ; When this pointer is zero we know the object has been deleted. This avoids the unsafe TestBit(kNotDeleted) hack. The spied object must have the kMustCleanup bit set otherwise you will get an error. ; Definition at line 30 of file TObjectSpy.h. Public Member Functions;  TObjectSpy (TObject *obj=nullptr, Bool_t fixMustCleanupBit=kTRUE);  Register the object that must be spied. ;  ; virtual ~TObjectSpy ();  Cleanup. ;  ; TObject * GetObject () const;  ; TClass * IsA () const override;  ; void RecursiveRemove (TObject *obj) override;  Sets the object pointer to zero if the object is deleted in the RecursiveRemove() operation. ;  ; void SetObject (TObject *obj, Bool_t fixMustCleanupBit=kTRUE);  Set obj as the spy target. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTObjectSpy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectSpy.html
https://root.cern/doc/master/classTObjectSpy.html:2738,Modifiability,inherit,inheritance,2738,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTObjectSpy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectSpy.html
https://root.cern/doc/master/classTObjectSpy.html:4949,Modifiability,inherit,inherits,4949,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTObjectSpy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectSpy.html
https://root.cern/doc/master/classTObjectSpy.html:5066,Modifiability,inherit,inherits,5066,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTObjectSpy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectSpy.html
https://root.cern/doc/master/classTObjectSpy.html:8992,Modifiability,inherit,inherited,8992,"reamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TObject * fObj;  ; Bool_t fResetMustCleanupBit;  . Private Member Functions;  TObjectSpy (const TObjectSpy &s)=delete;  ; TObjectSpy & operator= (const TObjectSpy &s)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); ",MatchSource.WIKI,doc/master/classTObjectSpy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectSpy.html
https://root.cern/doc/master/classTObjectSpy.html:9722,Modifiability,inherit,inherited,9722,"ic Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TObject * fObj;  ; Bool_t fResetMustCleanupBit;  . Private Member Functions;  TObjectSpy (const TObjectSpy &s)=delete;  ; TObjectSpy & operator= (const TObjectSpy &s)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TObjectSpy.h>. Inheritance diagram for TObjectSpy:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera in",MatchSource.WIKI,doc/master/classTObjectSpy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectSpy.html
https://root.cern/doc/master/classTObjectSpy.html:10363,Modifiability,inherit,inherited,10363," Protected Attributes; TObject * fObj;  ; Bool_t fResetMustCleanupBit;  . Private Member Functions;  TObjectSpy (const TObjectSpy &s)=delete;  ; TObjectSpy & operator= (const TObjectSpy &s)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TObjectSpy.h>. Inheritance diagram for TObjectSpy:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TObjectSpy() [1/2]. TObjectSpy::TObjectSpy ; (; const TObjectSpy & ; s). privatedelete . ◆ TObjectSpy() [2/2]. TObjectSpy::TObjectSpy ; (; TObject * ; obj = nullptr, . Bool_t ; fixMustCleanupBit = kTRUE . ). Register the object that must be spied. ; The object must have the kMustCleanup bit set. If the object has been deleted during a RecusiveRemove() operation, GetObject() will return 0. ; Definition at line 36 of file TObjectSpy.cxx. ◆ ~TObjectSpy(). TObjectSpy::~TObjectSpy ; (; ). virtual . Cleanup. ; Definition at line 56 of file TObjectSpy.cxx. Member Function Documentation. ◆ Class(). static TClass * TObjectSpy::Class ;",MatchSource.WIKI,doc/master/classTObjectSpy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectSpy.html
https://root.cern/doc/master/classTObjectSpy.html:10462,Modifiability,inherit,inherited,10462," Protected Attributes; TObject * fObj;  ; Bool_t fResetMustCleanupBit;  . Private Member Functions;  TObjectSpy (const TObjectSpy &s)=delete;  ; TObjectSpy & operator= (const TObjectSpy &s)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TObjectSpy.h>. Inheritance diagram for TObjectSpy:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TObjectSpy() [1/2]. TObjectSpy::TObjectSpy ; (; const TObjectSpy & ; s). privatedelete . ◆ TObjectSpy() [2/2]. TObjectSpy::TObjectSpy ; (; TObject * ; obj = nullptr, . Bool_t ; fixMustCleanupBit = kTRUE . ). Register the object that must be spied. ; The object must have the kMustCleanup bit set. If the object has been deleted during a RecusiveRemove() operation, GetObject() will return 0. ; Definition at line 36 of file TObjectSpy.cxx. ◆ ~TObjectSpy(). TObjectSpy::~TObjectSpy ; (; ). virtual . Cleanup. ; Definition at line 56 of file TObjectSpy.cxx. Member Function Documentation. ◆ Class(). static TClass * TObjectSpy::Class ;",MatchSource.WIKI,doc/master/classTObjectSpy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectSpy.html
https://root.cern/doc/master/classTObjectSpy.html:511,Safety,avoid,avoids,511,". ROOT: TObjectSpy Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TObjectSpy Class ReferenceCore ROOT classes » Base ROOT classes. ; Monitors objects for deletion and reflects the deletion by reverting the internal pointer to zero. ; When this pointer is zero we know the object has been deleted. This avoids the unsafe TestBit(kNotDeleted) hack. The spied object must have the kMustCleanup bit set otherwise you will get an error. ; Definition at line 30 of file TObjectSpy.h. Public Member Functions;  TObjectSpy (TObject *obj=nullptr, Bool_t fixMustCleanupBit=kTRUE);  Register the object that must be spied. ;  ; virtual ~TObjectSpy ();  Cleanup. ;  ; TObject * GetObject () const;  ; TClass * IsA () const override;  ; void RecursiveRemove (TObject *obj) override;  Sets the object pointer to zero if the object is deleted in the RecursiveRemove() operation. ;  ; void SetObject (TObject *obj, Bool_t fixMustCleanupBit=kTRUE);  Set obj as the spy target. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value",MatchSource.WIKI,doc/master/classTObjectSpy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectSpy.html
https://root.cern/doc/master/classTObjectSpy.html:522,Safety,unsafe,unsafe,522,". ROOT: TObjectSpy Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TObjectSpy Class ReferenceCore ROOT classes » Base ROOT classes. ; Monitors objects for deletion and reflects the deletion by reverting the internal pointer to zero. ; When this pointer is zero we know the object has been deleted. This avoids the unsafe TestBit(kNotDeleted) hack. The spied object must have the kMustCleanup bit set otherwise you will get an error. ; Definition at line 30 of file TObjectSpy.h. Public Member Functions;  TObjectSpy (TObject *obj=nullptr, Bool_t fixMustCleanupBit=kTRUE);  Register the object that must be spied. ;  ; virtual ~TObjectSpy ();  Cleanup. ;  ; TObject * GetObject () const;  ; TClass * IsA () const override;  ; void RecursiveRemove (TObject *obj) override;  Sets the object pointer to zero if the object is deleted in the RecursiveRemove() operation. ;  ; void SetObject (TObject *obj, Bool_t fixMustCleanupBit=kTRUE);  Set obj as the spy target. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value",MatchSource.WIKI,doc/master/classTObjectSpy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectSpy.html
https://root.cern/doc/master/classTObjectSpy.html:4580,Security,hash,hash,4580," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTObjectSpy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectSpy.html
https://root.cern/doc/master/classTObjectTable.html:9803,Availability,error,error,9803,"const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTObjectTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectTable.html
https://root.cern/doc/master/classTObjectTable.html:9892,Availability,error,error,9892,"tual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTObjectTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectTable.html
https://root.cern/doc/master/classTObjectTable.html:10047,Availability,error,error,10047," Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTObjectTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectTable.html
https://root.cern/doc/master/classTObjectTable.html:10344,Availability,error,error,10344,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTObjectTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectTable.html
https://root.cern/doc/master/classTObjectTable.html:14787,Availability,error,error,14787,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static void AddObj (TObject *obj);  Add an object to the global object table gObjectTable. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObje",MatchSource.WIKI,doc/master/classTObjectTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectTable.html
https://root.cern/doc/master/classTObjectTable.html:652,Deployability,toggle,toggle,652,". ROOT: TObjectTable Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TObjectTable Class ReferenceCore ROOT classes » Containers. ; This class registers all instances of TObject and its derived classes in a hash table. ; The Add() and Remove() members are called from the TObject ctor and dtor, respectively. Using the Print() member one can see all currently active objects in the system. Using the resource (in .rootrc): Root.ObjectStat one can toggle this feature on or off.; Using the compile option R__NOSTATS one can de-active this feature for the entire system (for maximum performance in highly time critical applications).; The following output has been produced in a ROOT interactive session via the command gObjectTable->Print() class cnt on heap size total size heap size; ============================================================================; TKey 4 4 72 288 288; TClass 84 84 80 6720 6720; TDataMember 276 276 24 6624 6624; TObject 11 11 12 132 132; TMethod 1974 1974 64 126336 126336; TDataType 34 34 56 1904 1904; TList 2328 2328 36 83808 83808; TH1F 1 1 448 448 448; TText 2688 2688 56 150528 150528; TGaxis 1 0 120 120 0; TAxis 6 3 88 528 264; TBox 57 57 52 2964 2964; TLine 118 118 40 4720 4720; TWbox 1 1 56 56 56; TArrow 1 1 64 64 64; TPaveText 59 59 124 7316 7316; TPave 1 1 92 92 92; TFile 1 1 136 136 136; TCanvas 3 3 444 1332 1332; TPad 1 1 312 312 312; TContextMenu 3 3 48 144 144; TMethodArg 2166 2166 44 95304 95304; TPaveLabel 1 1 120 120 120; THtml 1 1 32 32 32; TROOT 1 0 208 208 0; TApplication 1 1 28 28 28; TFileHandler 1 1 20 20 20; TColor 163 163 40 6520 6520; TStyle 1 1 364 364 364; TRealData 117 117 28 3276 3276; TBaseClass 88 88 36 3168 3168; THashList 5 5 40 200 200; THashTable 5 5 36 180 180; TGeometry 1 1 64 64 64; TLink 7 7 60 420 420; TPostS",MatchSource.WIKI,doc/master/classTObjectTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectTable.html
https://root.cern/doc/master/classTObjectTable.html:2942,Integrability,interface,interfaces,2942,"shTable 5 5 36 180 180; TGeometry 1 1 64 64 64; TLink 7 7 60 420 420; TPostScript 1 1 764 764 764; TMinuit 1 1 792 792 792; TStopwatch 1 0 56 56 0; TRootGuiFactory 1 1 28 28 28; TGX11 1 1 172 172 172; TUnixSystem 1 1 252 252 252; TSignalHandler 1 1 20 20 20; TOrdCollection 3 3 40 120 120; TEnv 1 1 24 24 24; TCling 1 1 208 208 208; TBenchmark 1 1 52 52 52; TClassTable 1 1 12 12 12; TObjectTable 1 1 12 12 12; ----------------------------------------------------------------------------; Total: 10225 10219 5976 506988 506340; ============================================================================; sizesize_t size(const MatrixT &matrix)retrieve the size of a square matrix; totalstatic unsigned int totalDefinition TGWin32ProxyDefs.h:40; onOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void onDefinition TGWin32VirtualXProxy.cxx:106; TApplicationThis class creates the ROOT Application Environment that interfaces to the windowing system eventloop...Definition TApplication.h:39; TArrowDraw all kinds of Arrows.Definition TArrow.h:29; TAxisClass to manage histogram axis.Definition TAxis.h:31; TBaseClassEach class (see TClass) has a linked list of its base class(es).Definition TBaseClass.h:33; TBenchmarkThis class is a ROOT utility to help benchmarking applications.Definition TBenchmark.h:29; TBoxCreate a Box.Definition TBox.h:22; TCanvasThe Canvas class.Definition TCanvas.h:23; TClassTableThis class registers for all classes their name, id and dictionary function in a hash table.Definition TClassTable.h:37; TClassTClass instances represent classes, structs and namespaces in the ROOT type system.Definition TClass.h:81; TClingThis class defines an interface to the cling C++ interpreter.Definition TCling.h:102; TColorThe color creation and management class.Definition TColor.h:21; TContextMenuThis class provides an interface to context sensitive popup menus.Definition TConte",MatchSource.WIKI,doc/master/classTObjectTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectTable.html
https://root.cern/doc/master/classTObjectTable.html:3697,Integrability,interface,interface,3697,"Point const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void onDefinition TGWin32VirtualXProxy.cxx:106; TApplicationThis class creates the ROOT Application Environment that interfaces to the windowing system eventloop...Definition TApplication.h:39; TArrowDraw all kinds of Arrows.Definition TArrow.h:29; TAxisClass to manage histogram axis.Definition TAxis.h:31; TBaseClassEach class (see TClass) has a linked list of its base class(es).Definition TBaseClass.h:33; TBenchmarkThis class is a ROOT utility to help benchmarking applications.Definition TBenchmark.h:29; TBoxCreate a Box.Definition TBox.h:22; TCanvasThe Canvas class.Definition TCanvas.h:23; TClassTableThis class registers for all classes their name, id and dictionary function in a hash table.Definition TClassTable.h:37; TClassTClass instances represent classes, structs and namespaces in the ROOT type system.Definition TClass.h:81; TClingThis class defines an interface to the cling C++ interpreter.Definition TCling.h:102; TColorThe color creation and management class.Definition TColor.h:21; TContextMenuThis class provides an interface to context sensitive popup menus.Definition TContextMenu.h:44; TDataMemberAll ROOT classes may have RTTI (run time type identification) support added.Definition TDataMember.h:31; TDataTypeBasic data type descriptor (datatype information is obtained from CINT).Definition TDataType.h:44; TEnvThe TEnv class reads config files, by default named .rootrc.Definition TEnv.h:124; TFileHandlerDefinition TSysEvtHandler.h:65; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; TGX11This class is the basic interface to the X11 (Xlib) graphics system.Definition TGX11.h:80; TGaxisThe axis painter class.Definition TGaxis.h:24; TGeometryTGeometry description.Definition TGeometry.h:39; TH1F1-D histogram with a float per channel (see TH1 documentation)D",MatchSource.WIKI,doc/master/classTObjectTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectTable.html
https://root.cern/doc/master/classTObjectTable.html:3866,Integrability,interface,interface,3866,":106; TApplicationThis class creates the ROOT Application Environment that interfaces to the windowing system eventloop...Definition TApplication.h:39; TArrowDraw all kinds of Arrows.Definition TArrow.h:29; TAxisClass to manage histogram axis.Definition TAxis.h:31; TBaseClassEach class (see TClass) has a linked list of its base class(es).Definition TBaseClass.h:33; TBenchmarkThis class is a ROOT utility to help benchmarking applications.Definition TBenchmark.h:29; TBoxCreate a Box.Definition TBox.h:22; TCanvasThe Canvas class.Definition TCanvas.h:23; TClassTableThis class registers for all classes their name, id and dictionary function in a hash table.Definition TClassTable.h:37; TClassTClass instances represent classes, structs and namespaces in the ROOT type system.Definition TClass.h:81; TClingThis class defines an interface to the cling C++ interpreter.Definition TCling.h:102; TColorThe color creation and management class.Definition TColor.h:21; TContextMenuThis class provides an interface to context sensitive popup menus.Definition TContextMenu.h:44; TDataMemberAll ROOT classes may have RTTI (run time type identification) support added.Definition TDataMember.h:31; TDataTypeBasic data type descriptor (datatype information is obtained from CINT).Definition TDataType.h:44; TEnvThe TEnv class reads config files, by default named .rootrc.Definition TEnv.h:124; TFileHandlerDefinition TSysEvtHandler.h:65; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; TGX11This class is the basic interface to the X11 (Xlib) graphics system.Definition TGX11.h:80; TGaxisThe axis painter class.Definition TGaxis.h:24; TGeometryTGeometry description.Definition TGeometry.h:39; TH1F1-D histogram with a float per channel (see TH1 documentation)Definition TH1.h:622; THashListTHashList implements a hybrid collection class consisting of a hash table and a list to store TObject...Definition THashList.h:34; THashT",MatchSource.WIKI,doc/master/classTObjectTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectTable.html
https://root.cern/doc/master/classTObjectTable.html:4455,Integrability,interface,interface,4455," all classes their name, id and dictionary function in a hash table.Definition TClassTable.h:37; TClassTClass instances represent classes, structs and namespaces in the ROOT type system.Definition TClass.h:81; TClingThis class defines an interface to the cling C++ interpreter.Definition TCling.h:102; TColorThe color creation and management class.Definition TColor.h:21; TContextMenuThis class provides an interface to context sensitive popup menus.Definition TContextMenu.h:44; TDataMemberAll ROOT classes may have RTTI (run time type identification) support added.Definition TDataMember.h:31; TDataTypeBasic data type descriptor (datatype information is obtained from CINT).Definition TDataType.h:44; TEnvThe TEnv class reads config files, by default named .rootrc.Definition TEnv.h:124; TFileHandlerDefinition TSysEvtHandler.h:65; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; TGX11This class is the basic interface to the X11 (Xlib) graphics system.Definition TGX11.h:80; TGaxisThe axis painter class.Definition TGaxis.h:24; TGeometryTGeometry description.Definition TGeometry.h:39; TH1F1-D histogram with a float per channel (see TH1 documentation)Definition TH1.h:622; THashListTHashList implements a hybrid collection class consisting of a hash table and a list to store TObject...Definition THashList.h:34; THashTableTHashTable implements a hash table to store TObject's.Definition THashTable.h:35; THtmlLegacy ROOT documentation system.Definition THtml.h:40; TKeyBook space in a file, create I/O buffers, to fill them, (un)compress them.Definition TKey.h:28; TLineUse the TLine constructor to create a simple line.Definition TLine.h:22; TLinkSpecial TText object used to show hyperlinks.Definition TLink.h:17; TListA doubly linked list.Definition TList.h:38; TMethodArgEach ROOT method (see TMethod) has a linked list of its arguments.Definition TMethodArg.h:36; TMethodEach ROOT class (see TClass) has a ",MatchSource.WIKI,doc/master/classTObjectTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectTable.html
https://root.cern/doc/master/classTObjectTable.html:9809,Integrability,message,message,9809,"const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTObjectTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectTable.html
https://root.cern/doc/master/classTObjectTable.html:10350,Integrability,message,message,10350,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTObjectTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectTable.html
https://root.cern/doc/master/classTObjectTable.html:11552,Integrability,message,message,11552,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTObjectTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectTable.html
https://root.cern/doc/master/classTObjectTable.html:14793,Integrability,message,message,14793,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static void AddObj (TObject *obj);  Add an object to the global object table gObjectTable. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObje",MatchSource.WIKI,doc/master/classTObjectTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectTable.html
https://root.cern/doc/master/classTObjectTable.html:15166,Integrability,message,message,15166," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static void AddObj (TObject *obj);  Add an object to the global object table gObjectTable. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static vo",MatchSource.WIKI,doc/master/classTObjectTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectTable.html
https://root.cern/doc/master/classTObjectTable.html:4188,Modifiability,config,config,4188,"its base class(es).Definition TBaseClass.h:33; TBenchmarkThis class is a ROOT utility to help benchmarking applications.Definition TBenchmark.h:29; TBoxCreate a Box.Definition TBox.h:22; TCanvasThe Canvas class.Definition TCanvas.h:23; TClassTableThis class registers for all classes their name, id and dictionary function in a hash table.Definition TClassTable.h:37; TClassTClass instances represent classes, structs and namespaces in the ROOT type system.Definition TClass.h:81; TClingThis class defines an interface to the cling C++ interpreter.Definition TCling.h:102; TColorThe color creation and management class.Definition TColor.h:21; TContextMenuThis class provides an interface to context sensitive popup menus.Definition TContextMenu.h:44; TDataMemberAll ROOT classes may have RTTI (run time type identification) support added.Definition TDataMember.h:31; TDataTypeBasic data type descriptor (datatype information is obtained from CINT).Definition TDataType.h:44; TEnvThe TEnv class reads config files, by default named .rootrc.Definition TEnv.h:124; TFileHandlerDefinition TSysEvtHandler.h:65; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; TGX11This class is the basic interface to the X11 (Xlib) graphics system.Definition TGX11.h:80; TGaxisThe axis painter class.Definition TGaxis.h:24; TGeometryTGeometry description.Definition TGeometry.h:39; TH1F1-D histogram with a float per channel (see TH1 documentation)Definition TH1.h:622; THashListTHashList implements a hybrid collection class consisting of a hash table and a list to store TObject...Definition THashList.h:34; THashTableTHashTable implements a hash table to store TObject's.Definition THashTable.h:35; THtmlLegacy ROOT documentation system.Definition THtml.h:40; TKeyBook space in a file, create I/O buffers, to fill them, (un)compress them.Definition TKey.h:28; TLineUse the TLine constructor to create a simple line.Definition TLine.h:2",MatchSource.WIKI,doc/master/classTObjectTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectTable.html
https://root.cern/doc/master/classTObjectTable.html:8111,Modifiability,inherit,inherited,8111," *vp);  Issue a warning in case an object still appears in the table while it should not. ;  ; void Delete (Option_t *opt="""") override;  Delete all objects stored in the TObjectTable. ;  ; Int_t GetSize () const;  ; Int_t Instances () const;  ; void InstanceStatistics () const;  Print the object table. ;  ; TClass * IsA () const override;  ; void Print (Option_t *option="""") const override;  Print the object table. ;  ; Bool_t PtrIsValid (TObject *obj);  ; void Remove (TObject *obj);  Remove an object from the object table. ;  ; void RemoveQuietly (TObject *obj);  Remove an object from the object table. ;  ; void Statistics ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Terminate ();  Deletes the object table (this static class function calls the dtor). ;  ; void UpdateInstCount () const;  Histogram all objects according to their classes. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;",MatchSource.WIKI,doc/master/classTObjectTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectTable.html
https://root.cern/doc/master/classTObjectTable.html:9439,Modifiability,inherit,inheritance,9439," AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTObjectTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectTable.html
https://root.cern/doc/master/classTObjectTable.html:11650,Modifiability,inherit,inherits,11650,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTObjectTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectTable.html
https://root.cern/doc/master/classTObjectTable.html:11767,Modifiability,inherit,inherits,11767,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTObjectTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectTable.html
https://root.cern/doc/master/classTObjectTable.html:15763,Modifiability,inherit,inherited,15763,"error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static void AddObj (TObject *obj);  Add an object to the global object table gObjectTable. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TObjectTable (const TObjectTable &)=delete;  ; void Expand (Int_t newsize);  Expand the object table. ;  ; Int_t FindElement (TObject *obj);  Find an object in the object table. ;  ; void FixCollisions (Int_t index);  Rehash the object table in case an object has been removed. ;  ; Bool_t HighWaterMark ();  ; TObjectTable & operator= (const TObjectTable &)=delete;  . Private Attributes; Int_t fSize;  ; TObject ** fTable;  ; Int_t fTally;  . Additional Inherited Members;  Public Types inherited from TObject",MatchSource.WIKI,doc/master/classTObjectTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectTable.html
https://root.cern/doc/master/classTObjectTable.html:16765,Modifiability,inherit,inherited,16765,"t char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TObjectTable (const TObjectTable &)=delete;  ; void Expand (Int_t newsize);  Expand the object table. ;  ; Int_t FindElement (TObject *obj);  Find an object in the object table. ;  ; void FixCollisions (Int_t index);  Rehash the object table in case an object has been removed. ;  ; Bool_t HighWaterMark ();  ; TObjectTable & operator= (const TObjectTable &)=delete;  . Private Attributes; Int_t fSize;  ; TObject ** fTable;  ; Int_t fTally;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TObjectTable.h>. Inheritance diagram for TObjectTable:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Oper",MatchSource.WIKI,doc/master/classTObjectTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectTable.html
https://root.cern/doc/master/classTObjectTable.html:17406,Modifiability,inherit,inherited,17406," case an object has been removed. ;  ; Bool_t HighWaterMark ();  ; TObjectTable & operator= (const TObjectTable &)=delete;  . Private Attributes; Int_t fSize;  ; TObject ** fTable;  ; Int_t fTally;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TObjectTable.h>. Inheritance diagram for TObjectTable:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TObjectTable() [1/2]. TObjectTable::TObjectTable ; (; const TObjectTable & ; ). privatedelete . ◆ TObjectTable() [2/2]. TObjectTable::TObjectTable ; (; Int_t ; tableSize = 100). Create an object table. ; Definition at line 99 of file TObjectTable.cxx. ◆ ~TObjectTable(). TObjectTable::~TObjectTable ; (; ). Delete TObjectTable. ; Definition at line 110 of file TObjectTable.cxx. Member Function Documentation. ◆ Add(). void TObjectTable::Add ; (; TObject * ; obj). Add an object to the object table. ; Definition at line 147 of file TObjectTable.cxx. ◆ AddObj(). void TObjectTable::AddObj ; (; TObject * ; op). static . Add an ob",MatchSource.WIKI,doc/master/classTObjectTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectTable.html
https://root.cern/doc/master/classTObjectTable.html:17505,Modifiability,inherit,inherited,17505," case an object has been removed. ;  ; Bool_t HighWaterMark ();  ; TObjectTable & operator= (const TObjectTable &)=delete;  . Private Attributes; Int_t fSize;  ; TObject ** fTable;  ; Int_t fTally;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TObjectTable.h>. Inheritance diagram for TObjectTable:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TObjectTable() [1/2]. TObjectTable::TObjectTable ; (; const TObjectTable & ; ). privatedelete . ◆ TObjectTable() [2/2]. TObjectTable::TObjectTable ; (; Int_t ; tableSize = 100). Create an object table. ; Definition at line 99 of file TObjectTable.cxx. ◆ ~TObjectTable(). TObjectTable::~TObjectTable ; (; ). Delete TObjectTable. ; Definition at line 110 of file TObjectTable.cxx. Member Function Documentation. ◆ Add(). void TObjectTable::Add ; (; TObject * ; obj). Add an object to the object table. ; Definition at line 147 of file TObjectTable.cxx. ◆ AddObj(). void TObjectTable::AddObj ; (; TObject * ; op). static . Add an ob",MatchSource.WIKI,doc/master/classTObjectTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectTable.html
https://root.cern/doc/master/classTObjectTable.html:786,Performance,perform,performance,786,". ROOT: TObjectTable Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TObjectTable Class ReferenceCore ROOT classes » Containers. ; This class registers all instances of TObject and its derived classes in a hash table. ; The Add() and Remove() members are called from the TObject ctor and dtor, respectively. Using the Print() member one can see all currently active objects in the system. Using the resource (in .rootrc): Root.ObjectStat one can toggle this feature on or off.; Using the compile option R__NOSTATS one can de-active this feature for the entire system (for maximum performance in highly time critical applications).; The following output has been produced in a ROOT interactive session via the command gObjectTable->Print() class cnt on heap size total size heap size; ============================================================================; TKey 4 4 72 288 288; TClass 84 84 80 6720 6720; TDataMember 276 276 24 6624 6624; TObject 11 11 12 132 132; TMethod 1974 1974 64 126336 126336; TDataType 34 34 56 1904 1904; TList 2328 2328 36 83808 83808; TH1F 1 1 448 448 448; TText 2688 2688 56 150528 150528; TGaxis 1 0 120 120 0; TAxis 6 3 88 528 264; TBox 57 57 52 2964 2964; TLine 118 118 40 4720 4720; TWbox 1 1 56 56 56; TArrow 1 1 64 64 64; TPaveText 59 59 124 7316 7316; TPave 1 1 92 92 92; TFile 1 1 136 136 136; TCanvas 3 3 444 1332 1332; TPad 1 1 312 312 312; TContextMenu 3 3 48 144 144; TMethodArg 2166 2166 44 95304 95304; TPaveLabel 1 1 120 120 120; THtml 1 1 32 32 32; TROOT 1 0 208 208 0; TApplication 1 1 28 28 28; TFileHandler 1 1 20 20 20; TColor 163 163 40 6520 6520; TStyle 1 1 364 364 364; TRealData 117 117 28 3276 3276; TBaseClass 88 88 36 3168 3168; THashList 5 5 40 200 200; THashTable 5 5 36 180 180; TGeometry 1 1 64 64 64; TLink 7 7 60 420 420; TPostS",MatchSource.WIKI,doc/master/classTObjectTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectTable.html
https://root.cern/doc/master/classTObjectTable.html:22174,Performance,perform,performed,22174,"inition at line 71 of file TObjectTable.h. ◆ operator=(). TObjectTable & TObjectTable::operator= ; (; const TObjectTable & ; ). privatedelete . ◆ Print(). void TObjectTable::Print ; (; Option_t * ; option = """"); const. overridevirtual . Print the object table. ; If option =""all"" prints the list of all objects with the format object number, pointer, class name, object name ; Reimplemented from TObject.; Definition at line 120 of file TObjectTable.cxx. ◆ PtrIsValid(). Bool_t TObjectTable::PtrIsValid ; (; TObject * ; obj). inline . Definition at line 78 of file TObjectTable.h. ◆ Remove(). void TObjectTable::Remove ; (; TObject * ; obj). Remove an object from the object table. ; Definition at line 209 of file TObjectTable.cxx. ◆ RemoveQuietly(). void TObjectTable::RemoveQuietly ; (; TObject * ; op). Remove an object from the object table. ; If op is 0 or not in the table don't complain. Currently only used by the TClonesArray dtor. Should not be used anywhere else, except in places where ""special"" allocation and de-allocation tricks are performed. ; Definition at line 243 of file TObjectTable.cxx. ◆ Statistics(). void TObjectTable::Statistics ; (; ). inline . Definition at line 65 of file TObjectTable.h. ◆ Streamer(). void TObjectTable::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TObjectTable::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 71 of file TObjectTable.h. ◆ Terminate(). void TObjectTable::Terminate ; (; ). Deletes the object table (this static class function calls the dtor). ; Definition at line 264 of file TObjectTable.cxx. ◆ UpdateInstCount(). void TObjectTable::UpdateInstCount ; (; ); const. Histogram all objects according to their classes. ; Definition at line 375 of file TObjectTable.cxx. Member Data Documentation. ◆ fSize. Int_t TObjectTable::fSize. private . Definition at line 39 of file TObjectTable.h. ◆ fTabl",MatchSource.WIKI,doc/master/classTObjectTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectTable.html
https://root.cern/doc/master/classTObjectTable.html:412,Security,hash,hash,412,". ROOT: TObjectTable Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TObjectTable Class ReferenceCore ROOT classes » Containers. ; This class registers all instances of TObject and its derived classes in a hash table. ; The Add() and Remove() members are called from the TObject ctor and dtor, respectively. Using the Print() member one can see all currently active objects in the system. Using the resource (in .rootrc): Root.ObjectStat one can toggle this feature on or off.; Using the compile option R__NOSTATS one can de-active this feature for the entire system (for maximum performance in highly time critical applications).; The following output has been produced in a ROOT interactive session via the command gObjectTable->Print() class cnt on heap size total size heap size; ============================================================================; TKey 4 4 72 288 288; TClass 84 84 80 6720 6720; TDataMember 276 276 24 6624 6624; TObject 11 11 12 132 132; TMethod 1974 1974 64 126336 126336; TDataType 34 34 56 1904 1904; TList 2328 2328 36 83808 83808; TH1F 1 1 448 448 448; TText 2688 2688 56 150528 150528; TGaxis 1 0 120 120 0; TAxis 6 3 88 528 264; TBox 57 57 52 2964 2964; TLine 118 118 40 4720 4720; TWbox 1 1 56 56 56; TArrow 1 1 64 64 64; TPaveText 59 59 124 7316 7316; TPave 1 1 92 92 92; TFile 1 1 136 136 136; TCanvas 3 3 444 1332 1332; TPad 1 1 312 312 312; TContextMenu 3 3 48 144 144; TMethodArg 2166 2166 44 95304 95304; TPaveLabel 1 1 120 120 120; THtml 1 1 32 32 32; TROOT 1 0 208 208 0; TApplication 1 1 28 28 28; TFileHandler 1 1 20 20 20; TColor 163 163 40 6520 6520; TStyle 1 1 364 364 364; TRealData 117 117 28 3276 3276; TBaseClass 88 88 36 3168 3168; THashList 5 5 40 200 200; THashTable 5 5 36 180 180; TGeometry 1 1 64 64 64; TLink 7 7 60 420 420; TPostS",MatchSource.WIKI,doc/master/classTObjectTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectTable.html
https://root.cern/doc/master/classTObjectTable.html:3516,Security,hash,hash,3516,"=========================================================; sizesize_t size(const MatrixT &matrix)retrieve the size of a square matrix; totalstatic unsigned int totalDefinition TGWin32ProxyDefs.h:40; onOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void onDefinition TGWin32VirtualXProxy.cxx:106; TApplicationThis class creates the ROOT Application Environment that interfaces to the windowing system eventloop...Definition TApplication.h:39; TArrowDraw all kinds of Arrows.Definition TArrow.h:29; TAxisClass to manage histogram axis.Definition TAxis.h:31; TBaseClassEach class (see TClass) has a linked list of its base class(es).Definition TBaseClass.h:33; TBenchmarkThis class is a ROOT utility to help benchmarking applications.Definition TBenchmark.h:29; TBoxCreate a Box.Definition TBox.h:22; TCanvasThe Canvas class.Definition TCanvas.h:23; TClassTableThis class registers for all classes their name, id and dictionary function in a hash table.Definition TClassTable.h:37; TClassTClass instances represent classes, structs and namespaces in the ROOT type system.Definition TClass.h:81; TClingThis class defines an interface to the cling C++ interpreter.Definition TCling.h:102; TColorThe color creation and management class.Definition TColor.h:21; TContextMenuThis class provides an interface to context sensitive popup menus.Definition TContextMenu.h:44; TDataMemberAll ROOT classes may have RTTI (run time type identification) support added.Definition TDataMember.h:31; TDataTypeBasic data type descriptor (datatype information is obtained from CINT).Definition TDataType.h:44; TEnvThe TEnv class reads config files, by default named .rootrc.Definition TEnv.h:124; TFileHandlerDefinition TSysEvtHandler.h:65; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; TGX11This class is the basic interface to the X",MatchSource.WIKI,doc/master/classTObjectTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectTable.html
https://root.cern/doc/master/classTObjectTable.html:4793,Security,hash,hash,4793,"lor creation and management class.Definition TColor.h:21; TContextMenuThis class provides an interface to context sensitive popup menus.Definition TContextMenu.h:44; TDataMemberAll ROOT classes may have RTTI (run time type identification) support added.Definition TDataMember.h:31; TDataTypeBasic data type descriptor (datatype information is obtained from CINT).Definition TDataType.h:44; TEnvThe TEnv class reads config files, by default named .rootrc.Definition TEnv.h:124; TFileHandlerDefinition TSysEvtHandler.h:65; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; TGX11This class is the basic interface to the X11 (Xlib) graphics system.Definition TGX11.h:80; TGaxisThe axis painter class.Definition TGaxis.h:24; TGeometryTGeometry description.Definition TGeometry.h:39; TH1F1-D histogram with a float per channel (see TH1 documentation)Definition TH1.h:622; THashListTHashList implements a hybrid collection class consisting of a hash table and a list to store TObject...Definition THashList.h:34; THashTableTHashTable implements a hash table to store TObject's.Definition THashTable.h:35; THtmlLegacy ROOT documentation system.Definition THtml.h:40; TKeyBook space in a file, create I/O buffers, to fill them, (un)compress them.Definition TKey.h:28; TLineUse the TLine constructor to create a simple line.Definition TLine.h:22; TLinkSpecial TText object used to show hyperlinks.Definition TLink.h:17; TListA doubly linked list.Definition TList.h:38; TMethodArgEach ROOT method (see TMethod) has a linked list of its arguments.Definition TMethodArg.h:36; TMethodEach ROOT class (see TClass) has a linked list of methods.Definition TMethod.h:38; TMinuitDefinition TMinuit.h:27; TObjectTableThis class registers all instances of TObject and its derived classes in a hash table.Definition TObjectTable.h:35; TObjectMother of all ROOT objects.Definition TObject.h:41; TOrdCollectionOrdered collection.Definition TO",MatchSource.WIKI,doc/master/classTObjectTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectTable.html
https://root.cern/doc/master/classTObjectTable.html:4895,Security,hash,hash,4895,"sitive popup menus.Definition TContextMenu.h:44; TDataMemberAll ROOT classes may have RTTI (run time type identification) support added.Definition TDataMember.h:31; TDataTypeBasic data type descriptor (datatype information is obtained from CINT).Definition TDataType.h:44; TEnvThe TEnv class reads config files, by default named .rootrc.Definition TEnv.h:124; TFileHandlerDefinition TSysEvtHandler.h:65; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; TGX11This class is the basic interface to the X11 (Xlib) graphics system.Definition TGX11.h:80; TGaxisThe axis painter class.Definition TGaxis.h:24; TGeometryTGeometry description.Definition TGeometry.h:39; TH1F1-D histogram with a float per channel (see TH1 documentation)Definition TH1.h:622; THashListTHashList implements a hybrid collection class consisting of a hash table and a list to store TObject...Definition THashList.h:34; THashTableTHashTable implements a hash table to store TObject's.Definition THashTable.h:35; THtmlLegacy ROOT documentation system.Definition THtml.h:40; TKeyBook space in a file, create I/O buffers, to fill them, (un)compress them.Definition TKey.h:28; TLineUse the TLine constructor to create a simple line.Definition TLine.h:22; TLinkSpecial TText object used to show hyperlinks.Definition TLink.h:17; TListA doubly linked list.Definition TList.h:38; TMethodArgEach ROOT method (see TMethod) has a linked list of its arguments.Definition TMethodArg.h:36; TMethodEach ROOT class (see TClass) has a linked list of methods.Definition TMethod.h:38; TMinuitDefinition TMinuit.h:27; TObjectTableThis class registers all instances of TObject and its derived classes in a hash table.Definition TObjectTable.h:35; TObjectMother of all ROOT objects.Definition TObject.h:41; TOrdCollectionOrdered collection.Definition TOrdCollection.h:32; TPadThe most important graphics class in the ROOT system.Definition TPad.h:28; TPaveLabelA Pave (s",MatchSource.WIKI,doc/master/classTObjectTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectTable.html
https://root.cern/doc/master/classTObjectTable.html:5627,Security,hash,hash,5627,"eometry description.Definition TGeometry.h:39; TH1F1-D histogram with a float per channel (see TH1 documentation)Definition TH1.h:622; THashListTHashList implements a hybrid collection class consisting of a hash table and a list to store TObject...Definition THashList.h:34; THashTableTHashTable implements a hash table to store TObject's.Definition THashTable.h:35; THtmlLegacy ROOT documentation system.Definition THtml.h:40; TKeyBook space in a file, create I/O buffers, to fill them, (un)compress them.Definition TKey.h:28; TLineUse the TLine constructor to create a simple line.Definition TLine.h:22; TLinkSpecial TText object used to show hyperlinks.Definition TLink.h:17; TListA doubly linked list.Definition TList.h:38; TMethodArgEach ROOT method (see TMethod) has a linked list of its arguments.Definition TMethodArg.h:36; TMethodEach ROOT class (see TClass) has a linked list of methods.Definition TMethod.h:38; TMinuitDefinition TMinuit.h:27; TObjectTableThis class registers all instances of TObject and its derived classes in a hash table.Definition TObjectTable.h:35; TObjectMother of all ROOT objects.Definition TObject.h:41; TOrdCollectionOrdered collection.Definition TOrdCollection.h:32; TPadThe most important graphics class in the ROOT system.Definition TPad.h:28; TPaveLabelA Pave (see TPave) with a text centered in the Pave.Definition TPaveLabel.h:20; TPaveTextA Pave (see TPave) with text, lines or/and boxes inside.Definition TPaveText.h:21; TPaveA TBox with a bordersize and a shadow option.Definition TPave.h:19; TPostScriptInterface to PostScript.Definition TPostScript.h:20; TROOTROOT top level object description.Definition TROOT.h:94; TRealDataThe TRealData class manages the effective list of all data members for a given class.Definition TRealData.h:30; TRootGuiFactoryThis class is a factory for ROOT GUI components.Definition TRootGuiFactory.h:27; TSignalHandlerDefinition TSysEvtHandler.h:127; TStopwatchStopwatch class.Definition TStopwatch.h:28; TStyleTStyle obj",MatchSource.WIKI,doc/master/classTObjectTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectTable.html
https://root.cern/doc/master/classTObjectTable.html:11281,Security,hash,hash,11281," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTObjectTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectTable.html
https://root.cern/doc/master/classTObjectTable.html:3282,Testability,benchmark,benchmarking,3282," 1 1 52 52 52; TClassTable 1 1 12 12 12; TObjectTable 1 1 12 12 12; ----------------------------------------------------------------------------; Total: 10225 10219 5976 506988 506340; ============================================================================; sizesize_t size(const MatrixT &matrix)retrieve the size of a square matrix; totalstatic unsigned int totalDefinition TGWin32ProxyDefs.h:40; onOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void onDefinition TGWin32VirtualXProxy.cxx:106; TApplicationThis class creates the ROOT Application Environment that interfaces to the windowing system eventloop...Definition TApplication.h:39; TArrowDraw all kinds of Arrows.Definition TArrow.h:29; TAxisClass to manage histogram axis.Definition TAxis.h:31; TBaseClassEach class (see TClass) has a linked list of its base class(es).Definition TBaseClass.h:33; TBenchmarkThis class is a ROOT utility to help benchmarking applications.Definition TBenchmark.h:29; TBoxCreate a Box.Definition TBox.h:22; TCanvasThe Canvas class.Definition TCanvas.h:23; TClassTableThis class registers for all classes their name, id and dictionary function in a hash table.Definition TClassTable.h:37; TClassTClass instances represent classes, structs and namespaces in the ROOT type system.Definition TClass.h:81; TClingThis class defines an interface to the cling C++ interpreter.Definition TCling.h:102; TColorThe color creation and management class.Definition TColor.h:21; TContextMenuThis class provides an interface to context sensitive popup menus.Definition TContextMenu.h:44; TDataMemberAll ROOT classes may have RTTI (run time type identification) support added.Definition TDataMember.h:31; TDataTypeBasic data type descriptor (datatype information is obtained from CINT).Definition TDataType.h:44; TEnvThe TEnv class reads config files, by default named .rootrc.Definition TEnv.h:124; TFileHandlerDefinit",MatchSource.WIKI,doc/master/classTObjectTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectTable.html
https://root.cern/doc/master/classTObjectTable.html:20159,Testability,test,test,20159,"ObjectTable::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TObjectTable::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 71 of file TObjectTable.h. ◆ DeclFileName(). static const char * TObjectTable::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 71 of file TObjectTable.h. ◆ Delete(). void TObjectTable::Delete ; (; Option_t * ; opt = """"). overridevirtual . Delete all objects stored in the TObjectTable. ; Reimplemented from TObject.; Definition at line 195 of file TObjectTable.cxx. ◆ Expand(). void TObjectTable::Expand ; (; Int_t ; newsize). private . Expand the object table. ; Definition at line 322 of file TObjectTable.cxx. ◆ FindElement(). Int_t TObjectTable::FindElement ; (; TObject * ; op). private . Find an object in the object table. ; Returns the slot where to put the object. To test if the object is actually already in the table use PtrIsValid(). ; Definition at line 276 of file TObjectTable.cxx. ◆ FixCollisions(). void TObjectTable::FixCollisions ; (; Int_t ; index). private . Rehash the object table in case an object has been removed. ; Definition at line 300 of file TObjectTable.cxx. ◆ GetSize(). Int_t TObjectTable::GetSize ; (; ); const. inline . Definition at line 58 of file TObjectTable.h. ◆ HighWaterMark(). Bool_t TObjectTable::HighWaterMark ; (; ). inlineprivate . Definition at line 75 of file TObjectTable.h. ◆ Instances(). Int_t TObjectTable::Instances ; (; ); const. inline . Definition at line 59 of file TObjectTable.h. ◆ InstanceStatistics(). void TObjectTable::InstanceStatistics ; (; ); const. Print the object table. ; Definition at line 340 of file TObjectTable.cxx. ◆ IsA(). TClass * TObjectTable::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 71 of file TObjectTable.h. ◆ operator=(). TObjectTa",MatchSource.WIKI,doc/master/classTObjectTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectTable.html
https://root.cern/doc/master/classTObjectTable.html:5157,Usability,simpl,simple,5157,"finition TDataType.h:44; TEnvThe TEnv class reads config files, by default named .rootrc.Definition TEnv.h:124; TFileHandlerDefinition TSysEvtHandler.h:65; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; TGX11This class is the basic interface to the X11 (Xlib) graphics system.Definition TGX11.h:80; TGaxisThe axis painter class.Definition TGaxis.h:24; TGeometryTGeometry description.Definition TGeometry.h:39; TH1F1-D histogram with a float per channel (see TH1 documentation)Definition TH1.h:622; THashListTHashList implements a hybrid collection class consisting of a hash table and a list to store TObject...Definition THashList.h:34; THashTableTHashTable implements a hash table to store TObject's.Definition THashTable.h:35; THtmlLegacy ROOT documentation system.Definition THtml.h:40; TKeyBook space in a file, create I/O buffers, to fill them, (un)compress them.Definition TKey.h:28; TLineUse the TLine constructor to create a simple line.Definition TLine.h:22; TLinkSpecial TText object used to show hyperlinks.Definition TLink.h:17; TListA doubly linked list.Definition TList.h:38; TMethodArgEach ROOT method (see TMethod) has a linked list of its arguments.Definition TMethodArg.h:36; TMethodEach ROOT class (see TClass) has a linked list of methods.Definition TMethod.h:38; TMinuitDefinition TMinuit.h:27; TObjectTableThis class registers all instances of TObject and its derived classes in a hash table.Definition TObjectTable.h:35; TObjectMother of all ROOT objects.Definition TObject.h:41; TOrdCollectionOrdered collection.Definition TOrdCollection.h:32; TPadThe most important graphics class in the ROOT system.Definition TPad.h:28; TPaveLabelA Pave (see TPave) with a text centered in the Pave.Definition TPaveLabel.h:20; TPaveTextA Pave (see TPave) with text, lines or/and boxes inside.Definition TPaveText.h:21; TPaveA TBox with a bordersize and a shadow option.Definition TPave.h:19; TPostScriptIn",MatchSource.WIKI,doc/master/classTObjectTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjectTable.html
https://root.cern/doc/master/classTObjOptLink.html:537,Modifiability,inherit,inherited,537,". ROOT: TObjOptLink Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TObjOptLink Class Reference. . Definition at line 166 of file TList.h. Public Member Functions;  TObjOptLink (TObject *obj, Option_t *opt);  ;  ~TObjOptLink ();  ; Option_t * GetAddOption () const override;  ; Option_t * GetOption () const override;  ; void SetOption (Option_t *option) override;  ;  Public Member Functions inherited from TObjLink;  TObjLink (TObject *obj);  ; virtual ~TObjLink ();  ; TObject * GetObject () const;  ; TObject ** GetObjectRef ();  ; TObjLink * Next ();  ; TObjLinkPtr_t NextSP ();  ; TObjLink * Prev ();  ; TObjLinkPtr_t PrevSP ();  ; void SetObject (TObject *obj);  . Private Attributes; TString fOption;  . #include <TList.h>. Inheritance diagram for TObjOptLink:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TObjOptLink(). TObjOptLink::TObjOptLink ; (; TObject * ; obj, . Option_t * ; opt . ). inline . Definition at line 172 of file TList.h. ◆ ~TObjOptLink(). TObjOptLink::~TObjOptLink ; (; ). inline . Definition at line 173 of file TList.h. Member Function Documentation. ◆ GetAddOption(). Option_t * TObjOptLink::GetAddOption ; (; ); const. inlineoverridevirtual . Reimplemented from TObjLink.; Definition at line 174 of file TList.h. ◆ GetOption(). Option_t * TObjOptLink::GetOption ; (; ); const. inlineoverridevirtual . Reimplemented from TObjLink.; Definition at line 175 of file TList.h. ◆ SetOption(). void TObjOptLink::SetOption ; (; Option_t * ; option). inlineoverridevirtual . Reimplemented from TObjLink.; Definition at line 176 of file TList.h. Member Data Documentation. ◆ fOption. TString TObjOptLink::fOption. private . Definition at line 169 of file TList.h. Libraries for TObjOptLink:. [legend]; The documentation for this class was gen",MatchSource.WIKI,doc/master/classTObjOptLink.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjOptLink.html
https://root.cern/doc/master/classTObjString.html:3165,Availability,error,error,3165,"  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTObjString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjString.html
https://root.cern/doc/master/classTObjString.html:3254,Availability,error,error,3254,"gs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTObjString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjString.html
https://root.cern/doc/master/classTObjString.html:3409,Availability,error,error,3409,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the uniqu",MatchSource.WIKI,doc/master/classTObjString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjString.html
https://root.cern/doc/master/classTObjString.html:3706,Availability,error,error,3706,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual voi",MatchSource.WIKI,doc/master/classTObjString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjString.html
https://root.cern/doc/master/classTObjString.html:7826,Availability,error,error,7826,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTObjString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjString.html
https://root.cern/doc/master/classTObjString.html:13264,Availability,error,error,13264,"d class, this derived class should also add ROOT::CallRecursiveRemoveIfNeeded(*this); ROOT::CallRecursiveRemoveIfNeededvoid CallRecursiveRemoveIfNeeded(TObject &obj)call RecursiveRemove for obj if gROOT is valid and obj.TestBit(kMustCleanup) is true.Definition TROOT.h:395; Otherwise, when RecursiveRemove is called (by ~TObject or example) for this type of object, the transversal of THashList and THashTable containers will will have to be done without call Hash (and hence be linear rather than logarithmic complexity). You will also see warnings like Error in <ROOT::Internal::TCheckHashRecursiveRemoveConsistency::CheckRecursiveRemove>: The class SomeName overrides TObject::Hash but does not call TROOT::RecursiveRemove in its destructor.; TObjString::HashULong_t Hash() const overrideReturn hash value for this object.Definition TObjString.h:39; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TROOT::RecursiveRemovevoid RecursiveRemove(TObject *obj) overrideRecursively remove this object from the list of Cleanups.Definition TROOT.cxx:2498. Reimplemented from TObject.; Definition at line 39 of file TObjString.h. ◆ IsA(). TClass * TObjString::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 50 of file TObjString.h. ◆ IsEqual(). Bool_t TObjString::IsEqual ; (; const TObject * ; obj); const. overridevirtual . Return kTRUE if the argument has the same content as this object. ; Reimplemented from TObject.; Definition at line 45 of file TObjString.cxx. ◆ IsSortable(). Bool_t TObjString::IsSortable ; (; ); const. inlineoverridevirtual . Reimplemented from TObject.; Definition at line 42 of file TObjString.h. ◆ Print(). void TObjString::Print ; (; Option_t * ; option); const. inlineoverridevirtual . This method must be overridden when a class wants to print its",MatchSource.WIKI,doc/master/classTObjString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjString.html
https://root.cern/doc/master/classTObjString.html:3171,Integrability,message,message,3171,"  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTObjString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjString.html
https://root.cern/doc/master/classTObjString.html:3712,Integrability,message,message,3712,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual voi",MatchSource.WIKI,doc/master/classTObjString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjString.html
https://root.cern/doc/master/classTObjString.html:4773,Integrability,message,message,4773," *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality t",MatchSource.WIKI,doc/master/classTObjString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjString.html
https://root.cern/doc/master/classTObjString.html:7832,Integrability,message,message,7832,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTObjString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjString.html
https://root.cern/doc/master/classTObjString.html:8205,Integrability,message,message,8205," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Priva",MatchSource.WIKI,doc/master/classTObjString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjString.html
https://root.cern/doc/master/classTObjString.html:12231,Integrability,rout,routine,12231," at line 37 of file TObjString.h. ◆ DeclFileName(). static const char * TObjString::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 50 of file TObjString.h. ◆ FillBuffer(). void TObjString::FillBuffer ; (; char *& ; buffer). inline . Definition at line 40 of file TObjString.h. ◆ GetName(). const char * TObjString::GetName ; (; ); const. inlineoverridevirtual . Returns name of object. ; This default method returns the class name. Classes that give objects a name should override this method. ; Reimplemented from TObject.; Definition at line 38 of file TObjString.h. ◆ GetString(). const TString & TObjString::GetString ; (; ); const. inline . Definition at line 46 of file TObjString.h. ◆ Hash(). ULong_t TObjString::Hash ; (; ); const. inlineoverridevirtual . Return hash value for this object. ; Note: If this routine is overloaded in a derived class, this derived class should also add ROOT::CallRecursiveRemoveIfNeeded(*this); ROOT::CallRecursiveRemoveIfNeededvoid CallRecursiveRemoveIfNeeded(TObject &obj)call RecursiveRemove for obj if gROOT is valid and obj.TestBit(kMustCleanup) is true.Definition TROOT.h:395; Otherwise, when RecursiveRemove is called (by ~TObject or example) for this type of object, the transversal of THashList and THashTable containers will will have to be done without call Hash (and hence be linear rather than logarithmic complexity). You will also see warnings like Error in <ROOT::Internal::TCheckHashRecursiveRemoveConsistency::CheckRecursiveRemove>: The class SomeName overrides TObject::Hash but does not call TROOT::RecursiveRemove in its destructor.; TObjString::HashULong_t Hash() const overrideReturn hash value for this object.Definition TObjString.h:39; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TROOT::RecursiveRemovevoid RecursiveRemove(",MatchSource.WIKI,doc/master/classTObjString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjString.html
https://root.cern/doc/master/classTObjString.html:13270,Integrability,message,message,13270,"d class, this derived class should also add ROOT::CallRecursiveRemoveIfNeeded(*this); ROOT::CallRecursiveRemoveIfNeededvoid CallRecursiveRemoveIfNeeded(TObject &obj)call RecursiveRemove for obj if gROOT is valid and obj.TestBit(kMustCleanup) is true.Definition TROOT.h:395; Otherwise, when RecursiveRemove is called (by ~TObject or example) for this type of object, the transversal of THashList and THashTable containers will will have to be done without call Hash (and hence be linear rather than logarithmic complexity). You will also see warnings like Error in <ROOT::Internal::TCheckHashRecursiveRemoveConsistency::CheckRecursiveRemove>: The class SomeName overrides TObject::Hash but does not call TROOT::RecursiveRemove in its destructor.; TObjString::HashULong_t Hash() const overrideReturn hash value for this object.Definition TObjString.h:39; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TROOT::RecursiveRemovevoid RecursiveRemove(TObject *obj) overrideRecursively remove this object from the list of Cleanups.Definition TROOT.cxx:2498. Reimplemented from TObject.; Definition at line 39 of file TObjString.h. ◆ IsA(). TClass * TObjString::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 50 of file TObjString.h. ◆ IsEqual(). Bool_t TObjString::IsEqual ; (; const TObject * ; obj); const. overridevirtual . Return kTRUE if the argument has the same content as this object. ; Reimplemented from TObject.; Definition at line 45 of file TObjString.cxx. ◆ IsSortable(). Bool_t TObjString::IsSortable ; (; ); const. inlineoverridevirtual . Reimplemented from TObject.; Definition at line 42 of file TObjString.h. ◆ Print(). void TObjString::Print ; (; Option_t * ; option); const. inlineoverridevirtual . This method must be overridden when a class wants to print its",MatchSource.WIKI,doc/master/classTObjString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjString.html
https://root.cern/doc/master/classTObjString.html:1485,Modifiability,inherit,inherited,1485,"bjString (const char *s="""");  ;  ~TObjString ();  TObjString destructor. ;  ; Int_t Compare (const TObject *obj) const override;  String compare the argument with this object. ;  ; TString CopyString () const;  ; void FillBuffer (char *&buffer);  ; const char * GetName () const override;  Returns name of object. ;  ; const TString & GetString () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsEqual (const TObject *obj) const override;  Return kTRUE if the argument has the same content as this object. ;  ; Bool_t IsSortable () const override;  ; void Print (Option_t *) const override;  This method must be overridden when a class wants to print itself. ;  ; void ReadBuffer (char *&buffer);  ; void SetString (const char *s);  ; Int_t Sizeof () const;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; TString & String ();  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual void Copy (TObject &obje",MatchSource.WIKI,doc/master/classTObjString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjString.html
https://root.cern/doc/master/classTObjString.html:2801,Modifiability,inherit,inheritance,2801,"virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTObjString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjString.html
https://root.cern/doc/master/classTObjString.html:4871,Modifiability,inherit,inherits,4871," FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t No",MatchSource.WIKI,doc/master/classTObjString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjString.html
https://root.cern/doc/master/classTObjString.html:4988,Modifiability,inherit,inherits,4988,"n () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; void",MatchSource.WIKI,doc/master/classTObjString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjString.html
https://root.cern/doc/master/classTObjString.html:8706,Modifiability,inherit,inherited,8706,"reamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TString fString;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 ))",MatchSource.WIKI,doc/master/classTObjString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjString.html
https://root.cern/doc/master/classTObjString.html:9276,Modifiability,inherit,inherited,9276,"ctory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TString fString;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TObjString.h>. Inheritance diagram for TObjString:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera in",MatchSource.WIKI,doc/master/classTObjString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjString.html
https://root.cern/doc/master/classTObjString.html:9917,Modifiability,inherit,inherited,9917,"oid SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TString fString;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TObjString.h>. Inheritance diagram for TObjString:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TObjString(). TObjString::TObjString ; (; const char * ; s = """"). inline . Definition at line 34 of file TObjString.h. ◆ ~TObjString(). TObjString::~TObjString ; (; ). TObjString destructor. ; Definition at line 26 of file TObjString.cxx. Member Function Documentation. ◆ Class(). static TClass * TObjString::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TObjString::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TObjString::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 50 of",MatchSource.WIKI,doc/master/classTObjString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjString.html
https://root.cern/doc/master/classTObjString.html:10016,Modifiability,inherit,inherited,10016,"oid SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TString fString;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TObjString.h>. Inheritance diagram for TObjString:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TObjString(). TObjString::TObjString ; (; const char * ; s = """"). inline . Definition at line 34 of file TObjString.h. ◆ ~TObjString(). TObjString::~TObjString ; (; ). TObjString destructor. ; Definition at line 26 of file TObjString.cxx. Member Function Documentation. ◆ Class(). static TClass * TObjString::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TObjString::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TObjString::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 50 of",MatchSource.WIKI,doc/master/classTObjString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjString.html
https://root.cern/doc/master/classTObjString.html:852,Security,hash,hash,852,". ROOT: TObjString Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TObjString Class ReferenceCore ROOT classes » Base ROOT classes. ; Collectable string class. ; This is a TObject containing a TString. ; Definition at line 28 of file TObjString.h. Public Member Functions;  TObjString (const char *s="""");  ;  ~TObjString ();  TObjString destructor. ;  ; Int_t Compare (const TObject *obj) const override;  String compare the argument with this object. ;  ; TString CopyString () const;  ; void FillBuffer (char *&buffer);  ; const char * GetName () const override;  Returns name of object. ;  ; const TString & GetString () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsEqual (const TObject *obj) const override;  Return kTRUE if the argument has the same content as this object. ;  ; Bool_t IsSortable () const override;  ; void Print (Option_t *) const override;  This method must be overridden when a class wants to print itself. ;  ; void ReadBuffer (char *&buffer);  ; void SetString (const char *s);  ; Int_t Sizeof () const;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; TString & String ();  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULo",MatchSource.WIKI,doc/master/classTObjString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjString.html
https://root.cern/doc/master/classTObjString.html:12187,Security,hash,hash,12187,"mplemented from TObject.; Definition at line 35 of file TObjString.cxx. ◆ CopyString(). TString TObjString::CopyString ; (; ); const. inline . Definition at line 37 of file TObjString.h. ◆ DeclFileName(). static const char * TObjString::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 50 of file TObjString.h. ◆ FillBuffer(). void TObjString::FillBuffer ; (; char *& ; buffer). inline . Definition at line 40 of file TObjString.h. ◆ GetName(). const char * TObjString::GetName ; (; ); const. inlineoverridevirtual . Returns name of object. ; This default method returns the class name. Classes that give objects a name should override this method. ; Reimplemented from TObject.; Definition at line 38 of file TObjString.h. ◆ GetString(). const TString & TObjString::GetString ; (; ); const. inline . Definition at line 46 of file TObjString.h. ◆ Hash(). ULong_t TObjString::Hash ; (; ); const. inlineoverridevirtual . Return hash value for this object. ; Note: If this routine is overloaded in a derived class, this derived class should also add ROOT::CallRecursiveRemoveIfNeeded(*this); ROOT::CallRecursiveRemoveIfNeededvoid CallRecursiveRemoveIfNeeded(TObject &obj)call RecursiveRemove for obj if gROOT is valid and obj.TestBit(kMustCleanup) is true.Definition TROOT.h:395; Otherwise, when RecursiveRemove is called (by ~TObject or example) for this type of object, the transversal of THashList and THashTable containers will will have to be done without call Hash (and hence be linear rather than logarithmic complexity). You will also see warnings like Error in <ROOT::Internal::TCheckHashRecursiveRemoveConsistency::CheckRecursiveRemove>: The class SomeName overrides TObject::Hash but does not call TROOT::RecursiveRemove in its destructor.; TObjString::HashULong_t Hash() const overrideReturn hash value for this object.Definition TObjString.h:39; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::Errorvirtual",MatchSource.WIKI,doc/master/classTObjString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjString.html
https://root.cern/doc/master/classTObjString.html:13062,Security,hash,hash,13062,"nst. inline . Definition at line 46 of file TObjString.h. ◆ Hash(). ULong_t TObjString::Hash ; (; ); const. inlineoverridevirtual . Return hash value for this object. ; Note: If this routine is overloaded in a derived class, this derived class should also add ROOT::CallRecursiveRemoveIfNeeded(*this); ROOT::CallRecursiveRemoveIfNeededvoid CallRecursiveRemoveIfNeeded(TObject &obj)call RecursiveRemove for obj if gROOT is valid and obj.TestBit(kMustCleanup) is true.Definition TROOT.h:395; Otherwise, when RecursiveRemove is called (by ~TObject or example) for this type of object, the transversal of THashList and THashTable containers will will have to be done without call Hash (and hence be linear rather than logarithmic complexity). You will also see warnings like Error in <ROOT::Internal::TCheckHashRecursiveRemoveConsistency::CheckRecursiveRemove>: The class SomeName overrides TObject::Hash but does not call TROOT::RecursiveRemove in its destructor.; TObjString::HashULong_t Hash() const overrideReturn hash value for this object.Definition TObjString.h:39; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TROOT::RecursiveRemovevoid RecursiveRemove(TObject *obj) overrideRecursively remove this object from the list of Cleanups.Definition TROOT.cxx:2498. Reimplemented from TObject.; Definition at line 39 of file TObjString.h. ◆ IsA(). TClass * TObjString::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 50 of file TObjString.h. ◆ IsEqual(). Bool_t TObjString::IsEqual ; (; const TObject * ; obj); const. overridevirtual . Return kTRUE if the argument has the same content as this object. ; Reimplemented from TObject.; Definition at line 45 of file TObjString.cxx. ◆ IsSortable(). Bool_t TObjString::IsSortable ; (; ); const. inlineoverridevirtual . Reimplement",MatchSource.WIKI,doc/master/classTObjString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjString.html
https://root.cern/doc/master/classTObjString.html:12762,Testability,log,logarithmic,12762,"n at line 40 of file TObjString.h. ◆ GetName(). const char * TObjString::GetName ; (; ); const. inlineoverridevirtual . Returns name of object. ; This default method returns the class name. Classes that give objects a name should override this method. ; Reimplemented from TObject.; Definition at line 38 of file TObjString.h. ◆ GetString(). const TString & TObjString::GetString ; (; ); const. inline . Definition at line 46 of file TObjString.h. ◆ Hash(). ULong_t TObjString::Hash ; (; ); const. inlineoverridevirtual . Return hash value for this object. ; Note: If this routine is overloaded in a derived class, this derived class should also add ROOT::CallRecursiveRemoveIfNeeded(*this); ROOT::CallRecursiveRemoveIfNeededvoid CallRecursiveRemoveIfNeeded(TObject &obj)call RecursiveRemove for obj if gROOT is valid and obj.TestBit(kMustCleanup) is true.Definition TROOT.h:395; Otherwise, when RecursiveRemove is called (by ~TObject or example) for this type of object, the transversal of THashList and THashTable containers will will have to be done without call Hash (and hence be linear rather than logarithmic complexity). You will also see warnings like Error in <ROOT::Internal::TCheckHashRecursiveRemoveConsistency::CheckRecursiveRemove>: The class SomeName overrides TObject::Hash but does not call TROOT::RecursiveRemove in its destructor.; TObjString::HashULong_t Hash() const overrideReturn hash value for this object.Definition TObjString.h:39; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TROOT::RecursiveRemovevoid RecursiveRemove(TObject *obj) overrideRecursively remove this object from the list of Cleanups.Definition TROOT.cxx:2498. Reimplemented from TObject.; Definition at line 39 of file TObjString.h. ◆ IsA(). TClass * TObjString::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented fr",MatchSource.WIKI,doc/master/classTObjString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTObjString.html
https://root.cern/doc/master/classTODBCResult.html:2985,Availability,error,error,2985,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTODBCResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTODBCResult.html
https://root.cern/doc/master/classTODBCResult.html:3074,Availability,error,error,3074,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTODBCResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTODBCResult.html
https://root.cern/doc/master/classTODBCResult.html:3229,Availability,error,error,3229,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTODBCResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTODBCResult.html
https://root.cern/doc/master/classTODBCResult.html:3526,Availability,error,error,3526,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTODBCResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTODBCResult.html
https://root.cern/doc/master/classTODBCResult.html:8090,Availability,error,error,8090," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSQLResult; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Versi",MatchSource.WIKI,doc/master/classTODBCResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTODBCResult.html
https://root.cern/doc/master/classTODBCResult.html:2991,Integrability,message,message,2991,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTODBCResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTODBCResult.html
https://root.cern/doc/master/classTODBCResult.html:3532,Integrability,message,message,3532,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTODBCResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTODBCResult.html
https://root.cern/doc/master/classTODBCResult.html:4734,Integrability,message,message,4734,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTODBCResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTODBCResult.html
https://root.cern/doc/master/classTODBCResult.html:8096,Integrability,message,message,8096," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSQLResult; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Versi",MatchSource.WIKI,doc/master/classTODBCResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTODBCResult.html
https://root.cern/doc/master/classTODBCResult.html:8469,Integrability,message,message,8469," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSQLResult; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ()",MatchSource.WIKI,doc/master/classTODBCResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTODBCResult.html
https://root.cern/doc/master/classTODBCResult.html:929,Modifiability,inherit,inherited,929,". ROOT: TODBCResult Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TODBCResult Class Reference. . Definition at line 30 of file TODBCResult.h. Public Member Functions;  TODBCResult (SQLHSTMT stmt);  Constructor. ;  ; virtual ~TODBCResult ();  Cleanup ODBC query result. ;  ; void Close (Option_t *opt="""") final;  Close (cleanup) ODBC result object. Deletes statement. ;  ; Int_t GetFieldCount () final;  ; const char * GetFieldName (Int_t field) final;  Get name of specified field. ;  ; TClass * IsA () const override;  ; TSQLRow * Next () final;  Get next query result row. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSQLResult; virtual ~TSQLResult ();  ; virtual Int_t GetRowCount () const;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;",MatchSource.WIKI,doc/master/classTODBCResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTODBCResult.html
https://root.cern/doc/master/classTODBCResult.html:1224,Modifiability,inherit,inherited,1224,"tected Attributes |; List of all members ; TODBCResult Class Reference. . Definition at line 30 of file TODBCResult.h. Public Member Functions;  TODBCResult (SQLHSTMT stmt);  Constructor. ;  ; virtual ~TODBCResult ();  Cleanup ODBC query result. ;  ; void Close (Option_t *opt="""") final;  Close (cleanup) ODBC result object. Deletes statement. ;  ; Int_t GetFieldCount () final;  ; const char * GetFieldName (Int_t field) final;  Get name of specified field. ;  ; TClass * IsA () const override;  ; TSQLRow * Next () final;  Get next query result row. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSQLResult; virtual ~TSQLResult ();  ; virtual Int_t GetRowCount () const;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTODBCResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTODBCResult.html
https://root.cern/doc/master/classTODBCResult.html:2621,Modifiability,inherit,inheritance,2621,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTODBCResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTODBCResult.html
https://root.cern/doc/master/classTODBCResult.html:4832,Modifiability,inherit,inherits,4832,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTODBCResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTODBCResult.html
https://root.cern/doc/master/classTODBCResult.html:4949,Modifiability,inherit,inherits,4949,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTODBCResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTODBCResult.html
https://root.cern/doc/master/classTODBCResult.html:8970,Modifiability,inherit,inherited,8970,"em error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSQLResult; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Int_t fFieldCount {0};  ; SQLHSTMT fHstmt;  ; TString fNameBuffer;  ;  Protected Attributes inherited from TSQLResult; Int_t fRowCount;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 ))",MatchSource.WIKI,doc/master/classTODBCResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTODBCResult.html
https://root.cern/doc/master/classTODBCResult.html:9184,Modifiability,inherit,inherited,9184,"em error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSQLResult; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Int_t fFieldCount {0};  ; SQLHSTMT fHstmt;  ; TString fNameBuffer;  ;  Protected Attributes inherited from TSQLResult; Int_t fRowCount;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 ))",MatchSource.WIKI,doc/master/classTODBCResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTODBCResult.html
https://root.cern/doc/master/classTODBCResult.html:9784,Modifiability,inherit,inherited,9784,". Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSQLResult; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Int_t fFieldCount {0};  ; SQLHSTMT fHstmt;  ; TString fNameBuffer;  ;  Protected Attributes inherited from TSQLResult; Int_t fRowCount;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSQLResult;  TSQLResult ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, cons",MatchSource.WIKI,doc/master/classTODBCResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTODBCResult.html
https://root.cern/doc/master/classTODBCResult.html:9875,Modifiability,inherit,inherited,9875,"  Static Public Member Functions inherited from TSQLResult; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Int_t fFieldCount {0};  ; SQLHSTMT fHstmt;  ; TString fNameBuffer;  ;  Protected Attributes inherited from TSQLResult; Int_t fRowCount;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSQLResult;  TSQLResult ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TODBCResult.h>. Inheritance diagram for TODBCResult:. Th",MatchSource.WIKI,doc/master/classTODBCResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTODBCResult.html
https://root.cern/doc/master/classTODBCResult.html:10516,Modifiability,inherit,inherited,10516," . Protected Attributes; Int_t fFieldCount {0};  ; SQLHSTMT fHstmt;  ; TString fNameBuffer;  ;  Protected Attributes inherited from TSQLResult; Int_t fRowCount;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSQLResult;  TSQLResult ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TODBCResult.h>. Inheritance diagram for TODBCResult:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TODBCResult(). TODBCResult::TODBCResult ; (; SQLHSTMT ; stmt). Constructor. ; Definition at line 21 of file TODBCResult.cxx. ◆ ~TODBCResult(). TODBCResult::~TODBCResult ; (; ). virtual . Cleanup ODBC query result. ; Definition at line 37 of file TODBCResult.cxx. Member Function Documentation. ◆ Class(). static TClass * TODBCResult::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TODBCResult::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TODBCResult::Class_Version ; (; ). inlinestaticc",MatchSource.WIKI,doc/master/classTODBCResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTODBCResult.html
https://root.cern/doc/master/classTODBCResult.html:10615,Modifiability,inherit,inherited,10615," . Protected Attributes; Int_t fFieldCount {0};  ; SQLHSTMT fHstmt;  ; TString fNameBuffer;  ;  Protected Attributes inherited from TSQLResult; Int_t fRowCount;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSQLResult;  TSQLResult ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TODBCResult.h>. Inheritance diagram for TODBCResult:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TODBCResult(). TODBCResult::TODBCResult ; (; SQLHSTMT ; stmt). Constructor. ; Definition at line 21 of file TODBCResult.cxx. ◆ ~TODBCResult(). TODBCResult::~TODBCResult ; (; ). virtual . Cleanup ODBC query result. ; Definition at line 37 of file TODBCResult.cxx. Member Function Documentation. ◆ Class(). static TClass * TODBCResult::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TODBCResult::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TODBCResult::Class_Version ; (; ). inlinestaticc",MatchSource.WIKI,doc/master/classTODBCResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTODBCResult.html
https://root.cern/doc/master/classTODBCResult.html:10689,Modifiability,inherit,inherited,10689," . Protected Attributes; Int_t fFieldCount {0};  ; SQLHSTMT fHstmt;  ; TString fNameBuffer;  ;  Protected Attributes inherited from TSQLResult; Int_t fRowCount;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSQLResult;  TSQLResult ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TODBCResult.h>. Inheritance diagram for TODBCResult:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TODBCResult(). TODBCResult::TODBCResult ; (; SQLHSTMT ; stmt). Constructor. ; Definition at line 21 of file TODBCResult.cxx. ◆ ~TODBCResult(). TODBCResult::~TODBCResult ; (; ). virtual . Cleanup ODBC query result. ; Definition at line 37 of file TODBCResult.cxx. Member Function Documentation. ◆ Class(). static TClass * TODBCResult::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TODBCResult::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TODBCResult::Class_Version ; (; ). inlinestaticc",MatchSource.WIKI,doc/master/classTODBCResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTODBCResult.html
https://root.cern/doc/master/classTODBCResult.html:4463,Security,hash,hash,4463," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTODBCResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTODBCResult.html
https://root.cern/doc/master/classTODBCRow.html:3034,Availability,error,error,3034,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTODBCRow.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTODBCRow.html
https://root.cern/doc/master/classTODBCRow.html:3123,Availability,error,error,3123,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTODBCRow.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTODBCRow.html
https://root.cern/doc/master/classTODBCRow.html:3278,Availability,error,error,3278,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTODBCRow.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTODBCRow.html
https://root.cern/doc/master/classTODBCRow.html:3575,Availability,error,error,3575,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTODBCRow.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTODBCRow.html
https://root.cern/doc/master/classTODBCRow.html:8139,Availability,error,error,8139," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSQLRow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTODBCRow.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTODBCRow.html
https://root.cern/doc/master/classTODBCRow.html:12349,Energy Efficiency,allocate,allocates,12349,"; ). privatedelete . ◆ TODBCRow() [2/2]. TODBCRow::TODBCRow ; (; SQLHSTMT ; stmt, . Int_t ; fieldcount . ). Single row of query result. ; Definition at line 22 of file TODBCRow.cxx. ◆ ~TODBCRow(). TODBCRow::~TODBCRow ; (; ). virtual . Destroy row object. ; Definition at line 44 of file TODBCRow.cxx. Member Function Documentation. ◆ Class(). static TClass * TODBCRow::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TODBCRow::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TODBCRow::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 50 of file TODBCRow.h. ◆ Close(). void TODBCRow::Close ; (; Option_t * ; opt = """"). finalvirtual . Close row. ; Implements TSQLRow.; Definition at line 52 of file TODBCRow.cxx. ◆ CopyFieldValue(). void TODBCRow::CopyFieldValue ; (; Int_t ; field). protected . Extracts field value from statement. ; First allocates 128 bytes for buffer. If there is not enouth space, bigger buffer is allocated and request is repeated ; Definition at line 73 of file TODBCRow.cxx. ◆ DeclFileName(). static const char * TODBCRow::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 50 of file TODBCRow.h. ◆ GetField(). const char * TODBCRow::GetField ; (; Int_t ; field). finalvirtual . Get specified field from row (0 <= field < GetFieldCount()). ; Implements TSQLRow.; Definition at line 125 of file TODBCRow.cxx. ◆ GetFieldLength(). ULong_t TODBCRow::GetFieldLength ; (; Int_t ; field). finalvirtual . Get length in bytes of specified field. ; Implements TSQLRow.; Definition at line 114 of file TODBCRow.cxx. ◆ IsA(). TClass * TODBCRow::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 50 of file TODBCRow.h. ◆ operator=(). TODBCRow & TODBCRow::operator= ; (; const TODBCRow & ; ). pr",MatchSource.WIKI,doc/master/classTODBCRow.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTODBCRow.html
https://root.cern/doc/master/classTODBCRow.html:12428,Energy Efficiency,allocate,allocated,12428," . Int_t ; fieldcount . ). Single row of query result. ; Definition at line 22 of file TODBCRow.cxx. ◆ ~TODBCRow(). TODBCRow::~TODBCRow ; (; ). virtual . Destroy row object. ; Definition at line 44 of file TODBCRow.cxx. Member Function Documentation. ◆ Class(). static TClass * TODBCRow::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TODBCRow::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TODBCRow::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 50 of file TODBCRow.h. ◆ Close(). void TODBCRow::Close ; (; Option_t * ; opt = """"). finalvirtual . Close row. ; Implements TSQLRow.; Definition at line 52 of file TODBCRow.cxx. ◆ CopyFieldValue(). void TODBCRow::CopyFieldValue ; (; Int_t ; field). protected . Extracts field value from statement. ; First allocates 128 bytes for buffer. If there is not enouth space, bigger buffer is allocated and request is repeated ; Definition at line 73 of file TODBCRow.cxx. ◆ DeclFileName(). static const char * TODBCRow::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 50 of file TODBCRow.h. ◆ GetField(). const char * TODBCRow::GetField ; (; Int_t ; field). finalvirtual . Get specified field from row (0 <= field < GetFieldCount()). ; Implements TSQLRow.; Definition at line 125 of file TODBCRow.cxx. ◆ GetFieldLength(). ULong_t TODBCRow::GetFieldLength ; (; Int_t ; field). finalvirtual . Get length in bytes of specified field. ; Implements TSQLRow.; Definition at line 114 of file TODBCRow.cxx. ◆ IsA(). TClass * TODBCRow::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 50 of file TODBCRow.h. ◆ operator=(). TODBCRow & TODBCRow::operator= ; (; const TODBCRow & ; ). privatedelete . ◆ Streamer(). void TODBCRow::Streamer ; (; TBuffer & ; R__b). overri",MatchSource.WIKI,doc/master/classTODBCRow.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTODBCRow.html
https://root.cern/doc/master/classTODBCRow.html:3040,Integrability,message,message,3040,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTODBCRow.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTODBCRow.html
https://root.cern/doc/master/classTODBCRow.html:3581,Integrability,message,message,3581,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTODBCRow.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTODBCRow.html
https://root.cern/doc/master/classTODBCRow.html:4783,Integrability,message,message,4783,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTODBCRow.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTODBCRow.html
https://root.cern/doc/master/classTODBCRow.html:8145,Integrability,message,message,8145," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSQLRow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTODBCRow.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTODBCRow.html
https://root.cern/doc/master/classTODBCRow.html:8518,Integrability,message,message,8518," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSQLRow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  ",MatchSource.WIKI,doc/master/classTODBCRow.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTODBCRow.html
https://root.cern/doc/master/classTODBCRow.html:981,Modifiability,inherit,inherited,981,"e. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TODBCRow Class Reference. . Definition at line 28 of file TODBCRow.h. Public Member Functions;  TODBCRow (SQLHSTMT stmt, Int_t fieldcount);  Single row of query result. ;  ; virtual ~TODBCRow ();  Destroy row object. ;  ; void Close (Option_t *opt="""") final;  Close row. ;  ; const char * GetField (Int_t field) final;  Get specified field from row (0 <= field < GetFieldCount()). ;  ; ULong_t GetFieldLength (Int_t field) final;  Get length in bytes of specified field. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSQLRow; virtual ~TSQLRow ();  ; TClass * IsA () const override;  ; const char * operator[] (Int_t field);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which th",MatchSource.WIKI,doc/master/classTODBCRow.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTODBCRow.html
https://root.cern/doc/master/classTODBCRow.html:1273,Modifiability,inherit,inherited,1273,"rivate Member Functions |; List of all members ; TODBCRow Class Reference. . Definition at line 28 of file TODBCRow.h. Public Member Functions;  TODBCRow (SQLHSTMT stmt, Int_t fieldcount);  Single row of query result. ;  ; virtual ~TODBCRow ();  Destroy row object. ;  ; void Close (Option_t *opt="""") final;  Close row. ;  ; const char * GetField (Int_t field) final;  Get specified field from row (0 <= field < GetFieldCount()). ;  ; ULong_t GetFieldLength (Int_t field) final;  Get length in bytes of specified field. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSQLRow; virtual ~TSQLRow ();  ; TClass * IsA () const override;  ; const char * operator[] (Int_t field);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTODBCRow.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTODBCRow.html
https://root.cern/doc/master/classTODBCRow.html:2670,Modifiability,inherit,inheritance,2670,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTODBCRow.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTODBCRow.html
https://root.cern/doc/master/classTODBCRow.html:4881,Modifiability,inherit,inherits,4881,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTODBCRow.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTODBCRow.html
https://root.cern/doc/master/classTODBCRow.html:4998,Modifiability,inherit,inherits,4998,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTODBCRow.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTODBCRow.html
https://root.cern/doc/master/classTODBCRow.html:9019,Modifiability,inherit,inherited,9019,"tem error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSQLRow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void CopyFieldValue (Int_t field);  Extracts field value from statement. ;  ;  Protected Member Functions inherited from TSQLRow;  TSQLRow ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; char ** fBuf",MatchSource.WIKI,doc/master/classTODBCRow.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTODBCRow.html
https://root.cern/doc/master/classTODBCRow.html:9230,Modifiability,inherit,inherited,9230,"tem error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSQLRow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void CopyFieldValue (Int_t field);  Extracts field value from statement. ;  ;  Protected Member Functions inherited from TSQLRow;  TSQLRow ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; char ** fBuf",MatchSource.WIKI,doc/master/classTODBCRow.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTODBCRow.html
https://root.cern/doc/master/classTODBCRow.html:9850,Modifiability,inherit,inherited,9850," ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSQLRow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void CopyFieldValue (Int_t field);  Extracts field value from statement. ;  ;  Protected Member Functions inherited from TSQLRow;  TSQLRow ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; char ** fBuffer {nullptr};  ; Int_t fFieldCount {0};  ; SQLHSTMT fHstmt;  ; ULong_t * fLengths {nullptr};  . Private Member Functions;  TODBCRow (const TODBCRow &)=delete;  ; TODBCRow & operator= (const TODBCRow &)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoC",MatchSource.WIKI,doc/master/classTODBCRow.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTODBCRow.html
https://root.cern/doc/master/classTODBCRow.html:9918,Modifiability,inherit,inherited,9918," ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSQLRow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void CopyFieldValue (Int_t field);  Extracts field value from statement. ;  ;  Protected Member Functions inherited from TSQLRow;  TSQLRow ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; char ** fBuffer {nullptr};  ; Int_t fFieldCount {0};  ; SQLHSTMT fHstmt;  ; ULong_t * fLengths {nullptr};  . Private Member Functions;  TODBCRow (const TODBCRow &)=delete;  ; TODBCRow & operator= (const TODBCRow &)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoC",MatchSource.WIKI,doc/master/classTODBCRow.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTODBCRow.html
https://root.cern/doc/master/classTODBCRow.html:10393,Modifiability,inherit,inherited,10393,"uctor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void CopyFieldValue (Int_t field);  Extracts field value from statement. ;  ;  Protected Member Functions inherited from TSQLRow;  TSQLRow ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; char ** fBuffer {nullptr};  ; Int_t fFieldCount {0};  ; SQLHSTMT fHstmt;  ; ULong_t * fLengths {nullptr};  . Private Member Functions;  TODBCRow (const TODBCRow &)=delete;  ; TODBCRow & operator= (const TODBCRow &)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TODBCRow.h>. Inheritance diagram for TODBCRow:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TODBCRow() [1/2]. TODBCRow::TODBCRow ; (; const TODBCRow & ; ). privatedelete . ◆ TODBCRow() [2/2]. TODBCRow::TODBCRow ; (; SQLHSTMT ; stmt, . Int_t ; fiel",MatchSource.WIKI,doc/master/classTODBCRow.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTODBCRow.html
https://root.cern/doc/master/classTODBCRow.html:11034,Modifiability,inherit,inherited,11034,"er (protected). ;  ; void MakeZombie ();  . Protected Attributes; char ** fBuffer {nullptr};  ; Int_t fFieldCount {0};  ; SQLHSTMT fHstmt;  ; ULong_t * fLengths {nullptr};  . Private Member Functions;  TODBCRow (const TODBCRow &)=delete;  ; TODBCRow & operator= (const TODBCRow &)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TODBCRow.h>. Inheritance diagram for TODBCRow:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TODBCRow() [1/2]. TODBCRow::TODBCRow ; (; const TODBCRow & ; ). privatedelete . ◆ TODBCRow() [2/2]. TODBCRow::TODBCRow ; (; SQLHSTMT ; stmt, . Int_t ; fieldcount . ). Single row of query result. ; Definition at line 22 of file TODBCRow.cxx. ◆ ~TODBCRow(). TODBCRow::~TODBCRow ; (; ). virtual . Destroy row object. ; Definition at line 44 of file TODBCRow.cxx. Member Function Documentation. ◆ Class(). static TClass * TODBCRow::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TODBCRow::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TODBCRow::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 50 of file TO",MatchSource.WIKI,doc/master/classTODBCRow.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTODBCRow.html
https://root.cern/doc/master/classTODBCRow.html:4512,Security,hash,hash,4512," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTODBCRow.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTODBCRow.html
https://root.cern/doc/master/classTOptionListItem.html:2477,Availability,error,error,2477,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTOptionListItem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOptionListItem.html
https://root.cern/doc/master/classTOptionListItem.html:2566,Availability,error,error,2566,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTOptionListItem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOptionListItem.html
https://root.cern/doc/master/classTOptionListItem.html:2721,Availability,error,error,2721,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTOptionListItem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOptionListItem.html
https://root.cern/doc/master/classTOptionListItem.html:3018,Availability,error,error,3018,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTOptionListItem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOptionListItem.html
https://root.cern/doc/master/classTOptionListItem.html:7582,Availability,error,error,7582," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTOptionListItem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOptionListItem.html
https://root.cern/doc/master/classTOptionListItem.html:2483,Integrability,message,message,2483,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTOptionListItem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOptionListItem.html
https://root.cern/doc/master/classTOptionListItem.html:3024,Integrability,message,message,3024,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTOptionListItem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOptionListItem.html
https://root.cern/doc/master/classTOptionListItem.html:4226,Integrability,message,message,4226,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTOptionListItem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOptionListItem.html
https://root.cern/doc/master/classTOptionListItem.html:7588,Integrability,message,message,7588," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTOptionListItem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOptionListItem.html
https://root.cern/doc/master/classTOptionListItem.html:7961,Integrability,message,message,7961," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Publi",MatchSource.WIKI,doc/master/classTOptionListItem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOptionListItem.html
https://root.cern/doc/master/classTOptionListItem.html:716,Modifiability,inherit,inherited,716,". ROOT: TOptionListItem Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; TOptionListItem Class Reference. . Definition at line 105 of file TDataMember.h. Public Member Functions;  TOptionListItem ();  ;  TOptionListItem (TDataMember *m, Long_t val, Long_t valmask, Long_t tglmask, const char *name, const char *label);  Constructor. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,doc/master/classTOptionListItem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOptionListItem.html
https://root.cern/doc/master/classTOptionListItem.html:2113,Modifiability,inherit,inheritance,2113,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTOptionListItem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOptionListItem.html
https://root.cern/doc/master/classTOptionListItem.html:4324,Modifiability,inherit,inherits,4324,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTOptionListItem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOptionListItem.html
https://root.cern/doc/master/classTOptionListItem.html:4441,Modifiability,inherit,inherits,4441,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTOptionListItem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOptionListItem.html
https://root.cern/doc/master/classTOptionListItem.html:8462,Modifiability,inherit,inherited,8462,"reamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; TDataMember * fDataMember;  ; TString fOptLabel;  ; TString fOptName;  ; Long_t fToggleMaskBit;  ; Long_t fValue;  Data member to which this option belongs. ;  ; Long_t fValueMaskBit;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( ",MatchSource.WIKI,doc/master/classTOptionListItem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOptionListItem.html
https://root.cern/doc/master/classTOptionListItem.html:9198,Modifiability,inherit,inherited,9198,"ber Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; TDataMember * fDataMember;  ; TString fOptLabel;  ; TString fOptName;  ; Long_t fToggleMaskBit;  ; Long_t fValue;  Data member to which this option belongs. ;  ; Long_t fValueMaskBit;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TDataMember.h>. Inheritance diagram for TOptionListItem:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Op",MatchSource.WIKI,doc/master/classTOptionListItem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOptionListItem.html
https://root.cern/doc/master/classTOptionListItem.html:9839,Modifiability,inherit,inherited,9839,"c Attributes; TDataMember * fDataMember;  ; TString fOptLabel;  ; TString fOptName;  ; Long_t fToggleMaskBit;  ; Long_t fValue;  Data member to which this option belongs. ;  ; Long_t fValueMaskBit;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TDataMember.h>. Inheritance diagram for TOptionListItem:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TOptionListItem() [1/2]. TOptionListItem::TOptionListItem ; (; ). inline . Definition at line 114 of file TDataMember.h. ◆ TOptionListItem() [2/2]. TOptionListItem::TOptionListItem ; (; TDataMember * ; m, . Long_t ; val, . Long_t ; valmask, . Long_t ; tglmask, . const char * ; name, . const char * ; label . ). Constructor. ; Definition at line 981 of file TDataMember.cxx. Member Function Documentation. ◆ Class(). static TClass * TOptionListItem::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TOptionListItem::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class",MatchSource.WIKI,doc/master/classTOptionListItem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOptionListItem.html
https://root.cern/doc/master/classTOptionListItem.html:9938,Modifiability,inherit,inherited,9938,"c Attributes; TDataMember * fDataMember;  ; TString fOptLabel;  ; TString fOptName;  ; Long_t fToggleMaskBit;  ; Long_t fValue;  Data member to which this option belongs. ;  ; Long_t fValueMaskBit;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TDataMember.h>. Inheritance diagram for TOptionListItem:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TOptionListItem() [1/2]. TOptionListItem::TOptionListItem ; (; ). inline . Definition at line 114 of file TDataMember.h. ◆ TOptionListItem() [2/2]. TOptionListItem::TOptionListItem ; (; TDataMember * ; m, . Long_t ; val, . Long_t ; valmask, . Long_t ; tglmask, . const char * ; name, . const char * ; label . ). Constructor. ; Definition at line 981 of file TDataMember.cxx. Member Function Documentation. ◆ Class(). static TClass * TOptionListItem::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TOptionListItem::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class",MatchSource.WIKI,doc/master/classTOptionListItem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOptionListItem.html
https://root.cern/doc/master/classTOptionListItem.html:3955,Security,hash,hash,3955," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTOptionListItem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOptionListItem.html
https://root.cern/doc/master/classTOrdCollection.html:9993,Availability,error,error,9993,"ar *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; v",MatchSource.WIKI,doc/master/classTOrdCollection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOrdCollection.html
https://root.cern/doc/master/classTOrdCollection.html:10082,Availability,error,error,10082,"leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTi",MatchSource.WIKI,doc/master/classTOrdCollection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOrdCollection.html
https://root.cern/doc/master/classTOrdCollection.html:10237,Availability,error,error,10237," whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is kn",MatchSource.WIKI,doc/master/classTOrdCollection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOrdCollection.html
https://root.cern/doc/master/classTOrdCollection.html:10534,Availability,error,error,10534,"bj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname""",MatchSource.WIKI,doc/master/classTOrdCollection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOrdCollection.html
https://root.cern/doc/master/classTOrdCollection.html:14011,Availability,error,error,14011," operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array ",MatchSource.WIKI,doc/master/classTOrdCollection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOrdCollection.html
https://root.cern/doc/master/classTOrdCollection.html:16540,Availability,error,error,16540,"ion ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TOrdCollection (const TOrdCollection &)=delete;  ; Bool_t IllegalIndex (const char *method, Int_t idx) const;  Return true when index out of bounds and print error. ;  ; void Init (Int_t capacity);  Initialize ordered collection. ;  ; Int_t LogIndex (Int_t idx) const;  ; Bool_t LowWaterMark () const;  ; void MoveGapTo (Int_t newGapStart);  Move gap to new position. ;  ; TOrdCollection & operator= (const TOrdCollection &)=delete;  ; Int_t PhysIndex (Int_t idx) const;  ; void SetCapacity (Int_t newCapacity);  Set/change ordered collection capacity. ;  . Private Attributes; Int_t fCapacity;  ; TObject ** fCont;  ; Int_t fGapSize;  ; Int_t fGapStart;  . Friends; class TOrdCollectionIter;  . Additional Inherited Members;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected ",MatchSource.WIKI,doc/master/classTOrdCollection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOrdCollection.html
https://root.cern/doc/master/classTOrdCollection.html:23235,Availability,error,error,23235,"dCollection::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 84 of file TOrdCollection.h. ◆ Delete(). void TOrdCollection::Delete ; (; Option_t * ; option = """"). overridevirtual . Remove all objects from the collection AND delete all heap based objects. ; Implements TCollection.; Definition at line 199 of file TOrdCollection.cxx. ◆ First(). TObject * TOrdCollection::First ; (; ); const. overridevirtual . Return the first object in the collection. ; Returns 0 when collection is empty. ; Implements TSeqCollection.; Definition at line 216 of file TOrdCollection.cxx. ◆ GetObjectRef(). TObject ** TOrdCollection::GetObjectRef ; (; const TObject * ; obj); const. overridevirtual . return address of pointer obj ; Implements TCollection.; Definition at line 224 of file TOrdCollection.cxx. ◆ IllegalIndex(). Bool_t TOrdCollection::IllegalIndex ; (; const char * ; method, . Int_t ; idx . ); const. private . Return true when index out of bounds and print error. ; Definition at line 242 of file TOrdCollection.cxx. ◆ IndexOf(). Int_t TOrdCollection::IndexOf ; (; const TObject * ; obj); const. overridevirtual . Return index of object in collection. ; Returns -1 when object not found. Uses member IsEqual() to find object. ; Reimplemented from TSeqCollection.; Definition at line 255 of file TOrdCollection.cxx. ◆ Init(). void TOrdCollection::Init ; (; Int_t ; capacity). private . Initialize ordered collection. ; Definition at line 267 of file TOrdCollection.cxx. ◆ IsA(). TClass * TOrdCollection::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TCollection.; Definition at line 84 of file TOrdCollection.h. ◆ Last(). TObject * TOrdCollection::Last ; (; ); const. overridevirtual . Return the last object in the collection. ; Returns 0 when collection is empty. ; Implements TSeqCollection.; Definition at line 234 of file TOrdCollection.cxx. ◆ LogIndex(). Int_t TOrdCollecti",MatchSource.WIKI,doc/master/classTOrdCollection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOrdCollection.html
https://root.cern/doc/master/classTOrdCollection.html:9999,Integrability,message,message,9999,"ar *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; v",MatchSource.WIKI,doc/master/classTOrdCollection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOrdCollection.html
https://root.cern/doc/master/classTOrdCollection.html:10540,Integrability,message,message,10540,"bj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname""",MatchSource.WIKI,doc/master/classTOrdCollection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOrdCollection.html
https://root.cern/doc/master/classTOrdCollection.html:11401,Integrability,message,message,11401,"ecute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *a",MatchSource.WIKI,doc/master/classTOrdCollection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOrdCollection.html
https://root.cern/doc/master/classTOrdCollection.html:14017,Integrability,message,message,14017," operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array ",MatchSource.WIKI,doc/master/classTOrdCollection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOrdCollection.html
https://root.cern/doc/master/classTOrdCollection.html:14390,Integrability,message,message,14390," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static ",MatchSource.WIKI,doc/master/classTOrdCollection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOrdCollection.html
https://root.cern/doc/master/classTOrdCollection.html:1002,Modifiability,inherit,inherited,1002,"ce Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TOrdCollection Class ReferenceCore ROOT classes » Containers. ; Ordered collection. ; An ordered collection has TList insertion semantics but is implemented using an array of TObject*'s. It uses less space than a TList (since there is no need for the prev and next pointers), but it is more costly to insert objects (since it has to create a gap by copying object pointers). TOrdCollection is better than TList when objects are only added at the end of the collection since no copying needs to be done. ; Definition at line 32 of file TOrdCollection.h. Public Types; enum  { kDefaultCapacity = 1; , kMinExpand = 8; , kShrinkFactor = 2; };  ; typedef TOrdCollectionIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TOrdCollection (Int_t capacity=kDefaultCapacity);  Create an ordered collection. ;  ;  ~TOrdCollection ();  Delete the collection. ;  ; void AddAfter (const TObject *after, TObject *obj) override;  Insert object after object after in the collection. ;  ; void AddAt (TObject *obj, Int_t idx) override;  Insert",MatchSource.WIKI,doc/master/classTOrdCollection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOrdCollection.html
https://root.cern/doc/master/classTOrdCollection.html:1109,Modifiability,inherit,inherited,1109,"ce Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TOrdCollection Class ReferenceCore ROOT classes » Containers. ; Ordered collection. ; An ordered collection has TList insertion semantics but is implemented using an array of TObject*'s. It uses less space than a TList (since there is no need for the prev and next pointers), but it is more costly to insert objects (since it has to create a gap by copying object pointers). TOrdCollection is better than TList when objects are only added at the end of the collection since no copying needs to be done. ; Definition at line 32 of file TOrdCollection.h. Public Types; enum  { kDefaultCapacity = 1; , kMinExpand = 8; , kShrinkFactor = 2; };  ; typedef TOrdCollectionIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TOrdCollection (Int_t capacity=kDefaultCapacity);  Create an ordered collection. ;  ;  ~TOrdCollection ();  Delete the collection. ;  ; void AddAfter (const TObject *after, TObject *obj) override;  Insert object after object after in the collection. ;  ; void AddAt (TObject *obj, Int_t idx) override;  Insert",MatchSource.WIKI,doc/master/classTOrdCollection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOrdCollection.html
https://root.cern/doc/master/classTOrdCollection.html:4033,Modifiability,inherit,inherited,4033," the collection. ;  ; TObject ** GetObjectRef (const TObject *obj) const override;  return address of pointer obj ;  ; Int_t IndexOf (const TObject *obj) const override;  Return index of object in collection. ;  ; TClass * IsA () const override;  ; TObject * Last () const override;  Return the last object in the collection. ;  ; TIterator * MakeIterator (Bool_t dir=kIterForward) const override;  Return an ordered collection iterator. ;  ; void PutAt (TObject *obj, Int_t idx);  Put object at index idx. Overwrites what was at idx before. ;  ; TObject * Remove (TObject *obj) override;  Remove object from collection. ;  ; TObject * RemoveAt (Int_t idx) override;  Remove object at index idx. ;  ; void Sort ();  If objects in collection are sortable (i.e. ;  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSeqCollection; virtual ~TSeqCollection ();  ; void Add (TObject *obj) override;  ; virtual Int_t GetLast () const;  Returns index of last object in collection. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual void RemoveBefore (TObject *before);  ; virtual void RemoveFirst ();  ; virtual void RemoveLast ();  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnSort ();  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this collection. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t Ass",MatchSource.WIKI,doc/master/classTOrdCollection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOrdCollection.html
https://root.cern/doc/master/classTOrdCollection.html:4798,Modifiability,inherit,inherited,4798,"d Sort ();  If objects in collection are sortable (i.e. ;  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSeqCollection; virtual ~TSeqCollection ();  ; void Add (TObject *obj) override;  ; virtual Int_t GetLast () const;  Returns index of last object in collection. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual void RemoveBefore (TObject *before);  ; virtual void RemoveFirst ();  ; virtual void RemoveLast ();  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnSort ();  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this collection. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIte",MatchSource.WIKI,doc/master/classTOrdCollection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOrdCollection.html
https://root.cern/doc/master/classTOrdCollection.html:5144,Modifiability,inherit,inherit,5144,"t *obj) override;  ; virtual Int_t GetLast () const;  Returns index of last object in collection. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual void RemoveBefore (TObject *before);  ; virtual void RemoveFirst ();  ; virtual void RemoveLast ();  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnSort ();  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this collection. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIter end () const;  ; TObject * FindObject (const char *name) const override;  Find an object in this collection using its name. ;  ; TObject * FindObject (const TObject *obj) const override;  Find an object in this collection using the object's IsEqual() member function. ;  ; virtual Int_t GetEntries () const;  ; const char * GetName (",MatchSource.WIKI,doc/master/classTOrdCollection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOrdCollection.html
https://root.cern/doc/master/classTOrdCollection.html:8793,Modifiability,inherit,inherited,8793," override;  Remove object from this collection and recursively remove the object from all other objects (and collections). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool UseRWLock (Bool_t enable=true);  Set this collection to use a RW lock upon access, making it thread safe. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *optio",MatchSource.WIKI,doc/master/classTOrdCollection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOrdCollection.html
https://root.cern/doc/master/classTOrdCollection.html:9698,Modifiability,inherit,inheritance,9698," bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () con",MatchSource.WIKI,doc/master/classTOrdCollection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOrdCollection.html
https://root.cern/doc/master/classTOrdCollection.html:11499,Modifiability,inherit,inherits,11499,"const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method to declare a ",MatchSource.WIKI,doc/master/classTOrdCollection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOrdCollection.html
https://root.cern/doc/master/classTOrdCollection.html:11616,Modifiability,inherit,inherits,11616,"n () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method to declare a method obsolete. ;  ; void operator delete (void *ptr);  Operator delete. ;  ; void operator delete (void *ptr, void",MatchSource.WIKI,doc/master/classTOrdCollection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOrdCollection.html
https://root.cern/doc/master/classTOrdCollection.html:14623,Modifiability,inherit,inherited,14623,"nset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be c",MatchSource.WIKI,doc/master/classTOrdCollection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOrdCollection.html
https://root.cern/doc/master/classTOrdCollection.html:15318,Modifiability,inherit,inherited,15318,"ing message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TOrdC",MatchSource.WIKI,doc/master/classTOrdCollection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOrdCollection.html
https://root.cern/doc/master/classTOrdCollection.html:15869,Modifiability,inherit,inherited,15869,"nt_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TOrdCollection (const TOrdCollection &)=delete;  ; Bool_t IllegalIndex (const char *method, Int_t idx) const;  Return true when index out of bounds and print error. ;  ; void Init (Int_t capacity);  Initialize ordered collection. ;  ; Int_t LogIndex (Int_t idx) const;  ; Bool_t LowWaterMark () const;  ; void MoveGapTo (Int_t newGapStart);  Move gap to new position. ;  ; TOrdCollection & operator= (const TOrdCollection &)=delete;  ; Int_t PhysIndex (Int_t idx) const;  ; void SetCapacity (Int_t newCapacity);  Set/change ordered collection capacity. ;  . Private Attributes; Int_t fCapa",MatchSource.WIKI,doc/master/classTOrdCollection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOrdCollection.html
https://root.cern/doc/master/classTOrdCollection.html:17125,Modifiability,inherit,inherited,17125,"const TOrdCollection &)=delete;  ; Bool_t IllegalIndex (const char *method, Int_t idx) const;  Return true when index out of bounds and print error. ;  ; void Init (Int_t capacity);  Initialize ordered collection. ;  ; Int_t LogIndex (Int_t idx) const;  ; Bool_t LowWaterMark () const;  ; void MoveGapTo (Int_t newGapStart);  Move gap to new position. ;  ; TOrdCollection & operator= (const TOrdCollection &)=delete;  ; Int_t PhysIndex (Int_t idx) const;  ; void SetCapacity (Int_t newCapacity);  Set/change ordered collection capacity. ;  . Private Attributes; Int_t fCapacity;  ; TObject ** fCont;  ; Int_t fGapSize;  ; Int_t fGapStart;  . Friends; class TOrdCollectionIter;  . Additional Inherited Members;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TOrdCollection.h>. Inheritance diagram for TOrdCollection:. This browser is",MatchSource.WIKI,doc/master/classTOrdCollection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOrdCollection.html
https://root.cern/doc/master/classTOrdCollection.html:17258,Modifiability,inherit,inherited,17258,"const TOrdCollection &)=delete;  ; Bool_t IllegalIndex (const char *method, Int_t idx) const;  Return true when index out of bounds and print error. ;  ; void Init (Int_t capacity);  Initialize ordered collection. ;  ; Int_t LogIndex (Int_t idx) const;  ; Bool_t LowWaterMark () const;  ; void MoveGapTo (Int_t newGapStart);  Move gap to new position. ;  ; TOrdCollection & operator= (const TOrdCollection &)=delete;  ; Int_t PhysIndex (Int_t idx) const;  ; void SetCapacity (Int_t newCapacity);  Set/change ordered collection capacity. ;  . Private Attributes; Int_t fCapacity;  ; TObject ** fCont;  ; Int_t fGapSize;  ; Int_t fGapStart;  . Friends; class TOrdCollectionIter;  . Additional Inherited Members;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TOrdCollection.h>. Inheritance diagram for TOrdCollection:. This browser is",MatchSource.WIKI,doc/master/classTOrdCollection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOrdCollection.html
https://root.cern/doc/master/classTOrdCollection.html:17357,Modifiability,inherit,inherited,17357,"const TOrdCollection &)=delete;  ; Bool_t IllegalIndex (const char *method, Int_t idx) const;  Return true when index out of bounds and print error. ;  ; void Init (Int_t capacity);  Initialize ordered collection. ;  ; Int_t LogIndex (Int_t idx) const;  ; Bool_t LowWaterMark () const;  ; void MoveGapTo (Int_t newGapStart);  Move gap to new position. ;  ; TOrdCollection & operator= (const TOrdCollection &)=delete;  ; Int_t PhysIndex (Int_t idx) const;  ; void SetCapacity (Int_t newCapacity);  Set/change ordered collection capacity. ;  . Private Attributes; Int_t fCapacity;  ; TObject ** fCont;  ; Int_t fGapSize;  ; Int_t fGapStart;  . Friends; class TOrdCollectionIter;  . Additional Inherited Members;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TOrdCollection.h>. Inheritance diagram for TOrdCollection:. This browser is",MatchSource.WIKI,doc/master/classTOrdCollection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOrdCollection.html
https://root.cern/doc/master/classTOrdCollection.html:17467,Modifiability,inherit,inherited,17467,"const TOrdCollection &)=delete;  ; Bool_t IllegalIndex (const char *method, Int_t idx) const;  Return true when index out of bounds and print error. ;  ; void Init (Int_t capacity);  Initialize ordered collection. ;  ; Int_t LogIndex (Int_t idx) const;  ; Bool_t LowWaterMark () const;  ; void MoveGapTo (Int_t newGapStart);  Move gap to new position. ;  ; TOrdCollection & operator= (const TOrdCollection &)=delete;  ; Int_t PhysIndex (Int_t idx) const;  ; void SetCapacity (Int_t newCapacity);  Set/change ordered collection capacity. ;  . Private Attributes; Int_t fCapacity;  ; TObject ** fCont;  ; Int_t fGapSize;  ; Int_t fGapStart;  . Friends; class TOrdCollectionIter;  . Additional Inherited Members;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TOrdCollection.h>. Inheritance diagram for TOrdCollection:. This browser is",MatchSource.WIKI,doc/master/classTOrdCollection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOrdCollection.html
https://root.cern/doc/master/classTOrdCollection.html:17975,Modifiability,inherit,inherited,17975,";  . Friends; class TOrdCollectionIter;  . Additional Inherited Members;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TOrdCollection.h>. Inheritance diagram for TOrdCollection:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ Iterator_t. typedef TOrdCollectionIter TOrdCollection::Iterator_t. Definition at line 56 of file TOrdCollection.h. Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkDefaultCapacity ; kMinExpand ; kShrinkFactor . Definition at line 54 of file TOrdCollection.h. Constructor & Destructor Documentation. ◆ TOrdCollection() [1/2]. TOrdCollection::TOrdCollection ; (; const TOrdCollection & ; ). privatedelete . ◆ TOrdCollection() [2/2]. TOrdCollection::TOrdCollection ; (; Int_t ; capacity = kDefaul",MatchSource.WIKI,doc/master/classTOrdCollection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOrdCollection.html
https://root.cern/doc/master/classTOrdCollection.html:18180,Modifiability,inherit,inherited,18180,"L << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TOrdCollection.h>. Inheritance diagram for TOrdCollection:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ Iterator_t. typedef TOrdCollectionIter TOrdCollection::Iterator_t. Definition at line 56 of file TOrdCollection.h. Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkDefaultCapacity ; kMinExpand ; kShrinkFactor . Definition at line 54 of file TOrdCollection.h. Constructor & Destructor Documentation. ◆ TOrdCollection() [1/2]. TOrdCollection::TOrdCollection ; (; const TOrdCollection & ; ). privatedelete . ◆ TOrdCollection() [2/2]. TOrdCollection::TOrdCollection ; (; Int_t ; capacity = kDefaultCapacity). Create an ordered collection. ; Definition at line 32 of file TOrdCollection.cxx. ◆ ~TOrdCollection(). TOrdCollection::~TOrdCollection ; (; ). Delete the collection. ; Object",MatchSource.WIKI,doc/master/classTOrdCollection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOrdCollection.html
https://root.cern/doc/master/classTOrdCollection.html:18252,Modifiability,inherit,inherited,18252,"L << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TOrdCollection.h>. Inheritance diagram for TOrdCollection:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ Iterator_t. typedef TOrdCollectionIter TOrdCollection::Iterator_t. Definition at line 56 of file TOrdCollection.h. Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkDefaultCapacity ; kMinExpand ; kShrinkFactor . Definition at line 54 of file TOrdCollection.h. Constructor & Destructor Documentation. ◆ TOrdCollection() [1/2]. TOrdCollection::TOrdCollection ; (; const TOrdCollection & ; ). privatedelete . ◆ TOrdCollection() [2/2]. TOrdCollection::TOrdCollection ; (; Int_t ; capacity = kDefaultCapacity). Create an ordered collection. ; Definition at line 32 of file TOrdCollection.cxx. ◆ ~TOrdCollection(). TOrdCollection::~TOrdCollection ; (; ). Delete the collection. ; Object",MatchSource.WIKI,doc/master/classTOrdCollection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOrdCollection.html
https://root.cern/doc/master/classTOrdCollection.html:17683,Performance,perform,perform,17683,"const TOrdCollection &)=delete;  ; Bool_t IllegalIndex (const char *method, Int_t idx) const;  Return true when index out of bounds and print error. ;  ; void Init (Int_t capacity);  Initialize ordered collection. ;  ; Int_t LogIndex (Int_t idx) const;  ; Bool_t LowWaterMark () const;  ; void MoveGapTo (Int_t newGapStart);  Move gap to new position. ;  ; TOrdCollection & operator= (const TOrdCollection &)=delete;  ; Int_t PhysIndex (Int_t idx) const;  ; void SetCapacity (Int_t newCapacity);  Set/change ordered collection capacity. ;  . Private Attributes; Int_t fCapacity;  ; TObject ** fCont;  ; Int_t fGapSize;  ; Int_t fGapStart;  . Friends; class TOrdCollectionIter;  . Additional Inherited Members;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TOrdCollection.h>. Inheritance diagram for TOrdCollection:. This browser is",MatchSource.WIKI,doc/master/classTOrdCollection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOrdCollection.html
https://root.cern/doc/master/classTOrdCollection.html:8499,Safety,safe,safe,8499,"rint (Option_t *option, Int_t recurse) const;  Print the collection header and its elements. ;  ; virtual void Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void RecursiveRemove (TObject *obj) override;  Remove object from this collection and recursively remove the object from all other objects (and collections). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool UseRWLock (Bool_t enable=true);  Set this collection to use a RW lock upon access, making it thread safe. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () co",MatchSource.WIKI,doc/master/classTOrdCollection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOrdCollection.html
https://root.cern/doc/master/classTOrdCollection.html:6389,Security,hash,hash,6389,"one of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIter end () const;  ; TObject * FindObject (const char *name) const override;  Find an object in this collection using its name. ;  ; TObject * FindObject (const TObject *obj) const override;  Find an object in this collection using the object's IsEqual() member function. ;  ; virtual Int_t GetEntries () const;  ; const char * GetName () const override;  Return name of this collection. ;  ; virtual Int_t GetSize () const;  Return the capacity of the collection, i.e. ;  ; virtual Int_t GrowBy (Int_t delta) const;  Increase the collection's capacity by delta slots. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsArgNull (const char *where, const TObject *obj) const;  Returns true if object is a null pointer. ;  ; virtual Bool_t IsEmpty () const;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; Bool_t IsOwner () const;  ; Bool_t IsSortable () const override;  ; R__ALWAYS_INLINE Bool_t IsUsingRWLock () const;  ; void ls (Option_t *option="""") const override;  List (ls) all objects in this collection. ;  ; virtual TIterator * MakeReverseIterator () const;  ; Bool_t Notify () override;  'Notify' all objects in this collection. ;  ; TObject * operator() (const char *name) const;  Find an object in this collection by name. ;  ; void Paint (Option_t *option="""") override;  Paint all objects in this collection. ;  ; virtual void Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the ",MatchSource.WIKI,doc/master/classTOrdCollection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOrdCollection.html
https://root.cern/doc/master/classTOrdCollection.html:8134,Security,access,accessible,8134," object in this collection by name. ;  ; void Paint (Option_t *option="""") override;  Paint all objects in this collection. ;  ; virtual void Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the wildcard. ;  ; virtual void Print (Option_t *option, Int_t recurse) const;  Print the collection header and its elements. ;  ; virtual void Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void RecursiveRemove (TObject *obj) override;  Remove object from this collection and recursively remove the object from all other objects (and collections). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool UseRWLock (Bool_t enable=true);  Set this collection to use a RW lock upon access, making it thread safe. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract.",MatchSource.WIKI,doc/master/classTOrdCollection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOrdCollection.html
https://root.cern/doc/master/classTOrdCollection.html:8474,Security,access,access,8474,"rint (Option_t *option, Int_t recurse) const;  Print the collection header and its elements. ;  ; virtual void Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void RecursiveRemove (TObject *obj) override;  Remove object from this collection and recursively remove the object from all other objects (and collections). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool UseRWLock (Bool_t enable=true);  Set this collection to use a RW lock upon access, making it thread safe. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () co",MatchSource.WIKI,doc/master/classTOrdCollection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOrdCollection.html
https://root.cern/doc/master/classTOrdCollection.html:15733,Security,access,accessible,15733,"s_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TOrdCollection (const TOrdCollection &)=delete;  ; Bool_t IllegalIndex (const char *method, Int_t idx) const;  Return true when index out of bounds and print error. ;  ; void Init (Int_t capacity);  Initialize ordered collection. ;  ; Int_t LogIndex (Int_t idx) const;  ; Bool_t LowWaterMark () const;  ; void MoveGapTo (Int_t",MatchSource.WIKI,doc/master/classTOrdCollection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOrdCollection.html
https://root.cern/doc/master/classTOutputListSelectorDataMap.html:3095,Availability,error,error,3095,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTOutputListSelectorDataMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOutputListSelectorDataMap.html
https://root.cern/doc/master/classTOutputListSelectorDataMap.html:3184,Availability,error,error,3184,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTOutputListSelectorDataMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOutputListSelectorDataMap.html
https://root.cern/doc/master/classTOutputListSelectorDataMap.html:3339,Availability,error,error,3339,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the uniqu",MatchSource.WIKI,doc/master/classTOutputListSelectorDataMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOutputListSelectorDataMap.html
https://root.cern/doc/master/classTOutputListSelectorDataMap.html:3636,Availability,error,error,3636,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have a",MatchSource.WIKI,doc/master/classTOutputListSelectorDataMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOutputListSelectorDataMap.html
https://root.cern/doc/master/classTOutputListSelectorDataMap.html:8131,Availability,error,error,8131," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TOutputListSelectorDataMap * FindInList (TCollection *coll);  Find a TOutputListSelectorDataMap in a collection. ;  ;  Static Public Member F",MatchSource.WIKI,doc/master/classTOutputListSelectorDataMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOutputListSelectorDataMap.html
https://root.cern/doc/master/classTOutputListSelectorDataMap.html:3101,Integrability,message,message,3101,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTOutputListSelectorDataMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOutputListSelectorDataMap.html
https://root.cern/doc/master/classTOutputListSelectorDataMap.html:3642,Integrability,message,message,3642,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have a",MatchSource.WIKI,doc/master/classTOutputListSelectorDataMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOutputListSelectorDataMap.html
https://root.cern/doc/master/classTOutputListSelectorDataMap.html:4775,Integrability,message,message,4775,"ct * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTOutputListSelectorDataMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOutputListSelectorDataMap.html
https://root.cern/doc/master/classTOutputListSelectorDataMap.html:8137,Integrability,message,message,8137," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TOutputListSelectorDataMap * FindInList (TCollection *coll);  Find a TOutputListSelectorDataMap in a collection. ;  ;  Static Public Member F",MatchSource.WIKI,doc/master/classTOutputListSelectorDataMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOutputListSelectorDataMap.html
https://root.cern/doc/master/classTOutputListSelectorDataMap.html:8510,Integrability,message,message,8510," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TOutputListSelectorDataMap * FindInList (TCollection *coll);  Find a TOutputListSelectorDataMap in a collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destruc",MatchSource.WIKI,doc/master/classTOutputListSelectorDataMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOutputListSelectorDataMap.html
https://root.cern/doc/master/classTOutputListSelectorDataMap.html:1334,Modifiability,inherit,inherited,1334,"F kernel Libraries. ; Set the selector's data members to the corresponding elements of the output list. ; Definition at line 30 of file TOutputListSelectorDataMap.h. Public Member Functions;  TOutputListSelectorDataMap (TSelector *sel=0);  Create a mapper between output list items and TSelector data members. ;  ;  ~TOutputListSelectorDataMap () override;  ; TCollection * GetMap () const;  ; const char * GetName () const override;  Return static name for TOutputListSelectorDataMap objects. ;  ; Bool_t Init (TSelector *sel);  Initialize the data member <-> output list mapping from a selector. ;  ; TClass * IsA () const override;  ; Bool_t Merge (TObject *obj);  Merge another TOutputListSelectorDataMap object, check consistency. ;  ; Bool_t SetDataMembers (TSelector *sel) const;  Given an output list, set the data members of a TSelector. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTOutputListSelectorDataMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOutputListSelectorDataMap.html
https://root.cern/doc/master/classTOutputListSelectorDataMap.html:2731,Modifiability,inherit,inheritance,2731,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTOutputListSelectorDataMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOutputListSelectorDataMap.html
https://root.cern/doc/master/classTOutputListSelectorDataMap.html:4873,Modifiability,inherit,inherits,4873,"asses. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTOutputListSelectorDataMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOutputListSelectorDataMap.html
https://root.cern/doc/master/classTOutputListSelectorDataMap.html:4990,Modifiability,inherit,inherits,4990," ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTOutputListSelectorDataMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOutputListSelectorDataMap.html
https://root.cern/doc/master/classTOutputListSelectorDataMap.html:9136,Modifiability,inherit,inherited,9136," ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TOutputListSelectorDataMap * FindInList (TCollection *coll);  Find a TOutputListSelectorDataMap in a collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TCollection * fMap;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (",MatchSource.WIKI,doc/master/classTOutputListSelectorDataMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOutputListSelectorDataMap.html
https://root.cern/doc/master/classTOutputListSelectorDataMap.html:9709,Modifiability,inherit,inherited,9709,"rent directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TOutputListSelectorDataMap * FindInList (TCollection *coll);  Find a TOutputListSelectorDataMap in a collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TCollection * fMap;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TOutputListSelectorDataMap.h>. Inheritance diagram for TOutputListSelectorDataMap:. This browser is not able to show SVG: try Fire",MatchSource.WIKI,doc/master/classTOutputListSelectorDataMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOutputListSelectorDataMap.html
https://root.cern/doc/master/classTOutputListSelectorDataMap.html:10350,Modifiability,inherit,inherited,10350," SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TCollection * fMap;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TOutputListSelectorDataMap.h>. Inheritance diagram for TOutputListSelectorDataMap:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TOutputListSelectorDataMap(). TOutputListSelectorDataMap::TOutputListSelectorDataMap ; (; TSelector * ; sel = 0). Create a mapper between output list items and TSelector data members. ; Definition at line 190 of file TOutputListSelectorDataMap.cxx. ◆ ~TOutputListSelectorDataMap(). TOutputListSelectorDataMap::~TOutputListSelectorDataMap ; (; ). inlineoverride . Definition at line 34 of file TOutputListSelectorDataMap.h. Member Function Documentation. ◆ Class(). static TClass * TOutputListSelectorDataMap::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const ch",MatchSource.WIKI,doc/master/classTOutputListSelectorDataMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOutputListSelectorDataMap.html
https://root.cern/doc/master/classTOutputListSelectorDataMap.html:10449,Modifiability,inherit,inherited,10449," SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TCollection * fMap;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TOutputListSelectorDataMap.h>. Inheritance diagram for TOutputListSelectorDataMap:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TOutputListSelectorDataMap(). TOutputListSelectorDataMap::TOutputListSelectorDataMap ; (; TSelector * ; sel = 0). Create a mapper between output list items and TSelector data members. ; Definition at line 190 of file TOutputListSelectorDataMap.cxx. ◆ ~TOutputListSelectorDataMap(). TOutputListSelectorDataMap::~TOutputListSelectorDataMap ; (; ). inlineoverride . Definition at line 34 of file TOutputListSelectorDataMap.h. Member Function Documentation. ◆ Class(). static TClass * TOutputListSelectorDataMap::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const ch",MatchSource.WIKI,doc/master/classTOutputListSelectorDataMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOutputListSelectorDataMap.html
https://root.cern/doc/master/classTOutputListSelectorDataMap.html:4504,Security,hash,hash,4504,"xecute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTOutputListSelectorDataMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTOutputListSelectorDataMap.html
https://root.cern/doc/master/classTPackageDescription.html:2399,Availability,error,error,2399,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTPackageDescription.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackageDescription.html
https://root.cern/doc/master/classTPackageDescription.html:2488,Availability,error,error,2488,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTPackageDescription.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackageDescription.html
https://root.cern/doc/master/classTPackageDescription.html:2643,Availability,error,error,2643,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the uniqu",MatchSource.WIKI,doc/master/classTPackageDescription.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackageDescription.html
https://root.cern/doc/master/classTPackageDescription.html:2940,Availability,error,error,2940,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have a",MatchSource.WIKI,doc/master/classTPackageDescription.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackageDescription.html
https://root.cern/doc/master/classTPackageDescription.html:7435,Availability,error,error,7435," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTPackageDescription.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackageDescription.html
https://root.cern/doc/master/classTPackageDescription.html:2405,Integrability,message,message,2405,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTPackageDescription.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackageDescription.html
https://root.cern/doc/master/classTPackageDescription.html:2946,Integrability,message,message,2946,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have a",MatchSource.WIKI,doc/master/classTPackageDescription.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackageDescription.html
https://root.cern/doc/master/classTPackageDescription.html:4079,Integrability,message,message,4079,"ct * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTPackageDescription.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackageDescription.html
https://root.cern/doc/master/classTPackageDescription.html:7441,Integrability,message,message,7441," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTPackageDescription.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackageDescription.html
https://root.cern/doc/master/classTPackageDescription.html:7814,Integrability,message,message,7814," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Publi",MatchSource.WIKI,doc/master/classTPackageDescription.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackageDescription.html
https://root.cern/doc/master/classTPackageDescription.html:638,Modifiability,inherit,inherited,638,". ROOT: TPackageDescription Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; TPackageDescription Class Reference. . Definition at line 158 of file TSessionViewer.h. Public Member Functions; const char * GetName () const override;  Returns name of object. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual voi",MatchSource.WIKI,doc/master/classTPackageDescription.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackageDescription.html
https://root.cern/doc/master/classTPackageDescription.html:2035,Modifiability,inherit,inheritance,2035,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTPackageDescription.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackageDescription.html
https://root.cern/doc/master/classTPackageDescription.html:4177,Modifiability,inherit,inherits,4177,"asses. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTPackageDescription.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackageDescription.html
https://root.cern/doc/master/classTPackageDescription.html:4294,Modifiability,inherit,inherits,4294," ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTPackageDescription.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackageDescription.html
https://root.cern/doc/master/classTPackageDescription.html:8315,Modifiability,inherit,inherited,8315,"reamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; Bool_t fEnabled;  ; Int_t fId;  ; TString fName;  ; TString fPathName;  ; Bool_t fUploaded;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatu",MatchSource.WIKI,doc/master/classTPackageDescription.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackageDescription.html
https://root.cern/doc/master/classTPackageDescription.html:8959,Modifiability,inherit,inherited,8959," Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; Bool_t fEnabled;  ; Int_t fId;  ; TString fName;  ; TString fPathName;  ; Bool_t fUploaded;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TSessionViewer.h>. Inheritance diagram for TPackageDescription:. This browser is not able to show SVG: try Firefox, Chrome, Safari",MatchSource.WIKI,doc/master/classTPackageDescription.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackageDescription.html
https://root.cern/doc/master/classTPackageDescription.html:9600,Modifiability,inherit,inherited,9600,"etObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; Bool_t fEnabled;  ; Int_t fId;  ; TString fName;  ; TString fPathName;  ; Bool_t fUploaded;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TSessionViewer.h>. Inheritance diagram for TPackageDescription:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Function Documentation. ◆ Class(). static TClass * TPackageDescription::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TPackageDescription::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TPackageDescription::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 169 of file TSessionViewer.h. ◆ DeclFileName(). static const char * TPackageDescription::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 169 of file TSessionViewer.h. ◆ GetName(). ",MatchSource.WIKI,doc/master/classTPackageDescription.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackageDescription.html
https://root.cern/doc/master/classTPackageDescription.html:9699,Modifiability,inherit,inherited,9699,"etObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; Bool_t fEnabled;  ; Int_t fId;  ; TString fName;  ; TString fPathName;  ; Bool_t fUploaded;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TSessionViewer.h>. Inheritance diagram for TPackageDescription:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Function Documentation. ◆ Class(). static TClass * TPackageDescription::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TPackageDescription::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TPackageDescription::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 169 of file TSessionViewer.h. ◆ DeclFileName(). static const char * TPackageDescription::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 169 of file TSessionViewer.h. ◆ GetName(). ",MatchSource.WIKI,doc/master/classTPackageDescription.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackageDescription.html
https://root.cern/doc/master/classTPackageDescription.html:3808,Security,hash,hash,3808,"xecute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTPackageDescription.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackageDescription.html
https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileNode.html:3257,Availability,error,error,3257,"  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTPacketizerAdaptive_1_1TFileNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileNode.html
https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileNode.html:3346,Availability,error,error,3346,"gs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTPacketizerAdaptive_1_1TFileNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileNode.html
https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileNode.html:3501,Availability,error,error,3501,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the uniqu",MatchSource.WIKI,doc/master/classTPacketizerAdaptive_1_1TFileNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileNode.html
https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileNode.html:3798,Availability,error,error,3798,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have a",MatchSource.WIKI,doc/master/classTPacketizerAdaptive_1_1TFileNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileNode.html
https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileNode.html:8243,Availability,error,error,8243,"ead (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Attributes; TObject * fActFileNext;  ; TList * fActFiles;  ; Long64_t fEvents;  ; Int_t fExtSlaveCnt;  ; TList * fFiles;  ; TSortedList * fFilesToProcess;  ; Int_t fMySlaveCnt;  ; TString fNodeName;  ; Long64_t fProcessed;  ; Int_t fRunSlaveCnt;  ; Int_t fStrategy;  ; TObject * fUnAllocFileNext;  . Additional Inherited Member",MatchSource.WIKI,doc/master/classTPacketizerAdaptive_1_1TFileNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileNode.html
https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileNode.html:3263,Integrability,message,message,3263,"  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTPacketizerAdaptive_1_1TFileNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileNode.html
https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileNode.html:3804,Integrability,message,message,3804,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have a",MatchSource.WIKI,doc/master/classTPacketizerAdaptive_1_1TFileNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileNode.html
https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileNode.html:4937,Integrability,message,message,4937,"ct * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to ",MatchSource.WIKI,doc/master/classTPacketizerAdaptive_1_1TFileNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileNode.html
https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileNode.html:8249,Integrability,message,message,8249,"ead (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Attributes; TObject * fActFileNext;  ; TList * fActFiles;  ; Long64_t fEvents;  ; Int_t fExtSlaveCnt;  ; TList * fFiles;  ; TSortedList * fFilesToProcess;  ; Int_t fMySlaveCnt;  ; TString fNodeName;  ; Long64_t fProcessed;  ; Int_t fRunSlaveCnt;  ; Int_t fStrategy;  ; TObject * fUnAllocFileNext;  . Additional Inherited Member",MatchSource.WIKI,doc/master/classTPacketizerAdaptive_1_1TFileNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileNode.html
https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileNode.html:8622,Integrability,message,message,8622,"rimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Attributes; TObject * fActFileNext;  ; TList * fActFiles;  ; Long64_t fEvents;  ; Int_t fExtSlaveCnt;  ; TList * fFiles;  ; TSortedList * fFilesToProcess;  ; Int_t fMySlaveCnt;  ; TString fNodeName;  ; Long64_t fProcessed;  ; Int_t fRunSlaveCnt;  ; Int_t fStrategy;  ; TObject * fUnAllocFileNext;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enu",MatchSource.WIKI,doc/master/classTPacketizerAdaptive_1_1TFileNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileNode.html
https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileNode.html:1577,Modifiability,inherit,inherited,1577,"  Compare abstract method. ;  ; void DecExtSlaveCnt (const char *slave);  ; void DecreaseProcessed (Long64_t nEvents);  ; void DecRunSlaveCnt ();  ; Long64_t GetEventsLeftPerSlave () const;  ; Int_t GetExtSlaveCnt () const;  ; Int_t GetMySlaveCnt () const;  ; const char * GetName () const override;  Returns name of object. ;  ; Long64_t GetNEvents () const;  ; TFileStat * GetNextActive ();  ; TFileStat * GetNextUnAlloc ();  ; Int_t GetNumberOfActiveFiles () const;  ; Int_t GetNumberOfFiles ();  ; Long64_t GetProcessed () const;  ; Int_t GetRunSlaveCnt () const;  ; Int_t GetSlaveCnt () const;  ; void IncEvents (Long64_t nEvents);  ; void IncExtSlaveCnt (const char *slave);  ; void IncMySlaveCnt ();  ; void IncProcessed (Long64_t nEvents);  ; void IncRunSlaveCnt ();  ; Bool_t IsSortable () const override;  ; void Print (Option_t *=0) const override;  This method must be overridden when a class wants to print itself. ;  ; void RemoveActive (TFileStat *file);  ; void Reset ();  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual void Copy (TObject &object) const;  Copy",MatchSource.WIKI,doc/master/classTPacketizerAdaptive_1_1TFileNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileNode.html
https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileNode.html:2893,Modifiability,inherit,inheritance,2893,"virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTPacketizerAdaptive_1_1TFileNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileNode.html
https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileNode.html:5035,Modifiability,inherit,inherits,5035,"asses. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a deriv",MatchSource.WIKI,doc/master/classTPacketizerAdaptive_1_1TFileNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileNode.html
https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileNode.html:5152,Modifiability,inherit,inherits,5152," ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent",MatchSource.WIKI,doc/master/classTPacketizerAdaptive_1_1TFileNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileNode.html
https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileNode.html:9256,Modifiability,inherit,inherited,9256,"t_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Attributes; TObject * fActFileNext;  ; TList * fActFiles;  ; Long64_t fEvents;  ; Int_t fExtSlaveCnt;  ; TList * fFiles;  ; TSortedList * fFilesToProcess;  ; Int_t fMySlaveCnt;  ; TString fNodeName;  ; Long64_t fProcessed;  ; Int_t fRunSlaveCnt;  ; Int_t fStrategy;  ; TObject * fUnAllocFileNext;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObject",MatchSource.WIKI,doc/master/classTPacketizerAdaptive_1_1TFileNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileNode.html
https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileNode.html:9912,Modifiability,inherit,inherited,9912,"  ; TList * fFiles;  ; TSortedList * fFilesToProcess;  ; Int_t fMySlaveCnt;  ; TString fNodeName;  ; Long64_t fProcessed;  ; Int_t fRunSlaveCnt;  ; Int_t fStrategy;  ; TObject * fUnAllocFileNext;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Inheritance diagram for TPacketizerAdaptive::TFileNode:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TFileNode(). TPacketizerAdaptive::TFileNode::TFileNode ; (; const char * ; name, . Int_t ; strategy, . TSortedList * ; fi",MatchSource.WIKI,doc/master/classTPacketizerAdaptive_1_1TFileNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileNode.html
https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileNode.html:10415,Modifiability,inherit,inherited,10415," 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Inheritance diagram for TPacketizerAdaptive::TFileNode:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TFileNode(). TPacketizerAdaptive::TFileNode::TFileNode ; (; const char * ; name, . Int_t ; strategy, . TSortedList * ; files . ). Definition at line 319 of file TPacketizerAdaptive.cxx. ◆ ~TFileNode(). TPacketizerAdaptive::TFileNode::~TFileNode ; (; ). inlineoverride . Definition at line 156 of file TPacketizerAdaptive.cxx. Member Function Documentation. ◆ Add(). void TPacketizerAdaptive::TFileNode::Add ; (; TDSetElement * ; elem, . Bool_t ; tolist . ). inline . Definition at line 218 of file TPacketizerAdaptive.cxx. ◆ Compare(). Int_t TPacketizerAdaptive::TFileNode::Compare ; (; const TObject * ; obj); const. inlineoverridevirtua",MatchSource.WIKI,doc/master/classTPacketizerAdaptive_1_1TFileNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileNode.html
https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileNode.html:10514,Modifiability,inherit,inherited,10514," 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Inheritance diagram for TPacketizerAdaptive::TFileNode:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TFileNode(). TPacketizerAdaptive::TFileNode::TFileNode ; (; const char * ; name, . Int_t ; strategy, . TSortedList * ; files . ). Definition at line 319 of file TPacketizerAdaptive.cxx. ◆ ~TFileNode(). TPacketizerAdaptive::TFileNode::~TFileNode ; (; ). inlineoverride . Definition at line 156 of file TPacketizerAdaptive.cxx. Member Function Documentation. ◆ Add(). void TPacketizerAdaptive::TFileNode::Add ; (; TDSetElement * ; elem, . Bool_t ; tolist . ). inline . Definition at line 218 of file TPacketizerAdaptive.cxx. ◆ Compare(). Int_t TPacketizerAdaptive::TFileNode::Compare ; (; const TObject * ; obj); const. inlineoverridevirtua",MatchSource.WIKI,doc/master/classTPacketizerAdaptive_1_1TFileNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileNode.html
https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileNode.html:4666,Security,hash,hash,4666,"xecute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other obje",MatchSource.WIKI,doc/master/classTPacketizerAdaptive_1_1TFileNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileNode.html
https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileStat.html:2562,Availability,error,error,2562,"  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTPacketizerAdaptive_1_1TFileStat.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileStat.html
https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileStat.html:2651,Availability,error,error,2651,"gs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTPacketizerAdaptive_1_1TFileStat.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileStat.html
https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileStat.html:2806,Availability,error,error,2806,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTPacketizerAdaptive_1_1TFileStat.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileStat.html
https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileStat.html:3103,Availability,error,error,3103,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTPacketizerAdaptive_1_1TFileStat.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileStat.html
https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileStat.html:7617,Availability,error,error,7617,"ead (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Attributes; TDSetElement * fElement;  ; Bool_t fIsDone;  ; Long64_t fNextEntry;  ; TFileNode * fNode;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; e",MatchSource.WIKI,doc/master/classTPacketizerAdaptive_1_1TFileStat.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileStat.html
https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileStat.html:2568,Integrability,message,message,2568,"  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTPacketizerAdaptive_1_1TFileStat.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileStat.html
https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileStat.html:3109,Integrability,message,message,3109,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTPacketizerAdaptive_1_1TFileStat.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileStat.html
https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileStat.html:4311,Integrability,message,message,4311,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to ",MatchSource.WIKI,doc/master/classTPacketizerAdaptive_1_1TFileStat.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileStat.html
https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileStat.html:7623,Integrability,message,message,7623,"ead (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Attributes; TDSetElement * fElement;  ; Bool_t fIsDone;  ; Long64_t fNextEntry;  ; TFileNode * fNode;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; e",MatchSource.WIKI,doc/master/classTPacketizerAdaptive_1_1TFileStat.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileStat.html
https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileStat.html:7996,Integrability,message,message,7996,"rimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Attributes; TDSetElement * fElement;  ; Bool_t fIsDone;  ; Long64_t fNextEntry;  ; TFileNode * fNode;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoCon",MatchSource.WIKI,doc/master/classTPacketizerAdaptive_1_1TFileStat.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileStat.html
https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileStat.html:882,Modifiability,inherit,inherited,882,". ROOT: TPacketizerAdaptive::TFileStat Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TPacketizerAdaptive::TFileStat Class Reference. . Definition at line 75 of file TPacketizerAdaptive.cxx. Public Member Functions;  TFileStat (TFileNode *node, TDSetElement *elem, TList *file);  ; Int_t Compare (const TObject *obj) const override;  Compare abstract method. ;  ; TDSetElement * GetElement () const;  ; Long64_t GetNextEntry () const;  ; TFileNode * GetNode () const;  ; Bool_t IsDone () const;  ; Bool_t IsSortable () const override;  ; void MoveNextEntry (Long64_t step);  ; void Print (Option_t *=0) const override;  This method must be overridden when a class wants to print itself. ;  ; void SetDone ();  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, I",MatchSource.WIKI,doc/master/classTPacketizerAdaptive_1_1TFileStat.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileStat.html
https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileStat.html:2198,Modifiability,inherit,inheritance,2198,"virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTPacketizerAdaptive_1_1TFileStat.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileStat.html
https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileStat.html:4409,Modifiability,inherit,inherits,4409,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a deriv",MatchSource.WIKI,doc/master/classTPacketizerAdaptive_1_1TFileStat.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileStat.html
https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileStat.html:4526,Modifiability,inherit,inherits,4526,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent",MatchSource.WIKI,doc/master/classTPacketizerAdaptive_1_1TFileStat.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileStat.html
https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileStat.html:8435,Modifiability,inherit,inherited,8435,"lassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Attributes; TDSetElement * fElement;  ; Bool_t fIsDone;  ; Long64_t fNextEntry;  ; TFileNode * fNode;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObject",MatchSource.WIKI,doc/master/classTPacketizerAdaptive_1_1TFileStat.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileStat.html
https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileStat.html:9091,Modifiability,inherit,inherited,9091,"t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Attributes; TDSetElement * fElement;  ; Bool_t fIsDone;  ; Long64_t fNextEntry;  ; TFileNode * fNode;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Inheritance diagram for TPacketizerAdaptive::TFileStat:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TFileStat(). TPacketizerAdaptive::TFileStat::TFileStat ; (; TFileNode * ; node, . TDSetElement * ; elem, . TList * ; file",MatchSource.WIKI,doc/master/classTPacketizerAdaptive_1_1TFileStat.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileStat.html
https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileStat.html:9594,Modifiability,inherit,inherited,9594," 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Inheritance diagram for TPacketizerAdaptive::TFileStat:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TFileStat(). TPacketizerAdaptive::TFileStat::TFileStat ; (; TFileNode * ; node, . TDSetElement * ; elem, . TList * ; file . ). Definition at line 123 of file TPacketizerAdaptive.cxx. Member Function Documentation. ◆ Compare(). Int_t TPacketizerAdaptive::TFileStat::Compare ; (; const TObject * ; obj); const. inlineoverridevirtual . Compare abstract method. ; Must be overridden if a class wants to be able to compare itself with other objects. Must return -1 if this is smaller than obj, 0 if objects are equal and 1 if this is larger than obj. ; Reimplemented from TObject.; Definition at line 95 of file TPacketizerAdaptive.cxx. ◆ GetE",MatchSource.WIKI,doc/master/classTPacketizerAdaptive_1_1TFileStat.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileStat.html
https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileStat.html:9693,Modifiability,inherit,inherited,9693," 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Inheritance diagram for TPacketizerAdaptive::TFileStat:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TFileStat(). TPacketizerAdaptive::TFileStat::TFileStat ; (; TFileNode * ; node, . TDSetElement * ; elem, . TList * ; file . ). Definition at line 123 of file TPacketizerAdaptive.cxx. Member Function Documentation. ◆ Compare(). Int_t TPacketizerAdaptive::TFileStat::Compare ; (; const TObject * ; obj); const. inlineoverridevirtual . Compare abstract method. ; Must be overridden if a class wants to be able to compare itself with other objects. Must return -1 if this is smaller than obj, 0 if objects are equal and 1 if this is larger than obj. ; Reimplemented from TObject.; Definition at line 95 of file TPacketizerAdaptive.cxx. ◆ GetE",MatchSource.WIKI,doc/master/classTPacketizerAdaptive_1_1TFileStat.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileStat.html
https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileStat.html:4040,Security,hash,hash,4040," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other obje",MatchSource.WIKI,doc/master/classTPacketizerAdaptive_1_1TFileStat.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileStat.html
https://root.cern/doc/master/classTPacketizerFile_1_1TIterObj.html:2370,Availability,error,error,2370,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTPacketizerFile_1_1TIterObj.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerFile_1_1TIterObj.html
https://root.cern/doc/master/classTPacketizerFile_1_1TIterObj.html:2459,Availability,error,error,2459,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTPacketizerFile_1_1TIterObj.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerFile_1_1TIterObj.html
https://root.cern/doc/master/classTPacketizerFile_1_1TIterObj.html:2614,Availability,error,error,2614,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the uniqu",MatchSource.WIKI,doc/master/classTPacketizerFile_1_1TIterObj.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerFile_1_1TIterObj.html
https://root.cern/doc/master/classTPacketizerFile_1_1TIterObj.html:2911,Availability,error,error,2911,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have a",MatchSource.WIKI,doc/master/classTPacketizerFile_1_1TIterObj.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerFile_1_1TIterObj.html
https://root.cern/doc/master/classTPacketizerFile_1_1TIterObj.html:7395,Availability,error,error,7395,"ead (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Attributes; TIter * fIter;  ; TString fName;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL",MatchSource.WIKI,doc/master/classTPacketizerFile_1_1TIterObj.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerFile_1_1TIterObj.html
https://root.cern/doc/master/classTPacketizerFile_1_1TIterObj.html:2376,Integrability,message,message,2376,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTPacketizerFile_1_1TIterObj.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerFile_1_1TIterObj.html
https://root.cern/doc/master/classTPacketizerFile_1_1TIterObj.html:2917,Integrability,message,message,2917,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have a",MatchSource.WIKI,doc/master/classTPacketizerFile_1_1TIterObj.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerFile_1_1TIterObj.html
https://root.cern/doc/master/classTPacketizerFile_1_1TIterObj.html:4050,Integrability,message,message,4050,"ct * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const ch",MatchSource.WIKI,doc/master/classTPacketizerFile_1_1TIterObj.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerFile_1_1TIterObj.html
https://root.cern/doc/master/classTPacketizerFile_1_1TIterObj.html:7401,Integrability,message,message,7401,"ead (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Attributes; TIter * fIter;  ; TString fName;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL",MatchSource.WIKI,doc/master/classTPacketizerFile_1_1TIterObj.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerFile_1_1TIterObj.html
https://root.cern/doc/master/classTPacketizerFile_1_1TIterObj.html:7774,Integrability,message,message,7774,"rimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Attributes; TIter * fIter;  ; TString fName;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << (",MatchSource.WIKI,doc/master/classTPacketizerFile_1_1TIterObj.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerFile_1_1TIterObj.html
https://root.cern/doc/master/classTPacketizerFile_1_1TIterObj.html:609,Modifiability,inherit,inherited,609,". ROOT: TPacketizerFile::TIterObj Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TPacketizerFile::TIterObj Class Reference. . Definition at line 74 of file TPacketizerFile.cxx. Public Member Functions;  TIterObj (const char *n, TIter *iter);  ;  ~TIterObj () override;  ; TIter * GetIter () const;  ; const char * GetName () const override;  Returns name of object. ;  ; void Print (Option_t *option="""") const override;  Printf info. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw c",MatchSource.WIKI,doc/master/classTPacketizerFile_1_1TIterObj.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerFile_1_1TIterObj.html
https://root.cern/doc/master/classTPacketizerFile_1_1TIterObj.html:2006,Modifiability,inherit,inheritance,2006,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTPacketizerFile_1_1TIterObj.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerFile_1_1TIterObj.html
https://root.cern/doc/master/classTPacketizerFile_1_1TIterObj.html:4148,Modifiability,inherit,inherits,4148,"asses. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a b",MatchSource.WIKI,doc/master/classTPacketizerFile_1_1TIterObj.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerFile_1_1TIterObj.html
https://root.cern/doc/master/classTPacketizerFile_1_1TIterObj.html:4265,Modifiability,inherit,inherits,4265," ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not pro",MatchSource.WIKI,doc/master/classTPacketizerFile_1_1TIterObj.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerFile_1_1TIterObj.html
https://root.cern/doc/master/classTPacketizerFile_1_1TIterObj.html:8156,Modifiability,inherit,inherited,8156," of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Attributes; TIter * fIter;  ; TString fName;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObject",MatchSource.WIKI,doc/master/classTPacketizerFile_1_1TIterObj.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerFile_1_1TIterObj.html
https://root.cern/doc/master/classTPacketizerFile_1_1TIterObj.html:8812,Modifiability,inherit,inherited,8812," ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Attributes; TIter * fIter;  ; TString fName;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Inheritance diagram for TPacketizerFile::TIterObj:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TIterObj(). TPacketizerFile::TIterObj::TIterObj ; (; const char * ; n, . TIter * ; iter . ). inline . Definition at line 81 of",MatchSource.WIKI,doc/master/classTPacketizerFile_1_1TIterObj.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerFile_1_1TIterObj.html
https://root.cern/doc/master/classTPacketizerFile_1_1TIterObj.html:9315,Modifiability,inherit,inherited,9315," 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Inheritance diagram for TPacketizerFile::TIterObj:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TIterObj(). TPacketizerFile::TIterObj::TIterObj ; (; const char * ; n, . TIter * ; iter . ). inline . Definition at line 81 of file TPacketizerFile.cxx. ◆ ~TIterObj(). TPacketizerFile::TIterObj::~TIterObj ; (; ). inlineoverride . Definition at line 82 of file TPacketizerFile.cxx. Member Function Documentation. ◆ GetIter(). TIter * TPacketizerFile::TIterObj::GetIter ; (; ); const. inline . Definition at line 85 of file TPacketizerFile.cxx. ◆ GetName(). const char * TPacketizerFile::TIterObj::GetName ; (; ); const. inlineoverridevirtual . Returns name of object. ; This default method returns the class name. Classes that give objects a na",MatchSource.WIKI,doc/master/classTPacketizerFile_1_1TIterObj.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerFile_1_1TIterObj.html
https://root.cern/doc/master/classTPacketizerFile_1_1TIterObj.html:9414,Modifiability,inherit,inherited,9414," 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Inheritance diagram for TPacketizerFile::TIterObj:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TIterObj(). TPacketizerFile::TIterObj::TIterObj ; (; const char * ; n, . TIter * ; iter . ). inline . Definition at line 81 of file TPacketizerFile.cxx. ◆ ~TIterObj(). TPacketizerFile::TIterObj::~TIterObj ; (; ). inlineoverride . Definition at line 82 of file TPacketizerFile.cxx. Member Function Documentation. ◆ GetIter(). TIter * TPacketizerFile::TIterObj::GetIter ; (; ); const. inline . Definition at line 85 of file TPacketizerFile.cxx. ◆ GetName(). const char * TPacketizerFile::TIterObj::GetName ; (; ); const. inlineoverridevirtual . Returns name of object. ; This default method returns the class name. Classes that give objects a na",MatchSource.WIKI,doc/master/classTPacketizerFile_1_1TIterObj.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerFile_1_1TIterObj.html
https://root.cern/doc/master/classTPacketizerFile_1_1TIterObj.html:3779,Security,hash,hash,3779,"xecute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other obje",MatchSource.WIKI,doc/master/classTPacketizerFile_1_1TIterObj.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizerFile_1_1TIterObj.html
https://root.cern/doc/master/classTPacketizer_1_1TFileNode.html:2751,Availability,error,error,2751,"  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTPacketizer_1_1TFileNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizer_1_1TFileNode.html
https://root.cern/doc/master/classTPacketizer_1_1TFileNode.html:2840,Availability,error,error,2840,"gs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTPacketizer_1_1TFileNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizer_1_1TFileNode.html
https://root.cern/doc/master/classTPacketizer_1_1TFileNode.html:2995,Availability,error,error,2995,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the uniqu",MatchSource.WIKI,doc/master/classTPacketizer_1_1TFileNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizer_1_1TFileNode.html
https://root.cern/doc/master/classTPacketizer_1_1TFileNode.html:3292,Availability,error,error,3292,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have a",MatchSource.WIKI,doc/master/classTPacketizer_1_1TFileNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizer_1_1TFileNode.html
https://root.cern/doc/master/classTPacketizer_1_1TFileNode.html:7737,Availability,error,error,7737,"ead (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Attributes; TObject * fActFileNext;  ; TList * fActFiles;  ; TList * fFiles;  ; Int_t fMySlaveCnt;  ; TString fNodeName;  ; Int_t fSlaveCnt;  ; TObject * fUnAllocFileNext;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x040000",MatchSource.WIKI,doc/master/classTPacketizer_1_1TFileNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizer_1_1TFileNode.html
https://root.cern/doc/master/classTPacketizer_1_1TFileNode.html:2757,Integrability,message,message,2757,"  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTPacketizer_1_1TFileNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizer_1_1TFileNode.html
https://root.cern/doc/master/classTPacketizer_1_1TFileNode.html:3298,Integrability,message,message,3298,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have a",MatchSource.WIKI,doc/master/classTPacketizer_1_1TFileNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizer_1_1TFileNode.html
https://root.cern/doc/master/classTPacketizer_1_1TFileNode.html:4431,Integrability,message,message,4431,"ct * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to ",MatchSource.WIKI,doc/master/classTPacketizer_1_1TFileNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizer_1_1TFileNode.html
https://root.cern/doc/master/classTPacketizer_1_1TFileNode.html:7743,Integrability,message,message,7743,"ead (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Attributes; TObject * fActFileNext;  ; TList * fActFiles;  ; TList * fFiles;  ; Int_t fMySlaveCnt;  ; TString fNodeName;  ; Int_t fSlaveCnt;  ; TObject * fUnAllocFileNext;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x040000",MatchSource.WIKI,doc/master/classTPacketizer_1_1TFileNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizer_1_1TFileNode.html
https://root.cern/doc/master/classTPacketizer_1_1TFileNode.html:8116,Integrability,message,message,8116,"rimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Attributes; TObject * fActFileNext;  ; TList * fActFiles;  ; TList * fFiles;  ; Int_t fMySlaveCnt;  ; TString fNodeName;  ; Int_t fSlaveCnt;  ; TObject * fUnAllocFileNext;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHa",MatchSource.WIKI,doc/master/classTPacketizer_1_1TFileNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizer_1_1TFileNode.html
https://root.cern/doc/master/classTPacketizer_1_1TFileNode.html:1071,Modifiability,inherit,inherited,1071," ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TPacketizer::TFileNode Class Reference. . Definition at line 93 of file TPacketizer.cxx. Public Member Functions;  TFileNode (const char *name);  ;  ~TFileNode () override;  ; void Add (TDSetElement *elem);  ; Int_t Compare (const TObject *other) const override;  Compare abstract method. ;  ; void DecSlaveCnt (const char *slave);  ; const char * GetName () const override;  Returns name of object. ;  ; TFileStat * GetNextActive ();  ; TFileStat * GetNextUnAlloc ();  ; Int_t GetNumberOfActiveFiles () const;  ; Int_t GetSlaveCnt () const;  ; void IncMySlaveCnt ();  ; void IncSlaveCnt (const char *slave);  ; Bool_t IsSortable () const override;  ; void Print (Option_t *) const override;  This method must be overridden when a class wants to print itself. ;  ; void RemoveActive (TFileStat *file);  ; void Reset ();  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual void Copy (TObject &object) const;  Copy",MatchSource.WIKI,doc/master/classTPacketizer_1_1TFileNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizer_1_1TFileNode.html
https://root.cern/doc/master/classTPacketizer_1_1TFileNode.html:2387,Modifiability,inherit,inheritance,2387,"virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTPacketizer_1_1TFileNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizer_1_1TFileNode.html
https://root.cern/doc/master/classTPacketizer_1_1TFileNode.html:4529,Modifiability,inherit,inherits,4529,"asses. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a deriv",MatchSource.WIKI,doc/master/classTPacketizer_1_1TFileNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizer_1_1TFileNode.html
https://root.cern/doc/master/classTPacketizer_1_1TFileNode.html:4646,Modifiability,inherit,inherits,4646," ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent",MatchSource.WIKI,doc/master/classTPacketizer_1_1TFileNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizer_1_1TFileNode.html
https://root.cern/doc/master/classTPacketizer_1_1TFileNode.html:8625,Modifiability,inherit,inherited,8625,"hod, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Attributes; TObject * fActFileNext;  ; TList * fActFiles;  ; TList * fFiles;  ; Int_t fMySlaveCnt;  ; TString fNodeName;  ; Int_t fSlaveCnt;  ; TObject * fUnAllocFileNext;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObject",MatchSource.WIKI,doc/master/classTPacketizer_1_1TFileNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizer_1_1TFileNode.html
https://root.cern/doc/master/classTPacketizer_1_1TFileNode.html:9281,Modifiability,inherit,inherited,9281,"directory. ;  . Private Attributes; TObject * fActFileNext;  ; TList * fActFiles;  ; TList * fFiles;  ; Int_t fMySlaveCnt;  ; TString fNodeName;  ; Int_t fSlaveCnt;  ; TObject * fUnAllocFileNext;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Inheritance diagram for TPacketizer::TFileNode:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TFileNode(). TPacketizer::TFileNode::TFileNode ; (; const char * ; name). Definition at line 198 of file TPacketizer.cxx. ◆ ~TFil",MatchSource.WIKI,doc/master/classTPacketizer_1_1TFileNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizer_1_1TFileNode.html
https://root.cern/doc/master/classTPacketizer_1_1TFileNode.html:9784,Modifiability,inherit,inherited,9784," 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Inheritance diagram for TPacketizer::TFileNode:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TFileNode(). TPacketizer::TFileNode::TFileNode ; (; const char * ; name). Definition at line 198 of file TPacketizer.cxx. ◆ ~TFileNode(). TPacketizer::TFileNode::~TFileNode ; (; ). inlineoverride . Definition at line 106 of file TPacketizer.cxx. Member Function Documentation. ◆ Add(). void TPacketizer::TFileNode::Add ; (; TDSetElement * ; elem). inline . Definition at line 117 of file TPacketizer.cxx. ◆ Compare(). Int_t TPacketizer::TFileNode::Compare ; (; const TObject * ; obj); const. inlineoverridevirtual . Compare abstract method. ; Must be overridden if a class wants to be able to compare itself with other objects. Must return -1 if ",MatchSource.WIKI,doc/master/classTPacketizer_1_1TFileNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizer_1_1TFileNode.html
https://root.cern/doc/master/classTPacketizer_1_1TFileNode.html:9883,Modifiability,inherit,inherited,9883," 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Inheritance diagram for TPacketizer::TFileNode:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TFileNode(). TPacketizer::TFileNode::TFileNode ; (; const char * ; name). Definition at line 198 of file TPacketizer.cxx. ◆ ~TFileNode(). TPacketizer::TFileNode::~TFileNode ; (; ). inlineoverride . Definition at line 106 of file TPacketizer.cxx. Member Function Documentation. ◆ Add(). void TPacketizer::TFileNode::Add ; (; TDSetElement * ; elem). inline . Definition at line 117 of file TPacketizer.cxx. ◆ Compare(). Int_t TPacketizer::TFileNode::Compare ; (; const TObject * ; obj); const. inlineoverridevirtual . Compare abstract method. ; Must be overridden if a class wants to be able to compare itself with other objects. Must return -1 if ",MatchSource.WIKI,doc/master/classTPacketizer_1_1TFileNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizer_1_1TFileNode.html
https://root.cern/doc/master/classTPacketizer_1_1TFileNode.html:4160,Security,hash,hash,4160,"xecute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other obje",MatchSource.WIKI,doc/master/classTPacketizer_1_1TFileNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizer_1_1TFileNode.html
https://root.cern/doc/master/classTPacketizer_1_1TFileStat.html:2369,Availability,error,error,2369,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTPacketizer_1_1TFileStat.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizer_1_1TFileStat.html
https://root.cern/doc/master/classTPacketizer_1_1TFileStat.html:2458,Availability,error,error,2458,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTPacketizer_1_1TFileStat.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizer_1_1TFileStat.html
https://root.cern/doc/master/classTPacketizer_1_1TFileStat.html:2613,Availability,error,error,2613,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTPacketizer_1_1TFileStat.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizer_1_1TFileStat.html
https://root.cern/doc/master/classTPacketizer_1_1TFileStat.html:2910,Availability,error,error,2910,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTPacketizer_1_1TFileStat.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizer_1_1TFileStat.html
https://root.cern/doc/master/classTPacketizer_1_1TFileStat.html:7584,Availability,error,error,7584,"ead (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Attributes; TDSetElement * fElement;  ; Bool_t fIsDone;  ; Long64_t fNextEntry;  ; TFileNode * fNode;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; e",MatchSource.WIKI,doc/master/classTPacketizer_1_1TFileStat.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizer_1_1TFileStat.html
https://root.cern/doc/master/classTPacketizer_1_1TFileStat.html:2375,Integrability,message,message,2375,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTPacketizer_1_1TFileStat.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizer_1_1TFileStat.html
https://root.cern/doc/master/classTPacketizer_1_1TFileStat.html:2916,Integrability,message,message,2916,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTPacketizer_1_1TFileStat.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizer_1_1TFileStat.html
https://root.cern/doc/master/classTPacketizer_1_1TFileStat.html:4118,Integrability,message,message,4118,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const ch",MatchSource.WIKI,doc/master/classTPacketizer_1_1TFileStat.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizer_1_1TFileStat.html
https://root.cern/doc/master/classTPacketizer_1_1TFileStat.html:7590,Integrability,message,message,7590,"ead (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Attributes; TDSetElement * fElement;  ; Bool_t fIsDone;  ; Long64_t fNextEntry;  ; TFileNode * fNode;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; e",MatchSource.WIKI,doc/master/classTPacketizer_1_1TFileStat.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizer_1_1TFileStat.html
https://root.cern/doc/master/classTPacketizer_1_1TFileStat.html:7963,Integrability,message,message,7963,"rimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Attributes; TDSetElement * fElement;  ; Bool_t fIsDone;  ; Long64_t fNextEntry;  ; TFileNode * fNode;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoCon",MatchSource.WIKI,doc/master/classTPacketizer_1_1TFileStat.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizer_1_1TFileStat.html
https://root.cern/doc/master/classTPacketizer_1_1TFileStat.html:608,Modifiability,inherit,inherited,608,". ROOT: TPacketizer::TFileStat Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TPacketizer::TFileStat Class Reference. . Definition at line 65 of file TPacketizer.cxx. Public Member Functions;  TFileStat (TFileNode *node, TDSetElement *elem);  ; TDSetElement * GetElement () const;  ; Long64_t GetNextEntry () const;  ; TFileNode * GetNode () const;  ; Bool_t IsDone () const;  ; void MoveNextEntry (Long64_t step);  ; void SetDone ();  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw cl",MatchSource.WIKI,doc/master/classTPacketizer_1_1TFileStat.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizer_1_1TFileStat.html
https://root.cern/doc/master/classTPacketizer_1_1TFileStat.html:2005,Modifiability,inherit,inheritance,2005,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTPacketizer_1_1TFileStat.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizer_1_1TFileStat.html
https://root.cern/doc/master/classTPacketizer_1_1TFileStat.html:4216,Modifiability,inherit,inherits,4216,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a b",MatchSource.WIKI,doc/master/classTPacketizer_1_1TFileStat.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizer_1_1TFileStat.html
https://root.cern/doc/master/classTPacketizer_1_1TFileStat.html:4333,Modifiability,inherit,inherits,4333,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not pro",MatchSource.WIKI,doc/master/classTPacketizer_1_1TFileStat.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizer_1_1TFileStat.html
https://root.cern/doc/master/classTPacketizer_1_1TFileStat.html:8402,Modifiability,inherit,inherited,8402,"lassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Attributes; TDSetElement * fElement;  ; Bool_t fIsDone;  ; Long64_t fNextEntry;  ; TFileNode * fNode;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObject",MatchSource.WIKI,doc/master/classTPacketizer_1_1TFileStat.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizer_1_1TFileStat.html
https://root.cern/doc/master/classTPacketizer_1_1TFileStat.html:9058,Modifiability,inherit,inherited,9058,"t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Attributes; TDSetElement * fElement;  ; Bool_t fIsDone;  ; Long64_t fNextEntry;  ; TFileNode * fNode;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Inheritance diagram for TPacketizer::TFileStat:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TFileStat(). TPacketizer::TFileStat::TFileStat ; (; TFileNode * ; node, . TDSetElement * ; elem . ). Definition at line 85 of fil",MatchSource.WIKI,doc/master/classTPacketizer_1_1TFileStat.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizer_1_1TFileStat.html
https://root.cern/doc/master/classTPacketizer_1_1TFileStat.html:9561,Modifiability,inherit,inherited,9561," 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Inheritance diagram for TPacketizer::TFileStat:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TFileStat(). TPacketizer::TFileStat::TFileStat ; (; TFileNode * ; node, . TDSetElement * ; elem . ). Definition at line 85 of file TPacketizer.cxx. Member Function Documentation. ◆ GetElement(). TDSetElement * TPacketizer::TFileStat::GetElement ; (; ); const. inline . Definition at line 79 of file TPacketizer.cxx. ◆ GetNextEntry(). Long64_t TPacketizer::TFileStat::GetNextEntry ; (; ); const. inline . Definition at line 80 of file TPacketizer.cxx. ◆ GetNode(). TFileNode * TPacketizer::TFileStat::GetNode ; (; ); const. inline . Definition at line 78 of file TPacketizer.cxx. ◆ IsDone(). Bool_t TPacketizer::TFileStat::IsDone ; (; ); const. in",MatchSource.WIKI,doc/master/classTPacketizer_1_1TFileStat.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizer_1_1TFileStat.html
https://root.cern/doc/master/classTPacketizer_1_1TFileStat.html:9660,Modifiability,inherit,inherited,9660," 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Inheritance diagram for TPacketizer::TFileStat:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TFileStat(). TPacketizer::TFileStat::TFileStat ; (; TFileNode * ; node, . TDSetElement * ; elem . ). Definition at line 85 of file TPacketizer.cxx. Member Function Documentation. ◆ GetElement(). TDSetElement * TPacketizer::TFileStat::GetElement ; (; ); const. inline . Definition at line 79 of file TPacketizer.cxx. ◆ GetNextEntry(). Long64_t TPacketizer::TFileStat::GetNextEntry ; (; ); const. inline . Definition at line 80 of file TPacketizer.cxx. ◆ GetNode(). TFileNode * TPacketizer::TFileStat::GetNode ; (; ); const. inline . Definition at line 78 of file TPacketizer.cxx. ◆ IsDone(). Bool_t TPacketizer::TFileStat::IsDone ; (; ); const. in",MatchSource.WIKI,doc/master/classTPacketizer_1_1TFileStat.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizer_1_1TFileStat.html
https://root.cern/doc/master/classTPacketizer_1_1TFileStat.html:3847,Security,hash,hash,3847," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other obje",MatchSource.WIKI,doc/master/classTPacketizer_1_1TFileStat.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPacketizer_1_1TFileStat.html
https://root.cern/doc/master/classTPackMgr.html:1658,Availability,error,error,1658,"0; , kCheckROOT = 1; , kCheckGIT = 2; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TPackMgr (const char *dir, const char *key=""L0"");  Create a PROOF package manager. ;  ;  ~TPackMgr () override;  Destroy a TPackMgr instance. ;  ; Int_t Build (const char *pack, Int_t opt=TPackMgr::kCheckROOT);  Method to build a package. ;  ; Int_t Clean (const char *pack);  Clean dir for package 'pack' Return -1 in case of error, 0 otherwise. ;  ; const char * GetDir () const;  ; Int_t GetDownloadDir (TString &dldir);  Method to get the download dir; create if not existing Return -1 in case of error (not found; not created), 0 otherwise. ;  ; void GetEnabledPackages (TString &packlist);  Method to get a semi-colon separated list with the names of the enabled packages. ;  ; TList * GetList () const;  Get list of available packages Returns a pointer to a TList object, transferring ownership to the caller. ;  ; TList * GetListOfEnabled () const;  Get list of enabled packages Returns a pointer to a TList object, transferring ownership to the caller. ;  ; TLockPath * GetLock ();  ; TMD5 * GetMD5 (const char *pack);  Get MD5 checksum of the PAR file corresponding to given package Returns a pointer to a TMD5 object, transferring ownership to the caller. ;  ; const char * GetName () const override;  Returns name of object. ;  ; Int_t GetPackDir (const char *pack, TString &pdir)",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:1774,Availability,down,download,1774,"ie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TPackMgr (const char *dir, const char *key=""L0"");  Create a PROOF package manager. ;  ;  ~TPackMgr () override;  Destroy a TPackMgr instance. ;  ; Int_t Build (const char *pack, Int_t opt=TPackMgr::kCheckROOT);  Method to build a package. ;  ; Int_t Clean (const char *pack);  Clean dir for package 'pack' Return -1 in case of error, 0 otherwise. ;  ; const char * GetDir () const;  ; Int_t GetDownloadDir (TString &dldir);  Method to get the download dir; create if not existing Return -1 in case of error (not found; not created), 0 otherwise. ;  ; void GetEnabledPackages (TString &packlist);  Method to get a semi-colon separated list with the names of the enabled packages. ;  ; TList * GetList () const;  Get list of available packages Returns a pointer to a TList object, transferring ownership to the caller. ;  ; TList * GetListOfEnabled () const;  Get list of enabled packages Returns a pointer to a TList object, transferring ownership to the caller. ;  ; TLockPath * GetLock ();  ; TMD5 * GetMD5 (const char *pack);  Get MD5 checksum of the PAR file corresponding to given package Returns a pointer to a TMD5 object, transferring ownership to the caller. ;  ; const char * GetName () const override;  Returns name of object. ;  ; Int_t GetPackDir (const char *pack, TString &pdir);  Method to get the path of the dir for package 'pack'. ;  ; Int_t GetParPath (const char *pack, TString &path);  Method to get the path of the PAR file ",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:1832,Availability,error,error,1832,"ie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TPackMgr (const char *dir, const char *key=""L0"");  Create a PROOF package manager. ;  ;  ~TPackMgr () override;  Destroy a TPackMgr instance. ;  ; Int_t Build (const char *pack, Int_t opt=TPackMgr::kCheckROOT);  Method to build a package. ;  ; Int_t Clean (const char *pack);  Clean dir for package 'pack' Return -1 in case of error, 0 otherwise. ;  ; const char * GetDir () const;  ; Int_t GetDownloadDir (TString &dldir);  Method to get the download dir; create if not existing Return -1 in case of error (not found; not created), 0 otherwise. ;  ; void GetEnabledPackages (TString &packlist);  Method to get a semi-colon separated list with the names of the enabled packages. ;  ; TList * GetList () const;  Get list of available packages Returns a pointer to a TList object, transferring ownership to the caller. ;  ; TList * GetListOfEnabled () const;  Get list of enabled packages Returns a pointer to a TList object, transferring ownership to the caller. ;  ; TLockPath * GetLock ();  ; TMD5 * GetMD5 (const char *pack);  Get MD5 checksum of the PAR file corresponding to given package Returns a pointer to a TMD5 object, transferring ownership to the caller. ;  ; const char * GetName () const override;  Returns name of object. ;  ; Int_t GetPackDir (const char *pack, TString &pdir);  Method to get the path of the dir for package 'pack'. ;  ; Int_t GetParPath (const char *pack, TString &path);  Method to get the path of the PAR file ",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:2054,Availability,avail,available,2054," << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TPackMgr (const char *dir, const char *key=""L0"");  Create a PROOF package manager. ;  ;  ~TPackMgr () override;  Destroy a TPackMgr instance. ;  ; Int_t Build (const char *pack, Int_t opt=TPackMgr::kCheckROOT);  Method to build a package. ;  ; Int_t Clean (const char *pack);  Clean dir for package 'pack' Return -1 in case of error, 0 otherwise. ;  ; const char * GetDir () const;  ; Int_t GetDownloadDir (TString &dldir);  Method to get the download dir; create if not existing Return -1 in case of error (not found; not created), 0 otherwise. ;  ; void GetEnabledPackages (TString &packlist);  Method to get a semi-colon separated list with the names of the enabled packages. ;  ; TList * GetList () const;  Get list of available packages Returns a pointer to a TList object, transferring ownership to the caller. ;  ; TList * GetListOfEnabled () const;  Get list of enabled packages Returns a pointer to a TList object, transferring ownership to the caller. ;  ; TLockPath * GetLock ();  ; TMD5 * GetMD5 (const char *pack);  Get MD5 checksum of the PAR file corresponding to given package Returns a pointer to a TMD5 object, transferring ownership to the caller. ;  ; const char * GetName () const override;  Returns name of object. ;  ; Int_t GetPackDir (const char *pack, TString &pdir);  Method to get the path of the dir for package 'pack'. ;  ; Int_t GetParPath (const char *pack, TString &path);  Method to get the path of the PAR file for package 'pack'. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; Bool_t Has (const char *pack);  Method to check if this package manager has package 'pack'. ;  ; Int_t Install (const char *par, Bool_t rmold=kFALSE);  Install package from par (unpack the file in the dir",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:3451,Availability,error,error,3451,"m of the PAR file corresponding to given package Returns a pointer to a TMD5 object, transferring ownership to the caller. ;  ; const char * GetName () const override;  Returns name of object. ;  ; Int_t GetPackDir (const char *pack, TString &pdir);  Method to get the path of the dir for package 'pack'. ;  ; Int_t GetParPath (const char *pack, TString &path);  Method to get the path of the PAR file for package 'pack'. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; Bool_t Has (const char *pack);  Method to check if this package manager has package 'pack'. ;  ; Int_t Install (const char *par, Bool_t rmold=kFALSE);  Install package from par (unpack the file in the directory); par can be an URL for remote retrieval. ;  ; TClass * IsA () const override;  ; Bool_t IsInDir (const char *path);  Method to check if 'path' is in the managed directory Return kTRUE or kFALSE. ;  ; Bool_t IsPackageEnabled (const char *pack);  ; Int_t Load (const char *pack, const char *opts);  Method to load a package taking an option const char * Return -1 on error, 0 otherwise. ;  ; Int_t Load (const char *pack, TList *optls=0);  Method to load a package taking an option list Return -1 on error, 0 otherwise. ;  ; TMD5 * ReadMD5 (const char *pack);  Read MD5 checksum of the PAR file from the PROOF-INF/md5.txt file. ;  ; Int_t Remove (const char *pack=0, Bool_t dolock=kTRUE);  Remove package 'pack' If 'pack' is null or empty all packages are cleared. ;  ; void SetLogger (TPackMgrLog_t logger);  ; void SetName (const char *name) override;  Set the name of the TNamed. ;  ; void SetPrefix (const char *pfx);  ; void Show (const char *title=0);  Show available packages. ;  ; void ShowEnabled (const char *title=0);  Show enabled packages. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t Unload (const char *pack);  Method to unload a package. ;  ; Int_t Unpack (const char",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:3584,Availability,error,error,3584,"rride;  Returns name of object. ;  ; Int_t GetPackDir (const char *pack, TString &pdir);  Method to get the path of the dir for package 'pack'. ;  ; Int_t GetParPath (const char *pack, TString &path);  Method to get the path of the PAR file for package 'pack'. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; Bool_t Has (const char *pack);  Method to check if this package manager has package 'pack'. ;  ; Int_t Install (const char *par, Bool_t rmold=kFALSE);  Install package from par (unpack the file in the directory); par can be an URL for remote retrieval. ;  ; TClass * IsA () const override;  ; Bool_t IsInDir (const char *path);  Method to check if 'path' is in the managed directory Return kTRUE or kFALSE. ;  ; Bool_t IsPackageEnabled (const char *pack);  ; Int_t Load (const char *pack, const char *opts);  Method to load a package taking an option const char * Return -1 on error, 0 otherwise. ;  ; Int_t Load (const char *pack, TList *optls=0);  Method to load a package taking an option list Return -1 on error, 0 otherwise. ;  ; TMD5 * ReadMD5 (const char *pack);  Read MD5 checksum of the PAR file from the PROOF-INF/md5.txt file. ;  ; Int_t Remove (const char *pack=0, Bool_t dolock=kTRUE);  Remove package 'pack' If 'pack' is null or empty all packages are cleared. ;  ; void SetLogger (TPackMgrLog_t logger);  ; void SetName (const char *name) override;  Set the name of the TNamed. ;  ; void SetPrefix (const char *pfx);  ; void Show (const char *title=0);  Show available packages. ;  ; void ShowEnabled (const char *title=0);  Show enabled packages. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t Unload (const char *pack);  Method to unload a package. ;  ; Int_t Unpack (const char *pack, TMD5 *sum=0);  Read MD5 checksum of the PAR file from the PROOF-INF/md5.txt file. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNa",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:4048,Availability,avail,available,4048,"kFALSE);  Install package from par (unpack the file in the directory); par can be an URL for remote retrieval. ;  ; TClass * IsA () const override;  ; Bool_t IsInDir (const char *path);  Method to check if 'path' is in the managed directory Return kTRUE or kFALSE. ;  ; Bool_t IsPackageEnabled (const char *pack);  ; Int_t Load (const char *pack, const char *opts);  Method to load a package taking an option const char * Return -1 on error, 0 otherwise. ;  ; Int_t Load (const char *pack, TList *optls=0);  Method to load a package taking an option list Return -1 on error, 0 otherwise. ;  ; TMD5 * ReadMD5 (const char *pack);  Read MD5 checksum of the PAR file from the PROOF-INF/md5.txt file. ;  ; Int_t Remove (const char *pack=0, Bool_t dolock=kTRUE);  Remove package 'pack' If 'pack' is null or empty all packages are cleared. ;  ; void SetLogger (TPackMgrLog_t logger);  ; void SetName (const char *name) override;  Set the name of the TNamed. ;  ; void SetPrefix (const char *pfx);  ; void Show (const char *title=0);  Show available packages. ;  ; void ShowEnabled (const char *title=0);  Show enabled packages. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t Unload (const char *pack);  Method to unload a package. ;  ; Int_t Unpack (const char *pack, TMD5 *sum=0);  Read MD5 checksum of the PAR file from the PROOF-INF/md5.txt file. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TName",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:7363,Availability,error,error,7363,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:7452,Availability,error,error,7452,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:7607,Availability,error,error,7607,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:7904,Availability,error,error,7904,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:11988,Availability,error,error,11988,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t FindParPath (TPackMgr *packmgr, const char *pack, TString &par);  Get the full path to PAR, looking also in the global dirs. ;  ; stati",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:15919,Availability,error,error,15919,"ed from TNamed; TString fName;  ; TString fTitle;  . #include <TPackMgr.h>. Inheritance diagram for TPackMgr:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ ECheckVersionOpt. enum TPackMgr::ECheckVersionOpt. EnumeratorkDontCheck ; kCheckROOT ; kCheckGIT . Definition at line 39 of file TPackMgr.h. Constructor & Destructor Documentation. ◆ TPackMgr() [1/2]. TPackMgr::TPackMgr ; (; const TPackMgr & ; ). private . ◆ TPackMgr() [2/2]. TPackMgr::TPackMgr ; (; const char * ; dir, . const char * ; key = ""L0"" . ). Create a PROOF package manager. ; Definition at line 49 of file TPackMgr.cxx. ◆ ~TPackMgr(). TPackMgr::~TPackMgr ; (; ). override . Destroy a TPackMgr instance. ; Definition at line 64 of file TPackMgr.cxx. Member Function Documentation. ◆ Build(). Int_t TPackMgr::Build ; (; const char * ; pack, . Int_t ; opt = TPackMgr::kCheckROOT . ). Method to build a package. ; Return -1 on error, 0 otherwise ; Definition at line 87 of file TPackMgr.cxx. ◆ Class(). static TClass * TPackMgr::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TPackMgr::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TPackMgr::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 106 of file TPackMgr.h. ◆ Clean(). Int_t TPackMgr::Clean ; (; const char * ; pack). Clean dir for package 'pack' Return -1 in case of error, 0 otherwise. ; Definition at line 576 of file TPackMgr.cxx. ◆ DeclFileName(). static const char * TPackMgr::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 106 of file TPackMgr.h. ◆ FindParPath(). Int_t TPackMgr::FindParPath ; (; TPackMgr * ; packmgr, . const char * ; pack, . TString & ; par . ). static . Get the full path to PAR, looking also in the global dirs. ; Returns -1 if not found, 0 if ",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:16470,Availability,error,error,16470,"[2/2]. TPackMgr::TPackMgr ; (; const char * ; dir, . const char * ; key = ""L0"" . ). Create a PROOF package manager. ; Definition at line 49 of file TPackMgr.cxx. ◆ ~TPackMgr(). TPackMgr::~TPackMgr ; (; ). override . Destroy a TPackMgr instance. ; Definition at line 64 of file TPackMgr.cxx. Member Function Documentation. ◆ Build(). Int_t TPackMgr::Build ; (; const char * ; pack, . Int_t ; opt = TPackMgr::kCheckROOT . ). Method to build a package. ; Return -1 on error, 0 otherwise ; Definition at line 87 of file TPackMgr.cxx. ◆ Class(). static TClass * TPackMgr::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TPackMgr::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TPackMgr::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 106 of file TPackMgr.h. ◆ Clean(). Int_t TPackMgr::Clean ; (; const char * ; pack). Clean dir for package 'pack' Return -1 in case of error, 0 otherwise. ; Definition at line 576 of file TPackMgr.cxx. ◆ DeclFileName(). static const char * TPackMgr::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 106 of file TPackMgr.h. ◆ FindParPath(). Int_t TPackMgr::FindParPath ; (; TPackMgr * ; packmgr, . const char * ; pack, . TString & ; par . ). static . Get the full path to PAR, looking also in the global dirs. ; Returns -1 if not found, 0 if available in global dirs, 1 if it can be uploaded from the local package dir. For the cases >= 0, par is filled with the path of the PAR file ; Definition at line 934 of file TPackMgr.cxx. ◆ GetDir(). const char * TPackMgr::GetDir ; (; ); const. inline . Definition at line 77 of file TPackMgr.h. ◆ GetDownloadDir(). Int_t TPackMgr::GetDownloadDir ; (; TString & ; dldir). Method to get the download dir; create if not existing Return -1 in case of error (not found; not created), 0 otherwise. ; Definition at lin",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:16941,Availability,avail,available,16941,"f file TPackMgr.cxx. ◆ Class(). static TClass * TPackMgr::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TPackMgr::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TPackMgr::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 106 of file TPackMgr.h. ◆ Clean(). Int_t TPackMgr::Clean ; (; const char * ; pack). Clean dir for package 'pack' Return -1 in case of error, 0 otherwise. ; Definition at line 576 of file TPackMgr.cxx. ◆ DeclFileName(). static const char * TPackMgr::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 106 of file TPackMgr.h. ◆ FindParPath(). Int_t TPackMgr::FindParPath ; (; TPackMgr * ; packmgr, . const char * ; pack, . TString & ; par . ). static . Get the full path to PAR, looking also in the global dirs. ; Returns -1 if not found, 0 if available in global dirs, 1 if it can be uploaded from the local package dir. For the cases >= 0, par is filled with the path of the PAR file ; Definition at line 934 of file TPackMgr.cxx. ◆ GetDir(). const char * TPackMgr::GetDir ; (; ); const. inline . Definition at line 77 of file TPackMgr.h. ◆ GetDownloadDir(). Int_t TPackMgr::GetDownloadDir ; (; TString & ; dldir). Method to get the download dir; create if not existing Return -1 in case of error (not found; not created), 0 otherwise. ; Definition at line 534 of file TPackMgr.cxx. ◆ GetEnabledPackages(). void TPackMgr::GetEnabledPackages ; (; TString & ; packlist). Method to get a semi-colon separated list with the names of the enabled packages. ; Definition at line 501 of file TPackMgr.cxx. ◆ GetList(). TList * TPackMgr::GetList ; (; ); const. Get list of available packages Returns a pointer to a TList object, transferring ownership to the caller. ; Definition at line 621 of file TPackMgr.cxx. ◆ GetListOfEnabled(). TList * TPackMgr::GetListOfEnabled ; ",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:17332,Availability,down,download,17332,"t_t TPackMgr::Clean ; (; const char * ; pack). Clean dir for package 'pack' Return -1 in case of error, 0 otherwise. ; Definition at line 576 of file TPackMgr.cxx. ◆ DeclFileName(). static const char * TPackMgr::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 106 of file TPackMgr.h. ◆ FindParPath(). Int_t TPackMgr::FindParPath ; (; TPackMgr * ; packmgr, . const char * ; pack, . TString & ; par . ). static . Get the full path to PAR, looking also in the global dirs. ; Returns -1 if not found, 0 if available in global dirs, 1 if it can be uploaded from the local package dir. For the cases >= 0, par is filled with the path of the PAR file ; Definition at line 934 of file TPackMgr.cxx. ◆ GetDir(). const char * TPackMgr::GetDir ; (; ); const. inline . Definition at line 77 of file TPackMgr.h. ◆ GetDownloadDir(). Int_t TPackMgr::GetDownloadDir ; (; TString & ; dldir). Method to get the download dir; create if not existing Return -1 in case of error (not found; not created), 0 otherwise. ; Definition at line 534 of file TPackMgr.cxx. ◆ GetEnabledPackages(). void TPackMgr::GetEnabledPackages ; (; TString & ; packlist). Method to get a semi-colon separated list with the names of the enabled packages. ; Definition at line 501 of file TPackMgr.cxx. ◆ GetList(). TList * TPackMgr::GetList ; (; ); const. Get list of available packages Returns a pointer to a TList object, transferring ownership to the caller. ; Definition at line 621 of file TPackMgr.cxx. ◆ GetListOfEnabled(). TList * TPackMgr::GetListOfEnabled ; (; ); const. Get list of enabled packages Returns a pointer to a TList object, transferring ownership to the caller. ; Definition at line 644 of file TPackMgr.cxx. ◆ GetLock(). TLockPath * TPackMgr::GetLock ; (; ). inline . Definition at line 65 of file TPackMgr.h. ◆ GetMD5(). TMD5 * TPackMgr::GetMD5 ; (; const char * ; pack). Get MD5 checksum of the PAR file corresponding to given package Returns a pointer ",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:17390,Availability,error,error,17390,"t_t TPackMgr::Clean ; (; const char * ; pack). Clean dir for package 'pack' Return -1 in case of error, 0 otherwise. ; Definition at line 576 of file TPackMgr.cxx. ◆ DeclFileName(). static const char * TPackMgr::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 106 of file TPackMgr.h. ◆ FindParPath(). Int_t TPackMgr::FindParPath ; (; TPackMgr * ; packmgr, . const char * ; pack, . TString & ; par . ). static . Get the full path to PAR, looking also in the global dirs. ; Returns -1 if not found, 0 if available in global dirs, 1 if it can be uploaded from the local package dir. For the cases >= 0, par is filled with the path of the PAR file ; Definition at line 934 of file TPackMgr.cxx. ◆ GetDir(). const char * TPackMgr::GetDir ; (; ); const. inline . Definition at line 77 of file TPackMgr.h. ◆ GetDownloadDir(). Int_t TPackMgr::GetDownloadDir ; (; TString & ; dldir). Method to get the download dir; create if not existing Return -1 in case of error (not found; not created), 0 otherwise. ; Definition at line 534 of file TPackMgr.cxx. ◆ GetEnabledPackages(). void TPackMgr::GetEnabledPackages ; (; TString & ; packlist). Method to get a semi-colon separated list with the names of the enabled packages. ; Definition at line 501 of file TPackMgr.cxx. ◆ GetList(). TList * TPackMgr::GetList ; (; ); const. Get list of available packages Returns a pointer to a TList object, transferring ownership to the caller. ; Definition at line 621 of file TPackMgr.cxx. ◆ GetListOfEnabled(). TList * TPackMgr::GetListOfEnabled ; (; ); const. Get list of enabled packages Returns a pointer to a TList object, transferring ownership to the caller. ; Definition at line 644 of file TPackMgr.cxx. ◆ GetLock(). TLockPath * TPackMgr::GetLock ; (; ). inline . Definition at line 65 of file TPackMgr.h. ◆ GetMD5(). TMD5 * TPackMgr::GetMD5 ; (; const char * ; pack). Get MD5 checksum of the PAR file corresponding to given package Returns a pointer ",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:17763,Availability,avail,available,17763,"char * ; pack, . TString & ; par . ). static . Get the full path to PAR, looking also in the global dirs. ; Returns -1 if not found, 0 if available in global dirs, 1 if it can be uploaded from the local package dir. For the cases >= 0, par is filled with the path of the PAR file ; Definition at line 934 of file TPackMgr.cxx. ◆ GetDir(). const char * TPackMgr::GetDir ; (; ); const. inline . Definition at line 77 of file TPackMgr.h. ◆ GetDownloadDir(). Int_t TPackMgr::GetDownloadDir ; (; TString & ; dldir). Method to get the download dir; create if not existing Return -1 in case of error (not found; not created), 0 otherwise. ; Definition at line 534 of file TPackMgr.cxx. ◆ GetEnabledPackages(). void TPackMgr::GetEnabledPackages ; (; TString & ; packlist). Method to get a semi-colon separated list with the names of the enabled packages. ; Definition at line 501 of file TPackMgr.cxx. ◆ GetList(). TList * TPackMgr::GetList ; (; ); const. Get list of available packages Returns a pointer to a TList object, transferring ownership to the caller. ; Definition at line 621 of file TPackMgr.cxx. ◆ GetListOfEnabled(). TList * TPackMgr::GetListOfEnabled ; (; ); const. Get list of enabled packages Returns a pointer to a TList object, transferring ownership to the caller. ; Definition at line 644 of file TPackMgr.cxx. ◆ GetLock(). TLockPath * TPackMgr::GetLock ; (; ). inline . Definition at line 65 of file TPackMgr.h. ◆ GetMD5(). TMD5 * TPackMgr::GetMD5 ; (; const char * ; pack). Get MD5 checksum of the PAR file corresponding to given package Returns a pointer to a TMD5 object, transferring ownership to the caller. ; Definition at line 692 of file TPackMgr.cxx. ◆ GetName(). const char * TPackMgr::GetName ; (; ); const. inlineoverridevirtual . Returns name of object. ; This default method returns the class name. Classes that give objects a name should override this method. ; Reimplemented from TNamed.; Definition at line 61 of file TPackMgr.h. ◆ GetPackDir(). Int_t TPackMgr::GetPack",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:18934,Availability,error,error,18934,"ed ; (; ); const. Get list of enabled packages Returns a pointer to a TList object, transferring ownership to the caller. ; Definition at line 644 of file TPackMgr.cxx. ◆ GetLock(). TLockPath * TPackMgr::GetLock ; (; ). inline . Definition at line 65 of file TPackMgr.h. ◆ GetMD5(). TMD5 * TPackMgr::GetMD5 ; (; const char * ; pack). Get MD5 checksum of the PAR file corresponding to given package Returns a pointer to a TMD5 object, transferring ownership to the caller. ; Definition at line 692 of file TPackMgr.cxx. ◆ GetName(). const char * TPackMgr::GetName ; (; ); const. inlineoverridevirtual . Returns name of object. ; This default method returns the class name. Classes that give objects a name should override this method. ; Reimplemented from TNamed.; Definition at line 61 of file TPackMgr.h. ◆ GetPackDir(). Int_t TPackMgr::GetPackDir ; (; const char * ; pack, . TString & ; pdir . ). Method to get the path of the dir for package 'pack'. ; Return -1 in case of error (not found), 0 otherwise ; Definition at line 487 of file TPackMgr.cxx. ◆ GetPackMgr(). TPackMgr * TPackMgr::GetPackMgr ; (; const char * ; pack, . TPackMgr * ; packmgr = nullptr . ). static . Get the package manager having 'pack'; priority is given to packmgr, if defined. ; Returns packmgr or nullptr ; Definition at line 912 of file TPackMgr.cxx. ◆ GetParPath(). Int_t TPackMgr::GetParPath ; (; const char * ; pack, . TString & ; path . ). Method to get the path of the PAR file for package 'pack'. ; Return -1 in case of error (not found), 0 otherwise ; Definition at line 521 of file TPackMgr.cxx. ◆ GetTitle(). const char * TPackMgr::GetTitle ; (; ); const. inlineoverridevirtual . Returns title of object. ; This default method returns the class title (i.e. description). Classes that give objects a title should override this method. ; Reimplemented from TNamed.; Definition at line 63 of file TPackMgr.h. ◆ Has(). Bool_t TPackMgr::Has ; (; const char * ; pack). Method to check if this package manager has pack",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:19465,Availability,error,error,19465," const char * TPackMgr::GetName ; (; ); const. inlineoverridevirtual . Returns name of object. ; This default method returns the class name. Classes that give objects a name should override this method. ; Reimplemented from TNamed.; Definition at line 61 of file TPackMgr.h. ◆ GetPackDir(). Int_t TPackMgr::GetPackDir ; (; const char * ; pack, . TString & ; pdir . ). Method to get the path of the dir for package 'pack'. ; Return -1 in case of error (not found), 0 otherwise ; Definition at line 487 of file TPackMgr.cxx. ◆ GetPackMgr(). TPackMgr * TPackMgr::GetPackMgr ; (; const char * ; pack, . TPackMgr * ; packmgr = nullptr . ). static . Get the package manager having 'pack'; priority is given to packmgr, if defined. ; Returns packmgr or nullptr ; Definition at line 912 of file TPackMgr.cxx. ◆ GetParPath(). Int_t TPackMgr::GetParPath ; (; const char * ; pack, . TString & ; path . ). Method to get the path of the PAR file for package 'pack'. ; Return -1 in case of error (not found), 0 otherwise ; Definition at line 521 of file TPackMgr.cxx. ◆ GetTitle(). const char * TPackMgr::GetTitle ; (; ); const. inlineoverridevirtual . Returns title of object. ; This default method returns the class title (i.e. description). Classes that give objects a title should override this method. ; Reimplemented from TNamed.; Definition at line 63 of file TPackMgr.h. ◆ Has(). Bool_t TPackMgr::Has ; (; const char * ; pack). Method to check if this package manager has package 'pack'. ; Return kTRUE or kFALSE ; Definition at line 458 of file TPackMgr.cxx. ◆ Install(). Int_t TPackMgr::Install ; (; const char * ; parpath, . Bool_t ; rmold = kFALSE . ). Install package from par (unpack the file in the directory); par can be an URL for remote retrieval. ; If rmold is kTRUE an existing version of the package is removed if existing. Returns 0 on success, <0 otherwise ; Definition at line 766 of file TPackMgr.cxx. ◆ IsA(). TClass * TPackMgr::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass des",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:21332,Availability,error,error,21332,"if existing. Returns 0 on success, <0 otherwise ; Definition at line 766 of file TPackMgr.cxx. ◆ IsA(). TClass * TPackMgr::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TNamed.; Definition at line 106 of file TPackMgr.h. ◆ IsEnabled(). Bool_t TPackMgr::IsEnabled ; (; const char * ; pack, . TPackMgr * ; packmgr = nullptr . ). static . Check if the package is enabled; priority is given to packmgr, if defined. ; Returns kTRUE if enabled ; Definition at line 961 of file TPackMgr.cxx. ◆ IsInDir(). Bool_t TPackMgr::IsInDir ; (; const char * ; path). Method to check if 'path' is in the managed directory Return kTRUE or kFALSE. ; Definition at line 478 of file TPackMgr.cxx. ◆ IsPackageEnabled(). Bool_t TPackMgr::IsPackageEnabled ; (; const char * ; pack). inline . Definition at line 82 of file TPackMgr.h. ◆ Load() [1/2]. Int_t TPackMgr::Load ; (; const char * ; pack, . const char * ; opts . ). Method to load a package taking an option const char * Return -1 on error, 0 otherwise. ; Definition at line 206 of file TPackMgr.cxx. ◆ Load() [2/2]. Int_t TPackMgr::Load ; (; const char * ; pack, . TList * ; optls = 0 . ). Method to load a package taking an option list Return -1 on error, 0 otherwise. ; Definition at line 220 of file TPackMgr.cxx. ◆ Log(). void TPackMgr::Log ; (; const char * ; msg). private . Wrapper to notofuer / logger. ; Definition at line 73 of file TPackMgr.cxx. ◆ operator=(). TPackMgr & TPackMgr::operator= ; (; const TPackMgr & ; ). private . ◆ ReadMD5(). TMD5 * TPackMgr::ReadMD5 ; (; const char * ; pack). Read MD5 checksum of the PAR file from the PROOF-INF/md5.txt file. ; Returns a pointer to a TMD5 object, transferring ownership to the caller ; Definition at line 708 of file TPackMgr.cxx. ◆ RegisterGlobalPath(). Int_t TPackMgr::RegisterGlobalPath ; (; const char * ; paths). static . Parse one or more paths as possible sources of packages Returns number of paths added; or -1 in case of problems. ; De",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:21549,Availability,error,error,21549," from TNamed.; Definition at line 106 of file TPackMgr.h. ◆ IsEnabled(). Bool_t TPackMgr::IsEnabled ; (; const char * ; pack, . TPackMgr * ; packmgr = nullptr . ). static . Check if the package is enabled; priority is given to packmgr, if defined. ; Returns kTRUE if enabled ; Definition at line 961 of file TPackMgr.cxx. ◆ IsInDir(). Bool_t TPackMgr::IsInDir ; (; const char * ; path). Method to check if 'path' is in the managed directory Return kTRUE or kFALSE. ; Definition at line 478 of file TPackMgr.cxx. ◆ IsPackageEnabled(). Bool_t TPackMgr::IsPackageEnabled ; (; const char * ; pack). inline . Definition at line 82 of file TPackMgr.h. ◆ Load() [1/2]. Int_t TPackMgr::Load ; (; const char * ; pack, . const char * ; opts . ). Method to load a package taking an option const char * Return -1 on error, 0 otherwise. ; Definition at line 206 of file TPackMgr.cxx. ◆ Load() [2/2]. Int_t TPackMgr::Load ; (; const char * ; pack, . TList * ; optls = 0 . ). Method to load a package taking an option list Return -1 on error, 0 otherwise. ; Definition at line 220 of file TPackMgr.cxx. ◆ Log(). void TPackMgr::Log ; (; const char * ; msg). private . Wrapper to notofuer / logger. ; Definition at line 73 of file TPackMgr.cxx. ◆ operator=(). TPackMgr & TPackMgr::operator= ; (; const TPackMgr & ; ). private . ◆ ReadMD5(). TMD5 * TPackMgr::ReadMD5 ; (; const char * ; pack). Read MD5 checksum of the PAR file from the PROOF-INF/md5.txt file. ; Returns a pointer to a TMD5 object, transferring ownership to the caller ; Definition at line 708 of file TPackMgr.cxx. ◆ RegisterGlobalPath(). Int_t TPackMgr::RegisterGlobalPath ; (; const char * ; paths). static . Parse one or more paths as possible sources of packages Returns number of paths added; or -1 in case of problems. ; Definition at line 872 of file TPackMgr.cxx. ◆ Remove(). Int_t TPackMgr::Remove ; (; const char * ; pack = 0, . Bool_t ; dolock = kTRUE . ). Remove package 'pack' If 'pack' is null or empty all packages are cleared. ; Defin",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:23260,Availability,avail,available,23260,"hs added; or -1 in case of problems. ; Definition at line 872 of file TPackMgr.cxx. ◆ Remove(). Int_t TPackMgr::Remove ; (; const char * ; pack = 0, . Bool_t ; dolock = kTRUE . ). Remove package 'pack' If 'pack' is null or empty all packages are cleared. ; Definition at line 593 of file TPackMgr.cxx. ◆ SetLogger(). void TPackMgr::SetLogger ; (; TPackMgrLog_t ; logger). inline . Definition at line 67 of file TPackMgr.h. ◆ SetName(). void TPackMgr::SetName ; (; const char * ; name). inlineoverridevirtual . Set the name of the TNamed. ; WARNING: if the object is a member of a THashTable or THashList container the container must be Rehash()'ed after SetName(). For example the list of objects in the current directory is a THashList. ; Reimplemented from TNamed.; Definition at line 62 of file TPackMgr.h. ◆ SetPrefix(). void TPackMgr::SetPrefix ; (; const char * ; pfx). inline . Definition at line 68 of file TPackMgr.h. ◆ Show(). void TPackMgr::Show ; (; const char * ; title = 0). Show available packages. ; Definition at line 548 of file TPackMgr.cxx. ◆ ShowEnabled(). void TPackMgr::ShowEnabled ; (; const char * ; title = 0). Show enabled packages. ; Definition at line 662 of file TPackMgr.cxx. ◆ Streamer(). void TPackMgr::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TNamed. ◆ StreamerNVirtual(). void TPackMgr::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 106 of file TPackMgr.h. ◆ Unload(). Int_t TPackMgr::Unload ; (; const char * ; pack). Method to unload a package. ; Return -1 on error, 0 otherwise ; Definition at line 411 of file TPackMgr.cxx. ◆ Unpack(). Int_t TPackMgr::Unpack ; (; const char * ; pack, . TMD5 * ; sum = 0 . ). Read MD5 checksum of the PAR file from the PROOF-INF/md5.txt file. ; Returns a pointer to a TMD5 object, transferring ownership to the caller ; Definition at line 723 of file TPackMgr.cxx. Member Data Documentation. ◆ fDir. TString TPackMgr:",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:23875,Availability,error,error,23875,"t be Rehash()'ed after SetName(). For example the list of objects in the current directory is a THashList. ; Reimplemented from TNamed.; Definition at line 62 of file TPackMgr.h. ◆ SetPrefix(). void TPackMgr::SetPrefix ; (; const char * ; pfx). inline . Definition at line 68 of file TPackMgr.h. ◆ Show(). void TPackMgr::Show ; (; const char * ; title = 0). Show available packages. ; Definition at line 548 of file TPackMgr.cxx. ◆ ShowEnabled(). void TPackMgr::ShowEnabled ; (; const char * ; title = 0). Show enabled packages. ; Definition at line 662 of file TPackMgr.cxx. ◆ Streamer(). void TPackMgr::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TNamed. ◆ StreamerNVirtual(). void TPackMgr::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 106 of file TPackMgr.h. ◆ Unload(). Int_t TPackMgr::Unload ; (; const char * ; pack). Method to unload a package. ; Return -1 on error, 0 otherwise ; Definition at line 411 of file TPackMgr.cxx. ◆ Unpack(). Int_t TPackMgr::Unpack ; (; const char * ; pack, . TMD5 * ; sum = 0 . ). Read MD5 checksum of the PAR file from the PROOF-INF/md5.txt file. ; Returns a pointer to a TMD5 object, transferring ownership to the caller ; Definition at line 723 of file TPackMgr.cxx. Member Data Documentation. ◆ fDir. TString TPackMgr::fDir. private . Definition at line 44 of file TPackMgr.h. ◆ fEnabledPackages. TList* TPackMgr::fEnabledPackages. private . Definition at line 47 of file TPackMgr.h. ◆ fgGlobalPackMgrList. THashList * TPackMgr::fgGlobalPackMgrList = 0. staticprivate . Definition at line 49 of file TPackMgr.h. ◆ fLock. TLockPath TPackMgr::fLock. private . Definition at line 45 of file TPackMgr.h. ◆ fLogger. TPackMgrLog_t TPackMgr::fLogger. private . Definition at line 42 of file TPackMgr.h. ◆ fName. TString TPackMgr::fName. private . Definition at line 43 of file TPackMgr.h. ◆ fPfx. TString TPackMgr::fPfx. private . Definition at line 46 of ",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:7369,Integrability,message,message,7369,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:7910,Integrability,message,message,7910,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:8900,Integrability,message,message,8900,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:11994,Integrability,message,message,11994,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t FindParPath (TPackMgr *packmgr, const char *pack, TString &par);  Get the full path to PAR, looking also in the global dirs. ;  ; stati",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:12367,Integrability,message,message,12367," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t FindParPath (TPackMgr *packmgr, const char *pack, TString &par);  Get the full path to PAR, looking also in the global dirs. ;  ; static TPackMgr * GetPackMgr (const char *pack, TPackMgr *packmgr=nullptr);  Get the package manager having 'pack'; priority is given to packmgr, if defined. ;  ; static Bool_t IsEnabled (const char *pack, TPackMgr *packmgr=nullptr);  Check if the package is enabled; priority is given to packmgr, if defined. ;  ; static Int_t RegisterGlobalPath (const char *paths);  Parse one o",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:681,Modifiability,inherit,inherited,681,". ROOT: TPackMgr Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; TPackMgr Class ReferencePROOF » PROOF kernel Libraries. ; The PROOF package manager contains tools to manage packages. ; This class has been created to eliminate duplications, and to allow for standalone usage. ; Definition at line 37 of file TPackMgr.h. Public Types; enum  ECheckVersionOpt { kDontCheck = 0; , kCheckROOT = 1; , kCheckGIT = 2; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TPackMgr (const char *dir, const char *key=""L0"");  Create a PROOF package manager. ;  ;  ~TPackMgr () override;  Destroy a TPackMgr instance. ;  ; Int_t Build (const char *pack, Int_t opt=TPackMgr::kCheckROOT);  Method to build a package. ;  ; Int_t Clean (const char *pack);  Clean dir for package 'pack' Return -1 in case of error, 0 otherwise. ;  ; const char * GetDir () const;  ; Int_t GetDownloadDir (TString &dldir);  Method to get the download dir; create if not existing Return -1 in case of error (not found; not created), 0 otherwise. ;  ; void GetEnabledPackages (TString &packlist);  Method to get a semi-colon separated list with the names of the enabled p",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:4495,Modifiability,inherit,inherited,4495," taking an option list Return -1 on error, 0 otherwise. ;  ; TMD5 * ReadMD5 (const char *pack);  Read MD5 checksum of the PAR file from the PROOF-INF/md5.txt file. ;  ; Int_t Remove (const char *pack=0, Bool_t dolock=kTRUE);  Remove package 'pack' If 'pack' is null or empty all packages are cleared. ;  ; void SetLogger (TPackMgrLog_t logger);  ; void SetName (const char *name) override;  Set the name of the TNamed. ;  ; void SetPrefix (const char *pfx);  ; void Show (const char *title=0);  Show available packages. ;  ; void ShowEnabled (const char *title=0);  Show enabled packages. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t Unload (const char *pack);  Method to unload a package. ;  ; Int_t Unpack (const char *pack, TMD5 *sum=0);  Read MD5 checksum of the PAR file from the PROOF-INF/md5.txt file. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void Set",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:5906,Modifiability,inherit,inherited,5906," Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:6999,Modifiability,inherit,inheritance,6999,"  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:8998,Modifiability,inherit,inherits,8998,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:9115,Modifiability,inherit,inherits,9115,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:13499,Modifiability,inherit,inherited,13499,";  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t FindParPath (TPackMgr *packmgr, const char *pack, TString &par);  Get the full path to PAR, looking also in the global dirs. ;  ; static TPackMgr * GetPackMgr (const char *pack, TPackMgr *packmgr=nullptr);  Get the package manager having 'pack'; priority is given to packmgr, if defined. ;  ; static Bool_t IsEnabled (const char *pack, TPackMgr *packmgr=nullptr);  Check if the package is enabled; priority is given to packmgr, if defined. ;  ; static Int_t RegisterGlobalPath (const char *paths);  Parse one or more paths as possible sources of packages Returns number of paths added; or -1 in case of problems. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TPackMgr (const TPackMgr &);  ; void Log (const char *msg);  Wrapper to notofuer / logger. ;  ; TPackMgr & operator= (const TPackMgr &);  . Private Attributes; TString fDir;  ; TList * fEnabledPackages;  ; TLockPath fLock;  ; TPackMgrLog_t fLogger;  ; TString fName;  ; TString fPfx;  . Static Private Attributes; static THashList * fgGlobalPackMgrList = 0;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Prot",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:13709,Modifiability,inherit,inherited,13709,";  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t FindParPath (TPackMgr *packmgr, const char *pack, TString &par);  Get the full path to PAR, looking also in the global dirs. ;  ; static TPackMgr * GetPackMgr (const char *pack, TPackMgr *packmgr=nullptr);  Get the package manager having 'pack'; priority is given to packmgr, if defined. ;  ; static Bool_t IsEnabled (const char *pack, TPackMgr *packmgr=nullptr);  Check if the package is enabled; priority is given to packmgr, if defined. ;  ; static Int_t RegisterGlobalPath (const char *paths);  Parse one or more paths as possible sources of packages Returns number of paths added; or -1 in case of problems. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TPackMgr (const TPackMgr &);  ; void Log (const char *msg);  Wrapper to notofuer / logger. ;  ; TPackMgr & operator= (const TPackMgr &);  . Private Attributes; TString fDir;  ; TList * fEnabledPackages;  ; TLockPath fLock;  ; TPackMgrLog_t fLogger;  ; TString fName;  ; TString fPfx;  . Static Private Attributes; static THashList * fgGlobalPackMgrList = 0;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Prot",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:14630,Modifiability,inherit,inherited,14630," static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TPackMgr (const TPackMgr &);  ; void Log (const char *msg);  Wrapper to notofuer / logger. ;  ; TPackMgr & operator= (const TPackMgr &);  . Private Attributes; TString fDir;  ; TList * fEnabledPackages;  ; TLockPath fLock;  ; TPackMgrLog_t fLogger;  ; TString fName;  ; TString fPfx;  . Static Private Attributes; static THashList * fgGlobalPackMgrList = 0;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TPackMgr.h>. Inheritance diagram for TPackMgr:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ ECheckVersionOpt. enum TPackMgr::ECheckVersionOpt. EnumeratorkDontCheck ; kCheckROOT ; kCheckGIT . Definition at line 39 of file TPackMgr.h. Constructor & Destructor Documentation. ◆ TPackMgr() [1/2]. TPackMgr::TPackMgr ; (; const TPackMgr & ; ). private . ◆ TPackMgr() [2/2]. TPackMgr::TPackMgr ; (; const char * ; dir, . const char * ; key = ""L0"" . ). Create a PROOF package manager. ; Definition at line 49 of file TPackMgr.cxx. ◆ ~TPackMgr(). TPackMgr::~TPackMgr ; (; ). override . Destroy a TPackMgr instance. ; Definition at line 64 of file TP",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:14729,Modifiability,inherit,inherited,14729," static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TPackMgr (const TPackMgr &);  ; void Log (const char *msg);  Wrapper to notofuer / logger. ;  ; TPackMgr & operator= (const TPackMgr &);  . Private Attributes; TString fDir;  ; TList * fEnabledPackages;  ; TLockPath fLock;  ; TPackMgrLog_t fLogger;  ; TString fName;  ; TString fPfx;  . Static Private Attributes; static THashList * fgGlobalPackMgrList = 0;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TPackMgr.h>. Inheritance diagram for TPackMgr:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ ECheckVersionOpt. enum TPackMgr::ECheckVersionOpt. EnumeratorkDontCheck ; kCheckROOT ; kCheckGIT . Definition at line 39 of file TPackMgr.h. Constructor & Destructor Documentation. ◆ TPackMgr() [1/2]. TPackMgr::TPackMgr ; (; const TPackMgr & ; ). private . ◆ TPackMgr() [2/2]. TPackMgr::TPackMgr ; (; const char * ; dir, . const char * ; key = ""L0"" . ). Create a PROOF package manager. ; Definition at line 49 of file TPackMgr.cxx. ◆ ~TPackMgr(). TPackMgr::~TPackMgr ; (; ). override . Destroy a TPackMgr instance. ; Definition at line 64 of file TP",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:14934,Modifiability,inherit,inherited,14934,"r only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TPackMgr (const TPackMgr &);  ; void Log (const char *msg);  Wrapper to notofuer / logger. ;  ; TPackMgr & operator= (const TPackMgr &);  . Private Attributes; TString fDir;  ; TList * fEnabledPackages;  ; TLockPath fLock;  ; TPackMgrLog_t fLogger;  ; TString fName;  ; TString fPfx;  . Static Private Attributes; static THashList * fgGlobalPackMgrList = 0;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TPackMgr.h>. Inheritance diagram for TPackMgr:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ ECheckVersionOpt. enum TPackMgr::ECheckVersionOpt. EnumeratorkDontCheck ; kCheckROOT ; kCheckGIT . Definition at line 39 of file TPackMgr.h. Constructor & Destructor Documentation. ◆ TPackMgr() [1/2]. TPackMgr::TPackMgr ; (; const TPackMgr & ; ). private . ◆ TPackMgr() [2/2]. TPackMgr::TPackMgr ; (; const char * ; dir, . const char * ; key = ""L0"" . ). Create a PROOF package manager. ; Definition at line 49 of file TPackMgr.cxx. ◆ ~TPackMgr(). TPackMgr::~TPackMgr ; (; ). override . Destroy a TPackMgr instance. ; Definition at line 64 of file TPackMgr.cxx. Member Function Documentation. ◆ Build(). Int_t TPackMgr::Build ; (; const char * ; pack, . Int_t ; opt = TPackMgr::kCheckROOT . ). Method to build a package. ; Return -1 on error, 0 otherwise ",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:3393,Performance,load,load,3393,"m of the PAR file corresponding to given package Returns a pointer to a TMD5 object, transferring ownership to the caller. ;  ; const char * GetName () const override;  Returns name of object. ;  ; Int_t GetPackDir (const char *pack, TString &pdir);  Method to get the path of the dir for package 'pack'. ;  ; Int_t GetParPath (const char *pack, TString &path);  Method to get the path of the PAR file for package 'pack'. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; Bool_t Has (const char *pack);  Method to check if this package manager has package 'pack'. ;  ; Int_t Install (const char *par, Bool_t rmold=kFALSE);  Install package from par (unpack the file in the directory); par can be an URL for remote retrieval. ;  ; TClass * IsA () const override;  ; Bool_t IsInDir (const char *path);  Method to check if 'path' is in the managed directory Return kTRUE or kFALSE. ;  ; Bool_t IsPackageEnabled (const char *pack);  ; Int_t Load (const char *pack, const char *opts);  Method to load a package taking an option const char * Return -1 on error, 0 otherwise. ;  ; Int_t Load (const char *pack, TList *optls=0);  Method to load a package taking an option list Return -1 on error, 0 otherwise. ;  ; TMD5 * ReadMD5 (const char *pack);  Read MD5 checksum of the PAR file from the PROOF-INF/md5.txt file. ;  ; Int_t Remove (const char *pack=0, Bool_t dolock=kTRUE);  Remove package 'pack' If 'pack' is null or empty all packages are cleared. ;  ; void SetLogger (TPackMgrLog_t logger);  ; void SetName (const char *name) override;  Set the name of the TNamed. ;  ; void SetPrefix (const char *pfx);  ; void Show (const char *title=0);  Show available packages. ;  ; void ShowEnabled (const char *title=0);  Show enabled packages. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t Unload (const char *pack);  Method to unload a package. ;  ; Int_t Unpack (const char",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:3534,Performance,load,load,3534,"rride;  Returns name of object. ;  ; Int_t GetPackDir (const char *pack, TString &pdir);  Method to get the path of the dir for package 'pack'. ;  ; Int_t GetParPath (const char *pack, TString &path);  Method to get the path of the PAR file for package 'pack'. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; Bool_t Has (const char *pack);  Method to check if this package manager has package 'pack'. ;  ; Int_t Install (const char *par, Bool_t rmold=kFALSE);  Install package from par (unpack the file in the directory); par can be an URL for remote retrieval. ;  ; TClass * IsA () const override;  ; Bool_t IsInDir (const char *path);  Method to check if 'path' is in the managed directory Return kTRUE or kFALSE. ;  ; Bool_t IsPackageEnabled (const char *pack);  ; Int_t Load (const char *pack, const char *opts);  Method to load a package taking an option const char * Return -1 on error, 0 otherwise. ;  ; Int_t Load (const char *pack, TList *optls=0);  Method to load a package taking an option list Return -1 on error, 0 otherwise. ;  ; TMD5 * ReadMD5 (const char *pack);  Read MD5 checksum of the PAR file from the PROOF-INF/md5.txt file. ;  ; Int_t Remove (const char *pack=0, Bool_t dolock=kTRUE);  Remove package 'pack' If 'pack' is null or empty all packages are cleared. ;  ; void SetLogger (TPackMgrLog_t logger);  ; void SetName (const char *name) override;  Set the name of the TNamed. ;  ; void SetPrefix (const char *pfx);  ; void Show (const char *title=0);  Show available packages. ;  ; void ShowEnabled (const char *title=0);  Show enabled packages. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t Unload (const char *pack);  Method to unload a package. ;  ; Int_t Unpack (const char *pack, TMD5 *sum=0);  Read MD5 checksum of the PAR file from the PROOF-INF/md5.txt file. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNa",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:21274,Performance,load,load,21274,"if existing. Returns 0 on success, <0 otherwise ; Definition at line 766 of file TPackMgr.cxx. ◆ IsA(). TClass * TPackMgr::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TNamed.; Definition at line 106 of file TPackMgr.h. ◆ IsEnabled(). Bool_t TPackMgr::IsEnabled ; (; const char * ; pack, . TPackMgr * ; packmgr = nullptr . ). static . Check if the package is enabled; priority is given to packmgr, if defined. ; Returns kTRUE if enabled ; Definition at line 961 of file TPackMgr.cxx. ◆ IsInDir(). Bool_t TPackMgr::IsInDir ; (; const char * ; path). Method to check if 'path' is in the managed directory Return kTRUE or kFALSE. ; Definition at line 478 of file TPackMgr.cxx. ◆ IsPackageEnabled(). Bool_t TPackMgr::IsPackageEnabled ; (; const char * ; pack). inline . Definition at line 82 of file TPackMgr.h. ◆ Load() [1/2]. Int_t TPackMgr::Load ; (; const char * ; pack, . const char * ; opts . ). Method to load a package taking an option const char * Return -1 on error, 0 otherwise. ; Definition at line 206 of file TPackMgr.cxx. ◆ Load() [2/2]. Int_t TPackMgr::Load ; (; const char * ; pack, . TList * ; optls = 0 . ). Method to load a package taking an option list Return -1 on error, 0 otherwise. ; Definition at line 220 of file TPackMgr.cxx. ◆ Log(). void TPackMgr::Log ; (; const char * ; msg). private . Wrapper to notofuer / logger. ; Definition at line 73 of file TPackMgr.cxx. ◆ operator=(). TPackMgr & TPackMgr::operator= ; (; const TPackMgr & ; ). private . ◆ ReadMD5(). TMD5 * TPackMgr::ReadMD5 ; (; const char * ; pack). Read MD5 checksum of the PAR file from the PROOF-INF/md5.txt file. ; Returns a pointer to a TMD5 object, transferring ownership to the caller ; Definition at line 708 of file TPackMgr.cxx. ◆ RegisterGlobalPath(). Int_t TPackMgr::RegisterGlobalPath ; (; const char * ; paths). static . Parse one or more paths as possible sources of packages Returns number of paths added; or -1 in case of problems. ; De",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:21499,Performance,load,load,21499," from TNamed.; Definition at line 106 of file TPackMgr.h. ◆ IsEnabled(). Bool_t TPackMgr::IsEnabled ; (; const char * ; pack, . TPackMgr * ; packmgr = nullptr . ). static . Check if the package is enabled; priority is given to packmgr, if defined. ; Returns kTRUE if enabled ; Definition at line 961 of file TPackMgr.cxx. ◆ IsInDir(). Bool_t TPackMgr::IsInDir ; (; const char * ; path). Method to check if 'path' is in the managed directory Return kTRUE or kFALSE. ; Definition at line 478 of file TPackMgr.cxx. ◆ IsPackageEnabled(). Bool_t TPackMgr::IsPackageEnabled ; (; const char * ; pack). inline . Definition at line 82 of file TPackMgr.h. ◆ Load() [1/2]. Int_t TPackMgr::Load ; (; const char * ; pack, . const char * ; opts . ). Method to load a package taking an option const char * Return -1 on error, 0 otherwise. ; Definition at line 206 of file TPackMgr.cxx. ◆ Load() [2/2]. Int_t TPackMgr::Load ; (; const char * ; pack, . TList * ; optls = 0 . ). Method to load a package taking an option list Return -1 on error, 0 otherwise. ; Definition at line 220 of file TPackMgr.cxx. ◆ Log(). void TPackMgr::Log ; (; const char * ; msg). private . Wrapper to notofuer / logger. ; Definition at line 73 of file TPackMgr.cxx. ◆ operator=(). TPackMgr & TPackMgr::operator= ; (; const TPackMgr & ; ). private . ◆ ReadMD5(). TMD5 * TPackMgr::ReadMD5 ; (; const char * ; pack). Read MD5 checksum of the PAR file from the PROOF-INF/md5.txt file. ; Returns a pointer to a TMD5 object, transferring ownership to the caller ; Definition at line 708 of file TPackMgr.cxx. ◆ RegisterGlobalPath(). Int_t TPackMgr::RegisterGlobalPath ; (; const char * ; paths). static . Parse one or more paths as possible sources of packages Returns number of paths added; or -1 in case of problems. ; Definition at line 872 of file TPackMgr.cxx. ◆ Remove(). Int_t TPackMgr::Remove ; (; const char * ; pack = 0, . Bool_t ; dolock = kTRUE . ). Remove package 'pack' If 'pack' is null or empty all packages are cleared. ; Defin",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:2368,Security,checksum,checksum,2368,"OF package manager. ;  ;  ~TPackMgr () override;  Destroy a TPackMgr instance. ;  ; Int_t Build (const char *pack, Int_t opt=TPackMgr::kCheckROOT);  Method to build a package. ;  ; Int_t Clean (const char *pack);  Clean dir for package 'pack' Return -1 in case of error, 0 otherwise. ;  ; const char * GetDir () const;  ; Int_t GetDownloadDir (TString &dldir);  Method to get the download dir; create if not existing Return -1 in case of error (not found; not created), 0 otherwise. ;  ; void GetEnabledPackages (TString &packlist);  Method to get a semi-colon separated list with the names of the enabled packages. ;  ; TList * GetList () const;  Get list of available packages Returns a pointer to a TList object, transferring ownership to the caller. ;  ; TList * GetListOfEnabled () const;  Get list of enabled packages Returns a pointer to a TList object, transferring ownership to the caller. ;  ; TLockPath * GetLock ();  ; TMD5 * GetMD5 (const char *pack);  Get MD5 checksum of the PAR file corresponding to given package Returns a pointer to a TMD5 object, transferring ownership to the caller. ;  ; const char * GetName () const override;  Returns name of object. ;  ; Int_t GetPackDir (const char *pack, TString &pdir);  Method to get the path of the dir for package 'pack'. ;  ; Int_t GetParPath (const char *pack, TString &path);  Method to get the path of the PAR file for package 'pack'. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; Bool_t Has (const char *pack);  Method to check if this package manager has package 'pack'. ;  ; Int_t Install (const char *par, Bool_t rmold=kFALSE);  Install package from par (unpack the file in the directory); par can be an URL for remote retrieval. ;  ; TClass * IsA () const override;  ; Bool_t IsInDir (const char *path);  Method to check if 'path' is in the managed directory Return kTRUE or kFALSE. ;  ; Bool_t IsPackageEnabled (const char *pack);  ; Int_t Load (const char *pack, const char *opts);  Method to lo",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:3654,Security,checksum,checksum,3654,"the dir for package 'pack'. ;  ; Int_t GetParPath (const char *pack, TString &path);  Method to get the path of the PAR file for package 'pack'. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; Bool_t Has (const char *pack);  Method to check if this package manager has package 'pack'. ;  ; Int_t Install (const char *par, Bool_t rmold=kFALSE);  Install package from par (unpack the file in the directory); par can be an URL for remote retrieval. ;  ; TClass * IsA () const override;  ; Bool_t IsInDir (const char *path);  Method to check if 'path' is in the managed directory Return kTRUE or kFALSE. ;  ; Bool_t IsPackageEnabled (const char *pack);  ; Int_t Load (const char *pack, const char *opts);  Method to load a package taking an option const char * Return -1 on error, 0 otherwise. ;  ; Int_t Load (const char *pack, TList *optls=0);  Method to load a package taking an option list Return -1 on error, 0 otherwise. ;  ; TMD5 * ReadMD5 (const char *pack);  Read MD5 checksum of the PAR file from the PROOF-INF/md5.txt file. ;  ; Int_t Remove (const char *pack=0, Bool_t dolock=kTRUE);  Remove package 'pack' If 'pack' is null or empty all packages are cleared. ;  ; void SetLogger (TPackMgrLog_t logger);  ; void SetName (const char *name) override;  Set the name of the TNamed. ;  ; void SetPrefix (const char *pfx);  ; void Show (const char *title=0);  Show available packages. ;  ; void ShowEnabled (const char *title=0);  Show enabled packages. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t Unload (const char *pack);  Method to unload a package. ;  ; Int_t Unpack (const char *pack, TMD5 *sum=0);  Read MD5 checksum of the PAR file from the PROOF-INF/md5.txt file. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const ",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:4407,Security,checksum,checksum,4407,"package taking an option const char * Return -1 on error, 0 otherwise. ;  ; Int_t Load (const char *pack, TList *optls=0);  Method to load a package taking an option list Return -1 on error, 0 otherwise. ;  ; TMD5 * ReadMD5 (const char *pack);  Read MD5 checksum of the PAR file from the PROOF-INF/md5.txt file. ;  ; Int_t Remove (const char *pack=0, Bool_t dolock=kTRUE);  Remove package 'pack' If 'pack' is null or empty all packages are cleared. ;  ; void SetLogger (TPackMgrLog_t logger);  ; void SetName (const char *name) override;  Set the name of the TNamed. ;  ; void SetPrefix (const char *pfx);  ; void Show (const char *title=0);  Show available packages. ;  ; void ShowEnabled (const char *title=0);  Show enabled packages. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t Unload (const char *pack);  Method to unload a package. ;  ; Int_t Unpack (const char *pack, TMD5 *sum=0);  Read MD5 checksum of the PAR file from the PROOF-INF/md5.txt file. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const ",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:5221,Security,hash,hash,5221,"t. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t Unload (const char *pack);  Method to unload a package. ;  ; Int_t Unpack (const char *pack, TMD5 *sum=0);  Read MD5 checksum of the PAR file from the PROOF-INF/md5.txt file. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely a",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:18300,Security,checksum,checksum,18300,"existing Return -1 in case of error (not found; not created), 0 otherwise. ; Definition at line 534 of file TPackMgr.cxx. ◆ GetEnabledPackages(). void TPackMgr::GetEnabledPackages ; (; TString & ; packlist). Method to get a semi-colon separated list with the names of the enabled packages. ; Definition at line 501 of file TPackMgr.cxx. ◆ GetList(). TList * TPackMgr::GetList ; (; ); const. Get list of available packages Returns a pointer to a TList object, transferring ownership to the caller. ; Definition at line 621 of file TPackMgr.cxx. ◆ GetListOfEnabled(). TList * TPackMgr::GetListOfEnabled ; (; ); const. Get list of enabled packages Returns a pointer to a TList object, transferring ownership to the caller. ; Definition at line 644 of file TPackMgr.cxx. ◆ GetLock(). TLockPath * TPackMgr::GetLock ; (; ). inline . Definition at line 65 of file TPackMgr.h. ◆ GetMD5(). TMD5 * TPackMgr::GetMD5 ; (; const char * ; pack). Get MD5 checksum of the PAR file corresponding to given package Returns a pointer to a TMD5 object, transferring ownership to the caller. ; Definition at line 692 of file TPackMgr.cxx. ◆ GetName(). const char * TPackMgr::GetName ; (; ); const. inlineoverridevirtual . Returns name of object. ; This default method returns the class name. Classes that give objects a name should override this method. ; Reimplemented from TNamed.; Definition at line 61 of file TPackMgr.h. ◆ GetPackDir(). Int_t TPackMgr::GetPackDir ; (; const char * ; pack, . TString & ; pdir . ). Method to get the path of the dir for package 'pack'. ; Return -1 in case of error (not found), 0 otherwise ; Definition at line 487 of file TPackMgr.cxx. ◆ GetPackMgr(). TPackMgr * TPackMgr::GetPackMgr ; (; const char * ; pack, . TPackMgr * ; packmgr = nullptr . ). static . Get the package manager having 'pack'; priority is given to packmgr, if defined. ; Returns packmgr or nullptr ; Definition at line 912 of file TPackMgr.cxx. ◆ GetParPath(). Int_t TPackMgr::GetParPath ; (; const char * ; pack, .",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:21913,Security,checksum,checksum,21913,"f 'path' is in the managed directory Return kTRUE or kFALSE. ; Definition at line 478 of file TPackMgr.cxx. ◆ IsPackageEnabled(). Bool_t TPackMgr::IsPackageEnabled ; (; const char * ; pack). inline . Definition at line 82 of file TPackMgr.h. ◆ Load() [1/2]. Int_t TPackMgr::Load ; (; const char * ; pack, . const char * ; opts . ). Method to load a package taking an option const char * Return -1 on error, 0 otherwise. ; Definition at line 206 of file TPackMgr.cxx. ◆ Load() [2/2]. Int_t TPackMgr::Load ; (; const char * ; pack, . TList * ; optls = 0 . ). Method to load a package taking an option list Return -1 on error, 0 otherwise. ; Definition at line 220 of file TPackMgr.cxx. ◆ Log(). void TPackMgr::Log ; (; const char * ; msg). private . Wrapper to notofuer / logger. ; Definition at line 73 of file TPackMgr.cxx. ◆ operator=(). TPackMgr & TPackMgr::operator= ; (; const TPackMgr & ; ). private . ◆ ReadMD5(). TMD5 * TPackMgr::ReadMD5 ; (; const char * ; pack). Read MD5 checksum of the PAR file from the PROOF-INF/md5.txt file. ; Returns a pointer to a TMD5 object, transferring ownership to the caller ; Definition at line 708 of file TPackMgr.cxx. ◆ RegisterGlobalPath(). Int_t TPackMgr::RegisterGlobalPath ; (; const char * ; paths). static . Parse one or more paths as possible sources of packages Returns number of paths added; or -1 in case of problems. ; Definition at line 872 of file TPackMgr.cxx. ◆ Remove(). Int_t TPackMgr::Remove ; (; const char * ; pack = 0, . Bool_t ; dolock = kTRUE . ). Remove package 'pack' If 'pack' is null or empty all packages are cleared. ; Definition at line 593 of file TPackMgr.cxx. ◆ SetLogger(). void TPackMgr::SetLogger ; (; TPackMgrLog_t ; logger). inline . Definition at line 67 of file TPackMgr.h. ◆ SetName(). void TPackMgr::SetName ; (; const char * ; name). inlineoverridevirtual . Set the name of the TNamed. ; WARNING: if the object is a member of a THashTable or THashList container the container must be Rehash()'ed after SetName(). F",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:24035,Security,checksum,checksum,24035,"2 of file TPackMgr.h. ◆ SetPrefix(). void TPackMgr::SetPrefix ; (; const char * ; pfx). inline . Definition at line 68 of file TPackMgr.h. ◆ Show(). void TPackMgr::Show ; (; const char * ; title = 0). Show available packages. ; Definition at line 548 of file TPackMgr.cxx. ◆ ShowEnabled(). void TPackMgr::ShowEnabled ; (; const char * ; title = 0). Show enabled packages. ; Definition at line 662 of file TPackMgr.cxx. ◆ Streamer(). void TPackMgr::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TNamed. ◆ StreamerNVirtual(). void TPackMgr::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 106 of file TPackMgr.h. ◆ Unload(). Int_t TPackMgr::Unload ; (; const char * ; pack). Method to unload a package. ; Return -1 on error, 0 otherwise ; Definition at line 411 of file TPackMgr.cxx. ◆ Unpack(). Int_t TPackMgr::Unpack ; (; const char * ; pack, . TMD5 * ; sum = 0 . ). Read MD5 checksum of the PAR file from the PROOF-INF/md5.txt file. ; Returns a pointer to a TMD5 object, transferring ownership to the caller ; Definition at line 723 of file TPackMgr.cxx. Member Data Documentation. ◆ fDir. TString TPackMgr::fDir. private . Definition at line 44 of file TPackMgr.h. ◆ fEnabledPackages. TList* TPackMgr::fEnabledPackages. private . Definition at line 47 of file TPackMgr.h. ◆ fgGlobalPackMgrList. THashList * TPackMgr::fgGlobalPackMgrList = 0. staticprivate . Definition at line 49 of file TPackMgr.h. ◆ fLock. TLockPath TPackMgr::fLock. private . Definition at line 45 of file TPackMgr.h. ◆ fLogger. TPackMgrLog_t TPackMgr::fLogger. private . Definition at line 42 of file TPackMgr.h. ◆ fName. TString TPackMgr::fName. private . Definition at line 43 of file TPackMgr.h. ◆ fPfx. TString TPackMgr::fPfx. private . Definition at line 46 of file TPackMgr.h. proof/proof/inc/TPackMgr.h; proof/proof/src/TPackMgr.cxx. TPackMgr. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:05 (GVA",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:3884,Testability,log,logger,3884,"ethod to check if this package manager has package 'pack'. ;  ; Int_t Install (const char *par, Bool_t rmold=kFALSE);  Install package from par (unpack the file in the directory); par can be an URL for remote retrieval. ;  ; TClass * IsA () const override;  ; Bool_t IsInDir (const char *path);  Method to check if 'path' is in the managed directory Return kTRUE or kFALSE. ;  ; Bool_t IsPackageEnabled (const char *pack);  ; Int_t Load (const char *pack, const char *opts);  Method to load a package taking an option const char * Return -1 on error, 0 otherwise. ;  ; Int_t Load (const char *pack, TList *optls=0);  Method to load a package taking an option list Return -1 on error, 0 otherwise. ;  ; TMD5 * ReadMD5 (const char *pack);  Read MD5 checksum of the PAR file from the PROOF-INF/md5.txt file. ;  ; Int_t Remove (const char *pack=0, Bool_t dolock=kTRUE);  Remove package 'pack' If 'pack' is null or empty all packages are cleared. ;  ; void SetLogger (TPackMgrLog_t logger);  ; void SetName (const char *name) override;  Set the name of the TNamed. ;  ; void SetPrefix (const char *pfx);  ; void Show (const char *title=0);  Show available packages. ;  ; void ShowEnabled (const char *title=0);  Show enabled packages. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t Unload (const char *pack);  Method to unload a package. ;  ; Int_t Unpack (const char *pack, TMD5 *sum=0);  Read MD5 checksum of the PAR file from the PROOF-INF/md5.txt file. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an ",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:14305,Testability,log,logger,14305,"ty is given to packmgr, if defined. ;  ; static Int_t RegisterGlobalPath (const char *paths);  Parse one or more paths as possible sources of packages Returns number of paths added; or -1 in case of problems. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TPackMgr (const TPackMgr &);  ; void Log (const char *msg);  Wrapper to notofuer / logger. ;  ; TPackMgr & operator= (const TPackMgr &);  . Private Attributes; TString fDir;  ; TList * fEnabledPackages;  ; TLockPath fLock;  ; TPackMgrLog_t fLogger;  ; TString fName;  ; TString fPfx;  . Static Private Attributes; static THashList * fgGlobalPackMgrList = 0;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TPackMgr.h>. Inheritance diagram for TPackMgr:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ ECheckVersionOpt. enum TPackMgr::ECheckVersionOpt. EnumeratorkDontChe",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:21702,Testability,log,logger,21702,"atic . Check if the package is enabled; priority is given to packmgr, if defined. ; Returns kTRUE if enabled ; Definition at line 961 of file TPackMgr.cxx. ◆ IsInDir(). Bool_t TPackMgr::IsInDir ; (; const char * ; path). Method to check if 'path' is in the managed directory Return kTRUE or kFALSE. ; Definition at line 478 of file TPackMgr.cxx. ◆ IsPackageEnabled(). Bool_t TPackMgr::IsPackageEnabled ; (; const char * ; pack). inline . Definition at line 82 of file TPackMgr.h. ◆ Load() [1/2]. Int_t TPackMgr::Load ; (; const char * ; pack, . const char * ; opts . ). Method to load a package taking an option const char * Return -1 on error, 0 otherwise. ; Definition at line 206 of file TPackMgr.cxx. ◆ Load() [2/2]. Int_t TPackMgr::Load ; (; const char * ; pack, . TList * ; optls = 0 . ). Method to load a package taking an option list Return -1 on error, 0 otherwise. ; Definition at line 220 of file TPackMgr.cxx. ◆ Log(). void TPackMgr::Log ; (; const char * ; msg). private . Wrapper to notofuer / logger. ; Definition at line 73 of file TPackMgr.cxx. ◆ operator=(). TPackMgr & TPackMgr::operator= ; (; const TPackMgr & ; ). private . ◆ ReadMD5(). TMD5 * TPackMgr::ReadMD5 ; (; const char * ; pack). Read MD5 checksum of the PAR file from the PROOF-INF/md5.txt file. ; Returns a pointer to a TMD5 object, transferring ownership to the caller ; Definition at line 708 of file TPackMgr.cxx. ◆ RegisterGlobalPath(). Int_t TPackMgr::RegisterGlobalPath ; (; const char * ; paths). static . Parse one or more paths as possible sources of packages Returns number of paths added; or -1 in case of problems. ; Definition at line 872 of file TPackMgr.cxx. ◆ Remove(). Int_t TPackMgr::Remove ; (; const char * ; pack = 0, . Bool_t ; dolock = kTRUE . ). Remove package 'pack' If 'pack' is null or empty all packages are cleared. ; Definition at line 593 of file TPackMgr.cxx. ◆ SetLogger(). void TPackMgr::SetLogger ; (; TPackMgrLog_t ; logger). inline . Definition at line 67 of file TPackMgr.h. ◆ Set",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:22629,Testability,log,logger,22629,"r.cxx. ◆ Log(). void TPackMgr::Log ; (; const char * ; msg). private . Wrapper to notofuer / logger. ; Definition at line 73 of file TPackMgr.cxx. ◆ operator=(). TPackMgr & TPackMgr::operator= ; (; const TPackMgr & ; ). private . ◆ ReadMD5(). TMD5 * TPackMgr::ReadMD5 ; (; const char * ; pack). Read MD5 checksum of the PAR file from the PROOF-INF/md5.txt file. ; Returns a pointer to a TMD5 object, transferring ownership to the caller ; Definition at line 708 of file TPackMgr.cxx. ◆ RegisterGlobalPath(). Int_t TPackMgr::RegisterGlobalPath ; (; const char * ; paths). static . Parse one or more paths as possible sources of packages Returns number of paths added; or -1 in case of problems. ; Definition at line 872 of file TPackMgr.cxx. ◆ Remove(). Int_t TPackMgr::Remove ; (; const char * ; pack = 0, . Bool_t ; dolock = kTRUE . ). Remove package 'pack' If 'pack' is null or empty all packages are cleared. ; Definition at line 593 of file TPackMgr.cxx. ◆ SetLogger(). void TPackMgr::SetLogger ; (; TPackMgrLog_t ; logger). inline . Definition at line 67 of file TPackMgr.h. ◆ SetName(). void TPackMgr::SetName ; (; const char * ; name). inlineoverridevirtual . Set the name of the TNamed. ; WARNING: if the object is a member of a THashTable or THashList container the container must be Rehash()'ed after SetName(). For example the list of objects in the current directory is a THashList. ; Reimplemented from TNamed.; Definition at line 62 of file TPackMgr.h. ◆ SetPrefix(). void TPackMgr::SetPrefix ; (; const char * ; pfx). inline . Definition at line 68 of file TPackMgr.h. ◆ Show(). void TPackMgr::Show ; (; const char * ; title = 0). Show available packages. ; Definition at line 548 of file TPackMgr.cxx. ◆ ShowEnabled(). void TPackMgr::ShowEnabled ; (; const char * ; title = 0). Show enabled packages. ; Definition at line 662 of file TPackMgr.cxx. ◆ Streamer(). void TPackMgr::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from T",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:3840,Usability,clear,cleared,3840,"r package 'pack'. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; Bool_t Has (const char *pack);  Method to check if this package manager has package 'pack'. ;  ; Int_t Install (const char *par, Bool_t rmold=kFALSE);  Install package from par (unpack the file in the directory); par can be an URL for remote retrieval. ;  ; TClass * IsA () const override;  ; Bool_t IsInDir (const char *path);  Method to check if 'path' is in the managed directory Return kTRUE or kFALSE. ;  ; Bool_t IsPackageEnabled (const char *pack);  ; Int_t Load (const char *pack, const char *opts);  Method to load a package taking an option const char * Return -1 on error, 0 otherwise. ;  ; Int_t Load (const char *pack, TList *optls=0);  Method to load a package taking an option list Return -1 on error, 0 otherwise. ;  ; TMD5 * ReadMD5 (const char *pack);  Read MD5 checksum of the PAR file from the PROOF-INF/md5.txt file. ;  ; Int_t Remove (const char *pack=0, Bool_t dolock=kTRUE);  Remove package 'pack' If 'pack' is null or empty all packages are cleared. ;  ; void SetLogger (TPackMgrLog_t logger);  ; void SetName (const char *name) override;  Set the name of the TNamed. ;  ; void SetPrefix (const char *pfx);  ; void Show (const char *title=0);  Show available packages. ;  ; void ShowEnabled (const char *title=0);  Show enabled packages. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t Unload (const char *pack);  Method to unload a package. ;  ; Int_t Unpack (const char *pack, TMD5 *sum=0);  Read MD5 checksum of the PAR file from the PROOF-INF/md5.txt file. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPackMgr.html:22512,Usability,clear,cleared,22512,"0 . ). Method to load a package taking an option list Return -1 on error, 0 otherwise. ; Definition at line 220 of file TPackMgr.cxx. ◆ Log(). void TPackMgr::Log ; (; const char * ; msg). private . Wrapper to notofuer / logger. ; Definition at line 73 of file TPackMgr.cxx. ◆ operator=(). TPackMgr & TPackMgr::operator= ; (; const TPackMgr & ; ). private . ◆ ReadMD5(). TMD5 * TPackMgr::ReadMD5 ; (; const char * ; pack). Read MD5 checksum of the PAR file from the PROOF-INF/md5.txt file. ; Returns a pointer to a TMD5 object, transferring ownership to the caller ; Definition at line 708 of file TPackMgr.cxx. ◆ RegisterGlobalPath(). Int_t TPackMgr::RegisterGlobalPath ; (; const char * ; paths). static . Parse one or more paths as possible sources of packages Returns number of paths added; or -1 in case of problems. ; Definition at line 872 of file TPackMgr.cxx. ◆ Remove(). Int_t TPackMgr::Remove ; (; const char * ; pack = 0, . Bool_t ; dolock = kTRUE . ). Remove package 'pack' If 'pack' is null or empty all packages are cleared. ; Definition at line 593 of file TPackMgr.cxx. ◆ SetLogger(). void TPackMgr::SetLogger ; (; TPackMgrLog_t ; logger). inline . Definition at line 67 of file TPackMgr.h. ◆ SetName(). void TPackMgr::SetName ; (; const char * ; name). inlineoverridevirtual . Set the name of the TNamed. ; WARNING: if the object is a member of a THashTable or THashList container the container must be Rehash()'ed after SetName(). For example the list of objects in the current directory is a THashList. ; Reimplemented from TNamed.; Definition at line 62 of file TPackMgr.h. ◆ SetPrefix(). void TPackMgr::SetPrefix ; (; const char * ; pfx). inline . Definition at line 68 of file TPackMgr.h. ◆ Show(). void TPackMgr::Show ; (; const char * ; title = 0). Show available packages. ; Definition at line 548 of file TPackMgr.cxx. ◆ ShowEnabled(). void TPackMgr::ShowEnabled ; (; const char * ; title = 0). Show enabled packages. ; Definition at line 662 of file TPackMgr.cxx. ◆ Streamer",MatchSource.WIKI,doc/master/classTPackMgr.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPackMgr.html
https://root.cern/doc/master/classTPad-members.html:5668,Availability,error,error,5668,"obj, Option_t *option="""") overrideTPadvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawCollideGrid()TPad; DrawColorTable()TPadstatic; DrawCrosshair()TPadvirtual; DrawDist(Rectangle_t aBBox, Rectangle_t bBBox, char mode)TPadprivate; DrawFrame(Double_t xmin, Double_t ymin, Double_t xmax, Double_t ymax, const char *title="""") overrideTPadvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Emit(const char *signal, const T &arg)TQObjectinline; Emit(const char *signal)TQObjectinline; EmitVA(const char *signal_name, Int_t, const T &... params)TQObjectinline; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; EventPave()TPadinlinevirtual; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideTPadprotectedvirtual; ExecuteEventAxis(Int_t event, Int_t px, Int_t py, TAxis *axis) overrideTPadvirtual; fAbsCoordTPadprotected; fAbsHNDCTPadprotected; fAbsPixeltoXkTPadprotected; fAbsPixeltoYkTPadprotected; fAbsWNDCTPadprotected; fAbsXlowNDCTPadprotected; fAbsYlowNDCTPadprotected; fAfileTAttPadprotected; fAspectRatioTPadprotected; fAstatTAttPadprotected; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fBorderModeTPadprotected; fBorderSizeTPadprotected; fBottomMarginTAttPadprotected; fCanvasTPadprotected; fCGnxTPadprotected; fCGnyTPadprotected; fCollideGridTPadprotected; fCopyGLDeviceTPadprotected; fCrosshairTPadprotected; fCrosshairPosTPadprotected; fEditableTPadprotected; fEmbeddedGLTPadprotected; fExecsTPadprotected; fFillColorTAttFillprotected; fFillStyleTAttFillprotected; fFixedAspectRatioTPadprotected; fFrameTPadprotected; fFrameBorderModeTAttPadprotected; fFrameBorderSizeTAttPadprotected; fFrameFillColorTAttPadprotected; fFrameFillStyleTAttPadprotected; fFrameLineColorTAttPadprotected",MatchSource.WIKI,doc/master/classTPad-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad-members.html
https://root.cern/doc/master/classTPad-members.html:5749,Availability,error,error,5749,"obj, Option_t *option="""") overrideTPadvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawCollideGrid()TPad; DrawColorTable()TPadstatic; DrawCrosshair()TPadvirtual; DrawDist(Rectangle_t aBBox, Rectangle_t bBBox, char mode)TPadprivate; DrawFrame(Double_t xmin, Double_t ymin, Double_t xmax, Double_t ymax, const char *title="""") overrideTPadvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Emit(const char *signal, const T &arg)TQObjectinline; Emit(const char *signal)TQObjectinline; EmitVA(const char *signal_name, Int_t, const T &... params)TQObjectinline; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; EventPave()TPadinlinevirtual; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideTPadprotectedvirtual; ExecuteEventAxis(Int_t event, Int_t px, Int_t py, TAxis *axis) overrideTPadvirtual; fAbsCoordTPadprotected; fAbsHNDCTPadprotected; fAbsPixeltoXkTPadprotected; fAbsPixeltoYkTPadprotected; fAbsWNDCTPadprotected; fAbsXlowNDCTPadprotected; fAbsYlowNDCTPadprotected; fAfileTAttPadprotected; fAspectRatioTPadprotected; fAstatTAttPadprotected; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fBorderModeTPadprotected; fBorderSizeTPadprotected; fBottomMarginTAttPadprotected; fCanvasTPadprotected; fCGnxTPadprotected; fCGnyTPadprotected; fCollideGridTPadprotected; fCopyGLDeviceTPadprotected; fCrosshairTPadprotected; fCrosshairPosTPadprotected; fEditableTPadprotected; fEmbeddedGLTPadprotected; fExecsTPadprotected; fFillColorTAttFillprotected; fFillStyleTAttFillprotected; fFixedAspectRatioTPadprotected; fFrameTPadprotected; fFrameBorderModeTAttPadprotected; fFrameBorderSizeTAttPadprotected; fFrameFillColorTAttPadprotected; fFrameFillStyleTAttPadprotected; fFrameLineColorTAttPadprotected",MatchSource.WIKI,doc/master/classTPad-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad-members.html
https://root.cern/doc/master/classTPad-members.html:181,Modifiability,inherit,inherited,181,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TPad Member List. This is the complete list of members for TPad, including all inherited members. AbsCoordinates(Bool_t set) overrideTPadinlinevirtual; AbsPixeltoX(Int_t px) overrideTPadinlinevirtual; AbsPixeltoXY(Int_t xpixel, Int_t ypixel, Double_t &x, Double_t &y)TPadvirtual; AbsPixeltoY(Int_t py) overrideTPadinlinevirtual; AbstractMethod(const char *method) constTObject; Add(TObject *obj, Option_t *opt="""", Bool_t modified=kTRUE) overrideTPadvirtual; AddExec(const char *name, const char *command) overrideTPadvirtual; AddFirst(TObject *obj, Option_t *opt="""", Bool_t modified=kTRUE) overrideTPadvirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; AreAllSignalsBlocked()TQObjectstatic; AreSignalsBlocked() constTQObjectinline; AutoExec()TPadvirtual; BlockAllSignals(Bool_t b)TQObjectstatic; BlockSignals(Bool_t b)TQObjectinline; Browse(TBrowser *b) overrideTPadvirtual; BuildLegend(Double_t x1=0.3, Double_t y1=0.21, Double_t x2=0.3, Double_t y2=0.21, const char *title="""", Option_t *option="""") overrideTPadvirtual; cd(Int_t subpadnumber=0) overrideTPadvirtual; ChangedBy(const char *method)TQObjectinlinevirtual; CheckConnectArgs(TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot)TQObjectprotectedstatic; CheckedHash()TObjectinline; Class()TPadstatic; Class_Name()TPadstatic; Class_Version()TPadinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTPadvirtual; Clip(Float_t *x, Float_t *y, Float_t xclipl, Float_t yclipb, Float_t xclipr, Float_t yclipt)TPadvirtual; Clip(Double_t *x, Double_t *y, Double_t xclipl, Double_t yclipb, Double_t xclipr, Double_t yclipt) overrideTPadvirtual; ClippingCode(Double_t x, Double_t y, Double_t xcl1, Double_t ycl1, Double_t xcl2, Double_t ycl2)TPadvirtual; ClipPolygon(Int_t n, Double_t *x, Double_t *y, Int_t nn, Double_",MatchSource.WIKI,doc/master/classTPad-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad-members.html
https://root.cern/doc/master/classTPad.html:27707,Availability,error,error,27707,"eckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsiste",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:27796,Availability,error,error,27796,"p (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setu",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:27951,Availability,error,error,27951,";  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t Inheri",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:28128,Availability,error,error,28128,"const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns k",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:31257,Availability,error,error,31257,"r delete (void *ptr, void *vp);  Only called by placement new when throwing an exception. ;  ; void operator delete[] (void *ptr);  Operator delete []. ;  ; void operator delete[] (void *ptr, void *vp);  Only called by placement new[] when throwing an exception. ;  ; void * operator new (size_t sz);  ; void * operator new (size_t sz, void *vp);  ; void * operator new[] (size_t sz);  ; void * operator new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:44109,Availability,down,down,44109,"onst;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; Bool_t fAbsCoord;  Use absolute coordinates. ;  ; Double_t fAbsHNDC;  Absolute Height of pad along Y in NDC. ;  ; Double_t fAbsPixeltoXk;  Conversion coefficient for absolute pixel to X World. ;  ; Double_t fAbsPixeltoYk;  Conversion coefficient for absolute pixel to Y World. ;  ; Double_t fAbsWNDC;  Absolute Width of pad along X in NDC. ;  ; Double_t fAbsXlowNDC;  Absolute X top left corner of pad in NDC [0,1]. ;  ; Double_t fAbsYlowNDC;  Absolute Y top left corner of pad in NDC [0,1]. ;  ; Double_t fAspectRatio;  ratio of w/h in case of fixed ratio ;  ; Short_t fBorderMode;  Bordermode (-1=down, 0 = no border, 1=up) ;  ; Short_t fBorderSize;  pad bordersize in pixels ;  ; TCanvas * fCanvas {nullptr};  ! Pointer to mother canvas ;  ; Int_t fCGnx;  ! Size of the collide grid along x ;  ; Int_t fCGny;  ! Size of the collide grid along y ;  ; std::vector< Bool_t > fCollideGrid;  ! Grid used to find empty space when adding a box (Legend) in a pad ;  ; Bool_t fCopyGLDevice;  ! ;  ; Int_t fCrosshair;  Crosshair type (0 if no crosshair requested) ;  ; Int_t fCrosshairPos;  Position of crosshair. ;  ; Bool_t fEditable;  True if canvas is editable. ;  ; Bool_t fEmbeddedGL;  ! ;  ; TList * fExecs {nullptr};  List of commands to be executed when a pad event occurs. ;  ; Bool_t fFixedAspectRatio;  True if fixed aspect ratio. ;  ; TFrame * fFrame {nullptr};  ! Pointer to 2-D frame (if one exists) ;  ; Int_t fGLDevice;  ! OpenGL off-screen pixmap identifier ;  ; Bool_t fGridx;  Set to true if grid along X. ;  ; Bool_t fGridy;  Set to true if grid along Y. ;  ; Double_t fHNDC;  Height of pad along Y in Normalized Coordinates (NDC) ;  ; Int_t fLogx;  (=0 if X linear scale, =1 if log scale) ;  ; Int_t fLogy;  (=0 if Y linear scale, =1 if log scale) ;  ; Int_t fLogz;  (=0 if Z linear s",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:59958,Availability,failure,failure,59958," [in]x1,y1,x2,y2The TLegend coordinates ; [in]titleThe legend title. By default it is "" "" ; [in]optionThe TLegend option. The caller program owns the returned TLegend.; If the pad contains some TMultiGraph or THStack the individual graphs or histograms in them are added to the TLegend. Automatic placement of the legend; If x1 is equal to x2 and y1 is equal to y2 the legend will be automatically placed to avoid overlapping with the existing primitives already displayed. x1 is considered as the width of the legend and y1 the height. By default the legend is automatically placed with width = x1= x2 = 0.3 and height = y1= y2 = 0.21. ; Implements TVirtualPad.; Definition at line 555 of file TPad.cxx. ◆ cd(). TVirtualPad * TPad::cd ; (; Int_t ; subpadnumber = 0). overridevirtual . Set Current pad. ; When a canvas/pad is divided via TPad::Divide, one can directly set the current path to one of the subdivisions. See TPad::Divide for the convention to number sub-pads.; Returns the new current pad, or 0 in case of failure.; For example: c1.Divide(2,3); // create 6 pads (2 divisions along x, 3 along y).; To set the current pad to the bottom right pad, do c1.cd(6);; Note1: c1.cd() is equivalent to c1.cd(0) and sets the current pad to c1 itself.; Note2: after a statement like c1.cd(6), the global variable gPad points to the current pad. One can use gPad to set attributes of the current pad.; Note3: One can get a pointer to one of the sub-pads of pad with: TPad subpad = (TPad)pad->GetPad(subpadnumber); ; Implements TVirtualPad.; Definition at line 693 of file TPad.cxx. ◆ Class(). static TClass * TPad::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TPad::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TPad::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 419 of file TPad.h. ◆ Clear(). void TPad::Clear ; (; Option_t * ; option = """").",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:87503,Availability,error,error,87503,"nlineoverridevirtual . Return hash value for this object. ; Note: If this routine is overloaded in a derived class, this derived class should also add ROOT::CallRecursiveRemoveIfNeeded(*this); ROOT::CallRecursiveRemoveIfNeededvoid CallRecursiveRemoveIfNeeded(TObject &obj)call RecursiveRemove for obj if gROOT is valid and obj.TestBit(kMustCleanup) is true.Definition TROOT.h:395; Otherwise, when RecursiveRemove is called (by ~TObject or example) for this type of object, the transversal of THashList and THashTable containers will will have to be done without call Hash (and hence be linear rather than logarithmic complexity). You will also see warnings like Error in <ROOT::Internal::TCheckHashRecursiveRemoveConsistency::CheckRecursiveRemove>: The class SomeName overrides TObject::Hash but does not call TROOT::RecursiveRemove in its destructor.; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TPad::HashULong_t Hash() const overrideReturn hash value for this object.Definition TPad.h:267; TROOT::RecursiveRemovevoid RecursiveRemove(TObject *obj) overrideRecursively remove this object from the list of Cleanups.Definition TROOT.cxx:2498. Reimplemented from TObject.; Definition at line 267 of file TPad.h. ◆ HasViewer3D(). Bool_t TPad::HasViewer3D ; (; ); const. inlineoverridevirtual . Implements TVirtualPad.; Definition at line 401 of file TPad.h. ◆ HideToolTip(). void TPad::HideToolTip ; (; Int_t ; event). protectedvirtual . Hide tool tip depending on the event type. ; Typically tool tips are hidden when event is not a kMouseEnter and not a kMouseMotion event. ; Definition at line 2847 of file TPad.cxx. ◆ HighLight(). void TPad::HighLight ; (; Color_t ; color = kRed, . Bool_t ; set = kTRUE . ). overridevirtual . Highlight pad. ; do not highlight when printing on Postscript ; Implements TVirtualPad.; Definition at line 3055 of file TPad.cx",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:101547,Availability,avail,available,101547,"he bottom left corner of the placed box ; [in]optionl=left, r=right, t=top, b=bottom, w=within margins. Order determines priority for placement. Default is ""lb"" (prioritises horizontal over vertical) . Implements TVirtualPad.; Definition at line 3203 of file TPad.cxx. ◆ Pop(). void TPad::Pop ; (; ). overridevirtual . Pop pad to the top of the stack. ; Implements TVirtualPad.; Definition at line 4776 of file TPad.cxx. ◆ Print() [1/2]. void TPad::Print ; (; const char * ; filename, . Option_t * ; option . ). overridevirtual . Save Canvas contents in a file in one of various formats. ; option can be:. ps: a Postscript file is produced (default). See special cases.; Portrait: Postscript file is produced (Portrait); Landscape: Postscript file is produced (Landscape). eps: an Encapsulated Postscript file is produced; Preview: an Encapsulated Postscript file with preview is produced. pdf: a PDF file is produced NOTE: TMathText will be converted to TLatex; q.e.d., symbols only available in TMathText will not render properly.; Title:: The character string after Title: becomes a table of content entry (for PDF files).; EmbedFonts: a PDF file with embedded fonts is generated. svg: a SVG file is produced; tex: a TeX file is produced; Standalone: a standalone TeX file is produced. gif: a GIF file is produced; gif+NN: an animated GIF file is produced, where NN is delay in 10ms units NOTE: See other variants for looping animation in TASImage::WriteImage; xpm: a XPM file is produced; png: a PNG file is produced; jpg: a JPEG file is produced. NOTE: JPEG's lossy compression will make all sharp edges fuzzy.; tiff: a TIFF file is produced; cxx: a C++ macro file is produced; xml: a XML file; json: a JSON file; root: a ROOT binary file; filename = 0 - filename is defined by GetName and its extension is defined with the option. When Postscript output is selected (ps, eps), the canvas is saved to filename.ps or filename.eps. The aspect ratio of the canvas is preserved on the Postscript file",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:114275,Availability,avail,available,114275,"in)/alfa + Log(x)/alfa \]. \[ = fXtoPixelk + fXtoPixel*Log(x) \]. \[ \Rightarrow fXtoPixelk = pxlow -Log(xmin)/alfa \]. \[ \Rightarrow fXtoPixel = 1/alfa \]. \[ py = pylow - Log(y/ymin)/beta \]. \[ = fYtoPixelk + fYtoPixel*Log(y) \]. \[ \Rightarrow fYtoPixelk = pylow - Log(ymin)/beta \]. \[ fYtoPixel = 1/beta \]. Implements TVirtualPad.; Definition at line 5624 of file TPad.cxx. ◆ SaveAs(). void TPad::SaveAs ; (; const char * ; filename = """", . Option_t * ; option = """" . ); const. overridevirtual . Save the pad content in a file. ; The file's format used to save the pad is determined by the filename extension:. if filename is empty, the file produced is padname.ps; if filename starts with a dot, the padname is added in front; if filename ends with .ps, a Postscript file is produced; if filename ends with .eps, an Encapsulated Postscript file is produced; if filename ends with .pdf, a PDF file is produced NOTE: TMathText will be converted to TLatex; q.e.d., symbols only available in TMathText will not render properly.; if filename ends with .svg, a SVG file is produced; if filename ends with .tex, a TeX file is produced; if filename ends with .gif, a GIF file is produced; if filename ends with .gif+NN, an animated GIF file is produced See comments in TASImage::WriteImage for meaning of NN and other .gif sufix variants; if filename ends with .xpm, a XPM file is produced; if filename ends with .png, a PNG file is produced; if filename ends with .bmp, a BMP file is produced; if filename ends with .jpg or .jpeg a JPEG file is produced NOTE: JPEG's lossy compression will make all sharp edges fuzzy.; if filename ends with .tiff, a TIFF file is produced; if filename ends with .C, .cxx,.cpp or .cc, a C++ macro file is produced; if filename ends with .root, a Root file is produced; if filename ends with .xml, a XML file is produced; if filename ends with .json, a JSON file is produced. Remarks; The parameter option is not used.; This method calls TPad::Print(const char *filena",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:134165,Availability,down,down,134165,"long Y in NDC. ; Definition at line 72 of file TPad.h. ◆ fAbsPixeltoXk. Double_t TPad::fAbsPixeltoXk. protected . Conversion coefficient for absolute pixel to X World. ; Definition at line 55 of file TPad.h. ◆ fAbsPixeltoYk. Double_t TPad::fAbsPixeltoYk. protected . Conversion coefficient for absolute pixel to Y World. ; Definition at line 58 of file TPad.h. ◆ fAbsWNDC. Double_t TPad::fAbsWNDC. protected . Absolute Width of pad along X in NDC. ; Definition at line 71 of file TPad.h. ◆ fAbsXlowNDC. Double_t TPad::fAbsXlowNDC. protected . Absolute X top left corner of pad in NDC [0,1]. ; Definition at line 69 of file TPad.h. ◆ fAbsYlowNDC. Double_t TPad::fAbsYlowNDC. protected . Absolute Y top left corner of pad in NDC [0,1]. ; Definition at line 70 of file TPad.h. ◆ fAspectRatio. Double_t TPad::fAspectRatio. protected . ratio of w/h in case of fixed ratio ; Definition at line 82 of file TPad.h. ◆ fBorderMode. Short_t TPad::fBorderMode. protected . Bordermode (-1=down, 0 = no border, 1=up) ; Definition at line 98 of file TPad.h. ◆ fBorderSize. Short_t TPad::fBorderSize. protected . pad bordersize in pixels ; Definition at line 97 of file TPad.h. ◆ fCanvas. TCanvas* TPad::fCanvas {nullptr}. protected . ! Pointer to mother canvas ; Definition at line 106 of file TPad.h. ◆ fCGnx. Int_t TPad::fCGnx. protected . ! Size of the collide grid along x ; Definition at line 119 of file TPad.h. ◆ fCGny. Int_t TPad::fCGny. protected . ! Size of the collide grid along y ; Definition at line 120 of file TPad.h. ◆ fCollideGrid. std::vector<Bool_t> TPad::fCollideGrid. protected . ! Grid used to find empty space when adding a box (Legend) in a pad ; Definition at line 118 of file TPad.h. ◆ fCopyGLDevice. Bool_t TPad::fCopyGLDevice. protected . ! ; Definition at line 86 of file TPad.h. ◆ fCrosshair. Int_t TPad::fCrosshair. protected . Crosshair type (0 if no crosshair requested) ; Definition at line 95 of file TPad.h. ◆ fCrosshairPos. Int_t TPad::fCrosshairPos. protected . Position of cr",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:23617,Deployability,update,update,23617,"000) override;  Set tool tip text associated with this pad. ;  ; void SetVertical (Bool_t vert=kTRUE) override;  Set pad vertical (default) or horizontal. ;  ; void SetView (TView *view=nullptr) override;  Set the current TView. Delete previous view if view=0. ;  ; void SetViewer3D (TVirtualViewer3D *viewer3d) override;  ; void ShowGuidelines (TObject *object, const Int_t event, const char mode='i', const bool cling=true) override;  Shows lines to indicate if a TAttBBox2D object is aligned to the center or to another object, shows distance arrows if two objects on screen have the same distance to another object Call from primitive in Execute Event, in ButtonMotion after the new coordinates have been set, to 'stick' once when button is up to delete lines. ;  ; virtual void StartEditing ();  ; void Streamer (TBuffer &) override;  Stream a class object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Update () override;  Update pad. ;  ; void UpdateAsync () override;  Asynchronous pad update. ;  ; void UseCurrentStyle () override;  Force a copy of current style for all objects in pad. ;  ; Int_t UtoAbsPixel (Double_t u) const override;  Convert X NDC to absolute pixel. ;  ; Int_t UtoPixel (Double_t u) const override;  Convert X NDC to pixel. ;  ; Int_t VtoAbsPixel (Double_t v) const override;  Convert Y NDC to absolute pixel. ;  ; Int_t VtoPixel (Double_t v) const override;  Convert Y NDC to pixel. ;  ; TObject * WaitPrimitive (const char *pname="""", const char *emode="""") override;  Loop and sleep until a primitive with name=pname is found in the pad. ;  ; virtual void x3d (Option_t *type="""");  Deprecated: use TPad::GetViewer3D() instead. ;  ; Int_t XtoAbsPixel (Double_t x) const override;  Convert X coordinate to absolute pixel. ;  ; Double_t XtoPad (Double_t x) const override;  Convert x from X to pad. ;  ; Int_t XtoPixel (Double_t x) const override;  Convert X coordinate to pixel. ;  ; virtual void XYtoAbsPixel (Double_t x, Double_t y, Int_t",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:73147,Deployability,release,released,73147,"o one event. ; This member function is called when a TPad object is clicked.; If the mouse is clicked in one of the 4 corners of the pad (pA,pB,pC,pD) the pad is resized with the rubber rectangle.; If the mouse is clicked inside the pad, the pad is moved.; If the mouse is clicked on the 4 edges (pL,pR,pTop,pBot), the pad is scaled parallel to this edge. Note that this function duplicates on purpose the functionality already implemented in TBox::ExecuteEvent. If somebody modifies this function, may be similar changes should also be applied to TBox::ExecuteEvent. ; Reimplemented from TObject.; Definition at line 1786 of file TPad.cxx. ◆ ExecuteEventAxis(). void TPad::ExecuteEventAxis ; (; Int_t ; event, . Int_t ; px, . Int_t ; py, . TAxis * ; axis . ). overridevirtual . Execute action corresponding to one event for a TAxis object (called by TAxis::ExecuteEvent.) This member function is called when an axis is clicked with the locator. ; The axis range is set between the position where the mouse is pressed and the position where it is released.; If the mouse position is outside the current axis range when it is released the axis is unzoomed with the corresponding proportions.; Note that the mouse does not need to be in the pad or even canvas when it is released. ; Implements TVirtualPad.; Definition at line 2361 of file TPad.cxx. ◆ FillCollideGrid(). void TPad::FillCollideGrid ; (; TObject * ; o). private . Initialise the grid used to find empty space when adding a box (Legend) in a pad. ; Definition at line 3134 of file TPad.cxx. ◆ FillCollideGridTBox(). void TPad::FillCollideGridTBox ; (; TObject * ; o). private . Definition at line 3317 of file TPad.cxx. ◆ FillCollideGridTFrame(). void TPad::FillCollideGridTFrame ; (; TObject * ; o). private . Definition at line 3334 of file TPad.cxx. ◆ FillCollideGridTGraph(). void TPad::FillCollideGridTGraph ; (; TObject * ; o). private . Definition at line 3360 of file TPad.cxx. ◆ FillCollideGridTH1(). void TPad::FillCollideGridTH1",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:73225,Deployability,release,released,73225,"rs of the pad (pA,pB,pC,pD) the pad is resized with the rubber rectangle.; If the mouse is clicked inside the pad, the pad is moved.; If the mouse is clicked on the 4 edges (pL,pR,pTop,pBot), the pad is scaled parallel to this edge. Note that this function duplicates on purpose the functionality already implemented in TBox::ExecuteEvent. If somebody modifies this function, may be similar changes should also be applied to TBox::ExecuteEvent. ; Reimplemented from TObject.; Definition at line 1786 of file TPad.cxx. ◆ ExecuteEventAxis(). void TPad::ExecuteEventAxis ; (; Int_t ; event, . Int_t ; px, . Int_t ; py, . TAxis * ; axis . ). overridevirtual . Execute action corresponding to one event for a TAxis object (called by TAxis::ExecuteEvent.) This member function is called when an axis is clicked with the locator. ; The axis range is set between the position where the mouse is pressed and the position where it is released.; If the mouse position is outside the current axis range when it is released the axis is unzoomed with the corresponding proportions.; Note that the mouse does not need to be in the pad or even canvas when it is released. ; Implements TVirtualPad.; Definition at line 2361 of file TPad.cxx. ◆ FillCollideGrid(). void TPad::FillCollideGrid ; (; TObject * ; o). private . Initialise the grid used to find empty space when adding a box (Legend) in a pad. ; Definition at line 3134 of file TPad.cxx. ◆ FillCollideGridTBox(). void TPad::FillCollideGridTBox ; (; TObject * ; o). private . Definition at line 3317 of file TPad.cxx. ◆ FillCollideGridTFrame(). void TPad::FillCollideGridTFrame ; (; TObject * ; o). private . Definition at line 3334 of file TPad.cxx. ◆ FillCollideGridTGraph(). void TPad::FillCollideGridTGraph ; (; TObject * ; o). private . Definition at line 3360 of file TPad.cxx. ◆ FillCollideGridTH1(). void TPad::FillCollideGridTH1 ; (; TObject * ; o). private . Definition at line 3391 of file TPad.cxx. ◆ FindObject() [1/2]. TObject * TPad::FindObject",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:73369,Deployability,release,released,73369,"ad, the pad is moved.; If the mouse is clicked on the 4 edges (pL,pR,pTop,pBot), the pad is scaled parallel to this edge. Note that this function duplicates on purpose the functionality already implemented in TBox::ExecuteEvent. If somebody modifies this function, may be similar changes should also be applied to TBox::ExecuteEvent. ; Reimplemented from TObject.; Definition at line 1786 of file TPad.cxx. ◆ ExecuteEventAxis(). void TPad::ExecuteEventAxis ; (; Int_t ; event, . Int_t ; px, . Int_t ; py, . TAxis * ; axis . ). overridevirtual . Execute action corresponding to one event for a TAxis object (called by TAxis::ExecuteEvent.) This member function is called when an axis is clicked with the locator. ; The axis range is set between the position where the mouse is pressed and the position where it is released.; If the mouse position is outside the current axis range when it is released the axis is unzoomed with the corresponding proportions.; Note that the mouse does not need to be in the pad or even canvas when it is released. ; Implements TVirtualPad.; Definition at line 2361 of file TPad.cxx. ◆ FillCollideGrid(). void TPad::FillCollideGrid ; (; TObject * ; o). private . Initialise the grid used to find empty space when adding a box (Legend) in a pad. ; Definition at line 3134 of file TPad.cxx. ◆ FillCollideGridTBox(). void TPad::FillCollideGridTBox ; (; TObject * ; o). private . Definition at line 3317 of file TPad.cxx. ◆ FillCollideGridTFrame(). void TPad::FillCollideGridTFrame ; (; TObject * ; o). private . Definition at line 3334 of file TPad.cxx. ◆ FillCollideGridTGraph(). void TPad::FillCollideGridTGraph ; (; TObject * ; o). private . Definition at line 3360 of file TPad.cxx. ◆ FillCollideGridTH1(). void TPad::FillCollideGridTH1 ; (; TObject * ; o). private . Definition at line 3391 of file TPad.cxx. ◆ FindObject() [1/2]. TObject * TPad::FindObject ; (; const char * ; name); const. overridevirtual . Search if object named name is inside this pad or in pads ",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:127365,Deployability,update,update,127365,"to delete lines. ; modes: t (Top), b (bottom), l (left), r (right), i (inside) in resize modes (t,b,l,r) only size arrows are sticky; in mode, the function gets the point on the element that is clicked to move (i) or resize (all others). The expected values are: . Implements TVirtualPad.; Definition at line 6350 of file TPad.cxx. ◆ StartEditing(). virtual void TPad::StartEditing ; (; ). inlinevirtual . Definition at line 417 of file TPad.h. ◆ Streamer(). void TPad::Streamer ; (; TBuffer & ; b). overridevirtual . Stream a class object. ; Reimplemented from TObject.; Reimplemented in TSlider.; Definition at line 6713 of file TPad.cxx. ◆ StreamerNVirtual(). void TPad::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 419 of file TPad.h. ◆ Update(). void TPad::Update ; (; ). overridevirtual . Update pad. ; Implements TVirtualPad.; Definition at line 2935 of file TPad.cxx. ◆ UpdateAsync(). void TPad::UpdateAsync ; (; ). overridevirtual . Asynchronous pad update. ; In case of web-based canvas triggers update of the canvas on the client side, but does not wait that real update is completed. Avoids blocking of caller thread. Have to be used if called from other web-based widget to avoid logical dead-locks. In case of normal canvas just canvas->Update() is performed. ; Implements TVirtualPad.; Definition at line 2947 of file TPad.cxx. ◆ UseCurrentStyle(). void TPad::UseCurrentStyle ; (; ). overridevirtual . Force a copy of current style for all objects in pad. ; Reimplemented from TObject.; Definition at line 6927 of file TPad.cxx. ◆ UtoAbsPixel(). Int_t TPad::UtoAbsPixel ; (; Double_t ; u); const. overridevirtual . Convert X NDC to absolute pixel. ; Implements TVirtualPad.; Definition at line 7459 of file TPad.cxx. ◆ UtoPixel(). Int_t TPad::UtoPixel ; (; Double_t ; u); const. overridevirtual . Convert X NDC to pixel. ; Implements TVirtualPad.; Definition at line 7433 of file TPad.cxx. ◆ VtoAbsPixel(). Int_t TPad::VtoAbsPixel ; (; Dou",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:127412,Deployability,update,update,127412,") in resize modes (t,b,l,r) only size arrows are sticky; in mode, the function gets the point on the element that is clicked to move (i) or resize (all others). The expected values are: . Implements TVirtualPad.; Definition at line 6350 of file TPad.cxx. ◆ StartEditing(). virtual void TPad::StartEditing ; (; ). inlinevirtual . Definition at line 417 of file TPad.h. ◆ Streamer(). void TPad::Streamer ; (; TBuffer & ; b). overridevirtual . Stream a class object. ; Reimplemented from TObject.; Reimplemented in TSlider.; Definition at line 6713 of file TPad.cxx. ◆ StreamerNVirtual(). void TPad::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 419 of file TPad.h. ◆ Update(). void TPad::Update ; (; ). overridevirtual . Update pad. ; Implements TVirtualPad.; Definition at line 2935 of file TPad.cxx. ◆ UpdateAsync(). void TPad::UpdateAsync ; (; ). overridevirtual . Asynchronous pad update. ; In case of web-based canvas triggers update of the canvas on the client side, but does not wait that real update is completed. Avoids blocking of caller thread. Have to be used if called from other web-based widget to avoid logical dead-locks. In case of normal canvas just canvas->Update() is performed. ; Implements TVirtualPad.; Definition at line 2947 of file TPad.cxx. ◆ UseCurrentStyle(). void TPad::UseCurrentStyle ; (; ). overridevirtual . Force a copy of current style for all objects in pad. ; Reimplemented from TObject.; Definition at line 6927 of file TPad.cxx. ◆ UtoAbsPixel(). Int_t TPad::UtoAbsPixel ; (; Double_t ; u); const. overridevirtual . Convert X NDC to absolute pixel. ; Implements TVirtualPad.; Definition at line 7459 of file TPad.cxx. ◆ UtoPixel(). Int_t TPad::UtoPixel ; (; Double_t ; u); const. overridevirtual . Convert X NDC to pixel. ; Implements TVirtualPad.; Definition at line 7433 of file TPad.cxx. ◆ VtoAbsPixel(). Int_t TPad::VtoAbsPixel ; (; Double_t ; v); const. overridevirtual . Convert Y NDC to absolute pixel. ; Imple",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:127481,Deployability,update,update,127481,") in resize modes (t,b,l,r) only size arrows are sticky; in mode, the function gets the point on the element that is clicked to move (i) or resize (all others). The expected values are: . Implements TVirtualPad.; Definition at line 6350 of file TPad.cxx. ◆ StartEditing(). virtual void TPad::StartEditing ; (; ). inlinevirtual . Definition at line 417 of file TPad.h. ◆ Streamer(). void TPad::Streamer ; (; TBuffer & ; b). overridevirtual . Stream a class object. ; Reimplemented from TObject.; Reimplemented in TSlider.; Definition at line 6713 of file TPad.cxx. ◆ StreamerNVirtual(). void TPad::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 419 of file TPad.h. ◆ Update(). void TPad::Update ; (; ). overridevirtual . Update pad. ; Implements TVirtualPad.; Definition at line 2935 of file TPad.cxx. ◆ UpdateAsync(). void TPad::UpdateAsync ; (; ). overridevirtual . Asynchronous pad update. ; In case of web-based canvas triggers update of the canvas on the client side, but does not wait that real update is completed. Avoids blocking of caller thread. Have to be used if called from other web-based widget to avoid logical dead-locks. In case of normal canvas just canvas->Update() is performed. ; Implements TVirtualPad.; Definition at line 2947 of file TPad.cxx. ◆ UseCurrentStyle(). void TPad::UseCurrentStyle ; (; ). overridevirtual . Force a copy of current style for all objects in pad. ; Reimplemented from TObject.; Definition at line 6927 of file TPad.cxx. ◆ UtoAbsPixel(). Int_t TPad::UtoAbsPixel ; (; Double_t ; u); const. overridevirtual . Convert X NDC to absolute pixel. ; Implements TVirtualPad.; Definition at line 7459 of file TPad.cxx. ◆ UtoPixel(). Int_t TPad::UtoPixel ; (; Double_t ; u); const. overridevirtual . Convert X NDC to pixel. ; Implements TVirtualPad.; Definition at line 7433 of file TPad.cxx. ◆ VtoAbsPixel(). Int_t TPad::VtoAbsPixel ; (; Double_t ; v); const. overridevirtual . Convert Y NDC to absolute pixel. ; Imple",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:57555,Energy Efficiency,power,powerful,57555,".AddExec(""ex1"","".x exec1.C""); f#define f(i)Definition RSha256.hxx:104; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; TPad::AddExecvoid AddExec(const char *name, const char *command) overrideAdd a new TExec object to the list of Execs.Definition TPad.cxx:498; xDouble_t x[n]Definition legend1.C:17; Drawth1 Draw(); At this point you can use the mouse to click on the contour of the histogram hpx. When the mouse is clicked, the bin number and its contents are printed. Example2 of use of exec1.C; Root > TFile f(""hsimple.root""); Root > hpxpy.Draw(); Root > c1.AddExec(""ex2"","".x exec2.C""); When moving the mouse in the canvas, a second canvas shows the projection along X of the bin corresponding to the Y position of the mouse. The resulting histogram is fitted with a gaussian. A ""dynamic"" line shows the current bin position in Y. This more elaborated example can be used as a starting point to develop more powerful interactive applications exploiting the C++ interpreter as a development engine. ; Implements TVirtualPad.; Definition at line 498 of file TPad.cxx. ◆ AddFirst(). void TPad::AddFirst ; (; TObject * ; obj, . Option_t * ; opt = """", . Bool_t ; modified = kTRUE . ). overridevirtual . Add an object as first in list of primitives with speicified draw option When. ; modified set to kTRUE (default) pad will be marked as modifiedLet avoid usage of gPad when drawing object(s) in canvas or in subpads. ; Implements TVirtualPad.; Definition at line 439 of file TPad.cxx. ◆ AutoExec(). void TPad::AutoExec ; (; ). virtual . Execute the list of Execs when a pad event occurs. ; Definition at line 508 of file TPad.cxx. ◆ Browse(). void TPad::Browse ; (; TBrowser * ; b). overridevirtual . Browse pad. ; Reimplemented from TObject.; Definition at line 523 of file TPad.cxx. ◆ BuildLegend(). TLegend * TPad::BuildLegend ; (; Double_t ; x1 = 0.3, . Double_t ; y1 = 0.21, . Double_t ; x2 = 0.3, . Double_t ; y2",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:63221,Energy Efficiency,allocate,allocated,63221," ; [in]xclipl,yclipb,xclipr,ycliptClipping boundary . Definition at line 768 of file TPad.cxx. ◆ ClippingCode(). Int_t TPad::ClippingCode ; (; Double_t ; x, . Double_t ; y, . Double_t ; xcl1, . Double_t ; ycl1, . Double_t ; xcl2, . Double_t ; ycl2 . ). virtual . Compute the endpoint codes for TPad::Clip. ; Definition at line 901 of file TPad.cxx. ◆ ClipPolygon(). Int_t TPad::ClipPolygon ; (; Int_t ; n, . Double_t * ; x, . Double_t * ; y, . Int_t ; nn, . Double_t * ; xc, . Double_t * ; yc, . Double_t ; xclipl, . Double_t ; yclipb, . Double_t ; xclipr, . Double_t ; yclipt . ). virtual . Clip polygon using the Sutherland-Hodgman algorithm. ; Parameters. [in]nNumber of points in the polygon to be clipped ; [in]x,yPolygon x[n], y[n] do be clipped vertices ; [in]xclipl,yclipb,xclipr,ycliptClipping boundary ; [out]nnNumber of points in xc and yc ; [out]xc,ycClipped polygon vertices. The Int_t returned by this function is the number of points in the clipped polygon. These vectors must be allocated by the calling function. A size of 2*n for each is enough. Sutherland and Hodgman's polygon-clipping algorithm uses a divide-and-conquer strategy: It solves a series of simple and identical problems that, when combined, solve the overall problem. The simple problem is to clip a polygon against a single infinite clip edge. Four clip edges, each defining one boundary of the clip rectangle, successively clip a polygon against a clip rectangle.; Steps of Sutherland-Hodgman's polygon-clipping algorithm:. Polygons can be clipped against each edge of the window one at a time. Windows/edge intersections, if any, are easy to find since the X or Y coordinates are already known.; Vertices which are kept after clipping against one window edge are saved for clipping against the remaining edges.; Note that the number of vertices usually changes and will often increases. The clip boundary determines a visible and invisible region. The edges from vertex i to vertex i+1 can be one of four types:. C",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:5719,Integrability,rout,routine,5719,"void Add (TObject *obj, Option_t *opt="""", Bool_t modified=kTRUE) override;  Add an object to list of primitives with speicified draw option When. ;  ; void AddExec (const char *name, const char *command) override;  Add a new TExec object to the list of Execs. ;  ; void AddFirst (TObject *obj, Option_t *opt="""", Bool_t modified=kTRUE) override;  Add an object as first in list of primitives with speicified draw option When. ;  ; virtual void AutoExec ();  Execute the list of Execs when a pad event occurs. ;  ; void Browse (TBrowser *b) override;  Browse pad. ;  ; TLegend * BuildLegend (Double_t x1=0.3, Double_t y1=0.21, Double_t x2=0.3, Double_t y2=0.21, const char *title="""", Option_t *option="""") override;  Build a legend from the graphical objects in the pad. ;  ; TVirtualPad * cd (Int_t subpadnumber=0) override;  Set Current pad. ;  ; void Clear (Option_t *option="""") override;  Delete all pad primitives. ;  ; Int_t Clip (Double_t *x, Double_t *y, Double_t xclipl, Double_t yclipb, Double_t xclipr, Double_t yclipt) override;  Clipping routine: Cohen Sutherland algorithm. ;  ; virtual Int_t Clip (Float_t *x, Float_t *y, Float_t xclipl, Float_t yclipb, Float_t xclipr, Float_t yclipt);  Clipping routine: Cohen Sutherland algorithm. ;  ; virtual Int_t ClippingCode (Double_t x, Double_t y, Double_t xcl1, Double_t ycl1, Double_t xcl2, Double_t ycl2);  Compute the endpoint codes for TPad::Clip. ;  ; virtual Int_t ClipPolygon (Int_t n, Double_t *x, Double_t *y, Int_t nn, Double_t *xc, Double_t *yc, Double_t xclipl, Double_t yclipb, Double_t xclipr, Double_t yclipt);  Clip polygon using the Sutherland-Hodgman algorithm. ;  ; void Close (Option_t *option="""") override;  Delete all primitives in pad and pad itself. ;  ; virtual void Closed ();  ; void CloseToolTip (TObject *tip) override;  Hide tool tip. ;  ; void CopyPixmap () override;  Copy the pixmap of the pad to the canvas. ;  ; void CopyPixmaps () override;  Copy the sub-pixmaps of the pad to the canvas. ;  ; TObject * Crea",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:5880,Integrability,rout,routine,5880,"(const char *name, const char *command) override;  Add a new TExec object to the list of Execs. ;  ; void AddFirst (TObject *obj, Option_t *opt="""", Bool_t modified=kTRUE) override;  Add an object as first in list of primitives with speicified draw option When. ;  ; virtual void AutoExec ();  Execute the list of Execs when a pad event occurs. ;  ; void Browse (TBrowser *b) override;  Browse pad. ;  ; TLegend * BuildLegend (Double_t x1=0.3, Double_t y1=0.21, Double_t x2=0.3, Double_t y2=0.21, const char *title="""", Option_t *option="""") override;  Build a legend from the graphical objects in the pad. ;  ; TVirtualPad * cd (Int_t subpadnumber=0) override;  Set Current pad. ;  ; void Clear (Option_t *option="""") override;  Delete all pad primitives. ;  ; Int_t Clip (Double_t *x, Double_t *y, Double_t xclipl, Double_t yclipb, Double_t xclipr, Double_t yclipt) override;  Clipping routine: Cohen Sutherland algorithm. ;  ; virtual Int_t Clip (Float_t *x, Float_t *y, Float_t xclipl, Float_t yclipb, Float_t xclipr, Float_t yclipt);  Clipping routine: Cohen Sutherland algorithm. ;  ; virtual Int_t ClippingCode (Double_t x, Double_t y, Double_t xcl1, Double_t ycl1, Double_t xcl2, Double_t ycl2);  Compute the endpoint codes for TPad::Clip. ;  ; virtual Int_t ClipPolygon (Int_t n, Double_t *x, Double_t *y, Int_t nn, Double_t *xc, Double_t *yc, Double_t xclipl, Double_t yclipb, Double_t xclipr, Double_t yclipt);  Clip polygon using the Sutherland-Hodgman algorithm. ;  ; void Close (Option_t *option="""") override;  Delete all primitives in pad and pad itself. ;  ; virtual void Closed ();  ; void CloseToolTip (TObject *tip) override;  Hide tool tip. ;  ; void CopyPixmap () override;  Copy the pixmap of the pad to the canvas. ;  ; void CopyPixmaps () override;  Copy the sub-pixmaps of the pad to the canvas. ;  ; TObject * CreateToolTip (const TBox *b, const char *text, Long_t delayms) override;  Create a tool tip and return its pointer. ;  ; void DeleteExec (const char *name) override;  R",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:15070,Integrability,rout,routine,15070,"to X. ;  ; Double_t PadtoY (Double_t y) const override;  Convert y from pad to Y. ;  ; void Paint (Option_t *option="""") override;  Paint all primitives in pad. ;  ; void PaintBox (Double_t x1, Double_t y1, Double_t x2, Double_t y2, Option_t *option="""") override;  Paint box in CurrentPad World coordinates. ;  ; void PaintFillArea (Int_t n, Double_t *x, Double_t *y, Option_t *option="""") override;  Paint fill area in CurrentPad World coordinates. ;  ; void PaintFillArea (Int_t n, Float_t *x, Float_t *y, Option_t *option="""") override;  ; void PaintFillAreaHatches (Int_t n, Double_t *x, Double_t *y, Int_t FillStyle);  This function paints hatched fill area according to the FillStyle value The convention for the Hatch is the following: ;  ; void PaintFillAreaNDC (Int_t n, Double_t *x, Double_t *y, Option_t *option="""") override;  Paint fill area in CurrentPad NDC coordinates. ;  ; void PaintHatches (Double_t dy, Double_t angle, Int_t nn, Double_t *xx, Double_t *yy);  This routine draw hatches inclined with the angle ""angle"" and spaced of ""dy"" in normalized device coordinates in the surface defined by n,xx,yy. ;  ; void PaintLine (Double_t x1, Double_t y1, Double_t x2, Double_t y2) override;  Paint line in CurrentPad World coordinates. ;  ; void PaintLine3D (Double_t *p1, Double_t *p2) override;  Paint 3-D line in the CurrentPad. ;  ; void PaintLine3D (Float_t *p1, Float_t *p2) override;  Paint 3-D line in the CurrentPad. ;  ; void PaintLineNDC (Double_t u1, Double_t v1, Double_t u2, Double_t v2) override;  Paint line in normalized coordinates. ;  ; void PaintModified () override;  Traverse pad hierarchy and (re)paint only modified pads. ;  ; void PaintPadFrame (Double_t xmin, Double_t ymin, Double_t xmax, Double_t ymax) override;  Paint histogram/graph frame. ;  ; void PaintPolyLine (Int_t n, Double_t *x, Double_t *y, Option_t *option="""") override;  Paint polyline in CurrentPad World coordinates. ;  ; void PaintPolyLine (Int_t n, Float_t *x, Float_t *y, Option_t *option=""""",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:27713,Integrability,message,message,27713,"eckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsiste",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:28134,Integrability,message,message,28134,"const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns k",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:28924,Integrability,message,message,28924,"method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual B",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:31263,Integrability,message,message,31263,"r delete (void *ptr, void *vp);  Only called by placement new when throwing an exception. ;  ; void operator delete[] (void *ptr);  Operator delete []. ;  ; void operator delete[] (void *ptr, void *vp);  Only called by placement new[] when throwing an exception. ;  ; void * operator new (size_t sz);  ; void * operator new (size_t sz, void *vp);  ; void * operator new[] (size_t sz);  ; void * operator new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:31454,Integrability,message,message,31454,"id *vp);  Only called by placement new[] when throwing an exception. ;  ; void * operator new (size_t sz);  ; void * operator new (size_t sz, void *vp);  ; void * operator new[] (size_t sz);  ; void * operator new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Ch",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:42367,Integrability,depend,depending,42367,"st char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void DestroyExternalViewer3D ();  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute distance from point px,py to a box. ;  ; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute action corresponding to one event. ;  ; virtual void HideToolTip (Int_t event);  Hide tool tip depending on the event type. ;  ; void PaintBorder (Color_t color, Bool_t tops);  Paint the pad border. ;  ; void PaintBorderPS (Double_t xl, Double_t yl, Double_t xt, Double_t yt, Int_t bmode, Int_t bsize, Int_t dark, Int_t light) override;  Paint a frame border with Postscript. ;  ; void PaintDate ();  Paint the current date and time if the option Date is set on via gStyle->SetOptDate() Paint the current file name if the option File is set on via gStyle->SetOptFile() ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save primitives in this pad on the C++ source file out. ;  ; void SetBatch (Bool_t batch=kTRUE) override;  Set pad in batch mode. ;  ;  Protected Member Functions inherited from TVirtualPad; void * GetSender () override;  true when resizing the pad ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:61421,Integrability,rout,routine,61421,"ad(subpadnumber); ; Implements TVirtualPad.; Definition at line 693 of file TPad.cxx. ◆ Class(). static TClass * TPad::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TPad::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TPad::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 419 of file TPad.h. ◆ Clear(). void TPad::Clear ; (; Option_t * ; option = """"). overridevirtual . Delete all pad primitives. ; If the bit kClearAfterCR has been set for this pad, the Clear function will execute only after having pressed a CarriageReturn Set the bit with mypad->SetBit(TPad::kClearAfterCR) ; Implements TVirtualPad.; Definition at line 722 of file TPad.cxx. ◆ Clip() [1/2]. Int_t TPad::Clip ; (; Double_t * ; x, . Double_t * ; y, . Double_t ; xclipl, . Double_t ; yclipb, . Double_t ; xclipr, . Double_t ; yclipt . ). overridevirtual . Clipping routine: Cohen Sutherland algorithm. ; - If Clip ==2 the segment is outside the boundary.; If Clip ==1 the segment has one point outside the boundary.; If Clip ==0 the segment is inside the boundary. Parameters. [in,out]x[],y[]Segment coordinates (2 points) ; [in]xclipl,yclipb,xclipr,ycliptClipping boundary . Implements TVirtualPad.; Definition at line 830 of file TPad.cxx. ◆ Clip() [2/2]. Int_t TPad::Clip ; (; Float_t * ; x, . Float_t * ; y, . Float_t ; xclipl, . Float_t ; yclipb, . Float_t ; xclipr, . Float_t ; yclipt . ). virtual . Clipping routine: Cohen Sutherland algorithm. . If Clip ==2 the segment is outside the boundary.; If Clip ==1 the segment has one point outside the boundary.; If Clip ==0 the segment is inside the boundary. Parameters. [in,out]x[],y[]Segment coordinates (2 points) ; [in]xclipl,yclipb,xclipr,ycliptClipping boundary . Definition at line 768 of file TPad.cxx. ◆ ClippingCode(). Int_t TPad::ClippingCode ; (; Double_t ; x, . Double_t ; y, . Double_t ; xcl1, . Double_t ; ycl",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:61971,Integrability,rout,routine,61971," ; If the bit kClearAfterCR has been set for this pad, the Clear function will execute only after having pressed a CarriageReturn Set the bit with mypad->SetBit(TPad::kClearAfterCR) ; Implements TVirtualPad.; Definition at line 722 of file TPad.cxx. ◆ Clip() [1/2]. Int_t TPad::Clip ; (; Double_t * ; x, . Double_t * ; y, . Double_t ; xclipl, . Double_t ; yclipb, . Double_t ; xclipr, . Double_t ; yclipt . ). overridevirtual . Clipping routine: Cohen Sutherland algorithm. ; - If Clip ==2 the segment is outside the boundary.; If Clip ==1 the segment has one point outside the boundary.; If Clip ==0 the segment is inside the boundary. Parameters. [in,out]x[],y[]Segment coordinates (2 points) ; [in]xclipl,yclipb,xclipr,ycliptClipping boundary . Implements TVirtualPad.; Definition at line 830 of file TPad.cxx. ◆ Clip() [2/2]. Int_t TPad::Clip ; (; Float_t * ; x, . Float_t * ; y, . Float_t ; xclipl, . Float_t ; yclipb, . Float_t ; xclipr, . Float_t ; yclipt . ). virtual . Clipping routine: Cohen Sutherland algorithm. . If Clip ==2 the segment is outside the boundary.; If Clip ==1 the segment has one point outside the boundary.; If Clip ==0 the segment is inside the boundary. Parameters. [in,out]x[],y[]Segment coordinates (2 points) ; [in]xclipl,yclipb,xclipr,ycliptClipping boundary . Definition at line 768 of file TPad.cxx. ◆ ClippingCode(). Int_t TPad::ClippingCode ; (; Double_t ; x, . Double_t ; y, . Double_t ; xcl1, . Double_t ; ycl1, . Double_t ; xcl2, . Double_t ; ycl2 . ). virtual . Compute the endpoint codes for TPad::Clip. ; Definition at line 901 of file TPad.cxx. ◆ ClipPolygon(). Int_t TPad::ClipPolygon ; (; Int_t ; n, . Double_t * ; x, . Double_t * ; y, . Int_t ; nn, . Double_t * ; xc, . Double_t * ; yc, . Double_t ; xclipl, . Double_t ; yclipb, . Double_t ; xclipr, . Double_t ; yclipt . ). virtual . Clip polygon using the Sutherland-Hodgman algorithm. ; Parameters. [in]nNumber of points in the polygon to be clipped ; [in]x,yPolygon x[n], y[n] do be clipped vertic",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:86577,Integrability,rout,routine,86577,"tY1 ; (; ); const. inlineoverridevirtual . Implements TVirtualPad.; Definition at line 242 of file TPad.h. ◆ GetY2(). Double_t TPad::GetY2 ; (; ); const. inlineoverridevirtual . Implements TVirtualPad.; Definition at line 243 of file TPad.h. ◆ GetYlowNDC(). Double_t TPad::GetYlowNDC ; (; ); const. inlineoverridevirtual . Implements TVirtualPad.; Definition at line 213 of file TPad.h. ◆ HasCrosshair(). Bool_t TPad::HasCrosshair ; (; ); const. overridevirtual . Return kTRUE if the crosshair has been activated (via SetCrosshair). ; Implements TVirtualPad.; Definition at line 6642 of file TPad.cxx. ◆ HasFixedAspectRatio(). Bool_t TPad::HasFixedAspectRatio ; (; ); const. inlineoverridevirtual . Implements TVirtualPad.; Definition at line 270 of file TPad.h. ◆ Hash(). ULong_t TPad::Hash ; (; ); const. inlineoverridevirtual . Return hash value for this object. ; Note: If this routine is overloaded in a derived class, this derived class should also add ROOT::CallRecursiveRemoveIfNeeded(*this); ROOT::CallRecursiveRemoveIfNeededvoid CallRecursiveRemoveIfNeeded(TObject &obj)call RecursiveRemove for obj if gROOT is valid and obj.TestBit(kMustCleanup) is true.Definition TROOT.h:395; Otherwise, when RecursiveRemove is called (by ~TObject or example) for this type of object, the transversal of THashList and THashTable containers will will have to be done without call Hash (and hence be linear rather than logarithmic complexity). You will also see warnings like Error in <ROOT::Internal::TCheckHashRecursiveRemoveConsistency::CheckRecursiveRemove>: The class SomeName overrides TObject::Hash but does not call TROOT::RecursiveRemove in its destructor.; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TPad::HashULong_t Hash() const overrideReturn hash value for this object.Definition TPad.h:267; TROOT::RecursiveRemovevoid RecursiveRemove(TObject *ob",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:87509,Integrability,message,message,87509,"nlineoverridevirtual . Return hash value for this object. ; Note: If this routine is overloaded in a derived class, this derived class should also add ROOT::CallRecursiveRemoveIfNeeded(*this); ROOT::CallRecursiveRemoveIfNeededvoid CallRecursiveRemoveIfNeeded(TObject &obj)call RecursiveRemove for obj if gROOT is valid and obj.TestBit(kMustCleanup) is true.Definition TROOT.h:395; Otherwise, when RecursiveRemove is called (by ~TObject or example) for this type of object, the transversal of THashList and THashTable containers will will have to be done without call Hash (and hence be linear rather than logarithmic complexity). You will also see warnings like Error in <ROOT::Internal::TCheckHashRecursiveRemoveConsistency::CheckRecursiveRemove>: The class SomeName overrides TObject::Hash but does not call TROOT::RecursiveRemove in its destructor.; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TPad::HashULong_t Hash() const overrideReturn hash value for this object.Definition TPad.h:267; TROOT::RecursiveRemovevoid RecursiveRemove(TObject *obj) overrideRecursively remove this object from the list of Cleanups.Definition TROOT.cxx:2498. Reimplemented from TObject.; Definition at line 267 of file TPad.h. ◆ HasViewer3D(). Bool_t TPad::HasViewer3D ; (; ); const. inlineoverridevirtual . Implements TVirtualPad.; Definition at line 401 of file TPad.h. ◆ HideToolTip(). void TPad::HideToolTip ; (; Int_t ; event). protectedvirtual . Hide tool tip depending on the event type. ; Typically tool tips are hidden when event is not a kMouseEnter and not a kMouseMotion event. ; Definition at line 2847 of file TPad.cxx. ◆ HighLight(). void TPad::HighLight ; (; Color_t ; color = kRed, . Bool_t ; set = kTRUE . ). overridevirtual . Highlight pad. ; do not highlight when printing on Postscript ; Implements TVirtualPad.; Definition at line 3055 of file TPad.cx",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:88097,Integrability,depend,depending,88097,"than logarithmic complexity). You will also see warnings like Error in <ROOT::Internal::TCheckHashRecursiveRemoveConsistency::CheckRecursiveRemove>: The class SomeName overrides TObject::Hash but does not call TROOT::RecursiveRemove in its destructor.; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TPad::HashULong_t Hash() const overrideReturn hash value for this object.Definition TPad.h:267; TROOT::RecursiveRemovevoid RecursiveRemove(TObject *obj) overrideRecursively remove this object from the list of Cleanups.Definition TROOT.cxx:2498. Reimplemented from TObject.; Definition at line 267 of file TPad.h. ◆ HasViewer3D(). Bool_t TPad::HasViewer3D ; (; ); const. inlineoverridevirtual . Implements TVirtualPad.; Definition at line 401 of file TPad.h. ◆ HideToolTip(). void TPad::HideToolTip ; (; Int_t ; event). protectedvirtual . Hide tool tip depending on the event type. ; Typically tool tips are hidden when event is not a kMouseEnter and not a kMouseMotion event. ; Definition at line 2847 of file TPad.cxx. ◆ HighLight(). void TPad::HighLight ; (; Color_t ; color = kRed, . Bool_t ; set = kTRUE . ). overridevirtual . Highlight pad. ; do not highlight when printing on Postscript ; Implements TVirtualPad.; Definition at line 3055 of file TPad.cxx. ◆ IncrementPaletteColor(). Int_t TPad::IncrementPaletteColor ; (; Int_t ; i, . TString ; opt . ). overridevirtual . Increment (i==1) or set (i>1) the number of autocolor in the pad. ; Implements TVirtualPad.; Definition at line 3104 of file TPad.cxx. ◆ IsA(). TClass * TPad::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Reimplemented in TSlider.; Definition at line 419 of file TPad.h. ◆ IsBatch(). Bool_t TPad::IsBatch ; (; ); const. overridevirtual . Is pad in batch mode ? ; Implements TVirtualPad.; Definition at line 2856 o",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:94959,Integrability,rout,routine,94959,"llowing: ; `FillStyle = 3ijk`. i (1-9) : specify the space between each hatch 1 = minimum 9 = maximum the final spacing is i*GetHatchesSpacing(). The hatches spacing is set by SetHatchesSpacing(); j (0-9) : specify angle between 0 and 90 degrees; 0 = 0; 1 = 10; 2 = 20; 3 = 30; 4 = 45; 5 = Not drawn; 6 = 60; 7 = 70; 8 = 80; 9 = 90. k (0-9) : specify angle between 90 and 180 degrees; 0 = 180; 1 = 170; 2 = 160; 3 = 150; 4 = 135; 5 = Not drawn; 6 = 120; 7 = 110; 8 = 100; 9 = 90 . Definition at line 4108 of file TPad.cxx. ◆ PaintFillAreaNDC(). void TPad::PaintFillAreaNDC ; (; Int_t ; n, . Double_t * ; x, . Double_t * ; y, . Option_t * ; option = """" . ). overridevirtual . Paint fill area in CurrentPad NDC coordinates. ; Implements TVirtualPad.; Definition at line 4065 of file TPad.cxx. ◆ PaintHatches(). void TPad::PaintHatches ; (; Double_t ; dy, . Double_t ; angle, . Int_t ; nn, . Double_t * ; xx, . Double_t * ; yy . ). This routine draw hatches inclined with the angle ""angle"" and spaced of ""dy"" in normalized device coordinates in the surface defined by n,xx,yy. ; Definition at line 4161 of file TPad.cxx. ◆ PaintLine(). void TPad::PaintLine ; (; Double_t ; x1, . Double_t ; y1, . Double_t ; x2, . Double_t ; y2 . ). overridevirtual . Paint line in CurrentPad World coordinates. ; Implements TVirtualPad.; Definition at line 4313 of file TPad.cxx. ◆ PaintLine3D() [1/2]. void TPad::PaintLine3D ; (; Double_t * ; p1, . Double_t * ; p2 . ). overridevirtual . Paint 3-D line in the CurrentPad. ; Implements TVirtualPad.; Definition at line 4374 of file TPad.cxx. ◆ PaintLine3D() [2/2]. void TPad::PaintLine3D ; (; Float_t * ; p1, . Float_t * ; p2 . ). overridevirtual . Paint 3-D line in the CurrentPad. ; Implements TVirtualPad.; Definition at line 4356 of file TPad.cxx. ◆ PaintLineNDC(). void TPad::PaintLineNDC ; (; Double_t ; u1, . Double_t ; v1, . Double_t ; u2, . Double_t ; v2 . ). overridevirtual . Paint line in normalized coordinates. ; Implements TVirtualPad.; Definition at line ",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:99465,Integrability,rout,routine,99465,"t * ; text . ). overridevirtual . Paint text in CurrentPad World coordinates. ; Implements TVirtualPad.; Definition at line 4600 of file TPad.cxx. ◆ PaintTextNDC() [1/2]. void TPad::PaintTextNDC ; (; Double_t ; u, . Double_t ; v, . const char * ; text . ). overridevirtual . Paint text in CurrentPad NDC coordinates. ; Implements TVirtualPad.; Definition at line 4613 of file TPad.cxx. ◆ PaintTextNDC() [2/2]. void TPad::PaintTextNDC ; (; Double_t ; u, . Double_t ; v, . const wchar_t * ; text . ). overridevirtual . Paint text in CurrentPad NDC coordinates. ; Implements TVirtualPad.; Definition at line 4630 of file TPad.cxx. ◆ Pick(). TPad * TPad::Pick ; (; Int_t ; px, . Int_t ; py, . TObjLink *& ; pickobj . ). virtual . Search for an object at pixel position px,py. ; Check if point is in this pad.; If yes, check if it is in one of the sub-pads; If found in the pad, compute closest distance of approach to each primitive.; If one distance of approach is found to be within the limit Distancemaximum the corresponding primitive is selected and the routine returns. ; Reimplemented in TCanvas.; Definition at line 4657 of file TPad.cxx. ◆ PixeltoX(). Double_t TPad::PixeltoX ; (; Int_t ; px). overridevirtual . Convert pixel to X coordinate. ; Implements TVirtualPad.; Definition at line 7388 of file TPad.cxx. ◆ PixeltoXY(). void TPad::PixeltoXY ; (; Int_t ; xpixel, . Int_t ; ypixel, . Double_t & ; x, . Double_t & ; y . ). virtual . Convert pixel to X/Y coordinates. ; Definition at line 7406 of file TPad.cxx. ◆ PixeltoY(). Double_t TPad::PixeltoY ; (; Int_t ; py). overridevirtual . Convert pixel to Y coordinate. ; Implements TVirtualPad.; Definition at line 7397 of file TPad.cxx. ◆ PlaceBox(). Bool_t TPad::PlaceBox ; (; TObject * ; o, . Double_t ; w, . Double_t ; h, . Double_t & ; xl, . Double_t & ; yb, . Option_t * ; option = ""lb"" . ). overridevirtual . Place a box in NDC space. ; Returnstrue if the box could be placed, false if not.; Parameters. [in]opointer to the box to be pla",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:3480,Modifiability,inherit,inherited,3480,"t py) overrideCompute distance from point px,py to a line.Definition TH1.cxx:2823; TH1::ExecuteEventvoid ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideExecute action corresponding to one event.Definition TH1.cxx:3240; TLine::DistancetoPrimitiveInt_t DistancetoPrimitive(Int_t px, Int_t py) overrideCompute distance from point px,py to a line.Definition TLine.cxx:89; TLine::ExecuteEventvoid ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideExecute action corresponding to one event.Definition TLine.cxx:132; A Pad supports linear and log scales coordinate systems. The transformation coefficients are explained in TPad::ResizePad. ; Definition at line 28 of file TPad.h. Public Types; enum  { ;   kFraming = (1ULL << ( 6 )); , kHori = (1ULL << ( 9 )); , kClipFrame = (1ULL << ( 10 )); , kPrintingPS = (1ULL << ( 11 )); , ;   kCannotMove = (1ULL << ( 12 )); , kClearAfterCR = (1ULL << ( 14 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TPad ();  Pad default constructor. ;  ;  TPad (const char *name, const char *title, Double_t xlow, Double_t ylow, Double_t xup, Double_t yup, Color_t color=-1, Short_t bordersize=-1, Short_t bordermode=-2);  Pad constructor. ;  ;  ~TPad () override;  Pad destructor. ;  ; void AbsCoordinates (Bool_t set) override;  ; Double_t AbsPixeltoX (Int_t px) override;  ; virtual void AbsPixeltoXY (Int_t xpixel, Int_t ypixel, Double_",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:7432,Modifiability,inherit,inheritance,7432,"l void Closed ();  ; void CloseToolTip (TObject *tip) override;  Hide tool tip. ;  ; void CopyPixmap () override;  Copy the pixmap of the pad to the canvas. ;  ; void CopyPixmaps () override;  Copy the sub-pixmaps of the pad to the canvas. ;  ; TObject * CreateToolTip (const TBox *b, const char *text, Long_t delayms) override;  Create a tool tip and return its pointer. ;  ; void DeleteExec (const char *name) override;  Remove TExec name from the list of Execs. ;  ; void DeleteToolTip (TObject *tip) override;  Delete tool tip object. ;  ; void Divide (Int_t nx=1, Int_t ny=1, Float_t xmargin=0.01, Float_t ymargin=0.01, Int_t color=0) override;  Automatic pad generation by division. ;  ; virtual void DivideSquare (Int_t n, Float_t xmargin=0.01, Float_t ymargin=0.01, Int_t color=0);  ""n"" is the total number of sub-pads. ;  ; void Draw (Option_t *option="""") override;  Draw Pad in Current pad (re-parent pad if necessary). ;  ; void DrawClassObject (const TObject *obj, Option_t *option="""") override;  Draw class inheritance tree of the class to which obj belongs. ;  ; void DrawCollideGrid ();  This method draws the collide grid on top of the canvas. ;  ; virtual void DrawCrosshair ();  Function called to draw a crosshair in the canvas. ;  ; TH1F * DrawFrame (Double_t xmin, Double_t ymin, Double_t xmax, Double_t ymax, const char *title="""") override;  Draw an empty pad frame with X and Y axis. ;  ; virtual void EventPave ();  ; void ExecuteEventAxis (Int_t event, Int_t px, Int_t py, TAxis *axis) override;  Execute action corresponding to one event for a TAxis object (called by TAxis::ExecuteEvent.) This member function is called when an axis is clicked with the locator. ;  ; TObject * FindObject (const char *name) const override;  Search if object named name is inside this pad or in pads inside this pad. ;  ; TObject * FindObject (const TObject *obj) const override;  Search if obj is in pad or in pads inside this pad. ;  ; Double_t GetAbsHNDC () const override;  ; Double_t Ge",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:25079,Modifiability,inherit,inherited,25079,"*emode="""") override;  Loop and sleep until a primitive with name=pname is found in the pad. ;  ; virtual void x3d (Option_t *type="""");  Deprecated: use TPad::GetViewer3D() instead. ;  ; Int_t XtoAbsPixel (Double_t x) const override;  Convert X coordinate to absolute pixel. ;  ; Double_t XtoPad (Double_t x) const override;  Convert x from X to pad. ;  ; Int_t XtoPixel (Double_t x) const override;  Convert X coordinate to pixel. ;  ; virtual void XYtoAbsPixel (Double_t x, Double_t y, Int_t &xpixel, Int_t &ypixel) const;  Convert X/Y into absolute pixel coordinates. ;  ; virtual void XYtoPixel (Double_t x, Double_t y, Int_t &xpixel, Int_t &ypixel) const;  Convert X/Y into pixel coordinates. ;  ; Int_t YtoAbsPixel (Double_t y) const override;  Convert Y coordinate to absolute pixel. ;  ; Double_t YtoPad (Double_t y) const override;  Convert y from Y to pad. ;  ; Int_t YtoPixel (Double_t y) const override;  Convert Y coordinate to pixel. ;  ;  Public Member Functions inherited from TVirtualPad;  TVirtualPad ();  VirtualPad default constructor. ;  ;  TVirtualPad (const char *name, const char *title, Double_t xlow, Double_t ylow, Double_t xup, Double_t yup, Color_t color=19, Short_t bordersize=4, Short_t bordermode=1);  VirtualPad constructor. ;  ; virtual ~TVirtualPad ();  VirtualPad destructor. ;  ; TClass * IsA () const override;  ; Bool_t IsBeingResized () const;  ; virtual Bool_t PadInHighlightMode () const;  Should always return false, unless you can highlight selected object in pad. ;  ; virtual Bool_t PadInSelectionMode () const;  Should always return false unless you have non-standard picking. ;  ; virtual void PopTopLevelSelectable ();  Does nothing, unless you implement your own picking. ;  ; virtual void PushSelectableObject (TObject *obj);  Does nothing, unless you implement your own picking. ;  ; virtual void PushTopLevelSelectable (TObject *top);  Does nothing, unless you implement your own picking. ;  ; virtual void RangeAxisChanged ();  ; void Streamer (TB",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:26285,Modifiability,inherit,inherited,26285," xup, Double_t yup, Color_t color=19, Short_t bordersize=4, Short_t bordermode=1);  VirtualPad constructor. ;  ; virtual ~TVirtualPad ();  VirtualPad destructor. ;  ; TClass * IsA () const override;  ; Bool_t IsBeingResized () const;  ; virtual Bool_t PadInHighlightMode () const;  Should always return false, unless you can highlight selected object in pad. ;  ; virtual Bool_t PadInSelectionMode () const;  Should always return false unless you have non-standard picking. ;  ; virtual void PopTopLevelSelectable ();  Does nothing, unless you implement your own picking. ;  ; virtual void PushSelectableObject (TObject *obj);  Does nothing, unless you implement your own picking. ;  ; virtual void PushTopLevelSelectable (TObject *top);  Does nothing, unless you implement your own picking. ;  ; virtual void RangeAxisChanged ();  ; void Streamer (TBuffer &) override;  Stream an object of class TVirtualPad. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void UnZoomed ();  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Op",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:27343,Modifiability,inherit,inheritance,27343,";  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:29022,Modifiability,inherit,inherits,29022,"ject with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notificat",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:29139,Modifiability,inherit,inherits,29139,"const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *re",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:31761,Modifiability,inherit,inherited,31761,"Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ; ",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:33266,Modifiability,inherit,inherited,33266,";  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetLineAttributes ();  Invoke the DialogCanvas Line attributes. ;  ; virtual void SetLineColor (Color_t lcolor);  Set the line color. ;  ; virtual void SetLineColorAlpha (Color_t lcolor, Float_t lalpha);  Set a transparent line color. ;  ; virtual void SetLineStyle (Style_t lstyle);  Set the line style. ;  ; virtual void SetLineWidth (Width_t lwidth);  Set the line width. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttFill;  TAttFill ();  AttFill default constructor. ;  ;  TAttFill (Color_t fcolor, Style_t fstyle);  AttFill normal constructor. ;  ; virtual ~TAttFill ();  AttFill destructor. ;  ; void Copy (TAttFill &attfill) const;  Copy this fill attributes to a new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ; ",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:34446,Modifiability,inherit,inherited,34446,"al ~TAttFill ();  AttFill destructor. ;  ; void Copy (TAttFill &attfill) const;  Copy this fill attributes to a new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttPad;  TAttPad ();  Constructor. ;  ; virtual ~TAttPad ();  Destructor. ;  ; virtual void Copy (TAttPad &attpad) const;  copy function ;  ; Float_t GetAfile () const;  ; Float_t GetAstat () const;  ; Float_t GetBottomMargin () const;  ; Int_t GetFrameBorderMode () const;  ; Width_t GetFrameBorderSize () const;  ; Color_t GetFrameFillColor () const;  ; Style_t GetFrameFillStyle () const;  ; Color_t GetFrameLineColor () const;  ; Style_t GetFrameLineStyle () const;  ; Width_t GetFrameLineWidth () const;  ; Float_t GetLeftMargin () const;  ; Float_t GetRightMargin () const;  ; Float_t GetTopMargin () const;  ; Float_t GetXfile () const;  ; Float_t GetXstat () const;  ; Float_t GetYfile () const;  ; Float_t GetYstat () const;  ; virtual void ResetAttPad (Option_t *option="""");  Reset pad attributes. ;  ; virtual void SetAfile (Float_t afile);  ; virtual void SetAstat (Float_t astat);  ; virtual void SetBottomMargin (Float_t bottommargin);  Set Pad bo",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:36462,Modifiability,inherit,inherited,36462,"irtual void SetBottomMargin (Float_t bottommargin);  Set Pad bottom margin in fraction of the pad height. ;  ; void SetFrameBorderMode (Int_t mode=1);  ; void SetFrameBorderSize (Width_t size=1);  ; void SetFrameFillColor (Color_t color=1);  ; void SetFrameFillStyle (Style_t styl=0);  ; void SetFrameLineColor (Color_t color=1);  ; void SetFrameLineStyle (Style_t styl=0);  ; void SetFrameLineWidth (Width_t width=1);  ; virtual void SetLeftMargin (Float_t leftmargin);  Set Pad left margin in fraction of the pad width. ;  ; virtual void SetMargin (Float_t left, Float_t right, Float_t bottom, Float_t top);  Set all margins. ;  ; virtual void SetRightMargin (Float_t rightmargin);  Set Pad right margin in fraction of the pad width. ;  ; virtual void SetTopMargin (Float_t topmargin);  Set Pad top margin in fraction of the pad height. ;  ; virtual void SetXfile (Float_t xfile);  ; virtual void SetXstat (Float_t xstat);  ; virtual void SetYfile (Float_t yfile);  ; virtual void SetYstat (Float_t ystat);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without a",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:38430,Modifiability,inherit,inherited,38430," Activate signal with single parameter. ;  ; template<typename... T> ; void EmitVA (const char *signal_name, Int_t, const T &... params);  Emit a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttBBox2D; virtual ~TAttBBox2D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void DrawColorTable ();  Static function to Display Color Table in a pad. ;  ; static Int_t GetMaxPickDistance ();  Static function (see also TPad::SetMaxPickDistance) ;  ; static void SetMaxPickDistance (Int_t maxPick=5);  static function to set the maximum Pick Distance fgMaxPickDistance This parameter is used in TPad::Pick to select an object if its DistancetoPrimitive returns a value < fgMaxPickDistance The default value is 5 pixels. ;  ;  Static Public Member Functions inherited from TVirtualPad; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualPad *& Pad ();  Retur",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:39222,Modifiability,inherit,inherited,39222,. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttBBox2D; virtual ~TAttBBox2D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void DrawColorTable ();  Static function to Display Color Table in a pad. ;  ; static Int_t GetMaxPickDistance ();  Static function (see also TPad::SetMaxPickDistance) ;  ; static void SetMaxPickDistance (Int_t maxPick=5);  static function to set the maximum Pick Distance fgMaxPickDistance This parameter is used in TPad::Pick to select an object if its DistancetoPrimitive returns a value < fgMaxPickDistance The default value is 5 pixels. ;  ;  Static Public Member Functions inherited from TVirtualPad; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualPad *& Pad ();  Return the current pad for the current thread. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Nam,MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:39520,Modifiability,inherit,inherited,39520,t char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void DrawColorTable ();  Static function to Display Color Table in a pad. ;  ; static Int_t GetMaxPickDistance ();  Static function (see also TPad::SetMaxPickDistance) ;  ; static void SetMaxPickDistance (Int_t maxPick=5);  static function to set the maximum Pick Distance fgMaxPickDistance This parameter is used in TPad::Pick to select an object if its DistancetoPrimitive returns a value < fgMaxPickDistance The default value is 5 pixels. ;  ;  Static Public Member Functions inherited from TVirtualPad; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualPad *& Pad ();  Return the current pad for the current thread. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttPad; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * D,MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:40038,Modifiability,inherit,inherited,40038,"FileName ();  ; static TVirtualPad *& Pad ();  Return the current pad for the current thread. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttPad; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection betw",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:40250,Modifiability,inherit,inherited,40250,"FileName ();  ; static TVirtualPad *& Pad ();  Return the current pad for the current thread. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttPad; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection betw",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:40462,Modifiability,inherit,inherited,40462,"FileName ();  ; static TVirtualPad *& Pad ();  Return the current pad for the current thread. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttPad; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection betw",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:40673,Modifiability,inherit,inherited,40673,"FileName ();  ; static TVirtualPad *& Pad ();  Return the current pad for the current thread. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttPad; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection betw",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:41848,Modifiability,inherit,inherited,41848,"();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void DestroyExternalViewer3D ();  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute distance from point px,py to a box. ;  ; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute action corresponding to one event. ;  ; virtual void HideToolTip (Int_t event);  Hide tool tip depending on the event type. ;  ; void PaintBorder (Color_t color, Bool_t tops);  Paint the pad border. ;  ; void PaintBorderPS (Double_t xl, Double_t yl, Double_t xt, Double_t yt, Int_t bmode, Int_t bsize, Int_t dark, Int_t light) override;  Paint a frame border with Postscript. ;  ; void PaintDate ();  Paint the current date and time if the option Date is set on via gStyle->SetOptDate() Paint the current file name if the option File is set on via gStyle->SetOptFile() ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Sav",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:43080,Modifiability,inherit,inherited,43080,"; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute action corresponding to one event. ;  ; virtual void HideToolTip (Int_t event);  Hide tool tip depending on the event type. ;  ; void PaintBorder (Color_t color, Bool_t tops);  Paint the pad border. ;  ; void PaintBorderPS (Double_t xl, Double_t yl, Double_t xt, Double_t yt, Int_t bmode, Int_t bsize, Int_t dark, Int_t light) override;  Paint a frame border with Postscript. ;  ; void PaintDate ();  Paint the current date and time if the option Date is set on via gStyle->SetOptDate() Paint the current file name if the option File is set on via gStyle->SetOptFile() ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save primitives in this pad on the C++ source file out. ;  ; void SetBatch (Bool_t batch=kTRUE) override;  Set pad in batch mode. ;  ;  Protected Member Functions inherited from TVirtualPad; void * GetSender () override;  true when resizing the pad ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; Bool_t fAbsCoord;  Use absolute coordinates. ;  ; Double_t fAbsHNDC;  Absolute Height of pad along Y in NDC. ;  ; Double_t fAbsPixeltoXk;  Conversion coefficient for absolute pixel to X World. ;  ; Double_t fAbsPixeltoYk;  Conversion coefficient for absolute pixel to Y World. ;  ; Double_t fAbsWNDC;  Absolute Width of pad along X in NDC. ;  ; Double_t fAbsXlowNDC;  Absolute X top left corner of pad in NDC [0,1]. ;  ; Double_t fAbsYlowNDC;  Absolute Y top left corner of pad in NDC [0,1]. ;  ; Double_t fAspectRatio;  ratio of w/h in case of fixed ratio ;  ; Short_t fBorderMode;  Bordermode (-1=down, 0 = no border, 1=up) ;  ; Short_t fBorderSize;  pad bordersize in pixels ;  ; TCanvas",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:43199,Modifiability,inherit,inherited,43199,"; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute action corresponding to one event. ;  ; virtual void HideToolTip (Int_t event);  Hide tool tip depending on the event type. ;  ; void PaintBorder (Color_t color, Bool_t tops);  Paint the pad border. ;  ; void PaintBorderPS (Double_t xl, Double_t yl, Double_t xt, Double_t yt, Int_t bmode, Int_t bsize, Int_t dark, Int_t light) override;  Paint a frame border with Postscript. ;  ; void PaintDate ();  Paint the current date and time if the option Date is set on via gStyle->SetOptDate() Paint the current file name if the option File is set on via gStyle->SetOptFile() ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save primitives in this pad on the C++ source file out. ;  ; void SetBatch (Bool_t batch=kTRUE) override;  Set pad in batch mode. ;  ;  Protected Member Functions inherited from TVirtualPad; void * GetSender () override;  true when resizing the pad ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; Bool_t fAbsCoord;  Use absolute coordinates. ;  ; Double_t fAbsHNDC;  Absolute Height of pad along Y in NDC. ;  ; Double_t fAbsPixeltoXk;  Conversion coefficient for absolute pixel to X World. ;  ; Double_t fAbsPixeltoYk;  Conversion coefficient for absolute pixel to Y World. ;  ; Double_t fAbsWNDC;  Absolute Width of pad along X in NDC. ;  ; Double_t fAbsXlowNDC;  Absolute X top left corner of pad in NDC [0,1]. ;  ; Double_t fAbsYlowNDC;  Absolute Y top left corner of pad in NDC [0,1]. ;  ; Double_t fAspectRatio;  ratio of w/h in case of fixed ratio ;  ; Short_t fBorderMode;  Bordermode (-1=down, 0 = no border, 1=up) ;  ; Short_t fBorderSize;  pad bordersize in pixels ;  ; TCanvas",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:43410,Modifiability,inherit,inherited,43410,"olor_t color, Bool_t tops);  Paint the pad border. ;  ; void PaintBorderPS (Double_t xl, Double_t yl, Double_t xt, Double_t yt, Int_t bmode, Int_t bsize, Int_t dark, Int_t light) override;  Paint a frame border with Postscript. ;  ; void PaintDate ();  Paint the current date and time if the option Date is set on via gStyle->SetOptDate() Paint the current file name if the option File is set on via gStyle->SetOptFile() ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save primitives in this pad on the C++ source file out. ;  ; void SetBatch (Bool_t batch=kTRUE) override;  Set pad in batch mode. ;  ;  Protected Member Functions inherited from TVirtualPad; void * GetSender () override;  true when resizing the pad ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; Bool_t fAbsCoord;  Use absolute coordinates. ;  ; Double_t fAbsHNDC;  Absolute Height of pad along Y in NDC. ;  ; Double_t fAbsPixeltoXk;  Conversion coefficient for absolute pixel to X World. ;  ; Double_t fAbsPixeltoYk;  Conversion coefficient for absolute pixel to Y World. ;  ; Double_t fAbsWNDC;  Absolute Width of pad along X in NDC. ;  ; Double_t fAbsXlowNDC;  Absolute X top left corner of pad in NDC [0,1]. ;  ; Double_t fAbsYlowNDC;  Absolute Y top left corner of pad in NDC [0,1]. ;  ; Double_t fAspectRatio;  ratio of w/h in case of fixed ratio ;  ; Short_t fBorderMode;  Bordermode (-1=down, 0 = no border, 1=up) ;  ; Short_t fBorderSize;  pad bordersize in pixels ;  ; TCanvas * fCanvas {nullptr};  ! Pointer to mother canvas ;  ; Int_t fCGnx;  ! Size of the collide grid along x ;  ; Int_t fCGny;  ! Size of the collide grid along y ;  ; std::vector< Bool_t > fCollideGrid;  ! Grid used to find ",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:48145,Modifiability,inherit,inherited,48145,"le_t fVtoPixelk;  Conversion coefficient for V NDC to pixel. ;  ; Double_t fWNDC;  Width of pad along X in Normalized Coordinates (NDC) ;  ; Double_t fX1;  X of lower X coordinate. ;  ; Double_t fX2;  X of upper X coordinate. ;  ; Double_t fXlowNDC;  X bottom left corner of pad in NDC [0,1]. ;  ; Double_t fXtoAbsPixelk;  Conversion coefficient for X World to absolute pixel. ;  ; Double_t fXtoPixel;  xpixel = fXtoPixelk + fXtoPixel*xworld ;  ; Double_t fXtoPixelk;  Conversion coefficient for X World to pixel. ;  ; Double_t fXUpNDC;  ; Double_t fY1;  Y of lower Y coordinate. ;  ; Double_t fY2;  Y of upper Y coordinate. ;  ; Double_t fYlowNDC;  Y bottom left corner of pad in NDC [0,1]. ;  ; Double_t fYtoAbsPixelk;  Conversion coefficient for Y World to absolute pixel. ;  ; Double_t fYtoPixel;  ypixel = fYtoPixelk + fYtoPixel*yworld ;  ; Double_t fYtoPixelk;  Conversion coefficient for Y World to pixel. ;  ; Double_t fYUpNDC;  ;  Protected Attributes inherited from TVirtualPad; Bool_t fResizing;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttPad; Float_t fAfile;  Alignment for the file name. ;  ; Float_t fAstat;  Alignment for the statistics. ;  ; Float_t fBottomMargin;  BottomMargin. ;  ; Int_t fFrameBorderMode;  Pad frame border mode. ;  ; Width_t fFrameBorderSize;  Pad frame border size. ;  ; Color_t fFrameFillColor;  Pad frame fill color. ;  ; Style_t fFrameFillStyle;  Pad frame fill style. ;  ; Color_t fFrameLineColor;  Pad frame line color. ;  ; Style_t fFrameLineStyle;  Pad frame line style. ;  ; Width_t fFrameLineWidth;  Pad frame line width. ;  ; Float_t fLeftMargin;  LeftMargin. ;  ; Float_t fRightMargin;  RightMargin. ;  ; Float_t fTopMargin;  TopMargin. ;  ; Float_t fXfile;",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:48216,Modifiability,inherit,inherited,48216,"le_t fVtoPixelk;  Conversion coefficient for V NDC to pixel. ;  ; Double_t fWNDC;  Width of pad along X in Normalized Coordinates (NDC) ;  ; Double_t fX1;  X of lower X coordinate. ;  ; Double_t fX2;  X of upper X coordinate. ;  ; Double_t fXlowNDC;  X bottom left corner of pad in NDC [0,1]. ;  ; Double_t fXtoAbsPixelk;  Conversion coefficient for X World to absolute pixel. ;  ; Double_t fXtoPixel;  xpixel = fXtoPixelk + fXtoPixel*xworld ;  ; Double_t fXtoPixelk;  Conversion coefficient for X World to pixel. ;  ; Double_t fXUpNDC;  ; Double_t fY1;  Y of lower Y coordinate. ;  ; Double_t fY2;  Y of upper Y coordinate. ;  ; Double_t fYlowNDC;  Y bottom left corner of pad in NDC [0,1]. ;  ; Double_t fYtoAbsPixelk;  Conversion coefficient for Y World to absolute pixel. ;  ; Double_t fYtoPixel;  ypixel = fYtoPixelk + fYtoPixel*yworld ;  ; Double_t fYtoPixelk;  Conversion coefficient for Y World to pixel. ;  ; Double_t fYUpNDC;  ;  Protected Attributes inherited from TVirtualPad; Bool_t fResizing;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttPad; Float_t fAfile;  Alignment for the file name. ;  ; Float_t fAstat;  Alignment for the statistics. ;  ; Float_t fBottomMargin;  BottomMargin. ;  ; Int_t fFrameBorderMode;  Pad frame border mode. ;  ; Width_t fFrameBorderSize;  Pad frame border size. ;  ; Color_t fFrameFillColor;  Pad frame fill color. ;  ; Style_t fFrameFillStyle;  Pad frame fill style. ;  ; Color_t fFrameLineColor;  Pad frame line color. ;  ; Style_t fFrameLineStyle;  Pad frame line style. ;  ; Width_t fFrameLineWidth;  Pad frame line width. ;  ; Float_t fLeftMargin;  LeftMargin. ;  ; Float_t fRightMargin;  RightMargin. ;  ; Float_t fTopMargin;  TopMargin. ;  ; Float_t fXfile;",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:48377,Modifiability,inherit,inherited,48377,"r X coordinate. ;  ; Double_t fXlowNDC;  X bottom left corner of pad in NDC [0,1]. ;  ; Double_t fXtoAbsPixelk;  Conversion coefficient for X World to absolute pixel. ;  ; Double_t fXtoPixel;  xpixel = fXtoPixelk + fXtoPixel*xworld ;  ; Double_t fXtoPixelk;  Conversion coefficient for X World to pixel. ;  ; Double_t fXUpNDC;  ; Double_t fY1;  Y of lower Y coordinate. ;  ; Double_t fY2;  Y of upper Y coordinate. ;  ; Double_t fYlowNDC;  Y bottom left corner of pad in NDC [0,1]. ;  ; Double_t fYtoAbsPixelk;  Conversion coefficient for Y World to absolute pixel. ;  ; Double_t fYtoPixel;  ypixel = fYtoPixelk + fYtoPixel*yworld ;  ; Double_t fYtoPixelk;  Conversion coefficient for Y World to pixel. ;  ; Double_t fYUpNDC;  ;  Protected Attributes inherited from TVirtualPad; Bool_t fResizing;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttPad; Float_t fAfile;  Alignment for the file name. ;  ; Float_t fAstat;  Alignment for the statistics. ;  ; Float_t fBottomMargin;  BottomMargin. ;  ; Int_t fFrameBorderMode;  Pad frame border mode. ;  ; Width_t fFrameBorderSize;  Pad frame border size. ;  ; Color_t fFrameFillColor;  Pad frame fill color. ;  ; Style_t fFrameFillStyle;  Pad frame fill style. ;  ; Color_t fFrameLineColor;  Pad frame line color. ;  ; Style_t fFrameLineStyle;  Pad frame line style. ;  ; Width_t fFrameLineWidth;  Pad frame line width. ;  ; Float_t fLeftMargin;  LeftMargin. ;  ; Float_t fRightMargin;  RightMargin. ;  ; Float_t fTopMargin;  TopMargin. ;  ; Float_t fXfile;  X position where to draw the file name. ;  ; Float_t fXstat;  X position where to draw the statistics. ;  ; Float_t fYfile;  Y position where to draw the file name. ;  ; Float_t fYstat;  Y position where to ",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:48510,Modifiability,inherit,inherited,48510,"for X World to absolute pixel. ;  ; Double_t fXtoPixel;  xpixel = fXtoPixelk + fXtoPixel*xworld ;  ; Double_t fXtoPixelk;  Conversion coefficient for X World to pixel. ;  ; Double_t fXUpNDC;  ; Double_t fY1;  Y of lower Y coordinate. ;  ; Double_t fY2;  Y of upper Y coordinate. ;  ; Double_t fYlowNDC;  Y bottom left corner of pad in NDC [0,1]. ;  ; Double_t fYtoAbsPixelk;  Conversion coefficient for Y World to absolute pixel. ;  ; Double_t fYtoPixel;  ypixel = fYtoPixelk + fYtoPixel*yworld ;  ; Double_t fYtoPixelk;  Conversion coefficient for Y World to pixel. ;  ; Double_t fYUpNDC;  ;  Protected Attributes inherited from TVirtualPad; Bool_t fResizing;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttPad; Float_t fAfile;  Alignment for the file name. ;  ; Float_t fAstat;  Alignment for the statistics. ;  ; Float_t fBottomMargin;  BottomMargin. ;  ; Int_t fFrameBorderMode;  Pad frame border mode. ;  ; Width_t fFrameBorderSize;  Pad frame border size. ;  ; Color_t fFrameFillColor;  Pad frame fill color. ;  ; Style_t fFrameFillStyle;  Pad frame fill style. ;  ; Color_t fFrameLineColor;  Pad frame line color. ;  ; Style_t fFrameLineStyle;  Pad frame line style. ;  ; Width_t fFrameLineWidth;  Pad frame line width. ;  ; Float_t fLeftMargin;  LeftMargin. ;  ; Float_t fRightMargin;  RightMargin. ;  ; Float_t fTopMargin;  TopMargin. ;  ; Float_t fXfile;  X position where to draw the file name. ;  ; Float_t fXstat;  X position where to draw the statistics. ;  ; Float_t fYfile;  Y position where to draw the file name. ;  ; Float_t fYstat;  Y position where to draw the statistics. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ; ",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:49442,Modifiability,inherit,inherited,49442," from TAttPad; Float_t fAfile;  Alignment for the file name. ;  ; Float_t fAstat;  Alignment for the statistics. ;  ; Float_t fBottomMargin;  BottomMargin. ;  ; Int_t fFrameBorderMode;  Pad frame border mode. ;  ; Width_t fFrameBorderSize;  Pad frame border size. ;  ; Color_t fFrameFillColor;  Pad frame fill color. ;  ; Style_t fFrameFillStyle;  Pad frame fill style. ;  ; Color_t fFrameLineColor;  Pad frame line color. ;  ; Style_t fFrameLineStyle;  Pad frame line style. ;  ; Width_t fFrameLineWidth;  Pad frame line width. ;  ; Float_t fLeftMargin;  LeftMargin. ;  ; Float_t fRightMargin;  RightMargin. ;  ; Float_t fTopMargin;  TopMargin. ;  ; Float_t fXfile;  X position where to draw the file name. ;  ; Float_t fXstat;  X position where to draw the statistics. ;  ; Float_t fYfile;  Y position where to draw the file name. ;  ; Float_t fYstat;  Y position where to draw the statistics. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Static Protected Attributes; static Int_t fgMaxPickDistance = 5;  Maximum Pick Distance. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Private Member Functions;  TPad (const TPad &pad)=delete;  ; Bool_t Collide (Int_t i, Int_t j, Int_t w, Int_t h);  Check if a box of size w and h collide some primitives in the pad at position i,j. ;  ; void CopyBackgroundPixmap (Int_t x, Int_t y);  Copy pixmap of this pad as background of the current pad. ;  ; void CopyBackgroundPixmaps (TPad *start, TPad *stop, Int_t x, Int_t y);  Copy pixmaps of pads laying below pad ""stop"" into pad ""stop"". ;  ; void DrawDist (Rectangle_t aBBox, Rectangle_t bBBox, char mode);  Draw Arrows to indicated equal distances of Objects with given BBoxes. ;  ; void FillCollideGrid (TObject *o);  Initialise the grid used to ",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:49749,Modifiability,inherit,inherited,49749," Color_t fFrameFillColor;  Pad frame fill color. ;  ; Style_t fFrameFillStyle;  Pad frame fill style. ;  ; Color_t fFrameLineColor;  Pad frame line color. ;  ; Style_t fFrameLineStyle;  Pad frame line style. ;  ; Width_t fFrameLineWidth;  Pad frame line width. ;  ; Float_t fLeftMargin;  LeftMargin. ;  ; Float_t fRightMargin;  RightMargin. ;  ; Float_t fTopMargin;  TopMargin. ;  ; Float_t fXfile;  X position where to draw the file name. ;  ; Float_t fXstat;  X position where to draw the statistics. ;  ; Float_t fYfile;  Y position where to draw the file name. ;  ; Float_t fYstat;  Y position where to draw the statistics. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Static Protected Attributes; static Int_t fgMaxPickDistance = 5;  Maximum Pick Distance. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Private Member Functions;  TPad (const TPad &pad)=delete;  ; Bool_t Collide (Int_t i, Int_t j, Int_t w, Int_t h);  Check if a box of size w and h collide some primitives in the pad at position i,j. ;  ; void CopyBackgroundPixmap (Int_t x, Int_t y);  Copy pixmap of this pad as background of the current pad. ;  ; void CopyBackgroundPixmaps (TPad *start, TPad *stop, Int_t x, Int_t y);  Copy pixmaps of pads laying below pad ""stop"" into pad ""stop"". ;  ; void DrawDist (Rectangle_t aBBox, Rectangle_t bBBox, char mode);  Draw Arrows to indicated equal distances of Objects with given BBoxes. ;  ; void FillCollideGrid (TObject *o);  Initialise the grid used to find empty space when adding a box (Legend) in a pad. ;  ; void FillCollideGridTBox (TObject *o);  ; void FillCollideGridTFrame (TObject *o);  ; void FillCollideGridTGraph (TObject *o);  ; void FillCollideGridTH1 (TObject *o);  ; void LineNotFree (Int_t x1, Int_t x2,",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:51064,Modifiability,inherit,inherited,51064,"Pad *start, TPad *stop, Int_t x, Int_t y);  Copy pixmaps of pads laying below pad ""stop"" into pad ""stop"". ;  ; void DrawDist (Rectangle_t aBBox, Rectangle_t bBBox, char mode);  Draw Arrows to indicated equal distances of Objects with given BBoxes. ;  ; void FillCollideGrid (TObject *o);  Initialise the grid used to find empty space when adding a box (Legend) in a pad. ;  ; void FillCollideGridTBox (TObject *o);  ; void FillCollideGridTFrame (TObject *o);  ; void FillCollideGridTGraph (TObject *o);  ; void FillCollideGridTH1 (TObject *o);  ; void LineNotFree (Int_t x1, Int_t x2, Int_t y1, Int_t y2);  Mark as ""not free"" the cells along a line. ;  ; TPad & operator= (const TPad &rhs)=delete;  . Private Attributes; TObject * fTip {nullptr};  ! tool tip associated with box ;  . Friends; class TWebCanvas;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  . #include <TPad.h>. Inheritance diagram for TPad:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:51170,Modifiability,inherit,inherited,51170,"Pad *start, TPad *stop, Int_t x, Int_t y);  Copy pixmaps of pads laying below pad ""stop"" into pad ""stop"". ;  ; void DrawDist (Rectangle_t aBBox, Rectangle_t bBBox, char mode);  Draw Arrows to indicated equal distances of Objects with given BBoxes. ;  ; void FillCollideGrid (TObject *o);  Initialise the grid used to find empty space when adding a box (Legend) in a pad. ;  ; void FillCollideGridTBox (TObject *o);  ; void FillCollideGridTFrame (TObject *o);  ; void FillCollideGridTGraph (TObject *o);  ; void FillCollideGridTH1 (TObject *o);  ; void LineNotFree (Int_t x1, Int_t x2, Int_t y1, Int_t y2);  Mark as ""not free"" the cells along a line. ;  ; TPad & operator= (const TPad &rhs)=delete;  . Private Attributes; TObject * fTip {nullptr};  ! tool tip associated with box ;  . Friends; class TWebCanvas;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  . #include <TPad.h>. Inheritance diagram for TPad:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:60243,Modifiability,variab,variable,60243,"gend; If x1 is equal to x2 and y1 is equal to y2 the legend will be automatically placed to avoid overlapping with the existing primitives already displayed. x1 is considered as the width of the legend and y1 the height. By default the legend is automatically placed with width = x1= x2 = 0.3 and height = y1= y2 = 0.21. ; Implements TVirtualPad.; Definition at line 555 of file TPad.cxx. ◆ cd(). TVirtualPad * TPad::cd ; (; Int_t ; subpadnumber = 0). overridevirtual . Set Current pad. ; When a canvas/pad is divided via TPad::Divide, one can directly set the current path to one of the subdivisions. See TPad::Divide for the convention to number sub-pads.; Returns the new current pad, or 0 in case of failure.; For example: c1.Divide(2,3); // create 6 pads (2 divisions along x, 3 along y).; To set the current pad to the bottom right pad, do c1.cd(6);; Note1: c1.cd() is equivalent to c1.cd(0) and sets the current pad to c1 itself.; Note2: after a statement like c1.cd(6), the global variable gPad points to the current pad. One can use gPad to set attributes of the current pad.; Note3: One can get a pointer to one of the sub-pads of pad with: TPad subpad = (TPad)pad->GetPad(subpadnumber); ; Implements TVirtualPad.; Definition at line 693 of file TPad.cxx. ◆ Class(). static TClass * TPad::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TPad::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TPad::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 419 of file TPad.h. ◆ Clear(). void TPad::Clear ; (; Option_t * ; option = """"). overridevirtual . Delete all pad primitives. ; If the bit kClearAfterCR has been set for this pad, the Clear function will execute only after having pressed a CarriageReturn Set the bit with mypad->SetBit(TPad::kClearAfterCR) ; Implements TVirtualPad.; Definition at line 722 of file TPad.cxx. ◆ Clip() [1/2]. Int_",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:68365,Modifiability,variab,variable,68365,"file TPad.cxx. ◆ Divide(). void TPad::Divide ; (; Int_t ; nx = 1, . Int_t ; ny = 1, . Float_t ; xmargin = 0.01, . Float_t ; ymargin = 0.01, . Int_t ; color = 0 . ). overridevirtual . Automatic pad generation by division. . The current canvas is divided in nx by ny equal divisions (pads).; xmargin is the space along x between pads in percent of canvas.; ymargin is the space along y between pads in percent of canvas.; color is the color of the new pads. If 0, color is the canvas color. Pads are automatically named canvasname_n where n is the division number starting from top left pad.; Example if canvasname=c1 , nx=2, ny=3:. Once a pad is divided into sub-pads, one can set the current pad to a subpad with a given division number as illustrated above with TPad::cd(subpad_number).; For example, to set the current pad to c1_4, one can do: c1->cd(4); Note1: c1.cd() is equivalent to c1.cd(0) and sets the current pad to c1 itself.; Note2: after a statement like c1.cd(6), the global variable gPad points to the current pad. One can use gPad to set attributes of the current pad.; Note3: in case xmargin <=0 and ymargin <= 0, there is no space between pads. The current pad margins are recomputed to optimize the layout. ; Implements TVirtualPad.; Definition at line 1249 of file TPad.cxx. ◆ DivideSquare(). void TPad::DivideSquare ; (; Int_t ; n, . Float_t ; xmargin = 0.01, . Float_t ; ymargin = 0.01, . Int_t ; color = 0 . ). virtual . ""n"" is the total number of sub-pads. ; The number of sub-pads along the X and Y axis are computed according to the square root of n. ; Definition at line 1341 of file TPad.cxx. ◆ Draw(). void TPad::Draw ; (; Option_t * ; option = """"). overridevirtual . Draw Pad in Current pad (re-parent pad if necessary). ; Implements TVirtualPad.; Definition at line 1364 of file TPad.cxx. ◆ DrawClassObject(). void TPad::DrawClassObject ; (; const TObject * ; classobj, . Option_t * ; option = """" . ). overridevirtual . Draw class inheritance tree of the class to which",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:69338,Modifiability,inherit,inheritance,69338," global variable gPad points to the current pad. One can use gPad to set attributes of the current pad.; Note3: in case xmargin <=0 and ymargin <= 0, there is no space between pads. The current pad margins are recomputed to optimize the layout. ; Implements TVirtualPad.; Definition at line 1249 of file TPad.cxx. ◆ DivideSquare(). void TPad::DivideSquare ; (; Int_t ; n, . Float_t ; xmargin = 0.01, . Float_t ; ymargin = 0.01, . Int_t ; color = 0 . ). virtual . ""n"" is the total number of sub-pads. ; The number of sub-pads along the X and Y axis are computed according to the square root of n. ; Definition at line 1341 of file TPad.cxx. ◆ Draw(). void TPad::Draw ; (; Option_t * ; option = """"). overridevirtual . Draw Pad in Current pad (re-parent pad if necessary). ; Implements TVirtualPad.; Definition at line 1364 of file TPad.cxx. ◆ DrawClassObject(). void TPad::DrawClassObject ; (; const TObject * ; classobj, . Option_t * ; option = """" . ). overridevirtual . Draw class inheritance tree of the class to which obj belongs. ; If a class B inherits from a class A, description of B is drawn on the right side of description of A.; Member functions overridden by B are shown in class A with a blue line crossing-out the corresponding member function. ; Implements TVirtualPad.; Definition at line 1403 of file TPad.cxx. ◆ DrawCollideGrid(). void TPad::DrawCollideGrid ; (; ). This method draws the collide grid on top of the canvas. ; This is used for debugging only. At some point it will be removed. ; Definition at line 3473 of file TPad.cxx. ◆ DrawColorTable(). void TPad::DrawColorTable ; (; ). static . Static function to Display Color Table in a pad. ; Definition at line 1723 of file TPad.cxx. ◆ DrawCrosshair(). void TPad::DrawCrosshair ; (; ). virtual . Function called to draw a crosshair in the canvas. ; Example: Root > TFile f(""hsimple.root"");; Root > hpxpy.Draw();; Root > c1.SetCrosshair();; When moving the mouse in the canvas, a crosshair is drawn. if the canvas fCrosshair = ",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:69405,Modifiability,inherit,inherits,69405,"of the current pad.; Note3: in case xmargin <=0 and ymargin <= 0, there is no space between pads. The current pad margins are recomputed to optimize the layout. ; Implements TVirtualPad.; Definition at line 1249 of file TPad.cxx. ◆ DivideSquare(). void TPad::DivideSquare ; (; Int_t ; n, . Float_t ; xmargin = 0.01, . Float_t ; ymargin = 0.01, . Int_t ; color = 0 . ). virtual . ""n"" is the total number of sub-pads. ; The number of sub-pads along the X and Y axis are computed according to the square root of n. ; Definition at line 1341 of file TPad.cxx. ◆ Draw(). void TPad::Draw ; (; Option_t * ; option = """"). overridevirtual . Draw Pad in Current pad (re-parent pad if necessary). ; Implements TVirtualPad.; Definition at line 1364 of file TPad.cxx. ◆ DrawClassObject(). void TPad::DrawClassObject ; (; const TObject * ; classobj, . Option_t * ; option = """" . ). overridevirtual . Draw class inheritance tree of the class to which obj belongs. ; If a class B inherits from a class A, description of B is drawn on the right side of description of A.; Member functions overridden by B are shown in class A with a blue line crossing-out the corresponding member function. ; Implements TVirtualPad.; Definition at line 1403 of file TPad.cxx. ◆ DrawCollideGrid(). void TPad::DrawCollideGrid ; (; ). This method draws the collide grid on top of the canvas. ; This is used for debugging only. At some point it will be removed. ; Definition at line 3473 of file TPad.cxx. ◆ DrawColorTable(). void TPad::DrawColorTable ; (; ). static . Static function to Display Color Table in a pad. ; Definition at line 1723 of file TPad.cxx. ◆ DrawCrosshair(). void TPad::DrawCrosshair ; (; ). virtual . Function called to draw a crosshair in the canvas. ; Example: Root > TFile f(""hsimple.root"");; Root > hpxpy.Draw();; Root > c1.SetCrosshair();; When moving the mouse in the canvas, a crosshair is drawn. if the canvas fCrosshair = 1 , the crosshair spans the full canvas; if the canvas fCrosshair > 1 , the crosshai",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:84361,Modifiability,plugin,plugin,84361,"; ); const. inlineoverridevirtual . Returns the maximum y-coordinate value visible on the pad. If log axis the returned value is in decades. ; Implements TVirtualPad.; Definition at line 234 of file TPad.h. ◆ GetUymin(). Double_t TPad::GetUymin ; (; ); const. inlineoverridevirtual . Returns the minimum y-coordinate value visible on the pad. If log axis the returned value is in decades. ; Implements TVirtualPad.; Definition at line 230 of file TPad.h. ◆ GetView(). TView * TPad::GetView ; (; ); const. inlineoverridevirtual . Implements TVirtualPad.; Definition at line 254 of file TPad.h. ◆ GetView3D(). TObject * TPad::GetView3D ; (; ); const. inlineoverridevirtual . Implements TVirtualPad.; Definition at line 255 of file TPad.h. ◆ GetViewer3D(). TVirtualViewer3D * TPad::GetViewer3D ; (; Option_t * ; type = """"). overridevirtual . Create/obtain handle to 3D viewer. ; Valid types are:; 'pad' - pad drawing via TViewer3DPad any others registered with plugin manager supporting TVirtualViewer3D If an invalid/null type is requested then the current viewer is returned (if any), otherwise a default 'pad' type is returned . Implements TVirtualPad.; Definition at line 7151 of file TPad.cxx. ◆ GetVirtCanvas(). TVirtualPad * TPad::GetVirtCanvas ; (; ); const. overridevirtual . Get virtual canvas. ; Implements TVirtualPad.; Definition at line 2778 of file TPad.cxx. ◆ GetWh(). UInt_t TPad::GetWh ; (; ); const. overridevirtual . Get Wh. ; Implements TVirtualPad.; Definition at line 2829 of file TPad.cxx. ◆ GetWNDC(). Double_t TPad::GetWNDC ; (; ); const. inlineoverridevirtual . Get width of pad along X in Normalized Coordinates (NDC) ; Implements TVirtualPad.; Definition at line 215 of file TPad.h. ◆ GetWw(). UInt_t TPad::GetWw ; (; ); const. overridevirtual . Get Ww. ; Implements TVirtualPad.; Definition at line 2837 of file TPad.cxx. ◆ GetX1(). Double_t TPad::GetX1 ; (; ); const. inlineoverridevirtual . Implements TVirtualPad.; Definition at line 240 of file TPad.h. ◆ GetX2(). Double",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:739,Performance,perform,performed,739,". ROOT: TPad Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Static Protected Attributes |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TPad Class ReferenceGraphics » 2D Graphics » Graphics pad. ; The most important graphics class in the ROOT system. ; A Pad is contained in a Canvas.; A Pad may contain other pads (unlimited pad hierarchy).; A pad is a linked list of primitives of any type (graphics objects, histograms, detectors, tracks, etc.).; Adding a new element into a pad is in general performed by the Draw member function of the object classes.; It is important to realize that the pad is a linked list of references to the original object. For example, in case of a histogram, the histogram.Draw() operation only stores a reference to the histogram object and not a graphical representation of this histogram. When the mouse is used to change (say the bin content), the bin content of the original histogram is changed.; The convention used in ROOT is that a Draw operation only adds a reference to the object. The effective drawing is performed when the canvas receives a signal to be painted. This signal is generally sent when typing carriage return in the command input or when a graphical operation has been performed on one of the pads of this canvas. When a Canvas/Pad is repainted, the member function Paint for all objects in the Pad linked list is invoked. When the mouse is moved on the Pad, The member function DistancetoPrimitive is called for all the elements in the pad. DistancetoPrimitive returns the distance in pixels to this object.; When the object is within the distance window, the member function ExecuteEvent is called for this object.; In ExecuteEvent, move, changes can be performed on the object.; For examples of Dis",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:1292,Performance,perform,performed,1292,"er Functions |; Private Attributes |; Friends |; List of all members ; TPad Class ReferenceGraphics » 2D Graphics » Graphics pad. ; The most important graphics class in the ROOT system. ; A Pad is contained in a Canvas.; A Pad may contain other pads (unlimited pad hierarchy).; A pad is a linked list of primitives of any type (graphics objects, histograms, detectors, tracks, etc.).; Adding a new element into a pad is in general performed by the Draw member function of the object classes.; It is important to realize that the pad is a linked list of references to the original object. For example, in case of a histogram, the histogram.Draw() operation only stores a reference to the histogram object and not a graphical representation of this histogram. When the mouse is used to change (say the bin content), the bin content of the original histogram is changed.; The convention used in ROOT is that a Draw operation only adds a reference to the object. The effective drawing is performed when the canvas receives a signal to be painted. This signal is generally sent when typing carriage return in the command input or when a graphical operation has been performed on one of the pads of this canvas. When a Canvas/Pad is repainted, the member function Paint for all objects in the Pad linked list is invoked. When the mouse is moved on the Pad, The member function DistancetoPrimitive is called for all the elements in the pad. DistancetoPrimitive returns the distance in pixels to this object.; When the object is within the distance window, the member function ExecuteEvent is called for this object.; In ExecuteEvent, move, changes can be performed on the object.; For examples of DistancetoPrimitive and ExecuteEvent functions, see classes TLine::DistancetoPrimitive, TLine::ExecuteEvent; TBox::DistancetoPrimitive, TBox::ExecuteEvent; TH1::DistancetoPrimitive, TH1::ExecuteEvent; TBox::ExecuteEventvoid ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideExecute action corresponding to ",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:1469,Performance,perform,performed,1469,"s pad. ; The most important graphics class in the ROOT system. ; A Pad is contained in a Canvas.; A Pad may contain other pads (unlimited pad hierarchy).; A pad is a linked list of primitives of any type (graphics objects, histograms, detectors, tracks, etc.).; Adding a new element into a pad is in general performed by the Draw member function of the object classes.; It is important to realize that the pad is a linked list of references to the original object. For example, in case of a histogram, the histogram.Draw() operation only stores a reference to the histogram object and not a graphical representation of this histogram. When the mouse is used to change (say the bin content), the bin content of the original histogram is changed.; The convention used in ROOT is that a Draw operation only adds a reference to the object. The effective drawing is performed when the canvas receives a signal to be painted. This signal is generally sent when typing carriage return in the command input or when a graphical operation has been performed on one of the pads of this canvas. When a Canvas/Pad is repainted, the member function Paint for all objects in the Pad linked list is invoked. When the mouse is moved on the Pad, The member function DistancetoPrimitive is called for all the elements in the pad. DistancetoPrimitive returns the distance in pixels to this object.; When the object is within the distance window, the member function ExecuteEvent is called for this object.; In ExecuteEvent, move, changes can be performed on the object.; For examples of DistancetoPrimitive and ExecuteEvent functions, see classes TLine::DistancetoPrimitive, TLine::ExecuteEvent; TBox::DistancetoPrimitive, TBox::ExecuteEvent; TH1::DistancetoPrimitive, TH1::ExecuteEvent; TBox::ExecuteEventvoid ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideExecute action corresponding to one event.Definition TBox.cxx:232; TBox::DistancetoPrimitiveInt_t DistancetoPrimitive(Int_t px, Int_t py) overrideCompute di",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:1956,Performance,perform,performed,1956,"raw() operation only stores a reference to the histogram object and not a graphical representation of this histogram. When the mouse is used to change (say the bin content), the bin content of the original histogram is changed.; The convention used in ROOT is that a Draw operation only adds a reference to the object. The effective drawing is performed when the canvas receives a signal to be painted. This signal is generally sent when typing carriage return in the command input or when a graphical operation has been performed on one of the pads of this canvas. When a Canvas/Pad is repainted, the member function Paint for all objects in the Pad linked list is invoked. When the mouse is moved on the Pad, The member function DistancetoPrimitive is called for all the elements in the pad. DistancetoPrimitive returns the distance in pixels to this object.; When the object is within the distance window, the member function ExecuteEvent is called for this object.; In ExecuteEvent, move, changes can be performed on the object.; For examples of DistancetoPrimitive and ExecuteEvent functions, see classes TLine::DistancetoPrimitive, TLine::ExecuteEvent; TBox::DistancetoPrimitive, TBox::ExecuteEvent; TH1::DistancetoPrimitive, TH1::ExecuteEvent; TBox::ExecuteEventvoid ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideExecute action corresponding to one event.Definition TBox.cxx:232; TBox::DistancetoPrimitiveInt_t DistancetoPrimitive(Int_t px, Int_t py) overrideCompute distance from point px,py to a box.Definition TBox.cxx:135; TH1::DistancetoPrimitiveInt_t DistancetoPrimitive(Int_t px, Int_t py) overrideCompute distance from point px,py to a line.Definition TH1.cxx:2823; TH1::ExecuteEventvoid ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideExecute action corresponding to one event.Definition TH1.cxx:3240; TLine::DistancetoPrimitiveInt_t DistancetoPrimitive(Int_t px, Int_t py) overrideCompute distance from point px,py to a line.Definition TLine.cxx:89; TLine::ExecuteEvent",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:68581,Performance,optimiz,optimize,68581,"pad generation by division. . The current canvas is divided in nx by ny equal divisions (pads).; xmargin is the space along x between pads in percent of canvas.; ymargin is the space along y between pads in percent of canvas.; color is the color of the new pads. If 0, color is the canvas color. Pads are automatically named canvasname_n where n is the division number starting from top left pad.; Example if canvasname=c1 , nx=2, ny=3:. Once a pad is divided into sub-pads, one can set the current pad to a subpad with a given division number as illustrated above with TPad::cd(subpad_number).; For example, to set the current pad to c1_4, one can do: c1->cd(4); Note1: c1.cd() is equivalent to c1.cd(0) and sets the current pad to c1 itself.; Note2: after a statement like c1.cd(6), the global variable gPad points to the current pad. One can use gPad to set attributes of the current pad.; Note3: in case xmargin <=0 and ymargin <= 0, there is no space between pads. The current pad margins are recomputed to optimize the layout. ; Implements TVirtualPad.; Definition at line 1249 of file TPad.cxx. ◆ DivideSquare(). void TPad::DivideSquare ; (; Int_t ; n, . Float_t ; xmargin = 0.01, . Float_t ; ymargin = 0.01, . Int_t ; color = 0 . ). virtual . ""n"" is the total number of sub-pads. ; The number of sub-pads along the X and Y axis are computed according to the square root of n. ; Definition at line 1341 of file TPad.cxx. ◆ Draw(). void TPad::Draw ; (; Option_t * ; option = """"). overridevirtual . Draw Pad in Current pad (re-parent pad if necessary). ; Implements TVirtualPad.; Definition at line 1364 of file TPad.cxx. ◆ DrawClassObject(). void TPad::DrawClassObject ; (; const TObject * ; classobj, . Option_t * ; option = """" . ). overridevirtual . Draw class inheritance tree of the class to which obj belongs. ; If a class B inherits from a class A, description of B is drawn on the right side of description of A.; Member functions overridden by B are shown in class A with a blue line cro",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:90871,Performance,perform,performs,90871,"ridevirtual . Implements TVirtualPad.; Definition at line 276 of file TPad.h. ◆ IsWeb(). Bool_t TPad::IsWeb ; (; ); const. overridevirtual . Is web ? ; Reimplemented from TVirtualPad.; Definition at line 2871 of file TPad.cxx. ◆ LineNotFree(). void TPad::LineNotFree ; (; Int_t ; x1, . Int_t ; x2, . Int_t ; y1, . Int_t ; y2 . ). private . Mark as ""not free"" the cells along a line. ; Definition at line 3274 of file TPad.cxx. ◆ ls(). void TPad::ls ; (; Option_t * ; option = """"); const. overridevirtual . List all primitives in pad. ; Implements TVirtualPad.; Definition at line 3090 of file TPad.cxx. ◆ Modified(). void TPad::Modified ; (; Bool_t ; flag = true). overridevirtual . Mark pad modified Will be repainted when TCanvas::Update() will be called next time. ; Implements TVirtualPad.; Definition at line 7369 of file TPad.cxx. ◆ ModifiedUpdate(). void TPad::ModifiedUpdate ; (; ). overridevirtual . Short cut to call Modified() and Update() in a single call. ; On Mac with Cocoa, it performs an additional ProcessEvents(). ; Implements TVirtualPad.; Definition at line 3530 of file TPad.cxx. ◆ NextPaletteColor(). Int_t TPad::NextPaletteColor ; (; ). overridevirtual . Get the next autocolor in the pad. ; Implements TVirtualPad.; Definition at line 3118 of file TPad.cxx. ◆ OpaqueMoving(). Bool_t TPad::OpaqueMoving ; (; ); const. overridevirtual . Is pad moving in opaque mode ? ; Implements TVirtualPad.; Definition at line 2879 of file TPad.cxx. ◆ OpaqueResizing(). Bool_t TPad::OpaqueResizing ; (; ); const. overridevirtual . Is pad resizing in opaque mode ? ; Implements TVirtualPad.; Definition at line 2887 of file TPad.cxx. ◆ operator=(). TPad & TPad::operator= ; (; const TPad & ; rhs). privatedelete . ◆ PadtoX(). Double_t TPad::PadtoX ; (; Double_t ; x); const. overridevirtual . Convert x from pad to X. ; Implements TVirtualPad.; Definition at line 3542 of file TPad.cxx. ◆ PadtoY(). Double_t TPad::PadtoY ; (; Double_t ; y); const. overridevirtual . Convert y from pad to Y. ",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:127669,Performance,perform,performed,127669," Definition at line 6350 of file TPad.cxx. ◆ StartEditing(). virtual void TPad::StartEditing ; (; ). inlinevirtual . Definition at line 417 of file TPad.h. ◆ Streamer(). void TPad::Streamer ; (; TBuffer & ; b). overridevirtual . Stream a class object. ; Reimplemented from TObject.; Reimplemented in TSlider.; Definition at line 6713 of file TPad.cxx. ◆ StreamerNVirtual(). void TPad::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 419 of file TPad.h. ◆ Update(). void TPad::Update ; (; ). overridevirtual . Update pad. ; Implements TVirtualPad.; Definition at line 2935 of file TPad.cxx. ◆ UpdateAsync(). void TPad::UpdateAsync ; (; ). overridevirtual . Asynchronous pad update. ; In case of web-based canvas triggers update of the canvas on the client side, but does not wait that real update is completed. Avoids blocking of caller thread. Have to be used if called from other web-based widget to avoid logical dead-locks. In case of normal canvas just canvas->Update() is performed. ; Implements TVirtualPad.; Definition at line 2947 of file TPad.cxx. ◆ UseCurrentStyle(). void TPad::UseCurrentStyle ; (; ). overridevirtual . Force a copy of current style for all objects in pad. ; Reimplemented from TObject.; Definition at line 6927 of file TPad.cxx. ◆ UtoAbsPixel(). Int_t TPad::UtoAbsPixel ; (; Double_t ; u); const. overridevirtual . Convert X NDC to absolute pixel. ; Implements TVirtualPad.; Definition at line 7459 of file TPad.cxx. ◆ UtoPixel(). Int_t TPad::UtoPixel ; (; Double_t ; u); const. overridevirtual . Convert X NDC to pixel. ; Implements TVirtualPad.; Definition at line 7433 of file TPad.cxx. ◆ VtoAbsPixel(). Int_t TPad::VtoAbsPixel ; (; Double_t ; v); const. overridevirtual . Convert Y NDC to absolute pixel. ; Implements TVirtualPad.; Definition at line 7467 of file TPad.cxx. ◆ VtoPixel(). Int_t TPad::VtoPixel ; (; Double_t ; v); const. overridevirtual . Convert Y NDC to pixel. ; Implements TVirtualPad.; Definition at line ",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:666,Safety,detect,detectors,666,". ROOT: TPad Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Static Protected Attributes |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TPad Class ReferenceGraphics » 2D Graphics » Graphics pad. ; The most important graphics class in the ROOT system. ; A Pad is contained in a Canvas.; A Pad may contain other pads (unlimited pad hierarchy).; A pad is a linked list of primitives of any type (graphics objects, histograms, detectors, tracks, etc.).; Adding a new element into a pad is in general performed by the Draw member function of the object classes.; It is important to realize that the pad is a linked list of references to the original object. For example, in case of a histogram, the histogram.Draw() operation only stores a reference to the histogram object and not a graphical representation of this histogram. When the mouse is used to change (say the bin content), the bin content of the original histogram is changed.; The convention used in ROOT is that a Draw operation only adds a reference to the object. The effective drawing is performed when the canvas receives a signal to be painted. This signal is generally sent when typing carriage return in the command input or when a graphical operation has been performed on one of the pads of this canvas. When a Canvas/Pad is repainted, the member function Paint for all objects in the Pad linked list is invoked. When the mouse is moved on the Pad, The member function DistancetoPrimitive is called for all the elements in the pad. DistancetoPrimitive returns the distance in pixels to this object.; When the object is within the distance window, the member function ExecuteEvent is called for this object.; In ExecuteEvent, move, changes can be performed on the object.; For examples of Dis",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:54839,Safety,avoid,avoid,54839,"ition at line 379 of file TPad.cxx. Member Function Documentation. ◆ AbsCoordinates(). void TPad::AbsCoordinates ; (; Bool_t ; set). inlineoverridevirtual . Implements TVirtualPad.; Definition at line 167 of file TPad.h. ◆ AbsPixeltoX(). Double_t TPad::AbsPixeltoX ; (; Int_t ; px). inlineoverridevirtual . Implements TVirtualPad.; Definition at line 168 of file TPad.h. ◆ AbsPixeltoXY(). void TPad::AbsPixeltoXY ; (; Int_t ; xpixel, . Int_t ; ypixel, . Double_t & ; x, . Double_t & ; y . ). virtual . Convert absolute pixel into X/Y coordinates. ; Definition at line 7378 of file TPad.cxx. ◆ AbsPixeltoY(). Double_t TPad::AbsPixeltoY ; (; Int_t ; py). inlineoverridevirtual . Implements TVirtualPad.; Definition at line 169 of file TPad.h. ◆ Add(). void TPad::Add ; (; TObject * ; obj, . Option_t * ; opt = """", . Bool_t ; modified = kTRUE . ). overridevirtual . Add an object to list of primitives with speicified draw option When. ; modified set to kTRUE (default) pad will be marked as modifiedLet avoid usage of gPad when drawing object(s) in canvas or in subpads.; auto c1 = new TCanvas(""c1"",""Canvas with subpoads"", 600, 600);; c1->Divide(2,2);; ; for (Int_t n = 1; n <= 4; ++n) {; auto h1 = new TH1I(TString::Format(""hist_%d"",n), ""Random hist"", 100, -5, 5);; h1->FillRandom(""gaus"", 2000 + n*1000);; c1->GetPad(n)->Add(h1);; }; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1I1-D histogram with an int per channel (see TH1 documentation)Definition TH1.h:540; TH1::FillRandomvirtual void FillRandom(const char *fname, Int_t ntimes=5000, TRandom *rng=nullptr)Fill histogram following distribution in function fname.Definition TH1.cxx:3519; TString::Formatstatic TString Format(const char *fmt,...)Static method which formats a string using a printf style format descriptor and return a TString.Definition TString.cxx:2378; int; c1return c1Definition legend1.C:41; nconst Int_t nDefinition legend1.C:16; h1TH1F * h1Definition legend1.C:5. Implements TVirtualPad.; Definition at line 418 of fil",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:57992,Safety,avoid,avoid,57992,"ouse to click on the contour of the histogram hpx. When the mouse is clicked, the bin number and its contents are printed. Example2 of use of exec1.C; Root > TFile f(""hsimple.root""); Root > hpxpy.Draw(); Root > c1.AddExec(""ex2"","".x exec2.C""); When moving the mouse in the canvas, a second canvas shows the projection along X of the bin corresponding to the Y position of the mouse. The resulting histogram is fitted with a gaussian. A ""dynamic"" line shows the current bin position in Y. This more elaborated example can be used as a starting point to develop more powerful interactive applications exploiting the C++ interpreter as a development engine. ; Implements TVirtualPad.; Definition at line 498 of file TPad.cxx. ◆ AddFirst(). void TPad::AddFirst ; (; TObject * ; obj, . Option_t * ; opt = """", . Bool_t ; modified = kTRUE . ). overridevirtual . Add an object as first in list of primitives with speicified draw option When. ; modified set to kTRUE (default) pad will be marked as modifiedLet avoid usage of gPad when drawing object(s) in canvas or in subpads. ; Implements TVirtualPad.; Definition at line 439 of file TPad.cxx. ◆ AutoExec(). void TPad::AutoExec ; (; ). virtual . Execute the list of Execs when a pad event occurs. ; Definition at line 508 of file TPad.cxx. ◆ Browse(). void TPad::Browse ; (; TBrowser * ; b). overridevirtual . Browse pad. ; Reimplemented from TObject.; Definition at line 523 of file TPad.cxx. ◆ BuildLegend(). TLegend * TPad::BuildLegend ; (; Double_t ; x1 = 0.3, . Double_t ; y1 = 0.21, . Double_t ; x2 = 0.3, . Double_t ; y2 = 0.21, . const char * ; title = """", . Option_t * ; option = """" . ). overridevirtual . Build a legend from the graphical objects in the pad. ; A simple method to build automatically a TLegend from the primitives in a TPad.; Only those deriving from TAttLine, TAttMarker and TAttFill are added, excluding TPave and TFrame derived classes.; ReturnsThe built TLegend; Parameters. [in]x1,y1,x2,y2The TLegend coordinates ; [in]titleTh",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:59346,Safety,avoid,avoid,59346," * ; b). overridevirtual . Browse pad. ; Reimplemented from TObject.; Definition at line 523 of file TPad.cxx. ◆ BuildLegend(). TLegend * TPad::BuildLegend ; (; Double_t ; x1 = 0.3, . Double_t ; y1 = 0.21, . Double_t ; x2 = 0.3, . Double_t ; y2 = 0.21, . const char * ; title = """", . Option_t * ; option = """" . ). overridevirtual . Build a legend from the graphical objects in the pad. ; A simple method to build automatically a TLegend from the primitives in a TPad.; Only those deriving from TAttLine, TAttMarker and TAttFill are added, excluding TPave and TFrame derived classes.; ReturnsThe built TLegend; Parameters. [in]x1,y1,x2,y2The TLegend coordinates ; [in]titleThe legend title. By default it is "" "" ; [in]optionThe TLegend option. The caller program owns the returned TLegend.; If the pad contains some TMultiGraph or THStack the individual graphs or histograms in them are added to the TLegend. Automatic placement of the legend; If x1 is equal to x2 and y1 is equal to y2 the legend will be automatically placed to avoid overlapping with the existing primitives already displayed. x1 is considered as the width of the legend and y1 the height. By default the legend is automatically placed with width = x1= x2 = 0.3 and height = y1= y2 = 0.21. ; Implements TVirtualPad.; Definition at line 555 of file TPad.cxx. ◆ cd(). TVirtualPad * TPad::cd ; (; Int_t ; subpadnumber = 0). overridevirtual . Set Current pad. ; When a canvas/pad is divided via TPad::Divide, one can directly set the current path to one of the subdivisions. See TPad::Divide for the convention to number sub-pads.; Returns the new current pad, or 0 in case of failure.; For example: c1.Divide(2,3); // create 6 pads (2 divisions along x, 3 along y).; To set the current pad to the bottom right pad, do c1.cd(6);; Note1: c1.cd() is equivalent to c1.cd(0) and sets the current pad to c1 itself.; Note2: after a statement like c1.cd(6), the global variable gPad points to the current pad. One can use gPad to set attributes",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:105287,Safety,detect,detect,105287," file name finishes with ""("", the file is not closed; if the Postscript or PDF file name finishes with "")"" and the file has been opened with ""("", the file is closed. Example: {; TCanvas c1(""c1"");; h1.Draw();; c1.Print(""c1.ps(""); //write canvas and keep the ps file open; h2.Draw();; c1.Print(""c1.ps""); canvas is added to ""c1.ps""; h3.Draw();; c1.Print(""c1.ps)""); canvas is added to ""c1.ps"" and ps file is closed; }; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; In the previous example replacing ""ps"" by ""pdf"" will create a multi-pages PDF file.; Note that the following sequence writes the canvas to ""c1.ps"" and closes the ps file.: TCanvas c1(""c1"");; h1.Draw();; c1.Print(""c1.ps"");; The TCanvas::Print(""file.ps("") mechanism is very useful, but it can be a little inconvenient to have the action of opening/closing a file being atomic with printing a page. Particularly if pages are being generated in some loop one needs to detect the special cases of first and last page and then munge the argument to Print() accordingly.; The ""["" and ""]"" can be used instead of ""("" and "")"".; Example: c1.Print(""file.ps[""); // No actual print, just open file.ps; for (int i=0; i<10; ++i) {; // fill canvas for context i; // ...; ; c1.Print(""file.ps""); // actually print canvas to file; }// end loop; c1.Print(""file.ps]""); // No actual print, just close.; As before, the same macro is valid for PDF files.; It is possible to print a canvas into an animated GIF file by specifying the file name as ""myfile.gif+"" or ""myfile.gif+NN"", where NN*10ms is delay between the subimages' display. If NN is omitted the delay between subimages is zero. Each picture is added in the animation thanks to a loop similar to the following one: for (int i=0; i<10; ++i) {; // fill canvas for context i; // ...; ; c1.Print(""file.gif+5""); // print canvas to GIF file with 50ms delays; }// end loop; The delay between each frame must be specified in each Print() statement. If ",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:106394,Safety,avoid,avoid,106394,"ead of ""("" and "")"".; Example: c1.Print(""file.ps[""); // No actual print, just open file.ps; for (int i=0; i<10; ++i) {; // fill canvas for context i; // ...; ; c1.Print(""file.ps""); // actually print canvas to file; }// end loop; c1.Print(""file.ps]""); // No actual print, just close.; As before, the same macro is valid for PDF files.; It is possible to print a canvas into an animated GIF file by specifying the file name as ""myfile.gif+"" or ""myfile.gif+NN"", where NN*10ms is delay between the subimages' display. If NN is omitted the delay between subimages is zero. Each picture is added in the animation thanks to a loop similar to the following one: for (int i=0; i<10; ++i) {; // fill canvas for context i; // ...; ; c1.Print(""file.gif+5""); // print canvas to GIF file with 50ms delays; }// end loop; The delay between each frame must be specified in each Print() statement. If the file ""myfile.gif"" already exists, the new frame are appended at the end of the file. To avoid this, delete it first with gSystem->Unlink(myfile.gif); If you want the gif file to repeat or loop forever, check TASImage::WriteImage documentation ; Implements TVirtualPad.; Definition at line 4979 of file TPad.cxx. ◆ Print() [2/2]. void TPad::Print ; (; const char * ; filename = """"); const. overridevirtual . This method is equivalent to SaveAs(""filename""). See TPad::SaveAs for details. ; Implements TVirtualPad.; Definition at line 4798 of file TPad.cxx. ◆ Range(). void TPad::Range ; (; Double_t ; x1, . Double_t ; y1, . Double_t ; x2, . Double_t ; y2 . ). overridevirtual . Set world coordinate system for the pad. ; Emits signal ""RangeChanged()"", in the slot get the range via GetRange(). ; Implements TVirtualPad.; Definition at line 5331 of file TPad.cxx. ◆ RangeAxis(). void TPad::RangeAxis ; (; Double_t ; xmin, . Double_t ; ymin, . Double_t ; xmax, . Double_t ; ymax . ). overridevirtual . Set axis coordinate system for the pad. ; The axis coordinate system is a subset of the world coordinate system xmin",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:127593,Safety,avoid,avoid,127593,"resize (all others). The expected values are: . Implements TVirtualPad.; Definition at line 6350 of file TPad.cxx. ◆ StartEditing(). virtual void TPad::StartEditing ; (; ). inlinevirtual . Definition at line 417 of file TPad.h. ◆ Streamer(). void TPad::Streamer ; (; TBuffer & ; b). overridevirtual . Stream a class object. ; Reimplemented from TObject.; Reimplemented in TSlider.; Definition at line 6713 of file TPad.cxx. ◆ StreamerNVirtual(). void TPad::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 419 of file TPad.h. ◆ Update(). void TPad::Update ; (; ). overridevirtual . Update pad. ; Implements TVirtualPad.; Definition at line 2935 of file TPad.cxx. ◆ UpdateAsync(). void TPad::UpdateAsync ; (; ). overridevirtual . Asynchronous pad update. ; In case of web-based canvas triggers update of the canvas on the client side, but does not wait that real update is completed. Avoids blocking of caller thread. Have to be used if called from other web-based widget to avoid logical dead-locks. In case of normal canvas just canvas->Update() is performed. ; Implements TVirtualPad.; Definition at line 2947 of file TPad.cxx. ◆ UseCurrentStyle(). void TPad::UseCurrentStyle ; (; ). overridevirtual . Force a copy of current style for all objects in pad. ; Reimplemented from TObject.; Definition at line 6927 of file TPad.cxx. ◆ UtoAbsPixel(). Int_t TPad::UtoAbsPixel ; (; Double_t ; u); const. overridevirtual . Convert X NDC to absolute pixel. ; Implements TVirtualPad.; Definition at line 7459 of file TPad.cxx. ◆ UtoPixel(). Int_t TPad::UtoPixel ; (; Double_t ; u); const. overridevirtual . Convert X NDC to pixel. ; Implements TVirtualPad.; Definition at line 7433 of file TPad.cxx. ◆ VtoAbsPixel(). Int_t TPad::VtoAbsPixel ; (; Double_t ; v); const. overridevirtual . Convert Y NDC to absolute pixel. ; Implements TVirtualPad.; Definition at line 7467 of file TPad.cxx. ◆ VtoPixel(). Int_t TPad::VtoPixel ; (; Double_t ; v); const. overridevirtual ",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:12721,Security,hash,hash,12721,";  ; Double_t GetUymin () const override;  Returns the minimum y-coordinate value visible on the pad. If log axis the returned value is in decades. ;  ; TView * GetView () const override;  ; TObject * GetView3D () const override;  ; TVirtualViewer3D * GetViewer3D (Option_t *type="""") override;  Create/obtain handle to 3D viewer. ;  ; TVirtualPad * GetVirtCanvas () const override;  Get virtual canvas. ;  ; UInt_t GetWh () const override;  Get Wh. ;  ; Double_t GetWNDC () const override;  Get width of pad along X in Normalized Coordinates (NDC) ;  ; UInt_t GetWw () const override;  Get Ww. ;  ; Double_t GetX1 () const override;  ; Double_t GetX2 () const override;  ; Double_t GetXlowNDC () const override;  ; Double_t GetY1 () const override;  ; Double_t GetY2 () const override;  ; Double_t GetYlowNDC () const override;  ; Bool_t HasCrosshair () const override;  Return kTRUE if the crosshair has been activated (via SetCrosshair). ;  ; Bool_t HasFixedAspectRatio () const override;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t HasViewer3D () const override;  ; void HighLight (Color_t col=kRed, Bool_t set=kTRUE) override;  Highlight pad. ;  ; Int_t IncrementPaletteColor (Int_t i, TString opt) override;  Increment (i==1) or set (i>1) the number of autocolor in the pad. ;  ; TClass * IsA () const override;  ; Bool_t IsBatch () const override;  Is pad in batch mode ? ;  ; Bool_t IsEditable () const override;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; Bool_t IsModified () const override;  ; Bool_t IsRetained () const override;  Is pad retained ? ;  ; Bool_t IsVertical () const override;  ; Bool_t IsWeb () const override;  Is web ? ;  ; void ls (Option_t *option="""") const override;  List all primitives in pad. ;  ; void Modified (Bool_t flag=true) override;  Mark pad modified Will be repainted when TCanvas::Update() will be called next time.",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:86533,Security,hash,hash,86533,"le_t TPad::GetXlowNDC ; (; ); const. inlineoverridevirtual . Implements TVirtualPad.; Definition at line 212 of file TPad.h. ◆ GetY1(). Double_t TPad::GetY1 ; (; ); const. inlineoverridevirtual . Implements TVirtualPad.; Definition at line 242 of file TPad.h. ◆ GetY2(). Double_t TPad::GetY2 ; (; ); const. inlineoverridevirtual . Implements TVirtualPad.; Definition at line 243 of file TPad.h. ◆ GetYlowNDC(). Double_t TPad::GetYlowNDC ; (; ); const. inlineoverridevirtual . Implements TVirtualPad.; Definition at line 213 of file TPad.h. ◆ HasCrosshair(). Bool_t TPad::HasCrosshair ; (; ); const. overridevirtual . Return kTRUE if the crosshair has been activated (via SetCrosshair). ; Implements TVirtualPad.; Definition at line 6642 of file TPad.cxx. ◆ HasFixedAspectRatio(). Bool_t TPad::HasFixedAspectRatio ; (; ); const. inlineoverridevirtual . Implements TVirtualPad.; Definition at line 270 of file TPad.h. ◆ Hash(). ULong_t TPad::Hash ; (; ); const. inlineoverridevirtual . Return hash value for this object. ; Note: If this routine is overloaded in a derived class, this derived class should also add ROOT::CallRecursiveRemoveIfNeeded(*this); ROOT::CallRecursiveRemoveIfNeededvoid CallRecursiveRemoveIfNeeded(TObject &obj)call RecursiveRemove for obj if gROOT is valid and obj.TestBit(kMustCleanup) is true.Definition TROOT.h:395; Otherwise, when RecursiveRemove is called (by ~TObject or example) for this type of object, the transversal of THashList and THashTable containers will will have to be done without call Hash (and hence be linear rather than logarithmic complexity). You will also see warnings like Error in <ROOT::Internal::TCheckHashRecursiveRemoveConsistency::CheckRecursiveRemove>: The class SomeName overrides TObject::Hash but does not call TROOT::RecursiveRemove in its destructor.; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:87591,Security,hash,hash,87591,"routine is overloaded in a derived class, this derived class should also add ROOT::CallRecursiveRemoveIfNeeded(*this); ROOT::CallRecursiveRemoveIfNeededvoid CallRecursiveRemoveIfNeeded(TObject &obj)call RecursiveRemove for obj if gROOT is valid and obj.TestBit(kMustCleanup) is true.Definition TROOT.h:395; Otherwise, when RecursiveRemove is called (by ~TObject or example) for this type of object, the transversal of THashList and THashTable containers will will have to be done without call Hash (and hence be linear rather than logarithmic complexity). You will also see warnings like Error in <ROOT::Internal::TCheckHashRecursiveRemoveConsistency::CheckRecursiveRemove>: The class SomeName overrides TObject::Hash but does not call TROOT::RecursiveRemove in its destructor.; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TPad::HashULong_t Hash() const overrideReturn hash value for this object.Definition TPad.h:267; TROOT::RecursiveRemovevoid RecursiveRemove(TObject *obj) overrideRecursively remove this object from the list of Cleanups.Definition TROOT.cxx:2498. Reimplemented from TObject.; Definition at line 267 of file TPad.h. ◆ HasViewer3D(). Bool_t TPad::HasViewer3D ; (; ); const. inlineoverridevirtual . Implements TVirtualPad.; Definition at line 401 of file TPad.h. ◆ HideToolTip(). void TPad::HideToolTip ; (; Int_t ; event). protectedvirtual . Hide tool tip depending on the event type. ; Typically tool tips are hidden when event is not a kMouseEnter and not a kMouseMotion event. ; Definition at line 2847 of file TPad.cxx. ◆ HighLight(). void TPad::HighLight ; (; Color_t ; color = kRed, . Bool_t ; set = kTRUE . ). overridevirtual . Highlight pad. ; do not highlight when printing on Postscript ; Implements TVirtualPad.; Definition at line 3055 of file TPad.cxx. ◆ IncrementPaletteColor(). Int_t TPad::IncrementPaletteColor ; (; Int_",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:3101,Testability,log,log,3101,"teEvent; TBox::DistancetoPrimitive, TBox::ExecuteEvent; TH1::DistancetoPrimitive, TH1::ExecuteEvent; TBox::ExecuteEventvoid ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideExecute action corresponding to one event.Definition TBox.cxx:232; TBox::DistancetoPrimitiveInt_t DistancetoPrimitive(Int_t px, Int_t py) overrideCompute distance from point px,py to a box.Definition TBox.cxx:135; TH1::DistancetoPrimitiveInt_t DistancetoPrimitive(Int_t px, Int_t py) overrideCompute distance from point px,py to a line.Definition TH1.cxx:2823; TH1::ExecuteEventvoid ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideExecute action corresponding to one event.Definition TH1.cxx:3240; TLine::DistancetoPrimitiveInt_t DistancetoPrimitive(Int_t px, Int_t py) overrideCompute distance from point px,py to a line.Definition TLine.cxx:89; TLine::ExecuteEventvoid ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideExecute action corresponding to one event.Definition TLine.cxx:132; A Pad supports linear and log scales coordinate systems. The transformation coefficients are explained in TPad::ResizePad. ; Definition at line 28 of file TPad.h. Public Types; enum  { ;   kFraming = (1ULL << ( 6 )); , kHori = (1ULL << ( 9 )); , kClipFrame = (1ULL << ( 10 )); , kPrintingPS = (1ULL << ( 11 )); , ;   kCannotMove = (1ULL << ( 12 )); , kClearAfterCR = (1ULL << ( 14 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). }",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:11348,Testability,log,log,11348," ; TVirtualPad * GetPadSave () const override;  Get save pad. ;  ; TVirtualPadPainter * GetPainter () override;  Get pad painter from TCanvas. ;  ; Double_t GetPhi () const override;  ; Int_t GetPixmapID () const override;  ; TObject * GetPrimitive (const char *name) const override;  Get primitive. ;  ; void GetRange (Double_t &x1, Double_t &y1, Double_t &x2, Double_t &y2) override;  Return pad world coordinates range. ;  ; void GetRangeAxis (Double_t &xmin, Double_t &ymin, Double_t &xmax, Double_t &ymax) override;  Return pad axis coordinates range. ;  ; TObject * GetSelected () const override;  Get selected. ;  ; TVirtualPad * GetSelectedPad () const override;  Get selected pad. ;  ; Double_t GetTheta () const override;  ; Int_t GetTickx () const override;  ; Int_t GetTicky () const override;  ; const char * GetTitle () const override;  Returns title of object. ;  ; Double_t GetUxmax () const override;  Returns the maximum x-coordinate value visible on the pad. If log axis the returned value is in decades. ;  ; Double_t GetUxmin () const override;  Returns the minimum x-coordinate value visible on the pad. If log axis the returned value is in decades. ;  ; Double_t GetUymax () const override;  Returns the maximum y-coordinate value visible on the pad. If log axis the returned value is in decades. ;  ; Double_t GetUymin () const override;  Returns the minimum y-coordinate value visible on the pad. If log axis the returned value is in decades. ;  ; TView * GetView () const override;  ; TObject * GetView3D () const override;  ; TVirtualViewer3D * GetViewer3D (Option_t *type="""") override;  Create/obtain handle to 3D viewer. ;  ; TVirtualPad * GetVirtCanvas () const override;  Get virtual canvas. ;  ; UInt_t GetWh () const override;  Get Wh. ;  ; Double_t GetWNDC () const override;  Get width of pad along X in Normalized Coordinates (NDC) ;  ; UInt_t GetWw () const override;  Get Ww. ;  ; Double_t GetX1 () const override;  ; Double_t GetX2 () const override;  ; Double_",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:11496,Testability,log,log,11496,"Double_t GetPhi () const override;  ; Int_t GetPixmapID () const override;  ; TObject * GetPrimitive (const char *name) const override;  Get primitive. ;  ; void GetRange (Double_t &x1, Double_t &y1, Double_t &x2, Double_t &y2) override;  Return pad world coordinates range. ;  ; void GetRangeAxis (Double_t &xmin, Double_t &ymin, Double_t &xmax, Double_t &ymax) override;  Return pad axis coordinates range. ;  ; TObject * GetSelected () const override;  Get selected. ;  ; TVirtualPad * GetSelectedPad () const override;  Get selected pad. ;  ; Double_t GetTheta () const override;  ; Int_t GetTickx () const override;  ; Int_t GetTicky () const override;  ; const char * GetTitle () const override;  Returns title of object. ;  ; Double_t GetUxmax () const override;  Returns the maximum x-coordinate value visible on the pad. If log axis the returned value is in decades. ;  ; Double_t GetUxmin () const override;  Returns the minimum x-coordinate value visible on the pad. If log axis the returned value is in decades. ;  ; Double_t GetUymax () const override;  Returns the maximum y-coordinate value visible on the pad. If log axis the returned value is in decades. ;  ; Double_t GetUymin () const override;  Returns the minimum y-coordinate value visible on the pad. If log axis the returned value is in decades. ;  ; TView * GetView () const override;  ; TObject * GetView3D () const override;  ; TVirtualViewer3D * GetViewer3D (Option_t *type="""") override;  Create/obtain handle to 3D viewer. ;  ; TVirtualPad * GetVirtCanvas () const override;  Get virtual canvas. ;  ; UInt_t GetWh () const override;  Get Wh. ;  ; Double_t GetWNDC () const override;  Get width of pad along X in Normalized Coordinates (NDC) ;  ; UInt_t GetWw () const override;  Get Ww. ;  ; Double_t GetX1 () const override;  ; Double_t GetX2 () const override;  ; Double_t GetXlowNDC () const override;  ; Double_t GetY1 () const override;  ; Double_t GetY2 () const override;  ; Double_t GetYlowNDC () const override; ",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:11644,Testability,log,log,11644,"ve. ;  ; void GetRange (Double_t &x1, Double_t &y1, Double_t &x2, Double_t &y2) override;  Return pad world coordinates range. ;  ; void GetRangeAxis (Double_t &xmin, Double_t &ymin, Double_t &xmax, Double_t &ymax) override;  Return pad axis coordinates range. ;  ; TObject * GetSelected () const override;  Get selected. ;  ; TVirtualPad * GetSelectedPad () const override;  Get selected pad. ;  ; Double_t GetTheta () const override;  ; Int_t GetTickx () const override;  ; Int_t GetTicky () const override;  ; const char * GetTitle () const override;  Returns title of object. ;  ; Double_t GetUxmax () const override;  Returns the maximum x-coordinate value visible on the pad. If log axis the returned value is in decades. ;  ; Double_t GetUxmin () const override;  Returns the minimum x-coordinate value visible on the pad. If log axis the returned value is in decades. ;  ; Double_t GetUymax () const override;  Returns the maximum y-coordinate value visible on the pad. If log axis the returned value is in decades. ;  ; Double_t GetUymin () const override;  Returns the minimum y-coordinate value visible on the pad. If log axis the returned value is in decades. ;  ; TView * GetView () const override;  ; TObject * GetView3D () const override;  ; TVirtualViewer3D * GetViewer3D (Option_t *type="""") override;  Create/obtain handle to 3D viewer. ;  ; TVirtualPad * GetVirtCanvas () const override;  Get virtual canvas. ;  ; UInt_t GetWh () const override;  Get Wh. ;  ; Double_t GetWNDC () const override;  Get width of pad along X in Normalized Coordinates (NDC) ;  ; UInt_t GetWw () const override;  Get Ww. ;  ; Double_t GetX1 () const override;  ; Double_t GetX2 () const override;  ; Double_t GetXlowNDC () const override;  ; Double_t GetY1 () const override;  ; Double_t GetY2 () const override;  ; Double_t GetYlowNDC () const override;  ; Bool_t HasCrosshair () const override;  Return kTRUE if the crosshair has been activated (via SetCrosshair). ;  ; Bool_t HasFixedAspectRatio () c",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:11792,Testability,log,log,11792,"s (Double_t &xmin, Double_t &ymin, Double_t &xmax, Double_t &ymax) override;  Return pad axis coordinates range. ;  ; TObject * GetSelected () const override;  Get selected. ;  ; TVirtualPad * GetSelectedPad () const override;  Get selected pad. ;  ; Double_t GetTheta () const override;  ; Int_t GetTickx () const override;  ; Int_t GetTicky () const override;  ; const char * GetTitle () const override;  Returns title of object. ;  ; Double_t GetUxmax () const override;  Returns the maximum x-coordinate value visible on the pad. If log axis the returned value is in decades. ;  ; Double_t GetUxmin () const override;  Returns the minimum x-coordinate value visible on the pad. If log axis the returned value is in decades. ;  ; Double_t GetUymax () const override;  Returns the maximum y-coordinate value visible on the pad. If log axis the returned value is in decades. ;  ; Double_t GetUymin () const override;  Returns the minimum y-coordinate value visible on the pad. If log axis the returned value is in decades. ;  ; TView * GetView () const override;  ; TObject * GetView3D () const override;  ; TVirtualViewer3D * GetViewer3D (Option_t *type="""") override;  Create/obtain handle to 3D viewer. ;  ; TVirtualPad * GetVirtCanvas () const override;  Get virtual canvas. ;  ; UInt_t GetWh () const override;  Get Wh. ;  ; Double_t GetWNDC () const override;  Get width of pad along X in Normalized Coordinates (NDC) ;  ; UInt_t GetWw () const override;  Get Ww. ;  ; Double_t GetX1 () const override;  ; Double_t GetX2 () const override;  ; Double_t GetXlowNDC () const override;  ; Double_t GetY1 () const override;  ; Double_t GetY2 () const override;  ; Double_t GetYlowNDC () const override;  ; Bool_t HasCrosshair () const override;  Return kTRUE if the crosshair has been activated (via SetCrosshair). ;  ; Bool_t HasFixedAspectRatio () const override;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t HasViewer3D () const override;  ; void HighLight (",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:45203,Testability,log,log,45203,"to mother canvas ;  ; Int_t fCGnx;  ! Size of the collide grid along x ;  ; Int_t fCGny;  ! Size of the collide grid along y ;  ; std::vector< Bool_t > fCollideGrid;  ! Grid used to find empty space when adding a box (Legend) in a pad ;  ; Bool_t fCopyGLDevice;  ! ;  ; Int_t fCrosshair;  Crosshair type (0 if no crosshair requested) ;  ; Int_t fCrosshairPos;  Position of crosshair. ;  ; Bool_t fEditable;  True if canvas is editable. ;  ; Bool_t fEmbeddedGL;  ! ;  ; TList * fExecs {nullptr};  List of commands to be executed when a pad event occurs. ;  ; Bool_t fFixedAspectRatio;  True if fixed aspect ratio. ;  ; TFrame * fFrame {nullptr};  ! Pointer to 2-D frame (if one exists) ;  ; Int_t fGLDevice;  ! OpenGL off-screen pixmap identifier ;  ; Bool_t fGridx;  Set to true if grid along X. ;  ; Bool_t fGridy;  Set to true if grid along Y. ;  ; Double_t fHNDC;  Height of pad along Y in Normalized Coordinates (NDC) ;  ; Int_t fLogx;  (=0 if X linear scale, =1 if log scale) ;  ; Int_t fLogy;  (=0 if Y linear scale, =1 if log scale) ;  ; Int_t fLogz;  (=0 if Z linear scale, =1 if log scale) ;  ; Bool_t fModified;  Set to true when pad is modified. ;  ; TPad * fMother {nullptr};  ! pointer to mother of the list ;  ; TString fName;  Pad name. ;  ; Int_t fNextPaletteColor;  Next automatic color. ;  ; Int_t fNumber;  pad number identifier ;  ; Int_t fNumPaletteColor;  Number of objects with an automatic color. ;  ; Int_t fPadPaint;  Set to 1 while painting the pad. ;  ; TObject * fPadPointer {nullptr};  ! free pointer ;  ; TObject * fPadView3D {nullptr};  ! 3D View of this TPad ;  ; Double_t fPhi;  phi angle to view as lego/surface ;  ; Double_t fPixeltoX;  xworld = fPixeltoXk + fPixeltoX*xpixel ;  ; Double_t fPixeltoXk;  Conversion coefficient for pixel to X World. ;  ; Double_t fPixeltoY;  yworld = fPixeltoYk + fPixeltoY*ypixel ;  ; Double_t fPixeltoYk;  Conversion coefficient for pixel to Y World. ;  ; Int_t fPixmapID;  ! Off-screen pixmap identifier ;  ; TList * fPrimitives {",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:45262,Testability,log,log,45262,"to mother canvas ;  ; Int_t fCGnx;  ! Size of the collide grid along x ;  ; Int_t fCGny;  ! Size of the collide grid along y ;  ; std::vector< Bool_t > fCollideGrid;  ! Grid used to find empty space when adding a box (Legend) in a pad ;  ; Bool_t fCopyGLDevice;  ! ;  ; Int_t fCrosshair;  Crosshair type (0 if no crosshair requested) ;  ; Int_t fCrosshairPos;  Position of crosshair. ;  ; Bool_t fEditable;  True if canvas is editable. ;  ; Bool_t fEmbeddedGL;  ! ;  ; TList * fExecs {nullptr};  List of commands to be executed when a pad event occurs. ;  ; Bool_t fFixedAspectRatio;  True if fixed aspect ratio. ;  ; TFrame * fFrame {nullptr};  ! Pointer to 2-D frame (if one exists) ;  ; Int_t fGLDevice;  ! OpenGL off-screen pixmap identifier ;  ; Bool_t fGridx;  Set to true if grid along X. ;  ; Bool_t fGridy;  Set to true if grid along Y. ;  ; Double_t fHNDC;  Height of pad along Y in Normalized Coordinates (NDC) ;  ; Int_t fLogx;  (=0 if X linear scale, =1 if log scale) ;  ; Int_t fLogy;  (=0 if Y linear scale, =1 if log scale) ;  ; Int_t fLogz;  (=0 if Z linear scale, =1 if log scale) ;  ; Bool_t fModified;  Set to true when pad is modified. ;  ; TPad * fMother {nullptr};  ! pointer to mother of the list ;  ; TString fName;  Pad name. ;  ; Int_t fNextPaletteColor;  Next automatic color. ;  ; Int_t fNumber;  pad number identifier ;  ; Int_t fNumPaletteColor;  Number of objects with an automatic color. ;  ; Int_t fPadPaint;  Set to 1 while painting the pad. ;  ; TObject * fPadPointer {nullptr};  ! free pointer ;  ; TObject * fPadView3D {nullptr};  ! 3D View of this TPad ;  ; Double_t fPhi;  phi angle to view as lego/surface ;  ; Double_t fPixeltoX;  xworld = fPixeltoXk + fPixeltoX*xpixel ;  ; Double_t fPixeltoXk;  Conversion coefficient for pixel to X World. ;  ; Double_t fPixeltoY;  yworld = fPixeltoYk + fPixeltoY*ypixel ;  ; Double_t fPixeltoYk;  Conversion coefficient for pixel to Y World. ;  ; Int_t fPixmapID;  ! Off-screen pixmap identifier ;  ; TList * fPrimitives {",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:45321,Testability,log,log,45321,"to mother canvas ;  ; Int_t fCGnx;  ! Size of the collide grid along x ;  ; Int_t fCGny;  ! Size of the collide grid along y ;  ; std::vector< Bool_t > fCollideGrid;  ! Grid used to find empty space when adding a box (Legend) in a pad ;  ; Bool_t fCopyGLDevice;  ! ;  ; Int_t fCrosshair;  Crosshair type (0 if no crosshair requested) ;  ; Int_t fCrosshairPos;  Position of crosshair. ;  ; Bool_t fEditable;  True if canvas is editable. ;  ; Bool_t fEmbeddedGL;  ! ;  ; TList * fExecs {nullptr};  List of commands to be executed when a pad event occurs. ;  ; Bool_t fFixedAspectRatio;  True if fixed aspect ratio. ;  ; TFrame * fFrame {nullptr};  ! Pointer to 2-D frame (if one exists) ;  ; Int_t fGLDevice;  ! OpenGL off-screen pixmap identifier ;  ; Bool_t fGridx;  Set to true if grid along X. ;  ; Bool_t fGridy;  Set to true if grid along Y. ;  ; Double_t fHNDC;  Height of pad along Y in Normalized Coordinates (NDC) ;  ; Int_t fLogx;  (=0 if X linear scale, =1 if log scale) ;  ; Int_t fLogy;  (=0 if Y linear scale, =1 if log scale) ;  ; Int_t fLogz;  (=0 if Z linear scale, =1 if log scale) ;  ; Bool_t fModified;  Set to true when pad is modified. ;  ; TPad * fMother {nullptr};  ! pointer to mother of the list ;  ; TString fName;  Pad name. ;  ; Int_t fNextPaletteColor;  Next automatic color. ;  ; Int_t fNumber;  pad number identifier ;  ; Int_t fNumPaletteColor;  Number of objects with an automatic color. ;  ; Int_t fPadPaint;  Set to 1 while painting the pad. ;  ; TObject * fPadPointer {nullptr};  ! free pointer ;  ; TObject * fPadView3D {nullptr};  ! 3D View of this TPad ;  ; Double_t fPhi;  phi angle to view as lego/surface ;  ; Double_t fPixeltoX;  xworld = fPixeltoXk + fPixeltoX*xpixel ;  ; Double_t fPixeltoXk;  Conversion coefficient for pixel to X World. ;  ; Double_t fPixeltoY;  yworld = fPixeltoYk + fPixeltoY*ypixel ;  ; Double_t fPixeltoYk;  Conversion coefficient for pixel to Y World. ;  ; Int_t fPixmapID;  ! Off-screen pixmap identifier ;  ; TList * fPrimitives {",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:83005,Testability,log,log,83005,Pad ; (; ); const. overridevirtual . Get selected pad. ; Implements TVirtualPad.; Definition at line 2811 of file TPad.cxx. ◆ GetTheta(). Double_t TPad::GetTheta ; (; ); const. inlineoverridevirtual . Implements TVirtualPad.; Definition at line 226 of file TPad.h. ◆ GetTickx(). Int_t TPad::GetTickx ; (; ); const. inlineoverridevirtual . Implements TVirtualPad.; Definition at line 238 of file TPad.h. ◆ GetTicky(). Int_t TPad::GetTicky ; (; ); const. inlineoverridevirtual . Implements TVirtualPad.; Definition at line 239 of file TPad.h. ◆ GetTitle(). const char * TPad::GetTitle ; (; ); const. inlineoverridevirtual . Returns title of object. ; This default method returns the class title (i.e. description). Classes that give objects a title should override this method. ; Implements TVirtualPad.; Definition at line 261 of file TPad.h. ◆ GetUxmax(). Double_t TPad::GetUxmax ; (; ); const. inlineoverridevirtual . Returns the maximum x-coordinate value visible on the pad. If log axis the returned value is in decades. ; Implements TVirtualPad.; Definition at line 232 of file TPad.h. ◆ GetUxmin(). Double_t TPad::GetUxmin ; (; ); const. inlineoverridevirtual . Returns the minimum x-coordinate value visible on the pad. If log axis the returned value is in decades. ; Implements TVirtualPad.; Definition at line 228 of file TPad.h. ◆ GetUymax(). Double_t TPad::GetUymax ; (; ); const. inlineoverridevirtual . Returns the maximum y-coordinate value visible on the pad. If log axis the returned value is in decades. ; Implements TVirtualPad.; Definition at line 234 of file TPad.h. ◆ GetUymin(). Double_t TPad::GetUymin ; (; ); const. inlineoverridevirtual . Returns the minimum y-coordinate value visible on the pad. If log axis the returned value is in decades. ; Implements TVirtualPad.; Definition at line 230 of file TPad.h. ◆ GetView(). TView * TPad::GetView ; (; ); const. inlineoverridevirtual . Implements TVirtualPad.; Definition at line 254 of file TPad.h. ◆ GetView3D(). TObject * TPa,MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:83253,Testability,log,log,83253," of file TPad.h. ◆ GetTickx(). Int_t TPad::GetTickx ; (; ); const. inlineoverridevirtual . Implements TVirtualPad.; Definition at line 238 of file TPad.h. ◆ GetTicky(). Int_t TPad::GetTicky ; (; ); const. inlineoverridevirtual . Implements TVirtualPad.; Definition at line 239 of file TPad.h. ◆ GetTitle(). const char * TPad::GetTitle ; (; ); const. inlineoverridevirtual . Returns title of object. ; This default method returns the class title (i.e. description). Classes that give objects a title should override this method. ; Implements TVirtualPad.; Definition at line 261 of file TPad.h. ◆ GetUxmax(). Double_t TPad::GetUxmax ; (; ); const. inlineoverridevirtual . Returns the maximum x-coordinate value visible on the pad. If log axis the returned value is in decades. ; Implements TVirtualPad.; Definition at line 232 of file TPad.h. ◆ GetUxmin(). Double_t TPad::GetUxmin ; (; ); const. inlineoverridevirtual . Returns the minimum x-coordinate value visible on the pad. If log axis the returned value is in decades. ; Implements TVirtualPad.; Definition at line 228 of file TPad.h. ◆ GetUymax(). Double_t TPad::GetUymax ; (; ); const. inlineoverridevirtual . Returns the maximum y-coordinate value visible on the pad. If log axis the returned value is in decades. ; Implements TVirtualPad.; Definition at line 234 of file TPad.h. ◆ GetUymin(). Double_t TPad::GetUymin ; (; ); const. inlineoverridevirtual . Returns the minimum y-coordinate value visible on the pad. If log axis the returned value is in decades. ; Implements TVirtualPad.; Definition at line 230 of file TPad.h. ◆ GetView(). TView * TPad::GetView ; (; ); const. inlineoverridevirtual . Implements TVirtualPad.; Definition at line 254 of file TPad.h. ◆ GetView3D(). TObject * TPad::GetView3D ; (; ); const. inlineoverridevirtual . Implements TVirtualPad.; Definition at line 255 of file TPad.h. ◆ GetViewer3D(). TVirtualViewer3D * TPad::GetViewer3D ; (; Option_t * ; type = """"). overridevirtual . Create/obtain handle to 3D vie",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:83501,Testability,log,log,83501,"Pad.; Definition at line 239 of file TPad.h. ◆ GetTitle(). const char * TPad::GetTitle ; (; ); const. inlineoverridevirtual . Returns title of object. ; This default method returns the class title (i.e. description). Classes that give objects a title should override this method. ; Implements TVirtualPad.; Definition at line 261 of file TPad.h. ◆ GetUxmax(). Double_t TPad::GetUxmax ; (; ); const. inlineoverridevirtual . Returns the maximum x-coordinate value visible on the pad. If log axis the returned value is in decades. ; Implements TVirtualPad.; Definition at line 232 of file TPad.h. ◆ GetUxmin(). Double_t TPad::GetUxmin ; (; ); const. inlineoverridevirtual . Returns the minimum x-coordinate value visible on the pad. If log axis the returned value is in decades. ; Implements TVirtualPad.; Definition at line 228 of file TPad.h. ◆ GetUymax(). Double_t TPad::GetUymax ; (; ); const. inlineoverridevirtual . Returns the maximum y-coordinate value visible on the pad. If log axis the returned value is in decades. ; Implements TVirtualPad.; Definition at line 234 of file TPad.h. ◆ GetUymin(). Double_t TPad::GetUymin ; (; ); const. inlineoverridevirtual . Returns the minimum y-coordinate value visible on the pad. If log axis the returned value is in decades. ; Implements TVirtualPad.; Definition at line 230 of file TPad.h. ◆ GetView(). TView * TPad::GetView ; (; ); const. inlineoverridevirtual . Implements TVirtualPad.; Definition at line 254 of file TPad.h. ◆ GetView3D(). TObject * TPad::GetView3D ; (; ); const. inlineoverridevirtual . Implements TVirtualPad.; Definition at line 255 of file TPad.h. ◆ GetViewer3D(). TVirtualViewer3D * TPad::GetViewer3D ; (; Option_t * ; type = """"). overridevirtual . Create/obtain handle to 3D viewer. ; Valid types are:; 'pad' - pad drawing via TViewer3DPad any others registered with plugin manager supporting TVirtualViewer3D If an invalid/null type is requested then the current viewer is returned (if any), otherwise a default 'pad' type is",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:83749,Testability,log,log,83749,"le should override this method. ; Implements TVirtualPad.; Definition at line 261 of file TPad.h. ◆ GetUxmax(). Double_t TPad::GetUxmax ; (; ); const. inlineoverridevirtual . Returns the maximum x-coordinate value visible on the pad. If log axis the returned value is in decades. ; Implements TVirtualPad.; Definition at line 232 of file TPad.h. ◆ GetUxmin(). Double_t TPad::GetUxmin ; (; ); const. inlineoverridevirtual . Returns the minimum x-coordinate value visible on the pad. If log axis the returned value is in decades. ; Implements TVirtualPad.; Definition at line 228 of file TPad.h. ◆ GetUymax(). Double_t TPad::GetUymax ; (; ); const. inlineoverridevirtual . Returns the maximum y-coordinate value visible on the pad. If log axis the returned value is in decades. ; Implements TVirtualPad.; Definition at line 234 of file TPad.h. ◆ GetUymin(). Double_t TPad::GetUymin ; (; ); const. inlineoverridevirtual . Returns the minimum y-coordinate value visible on the pad. If log axis the returned value is in decades. ; Implements TVirtualPad.; Definition at line 230 of file TPad.h. ◆ GetView(). TView * TPad::GetView ; (; ); const. inlineoverridevirtual . Implements TVirtualPad.; Definition at line 254 of file TPad.h. ◆ GetView3D(). TObject * TPad::GetView3D ; (; ); const. inlineoverridevirtual . Implements TVirtualPad.; Definition at line 255 of file TPad.h. ◆ GetViewer3D(). TVirtualViewer3D * TPad::GetViewer3D ; (; Option_t * ; type = """"). overridevirtual . Create/obtain handle to 3D viewer. ; Valid types are:; 'pad' - pad drawing via TViewer3DPad any others registered with plugin manager supporting TVirtualViewer3D If an invalid/null type is requested then the current viewer is returned (if any), otherwise a default 'pad' type is returned . Implements TVirtualPad.; Definition at line 7151 of file TPad.cxx. ◆ GetVirtCanvas(). TVirtualPad * TPad::GetVirtCanvas ; (; ); const. overridevirtual . Get virtual canvas. ; Implements TVirtualPad.; Definition at line 2778 of file TPad",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:87108,Testability,log,logarithmic,87108,"ridevirtual . Implements TVirtualPad.; Definition at line 213 of file TPad.h. ◆ HasCrosshair(). Bool_t TPad::HasCrosshair ; (; ); const. overridevirtual . Return kTRUE if the crosshair has been activated (via SetCrosshair). ; Implements TVirtualPad.; Definition at line 6642 of file TPad.cxx. ◆ HasFixedAspectRatio(). Bool_t TPad::HasFixedAspectRatio ; (; ); const. inlineoverridevirtual . Implements TVirtualPad.; Definition at line 270 of file TPad.h. ◆ Hash(). ULong_t TPad::Hash ; (; ); const. inlineoverridevirtual . Return hash value for this object. ; Note: If this routine is overloaded in a derived class, this derived class should also add ROOT::CallRecursiveRemoveIfNeeded(*this); ROOT::CallRecursiveRemoveIfNeededvoid CallRecursiveRemoveIfNeeded(TObject &obj)call RecursiveRemove for obj if gROOT is valid and obj.TestBit(kMustCleanup) is true.Definition TROOT.h:395; Otherwise, when RecursiveRemove is called (by ~TObject or example) for this type of object, the transversal of THashList and THashTable containers will will have to be done without call Hash (and hence be linear rather than logarithmic complexity). You will also see warnings like Error in <ROOT::Internal::TCheckHashRecursiveRemoveConsistency::CheckRecursiveRemove>: The class SomeName overrides TObject::Hash but does not call TROOT::RecursiveRemove in its destructor.; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TPad::HashULong_t Hash() const overrideReturn hash value for this object.Definition TPad.h:267; TROOT::RecursiveRemovevoid RecursiveRemove(TObject *obj) overrideRecursively remove this object from the list of Cleanups.Definition TROOT.cxx:2498. Reimplemented from TObject.; Definition at line 267 of file TPad.h. ◆ HasViewer3D(). Bool_t TPad::HasViewer3D ; (; ); const. inlineoverridevirtual . Implements TVirtualPad.; Definition at line 401 of file TPad.h. ◆ ",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:121883,Testability,log,logarithmic,121883," TPad.cxx. ◆ SetFixedAspectRatio(). void TPad::SetFixedAspectRatio ; (; Bool_t ; fixed = kTRUE). overridevirtual . Fix pad aspect ratio to current value if fixed is true. ; Implements TVirtualPad.; Definition at line 6031 of file TPad.cxx. ◆ SetGLDevice(). virtual void TPad::SetGLDevice ; (; Int_t ; dev). inlinevirtual . Definition at line 366 of file TPad.h. ◆ SetGrid(). void TPad::SetGrid ; (; Int_t ; valuex = 1, . Int_t ; valuey = 1 . ). inlineoverridevirtual . Implements TVirtualPad.; Definition at line 335 of file TPad.h. ◆ SetGridx(). void TPad::SetGridx ; (; Int_t ; value = 1). inlineoverridevirtual . Implements TVirtualPad.; Definition at line 336 of file TPad.h. ◆ SetGridy(). void TPad::SetGridy ; (; Int_t ; value = 1). inlineoverridevirtual . Implements TVirtualPad.; Definition at line 337 of file TPad.h. ◆ SetLogx(). void TPad::SetLogx ; (; Int_t ; value = 1). overridevirtual . Set Lin/Log scale for X. . value = 0 X scale will be linear; value = 1 X scale will be logarithmic (base 10); value > 1 reserved for possible support of base e or other . Implements TVirtualPad.; Definition at line 6086 of file TPad.cxx. ◆ SetLogy(). void TPad::SetLogy ; (; Int_t ; value = 1). overridevirtual . Set Lin/Log scale for Y. . value = 0 Y scale will be linear; value = 1 Y scale will be logarithmic (base 10); value > 1 reserved for possible support of base e or other . Implements TVirtualPad.; Definition at line 6100 of file TPad.cxx. ◆ SetLogz(). void TPad::SetLogz ; (; Int_t ; value = 1). overridevirtual . Set Lin/Log scale for Z. ; Implements TVirtualPad.; Definition at line 6111 of file TPad.cxx. ◆ SetMaxPickDistance(). void TPad::SetMaxPickDistance ; (; Int_t ; maxPick = 5). static . static function to set the maximum Pick Distance fgMaxPickDistance This parameter is used in TPad::Pick to select an object if its DistancetoPrimitive returns a value < fgMaxPickDistance The default value is 5 pixels. ; Setting a smaller value will make picking more precise but also more",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:122196,Testability,log,logarithmic,122196,"virtual . Definition at line 366 of file TPad.h. ◆ SetGrid(). void TPad::SetGrid ; (; Int_t ; valuex = 1, . Int_t ; valuey = 1 . ). inlineoverridevirtual . Implements TVirtualPad.; Definition at line 335 of file TPad.h. ◆ SetGridx(). void TPad::SetGridx ; (; Int_t ; value = 1). inlineoverridevirtual . Implements TVirtualPad.; Definition at line 336 of file TPad.h. ◆ SetGridy(). void TPad::SetGridy ; (; Int_t ; value = 1). inlineoverridevirtual . Implements TVirtualPad.; Definition at line 337 of file TPad.h. ◆ SetLogx(). void TPad::SetLogx ; (; Int_t ; value = 1). overridevirtual . Set Lin/Log scale for X. . value = 0 X scale will be linear; value = 1 X scale will be logarithmic (base 10); value > 1 reserved for possible support of base e or other . Implements TVirtualPad.; Definition at line 6086 of file TPad.cxx. ◆ SetLogy(). void TPad::SetLogy ; (; Int_t ; value = 1). overridevirtual . Set Lin/Log scale for Y. . value = 0 Y scale will be linear; value = 1 Y scale will be logarithmic (base 10); value > 1 reserved for possible support of base e or other . Implements TVirtualPad.; Definition at line 6100 of file TPad.cxx. ◆ SetLogz(). void TPad::SetLogz ; (; Int_t ; value = 1). overridevirtual . Set Lin/Log scale for Z. ; Implements TVirtualPad.; Definition at line 6111 of file TPad.cxx. ◆ SetMaxPickDistance(). void TPad::SetMaxPickDistance ; (; Int_t ; maxPick = 5). static . static function to set the maximum Pick Distance fgMaxPickDistance This parameter is used in TPad::Pick to select an object if its DistancetoPrimitive returns a value < fgMaxPickDistance The default value is 5 pixels. ; Setting a smaller value will make picking more precise but also more difficult ; Definition at line 6680 of file TPad.cxx. ◆ SetName(). void TPad::SetName ; (; const char * ; name). inlineoverridevirtual . Implements TVirtualPad.; Definition at line 353 of file TPad.h. ◆ SetNumber(). virtual void TPad::SetNumber ; (; Int_t ; number). inlinevirtual . Definition at line 342 of fil",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:127599,Testability,log,logical,127599,"resize (all others). The expected values are: . Implements TVirtualPad.; Definition at line 6350 of file TPad.cxx. ◆ StartEditing(). virtual void TPad::StartEditing ; (; ). inlinevirtual . Definition at line 417 of file TPad.h. ◆ Streamer(). void TPad::Streamer ; (; TBuffer & ; b). overridevirtual . Stream a class object. ; Reimplemented from TObject.; Reimplemented in TSlider.; Definition at line 6713 of file TPad.cxx. ◆ StreamerNVirtual(). void TPad::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 419 of file TPad.h. ◆ Update(). void TPad::Update ; (; ). overridevirtual . Update pad. ; Implements TVirtualPad.; Definition at line 2935 of file TPad.cxx. ◆ UpdateAsync(). void TPad::UpdateAsync ; (; ). overridevirtual . Asynchronous pad update. ; In case of web-based canvas triggers update of the canvas on the client side, but does not wait that real update is completed. Avoids blocking of caller thread. Have to be used if called from other web-based widget to avoid logical dead-locks. In case of normal canvas just canvas->Update() is performed. ; Implements TVirtualPad.; Definition at line 2947 of file TPad.cxx. ◆ UseCurrentStyle(). void TPad::UseCurrentStyle ; (; ). overridevirtual . Force a copy of current style for all objects in pad. ; Reimplemented from TObject.; Definition at line 6927 of file TPad.cxx. ◆ UtoAbsPixel(). Int_t TPad::UtoAbsPixel ; (; Double_t ; u); const. overridevirtual . Convert X NDC to absolute pixel. ; Implements TVirtualPad.; Definition at line 7459 of file TPad.cxx. ◆ UtoPixel(). Int_t TPad::UtoPixel ; (; Double_t ; u); const. overridevirtual . Convert X NDC to pixel. ; Implements TVirtualPad.; Definition at line 7433 of file TPad.cxx. ◆ VtoAbsPixel(). Int_t TPad::VtoAbsPixel ; (; Double_t ; v); const. overridevirtual . Convert Y NDC to absolute pixel. ; Implements TVirtualPad.; Definition at line 7467 of file TPad.cxx. ◆ VtoPixel(). Int_t TPad::VtoPixel ; (; Double_t ; v); const. overridevirtual ",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:136566,Testability,log,log,136566,"t line 108 of file TPad.h. ◆ fFixedAspectRatio. Bool_t TPad::fFixedAspectRatio. protected . True if fixed aspect ratio. ; Definition at line 104 of file TPad.h. ◆ fFrame. TFrame* TPad::fFrame {nullptr}. protected . ! Pointer to 2-D frame (if one exists) ; Definition at line 111 of file TPad.h. ◆ fGLDevice. Int_t TPad::fGLDevice. protected . ! OpenGL off-screen pixmap identifier ; Definition at line 85 of file TPad.h. ◆ fgMaxPickDistance. Int_t TPad::fgMaxPickDistance = 5. staticprotected . Maximum Pick Distance. ; Definition at line 115 of file TPad.h. ◆ fGridx. Bool_t TPad::fGridx. protected . Set to true if grid along X. ; Definition at line 100 of file TPad.h. ◆ fGridy. Bool_t TPad::fGridy. protected . Set to true if grid along Y. ; Definition at line 101 of file TPad.h. ◆ fHNDC. Double_t TPad::fHNDC. protected . Height of pad along Y in Normalized Coordinates (NDC) ; Definition at line 67 of file TPad.h. ◆ fLogx. Int_t TPad::fLogx. protected . (=0 if X linear scale, =1 if log scale) ; Definition at line 91 of file TPad.h. ◆ fLogy. Int_t TPad::fLogy. protected . (=0 if Y linear scale, =1 if log scale) ; Definition at line 92 of file TPad.h. ◆ fLogz. Int_t TPad::fLogz. protected . (=0 if Z linear scale, =1 if log scale) ; Definition at line 93 of file TPad.h. ◆ fModified. Bool_t TPad::fModified. protected . Set to true when pad is modified. ; Definition at line 99 of file TPad.h. ◆ fMother. TPad* TPad::fMother {nullptr}. protected . ! pointer to mother of the list ; Definition at line 105 of file TPad.h. ◆ fName. TString TPad::fName. protected . Pad name. ; Definition at line 109 of file TPad.h. ◆ fNextPaletteColor. Int_t TPad::fNextPaletteColor. protected . Next automatic color. ; Definition at line 117 of file TPad.h. ◆ fNumber. Int_t TPad::fNumber. protected . pad number identifier ; Definition at line 88 of file TPad.h. ◆ fNumPaletteColor. Int_t TPad::fNumPaletteColor. protected . Number of objects with an automatic color. ; Definition at line 116 of file TPad",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:136686,Testability,log,log,136686,"; Definition at line 104 of file TPad.h. ◆ fFrame. TFrame* TPad::fFrame {nullptr}. protected . ! Pointer to 2-D frame (if one exists) ; Definition at line 111 of file TPad.h. ◆ fGLDevice. Int_t TPad::fGLDevice. protected . ! OpenGL off-screen pixmap identifier ; Definition at line 85 of file TPad.h. ◆ fgMaxPickDistance. Int_t TPad::fgMaxPickDistance = 5. staticprotected . Maximum Pick Distance. ; Definition at line 115 of file TPad.h. ◆ fGridx. Bool_t TPad::fGridx. protected . Set to true if grid along X. ; Definition at line 100 of file TPad.h. ◆ fGridy. Bool_t TPad::fGridy. protected . Set to true if grid along Y. ; Definition at line 101 of file TPad.h. ◆ fHNDC. Double_t TPad::fHNDC. protected . Height of pad along Y in Normalized Coordinates (NDC) ; Definition at line 67 of file TPad.h. ◆ fLogx. Int_t TPad::fLogx. protected . (=0 if X linear scale, =1 if log scale) ; Definition at line 91 of file TPad.h. ◆ fLogy. Int_t TPad::fLogy. protected . (=0 if Y linear scale, =1 if log scale) ; Definition at line 92 of file TPad.h. ◆ fLogz. Int_t TPad::fLogz. protected . (=0 if Z linear scale, =1 if log scale) ; Definition at line 93 of file TPad.h. ◆ fModified. Bool_t TPad::fModified. protected . Set to true when pad is modified. ; Definition at line 99 of file TPad.h. ◆ fMother. TPad* TPad::fMother {nullptr}. protected . ! pointer to mother of the list ; Definition at line 105 of file TPad.h. ◆ fName. TString TPad::fName. protected . Pad name. ; Definition at line 109 of file TPad.h. ◆ fNextPaletteColor. Int_t TPad::fNextPaletteColor. protected . Next automatic color. ; Definition at line 117 of file TPad.h. ◆ fNumber. Int_t TPad::fNumber. protected . pad number identifier ; Definition at line 88 of file TPad.h. ◆ fNumPaletteColor. Int_t TPad::fNumPaletteColor. protected . Number of objects with an automatic color. ; Definition at line 116 of file TPad.h. ◆ fPadPaint. Int_t TPad::fPadPaint. protected . Set to 1 while painting the pad. ; Definition at line 94 of file TPa",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:136806,Testability,log,log,136806,"f one exists) ; Definition at line 111 of file TPad.h. ◆ fGLDevice. Int_t TPad::fGLDevice. protected . ! OpenGL off-screen pixmap identifier ; Definition at line 85 of file TPad.h. ◆ fgMaxPickDistance. Int_t TPad::fgMaxPickDistance = 5. staticprotected . Maximum Pick Distance. ; Definition at line 115 of file TPad.h. ◆ fGridx. Bool_t TPad::fGridx. protected . Set to true if grid along X. ; Definition at line 100 of file TPad.h. ◆ fGridy. Bool_t TPad::fGridy. protected . Set to true if grid along Y. ; Definition at line 101 of file TPad.h. ◆ fHNDC. Double_t TPad::fHNDC. protected . Height of pad along Y in Normalized Coordinates (NDC) ; Definition at line 67 of file TPad.h. ◆ fLogx. Int_t TPad::fLogx. protected . (=0 if X linear scale, =1 if log scale) ; Definition at line 91 of file TPad.h. ◆ fLogy. Int_t TPad::fLogy. protected . (=0 if Y linear scale, =1 if log scale) ; Definition at line 92 of file TPad.h. ◆ fLogz. Int_t TPad::fLogz. protected . (=0 if Z linear scale, =1 if log scale) ; Definition at line 93 of file TPad.h. ◆ fModified. Bool_t TPad::fModified. protected . Set to true when pad is modified. ; Definition at line 99 of file TPad.h. ◆ fMother. TPad* TPad::fMother {nullptr}. protected . ! pointer to mother of the list ; Definition at line 105 of file TPad.h. ◆ fName. TString TPad::fName. protected . Pad name. ; Definition at line 109 of file TPad.h. ◆ fNextPaletteColor. Int_t TPad::fNextPaletteColor. protected . Next automatic color. ; Definition at line 117 of file TPad.h. ◆ fNumber. Int_t TPad::fNumber. protected . pad number identifier ; Definition at line 88 of file TPad.h. ◆ fNumPaletteColor. Int_t TPad::fNumPaletteColor. protected . Number of objects with an automatic color. ; Definition at line 116 of file TPad.h. ◆ fPadPaint. Int_t TPad::fPadPaint. protected . Set to 1 while painting the pad. ; Definition at line 94 of file TPad.h. ◆ fPadPointer. TObject* TPad::fPadPointer {nullptr}. protected . ! free pointer ; Definition at line 113 of file TP",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:58707,Usability,simpl,simple,58707,"rst ; (; TObject * ; obj, . Option_t * ; opt = """", . Bool_t ; modified = kTRUE . ). overridevirtual . Add an object as first in list of primitives with speicified draw option When. ; modified set to kTRUE (default) pad will be marked as modifiedLet avoid usage of gPad when drawing object(s) in canvas or in subpads. ; Implements TVirtualPad.; Definition at line 439 of file TPad.cxx. ◆ AutoExec(). void TPad::AutoExec ; (; ). virtual . Execute the list of Execs when a pad event occurs. ; Definition at line 508 of file TPad.cxx. ◆ Browse(). void TPad::Browse ; (; TBrowser * ; b). overridevirtual . Browse pad. ; Reimplemented from TObject.; Definition at line 523 of file TPad.cxx. ◆ BuildLegend(). TLegend * TPad::BuildLegend ; (; Double_t ; x1 = 0.3, . Double_t ; y1 = 0.21, . Double_t ; x2 = 0.3, . Double_t ; y2 = 0.21, . const char * ; title = """", . Option_t * ; option = """" . ). overridevirtual . Build a legend from the graphical objects in the pad. ; A simple method to build automatically a TLegend from the primitives in a TPad.; Only those deriving from TAttLine, TAttMarker and TAttFill are added, excluding TPave and TFrame derived classes.; ReturnsThe built TLegend; Parameters. [in]x1,y1,x2,y2The TLegend coordinates ; [in]titleThe legend title. By default it is "" "" ; [in]optionThe TLegend option. The caller program owns the returned TLegend.; If the pad contains some TMultiGraph or THStack the individual graphs or histograms in them are added to the TLegend. Automatic placement of the legend; If x1 is equal to x2 and y1 is equal to y2 the legend will be automatically placed to avoid overlapping with the existing primitives already displayed. x1 is considered as the width of the legend and y1 the height. By default the legend is automatically placed with width = x1= x2 = 0.3 and height = y1= y2 = 0.21. ; Implements TVirtualPad.; Definition at line 555 of file TPad.cxx. ◆ cd(). TVirtualPad * TPad::cd ; (; Int_t ; subpadnumber = 0). overridevirtual . Set Current pad. ; ",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:63400,Usability,simpl,simple,63400,". Double_t ; y, . Double_t ; xcl1, . Double_t ; ycl1, . Double_t ; xcl2, . Double_t ; ycl2 . ). virtual . Compute the endpoint codes for TPad::Clip. ; Definition at line 901 of file TPad.cxx. ◆ ClipPolygon(). Int_t TPad::ClipPolygon ; (; Int_t ; n, . Double_t * ; x, . Double_t * ; y, . Int_t ; nn, . Double_t * ; xc, . Double_t * ; yc, . Double_t ; xclipl, . Double_t ; yclipb, . Double_t ; xclipr, . Double_t ; yclipt . ). virtual . Clip polygon using the Sutherland-Hodgman algorithm. ; Parameters. [in]nNumber of points in the polygon to be clipped ; [in]x,yPolygon x[n], y[n] do be clipped vertices ; [in]xclipl,yclipb,xclipr,ycliptClipping boundary ; [out]nnNumber of points in xc and yc ; [out]xc,ycClipped polygon vertices. The Int_t returned by this function is the number of points in the clipped polygon. These vectors must be allocated by the calling function. A size of 2*n for each is enough. Sutherland and Hodgman's polygon-clipping algorithm uses a divide-and-conquer strategy: It solves a series of simple and identical problems that, when combined, solve the overall problem. The simple problem is to clip a polygon against a single infinite clip edge. Four clip edges, each defining one boundary of the clip rectangle, successively clip a polygon against a clip rectangle.; Steps of Sutherland-Hodgman's polygon-clipping algorithm:. Polygons can be clipped against each edge of the window one at a time. Windows/edge intersections, if any, are easy to find since the X or Y coordinates are already known.; Vertices which are kept after clipping against one window edge are saved for clipping against the remaining edges.; Note that the number of vertices usually changes and will often increases. The clip boundary determines a visible and invisible region. The edges from vertex i to vertex i+1 can be one of four types:. Case 1 : Wholly inside visible region - save endpoint; Case 2 : Exit visible region - save the intersection; Case 3 : Wholly outside visible region - save no",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPad.html:63482,Usability,simpl,simple,63482," for TPad::Clip. ; Definition at line 901 of file TPad.cxx. ◆ ClipPolygon(). Int_t TPad::ClipPolygon ; (; Int_t ; n, . Double_t * ; x, . Double_t * ; y, . Int_t ; nn, . Double_t * ; xc, . Double_t * ; yc, . Double_t ; xclipl, . Double_t ; yclipb, . Double_t ; xclipr, . Double_t ; yclipt . ). virtual . Clip polygon using the Sutherland-Hodgman algorithm. ; Parameters. [in]nNumber of points in the polygon to be clipped ; [in]x,yPolygon x[n], y[n] do be clipped vertices ; [in]xclipl,yclipb,xclipr,ycliptClipping boundary ; [out]nnNumber of points in xc and yc ; [out]xc,ycClipped polygon vertices. The Int_t returned by this function is the number of points in the clipped polygon. These vectors must be allocated by the calling function. A size of 2*n for each is enough. Sutherland and Hodgman's polygon-clipping algorithm uses a divide-and-conquer strategy: It solves a series of simple and identical problems that, when combined, solve the overall problem. The simple problem is to clip a polygon against a single infinite clip edge. Four clip edges, each defining one boundary of the clip rectangle, successively clip a polygon against a clip rectangle.; Steps of Sutherland-Hodgman's polygon-clipping algorithm:. Polygons can be clipped against each edge of the window one at a time. Windows/edge intersections, if any, are easy to find since the X or Y coordinates are already known.; Vertices which are kept after clipping against one window edge are saved for clipping against the remaining edges.; Note that the number of vertices usually changes and will often increases. The clip boundary determines a visible and invisible region. The edges from vertex i to vertex i+1 can be one of four types:. Case 1 : Wholly inside visible region - save endpoint; Case 2 : Exit visible region - save the intersection; Case 3 : Wholly outside visible region - save nothing; Case 4 : Enter visible region - save intersection and endpoint . Definition at line 950 of file TPad.cxx. ◆ Close(). void TPad",MatchSource.WIKI,doc/master/classTPad.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPad.html
https://root.cern/doc/master/classTPadPainter.html:4823,Modifiability,inherit,inherited,4823," will go. ;  ; void SetFillColor (Color_t fcolor) override;  Delegate to gVirtualX. ;  ; void SetFillStyle (Style_t fstyle) override;  Delegate to gVirtualX. ;  ; void SetLineColor (Color_t lcolor) override;  Delegate to gVirtualX. ;  ; void SetLineStyle (Style_t lstyle) override;  Delegate to gVirtualX. ;  ; void SetLineWidth (Width_t lwidth) override;  Delegate to gVirtualX. ;  ; void SetOpacity (Int_t percent) override;  Delegate to gVirtualX. ;  ; void SetTextAlign (Short_t align) override;  Delegate to gVirtualX. ;  ; void SetTextAngle (Float_t tangle) override;  Delegate to gVirtualX. ;  ; void SetTextColor (Color_t tcolor) override;  Delegate to gVirtualX. ;  ; void SetTextFont (Font_t tfont) override;  Delegate to gVirtualX. ;  ; void SetTextSize (Float_t tsize) override;  Delegate to gVirtualX. ;  ; void SetTextSizePixels (Int_t npixels) override;  Delegate to gVirtualX. ;  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TVirtualPadPainter; virtual ~TVirtualPadPainter ();  Virtual dtor. ;  ; virtual void InitPainter ();  Empty definition. ;  ; virtual void InvalidateCS ();  Empty definition. ;  ; virtual void LockPainter ();  Empty definition. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TVirtualPadPainter; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualPadPainter * PadPainter (Option_t *opt="""");  Create a pad painter of specified type. ;  . Private Member Functions;  TPadPainter (const TPadPainter &)=delete;  ;  TPadPainter (TPadPainter &&)=delete;  ; TPadPainter & operator= (const TPa",MatchSource.WIKI,doc/master/classTPadPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPadPainter.html
https://root.cern/doc/master/classTPadPainter.html:5354,Modifiability,inherit,inherited,5354,"ualX. ;  ; void SetTextColor (Color_t tcolor) override;  Delegate to gVirtualX. ;  ; void SetTextFont (Font_t tfont) override;  Delegate to gVirtualX. ;  ; void SetTextSize (Float_t tsize) override;  Delegate to gVirtualX. ;  ; void SetTextSizePixels (Int_t npixels) override;  Delegate to gVirtualX. ;  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TVirtualPadPainter; virtual ~TVirtualPadPainter ();  Virtual dtor. ;  ; virtual void InitPainter ();  Empty definition. ;  ; virtual void InvalidateCS ();  Empty definition. ;  ; virtual void LockPainter ();  Empty definition. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TVirtualPadPainter; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualPadPainter * PadPainter (Option_t *opt="""");  Create a pad painter of specified type. ;  . Private Member Functions;  TPadPainter (const TPadPainter &)=delete;  ;  TPadPainter (TPadPainter &&)=delete;  ; TPadPainter & operator= (const TPadPainter &)=delete;  ; TPadPainter & operator= (TPadPainter &&)=delete;  . Additional Inherited Members;  Public Types inherited from TVirtualPadPainter; enum  EBoxMode { kHollow; , kFilled; };  ; enum  ETextMode { kClear; , kOpaque; };  . #include <TPadPainter.h>. Inheritance diagram for TPadPainter:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TPadPainter() [1/3]. TPadPainter::TPadPainter ; (; ). Empty ctor. We need it only because of explicit copy ctor. ; Definition at line 72 of file TPadPa",MatchSource.WIKI,doc/master/classTPadPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPadPainter.html
https://root.cern/doc/master/classTPadPainter.html:5915,Modifiability,inherit,inherited,5915,"tion. ;  ; virtual void InvalidateCS ();  Empty definition. ;  ; virtual void LockPainter ();  Empty definition. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TVirtualPadPainter; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualPadPainter * PadPainter (Option_t *opt="""");  Create a pad painter of specified type. ;  . Private Member Functions;  TPadPainter (const TPadPainter &)=delete;  ;  TPadPainter (TPadPainter &&)=delete;  ; TPadPainter & operator= (const TPadPainter &)=delete;  ; TPadPainter & operator= (TPadPainter &&)=delete;  . Additional Inherited Members;  Public Types inherited from TVirtualPadPainter; enum  EBoxMode { kHollow; , kFilled; };  ; enum  ETextMode { kClear; , kOpaque; };  . #include <TPadPainter.h>. Inheritance diagram for TPadPainter:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TPadPainter() [1/3]. TPadPainter::TPadPainter ; (; ). Empty ctor. We need it only because of explicit copy ctor. ; Definition at line 72 of file TPadPainter.cxx. ◆ TPadPainter() [2/3]. TPadPainter::TPadPainter ; (; const TPadPainter & ; ). privatedelete . ◆ TPadPainter() [3/3]. TPadPainter::TPadPainter ; (; TPadPainter && ; ). privatedelete . Member Function Documentation. ◆ Class(). static TClass * TPadPainter::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TPadPainter::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TPadPainter::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class",MatchSource.WIKI,doc/master/classTPadPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPadPainter.html
https://root.cern/doc/master/classTPadPainter.html:981,Usability,simpl,simple,981,". ROOT: TPadPainter Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; List of all members ; TPadPainter Class ReferenceGraphics » 2D Graphics » Graphics pad. ; Implement TVirtualPadPainter which abstracts painting operations. ; Definition at line 26 of file TPadPainter.h. Public Member Functions;  TPadPainter ();  Empty ctor. We need it only because of explicit copy ctor. ;  ; void ClearDrawable () override;  Clear the current gVirtualX window. ;  ; void CopyDrawable (Int_t device, Int_t px, Int_t py) override;  Copy a gVirtualX pixmap. ;  ; Int_t CreateDrawable (UInt_t w, UInt_t h) override;  Create a gVirtualX Pixmap. ;  ; void DestroyDrawable (Int_t device) override;  Close the current gVirtualX pixmap. ;  ; void DrawBox (Double_t x1, Double_t y1, Double_t x2, Double_t y2, EBoxMode mode) override;  Paint a simple box. ;  ; void DrawFillArea (Int_t n, const Double_t *x, const Double_t *y) override;  Paint filled area. ;  ; void DrawFillArea (Int_t n, const Float_t *x, const Float_t *y) override;  Paint filled area. ;  ; void DrawLine (Double_t x1, Double_t y1, Double_t x2, Double_t y2) override;  Paint a simple line. ;  ; void DrawLineNDC (Double_t u1, Double_t v1, Double_t u2, Double_t v2) override;  Paint a simple line in normalized coordinates. ;  ; void DrawPixels (const unsigned char *pixelData, UInt_t width, UInt_t height, Int_t dstX, Int_t dstY, Bool_t enableAlphaBlending) override;  Noop, for non-gl pad TASImage calls gVirtualX->CopyArea. ;  ; void DrawPolyLine (Int_t n, const Double_t *x, const Double_t *y) override;  Paint Polyline. ;  ; void DrawPolyLine (Int_t n, const Float_t *x, const Float_t *y) override;  Paint polyline. ;  ; void DrawPolyLineNDC (Int_t n, const Double_t *u, const Double_t *v) override;  Paint polyline in normalized coordinates. ;  ; void DrawPolyMarker (Int_t n, const Double",MatchSource.WIKI,doc/master/classTPadPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPadPainter.html
https://root.cern/doc/master/classTPadPainter.html:1284,Usability,simpl,simple,1284,"mbers ; TPadPainter Class ReferenceGraphics » 2D Graphics » Graphics pad. ; Implement TVirtualPadPainter which abstracts painting operations. ; Definition at line 26 of file TPadPainter.h. Public Member Functions;  TPadPainter ();  Empty ctor. We need it only because of explicit copy ctor. ;  ; void ClearDrawable () override;  Clear the current gVirtualX window. ;  ; void CopyDrawable (Int_t device, Int_t px, Int_t py) override;  Copy a gVirtualX pixmap. ;  ; Int_t CreateDrawable (UInt_t w, UInt_t h) override;  Create a gVirtualX Pixmap. ;  ; void DestroyDrawable (Int_t device) override;  Close the current gVirtualX pixmap. ;  ; void DrawBox (Double_t x1, Double_t y1, Double_t x2, Double_t y2, EBoxMode mode) override;  Paint a simple box. ;  ; void DrawFillArea (Int_t n, const Double_t *x, const Double_t *y) override;  Paint filled area. ;  ; void DrawFillArea (Int_t n, const Float_t *x, const Float_t *y) override;  Paint filled area. ;  ; void DrawLine (Double_t x1, Double_t y1, Double_t x2, Double_t y2) override;  Paint a simple line. ;  ; void DrawLineNDC (Double_t u1, Double_t v1, Double_t u2, Double_t v2) override;  Paint a simple line in normalized coordinates. ;  ; void DrawPixels (const unsigned char *pixelData, UInt_t width, UInt_t height, Int_t dstX, Int_t dstY, Bool_t enableAlphaBlending) override;  Noop, for non-gl pad TASImage calls gVirtualX->CopyArea. ;  ; void DrawPolyLine (Int_t n, const Double_t *x, const Double_t *y) override;  Paint Polyline. ;  ; void DrawPolyLine (Int_t n, const Float_t *x, const Float_t *y) override;  Paint polyline. ;  ; void DrawPolyLineNDC (Int_t n, const Double_t *u, const Double_t *v) override;  Paint polyline in normalized coordinates. ;  ; void DrawPolyMarker (Int_t n, const Double_t *x, const Double_t *y) override;  Paint polymarker. ;  ; void DrawPolyMarker (Int_t n, const Float_t *x, const Float_t *y) override;  Paint polymarker. ;  ; void DrawText (Double_t x, Double_t y, const char *text, ETextMode mode) override; ",MatchSource.WIKI,doc/master/classTPadPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPadPainter.html
https://root.cern/doc/master/classTPadPainter.html:1391,Usability,simpl,simple,1391,"ts painting operations. ; Definition at line 26 of file TPadPainter.h. Public Member Functions;  TPadPainter ();  Empty ctor. We need it only because of explicit copy ctor. ;  ; void ClearDrawable () override;  Clear the current gVirtualX window. ;  ; void CopyDrawable (Int_t device, Int_t px, Int_t py) override;  Copy a gVirtualX pixmap. ;  ; Int_t CreateDrawable (UInt_t w, UInt_t h) override;  Create a gVirtualX Pixmap. ;  ; void DestroyDrawable (Int_t device) override;  Close the current gVirtualX pixmap. ;  ; void DrawBox (Double_t x1, Double_t y1, Double_t x2, Double_t y2, EBoxMode mode) override;  Paint a simple box. ;  ; void DrawFillArea (Int_t n, const Double_t *x, const Double_t *y) override;  Paint filled area. ;  ; void DrawFillArea (Int_t n, const Float_t *x, const Float_t *y) override;  Paint filled area. ;  ; void DrawLine (Double_t x1, Double_t y1, Double_t x2, Double_t y2) override;  Paint a simple line. ;  ; void DrawLineNDC (Double_t u1, Double_t v1, Double_t u2, Double_t v2) override;  Paint a simple line in normalized coordinates. ;  ; void DrawPixels (const unsigned char *pixelData, UInt_t width, UInt_t height, Int_t dstX, Int_t dstY, Bool_t enableAlphaBlending) override;  Noop, for non-gl pad TASImage calls gVirtualX->CopyArea. ;  ; void DrawPolyLine (Int_t n, const Double_t *x, const Double_t *y) override;  Paint Polyline. ;  ; void DrawPolyLine (Int_t n, const Float_t *x, const Float_t *y) override;  Paint polyline. ;  ; void DrawPolyLineNDC (Int_t n, const Double_t *u, const Double_t *v) override;  Paint polyline in normalized coordinates. ;  ; void DrawPolyMarker (Int_t n, const Double_t *x, const Double_t *y) override;  Paint polymarker. ;  ; void DrawPolyMarker (Int_t n, const Float_t *x, const Float_t *y) override;  Paint polymarker. ;  ; void DrawText (Double_t x, Double_t y, const char *text, ETextMode mode) override;  Paint text. ;  ; void DrawText (Double_t x, Double_t y, const wchar_t *text, ETextMode mode) override;  Special versio",MatchSource.WIKI,doc/master/classTPadPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPadPainter.html
https://root.cern/doc/master/classTPadPainter.html:8204,Usability,simpl,simple,8204,"awable(). void TPadPainter::CopyDrawable ; (; Int_t ; device, . Int_t ; px, . Int_t ; py . ). overridevirtual . Copy a gVirtualX pixmap. ; Implements TVirtualPadPainter.; Definition at line 324 of file TPadPainter.cxx. ◆ CreateDrawable(). Int_t TPadPainter::CreateDrawable ; (; UInt_t ; w, . UInt_t ; h . ). overridevirtual . Create a gVirtualX Pixmap. ; Implements TVirtualPadPainter.; Definition at line 306 of file TPadPainter.cxx. ◆ DeclFileName(). static const char * TPadPainter::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 109 of file TPadPainter.h. ◆ DestroyDrawable(). void TPadPainter::DestroyDrawable ; (; Int_t ; device). overridevirtual . Close the current gVirtualX pixmap. ; Implements TVirtualPadPainter.; Definition at line 333 of file TPadPainter.cxx. ◆ DrawBox(). void TPadPainter::DrawBox ; (; Double_t ; x1, . Double_t ; y1, . Double_t ; x2, . Double_t ; y2, . EBoxMode ; mode . ). overridevirtual . Paint a simple box. ; Implements TVirtualPadPainter.; Definition at line 390 of file TPadPainter.cxx. ◆ DrawFillArea() [1/2]. void TPadPainter::DrawFillArea ; (; Int_t ; n, . const Double_t * ; x, . const Double_t * ; y . ). overridevirtual . Paint filled area. ; Implements TVirtualPadPainter.; Definition at line 411 of file TPadPainter.cxx. ◆ DrawFillArea() [2/2]. void TPadPainter::DrawFillArea ; (; Int_t ; n, . const Float_t * ; x, . const Float_t * ; y . ). overridevirtual . Paint filled area. ; Implements TVirtualPadPainter.; Definition at line 425 of file TPadPainter.cxx. ◆ DrawLine(). void TPadPainter::DrawLine ; (; Double_t ; x1, . Double_t ; y1, . Double_t ; x2, . Double_t ; y2 . ). overridevirtual . Paint a simple line. ; Implements TVirtualPadPainter.; Definition at line 360 of file TPadPainter.cxx. ◆ DrawLineNDC(). void TPadPainter::DrawLineNDC ; (; Double_t ; u1, . Double_t ; v1, . Double_t ; u2, . Double_t ; v2 . ). overridevirtual . Paint a simple line in normalized coordinates. ;",MatchSource.WIKI,doc/master/classTPadPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPadPainter.html
https://root.cern/doc/master/classTPadPainter.html:8922,Usability,simpl,simple,8922,"l . Close the current gVirtualX pixmap. ; Implements TVirtualPadPainter.; Definition at line 333 of file TPadPainter.cxx. ◆ DrawBox(). void TPadPainter::DrawBox ; (; Double_t ; x1, . Double_t ; y1, . Double_t ; x2, . Double_t ; y2, . EBoxMode ; mode . ). overridevirtual . Paint a simple box. ; Implements TVirtualPadPainter.; Definition at line 390 of file TPadPainter.cxx. ◆ DrawFillArea() [1/2]. void TPadPainter::DrawFillArea ; (; Int_t ; n, . const Double_t * ; x, . const Double_t * ; y . ). overridevirtual . Paint filled area. ; Implements TVirtualPadPainter.; Definition at line 411 of file TPadPainter.cxx. ◆ DrawFillArea() [2/2]. void TPadPainter::DrawFillArea ; (; Int_t ; n, . const Float_t * ; x, . const Float_t * ; y . ). overridevirtual . Paint filled area. ; Implements TVirtualPadPainter.; Definition at line 425 of file TPadPainter.cxx. ◆ DrawLine(). void TPadPainter::DrawLine ; (; Double_t ; x1, . Double_t ; y1, . Double_t ; x2, . Double_t ; y2 . ). overridevirtual . Paint a simple line. ; Implements TVirtualPadPainter.; Definition at line 360 of file TPadPainter.cxx. ◆ DrawLineNDC(). void TPadPainter::DrawLineNDC ; (; Double_t ; u1, . Double_t ; v1, . Double_t ; u2, . Double_t ; v2 . ). overridevirtual . Paint a simple line in normalized coordinates. ; Implements TVirtualPadPainter.; Definition at line 375 of file TPadPainter.cxx. ◆ DrawPixels(). void TPadPainter::DrawPixels ; (; const unsigned char * ; pixelData, . UInt_t ; width, . UInt_t ; height, . Int_t ; dstX, . Int_t ; dstY, . Bool_t ; enableAlphaBlending . ). overridevirtual . Noop, for non-gl pad TASImage calls gVirtualX->CopyArea. ; Implements TVirtualPadPainter.; Definition at line 351 of file TPadPainter.cxx. ◆ DrawPolyLine() [1/2]. void TPadPainter::DrawPolyLine ; (; Int_t ; n, . const Double_t * ; x, . const Double_t * ; y . ). overridevirtual . Paint Polyline. ; Implements TVirtualPadPainter.; Definition at line 438 of file TPadPainter.cxx. ◆ DrawPolyLine() [2/2]. void TPadPainter::DrawPolyLi",MatchSource.WIKI,doc/master/classTPadPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPadPainter.html
https://root.cern/doc/master/classTPadPainter.html:9165,Usability,simpl,simple,9165,"verridevirtual . Paint a simple box. ; Implements TVirtualPadPainter.; Definition at line 390 of file TPadPainter.cxx. ◆ DrawFillArea() [1/2]. void TPadPainter::DrawFillArea ; (; Int_t ; n, . const Double_t * ; x, . const Double_t * ; y . ). overridevirtual . Paint filled area. ; Implements TVirtualPadPainter.; Definition at line 411 of file TPadPainter.cxx. ◆ DrawFillArea() [2/2]. void TPadPainter::DrawFillArea ; (; Int_t ; n, . const Float_t * ; x, . const Float_t * ; y . ). overridevirtual . Paint filled area. ; Implements TVirtualPadPainter.; Definition at line 425 of file TPadPainter.cxx. ◆ DrawLine(). void TPadPainter::DrawLine ; (; Double_t ; x1, . Double_t ; y1, . Double_t ; x2, . Double_t ; y2 . ). overridevirtual . Paint a simple line. ; Implements TVirtualPadPainter.; Definition at line 360 of file TPadPainter.cxx. ◆ DrawLineNDC(). void TPadPainter::DrawLineNDC ; (; Double_t ; u1, . Double_t ; v1, . Double_t ; u2, . Double_t ; v2 . ). overridevirtual . Paint a simple line in normalized coordinates. ; Implements TVirtualPadPainter.; Definition at line 375 of file TPadPainter.cxx. ◆ DrawPixels(). void TPadPainter::DrawPixels ; (; const unsigned char * ; pixelData, . UInt_t ; width, . UInt_t ; height, . Int_t ; dstX, . Int_t ; dstY, . Bool_t ; enableAlphaBlending . ). overridevirtual . Noop, for non-gl pad TASImage calls gVirtualX->CopyArea. ; Implements TVirtualPadPainter.; Definition at line 351 of file TPadPainter.cxx. ◆ DrawPolyLine() [1/2]. void TPadPainter::DrawPolyLine ; (; Int_t ; n, . const Double_t * ; x, . const Double_t * ; y . ). overridevirtual . Paint Polyline. ; Implements TVirtualPadPainter.; Definition at line 438 of file TPadPainter.cxx. ◆ DrawPolyLine() [2/2]. void TPadPainter::DrawPolyLine ; (; Int_t ; n, . const Float_t * ; x, . const Float_t * ; y . ). overridevirtual . Paint polyline. ; Implements TVirtualPadPainter.; Definition at line 454 of file TPadPainter.cxx. ◆ DrawPolyLineNDC(). void TPadPainter::DrawPolyLineNDC ; (; Int_t ; n, ",MatchSource.WIKI,doc/master/classTPadPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPadPainter.html
https://root.cern/doc/master/classTPadWebSnapshot.html:3636,Availability,error,error,3636,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTPadWebSnapshot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPadWebSnapshot.html
https://root.cern/doc/master/classTPadWebSnapshot.html:3725,Availability,error,error,3725,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTPadWebSnapshot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPadWebSnapshot.html
https://root.cern/doc/master/classTPadWebSnapshot.html:3880,Availability,error,error,3880,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTPadWebSnapshot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPadWebSnapshot.html
https://root.cern/doc/master/classTPadWebSnapshot.html:4177,Availability,error,error,4177,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTPadWebSnapshot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPadWebSnapshot.html
https://root.cern/doc/master/classTPadWebSnapshot.html:8741,Availability,error,error,8741," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TWebSnapshot; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Ver",MatchSource.WIKI,doc/master/classTPadWebSnapshot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPadWebSnapshot.html
https://root.cern/doc/master/classTPadWebSnapshot.html:3642,Integrability,message,message,3642,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTPadWebSnapshot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPadWebSnapshot.html
https://root.cern/doc/master/classTPadWebSnapshot.html:4183,Integrability,message,message,4183,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTPadWebSnapshot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPadWebSnapshot.html
https://root.cern/doc/master/classTPadWebSnapshot.html:5385,Integrability,message,message,5385,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTPadWebSnapshot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPadWebSnapshot.html
https://root.cern/doc/master/classTPadWebSnapshot.html:8747,Integrability,message,message,8747," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TWebSnapshot; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Ver",MatchSource.WIKI,doc/master/classTPadWebSnapshot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPadWebSnapshot.html
https://root.cern/doc/master/classTPadWebSnapshot.html:9120,Integrability,message,message,9120," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TWebSnapshot; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ",MatchSource.WIKI,doc/master/classTPadWebSnapshot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPadWebSnapshot.html
https://root.cern/doc/master/classTPadWebSnapshot.html:1161,Modifiability,inherit,inherited,1161," at line 60 of file TWebSnapshot.h. Public Member Functions;  TPadWebSnapshot (bool readonly=true, bool setids=true, bool batchmode=false);  ; TClass * IsA () const override;  ; bool IsBatchMode () const;  ; bool IsReadOnly () const;  ; bool IsSetObjectIds () const;  ; TWebSnapshot & NewPrimitive (TObject *obj=nullptr, const std::string &opt="""", const std::string &suffix="""");  Create new entry in list of primitives. ;  ; TWebSnapshot & NewSpecials ();  Create new entry in list of primitives in the front. ;  ; TPadWebSnapshot & NewSubPad ();  Create new entry for subpad. ;  ; void SetActive (bool on=true);  ; void SetHasExecs (bool on=true);  ; void SetWithoutPrimitives (bool on=true);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TWebSnapshot;  ~TWebSnapshot () override;  destructor ;  ; Int_t GetKind () const;  ; const char * GetObjectID () const;  ; TObject * GetSnapshot () const;  ; TClass * IsA () const override;  ; void SetObjectID (const std::string &id);  ; void SetObjectIDAsPtr (void *ptr, const std::string &suffix="""");  Use pointer to assign object id - TString::Hash. ;  ; void SetOption (const std::string &opt);  ; void SetSnapshot (Int_t kind, TObject *snapshot, Bool_t owner=kFALSE);  SetUse pointer to assign object id - TString::Hash. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual voi",MatchSource.WIKI,doc/master/classTPadWebSnapshot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPadWebSnapshot.html
https://root.cern/doc/master/classTPadWebSnapshot.html:1875,Modifiability,inherit,inherited,1875,"entry for subpad. ;  ; void SetActive (bool on=true);  ; void SetHasExecs (bool on=true);  ; void SetWithoutPrimitives (bool on=true);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TWebSnapshot;  ~TWebSnapshot () override;  destructor ;  ; Int_t GetKind () const;  ; const char * GetObjectID () const;  ; TObject * GetSnapshot () const;  ; TClass * IsA () const override;  ; void SetObjectID (const std::string &id);  ; void SetObjectIDAsPtr (void *ptr, const std::string &suffix="""");  Use pointer to assign object id - TString::Hash. ;  ; void SetOption (const std::string &opt);  ; void SetSnapshot (Int_t kind, TObject *snapshot, Bool_t owner=kFALSE);  SetUse pointer to assign object id - TString::Hash. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTPadWebSnapshot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPadWebSnapshot.html
https://root.cern/doc/master/classTPadWebSnapshot.html:3272,Modifiability,inherit,inheritance,3272,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTPadWebSnapshot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPadWebSnapshot.html
https://root.cern/doc/master/classTPadWebSnapshot.html:5483,Modifiability,inherit,inherits,5483,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTPadWebSnapshot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPadWebSnapshot.html
https://root.cern/doc/master/classTPadWebSnapshot.html:5600,Modifiability,inherit,inherits,5600,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTPadWebSnapshot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPadWebSnapshot.html
https://root.cern/doc/master/classTPadWebSnapshot.html:9621,Modifiability,inherit,inherited,9621,"m error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TWebSnapshot; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; bool fActive {false};  true when pad is active ;  ; bool fBatchMode {false};  ! if object created for image generation ;  ; bool fHasExecs {false};  if true, more interactive events will be delivered from client ;  ; std::vector< std::unique_ptr< TWebSnapshot > > fPrimitives;  list of all primitives, drawn in the pad ;  ; bool fReadOnly {true};  when canvas or pad are in readonly mode ;  ; bo",MatchSource.WIKI,doc/master/classTPadWebSnapshot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPadWebSnapshot.html
https://root.cern/doc/master/classTPadWebSnapshot.html:9837,Modifiability,inherit,inherited,9837,"m error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TWebSnapshot; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; bool fActive {false};  true when pad is active ;  ; bool fBatchMode {false};  ! if object created for image generation ;  ; bool fHasExecs {false};  if true, more interactive events will be delivered from client ;  ; std::vector< std::unique_ptr< TWebSnapshot > > fPrimitives;  list of all primitives, drawn in the pad ;  ; bool fReadOnly {true};  when canvas or pad are in readonly mode ;  ; bo",MatchSource.WIKI,doc/master/classTPadWebSnapshot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPadWebSnapshot.html
https://root.cern/doc/master/classTPadWebSnapshot.html:10913,Modifiability,inherit,inherited,10913,"_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; bool fActive {false};  true when pad is active ;  ; bool fBatchMode {false};  ! if object created for image generation ;  ; bool fHasExecs {false};  if true, more interactive events will be delivered from client ;  ; std::vector< std::unique_ptr< TWebSnapshot > > fPrimitives;  list of all primitives, drawn in the pad ;  ; bool fReadOnly {true};  when canvas or pad are in readonly mode ;  ; bool fSetObjectIds {true};  ! set objects ids ;  ; bool fWithoutPrimitives {false};  true when primitives not send while there are no modifications ;  ;  Protected Attributes inherited from TWebSnapshot; Int_t fKind {0};  kind of snapshots ;  ; std::string fObjectID;  object identifier ;  ; std::string fOption;  object draw option ;  ; Bool_t fOwner {kFALSE};  ! if objected owned ;  ; TObject * fSnapshot {nullptr};  snapshot data ;  . Additional Inherited Members;  Public Types inherited from TWebSnapshot; enum  { ;   kNone = 0; , kObject = 1; , kSVG = 2; , kSubPad = 3; , ;   kColors = 4; , kStyle = 5; , kFont = 6. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatus",MatchSource.WIKI,doc/master/classTPadWebSnapshot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPadWebSnapshot.html
https://root.cern/doc/master/classTPadWebSnapshot.html:11221,Modifiability,inherit,inherited,11221,"n on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; bool fActive {false};  true when pad is active ;  ; bool fBatchMode {false};  ! if object created for image generation ;  ; bool fHasExecs {false};  if true, more interactive events will be delivered from client ;  ; std::vector< std::unique_ptr< TWebSnapshot > > fPrimitives;  list of all primitives, drawn in the pad ;  ; bool fReadOnly {true};  when canvas or pad are in readonly mode ;  ; bool fSetObjectIds {true};  ! set objects ids ;  ; bool fWithoutPrimitives {false};  true when primitives not send while there are no modifications ;  ;  Protected Attributes inherited from TWebSnapshot; Int_t fKind {0};  kind of snapshots ;  ; std::string fObjectID;  object identifier ;  ; std::string fOption;  object draw option ;  ; Bool_t fOwner {kFALSE};  ! if objected owned ;  ; TObject * fSnapshot {nullptr};  snapshot data ;  . Additional Inherited Members;  Public Types inherited from TWebSnapshot; enum  { ;   kNone = 0; , kObject = 1; , kSVG = 2; , kSubPad = 3; , ;   kColors = 4; , kStyle = 5; , kFont = 6. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TWebSnapshot; void SetKind (Int_t kind);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, con",MatchSource.WIKI,doc/master/classTPadWebSnapshot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPadWebSnapshot.html
https://root.cern/doc/master/classTPadWebSnapshot.html:11381,Modifiability,inherit,inherited,11381,"neration ;  ; bool fHasExecs {false};  if true, more interactive events will be delivered from client ;  ; std::vector< std::unique_ptr< TWebSnapshot > > fPrimitives;  list of all primitives, drawn in the pad ;  ; bool fReadOnly {true};  when canvas or pad are in readonly mode ;  ; bool fSetObjectIds {true};  ! set objects ids ;  ; bool fWithoutPrimitives {false};  true when primitives not send while there are no modifications ;  ;  Protected Attributes inherited from TWebSnapshot; Int_t fKind {0};  kind of snapshots ;  ; std::string fObjectID;  object identifier ;  ; std::string fOption;  object draw option ;  ; Bool_t fOwner {kFALSE};  ! if objected owned ;  ; TObject * fSnapshot {nullptr};  snapshot data ;  . Additional Inherited Members;  Public Types inherited from TWebSnapshot; enum  { ;   kNone = 0; , kObject = 1; , kSVG = 2; , kSubPad = 3; , ;   kColors = 4; , kStyle = 5; , kFont = 6. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TWebSnapshot; void SetKind (Int_t kind);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TWebSnapshot.h>. Inheritance diagram for TPadWebSnapsho",MatchSource.WIKI,doc/master/classTPadWebSnapshot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPadWebSnapshot.html
https://root.cern/doc/master/classTPadWebSnapshot.html:12022,Modifiability,inherit,inherited,12022,"itional Inherited Members;  Public Types inherited from TWebSnapshot; enum  { ;   kNone = 0; , kObject = 1; , kSVG = 2; , kSubPad = 3; , ;   kColors = 4; , kStyle = 5; , kFont = 6. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TWebSnapshot; void SetKind (Int_t kind);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TWebSnapshot.h>. Inheritance diagram for TPadWebSnapshot:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TPadWebSnapshot(). TPadWebSnapshot::TPadWebSnapshot ; (; bool ; readonly = true, . bool ; setids = true, . bool ; batchmode = false . ). inline . Definition at line 71 of file TWebSnapshot.h. Member Function Documentation. ◆ Class(). static TClass * TPadWebSnapshot::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TPadWebSnapshot::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TPadWebSnapshot::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Defin",MatchSource.WIKI,doc/master/classTPadWebSnapshot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPadWebSnapshot.html
https://root.cern/doc/master/classTPadWebSnapshot.html:12121,Modifiability,inherit,inherited,12121,"itional Inherited Members;  Public Types inherited from TWebSnapshot; enum  { ;   kNone = 0; , kObject = 1; , kSVG = 2; , kSubPad = 3; , ;   kColors = 4; , kStyle = 5; , kFont = 6. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TWebSnapshot; void SetKind (Int_t kind);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TWebSnapshot.h>. Inheritance diagram for TPadWebSnapshot:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TPadWebSnapshot(). TPadWebSnapshot::TPadWebSnapshot ; (; bool ; readonly = true, . bool ; setids = true, . bool ; batchmode = false . ). inline . Definition at line 71 of file TWebSnapshot.h. Member Function Documentation. ◆ Class(). static TClass * TPadWebSnapshot::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TPadWebSnapshot::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TPadWebSnapshot::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Defin",MatchSource.WIKI,doc/master/classTPadWebSnapshot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPadWebSnapshot.html
https://root.cern/doc/master/classTPadWebSnapshot.html:12208,Modifiability,inherit,inherited,12208,"itional Inherited Members;  Public Types inherited from TWebSnapshot; enum  { ;   kNone = 0; , kObject = 1; , kSVG = 2; , kSubPad = 3; , ;   kColors = 4; , kStyle = 5; , kFont = 6. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TWebSnapshot; void SetKind (Int_t kind);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TWebSnapshot.h>. Inheritance diagram for TPadWebSnapshot:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TPadWebSnapshot(). TPadWebSnapshot::TPadWebSnapshot ; (; bool ; readonly = true, . bool ; setids = true, . bool ; batchmode = false . ). inline . Definition at line 71 of file TWebSnapshot.h. Member Function Documentation. ◆ Class(). static TClass * TPadWebSnapshot::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TPadWebSnapshot::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TPadWebSnapshot::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Defin",MatchSource.WIKI,doc/master/classTPadWebSnapshot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPadWebSnapshot.html
https://root.cern/doc/master/classTPadWebSnapshot.html:5114,Security,hash,hash,5114," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTPadWebSnapshot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPadWebSnapshot.html
https://root.cern/doc/master/classTPainter3dAlgorithms.html:12822,Availability,mask,masks,12822,"ble_t fX0;  ; Double_t fDX;  ; Int_t fNT;  ; Double_t fT [MaxNT *2];  ; Double_t fU [NumOfSlices *2];  ; Double_t fD [NumOfSlices *2];  ; static const Int_t MaxNT = 100;  ; static const Int_t NumOfSlices = 2000;  ; void InitMoveScreen (Double_t xmin, Double_t xmax);  Initialize ""MOVING SCREEN"" method. ;  ; void FindVisibleDraw (Double_t *r1, Double_t *r2);  Find visible parts of line (draw line) ;  ; void ModifyScreen (Double_t *r1, Double_t *r2);  Modify SCREEN. ;  . Raster screen; Specialized hidden line removal algorithm for rendering 3D polygons ordered by depth (front-to-back) . Double_t fXrast;  Minimal x. ;  ; Double_t fYrast;  Minimal y. ;  ; Double_t fDXrast;  X size. ;  ; Double_t fDYrast;  Y size. ;  ; Int_t fNxrast;  Number of pixels in x. ;  ; Int_t fNyrast;  Number of pixels in y. ;  ; Int_t fIfrast;  Flag, if it not zero them the algorithm is off. ;  ; std::vector< Int_t > fRaster;  Pointer to raster buffer. ;  ; Int_t fJmask [30];  Indices of subsets of n-bit masks (n is from 1 to 30) ;  ; Int_t fMask [465];  Set of masks (30+29+28+...+1)=465. ;  ; void InitRaster (Double_t xmin, Double_t ymin, Double_t xmax, Double_t ymax, Int_t nx, Int_t ny);  Initialize hidden lines removal algorithm (RASTER SCREEN) ;  ; void ClearRaster ();  Clear screen. ;  ; void FindVisibleLine (Double_t *p1, Double_t *p2, Int_t ntmax, Int_t &nt, Double_t *t);  Find visible part of a line (""RASTER SCREEN"") ;  ; void FillPolygonBorder (Int_t nn, Double_t *xy);  Fill a polygon including border (""RASTER SCREEN"") ;  . Marching Cubes; Construction of iso-surfaces, see publication CERN-CN-95-17 . Double_t fP8 [8][3];  Vertices. ;  ; Double_t fF8 [8];  Function values. ;  ; Double_t fG8 [8][3];  Function gradients. ;  ; void MarchingCube (Double_t fiso, Double_t p[8][3], Double_t f[8], Double_t g[8][3], Int_t &nnod, Int_t &ntria, Double_t xyz[][3], Double_t grad[][3], Int_t itria[][3]);  Topological decider for ""Marching Cubes"" algorithm Find set of triangles approximating the iso-sur",MatchSource.WIKI,doc/master/classTPainter3dAlgorithms.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPainter3dAlgorithms.html
https://root.cern/doc/master/classTPainter3dAlgorithms.html:12880,Availability,mask,masks,12880,"ble_t fX0;  ; Double_t fDX;  ; Int_t fNT;  ; Double_t fT [MaxNT *2];  ; Double_t fU [NumOfSlices *2];  ; Double_t fD [NumOfSlices *2];  ; static const Int_t MaxNT = 100;  ; static const Int_t NumOfSlices = 2000;  ; void InitMoveScreen (Double_t xmin, Double_t xmax);  Initialize ""MOVING SCREEN"" method. ;  ; void FindVisibleDraw (Double_t *r1, Double_t *r2);  Find visible parts of line (draw line) ;  ; void ModifyScreen (Double_t *r1, Double_t *r2);  Modify SCREEN. ;  . Raster screen; Specialized hidden line removal algorithm for rendering 3D polygons ordered by depth (front-to-back) . Double_t fXrast;  Minimal x. ;  ; Double_t fYrast;  Minimal y. ;  ; Double_t fDXrast;  X size. ;  ; Double_t fDYrast;  Y size. ;  ; Int_t fNxrast;  Number of pixels in x. ;  ; Int_t fNyrast;  Number of pixels in y. ;  ; Int_t fIfrast;  Flag, if it not zero them the algorithm is off. ;  ; std::vector< Int_t > fRaster;  Pointer to raster buffer. ;  ; Int_t fJmask [30];  Indices of subsets of n-bit masks (n is from 1 to 30) ;  ; Int_t fMask [465];  Set of masks (30+29+28+...+1)=465. ;  ; void InitRaster (Double_t xmin, Double_t ymin, Double_t xmax, Double_t ymax, Int_t nx, Int_t ny);  Initialize hidden lines removal algorithm (RASTER SCREEN) ;  ; void ClearRaster ();  Clear screen. ;  ; void FindVisibleLine (Double_t *p1, Double_t *p2, Int_t ntmax, Int_t &nt, Double_t *t);  Find visible part of a line (""RASTER SCREEN"") ;  ; void FillPolygonBorder (Int_t nn, Double_t *xy);  Fill a polygon including border (""RASTER SCREEN"") ;  . Marching Cubes; Construction of iso-surfaces, see publication CERN-CN-95-17 . Double_t fP8 [8][3];  Vertices. ;  ; Double_t fF8 [8];  Function values. ;  ; Double_t fG8 [8][3];  Function gradients. ;  ; void MarchingCube (Double_t fiso, Double_t p[8][3], Double_t f[8], Double_t g[8][3], Int_t &nnod, Int_t &ntria, Double_t xyz[][3], Double_t grad[][3], Int_t itria[][3]);  Topological decider for ""Marching Cubes"" algorithm Find set of triangles approximating the iso-sur",MatchSource.WIKI,doc/master/classTPainter3dAlgorithms.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPainter3dAlgorithms.html
https://root.cern/doc/master/classTPainter3dAlgorithms.html:19172,Availability,error,error,19172,"tem = 1 . ). Normal default constructor. ; rmin[3], rmax[3] are the limits of the lego object depending on the selected coordinate system ; Definition at line 130 of file TPainter3dAlgorithms.cxx. ◆ ~TPainter3dAlgorithms(). TPainter3dAlgorithms::~TPainter3dAlgorithms ; (; ). override . destructor ; Definition at line 209 of file TPainter3dAlgorithms.cxx. Member Function Documentation. ◆ BackBox(). void TPainter3dAlgorithms::BackBox ; (; Double_t ; ang). Draw back surfaces of surrounding box. ; Parameters. [in]angangle between X and Y axis . Definition at line 218 of file TPainter3dAlgorithms.cxx. ◆ ClearRaster(). void TPainter3dAlgorithms::ClearRaster ; (; ). Clear screen. ; Definition at line 307 of file TPainter3dAlgorithms.cxx. ◆ ColorFunction(). void TPainter3dAlgorithms::ColorFunction ; (; Int_t ; nl, . Double_t * ; fl, . Int_t * ; icl, . Int_t & ; irep . ). Set correspondence between function and color levels. ; Parameters. [in]nlnumber of levels ; [in]flfunction levels ; [in]iclcolors for levels; [out]irepreturn code (0 OK, -1 error). . Definition at line 323 of file TPainter3dAlgorithms.cxx. ◆ DefineGridLevels(). void TPainter3dAlgorithms::DefineGridLevels ; (; Int_t ; ndivz). Define the grid levels drawn in the background of surface and lego plots. ; The grid levels are aligned on the Z axis' main tick marks. ; Definition at line 366 of file TPainter3dAlgorithms.cxx. ◆ DrawFaceGouraudShaded(). void TPainter3dAlgorithms::DrawFaceGouraudShaded ; (; Int_t * ; icodes, . Double_t ; xyz[][3], . Int_t ; np, . Int_t * ; iface, . Double_t * ; t . ). Draw the faces for the Gouraud Shaded Iso surfaces. ; Definition at line 5747 of file TPainter3dAlgorithms.cxx. ◆ DrawFaceMode1(). void TPainter3dAlgorithms::DrawFaceMode1 ; (; Int_t * ; icodes, . Double_t * ; xyz, . Int_t ; np, . Int_t * ; iface, . Double_t * ; t . ). Draw face - 1st variant (2 colors: 1st for external surface, 2nd for internal) ; Parameters. [in]icodesset of codes for the line (not used in this method)",MatchSource.WIKI,doc/master/classTPainter3dAlgorithms.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPainter3dAlgorithms.html
https://root.cern/doc/master/classTPainter3dAlgorithms.html:31835,Availability,error,error,31835,"on at line 2350 of file TPainter3dAlgorithms.cxx. ◆ LegoSpherical(). void TPainter3dAlgorithms::LegoSpherical ; (; Int_t ; ipsdr, . Int_t ; iordr, . Int_t ; na, . Int_t ; nb, . const char * ; chopt . ). Draw stack of lego-plots spheric coordinates. ; Parameters. [in]ipsdrpseudo-rapidity flag ; [in]iordrorder of variables (0 - THETA,PHI; 1 - PHI,THETA) ; [in]nanumber of steps along 1st variable ; [in]nbnumber of steps along 2nd variable ; [in]choptspecific options. chopt = 'BF' from BACK to FRONT; chopt = 'FB' from FRONT to BACK . Definition at line 2758 of file TPainter3dAlgorithms.cxx. ◆ LightSource(). void TPainter3dAlgorithms::LightSource ; (; Int_t ; nl, . Double_t ; yl, . Double_t ; xscr, . Double_t ; yscr, . Double_t ; zscr, . Int_t & ; irep . ). Set light source. ; Parameters. [in]nlsource number: 1 off all light sources, 0 set diffused light ; [in]ylintensity of the light source ; [in]xscr,yscr,zscrdirection of the light (in respect of the screen); [out]irepreply (0 - O.K, -1 error) . Definition at line 3024 of file TPainter3dAlgorithms.cxx. ◆ Luminosity(). void TPainter3dAlgorithms::Luminosity ; (; TView * ; view, . Double_t * ; anorm, . Double_t & ; flum . ). private . Find surface luminosity at given point. ; Parameters. [in]viewpointer on TView object ; [in]anormsurface normal at given point; [out]flumluminosity . Definition at line 3088 of file TPainter3dAlgorithms.cxx. ◆ MarchingCube(). void TPainter3dAlgorithms::MarchingCube ; (; Double_t ; fiso, . Double_t ; p[8][3], . Double_t ; f[8], . Double_t ; g[8][3], . Int_t & ; nnod, . Int_t & ; ntria, . Double_t ; xyz[][3], . Double_t ; grad[][3], . Int_t ; itria[][3] . ). Topological decider for ""Marching Cubes"" algorithm Find set of triangles approximating the iso-surface F(x,y,z)=Fiso inside the cube. ; Parameters. [in]fisofunction value for iso-surface ; [in]pcube vertexes ; [in]ffunction values at the vertexes ; [in]gfunction gradients at the vertexes; [out]nnodnumber of nodes (maximum 13) ; [out]ntrian",MatchSource.WIKI,doc/master/classTPainter3dAlgorithms.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPainter3dAlgorithms.html
https://root.cern/doc/master/classTPainter3dAlgorithms.html:40530,Availability,error,error,40530," along R for sector. ; Parameters. [in]valencoded value; [out]iv1,iv2,iv3,iv4,iv5,iv6visibility of the sides ; [out]irincrement along R . Definition at line 3244 of file TPainter3dAlgorithms.cxx. ◆ SideVisibilityEncode(). void TPainter3dAlgorithms::SideVisibilityEncode ; (; Int_t ; iopt, . Double_t ; phi1, . Double_t ; phi2, . Double_t & ; val . ). Encode side visibilities and order along R for sector. ; Parameters. [in]ioptoptions: 1: from BACK to FRONT 'BF', 2: from FRONT to BACK 'FB' ; [in]phi11st phi of sector ; [in]phi22nd phi of sector; [out]valencoded value . Definition at line 3276 of file TPainter3dAlgorithms.cxx. ◆ Spectrum(). void TPainter3dAlgorithms::Spectrum ; (; Int_t ; nl, . Double_t ; fmin, . Double_t ; fmax, . Int_t ; ic, . Int_t ; idc, . Int_t & ; irep . ). Set Spectrum. ; Parameters. [in]nlnumber of levels ; [in]fminMIN function value ; [in]fmaxMAX function value ; [in]icinitial color index (for 1st level) ; [in]idccolor index increment; [out]irepreply (0 O.K., -1 error) . Definition at line 3314 of file TPainter3dAlgorithms.cxx. ◆ SurfaceCartesian(). void TPainter3dAlgorithms::SurfaceCartesian ; (; Double_t ; ang, . Int_t ; nx, . Int_t ; ny, . const char * ; chopt . ). Draw surface in cartesian coordinate system. ; Parameters. [in]angangle between X ang Y (not used in this method) ; [in]nxnumber of steps along X ; [in]nynumber of steps along Y ; [in]choptspecific options. chopt = 'BF' from BACK to FRONT; chopt = 'FB' from FRONT to BACK . Definition at line 3370 of file TPainter3dAlgorithms.cxx. ◆ SurfaceCylindrical(). void TPainter3dAlgorithms::SurfaceCylindrical ; (; Int_t ; iordr, . Int_t ; na, . Int_t ; nb, . const char * ; chopt . ). Draw surface in cylindrical coordinates. ; Parameters. [in]iordrorder of variables (0 - Z,PHI; 1 - PHI,Z) ; [in]nanumber of steps along 1st variable ; [in]nbnumber of steps along 2nd variable ; [in]choptspecific options. chopt = 'BF' from BACK to FRONT; chopt = 'FB' from FRONT to BACK . Definition at line 3689 of",MatchSource.WIKI,doc/master/classTPainter3dAlgorithms.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPainter3dAlgorithms.html
https://root.cern/doc/master/classTPainter3dAlgorithms.html:42804,Availability,error,error,42804,"). void TPainter3dAlgorithms::SurfacePolar ; (; Int_t ; iordr, . Int_t ; na, . Int_t ; nb, . const char * ; chopt . ). Draw surface in polar coordinates. ; Parameters. [in]iordrorder of variables (0 - R,PHI, 1 - PHI,R) ; [in]nanumber of steps along 1st variable ; [in]nbnumber of steps along 2nd variable ; [in]choptspecific options. chopt = 'BF' from BACK to FRONT; chopt = 'FB' from FRONT to BACK . Definition at line 3563 of file TPainter3dAlgorithms.cxx. ◆ SurfaceProperty(). void TPainter3dAlgorithms::SurfaceProperty ; (; Double_t ; qqa, . Double_t ; qqd, . Double_t ; qqs, . Int_t ; nnqs, . Int_t & ; irep . ). Set surface property coefficients. ; Parameters. [in]qqadiffusion coefficient for diffused light [0.,1.] ; [in]qqddiffusion coefficient for direct light [0.,1.] ; [in]qqsdiffusion coefficient for reflected light [0.,1.] ; [in]nnqspower coefficient for reflected light (.GE.1). Lightness model formula: Y = YD*QA + > YLi*(QD*cosNi+QS*cosRi); Parameters. [out]irepreply (0 - O.K, -1 error) . Definition at line 3975 of file TPainter3dAlgorithms.cxx. ◆ SurfaceSpherical(). void TPainter3dAlgorithms::SurfaceSpherical ; (; Int_t ; ipsdr, . Int_t ; iordr, . Int_t ; na, . Int_t ; nb, . const char * ; chopt . ). Draw surface in spheric coordinates. ; Parameters. [in]ipsdrpseudo-rapidity flag ; [in]iordrorder of variables (0 - THETA,PHI; 1 - PHI,THETA) ; [in]nanumber of steps along 1st variable ; [in]nbnumber of steps along 2nd variable ; [in]choptspecific options. chopt = 'BF' from BACK to FRONT; chopt = 'FB' from FRONT to BACK . Definition at line 3811 of file TPainter3dAlgorithms.cxx. ◆ TestEdge(). void TPainter3dAlgorithms::TestEdge ; (; Double_t ; del, . Double_t ; xyz[52][3], . Int_t ; i1, . Int_t ; i2, . Int_t ; iface[3], . Double_t ; abcd[4], . Int_t & ; irep . ). protected . Test edge against face (triangle) ; Parameters. [in]delprecision ; [in]xyznodes ; [in]i11-st node of edge ; [in]i22-nd node of edge ; [in]ifacetriangular face ; [in]abcdface plane; [out]irep1: ",MatchSource.WIKI,doc/master/classTPainter3dAlgorithms.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPainter3dAlgorithms.html
https://root.cern/doc/master/classTPainter3dAlgorithms.html:47736,Availability,mask,masks,47736,"lgorithms.h. ◆ fFunLevel. Double_t TPainter3dAlgorithms::fFunLevel[NumOfColorLevels+1]. private . Definition at line 116 of file TPainter3dAlgorithms.h. ◆ fG8. Double_t TPainter3dAlgorithms::fG8[8][3]. private . Function gradients. ; Definition at line 209 of file TPainter3dAlgorithms.h. ◆ fIc1. Int_t TPainter3dAlgorithms::fIc1. private . Base colour for the 1st Iso Surface. ; Definition at line 49 of file TPainter3dAlgorithms.h. ◆ fIc2. Int_t TPainter3dAlgorithms::fIc2. private . Base colour for the 2nd Iso Surface. ; Definition at line 50 of file TPainter3dAlgorithms.h. ◆ fIc3. Int_t TPainter3dAlgorithms::fIc3. private . Base colour for the 3rd Iso Surface. ; Definition at line 51 of file TPainter3dAlgorithms.h. ◆ fIfrast. Int_t TPainter3dAlgorithms::fIfrast. private . Flag, if it not zero them the algorithm is off. ; Definition at line 180 of file TPainter3dAlgorithms.h. ◆ fJmask. Int_t TPainter3dAlgorithms::fJmask[30]. private . Indices of subsets of n-bit masks (n is from 1 to 30) ; Definition at line 182 of file TPainter3dAlgorithms.h. ◆ fLegoFunction. LegoFunc_t TPainter3dAlgorithms::fLegoFunction. private . Pointer to lego function. ; Definition at line 60 of file TPainter3dAlgorithms.h. ◆ fLevelLine. Int_t TPainter3dAlgorithms::fLevelLine[NumOfLevelLines]. private . Definition at line 121 of file TPainter3dAlgorithms.h. ◆ fLoff. Int_t TPainter3dAlgorithms::fLoff. private . Definition at line 134 of file TPainter3dAlgorithms.h. ◆ fMask. Int_t TPainter3dAlgorithms::fMask[465]. private . Set of masks (30+29+28+...+1)=465. ; Definition at line 183 of file TPainter3dAlgorithms.h. ◆ fMesh. Int_t TPainter3dAlgorithms::fMesh. private . (=1 if mesh to draw, o otherwise) ; Definition at line 44 of file TPainter3dAlgorithms.h. ◆ fNaphi. Int_t TPainter3dAlgorithms::fNaphi. private . Size of fAphi. ; Definition at line 34 of file TPainter3dAlgorithms.h. ◆ fNcolor. Int_t TPainter3dAlgorithms::fNcolor. private . Number of colours per Iso surface. ; Definition at line 48 of",MatchSource.WIKI,doc/master/classTPainter3dAlgorithms.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPainter3dAlgorithms.html
https://root.cern/doc/master/classTPainter3dAlgorithms.html:48287,Availability,mask,masks,48287,"ition at line 50 of file TPainter3dAlgorithms.h. ◆ fIc3. Int_t TPainter3dAlgorithms::fIc3. private . Base colour for the 3rd Iso Surface. ; Definition at line 51 of file TPainter3dAlgorithms.h. ◆ fIfrast. Int_t TPainter3dAlgorithms::fIfrast. private . Flag, if it not zero them the algorithm is off. ; Definition at line 180 of file TPainter3dAlgorithms.h. ◆ fJmask. Int_t TPainter3dAlgorithms::fJmask[30]. private . Indices of subsets of n-bit masks (n is from 1 to 30) ; Definition at line 182 of file TPainter3dAlgorithms.h. ◆ fLegoFunction. LegoFunc_t TPainter3dAlgorithms::fLegoFunction. private . Pointer to lego function. ; Definition at line 60 of file TPainter3dAlgorithms.h. ◆ fLevelLine. Int_t TPainter3dAlgorithms::fLevelLine[NumOfLevelLines]. private . Definition at line 121 of file TPainter3dAlgorithms.h. ◆ fLoff. Int_t TPainter3dAlgorithms::fLoff. private . Definition at line 134 of file TPainter3dAlgorithms.h. ◆ fMask. Int_t TPainter3dAlgorithms::fMask[465]. private . Set of masks (30+29+28+...+1)=465. ; Definition at line 183 of file TPainter3dAlgorithms.h. ◆ fMesh. Int_t TPainter3dAlgorithms::fMesh. private . (=1 if mesh to draw, o otherwise) ; Definition at line 44 of file TPainter3dAlgorithms.h. ◆ fNaphi. Int_t TPainter3dAlgorithms::fNaphi. private . Size of fAphi. ; Definition at line 34 of file TPainter3dAlgorithms.h. ◆ fNcolor. Int_t TPainter3dAlgorithms::fNcolor. private . Number of colours per Iso surface. ; Definition at line 48 of file TPainter3dAlgorithms.h. ◆ fNlevel. Int_t TPainter3dAlgorithms::fNlevel. private . Definition at line 115 of file TPainter3dAlgorithms.h. ◆ fNlines. Int_t TPainter3dAlgorithms::fNlines. private . Definition at line 120 of file TPainter3dAlgorithms.h. ◆ fNqs. Int_t TPainter3dAlgorithms::fNqs. private . Definition at line 141 of file TPainter3dAlgorithms.h. ◆ fNStack. Int_t TPainter3dAlgorithms::fNStack. private . Number of histograms in the stack to be painted. ; Definition at line 45 of file TPainter3dAlgorithms.h. ◆ fN",MatchSource.WIKI,doc/master/classTPainter3dAlgorithms.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPainter3dAlgorithms.html
https://root.cern/doc/master/classTPainter3dAlgorithms.html:608,Energy Efficiency,adapt,adapted,608,". ROOT: TPainter3dAlgorithms Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; TPainter3dAlgorithms Class ReferenceHistogram Library » Painting classes » Histograms and graphs painting classes. ; The Legos and Surfaces painter class. ; 3D graphics representations package.; This package was originally written by Evgueni Tcherniaev from IHEP/Protvino.; The original Fortran implementation was adapted to HIGZ/PAW by Olivier Couet and Evgueni Tcherniaev.; This class is a subset of the original system. It has been converted to a C++ class by Rene Brun. ; Definition at line 28 of file TPainter3dAlgorithms.h. Public Types; typedef void(TPainter3dAlgorithms::* DrawFaceFunc_t) (Int_t *, Double_t *, Int_t, Int_t *, Double_t *);  ; typedef void(TPainter3dAlgorithms::* LegoFunc_t) (Int_t, Int_t, Int_t &, Double_t *, Double_t *, Double_t *);  ; typedef void(TPainter3dAlgorithms::* SurfaceFunc_t) (Int_t, Int_t, Double_t *, Double_t *);  . Public Member Functions;  TPainter3dAlgorithms ();  Lego default constructor. ;  ;  TPainter3dAlgorithms (Double_t *rmin, Double_t *rmax, Int_t system=1);  Normal default constructor. ;  ;  ~TPainter3dAlgorithms () override;  destructor ;  ; void BackBox (Double_t ang);  Draw back surfaces of surrounding box. ;  ; void ColorFunction (Int_t nl, Double_t *fl, Int_t *icl, Int_t &irep);  Set correspondence between function and color levels. ;  ; void DefineGridLevels (Int_t ndivz);  Define the grid levels drawn in the background of surface and lego plots. ;  ; void DrawFaceGouraudShaded (Int_t *icodes, Double_t xyz[][3], Int_t np, Int_t *iface, Double_t *t);  Draw the faces for the Gouraud Shaded Iso surfaces. ;  ; void DrawFaceMode1 (Int_t *icodes, Double_t *xyz, Int_t np, Int_t *iface, Double_t *t);  Draw face - 1st variant (2 colors: 1st",MatchSource.WIKI,doc/master/classTPainter3dAlgorithms.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPainter3dAlgorithms.html
https://root.cern/doc/master/classTPainter3dAlgorithms.html:18216,Integrability,depend,depending,18216,"3dAlgorithms::* TPainter3dAlgorithms::DrawFaceFunc_t) (Int_t *, Double_t *, Int_t, Int_t *, Double_t *). Definition at line 54 of file TPainter3dAlgorithms.h. ◆ LegoFunc_t. typedef void(TPainter3dAlgorithms::* TPainter3dAlgorithms::LegoFunc_t) (Int_t, Int_t, Int_t &, Double_t *, Double_t *, Double_t *). Definition at line 55 of file TPainter3dAlgorithms.h. ◆ SurfaceFunc_t. typedef void(TPainter3dAlgorithms::* TPainter3dAlgorithms::SurfaceFunc_t) (Int_t, Int_t, Double_t *, Double_t *). Definition at line 56 of file TPainter3dAlgorithms.h. Constructor & Destructor Documentation. ◆ TPainter3dAlgorithms() [1/2]. TPainter3dAlgorithms::TPainter3dAlgorithms ; (; ). Lego default constructor. ; Definition at line 61 of file TPainter3dAlgorithms.cxx. ◆ TPainter3dAlgorithms() [2/2]. TPainter3dAlgorithms::TPainter3dAlgorithms ; (; Double_t * ; rmin, . Double_t * ; rmax, . Int_t ; system = 1 . ). Normal default constructor. ; rmin[3], rmax[3] are the limits of the lego object depending on the selected coordinate system ; Definition at line 130 of file TPainter3dAlgorithms.cxx. ◆ ~TPainter3dAlgorithms(). TPainter3dAlgorithms::~TPainter3dAlgorithms ; (; ). override . destructor ; Definition at line 209 of file TPainter3dAlgorithms.cxx. Member Function Documentation. ◆ BackBox(). void TPainter3dAlgorithms::BackBox ; (; Double_t ; ang). Draw back surfaces of surrounding box. ; Parameters. [in]angangle between X and Y axis . Definition at line 218 of file TPainter3dAlgorithms.cxx. ◆ ClearRaster(). void TPainter3dAlgorithms::ClearRaster ; (; ). Clear screen. ; Definition at line 307 of file TPainter3dAlgorithms.cxx. ◆ ColorFunction(). void TPainter3dAlgorithms::ColorFunction ; (; Int_t ; nl, . Double_t * ; fl, . Int_t * ; icl, . Int_t & ; irep . ). Set correspondence between function and color levels. ; Parameters. [in]nlnumber of levels ; [in]flfunction levels ; [in]iclcolors for levels; [out]irepreturn code (0 OK, -1 error). . Definition at line 323 of file TPainter3dAlgorithms.cxx.",MatchSource.WIKI,doc/master/classTPainter3dAlgorithms.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPainter3dAlgorithms.html
https://root.cern/doc/master/classTPainter3dAlgorithms.html:608,Modifiability,adapt,adapted,608,". ROOT: TPainter3dAlgorithms Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; TPainter3dAlgorithms Class ReferenceHistogram Library » Painting classes » Histograms and graphs painting classes. ; The Legos and Surfaces painter class. ; 3D graphics representations package.; This package was originally written by Evgueni Tcherniaev from IHEP/Protvino.; The original Fortran implementation was adapted to HIGZ/PAW by Olivier Couet and Evgueni Tcherniaev.; This class is a subset of the original system. It has been converted to a C++ class by Rene Brun. ; Definition at line 28 of file TPainter3dAlgorithms.h. Public Types; typedef void(TPainter3dAlgorithms::* DrawFaceFunc_t) (Int_t *, Double_t *, Int_t, Int_t *, Double_t *);  ; typedef void(TPainter3dAlgorithms::* LegoFunc_t) (Int_t, Int_t, Int_t &, Double_t *, Double_t *, Double_t *);  ; typedef void(TPainter3dAlgorithms::* SurfaceFunc_t) (Int_t, Int_t, Double_t *, Double_t *);  . Public Member Functions;  TPainter3dAlgorithms ();  Lego default constructor. ;  ;  TPainter3dAlgorithms (Double_t *rmin, Double_t *rmax, Int_t system=1);  Normal default constructor. ;  ;  ~TPainter3dAlgorithms () override;  destructor ;  ; void BackBox (Double_t ang);  Draw back surfaces of surrounding box. ;  ; void ColorFunction (Int_t nl, Double_t *fl, Int_t *icl, Int_t &irep);  Set correspondence between function and color levels. ;  ; void DefineGridLevels (Int_t ndivz);  Define the grid levels drawn in the background of surface and lego plots. ;  ; void DrawFaceGouraudShaded (Int_t *icodes, Double_t xyz[][3], Int_t np, Int_t *iface, Double_t *t);  Draw the faces for the Gouraud Shaded Iso surfaces. ;  ; void DrawFaceMode1 (Int_t *icodes, Double_t *xyz, Int_t np, Int_t *iface, Double_t *t);  Draw face - 1st variant (2 colors: 1st",MatchSource.WIKI,doc/master/classTPainter3dAlgorithms.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPainter3dAlgorithms.html
https://root.cern/doc/master/classTPainter3dAlgorithms.html:6870,Modifiability,inherit,inherited,6870,"Int_t &iv5, Int_t &iv6, Int_t &ir);  Decode side visibilities and order along R for sector. ;  ; void SideVisibilityEncode (Int_t iopt, Double_t phi1, Double_t phi2, Double_t &val);  Encode side visibilities and order along R for sector. ;  ; void Spectrum (Int_t nl, Double_t fmin, Double_t fmax, Int_t ic, Int_t idc, Int_t &irep);  Set Spectrum. ;  ; void SurfaceCartesian (Double_t ang, Int_t nx, Int_t ny, const char *chopt);  Draw surface in cartesian coordinate system. ;  ; void SurfaceCylindrical (Int_t iordr, Int_t na, Int_t nb, const char *chopt);  Draw surface in cylindrical coordinates. ;  ; void SurfaceFunction (Int_t ia, Int_t ib, Double_t *f, Double_t *t);  Service function for Surfaces. ;  ; void SurfacePolar (Int_t iordr, Int_t na, Int_t nb, const char *chopt);  Draw surface in polar coordinates. ;  ; void SurfaceSpherical (Int_t ipsdr, Int_t iordr, Int_t na, Int_t nb, const char *chopt);  Draw surface in spheric coordinates. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual TClass * IsA () const;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ sta",MatchSource.WIKI,doc/master/classTPainter3dAlgorithms.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPainter3dAlgorithms.html
https://root.cern/doc/master/classTPainter3dAlgorithms.html:8447,Modifiability,inherit,inherited,8447,"eStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual TClass * IsA () const;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetLineAttributes ();  Invoke the DialogCanvas Line attributes. ;  ; virtual void SetLineColor (Color_t lcolor);  Set the line color. ;  ; virtual void SetLineColorAlpha (Color_t lcolor, Float_t lalpha);  Set a transparent line color. ;  ; virtual void SetLineStyle (Style_t lstyle);  Set the line style. ;  ; virtual void SetLineWidth (Width_t lwidth);  Set the line width. ;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttFill;  TAttFill ();  AttFill default constructor. ;  ;  TAttFill (Color_t fcolor, Style_t fstyle);  AttFill normal constructor. ;  ; virtual ~TAttFill ();  AttFill destructor. ;  ; void Copy (TAttFill &attfill) const;  Copy this fill attributes to a new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual TClass * IsA () const;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFil",MatchSource.WIKI,doc/master/classTPainter3dAlgorithms.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPainter3dAlgorithms.html
https://root.cern/doc/master/classTPainter3dAlgorithms.html:16209,Modifiability,inherit,inherited,16209,"gon. ;  ; void MarchingCubeSurfacePenetration (Double_t a00, Double_t a10, Double_t a11, Double_t a01, Double_t b00, Double_t b10, Double_t b11, Double_t b01, Int_t &irep);  Check for surface penetration (""bottle neck"") ;  ; void MarchingCubeFindNodes (Int_t nnod, Int_t *ie, Double_t xyz[52][3], Double_t grad[52][3]);  Find nodes and normales. ;  . Z-depth; Sorting algorithm for set of triangles . void ZDepth (Double_t xyz[52][3], Int_t &nface, Int_t iface[48][3], Double_t dface[48][6], Double_t abcd[48][4], Int_t *iorder);  Z-depth algorithm for set of triangles. ;  ; void TestEdge (Double_t del, Double_t xyz[52][3], Int_t i1, Int_t i2, Int_t iface[3], Double_t abcd[4], Int_t &irep);  Test edge against face (triangle) ;  . Additional Inherited Members;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/hist/histpainter/src/TPainter3dAlgorithms.h>. Inheritance diagram for TPainter3dAlgorithms:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ DrawFaceFunc_t. typedef void(TPainter3dAlgorithms::* TPainter3dAlgorithms::DrawFaceFunc_t) (Int_t *, Double_t *, Int_t, Int_t *, Double_t *). Definition at line 54 of file TPainter3dAlgorithms.h. ◆ LegoFunc_t. ty",MatchSource.WIKI,doc/master/classTPainter3dAlgorithms.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPainter3dAlgorithms.html
https://root.cern/doc/master/classTPainter3dAlgorithms.html:16421,Modifiability,inherit,inherited,16421,"gon. ;  ; void MarchingCubeSurfacePenetration (Double_t a00, Double_t a10, Double_t a11, Double_t a01, Double_t b00, Double_t b10, Double_t b11, Double_t b01, Int_t &irep);  Check for surface penetration (""bottle neck"") ;  ; void MarchingCubeFindNodes (Int_t nnod, Int_t *ie, Double_t xyz[52][3], Double_t grad[52][3]);  Find nodes and normales. ;  . Z-depth; Sorting algorithm for set of triangles . void ZDepth (Double_t xyz[52][3], Int_t &nface, Int_t iface[48][3], Double_t dface[48][6], Double_t abcd[48][4], Int_t *iorder);  Z-depth algorithm for set of triangles. ;  ; void TestEdge (Double_t del, Double_t xyz[52][3], Int_t i1, Int_t i2, Int_t iface[3], Double_t abcd[4], Int_t &irep);  Test edge against face (triangle) ;  . Additional Inherited Members;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/hist/histpainter/src/TPainter3dAlgorithms.h>. Inheritance diagram for TPainter3dAlgorithms:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ DrawFaceFunc_t. typedef void(TPainter3dAlgorithms::* TPainter3dAlgorithms::DrawFaceFunc_t) (Int_t *, Double_t *, Int_t, Int_t *, Double_t *). Definition at line 54 of file TPainter3dAlgorithms.h. ◆ LegoFunc_t. ty",MatchSource.WIKI,doc/master/classTPainter3dAlgorithms.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPainter3dAlgorithms.html
https://root.cern/doc/master/classTPainter3dAlgorithms.html:16623,Modifiability,inherit,inherited,16623,"gon. ;  ; void MarchingCubeSurfacePenetration (Double_t a00, Double_t a10, Double_t a11, Double_t a01, Double_t b00, Double_t b10, Double_t b11, Double_t b01, Int_t &irep);  Check for surface penetration (""bottle neck"") ;  ; void MarchingCubeFindNodes (Int_t nnod, Int_t *ie, Double_t xyz[52][3], Double_t grad[52][3]);  Find nodes and normales. ;  . Z-depth; Sorting algorithm for set of triangles . void ZDepth (Double_t xyz[52][3], Int_t &nface, Int_t iface[48][3], Double_t dface[48][6], Double_t abcd[48][4], Int_t *iorder);  Z-depth algorithm for set of triangles. ;  ; void TestEdge (Double_t del, Double_t xyz[52][3], Int_t i1, Int_t i2, Int_t iface[3], Double_t abcd[4], Int_t &irep);  Test edge against face (triangle) ;  . Additional Inherited Members;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/hist/histpainter/src/TPainter3dAlgorithms.h>. Inheritance diagram for TPainter3dAlgorithms:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ DrawFaceFunc_t. typedef void(TPainter3dAlgorithms::* TPainter3dAlgorithms::DrawFaceFunc_t) (Int_t *, Double_t *, Int_t, Int_t *, Double_t *). Definition at line 54 of file TPainter3dAlgorithms.h. ◆ LegoFunc_t. ty",MatchSource.WIKI,doc/master/classTPainter3dAlgorithms.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPainter3dAlgorithms.html
https://root.cern/doc/master/classTPainter3dAlgorithms.html:16784,Modifiability,inherit,inherited,16784," triangles . void ZDepth (Double_t xyz[52][3], Int_t &nface, Int_t iface[48][3], Double_t dface[48][6], Double_t abcd[48][4], Int_t *iorder);  Z-depth algorithm for set of triangles. ;  ; void TestEdge (Double_t del, Double_t xyz[52][3], Int_t i1, Int_t i2, Int_t iface[3], Double_t abcd[4], Int_t &irep);  Test edge against face (triangle) ;  . Additional Inherited Members;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/hist/histpainter/src/TPainter3dAlgorithms.h>. Inheritance diagram for TPainter3dAlgorithms:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ DrawFaceFunc_t. typedef void(TPainter3dAlgorithms::* TPainter3dAlgorithms::DrawFaceFunc_t) (Int_t *, Double_t *, Int_t, Int_t *, Double_t *). Definition at line 54 of file TPainter3dAlgorithms.h. ◆ LegoFunc_t. typedef void(TPainter3dAlgorithms::* TPainter3dAlgorithms::LegoFunc_t) (Int_t, Int_t, Int_t &, Double_t *, Double_t *, Double_t *). Definition at line 55 of file TPainter3dAlgorithms.h. ◆ SurfaceFunc_t. typedef void(TPainter3dAlgorithms::* TPainter3dAlgorithms::SurfaceFunc_t) (Int_t, Int_t, Double_t *, Double_t *). Definition at line 56 of file TPainter3dAlgorithms.h. Constructor & Destr",MatchSource.WIKI,doc/master/classTPainter3dAlgorithms.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPainter3dAlgorithms.html
https://root.cern/doc/master/classTPainter3dAlgorithms.html:29880,Modifiability,variab,variables,29880,"lices along Z ; [in]xslices along X ; [in]yslices along Y ; [in]zslices along Z ; [in]choptspecific options. chopt‘ = 'BF’ from BACK to FRONT; chopt‘ = 'FB’ from FRONT to BACK . Definition at line 5442 of file TPainter3dAlgorithms.cxx. ◆ LegoCartesian(). void TPainter3dAlgorithms::LegoCartesian ; (; Double_t ; ang, . Int_t ; nx, . Int_t ; ny, . const char * ; chopt . ). Draw stack of lego-plots in cartesian coordinates. ; Parameters. [in]angangle between X ang Y (not used in this method) ; [in]nxnumber of cells along X ; [in]nynumber of cells along Y ; [in]choptspecific options. chopt = 'BF' from BACK to FRONT; chopt = 'FB' from FRONT to BACK . Definition at line 2205 of file TPainter3dAlgorithms.cxx. ◆ LegoCylindrical(). void TPainter3dAlgorithms::LegoCylindrical ; (; Int_t ; iordr, . Int_t ; na, . Int_t ; nb, . const char * ; chopt . ). Draw stack of lego-plots in cylindrical coordinates. ; Parameters. [in]iordrorder of variables (0 - Z,PHI; 1 - PHI,Z) ; [in]nanumber of steps along 1st variable ; [in]nbnumber of steps along 2nd variable ; [in]choptspecific options. chopt = 'BF' from BACK to FRONT; chopt = 'FB' from FRONT to BACK . Definition at line 2551 of file TPainter3dAlgorithms.cxx. ◆ LegoFunction(). void TPainter3dAlgorithms::LegoFunction ; (; Int_t ; ia, . Int_t ; ib, . Int_t & ; nv, . Double_t * ; ab, . Double_t * ; vv, . Double_t * ; t . ). Service function for Legos. ; Definition at line 2032 of file TPainter3dAlgorithms.cxx. ◆ LegoPolar(). void TPainter3dAlgorithms::LegoPolar ; (; Int_t ; iordr, . Int_t ; na, . Int_t ; nb, . const char * ; chopt . ). Draw stack of lego-plots in polar coordinates. ; Parameters. [in]iordrorder of variables (0 - R,PHI; 1 - PHI,R) ; [in]nanumber of steps along 1st variable ; [in]nbnumber of steps along 2nd variable ; [in]choptspecific options. chopt = 'BF' from BACK to FRONT; chopt = 'FB' from FRONT to BACK . Definition at line 2350 of file TPainter3dAlgorithms.cxx. ◆ LegoSpherical(). void TPainter3dAlgorithms::LegoSpherica",MatchSource.WIKI,doc/master/classTPainter3dAlgorithms.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPainter3dAlgorithms.html
https://root.cern/doc/master/classTPainter3dAlgorithms.html:29947,Modifiability,variab,variable,29947,"lices along Z ; [in]xslices along X ; [in]yslices along Y ; [in]zslices along Z ; [in]choptspecific options. chopt‘ = 'BF’ from BACK to FRONT; chopt‘ = 'FB’ from FRONT to BACK . Definition at line 5442 of file TPainter3dAlgorithms.cxx. ◆ LegoCartesian(). void TPainter3dAlgorithms::LegoCartesian ; (; Double_t ; ang, . Int_t ; nx, . Int_t ; ny, . const char * ; chopt . ). Draw stack of lego-plots in cartesian coordinates. ; Parameters. [in]angangle between X ang Y (not used in this method) ; [in]nxnumber of cells along X ; [in]nynumber of cells along Y ; [in]choptspecific options. chopt = 'BF' from BACK to FRONT; chopt = 'FB' from FRONT to BACK . Definition at line 2205 of file TPainter3dAlgorithms.cxx. ◆ LegoCylindrical(). void TPainter3dAlgorithms::LegoCylindrical ; (; Int_t ; iordr, . Int_t ; na, . Int_t ; nb, . const char * ; chopt . ). Draw stack of lego-plots in cylindrical coordinates. ; Parameters. [in]iordrorder of variables (0 - Z,PHI; 1 - PHI,Z) ; [in]nanumber of steps along 1st variable ; [in]nbnumber of steps along 2nd variable ; [in]choptspecific options. chopt = 'BF' from BACK to FRONT; chopt = 'FB' from FRONT to BACK . Definition at line 2551 of file TPainter3dAlgorithms.cxx. ◆ LegoFunction(). void TPainter3dAlgorithms::LegoFunction ; (; Int_t ; ia, . Int_t ; ib, . Int_t & ; nv, . Double_t * ; ab, . Double_t * ; vv, . Double_t * ; t . ). Service function for Legos. ; Definition at line 2032 of file TPainter3dAlgorithms.cxx. ◆ LegoPolar(). void TPainter3dAlgorithms::LegoPolar ; (; Int_t ; iordr, . Int_t ; na, . Int_t ; nb, . const char * ; chopt . ). Draw stack of lego-plots in polar coordinates. ; Parameters. [in]iordrorder of variables (0 - R,PHI; 1 - PHI,R) ; [in]nanumber of steps along 1st variable ; [in]nbnumber of steps along 2nd variable ; [in]choptspecific options. chopt = 'BF' from BACK to FRONT; chopt = 'FB' from FRONT to BACK . Definition at line 2350 of file TPainter3dAlgorithms.cxx. ◆ LegoSpherical(). void TPainter3dAlgorithms::LegoSpherica",MatchSource.WIKI,doc/master/classTPainter3dAlgorithms.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPainter3dAlgorithms.html
https://root.cern/doc/master/classTPainter3dAlgorithms.html:29990,Modifiability,variab,variable,29990,"lices along Z ; [in]xslices along X ; [in]yslices along Y ; [in]zslices along Z ; [in]choptspecific options. chopt‘ = 'BF’ from BACK to FRONT; chopt‘ = 'FB’ from FRONT to BACK . Definition at line 5442 of file TPainter3dAlgorithms.cxx. ◆ LegoCartesian(). void TPainter3dAlgorithms::LegoCartesian ; (; Double_t ; ang, . Int_t ; nx, . Int_t ; ny, . const char * ; chopt . ). Draw stack of lego-plots in cartesian coordinates. ; Parameters. [in]angangle between X ang Y (not used in this method) ; [in]nxnumber of cells along X ; [in]nynumber of cells along Y ; [in]choptspecific options. chopt = 'BF' from BACK to FRONT; chopt = 'FB' from FRONT to BACK . Definition at line 2205 of file TPainter3dAlgorithms.cxx. ◆ LegoCylindrical(). void TPainter3dAlgorithms::LegoCylindrical ; (; Int_t ; iordr, . Int_t ; na, . Int_t ; nb, . const char * ; chopt . ). Draw stack of lego-plots in cylindrical coordinates. ; Parameters. [in]iordrorder of variables (0 - Z,PHI; 1 - PHI,Z) ; [in]nanumber of steps along 1st variable ; [in]nbnumber of steps along 2nd variable ; [in]choptspecific options. chopt = 'BF' from BACK to FRONT; chopt = 'FB' from FRONT to BACK . Definition at line 2551 of file TPainter3dAlgorithms.cxx. ◆ LegoFunction(). void TPainter3dAlgorithms::LegoFunction ; (; Int_t ; ia, . Int_t ; ib, . Int_t & ; nv, . Double_t * ; ab, . Double_t * ; vv, . Double_t * ; t . ). Service function for Legos. ; Definition at line 2032 of file TPainter3dAlgorithms.cxx. ◆ LegoPolar(). void TPainter3dAlgorithms::LegoPolar ; (; Int_t ; iordr, . Int_t ; na, . Int_t ; nb, . const char * ; chopt . ). Draw stack of lego-plots in polar coordinates. ; Parameters. [in]iordrorder of variables (0 - R,PHI; 1 - PHI,R) ; [in]nanumber of steps along 1st variable ; [in]nbnumber of steps along 2nd variable ; [in]choptspecific options. chopt = 'BF' from BACK to FRONT; chopt = 'FB' from FRONT to BACK . Definition at line 2350 of file TPainter3dAlgorithms.cxx. ◆ LegoSpherical(). void TPainter3dAlgorithms::LegoSpherica",MatchSource.WIKI,doc/master/classTPainter3dAlgorithms.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPainter3dAlgorithms.html
https://root.cern/doc/master/classTPainter3dAlgorithms.html:30613,Modifiability,variab,variables,30613,"oid TPainter3dAlgorithms::LegoCylindrical ; (; Int_t ; iordr, . Int_t ; na, . Int_t ; nb, . const char * ; chopt . ). Draw stack of lego-plots in cylindrical coordinates. ; Parameters. [in]iordrorder of variables (0 - Z,PHI; 1 - PHI,Z) ; [in]nanumber of steps along 1st variable ; [in]nbnumber of steps along 2nd variable ; [in]choptspecific options. chopt = 'BF' from BACK to FRONT; chopt = 'FB' from FRONT to BACK . Definition at line 2551 of file TPainter3dAlgorithms.cxx. ◆ LegoFunction(). void TPainter3dAlgorithms::LegoFunction ; (; Int_t ; ia, . Int_t ; ib, . Int_t & ; nv, . Double_t * ; ab, . Double_t * ; vv, . Double_t * ; t . ). Service function for Legos. ; Definition at line 2032 of file TPainter3dAlgorithms.cxx. ◆ LegoPolar(). void TPainter3dAlgorithms::LegoPolar ; (; Int_t ; iordr, . Int_t ; na, . Int_t ; nb, . const char * ; chopt . ). Draw stack of lego-plots in polar coordinates. ; Parameters. [in]iordrorder of variables (0 - R,PHI; 1 - PHI,R) ; [in]nanumber of steps along 1st variable ; [in]nbnumber of steps along 2nd variable ; [in]choptspecific options. chopt = 'BF' from BACK to FRONT; chopt = 'FB' from FRONT to BACK . Definition at line 2350 of file TPainter3dAlgorithms.cxx. ◆ LegoSpherical(). void TPainter3dAlgorithms::LegoSpherical ; (; Int_t ; ipsdr, . Int_t ; iordr, . Int_t ; na, . Int_t ; nb, . const char * ; chopt . ). Draw stack of lego-plots spheric coordinates. ; Parameters. [in]ipsdrpseudo-rapidity flag ; [in]iordrorder of variables (0 - THETA,PHI; 1 - PHI,THETA) ; [in]nanumber of steps along 1st variable ; [in]nbnumber of steps along 2nd variable ; [in]choptspecific options. chopt = 'BF' from BACK to FRONT; chopt = 'FB' from FRONT to BACK . Definition at line 2758 of file TPainter3dAlgorithms.cxx. ◆ LightSource(). void TPainter3dAlgorithms::LightSource ; (; Int_t ; nl, . Double_t ; yl, . Double_t ; xscr, . Double_t ; yscr, . Double_t ; zscr, . Int_t & ; irep . ). Set light source. ; Parameters. [in]nlsource number: 1 off all light sources, ",MatchSource.WIKI,doc/master/classTPainter3dAlgorithms.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPainter3dAlgorithms.html
https://root.cern/doc/master/classTPainter3dAlgorithms.html:30680,Modifiability,variab,variable,30680,"oid TPainter3dAlgorithms::LegoCylindrical ; (; Int_t ; iordr, . Int_t ; na, . Int_t ; nb, . const char * ; chopt . ). Draw stack of lego-plots in cylindrical coordinates. ; Parameters. [in]iordrorder of variables (0 - Z,PHI; 1 - PHI,Z) ; [in]nanumber of steps along 1st variable ; [in]nbnumber of steps along 2nd variable ; [in]choptspecific options. chopt = 'BF' from BACK to FRONT; chopt = 'FB' from FRONT to BACK . Definition at line 2551 of file TPainter3dAlgorithms.cxx. ◆ LegoFunction(). void TPainter3dAlgorithms::LegoFunction ; (; Int_t ; ia, . Int_t ; ib, . Int_t & ; nv, . Double_t * ; ab, . Double_t * ; vv, . Double_t * ; t . ). Service function for Legos. ; Definition at line 2032 of file TPainter3dAlgorithms.cxx. ◆ LegoPolar(). void TPainter3dAlgorithms::LegoPolar ; (; Int_t ; iordr, . Int_t ; na, . Int_t ; nb, . const char * ; chopt . ). Draw stack of lego-plots in polar coordinates. ; Parameters. [in]iordrorder of variables (0 - R,PHI; 1 - PHI,R) ; [in]nanumber of steps along 1st variable ; [in]nbnumber of steps along 2nd variable ; [in]choptspecific options. chopt = 'BF' from BACK to FRONT; chopt = 'FB' from FRONT to BACK . Definition at line 2350 of file TPainter3dAlgorithms.cxx. ◆ LegoSpherical(). void TPainter3dAlgorithms::LegoSpherical ; (; Int_t ; ipsdr, . Int_t ; iordr, . Int_t ; na, . Int_t ; nb, . const char * ; chopt . ). Draw stack of lego-plots spheric coordinates. ; Parameters. [in]ipsdrpseudo-rapidity flag ; [in]iordrorder of variables (0 - THETA,PHI; 1 - PHI,THETA) ; [in]nanumber of steps along 1st variable ; [in]nbnumber of steps along 2nd variable ; [in]choptspecific options. chopt = 'BF' from BACK to FRONT; chopt = 'FB' from FRONT to BACK . Definition at line 2758 of file TPainter3dAlgorithms.cxx. ◆ LightSource(). void TPainter3dAlgorithms::LightSource ; (; Int_t ; nl, . Double_t ; yl, . Double_t ; xscr, . Double_t ; yscr, . Double_t ; zscr, . Int_t & ; irep . ). Set light source. ; Parameters. [in]nlsource number: 1 off all light sources, ",MatchSource.WIKI,doc/master/classTPainter3dAlgorithms.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPainter3dAlgorithms.html
https://root.cern/doc/master/classTPainter3dAlgorithms.html:30723,Modifiability,variab,variable,30723,"oid TPainter3dAlgorithms::LegoCylindrical ; (; Int_t ; iordr, . Int_t ; na, . Int_t ; nb, . const char * ; chopt . ). Draw stack of lego-plots in cylindrical coordinates. ; Parameters. [in]iordrorder of variables (0 - Z,PHI; 1 - PHI,Z) ; [in]nanumber of steps along 1st variable ; [in]nbnumber of steps along 2nd variable ; [in]choptspecific options. chopt = 'BF' from BACK to FRONT; chopt = 'FB' from FRONT to BACK . Definition at line 2551 of file TPainter3dAlgorithms.cxx. ◆ LegoFunction(). void TPainter3dAlgorithms::LegoFunction ; (; Int_t ; ia, . Int_t ; ib, . Int_t & ; nv, . Double_t * ; ab, . Double_t * ; vv, . Double_t * ; t . ). Service function for Legos. ; Definition at line 2032 of file TPainter3dAlgorithms.cxx. ◆ LegoPolar(). void TPainter3dAlgorithms::LegoPolar ; (; Int_t ; iordr, . Int_t ; na, . Int_t ; nb, . const char * ; chopt . ). Draw stack of lego-plots in polar coordinates. ; Parameters. [in]iordrorder of variables (0 - R,PHI; 1 - PHI,R) ; [in]nanumber of steps along 1st variable ; [in]nbnumber of steps along 2nd variable ; [in]choptspecific options. chopt = 'BF' from BACK to FRONT; chopt = 'FB' from FRONT to BACK . Definition at line 2350 of file TPainter3dAlgorithms.cxx. ◆ LegoSpherical(). void TPainter3dAlgorithms::LegoSpherical ; (; Int_t ; ipsdr, . Int_t ; iordr, . Int_t ; na, . Int_t ; nb, . const char * ; chopt . ). Draw stack of lego-plots spheric coordinates. ; Parameters. [in]ipsdrpseudo-rapidity flag ; [in]iordrorder of variables (0 - THETA,PHI; 1 - PHI,THETA) ; [in]nanumber of steps along 1st variable ; [in]nbnumber of steps along 2nd variable ; [in]choptspecific options. chopt = 'BF' from BACK to FRONT; chopt = 'FB' from FRONT to BACK . Definition at line 2758 of file TPainter3dAlgorithms.cxx. ◆ LightSource(). void TPainter3dAlgorithms::LightSource ; (; Int_t ; nl, . Double_t ; yl, . Double_t ; xscr, . Double_t ; yscr, . Double_t ; zscr, . Int_t & ; irep . ). Set light source. ; Parameters. [in]nlsource number: 1 off all light sources, ",MatchSource.WIKI,doc/master/classTPainter3dAlgorithms.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPainter3dAlgorithms.html
https://root.cern/doc/master/classTPainter3dAlgorithms.html:31149,Modifiability,variab,variables,31149,"oFunction ; (; Int_t ; ia, . Int_t ; ib, . Int_t & ; nv, . Double_t * ; ab, . Double_t * ; vv, . Double_t * ; t . ). Service function for Legos. ; Definition at line 2032 of file TPainter3dAlgorithms.cxx. ◆ LegoPolar(). void TPainter3dAlgorithms::LegoPolar ; (; Int_t ; iordr, . Int_t ; na, . Int_t ; nb, . const char * ; chopt . ). Draw stack of lego-plots in polar coordinates. ; Parameters. [in]iordrorder of variables (0 - R,PHI; 1 - PHI,R) ; [in]nanumber of steps along 1st variable ; [in]nbnumber of steps along 2nd variable ; [in]choptspecific options. chopt = 'BF' from BACK to FRONT; chopt = 'FB' from FRONT to BACK . Definition at line 2350 of file TPainter3dAlgorithms.cxx. ◆ LegoSpherical(). void TPainter3dAlgorithms::LegoSpherical ; (; Int_t ; ipsdr, . Int_t ; iordr, . Int_t ; na, . Int_t ; nb, . const char * ; chopt . ). Draw stack of lego-plots spheric coordinates. ; Parameters. [in]ipsdrpseudo-rapidity flag ; [in]iordrorder of variables (0 - THETA,PHI; 1 - PHI,THETA) ; [in]nanumber of steps along 1st variable ; [in]nbnumber of steps along 2nd variable ; [in]choptspecific options. chopt = 'BF' from BACK to FRONT; chopt = 'FB' from FRONT to BACK . Definition at line 2758 of file TPainter3dAlgorithms.cxx. ◆ LightSource(). void TPainter3dAlgorithms::LightSource ; (; Int_t ; nl, . Double_t ; yl, . Double_t ; xscr, . Double_t ; yscr, . Double_t ; zscr, . Int_t & ; irep . ). Set light source. ; Parameters. [in]nlsource number: 1 off all light sources, 0 set diffused light ; [in]ylintensity of the light source ; [in]xscr,yscr,zscrdirection of the light (in respect of the screen); [out]irepreply (0 - O.K, -1 error) . Definition at line 3024 of file TPainter3dAlgorithms.cxx. ◆ Luminosity(). void TPainter3dAlgorithms::Luminosity ; (; TView * ; view, . Double_t * ; anorm, . Double_t & ; flum . ). private . Find surface luminosity at given point. ; Parameters. [in]viewpointer on TView object ; [in]anormsurface normal at given point; [out]flumluminosity . Definition at lin",MatchSource.WIKI,doc/master/classTPainter3dAlgorithms.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPainter3dAlgorithms.html
https://root.cern/doc/master/classTPainter3dAlgorithms.html:31224,Modifiability,variab,variable,31224,"oFunction ; (; Int_t ; ia, . Int_t ; ib, . Int_t & ; nv, . Double_t * ; ab, . Double_t * ; vv, . Double_t * ; t . ). Service function for Legos. ; Definition at line 2032 of file TPainter3dAlgorithms.cxx. ◆ LegoPolar(). void TPainter3dAlgorithms::LegoPolar ; (; Int_t ; iordr, . Int_t ; na, . Int_t ; nb, . const char * ; chopt . ). Draw stack of lego-plots in polar coordinates. ; Parameters. [in]iordrorder of variables (0 - R,PHI; 1 - PHI,R) ; [in]nanumber of steps along 1st variable ; [in]nbnumber of steps along 2nd variable ; [in]choptspecific options. chopt = 'BF' from BACK to FRONT; chopt = 'FB' from FRONT to BACK . Definition at line 2350 of file TPainter3dAlgorithms.cxx. ◆ LegoSpherical(). void TPainter3dAlgorithms::LegoSpherical ; (; Int_t ; ipsdr, . Int_t ; iordr, . Int_t ; na, . Int_t ; nb, . const char * ; chopt . ). Draw stack of lego-plots spheric coordinates. ; Parameters. [in]ipsdrpseudo-rapidity flag ; [in]iordrorder of variables (0 - THETA,PHI; 1 - PHI,THETA) ; [in]nanumber of steps along 1st variable ; [in]nbnumber of steps along 2nd variable ; [in]choptspecific options. chopt = 'BF' from BACK to FRONT; chopt = 'FB' from FRONT to BACK . Definition at line 2758 of file TPainter3dAlgorithms.cxx. ◆ LightSource(). void TPainter3dAlgorithms::LightSource ; (; Int_t ; nl, . Double_t ; yl, . Double_t ; xscr, . Double_t ; yscr, . Double_t ; zscr, . Int_t & ; irep . ). Set light source. ; Parameters. [in]nlsource number: 1 off all light sources, 0 set diffused light ; [in]ylintensity of the light source ; [in]xscr,yscr,zscrdirection of the light (in respect of the screen); [out]irepreply (0 - O.K, -1 error) . Definition at line 3024 of file TPainter3dAlgorithms.cxx. ◆ Luminosity(). void TPainter3dAlgorithms::Luminosity ; (; TView * ; view, . Double_t * ; anorm, . Double_t & ; flum . ). private . Find surface luminosity at given point. ; Parameters. [in]viewpointer on TView object ; [in]anormsurface normal at given point; [out]flumluminosity . Definition at lin",MatchSource.WIKI,doc/master/classTPainter3dAlgorithms.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPainter3dAlgorithms.html
https://root.cern/doc/master/classTPainter3dAlgorithms.html:31267,Modifiability,variab,variable,31267,"oFunction ; (; Int_t ; ia, . Int_t ; ib, . Int_t & ; nv, . Double_t * ; ab, . Double_t * ; vv, . Double_t * ; t . ). Service function for Legos. ; Definition at line 2032 of file TPainter3dAlgorithms.cxx. ◆ LegoPolar(). void TPainter3dAlgorithms::LegoPolar ; (; Int_t ; iordr, . Int_t ; na, . Int_t ; nb, . const char * ; chopt . ). Draw stack of lego-plots in polar coordinates. ; Parameters. [in]iordrorder of variables (0 - R,PHI; 1 - PHI,R) ; [in]nanumber of steps along 1st variable ; [in]nbnumber of steps along 2nd variable ; [in]choptspecific options. chopt = 'BF' from BACK to FRONT; chopt = 'FB' from FRONT to BACK . Definition at line 2350 of file TPainter3dAlgorithms.cxx. ◆ LegoSpherical(). void TPainter3dAlgorithms::LegoSpherical ; (; Int_t ; ipsdr, . Int_t ; iordr, . Int_t ; na, . Int_t ; nb, . const char * ; chopt . ). Draw stack of lego-plots spheric coordinates. ; Parameters. [in]ipsdrpseudo-rapidity flag ; [in]iordrorder of variables (0 - THETA,PHI; 1 - PHI,THETA) ; [in]nanumber of steps along 1st variable ; [in]nbnumber of steps along 2nd variable ; [in]choptspecific options. chopt = 'BF' from BACK to FRONT; chopt = 'FB' from FRONT to BACK . Definition at line 2758 of file TPainter3dAlgorithms.cxx. ◆ LightSource(). void TPainter3dAlgorithms::LightSource ; (; Int_t ; nl, . Double_t ; yl, . Double_t ; xscr, . Double_t ; yscr, . Double_t ; zscr, . Int_t & ; irep . ). Set light source. ; Parameters. [in]nlsource number: 1 off all light sources, 0 set diffused light ; [in]ylintensity of the light source ; [in]xscr,yscr,zscrdirection of the light (in respect of the screen); [out]irepreply (0 - O.K, -1 error) . Definition at line 3024 of file TPainter3dAlgorithms.cxx. ◆ Luminosity(). void TPainter3dAlgorithms::Luminosity ; (; TView * ; view, . Double_t * ; anorm, . Double_t & ; flum . ). private . Find surface luminosity at given point. ; Parameters. [in]viewpointer on TView object ; [in]anormsurface normal at given point; [out]flumluminosity . Definition at lin",MatchSource.WIKI,doc/master/classTPainter3dAlgorithms.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPainter3dAlgorithms.html
https://root.cern/doc/master/classTPainter3dAlgorithms.html:41291,Modifiability,variab,variables,41291,"ber of levels ; [in]fminMIN function value ; [in]fmaxMAX function value ; [in]icinitial color index (for 1st level) ; [in]idccolor index increment; [out]irepreply (0 O.K., -1 error) . Definition at line 3314 of file TPainter3dAlgorithms.cxx. ◆ SurfaceCartesian(). void TPainter3dAlgorithms::SurfaceCartesian ; (; Double_t ; ang, . Int_t ; nx, . Int_t ; ny, . const char * ; chopt . ). Draw surface in cartesian coordinate system. ; Parameters. [in]angangle between X ang Y (not used in this method) ; [in]nxnumber of steps along X ; [in]nynumber of steps along Y ; [in]choptspecific options. chopt = 'BF' from BACK to FRONT; chopt = 'FB' from FRONT to BACK . Definition at line 3370 of file TPainter3dAlgorithms.cxx. ◆ SurfaceCylindrical(). void TPainter3dAlgorithms::SurfaceCylindrical ; (; Int_t ; iordr, . Int_t ; na, . Int_t ; nb, . const char * ; chopt . ). Draw surface in cylindrical coordinates. ; Parameters. [in]iordrorder of variables (0 - Z,PHI; 1 - PHI,Z) ; [in]nanumber of steps along 1st variable ; [in]nbnumber of steps along 2nd variable ; [in]choptspecific options. chopt = 'BF' from BACK to FRONT; chopt = 'FB' from FRONT to BACK . Definition at line 3689 of file TPainter3dAlgorithms.cxx. ◆ SurfaceFunction(). void TPainter3dAlgorithms::SurfaceFunction ; (; Int_t ; ia, . Int_t ; ib, . Double_t * ; f, . Double_t * ; t . ). Service function for Surfaces. ; Definition at line 3441 of file TPainter3dAlgorithms.cxx. ◆ SurfacePolar(). void TPainter3dAlgorithms::SurfacePolar ; (; Int_t ; iordr, . Int_t ; na, . Int_t ; nb, . const char * ; chopt . ). Draw surface in polar coordinates. ; Parameters. [in]iordrorder of variables (0 - R,PHI, 1 - PHI,R) ; [in]nanumber of steps along 1st variable ; [in]nbnumber of steps along 2nd variable ; [in]choptspecific options. chopt = 'BF' from BACK to FRONT; chopt = 'FB' from FRONT to BACK . Definition at line 3563 of file TPainter3dAlgorithms.cxx. ◆ SurfaceProperty(). void TPainter3dAlgorithms::SurfaceProperty ; (; Double_t ; qqa, . Doub",MatchSource.WIKI,doc/master/classTPainter3dAlgorithms.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPainter3dAlgorithms.html
https://root.cern/doc/master/classTPainter3dAlgorithms.html:41358,Modifiability,variab,variable,41358,"ber of levels ; [in]fminMIN function value ; [in]fmaxMAX function value ; [in]icinitial color index (for 1st level) ; [in]idccolor index increment; [out]irepreply (0 O.K., -1 error) . Definition at line 3314 of file TPainter3dAlgorithms.cxx. ◆ SurfaceCartesian(). void TPainter3dAlgorithms::SurfaceCartesian ; (; Double_t ; ang, . Int_t ; nx, . Int_t ; ny, . const char * ; chopt . ). Draw surface in cartesian coordinate system. ; Parameters. [in]angangle between X ang Y (not used in this method) ; [in]nxnumber of steps along X ; [in]nynumber of steps along Y ; [in]choptspecific options. chopt = 'BF' from BACK to FRONT; chopt = 'FB' from FRONT to BACK . Definition at line 3370 of file TPainter3dAlgorithms.cxx. ◆ SurfaceCylindrical(). void TPainter3dAlgorithms::SurfaceCylindrical ; (; Int_t ; iordr, . Int_t ; na, . Int_t ; nb, . const char * ; chopt . ). Draw surface in cylindrical coordinates. ; Parameters. [in]iordrorder of variables (0 - Z,PHI; 1 - PHI,Z) ; [in]nanumber of steps along 1st variable ; [in]nbnumber of steps along 2nd variable ; [in]choptspecific options. chopt = 'BF' from BACK to FRONT; chopt = 'FB' from FRONT to BACK . Definition at line 3689 of file TPainter3dAlgorithms.cxx. ◆ SurfaceFunction(). void TPainter3dAlgorithms::SurfaceFunction ; (; Int_t ; ia, . Int_t ; ib, . Double_t * ; f, . Double_t * ; t . ). Service function for Surfaces. ; Definition at line 3441 of file TPainter3dAlgorithms.cxx. ◆ SurfacePolar(). void TPainter3dAlgorithms::SurfacePolar ; (; Int_t ; iordr, . Int_t ; na, . Int_t ; nb, . const char * ; chopt . ). Draw surface in polar coordinates. ; Parameters. [in]iordrorder of variables (0 - R,PHI, 1 - PHI,R) ; [in]nanumber of steps along 1st variable ; [in]nbnumber of steps along 2nd variable ; [in]choptspecific options. chopt = 'BF' from BACK to FRONT; chopt = 'FB' from FRONT to BACK . Definition at line 3563 of file TPainter3dAlgorithms.cxx. ◆ SurfaceProperty(). void TPainter3dAlgorithms::SurfaceProperty ; (; Double_t ; qqa, . Doub",MatchSource.WIKI,doc/master/classTPainter3dAlgorithms.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPainter3dAlgorithms.html
https://root.cern/doc/master/classTPainter3dAlgorithms.html:41401,Modifiability,variab,variable,41401,"ber of levels ; [in]fminMIN function value ; [in]fmaxMAX function value ; [in]icinitial color index (for 1st level) ; [in]idccolor index increment; [out]irepreply (0 O.K., -1 error) . Definition at line 3314 of file TPainter3dAlgorithms.cxx. ◆ SurfaceCartesian(). void TPainter3dAlgorithms::SurfaceCartesian ; (; Double_t ; ang, . Int_t ; nx, . Int_t ; ny, . const char * ; chopt . ). Draw surface in cartesian coordinate system. ; Parameters. [in]angangle between X ang Y (not used in this method) ; [in]nxnumber of steps along X ; [in]nynumber of steps along Y ; [in]choptspecific options. chopt = 'BF' from BACK to FRONT; chopt = 'FB' from FRONT to BACK . Definition at line 3370 of file TPainter3dAlgorithms.cxx. ◆ SurfaceCylindrical(). void TPainter3dAlgorithms::SurfaceCylindrical ; (; Int_t ; iordr, . Int_t ; na, . Int_t ; nb, . const char * ; chopt . ). Draw surface in cylindrical coordinates. ; Parameters. [in]iordrorder of variables (0 - Z,PHI; 1 - PHI,Z) ; [in]nanumber of steps along 1st variable ; [in]nbnumber of steps along 2nd variable ; [in]choptspecific options. chopt = 'BF' from BACK to FRONT; chopt = 'FB' from FRONT to BACK . Definition at line 3689 of file TPainter3dAlgorithms.cxx. ◆ SurfaceFunction(). void TPainter3dAlgorithms::SurfaceFunction ; (; Int_t ; ia, . Int_t ; ib, . Double_t * ; f, . Double_t * ; t . ). Service function for Surfaces. ; Definition at line 3441 of file TPainter3dAlgorithms.cxx. ◆ SurfacePolar(). void TPainter3dAlgorithms::SurfacePolar ; (; Int_t ; iordr, . Int_t ; na, . Int_t ; nb, . const char * ; chopt . ). Draw surface in polar coordinates. ; Parameters. [in]iordrorder of variables (0 - R,PHI, 1 - PHI,R) ; [in]nanumber of steps along 1st variable ; [in]nbnumber of steps along 2nd variable ; [in]choptspecific options. chopt = 'BF' from BACK to FRONT; chopt = 'FB' from FRONT to BACK . Definition at line 3563 of file TPainter3dAlgorithms.cxx. ◆ SurfaceProperty(). void TPainter3dAlgorithms::SurfaceProperty ; (; Double_t ; qqa, . Doub",MatchSource.WIKI,doc/master/classTPainter3dAlgorithms.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPainter3dAlgorithms.html
https://root.cern/doc/master/classTPainter3dAlgorithms.html:41991,Modifiability,variab,variables,41991,"dAlgorithms.cxx. ◆ SurfaceCylindrical(). void TPainter3dAlgorithms::SurfaceCylindrical ; (; Int_t ; iordr, . Int_t ; na, . Int_t ; nb, . const char * ; chopt . ). Draw surface in cylindrical coordinates. ; Parameters. [in]iordrorder of variables (0 - Z,PHI; 1 - PHI,Z) ; [in]nanumber of steps along 1st variable ; [in]nbnumber of steps along 2nd variable ; [in]choptspecific options. chopt = 'BF' from BACK to FRONT; chopt = 'FB' from FRONT to BACK . Definition at line 3689 of file TPainter3dAlgorithms.cxx. ◆ SurfaceFunction(). void TPainter3dAlgorithms::SurfaceFunction ; (; Int_t ; ia, . Int_t ; ib, . Double_t * ; f, . Double_t * ; t . ). Service function for Surfaces. ; Definition at line 3441 of file TPainter3dAlgorithms.cxx. ◆ SurfacePolar(). void TPainter3dAlgorithms::SurfacePolar ; (; Int_t ; iordr, . Int_t ; na, . Int_t ; nb, . const char * ; chopt . ). Draw surface in polar coordinates. ; Parameters. [in]iordrorder of variables (0 - R,PHI, 1 - PHI,R) ; [in]nanumber of steps along 1st variable ; [in]nbnumber of steps along 2nd variable ; [in]choptspecific options. chopt = 'BF' from BACK to FRONT; chopt = 'FB' from FRONT to BACK . Definition at line 3563 of file TPainter3dAlgorithms.cxx. ◆ SurfaceProperty(). void TPainter3dAlgorithms::SurfaceProperty ; (; Double_t ; qqa, . Double_t ; qqd, . Double_t ; qqs, . Int_t ; nnqs, . Int_t & ; irep . ). Set surface property coefficients. ; Parameters. [in]qqadiffusion coefficient for diffused light [0.,1.] ; [in]qqddiffusion coefficient for direct light [0.,1.] ; [in]qqsdiffusion coefficient for reflected light [0.,1.] ; [in]nnqspower coefficient for reflected light (.GE.1). Lightness model formula: Y = YD*QA + > YLi*(QD*cosNi+QS*cosRi); Parameters. [out]irepreply (0 - O.K, -1 error) . Definition at line 3975 of file TPainter3dAlgorithms.cxx. ◆ SurfaceSpherical(). void TPainter3dAlgorithms::SurfaceSpherical ; (; Int_t ; ipsdr, . Int_t ; iordr, . Int_t ; na, . Int_t ; nb, . const char * ; chopt . ). Draw surface in spheric c",MatchSource.WIKI,doc/master/classTPainter3dAlgorithms.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPainter3dAlgorithms.html
https://root.cern/doc/master/classTPainter3dAlgorithms.html:42058,Modifiability,variab,variable,42058,"dAlgorithms.cxx. ◆ SurfaceCylindrical(). void TPainter3dAlgorithms::SurfaceCylindrical ; (; Int_t ; iordr, . Int_t ; na, . Int_t ; nb, . const char * ; chopt . ). Draw surface in cylindrical coordinates. ; Parameters. [in]iordrorder of variables (0 - Z,PHI; 1 - PHI,Z) ; [in]nanumber of steps along 1st variable ; [in]nbnumber of steps along 2nd variable ; [in]choptspecific options. chopt = 'BF' from BACK to FRONT; chopt = 'FB' from FRONT to BACK . Definition at line 3689 of file TPainter3dAlgorithms.cxx. ◆ SurfaceFunction(). void TPainter3dAlgorithms::SurfaceFunction ; (; Int_t ; ia, . Int_t ; ib, . Double_t * ; f, . Double_t * ; t . ). Service function for Surfaces. ; Definition at line 3441 of file TPainter3dAlgorithms.cxx. ◆ SurfacePolar(). void TPainter3dAlgorithms::SurfacePolar ; (; Int_t ; iordr, . Int_t ; na, . Int_t ; nb, . const char * ; chopt . ). Draw surface in polar coordinates. ; Parameters. [in]iordrorder of variables (0 - R,PHI, 1 - PHI,R) ; [in]nanumber of steps along 1st variable ; [in]nbnumber of steps along 2nd variable ; [in]choptspecific options. chopt = 'BF' from BACK to FRONT; chopt = 'FB' from FRONT to BACK . Definition at line 3563 of file TPainter3dAlgorithms.cxx. ◆ SurfaceProperty(). void TPainter3dAlgorithms::SurfaceProperty ; (; Double_t ; qqa, . Double_t ; qqd, . Double_t ; qqs, . Int_t ; nnqs, . Int_t & ; irep . ). Set surface property coefficients. ; Parameters. [in]qqadiffusion coefficient for diffused light [0.,1.] ; [in]qqddiffusion coefficient for direct light [0.,1.] ; [in]qqsdiffusion coefficient for reflected light [0.,1.] ; [in]nnqspower coefficient for reflected light (.GE.1). Lightness model formula: Y = YD*QA + > YLi*(QD*cosNi+QS*cosRi); Parameters. [out]irepreply (0 - O.K, -1 error) . Definition at line 3975 of file TPainter3dAlgorithms.cxx. ◆ SurfaceSpherical(). void TPainter3dAlgorithms::SurfaceSpherical ; (; Int_t ; ipsdr, . Int_t ; iordr, . Int_t ; na, . Int_t ; nb, . const char * ; chopt . ). Draw surface in spheric c",MatchSource.WIKI,doc/master/classTPainter3dAlgorithms.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPainter3dAlgorithms.html
https://root.cern/doc/master/classTPainter3dAlgorithms.html:42101,Modifiability,variab,variable,42101,"dAlgorithms.cxx. ◆ SurfaceCylindrical(). void TPainter3dAlgorithms::SurfaceCylindrical ; (; Int_t ; iordr, . Int_t ; na, . Int_t ; nb, . const char * ; chopt . ). Draw surface in cylindrical coordinates. ; Parameters. [in]iordrorder of variables (0 - Z,PHI; 1 - PHI,Z) ; [in]nanumber of steps along 1st variable ; [in]nbnumber of steps along 2nd variable ; [in]choptspecific options. chopt = 'BF' from BACK to FRONT; chopt = 'FB' from FRONT to BACK . Definition at line 3689 of file TPainter3dAlgorithms.cxx. ◆ SurfaceFunction(). void TPainter3dAlgorithms::SurfaceFunction ; (; Int_t ; ia, . Int_t ; ib, . Double_t * ; f, . Double_t * ; t . ). Service function for Surfaces. ; Definition at line 3441 of file TPainter3dAlgorithms.cxx. ◆ SurfacePolar(). void TPainter3dAlgorithms::SurfacePolar ; (; Int_t ; iordr, . Int_t ; na, . Int_t ; nb, . const char * ; chopt . ). Draw surface in polar coordinates. ; Parameters. [in]iordrorder of variables (0 - R,PHI, 1 - PHI,R) ; [in]nanumber of steps along 1st variable ; [in]nbnumber of steps along 2nd variable ; [in]choptspecific options. chopt = 'BF' from BACK to FRONT; chopt = 'FB' from FRONT to BACK . Definition at line 3563 of file TPainter3dAlgorithms.cxx. ◆ SurfaceProperty(). void TPainter3dAlgorithms::SurfaceProperty ; (; Double_t ; qqa, . Double_t ; qqd, . Double_t ; qqs, . Int_t ; nnqs, . Int_t & ; irep . ). Set surface property coefficients. ; Parameters. [in]qqadiffusion coefficient for diffused light [0.,1.] ; [in]qqddiffusion coefficient for direct light [0.,1.] ; [in]qqsdiffusion coefficient for reflected light [0.,1.] ; [in]nnqspower coefficient for reflected light (.GE.1). Lightness model formula: Y = YD*QA + > YLi*(QD*cosNi+QS*cosRi); Parameters. [out]irepreply (0 - O.K, -1 error) . Definition at line 3975 of file TPainter3dAlgorithms.cxx. ◆ SurfaceSpherical(). void TPainter3dAlgorithms::SurfaceSpherical ; (; Int_t ; ipsdr, . Int_t ; iordr, . Int_t ; na, . Int_t ; nb, . const char * ; chopt . ). Draw surface in spheric c",MatchSource.WIKI,doc/master/classTPainter3dAlgorithms.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPainter3dAlgorithms.html
https://root.cern/doc/master/classTPainter3dAlgorithms.html:43131,Modifiability,variab,variables,43131,"' from FRONT to BACK . Definition at line 3563 of file TPainter3dAlgorithms.cxx. ◆ SurfaceProperty(). void TPainter3dAlgorithms::SurfaceProperty ; (; Double_t ; qqa, . Double_t ; qqd, . Double_t ; qqs, . Int_t ; nnqs, . Int_t & ; irep . ). Set surface property coefficients. ; Parameters. [in]qqadiffusion coefficient for diffused light [0.,1.] ; [in]qqddiffusion coefficient for direct light [0.,1.] ; [in]qqsdiffusion coefficient for reflected light [0.,1.] ; [in]nnqspower coefficient for reflected light (.GE.1). Lightness model formula: Y = YD*QA + > YLi*(QD*cosNi+QS*cosRi); Parameters. [out]irepreply (0 - O.K, -1 error) . Definition at line 3975 of file TPainter3dAlgorithms.cxx. ◆ SurfaceSpherical(). void TPainter3dAlgorithms::SurfaceSpherical ; (; Int_t ; ipsdr, . Int_t ; iordr, . Int_t ; na, . Int_t ; nb, . const char * ; chopt . ). Draw surface in spheric coordinates. ; Parameters. [in]ipsdrpseudo-rapidity flag ; [in]iordrorder of variables (0 - THETA,PHI; 1 - PHI,THETA) ; [in]nanumber of steps along 1st variable ; [in]nbnumber of steps along 2nd variable ; [in]choptspecific options. chopt = 'BF' from BACK to FRONT; chopt = 'FB' from FRONT to BACK . Definition at line 3811 of file TPainter3dAlgorithms.cxx. ◆ TestEdge(). void TPainter3dAlgorithms::TestEdge ; (; Double_t ; del, . Double_t ; xyz[52][3], . Int_t ; i1, . Int_t ; i2, . Int_t ; iface[3], . Double_t ; abcd[4], . Int_t & ; irep . ). protected . Test edge against face (triangle) ; Parameters. [in]delprecision ; [in]xyznodes ; [in]i11-st node of edge ; [in]i22-nd node of edge ; [in]ifacetriangular face ; [in]abcdface plane; [out]irep1: edge under face, 0: no decision, +1: edge before face . Definition at line 5365 of file TPainter3dAlgorithms.cxx. ◆ ZDepth(). void TPainter3dAlgorithms::ZDepth ; (; Double_t ; xyz[52][3], . Int_t & ; nface, . Int_t ; iface[48][3], . Double_t ; dface[48][6], . Double_t ; abcd[48][4], . Int_t * ; iorder . ). Z-depth algorithm for set of triangles. ; Parameters. [in]xyznodes ; [",MatchSource.WIKI,doc/master/classTPainter3dAlgorithms.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPainter3dAlgorithms.html
https://root.cern/doc/master/classTPainter3dAlgorithms.html:43206,Modifiability,variab,variable,43206,"' from FRONT to BACK . Definition at line 3563 of file TPainter3dAlgorithms.cxx. ◆ SurfaceProperty(). void TPainter3dAlgorithms::SurfaceProperty ; (; Double_t ; qqa, . Double_t ; qqd, . Double_t ; qqs, . Int_t ; nnqs, . Int_t & ; irep . ). Set surface property coefficients. ; Parameters. [in]qqadiffusion coefficient for diffused light [0.,1.] ; [in]qqddiffusion coefficient for direct light [0.,1.] ; [in]qqsdiffusion coefficient for reflected light [0.,1.] ; [in]nnqspower coefficient for reflected light (.GE.1). Lightness model formula: Y = YD*QA + > YLi*(QD*cosNi+QS*cosRi); Parameters. [out]irepreply (0 - O.K, -1 error) . Definition at line 3975 of file TPainter3dAlgorithms.cxx. ◆ SurfaceSpherical(). void TPainter3dAlgorithms::SurfaceSpherical ; (; Int_t ; ipsdr, . Int_t ; iordr, . Int_t ; na, . Int_t ; nb, . const char * ; chopt . ). Draw surface in spheric coordinates. ; Parameters. [in]ipsdrpseudo-rapidity flag ; [in]iordrorder of variables (0 - THETA,PHI; 1 - PHI,THETA) ; [in]nanumber of steps along 1st variable ; [in]nbnumber of steps along 2nd variable ; [in]choptspecific options. chopt = 'BF' from BACK to FRONT; chopt = 'FB' from FRONT to BACK . Definition at line 3811 of file TPainter3dAlgorithms.cxx. ◆ TestEdge(). void TPainter3dAlgorithms::TestEdge ; (; Double_t ; del, . Double_t ; xyz[52][3], . Int_t ; i1, . Int_t ; i2, . Int_t ; iface[3], . Double_t ; abcd[4], . Int_t & ; irep . ). protected . Test edge against face (triangle) ; Parameters. [in]delprecision ; [in]xyznodes ; [in]i11-st node of edge ; [in]i22-nd node of edge ; [in]ifacetriangular face ; [in]abcdface plane; [out]irep1: edge under face, 0: no decision, +1: edge before face . Definition at line 5365 of file TPainter3dAlgorithms.cxx. ◆ ZDepth(). void TPainter3dAlgorithms::ZDepth ; (; Double_t ; xyz[52][3], . Int_t & ; nface, . Int_t ; iface[48][3], . Double_t ; dface[48][6], . Double_t ; abcd[48][4], . Int_t * ; iorder . ). Z-depth algorithm for set of triangles. ; Parameters. [in]xyznodes ; [",MatchSource.WIKI,doc/master/classTPainter3dAlgorithms.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPainter3dAlgorithms.html
https://root.cern/doc/master/classTPainter3dAlgorithms.html:43249,Modifiability,variab,variable,43249,"' from FRONT to BACK . Definition at line 3563 of file TPainter3dAlgorithms.cxx. ◆ SurfaceProperty(). void TPainter3dAlgorithms::SurfaceProperty ; (; Double_t ; qqa, . Double_t ; qqd, . Double_t ; qqs, . Int_t ; nnqs, . Int_t & ; irep . ). Set surface property coefficients. ; Parameters. [in]qqadiffusion coefficient for diffused light [0.,1.] ; [in]qqddiffusion coefficient for direct light [0.,1.] ; [in]qqsdiffusion coefficient for reflected light [0.,1.] ; [in]nnqspower coefficient for reflected light (.GE.1). Lightness model formula: Y = YD*QA + > YLi*(QD*cosNi+QS*cosRi); Parameters. [out]irepreply (0 - O.K, -1 error) . Definition at line 3975 of file TPainter3dAlgorithms.cxx. ◆ SurfaceSpherical(). void TPainter3dAlgorithms::SurfaceSpherical ; (; Int_t ; ipsdr, . Int_t ; iordr, . Int_t ; na, . Int_t ; nb, . const char * ; chopt . ). Draw surface in spheric coordinates. ; Parameters. [in]ipsdrpseudo-rapidity flag ; [in]iordrorder of variables (0 - THETA,PHI; 1 - PHI,THETA) ; [in]nanumber of steps along 1st variable ; [in]nbnumber of steps along 2nd variable ; [in]choptspecific options. chopt = 'BF' from BACK to FRONT; chopt = 'FB' from FRONT to BACK . Definition at line 3811 of file TPainter3dAlgorithms.cxx. ◆ TestEdge(). void TPainter3dAlgorithms::TestEdge ; (; Double_t ; del, . Double_t ; xyz[52][3], . Int_t ; i1, . Int_t ; i2, . Int_t ; iface[3], . Double_t ; abcd[4], . Int_t & ; irep . ). protected . Test edge against face (triangle) ; Parameters. [in]delprecision ; [in]xyznodes ; [in]i11-st node of edge ; [in]i22-nd node of edge ; [in]ifacetriangular face ; [in]abcdface plane; [out]irep1: edge under face, 0: no decision, +1: edge before face . Definition at line 5365 of file TPainter3dAlgorithms.cxx. ◆ ZDepth(). void TPainter3dAlgorithms::ZDepth ; (; Double_t ; xyz[52][3], . Int_t & ; nface, . Int_t ; iface[48][3], . Double_t ; dface[48][6], . Double_t ; abcd[48][4], . Int_t * ; iorder . ). Z-depth algorithm for set of triangles. ; Parameters. [in]xyznodes ; [",MatchSource.WIKI,doc/master/classTPainter3dAlgorithms.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPainter3dAlgorithms.html
https://root.cern/doc/master/classTPair.html:3029,Availability,error,error,3029,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTPair.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPair.html
https://root.cern/doc/master/classTPair.html:3118,Availability,error,error,3118,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTPair.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPair.html
https://root.cern/doc/master/classTPair.html:3273,Availability,error,error,3273,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTPair.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPair.html
https://root.cern/doc/master/classTPair.html:3570,Availability,error,error,3570,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTPair.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPair.html
https://root.cern/doc/master/classTPair.html:7638,Availability,error,error,7638," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTPair.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPair.html
https://root.cern/doc/master/classTPair.html:12989,Availability,error,error,12989,"nlineoverridevirtual . Return hash value for this object. ; Note: If this routine is overloaded in a derived class, this derived class should also add ROOT::CallRecursiveRemoveIfNeeded(*this); ROOT::CallRecursiveRemoveIfNeededvoid CallRecursiveRemoveIfNeeded(TObject &obj)call RecursiveRemove for obj if gROOT is valid and obj.TestBit(kMustCleanup) is true.Definition TROOT.h:395; Otherwise, when RecursiveRemove is called (by ~TObject or example) for this type of object, the transversal of THashList and THashTable containers will will have to be done without call Hash (and hence be linear rather than logarithmic complexity). You will also see warnings like Error in <ROOT::Internal::TCheckHashRecursiveRemoveConsistency::CheckRecursiveRemove>: The class SomeName overrides TObject::Hash but does not call TROOT::RecursiveRemove in its destructor.; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TPair::HashULong_t Hash() const overrideReturn hash value for this object.Definition TMap.h:118; TROOT::RecursiveRemovevoid RecursiveRemove(TObject *obj) overrideRecursively remove this object from the list of Cleanups.Definition TROOT.cxx:2498. Reimplemented from TObject.; Definition at line 118 of file TMap.h. ◆ IsA(). TClass * TPair::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 124 of file TMap.h. ◆ IsEqual(). Bool_t TPair::IsEqual ; (; const TObject * ; obj); const. inlineoverridevirtual . Default equal comparison (objects are equal if they have the same address in memory). ; More complicated classes might want to override this function. ; Reimplemented from TObject.; Definition at line 119 of file TMap.h. ◆ IsFolder(). Bool_t TPair::IsFolder ; (; ); const. inlineoverridevirtual . Returns kTRUE in case object contains browsable objects (like containers or",MatchSource.WIKI,doc/master/classTPair.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPair.html
https://root.cern/doc/master/classTPair.html:3035,Integrability,message,message,3035,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTPair.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPair.html
https://root.cern/doc/master/classTPair.html:3576,Integrability,message,message,3576,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTPair.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPair.html
https://root.cern/doc/master/classTPair.html:4566,Integrability,message,message,4566,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must ",MatchSource.WIKI,doc/master/classTPair.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPair.html
https://root.cern/doc/master/classTPair.html:7644,Integrability,message,message,7644," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTPair.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPair.html
https://root.cern/doc/master/classTPair.html:8017,Integrability,message,message,8017," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Priva",MatchSource.WIKI,doc/master/classTPair.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPair.html
https://root.cern/doc/master/classTPair.html:12063,Integrability,rout,routine,12063,"lFileName(). static const char * TPair::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 124 of file TMap.h. ◆ GetName(). const char * TPair::GetName ; (; ); const. inlineoverridevirtual . Returns name of object. ; This default method returns the class name. Classes that give objects a name should override this method. ; Reimplemented from TObject.; Definition at line 116 of file TMap.h. ◆ GetTitle(). const char * TPair::GetTitle ; (; ); const. inlineoverridevirtual . Returns title of object. ; This default method returns the class title (i.e. description). Classes that give objects a title should override this method. ; Reimplemented from TObject.; Definition at line 117 of file TMap.h. ◆ Hash(). ULong_t TPair::Hash ; (; ); const. inlineoverridevirtual . Return hash value for this object. ; Note: If this routine is overloaded in a derived class, this derived class should also add ROOT::CallRecursiveRemoveIfNeeded(*this); ROOT::CallRecursiveRemoveIfNeededvoid CallRecursiveRemoveIfNeeded(TObject &obj)call RecursiveRemove for obj if gROOT is valid and obj.TestBit(kMustCleanup) is true.Definition TROOT.h:395; Otherwise, when RecursiveRemove is called (by ~TObject or example) for this type of object, the transversal of THashList and THashTable containers will will have to be done without call Hash (and hence be linear rather than logarithmic complexity). You will also see warnings like Error in <ROOT::Internal::TCheckHashRecursiveRemoveConsistency::CheckRecursiveRemove>: The class SomeName overrides TObject::Hash but does not call TROOT::RecursiveRemove in its destructor.; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TPair::HashULong_t Hash() const overrideReturn hash value for this object.Definition TMap.h:118; TROOT::RecursiveRemovevoid RecursiveRemove(TObject *o",MatchSource.WIKI,doc/master/classTPair.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPair.html
https://root.cern/doc/master/classTPair.html:12995,Integrability,message,message,12995,"nlineoverridevirtual . Return hash value for this object. ; Note: If this routine is overloaded in a derived class, this derived class should also add ROOT::CallRecursiveRemoveIfNeeded(*this); ROOT::CallRecursiveRemoveIfNeededvoid CallRecursiveRemoveIfNeeded(TObject &obj)call RecursiveRemove for obj if gROOT is valid and obj.TestBit(kMustCleanup) is true.Definition TROOT.h:395; Otherwise, when RecursiveRemove is called (by ~TObject or example) for this type of object, the transversal of THashList and THashTable containers will will have to be done without call Hash (and hence be linear rather than logarithmic complexity). You will also see warnings like Error in <ROOT::Internal::TCheckHashRecursiveRemoveConsistency::CheckRecursiveRemove>: The class SomeName overrides TObject::Hash but does not call TROOT::RecursiveRemove in its destructor.; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TPair::HashULong_t Hash() const overrideReturn hash value for this object.Definition TMap.h:118; TROOT::RecursiveRemovevoid RecursiveRemove(TObject *obj) overrideRecursively remove this object from the list of Cleanups.Definition TROOT.cxx:2498. Reimplemented from TObject.; Definition at line 118 of file TMap.h. ◆ IsA(). TClass * TPair::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 124 of file TMap.h. ◆ IsEqual(). Bool_t TPair::IsEqual ; (; const TObject * ; obj); const. inlineoverridevirtual . Default equal comparison (objects are equal if they have the same address in memory). ; More complicated classes might want to override this function. ; Reimplemented from TObject.; Definition at line 119 of file TMap.h. ◆ IsFolder(). Bool_t TPair::IsFolder ; (; ); const. inlineoverridevirtual . Returns kTRUE in case object contains browsable objects (like containers or",MatchSource.WIKI,doc/master/classTPair.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPair.html
https://root.cern/doc/master/classTPair.html:1370,Modifiability,inherit,inherited,1370,"rs. ; Definition at line 102 of file TMap.h. Public Member Functions;  TPair (const TPair &a);  ;  TPair (TObject *key, TObject *value);  ; virtual ~TPair ();  TPair destructor. ;  ; void Browse (TBrowser *b) override;  Browse the pair. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsEqual (const TObject *obj) const override;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; TObject * Key () const;  ; void SetValue (TObject *val);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; TObject * Value () const;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy th",MatchSource.WIKI,doc/master/classTPair.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPair.html
https://root.cern/doc/master/classTPair.html:2665,Modifiability,inherit,inheritance,2665,"urely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTPair.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPair.html
https://root.cern/doc/master/classTPair.html:4664,Modifiability,inherit,inherits,4664,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-",MatchSource.WIKI,doc/master/classTPair.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPair.html
https://root.cern/doc/master/classTPair.html:4781,Modifiability,inherit,inherits,4781,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this met",MatchSource.WIKI,doc/master/classTPair.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPair.html
https://root.cern/doc/master/classTPair.html:8518,Modifiability,inherit,inherited,8518,"reamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; TPair & operator= (const TPair &)=delete;  . Private Attributes; TObject * fKey;  ; TObject * fValue;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); }",MatchSource.WIKI,doc/master/classTPair.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPair.html
https://root.cern/doc/master/classTPair.html:9179,Modifiability,inherit,inherited,9179," const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; TPair & operator= (const TPair &)=delete;  . Private Attributes; TObject * fKey;  ; TObject * fValue;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TMap.h>. Inheritance diagram for TPair:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [le",MatchSource.WIKI,doc/master/classTPair.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPair.html
https://root.cern/doc/master/classTPair.html:9820,Modifiability,inherit,inherited,9820,"l_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; TPair & operator= (const TPair &)=delete;  . Private Attributes; TObject * fKey;  ; TObject * fValue;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TMap.h>. Inheritance diagram for TPair:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TPair() [1/2]. TPair::TPair ; (; TObject * ; key, . TObject * ; value . ). inline . Definition at line 111 of file TMap.h. ◆ TPair() [2/2]. TPair::TPair ; (; const TPair & ; a). inline . Definition at line 112 of file TMap.h. ◆ ~TPair(). TPair::~TPair ; (; ). virtual . TPair destructor. ; Definition at line 444 of file TMap.cxx. Member Function Documentation. ◆ Browse(). void TPair::Browse ; (; TBrowser * ; b). overridevirtual . Browse the pair. ; Reimplemented from TObject.; Definition at line 453 of file TMap.cxx. ◆ Class(). static TClass * TPair::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static cons",MatchSource.WIKI,doc/master/classTPair.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPair.html
https://root.cern/doc/master/classTPair.html:9919,Modifiability,inherit,inherited,9919,"l_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; TPair & operator= (const TPair &)=delete;  . Private Attributes; TObject * fKey;  ; TObject * fValue;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TMap.h>. Inheritance diagram for TPair:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TPair() [1/2]. TPair::TPair ; (; TObject * ; key, . TObject * ; value . ). inline . Definition at line 111 of file TMap.h. ◆ TPair() [2/2]. TPair::TPair ; (; const TPair & ; a). inline . Definition at line 112 of file TMap.h. ◆ ~TPair(). TPair::~TPair ; (; ). virtual . TPair destructor. ; Definition at line 444 of file TMap.cxx. Member Function Documentation. ◆ Browse(). void TPair::Browse ; (; TBrowser * ; b). overridevirtual . Browse the pair. ; Reimplemented from TObject.; Definition at line 453 of file TMap.cxx. ◆ Class(). static TClass * TPair::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static cons",MatchSource.WIKI,doc/master/classTPair.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPair.html
https://root.cern/doc/master/classTPair.html:760,Security,hash,hash,760,". ROOT: TPair Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TPair Class Reference. ; Class used by TMap to store (key,value) pairs. ; Definition at line 102 of file TMap.h. Public Member Functions;  TPair (const TPair &a);  ;  TPair (TObject *key, TObject *value);  ; virtual ~TPair ();  TPair destructor. ;  ; void Browse (TBrowser *b) override;  Browse the pair. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsEqual (const TObject *obj) const override;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; TObject * Key () const;  ; void SetValue (TObject *val);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; TObject * Value () const;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns ",MatchSource.WIKI,doc/master/classTPair.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPair.html
https://root.cern/doc/master/classTPair.html:12019,Security,hash,hash,12019,"atic constexpr Version_t TPair::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 124 of file TMap.h. ◆ DeclFileName(). static const char * TPair::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 124 of file TMap.h. ◆ GetName(). const char * TPair::GetName ; (; ); const. inlineoverridevirtual . Returns name of object. ; This default method returns the class name. Classes that give objects a name should override this method. ; Reimplemented from TObject.; Definition at line 116 of file TMap.h. ◆ GetTitle(). const char * TPair::GetTitle ; (; ); const. inlineoverridevirtual . Returns title of object. ; This default method returns the class title (i.e. description). Classes that give objects a title should override this method. ; Reimplemented from TObject.; Definition at line 117 of file TMap.h. ◆ Hash(). ULong_t TPair::Hash ; (; ); const. inlineoverridevirtual . Return hash value for this object. ; Note: If this routine is overloaded in a derived class, this derived class should also add ROOT::CallRecursiveRemoveIfNeeded(*this); ROOT::CallRecursiveRemoveIfNeededvoid CallRecursiveRemoveIfNeeded(TObject &obj)call RecursiveRemove for obj if gROOT is valid and obj.TestBit(kMustCleanup) is true.Definition TROOT.h:395; Otherwise, when RecursiveRemove is called (by ~TObject or example) for this type of object, the transversal of THashList and THashTable containers will will have to be done without call Hash (and hence be linear rather than logarithmic complexity). You will also see warnings like Error in <ROOT::Internal::TCheckHashRecursiveRemoveConsistency::CheckRecursiveRemove>: The class SomeName overrides TObject::Hash but does not call TROOT::RecursiveRemove in its destructor.; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993",MatchSource.WIKI,doc/master/classTPair.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPair.html
https://root.cern/doc/master/classTPair.html:13078,Security,hash,hash,13078,"routine is overloaded in a derived class, this derived class should also add ROOT::CallRecursiveRemoveIfNeeded(*this); ROOT::CallRecursiveRemoveIfNeededvoid CallRecursiveRemoveIfNeeded(TObject &obj)call RecursiveRemove for obj if gROOT is valid and obj.TestBit(kMustCleanup) is true.Definition TROOT.h:395; Otherwise, when RecursiveRemove is called (by ~TObject or example) for this type of object, the transversal of THashList and THashTable containers will will have to be done without call Hash (and hence be linear rather than logarithmic complexity). You will also see warnings like Error in <ROOT::Internal::TCheckHashRecursiveRemoveConsistency::CheckRecursiveRemove>: The class SomeName overrides TObject::Hash but does not call TROOT::RecursiveRemove in its destructor.; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TPair::HashULong_t Hash() const overrideReturn hash value for this object.Definition TMap.h:118; TROOT::RecursiveRemovevoid RecursiveRemove(TObject *obj) overrideRecursively remove this object from the list of Cleanups.Definition TROOT.cxx:2498. Reimplemented from TObject.; Definition at line 118 of file TMap.h. ◆ IsA(). TClass * TPair::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 124 of file TMap.h. ◆ IsEqual(). Bool_t TPair::IsEqual ; (; const TObject * ; obj); const. inlineoverridevirtual . Default equal comparison (objects are equal if they have the same address in memory). ; More complicated classes might want to override this function. ; Reimplemented from TObject.; Definition at line 119 of file TMap.h. ◆ IsFolder(). Bool_t TPair::IsFolder ; (; ); const. inlineoverridevirtual . Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ; Reimplemented from TObject.; Definition at lin",MatchSource.WIKI,doc/master/classTPair.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPair.html
https://root.cern/doc/master/classTPair.html:12594,Testability,log,logarithmic,12594,"he class name. Classes that give objects a name should override this method. ; Reimplemented from TObject.; Definition at line 116 of file TMap.h. ◆ GetTitle(). const char * TPair::GetTitle ; (; ); const. inlineoverridevirtual . Returns title of object. ; This default method returns the class title (i.e. description). Classes that give objects a title should override this method. ; Reimplemented from TObject.; Definition at line 117 of file TMap.h. ◆ Hash(). ULong_t TPair::Hash ; (; ); const. inlineoverridevirtual . Return hash value for this object. ; Note: If this routine is overloaded in a derived class, this derived class should also add ROOT::CallRecursiveRemoveIfNeeded(*this); ROOT::CallRecursiveRemoveIfNeededvoid CallRecursiveRemoveIfNeeded(TObject &obj)call RecursiveRemove for obj if gROOT is valid and obj.TestBit(kMustCleanup) is true.Definition TROOT.h:395; Otherwise, when RecursiveRemove is called (by ~TObject or example) for this type of object, the transversal of THashList and THashTable containers will will have to be done without call Hash (and hence be linear rather than logarithmic complexity). You will also see warnings like Error in <ROOT::Internal::TCheckHashRecursiveRemoveConsistency::CheckRecursiveRemove>: The class SomeName overrides TObject::Hash but does not call TROOT::RecursiveRemove in its destructor.; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TPair::HashULong_t Hash() const overrideReturn hash value for this object.Definition TMap.h:118; TROOT::RecursiveRemovevoid RecursiveRemove(TObject *obj) overrideRecursively remove this object from the list of Cleanups.Definition TROOT.cxx:2498. Reimplemented from TObject.; Definition at line 118 of file TMap.h. ◆ IsA(). TClass * TPair::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definit",MatchSource.WIKI,doc/master/classTPair.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPair.html
https://root.cern/doc/master/classTPaletteAxis.html:14006,Availability,error,error,14006,"ault action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTi",MatchSource.WIKI,doc/master/classTPaletteAxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPaletteAxis.html
https://root.cern/doc/master/classTPaletteAxis.html:14095,Availability,error,error,14095,"nt Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsi",MatchSource.WIKI,doc/master/classTPaletteAxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPaletteAxis.html
https://root.cern/doc/master/classTPaletteAxis.html:14250,Availability,error,error,14250,"o which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (c",MatchSource.WIKI,doc/master/classTPaletteAxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPaletteAxis.html
https://root.cern/doc/master/classTPaletteAxis.html:14427,Availability,error,error,14427,"Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inher",MatchSource.WIKI,doc/master/classTPaletteAxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPaletteAxis.html
https://root.cern/doc/master/classTPaletteAxis.html:18157,Availability,error,error,18157,"r new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t ",MatchSource.WIKI,doc/master/classTPaletteAxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPaletteAxis.html
https://root.cern/doc/master/classTPaletteAxis.html:11154,Integrability,depend,depending,11154,"x2);  ; void SetY1 (Double_t y1) override;  Set the Y1 value. ;  ; virtual void SetY1NDC (Double_t y1);  ; void SetY2 (Double_t y2) override;  Set the Y2 value. ;  ; virtual void SetY2NDC (Double_t y2);  ; void Streamer (TBuffer &) override;  Stream an object of class TPave. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TBox;  TBox ();  Box default constructor. ;  ;  TBox (const TBox &box);  Box copy constructor. ;  ;  TBox (Double_t x1, Double_t y1, Double_t x2, Double_t y2);  Box standard constructor. ;  ;  ~TBox () override;  Box destructor. ;  ; virtual TBox * DrawBox (Double_t x1, Double_t y1, Double_t x2, Double_t y2);  Draw this box with new coordinates. ;  ; Rectangle_t GetBBox () override;  Return the ""bounding Box"" of the Box. ;  ; TPoint GetBBoxCenter () override;  Return the center of the Box as TPoint in pixels. ;  ; Double_t GetX1 () const;  ; Double_t GetX2 () const;  ; Double_t GetY1 () const;  ; Double_t GetY2 () const;  ; virtual void HideToolTip (Int_t event);  Hide tool tip depending on the event type. ;  ; Bool_t IsBeingResized () const;  ; virtual Int_t IsInside (Double_t x, Double_t y) const;  Function which returns 1 if point x,y lies inside the box, 0 otherwise. ;  ; TBox & operator= (const TBox &);  Assignment operator. ;  ; virtual void PaintBox (Double_t x1, Double_t y1, Double_t x2, Double_t y2, Option_t *option="""");  Draw this box with new coordinates. ;  ; void SetBBoxCenter (const TPoint &p) override;  Set center of the Box. ;  ; void SetBBoxCenterX (const Int_t x) override;  Set X coordinate of the center of the Box. ;  ; void SetBBoxCenterY (const Int_t y) override;  Set Y coordinate of the center of the Box. ;  ; void SetBBoxX1 (const Int_t x) override;  Set left hand side of BoundingBox to a value (resize in x direction on left) ;  ; void SetBBoxX2 (const Int_t x) override;  Set right hand side of BoundingBox to a value (resize in x direction on right) ;  ; void SetBBo",MatchSource.WIKI,doc/master/classTPaletteAxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPaletteAxis.html
https://root.cern/doc/master/classTPaletteAxis.html:14012,Integrability,message,message,14012,"ault action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTi",MatchSource.WIKI,doc/master/classTPaletteAxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPaletteAxis.html
https://root.cern/doc/master/classTPaletteAxis.html:14433,Integrability,message,message,14433,"Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inher",MatchSource.WIKI,doc/master/classTPaletteAxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPaletteAxis.html
https://root.cern/doc/master/classTPaletteAxis.html:15320,Integrability,message,message,15320,"stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTPaletteAxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPaletteAxis.html
https://root.cern/doc/master/classTPaletteAxis.html:18163,Integrability,message,message,18163,"r new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t ",MatchSource.WIKI,doc/master/classTPaletteAxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPaletteAxis.html
https://root.cern/doc/master/classTPaletteAxis.html:18536,Integrability,message,message,18536,"move this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Ch",MatchSource.WIKI,doc/master/classTPaletteAxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPaletteAxis.html
https://root.cern/doc/master/classTPaletteAxis.html:2097,Modifiability,inherit,inherits,2097,"d palette "",40,-4,4,40,-20,20);; Float_t px, py;; for (Int_t i = 0; i < 25000; i++) {; gRandom->Rannor(px,py);; h2->Fill(px,5*py);; }; gStyle->SetPalette(1);; h2->Draw(""COLZ"");; gPad->Update();; auto palette = (TPaletteAxis*)h2->GetListOfFunctions()->FindObject(""palette"");; palette->SetY2NDC(0.7);; }; Float_tfloat Float_tDefinition RtypesCore.h:57; gRandomR__EXTERN TRandom * gRandomDefinition TRandom.h:62; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; gPad#define gPadDefinition TVirtualPad.h:308; TH2F2-D histogram with a float per channel (see TH1 documentation)Definition TH2.h:307; TPaletteAxisThe palette painting class.Definition TPaletteAxis.h:28; TRandom::Rannorvirtual void Rannor(Float_t &a, Float_t &b)Return 2 numbers distributed following a gaussian with mean=0 and sigma=1.Definition TRandom.cxx:507; TStyle::SetPalettevoid SetPalette(Int_t ncolors=kBird, Int_t *colors=nullptr, Float_t alpha=1.)See TColor::SetPalette.Definition TStyle.cxx:1888; int. TPaletteAxis inherits from TBox and TPave. The methods allowing to specify the palette position are inherited from these two classes.; The palette can be interactively moved and resized. The context menu can be used to set the axis attributes.; It is possible to select a range on the axis to set the min/max in z; As default labels and ticks are drawn by TGAxis at equidistant (lin or log) points as controlled by SetNdivisions. If option ""CJUST"" is given labels and ticks are justified at the color boundaries defined by the contour levels. In this case no optimization can be done. It is responsibility of the user to adjust minimum, maximum of the histogram and/or the contour levels to get a reasonable look of the plot. Only overlap of the labels is avoided if too many contour levels are used.; This option is especially useful with user defined contours. An example is shown here:; {; gStyle->SetOptStat(0);; auto c = new TCanvas(""c"",""exa_CJUST"",300,10,400,400);; auto hpxpy = new TH2F(""hpxpy"",""py vs px"",40,-4,4,",MatchSource.WIKI,doc/master/classTPaletteAxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPaletteAxis.html
https://root.cern/doc/master/classTPaletteAxis.html:2184,Modifiability,inherit,inherited,2184," i < 25000; i++) {; gRandom->Rannor(px,py);; h2->Fill(px,5*py);; }; gStyle->SetPalette(1);; h2->Draw(""COLZ"");; gPad->Update();; auto palette = (TPaletteAxis*)h2->GetListOfFunctions()->FindObject(""palette"");; palette->SetY2NDC(0.7);; }; Float_tfloat Float_tDefinition RtypesCore.h:57; gRandomR__EXTERN TRandom * gRandomDefinition TRandom.h:62; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; gPad#define gPadDefinition TVirtualPad.h:308; TH2F2-D histogram with a float per channel (see TH1 documentation)Definition TH2.h:307; TPaletteAxisThe palette painting class.Definition TPaletteAxis.h:28; TRandom::Rannorvirtual void Rannor(Float_t &a, Float_t &b)Return 2 numbers distributed following a gaussian with mean=0 and sigma=1.Definition TRandom.cxx:507; TStyle::SetPalettevoid SetPalette(Int_t ncolors=kBird, Int_t *colors=nullptr, Float_t alpha=1.)See TColor::SetPalette.Definition TStyle.cxx:1888; int. TPaletteAxis inherits from TBox and TPave. The methods allowing to specify the palette position are inherited from these two classes.; The palette can be interactively moved and resized. The context menu can be used to set the axis attributes.; It is possible to select a range on the axis to set the min/max in z; As default labels and ticks are drawn by TGAxis at equidistant (lin or log) points as controlled by SetNdivisions. If option ""CJUST"" is given labels and ticks are justified at the color boundaries defined by the contour levels. In this case no optimization can be done. It is responsibility of the user to adjust minimum, maximum of the histogram and/or the contour levels to get a reasonable look of the plot. Only overlap of the labels is avoided if too many contour levels are used.; This option is especially useful with user defined contours. An example is shown here:; {; gStyle->SetOptStat(0);; auto c = new TCanvas(""c"",""exa_CJUST"",300,10,400,400);; auto hpxpy = new TH2F(""hpxpy"",""py vs px"",40,-4,4,40,-4,4);; // Fill histograms randomly; TRandom3 randomNum;; Float_",MatchSource.WIKI,doc/master/classTPaletteAxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPaletteAxis.html
https://root.cern/doc/master/classTPaletteAxis.html:4084,Modifiability,inherit,inherited,4084,"0; i++) {; randomNum.Rannor(px,py);; hpxpy->Fill(px,py);; }; hpxpy->SetMaximum(200);; Double_t zcontours[5] = {0, 20, 40, 80, 120};; hpxpy->SetContour(5, zcontours);; hpxpy->GetZaxis()->SetTickSize(0.01);; hpxpy->GetZaxis()->SetLabelOffset(0.01);; gPad->SetRightMargin(0.13);; hpxpy->SetTitle(""User contours, CJUST"");; hpxpy->Draw(""COL Z CJUST"");; }; c#define c(i)Definition RSha256.hxx:101; Double_tdouble Double_tDefinition RtypesCore.h:59; TCanvasThe Canvas class.Definition TCanvas.h:23; TRandom3Random number generator class based on M.Definition TRandom3.h:27; TStyle::SetOptStatvoid SetOptStat(Int_t stat=1)The type of information printed in the histogram statistics box can be selected via the parameter mod...Definition TStyle.cxx:1640. Definition at line 28 of file TPaletteAxis.h. Public Types; enum  EStatusBits { kHasView = (1ULL << ( 11 )); };  ;  Public Types inherited from TPave; enum  { kNameIsAction = (1ULL << ( 11 )); };  ;  Public Types inherited from TBox; enum  { kCannotMove = (1ULL << ( 12 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TPaletteAxis ();  Palette default constructor. ;  ;  TPaletteAxis (const TPaletteAxis &palette);  Palette copy constructor. ;  ;  TPaletteAxis (Double_t x1, Double_t y1, Double_t x2, Double_t y2, Double_t min, Double_t max);  Palette normal constructor. ;  ;  TPaletteAxis (Double_t x1, Double_t y1, Double_t x2",MatchSource.WIKI,doc/master/classTPaletteAxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPaletteAxis.html
https://root.cern/doc/master/classTPaletteAxis.html:4168,Modifiability,inherit,inherited,4168,"0; i++) {; randomNum.Rannor(px,py);; hpxpy->Fill(px,py);; }; hpxpy->SetMaximum(200);; Double_t zcontours[5] = {0, 20, 40, 80, 120};; hpxpy->SetContour(5, zcontours);; hpxpy->GetZaxis()->SetTickSize(0.01);; hpxpy->GetZaxis()->SetLabelOffset(0.01);; gPad->SetRightMargin(0.13);; hpxpy->SetTitle(""User contours, CJUST"");; hpxpy->Draw(""COL Z CJUST"");; }; c#define c(i)Definition RSha256.hxx:101; Double_tdouble Double_tDefinition RtypesCore.h:59; TCanvasThe Canvas class.Definition TCanvas.h:23; TRandom3Random number generator class based on M.Definition TRandom3.h:27; TStyle::SetOptStatvoid SetOptStat(Int_t stat=1)The type of information printed in the histogram statistics box can be selected via the parameter mod...Definition TStyle.cxx:1640. Definition at line 28 of file TPaletteAxis.h. Public Types; enum  EStatusBits { kHasView = (1ULL << ( 11 )); };  ;  Public Types inherited from TPave; enum  { kNameIsAction = (1ULL << ( 11 )); };  ;  Public Types inherited from TBox; enum  { kCannotMove = (1ULL << ( 12 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TPaletteAxis ();  Palette default constructor. ;  ;  TPaletteAxis (const TPaletteAxis &palette);  Palette copy constructor. ;  ;  TPaletteAxis (Double_t x1, Double_t y1, Double_t x2, Double_t y2, Double_t min, Double_t max);  Palette normal constructor. ;  ;  TPaletteAxis (Double_t x1, Double_t y1, Double_t x2",MatchSource.WIKI,doc/master/classTPaletteAxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPaletteAxis.html
https://root.cern/doc/master/classTPaletteAxis.html:4249,Modifiability,inherit,inherited,4249,"0; i++) {; randomNum.Rannor(px,py);; hpxpy->Fill(px,py);; }; hpxpy->SetMaximum(200);; Double_t zcontours[5] = {0, 20, 40, 80, 120};; hpxpy->SetContour(5, zcontours);; hpxpy->GetZaxis()->SetTickSize(0.01);; hpxpy->GetZaxis()->SetLabelOffset(0.01);; gPad->SetRightMargin(0.13);; hpxpy->SetTitle(""User contours, CJUST"");; hpxpy->Draw(""COL Z CJUST"");; }; c#define c(i)Definition RSha256.hxx:101; Double_tdouble Double_tDefinition RtypesCore.h:59; TCanvasThe Canvas class.Definition TCanvas.h:23; TRandom3Random number generator class based on M.Definition TRandom3.h:27; TStyle::SetOptStatvoid SetOptStat(Int_t stat=1)The type of information printed in the histogram statistics box can be selected via the parameter mod...Definition TStyle.cxx:1640. Definition at line 28 of file TPaletteAxis.h. Public Types; enum  EStatusBits { kHasView = (1ULL << ( 11 )); };  ;  Public Types inherited from TPave; enum  { kNameIsAction = (1ULL << ( 11 )); };  ;  Public Types inherited from TBox; enum  { kCannotMove = (1ULL << ( 12 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TPaletteAxis ();  Palette default constructor. ;  ;  TPaletteAxis (const TPaletteAxis &palette);  Palette copy constructor. ;  ;  TPaletteAxis (Double_t x1, Double_t y1, Double_t x2, Double_t y2, Double_t min, Double_t max);  Palette normal constructor. ;  ;  TPaletteAxis (Double_t x1, Double_t y1, Double_t x2",MatchSource.WIKI,doc/master/classTPaletteAxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPaletteAxis.html
https://root.cern/doc/master/classTPaletteAxis.html:7348,Modifiability,inherit,inherited,7348,"am out. ;  ; virtual void SetAxisColor (Int_t color=1, Float_t alpha=1);  ; void SetHistogram (TH1 *h);  ; virtual void SetLabelColor (Int_t color=1);  ; virtual void SetLabelFont (Int_t font=42);  ; virtual void SetLabelOffset (Float_t offset=0.005);  ; virtual void SetLabelSize (Float_t size=0.035);  ; void SetLineWidth (Width_t width) override;  Set the line width. ;  ; virtual void SetMaxDigits (Float_t maxdigits=5);  ; virtual void SetNdivisions (Int_t ndiv=10);  ; virtual void SetTickLength (Float_t length=0.03);  ; virtual void SetTitle (const char *title="""");  ; virtual void SetTitleColor (Int_t color=1);  ; virtual void SetTitleFont (Int_t font=42);  ; virtual void SetTitleOffset (Float_t offset=1);  ; virtual void SetTitleSize (Float_t size=0.035);  ; void Streamer (TBuffer &) override;  Stream an object of class TBox. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void UnZoom ();  Unzoom the palette. ;  ;  Public Member Functions inherited from TPave;  TPave ();  Pave default constructor. ;  ;  TPave (const TPave &pave);  Pave copy constructor. ;  ;  TPave (Double_t x1, Double_t y1, Double_t x2, Double_t y2, Int_t bordersize=4, Option_t *option=""br"");  Pave normal constructor. ;  ;  ~TPave () override;  Pave default destructor. ;  ; virtual void ConvertNDCtoPad ();  Convert pave coordinates from NDC to Pad coordinates. ;  ; void Copy (TObject &pave) const override;  Copy this pave to pave. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute distance from point px,py to a pave. ;  ; void Draw (Option_t *option="""") override;  Draw this pave with its current attributes. ;  ; virtual TPave * DrawPave (Double_t x1, Double_t y1, Double_t x2, Double_t y2, Int_t bordersize=4, Option_t *option=""br"");  Draw this pave with new coordinates. ;  ; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute action corresponding to one event. ;  ; Int_t GetBorderSize () const;  ; Double_t GetCornerRadius () con",MatchSource.WIKI,doc/master/classTPaletteAxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPaletteAxis.html
https://root.cern/doc/master/classTPaletteAxis.html:10452,Modifiability,inherit,inherited,10452,"h its attributes. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save primitive as a C++ statement(s) on output stream out. ;  ; virtual void SetBorderSize (Int_t bordersize=4);  Sets the border size of the TPave box and shadow. ;  ; virtual void SetCornerRadius (Double_t rad=0.2);  ; virtual void SetName (const char *name="""");  ; virtual void SetOption (Option_t *option=""br"");  ; virtual void SetShadowColor (Int_t color);  ; void SetX1 (Double_t x1) override;  Set the X1 value. ;  ; virtual void SetX1NDC (Double_t x1);  ; void SetX2 (Double_t x2) override;  Set the X2 value. ;  ; virtual void SetX2NDC (Double_t x2);  ; void SetY1 (Double_t y1) override;  Set the Y1 value. ;  ; virtual void SetY1NDC (Double_t y1);  ; void SetY2 (Double_t y2) override;  Set the Y2 value. ;  ; virtual void SetY2NDC (Double_t y2);  ; void Streamer (TBuffer &) override;  Stream an object of class TPave. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TBox;  TBox ();  Box default constructor. ;  ;  TBox (const TBox &box);  Box copy constructor. ;  ;  TBox (Double_t x1, Double_t y1, Double_t x2, Double_t y2);  Box standard constructor. ;  ;  ~TBox () override;  Box destructor. ;  ; virtual TBox * DrawBox (Double_t x1, Double_t y1, Double_t x2, Double_t y2);  Draw this box with new coordinates. ;  ; Rectangle_t GetBBox () override;  Return the ""bounding Box"" of the Box. ;  ; TPoint GetBBoxCenter () override;  Return the center of the Box as TPoint in pixels. ;  ; Double_t GetX1 () const;  ; Double_t GetX2 () const;  ; Double_t GetY1 () const;  ; Double_t GetY2 () const;  ; virtual void HideToolTip (Int_t event);  Hide tool tip depending on the event type. ;  ; Bool_t IsBeingResized () const;  ; virtual Int_t IsInside (Double_t x, Double_t y) const;  Function which returns 1 if point x,y lies inside the box, 0 otherwise. ;  ; TBox & operator= (const TBox &);  Assignment operator. ;  ; virtual void Pai",MatchSource.WIKI,doc/master/classTPaletteAxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPaletteAxis.html
https://root.cern/doc/master/classTPaletteAxis.html:12510,Modifiability,inherit,inherited,12510,"Option_t *option="""");  Draw this box with new coordinates. ;  ; void SetBBoxCenter (const TPoint &p) override;  Set center of the Box. ;  ; void SetBBoxCenterX (const Int_t x) override;  Set X coordinate of the center of the Box. ;  ; void SetBBoxCenterY (const Int_t y) override;  Set Y coordinate of the center of the Box. ;  ; void SetBBoxX1 (const Int_t x) override;  Set left hand side of BoundingBox to a value (resize in x direction on left) ;  ; void SetBBoxX2 (const Int_t x) override;  Set right hand side of BoundingBox to a value (resize in x direction on right) ;  ; void SetBBoxY1 (const Int_t y) override;  Set top of BoundingBox to a value (resize in y direction on top) ;  ; void SetBBoxY2 (const Int_t y) override;  Set bottom of BoundingBox to a value (resize in y direction on bottom) ;  ; virtual void SetToolTipText (const char *text, Long_t delayms=1000);  Set tool tip text associated with this box. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTPaletteAxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPaletteAxis.html
https://root.cern/doc/master/classTPaletteAxis.html:13642,Modifiability,inherit,inheritance,13642,"ect ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ;",MatchSource.WIKI,doc/master/classTPaletteAxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPaletteAxis.html
https://root.cern/doc/master/classTPaletteAxis.html:15418,Modifiability,inherit,inherits,15418,"char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTPaletteAxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPaletteAxis.html
https://root.cern/doc/master/classTPaletteAxis.html:15535,Modifiability,inherit,inherits,15535,"ust be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTPaletteAxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPaletteAxis.html
https://root.cern/doc/master/classTPaletteAxis.html:18843,Modifiability,inherit,inherited,18843,"tDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ; ",MatchSource.WIKI,doc/master/classTPaletteAxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPaletteAxis.html
https://root.cern/doc/master/classTPaletteAxis.html:20278,Modifiability,inherit,inherited,20278,"from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetLineAttributes ();  Invoke the DialogCanvas Line attributes. ;  ; virtual void SetLineColor (Color_t lcolor);  Set the line color. ;  ; virtual void SetLineColorAlpha (Color_t lcolor, Float_t lalpha);  Set a transparent line color. ;  ; virtual void SetLineStyle (Style_t lstyle);  Set the line style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttFill;  TAttFill ();  AttFill default constructor. ;  ;  TAttFill (Color_t fcolor, Style_t fstyle);  AttFill normal constructor. ;  ; virtual ~TAttFill ();  AttFill destructor. ;  ; void Copy (TAttFill &attfill) const;  Copy this fill attributes to a new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ; ",MatchSource.WIKI,doc/master/classTPaletteAxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPaletteAxis.html
https://root.cern/doc/master/classTPaletteAxis.html:21533,Modifiability,inherit,inherited,21533," a new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; virtual void SetFillStyle (Style_t fstyle);  Set the fill area style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttBBox2D; virtual ~TAttBBox2D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TPave; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TBox; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bo",MatchSource.WIKI,doc/master/classTPaletteAxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPaletteAxis.html
https://root.cern/doc/master/classTPaletteAxis.html:21871,Modifiability,inherit,inherited,21871,"ut stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; virtual void SetFillStyle (Style_t fstyle);  Set the fill area style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttBBox2D; virtual ~TAttBBox2D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TPave; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TBox; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char ",MatchSource.WIKI,doc/master/classTPaletteAxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPaletteAxis.html
https://root.cern/doc/master/classTPaletteAxis.html:22080,Modifiability,inherit,inherited,22080,"ut stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; virtual void SetFillStyle (Style_t fstyle);  Set the fill area style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttBBox2D; virtual ~TAttBBox2D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TPave; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TBox; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char ",MatchSource.WIKI,doc/master/classTPaletteAxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPaletteAxis.html
https://root.cern/doc/master/classTPaletteAxis.html:22288,Modifiability,inherit,inherited,22288,"ut stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; virtual void SetFillStyle (Style_t fstyle);  Set the fill area style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttBBox2D; virtual ~TAttBBox2D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TPave; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TBox; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char ",MatchSource.WIKI,doc/master/classTPaletteAxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPaletteAxis.html
https://root.cern/doc/master/classTPaletteAxis.html:22806,Modifiability,inherit,inherited,22806, from TBox; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; TGaxis fAxis;  Palette axis. ;  ; TH1 * fH;  ! Pointer to parent histogram ;  ;  Protected Attributes inherited from TPave; Int_t fBorderSize;  window box bordersize in pixels ;  ; Double_t fCornerRadius;  Corner radius in case of option arc. ;  ; Int_t fInit;  (=0 if transformation to NDC not yet done) ;  ; TString fName;  Pave name. ;  ; TString fOption;  Pave style. ;  ; Int_t fShadowColor;  Color of the pave's shadow. ;  ; Double_t fX1NDC;  X1 point in NDC coordinates. ;  ; Double_t fX2NDC;  X2 point in NDC coordinates. ;  ; Double_t fY1NDC;  Y1 point in NDC coordinates. ;  ; Double_t fY2NDC;  Y2 point in NDC coordinates. ;  ;  Protected Attrib,MatchSource.WIKI,doc/master/classTPaletteAxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPaletteAxis.html
https://root.cern/doc/master/classTPaletteAxis.html:23018,Modifiability,inherit,inherited,23018, from TBox; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; TGaxis fAxis;  Palette axis. ;  ; TH1 * fH;  ! Pointer to parent histogram ;  ;  Protected Attributes inherited from TPave; Int_t fBorderSize;  window box bordersize in pixels ;  ; Double_t fCornerRadius;  Corner radius in case of option arc. ;  ; Int_t fInit;  (=0 if transformation to NDC not yet done) ;  ; TString fName;  Pave name. ;  ; TString fOption;  Pave style. ;  ; Int_t fShadowColor;  Color of the pave's shadow. ;  ; Double_t fX1NDC;  X1 point in NDC coordinates. ;  ; Double_t fX2NDC;  X2 point in NDC coordinates. ;  ; Double_t fY1NDC;  Y1 point in NDC coordinates. ;  ; Double_t fY2NDC;  Y2 point in NDC coordinates. ;  ;  Protected Attrib,MatchSource.WIKI,doc/master/classTPaletteAxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPaletteAxis.html
https://root.cern/doc/master/classTPaletteAxis.html:23230,Modifiability,inherit,inherited,23230, from TBox; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; TGaxis fAxis;  Palette axis. ;  ; TH1 * fH;  ! Pointer to parent histogram ;  ;  Protected Attributes inherited from TPave; Int_t fBorderSize;  window box bordersize in pixels ;  ; Double_t fCornerRadius;  Corner radius in case of option arc. ;  ; Int_t fInit;  (=0 if transformation to NDC not yet done) ;  ; TString fName;  Pave name. ;  ; TString fOption;  Pave style. ;  ; Int_t fShadowColor;  Color of the pave's shadow. ;  ; Double_t fX1NDC;  X1 point in NDC coordinates. ;  ; Double_t fX2NDC;  X2 point in NDC coordinates. ;  ; Double_t fY1NDC;  Y1 point in NDC coordinates. ;  ; Double_t fY2NDC;  Y2 point in NDC coordinates. ;  ;  Protected Attrib,MatchSource.WIKI,doc/master/classTPaletteAxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPaletteAxis.html
https://root.cern/doc/master/classTPaletteAxis.html:23536,Modifiability,inherit,inherited,23536,et status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; TGaxis fAxis;  Palette axis. ;  ; TH1 * fH;  ! Pointer to parent histogram ;  ;  Protected Attributes inherited from TPave; Int_t fBorderSize;  window box bordersize in pixels ;  ; Double_t fCornerRadius;  Corner radius in case of option arc. ;  ; Int_t fInit;  (=0 if transformation to NDC not yet done) ;  ; TString fName;  Pave name. ;  ; TString fOption;  Pave style. ;  ; Int_t fShadowColor;  Color of the pave's shadow. ;  ; Double_t fX1NDC;  X1 point in NDC coordinates. ;  ; Double_t fX2NDC;  X2 point in NDC coordinates. ;  ; Double_t fY1NDC;  Y1 point in NDC coordinates. ;  ; Double_t fY2NDC;  Y2 point in NDC coordinates. ;  ;  Protected Attributes inherited from TBox; Bool_t fResizing;  ! True if box is being resized ;  ; Double_t fX1;  X of 1st point. ;  ; Double_t fX2;  X of 2nd point. ;  ; Double_t fY1;  Y of 1st point. ;  ; Double_t fY2;  Y of 2nd point. ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Sty,MatchSource.WIKI,doc/master/classTPaletteAxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPaletteAxis.html
https://root.cern/doc/master/classTPaletteAxis.html:24095,Modifiability,inherit,inherited,24095,"_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; TGaxis fAxis;  Palette axis. ;  ; TH1 * fH;  ! Pointer to parent histogram ;  ;  Protected Attributes inherited from TPave; Int_t fBorderSize;  window box bordersize in pixels ;  ; Double_t fCornerRadius;  Corner radius in case of option arc. ;  ; Int_t fInit;  (=0 if transformation to NDC not yet done) ;  ; TString fName;  Pave name. ;  ; TString fOption;  Pave style. ;  ; Int_t fShadowColor;  Color of the pave's shadow. ;  ; Double_t fX1NDC;  X1 point in NDC coordinates. ;  ; Double_t fX2NDC;  X2 point in NDC coordinates. ;  ; Double_t fY1NDC;  Y1 point in NDC coordinates. ;  ; Double_t fY2NDC;  Y2 point in NDC coordinates. ;  ;  Protected Attributes inherited from TBox; Bool_t fResizing;  ! True if box is being resized ;  ; Double_t fX1;  X of 1st point. ;  ; Double_t fX2;  X of 2nd point. ;  ; Double_t fY1;  Y of 1st point. ;  ; Double_t fY2;  Y of 2nd point. ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TPaletteAxis.h>. Inheritance diagram for TPaletteAxis:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ",MatchSource.WIKI,doc/master/classTPaletteAxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPaletteAxis.html
https://root.cern/doc/master/classTPaletteAxis.html:24337,Modifiability,inherit,inherited,24337,"Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; TGaxis fAxis;  Palette axis. ;  ; TH1 * fH;  ! Pointer to parent histogram ;  ;  Protected Attributes inherited from TPave; Int_t fBorderSize;  window box bordersize in pixels ;  ; Double_t fCornerRadius;  Corner radius in case of option arc. ;  ; Int_t fInit;  (=0 if transformation to NDC not yet done) ;  ; TString fName;  Pave name. ;  ; TString fOption;  Pave style. ;  ; Int_t fShadowColor;  Color of the pave's shadow. ;  ; Double_t fX1NDC;  X1 point in NDC coordinates. ;  ; Double_t fX2NDC;  X2 point in NDC coordinates. ;  ; Double_t fY1NDC;  Y1 point in NDC coordinates. ;  ; Double_t fY2NDC;  Y2 point in NDC coordinates. ;  ;  Protected Attributes inherited from TBox; Bool_t fResizing;  ! True if box is being resized ;  ; Double_t fX1;  X of 1st point. ;  ; Double_t fX2;  X of 2nd point. ;  ; Double_t fY1;  Y of 1st point. ;  ; Double_t fY2;  Y of 2nd point. ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TPaletteAxis.h>. Inheritance diagram for TPaletteAxis:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TPaletteAxis::EStatusBits. EnumeratorkHasView . Definition at line 36 of file TPaletteAxis.h. Constructor & Destructor Documentation. ◆ TPaletteAxis() [1/5]. TPaletteAxis::TPaletteAxis ; (; ). Palet",MatchSource.WIKI,doc/master/classTPaletteAxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPaletteAxis.html
https://root.cern/doc/master/classTPaletteAxis.html:24498,Modifiability,inherit,inherited,24498,"Protected Attributes inherited from TPave; Int_t fBorderSize;  window box bordersize in pixels ;  ; Double_t fCornerRadius;  Corner radius in case of option arc. ;  ; Int_t fInit;  (=0 if transformation to NDC not yet done) ;  ; TString fName;  Pave name. ;  ; TString fOption;  Pave style. ;  ; Int_t fShadowColor;  Color of the pave's shadow. ;  ; Double_t fX1NDC;  X1 point in NDC coordinates. ;  ; Double_t fX2NDC;  X2 point in NDC coordinates. ;  ; Double_t fY1NDC;  Y1 point in NDC coordinates. ;  ; Double_t fY2NDC;  Y2 point in NDC coordinates. ;  ;  Protected Attributes inherited from TBox; Bool_t fResizing;  ! True if box is being resized ;  ; Double_t fX1;  X of 1st point. ;  ; Double_t fX2;  X of 2nd point. ;  ; Double_t fY1;  Y of 1st point. ;  ; Double_t fY2;  Y of 2nd point. ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TPaletteAxis.h>. Inheritance diagram for TPaletteAxis:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TPaletteAxis::EStatusBits. EnumeratorkHasView . Definition at line 36 of file TPaletteAxis.h. Constructor & Destructor Documentation. ◆ TPaletteAxis() [1/5]. TPaletteAxis::TPaletteAxis ; (; ). Palette default constructor. ; Definition at line 119 of file TPaletteAxis.cxx. ◆ TPaletteAxis() [2/5]. TPaletteAxis::TPaletteAxis ; (; Double_t ; x1, . Double_t ; y1, ",MatchSource.WIKI,doc/master/classTPaletteAxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPaletteAxis.html
https://root.cern/doc/master/classTPaletteAxis.html:24656,Modifiability,inherit,inherited,24656,"  Pave name. ;  ; TString fOption;  Pave style. ;  ; Int_t fShadowColor;  Color of the pave's shadow. ;  ; Double_t fX1NDC;  X1 point in NDC coordinates. ;  ; Double_t fX2NDC;  X2 point in NDC coordinates. ;  ; Double_t fY1NDC;  Y1 point in NDC coordinates. ;  ; Double_t fY2NDC;  Y2 point in NDC coordinates. ;  ;  Protected Attributes inherited from TBox; Bool_t fResizing;  ! True if box is being resized ;  ; Double_t fX1;  X of 1st point. ;  ; Double_t fX2;  X of 2nd point. ;  ; Double_t fY1;  Y of 1st point. ;  ; Double_t fY2;  Y of 2nd point. ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TPaletteAxis.h>. Inheritance diagram for TPaletteAxis:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TPaletteAxis::EStatusBits. EnumeratorkHasView . Definition at line 36 of file TPaletteAxis.h. Constructor & Destructor Documentation. ◆ TPaletteAxis() [1/5]. TPaletteAxis::TPaletteAxis ; (; ). Palette default constructor. ; Definition at line 119 of file TPaletteAxis.cxx. ◆ TPaletteAxis() [2/5]. TPaletteAxis::TPaletteAxis ; (; Double_t ; x1, . Double_t ; y1, . Double_t ; x2, . Double_t ; y2, . TH1 * ; h . ). Palette normal constructor. ; Definition at line 129 of file TPaletteAxis.cxx. ◆ TPaletteAxis() [3/5]. TPaletteAxis::TPaletteAxis ; (; Double_t ; x1, . Double_t ; y1, . Double_t ; x2, . Double_",MatchSource.WIKI,doc/master/classTPaletteAxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPaletteAxis.html
https://root.cern/doc/master/classTPaletteAxis.html:24755,Modifiability,inherit,inherited,24755,"  Pave name. ;  ; TString fOption;  Pave style. ;  ; Int_t fShadowColor;  Color of the pave's shadow. ;  ; Double_t fX1NDC;  X1 point in NDC coordinates. ;  ; Double_t fX2NDC;  X2 point in NDC coordinates. ;  ; Double_t fY1NDC;  Y1 point in NDC coordinates. ;  ; Double_t fY2NDC;  Y2 point in NDC coordinates. ;  ;  Protected Attributes inherited from TBox; Bool_t fResizing;  ! True if box is being resized ;  ; Double_t fX1;  X of 1st point. ;  ; Double_t fX2;  X of 2nd point. ;  ; Double_t fY1;  Y of 1st point. ;  ; Double_t fY2;  Y of 2nd point. ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TPaletteAxis.h>. Inheritance diagram for TPaletteAxis:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TPaletteAxis::EStatusBits. EnumeratorkHasView . Definition at line 36 of file TPaletteAxis.h. Constructor & Destructor Documentation. ◆ TPaletteAxis() [1/5]. TPaletteAxis::TPaletteAxis ; (; ). Palette default constructor. ; Definition at line 119 of file TPaletteAxis.cxx. ◆ TPaletteAxis() [2/5]. TPaletteAxis::TPaletteAxis ; (; Double_t ; x1, . Double_t ; y1, . Double_t ; x2, . Double_t ; y2, . TH1 * ; h . ). Palette normal constructor. ; Definition at line 129 of file TPaletteAxis.cxx. ◆ TPaletteAxis() [3/5]. TPaletteAxis::TPaletteAxis ; (; Double_t ; x1, . Double_t ; y1, . Double_t ; x2, . Double_",MatchSource.WIKI,doc/master/classTPaletteAxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPaletteAxis.html
https://root.cern/doc/master/classTPaletteAxis.html:2643,Performance,optimiz,optimization,2643,"per channel (see TH1 documentation)Definition TH2.h:307; TPaletteAxisThe palette painting class.Definition TPaletteAxis.h:28; TRandom::Rannorvirtual void Rannor(Float_t &a, Float_t &b)Return 2 numbers distributed following a gaussian with mean=0 and sigma=1.Definition TRandom.cxx:507; TStyle::SetPalettevoid SetPalette(Int_t ncolors=kBird, Int_t *colors=nullptr, Float_t alpha=1.)See TColor::SetPalette.Definition TStyle.cxx:1888; int. TPaletteAxis inherits from TBox and TPave. The methods allowing to specify the palette position are inherited from these two classes.; The palette can be interactively moved and resized. The context menu can be used to set the axis attributes.; It is possible to select a range on the axis to set the min/max in z; As default labels and ticks are drawn by TGAxis at equidistant (lin or log) points as controlled by SetNdivisions. If option ""CJUST"" is given labels and ticks are justified at the color boundaries defined by the contour levels. In this case no optimization can be done. It is responsibility of the user to adjust minimum, maximum of the histogram and/or the contour levels to get a reasonable look of the plot. Only overlap of the labels is avoided if too many contour levels are used.; This option is especially useful with user defined contours. An example is shown here:; {; gStyle->SetOptStat(0);; auto c = new TCanvas(""c"",""exa_CJUST"",300,10,400,400);; auto hpxpy = new TH2F(""hpxpy"",""py vs px"",40,-4,4,40,-4,4);; // Fill histograms randomly; TRandom3 randomNum;; Float_t px, py;; for (Int_t i = 0; i < 25000; i++) {; randomNum.Rannor(px,py);; hpxpy->Fill(px,py);; }; hpxpy->SetMaximum(200);; Double_t zcontours[5] = {0, 20, 40, 80, 120};; hpxpy->SetContour(5, zcontours);; hpxpy->GetZaxis()->SetTickSize(0.01);; hpxpy->GetZaxis()->SetLabelOffset(0.01);; gPad->SetRightMargin(0.13);; hpxpy->SetTitle(""User contours, CJUST"");; hpxpy->Draw(""COL Z CJUST"");; }; c#define c(i)Definition RSha256.hxx:101; Double_tdouble Double_tDefinition RtypesCore.h",MatchSource.WIKI,doc/master/classTPaletteAxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPaletteAxis.html
https://root.cern/doc/master/classTPaletteAxis.html:2840,Safety,avoid,avoided,2840,"s distributed following a gaussian with mean=0 and sigma=1.Definition TRandom.cxx:507; TStyle::SetPalettevoid SetPalette(Int_t ncolors=kBird, Int_t *colors=nullptr, Float_t alpha=1.)See TColor::SetPalette.Definition TStyle.cxx:1888; int. TPaletteAxis inherits from TBox and TPave. The methods allowing to specify the palette position are inherited from these two classes.; The palette can be interactively moved and resized. The context menu can be used to set the axis attributes.; It is possible to select a range on the axis to set the min/max in z; As default labels and ticks are drawn by TGAxis at equidistant (lin or log) points as controlled by SetNdivisions. If option ""CJUST"" is given labels and ticks are justified at the color boundaries defined by the contour levels. In this case no optimization can be done. It is responsibility of the user to adjust minimum, maximum of the histogram and/or the contour levels to get a reasonable look of the plot. Only overlap of the labels is avoided if too many contour levels are used.; This option is especially useful with user defined contours. An example is shown here:; {; gStyle->SetOptStat(0);; auto c = new TCanvas(""c"",""exa_CJUST"",300,10,400,400);; auto hpxpy = new TH2F(""hpxpy"",""py vs px"",40,-4,4,40,-4,4);; // Fill histograms randomly; TRandom3 randomNum;; Float_t px, py;; for (Int_t i = 0; i < 25000; i++) {; randomNum.Rannor(px,py);; hpxpy->Fill(px,py);; }; hpxpy->SetMaximum(200);; Double_t zcontours[5] = {0, 20, 40, 80, 120};; hpxpy->SetContour(5, zcontours);; hpxpy->GetZaxis()->SetTickSize(0.01);; hpxpy->GetZaxis()->SetLabelOffset(0.01);; gPad->SetRightMargin(0.13);; hpxpy->SetTitle(""User contours, CJUST"");; hpxpy->Draw(""COL Z CJUST"");; }; c#define c(i)Definition RSha256.hxx:101; Double_tdouble Double_tDefinition RtypesCore.h:59; TCanvasThe Canvas class.Definition TCanvas.h:23; TRandom3Random number generator class based on M.Definition TRandom3.h:27; TStyle::SetOptStatvoid SetOptStat(Int_t stat=1)The type of information ",MatchSource.WIKI,doc/master/classTPaletteAxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPaletteAxis.html
https://root.cern/doc/master/classTPaletteAxis.html:8680,Security,hash,hash,8680,""");  Pave normal constructor. ;  ;  ~TPave () override;  Pave default destructor. ;  ; virtual void ConvertNDCtoPad ();  Convert pave coordinates from NDC to Pad coordinates. ;  ; void Copy (TObject &pave) const override;  Copy this pave to pave. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute distance from point px,py to a pave. ;  ; void Draw (Option_t *option="""") override;  Draw this pave with its current attributes. ;  ; virtual TPave * DrawPave (Double_t x1, Double_t y1, Double_t x2, Double_t y2, Int_t bordersize=4, Option_t *option=""br"");  Draw this pave with new coordinates. ;  ; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute action corresponding to one event. ;  ; Int_t GetBorderSize () const;  ; Double_t GetCornerRadius () const;  ; const char * GetName () const override;  Returns name of object. ;  ; Option_t * GetOption () const override;  ; Int_t GetShadowColor () const;  ; Double_t GetX1NDC () const;  ; Double_t GetX2NDC () const;  ; Double_t GetY1NDC () const;  ; Double_t GetY2NDC () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List this pave with its attributes. ;  ; TPave & operator= (const TPave &src);  Assignment operator. ;  ; void Paint (Option_t *option="""") override;  Paint this pave with its current attributes. ;  ; virtual void PaintPave (Double_t x1, Double_t y1, Double_t x2, Double_t y2, Int_t bordersize=4, Option_t *option=""br"");  Draw this pave with new coordinates. ;  ; virtual void PaintPaveArc (Double_t x1, Double_t y1, Double_t x2, Double_t y2, Int_t bordersize=4, Option_t *option=""br"");  Draw this pave with rounded corners. ;  ; void Print (Option_t *option="""") const override;  Dump this pave with its attributes. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save primitive as a C++ statement(s) on outp",MatchSource.WIKI,doc/master/classTPaletteAxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPaletteAxis.html
https://root.cern/doc/master/classTPaletteAxis.html:2470,Testability,log,log,2470,"Float_tDefinition RtypesCore.h:57; gRandomR__EXTERN TRandom * gRandomDefinition TRandom.h:62; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; gPad#define gPadDefinition TVirtualPad.h:308; TH2F2-D histogram with a float per channel (see TH1 documentation)Definition TH2.h:307; TPaletteAxisThe palette painting class.Definition TPaletteAxis.h:28; TRandom::Rannorvirtual void Rannor(Float_t &a, Float_t &b)Return 2 numbers distributed following a gaussian with mean=0 and sigma=1.Definition TRandom.cxx:507; TStyle::SetPalettevoid SetPalette(Int_t ncolors=kBird, Int_t *colors=nullptr, Float_t alpha=1.)See TColor::SetPalette.Definition TStyle.cxx:1888; int. TPaletteAxis inherits from TBox and TPave. The methods allowing to specify the palette position are inherited from these two classes.; The palette can be interactively moved and resized. The context menu can be used to set the axis attributes.; It is possible to select a range on the axis to set the min/max in z; As default labels and ticks are drawn by TGAxis at equidistant (lin or log) points as controlled by SetNdivisions. If option ""CJUST"" is given labels and ticks are justified at the color boundaries defined by the contour levels. In this case no optimization can be done. It is responsibility of the user to adjust minimum, maximum of the histogram and/or the contour levels to get a reasonable look of the plot. Only overlap of the labels is avoided if too many contour levels are used.; This option is especially useful with user defined contours. An example is shown here:; {; gStyle->SetOptStat(0);; auto c = new TCanvas(""c"",""exa_CJUST"",300,10,400,400);; auto hpxpy = new TH2F(""hpxpy"",""py vs px"",40,-4,4,40,-4,4);; // Fill histograms randomly; TRandom3 randomNum;; Float_t px, py;; for (Int_t i = 0; i < 25000; i++) {; randomNum.Rannor(px,py);; hpxpy->Fill(px,py);; }; hpxpy->SetMaximum(200);; Double_t zcontours[5] = {0, 20, 40, 80, 120};; hpxpy->SetContour(5, zcontours);; hpxpy->GetZaxis()->SetTickSize(0.01);; hpxpy",MatchSource.WIKI,doc/master/classTPaletteAxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPaletteAxis.html
https://root.cern/doc/master/classTPARA.html:6104,Availability,error,error,6104," (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTPARA.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPARA.html
https://root.cern/doc/master/classTPARA.html:6193,Availability,error,error,6193,"owser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTPARA.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPARA.html
https://root.cern/doc/master/classTPARA.html:6348,Availability,error,error,6348,"/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTPARA.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPARA.html
https://root.cern/doc/master/classTPARA.html:6645,Availability,error,error,6645,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTPARA.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPARA.html
https://root.cern/doc/master/classTPARA.html:10616,Availability,error,error,10616,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t ",MatchSource.WIKI,doc/master/classTPARA.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPARA.html
https://root.cern/doc/master/classTPARA.html:16433,Energy Efficiency,allocate,allocate,16433,"tDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void SetPoints (Double_t *points) const override;  Create PARA points. ;  ;  Protected Member Functions inherited from TShape; virtual void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections) const;  We have to set kRawSize (unless already done) to allocate buffer space before kRaw can be filled. ;  ; Int_t GetBasicColor () const;  Get basic color. ;  ; Int_t ShapeDistancetoPrimitive (Int_t numPoints, Int_t px, Int_t py);  Distance to primitive. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Float_t fAlpha;  ; Float_t fPhi;  ; Float_t fTheta;  ;  Protected Attributes inherited from TBRIK; Float_t fDx;  ; Float_t fDy;  ; Float_t fDz;  ;  Protected Attributes inherited from TShape; TMaterial * fMaterial;  ; Int_t fNumber;  ; Int_t fVisibility;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ",MatchSource.WIKI,doc/master/classTPARA.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPARA.html
https://root.cern/doc/master/classTPARA.html:6110,Integrability,message,message,6110," (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTPARA.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPARA.html
https://root.cern/doc/master/classTPARA.html:6651,Integrability,message,message,6651,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTPARA.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPARA.html
https://root.cern/doc/master/classTPARA.html:7641,Integrability,message,message,7641,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTPARA.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPARA.html
https://root.cern/doc/master/classTPARA.html:10622,Integrability,message,message,10622,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t ",MatchSource.WIKI,doc/master/classTPARA.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPARA.html
https://root.cern/doc/master/classTPARA.html:10995,Integrability,message,message,10995," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Ch",MatchSource.WIKI,doc/master/classTPARA.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPARA.html
https://root.cern/doc/master/classTPARA.html:1488,Modifiability,inherit,inherited,1488,"n x; dy: half-length in y; dz: half-length in z; alpha: angle formed by the y axis and by the plane joining the centre of the faces parallel to the z-x plane at -DY and +DY; theta: polar angle of the line joining the centres of the faces at -DZ and +DZ in z; phi: azimuthal angle of the line joining the centres of the faces at -DZ and +DZ in z . Definition at line 30 of file TPARA.h. Public Member Functions;  TPARA ();  PARA shape default constructor. ;  ;  TPARA (const char *name, const char *title, const char *material, Float_t dx, Float_t dy, Float_t dz, Float_t alpha, Float_t theta, Float_t phi);  PARA shape normal constructor. ;  ;  ~TPARA () override;  PARA shape default destructor. ;  ; virtual Float_t GetAlpha () const;  ; virtual Float_t GetPhi () const;  ; virtual Float_t GetTheta () const;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TBRIK;  TBRIK ();  BRIK shape default constructor. ;  ;  TBRIK (const char *name, const char *title, const char *material, Float_t dx, Float_t dy, Float_t dz);  BRIK shape normal constructor. ;  ;  ~TBRIK () override;  BRIK shape default destructor. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute distance from point px,py to a BRIK. ;  ; const TBuffer3D & GetBuffer3D (Int_t reqSections) const override;  Get buffer 3D. ;  ; Float_t GetDx () const;  ; Float_t GetDy () const;  ; Float_t GetDz () const;  ; void Sizeof3D () const override;  Return total X3D needed by TNode::ls (when called with option ""x"") ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TShape;  TShape ();  Shape default constructor. ;  ;  TShape (const char *name, const char *title, const char *material);  Shape normal constructor. ;  ;  TShape (const TShape &);  copy constructor ;  ;  ~TShape () override;  Sh",MatchSource.WIKI,doc/master/classTPARA.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPARA.html
https://root.cern/doc/master/classTPARA.html:2230,Modifiability,inherit,inherited,2230,"PARA () override;  PARA shape default destructor. ;  ; virtual Float_t GetAlpha () const;  ; virtual Float_t GetPhi () const;  ; virtual Float_t GetTheta () const;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TBRIK;  TBRIK ();  BRIK shape default constructor. ;  ;  TBRIK (const char *name, const char *title, const char *material, Float_t dx, Float_t dy, Float_t dz);  BRIK shape normal constructor. ;  ;  ~TBRIK () override;  BRIK shape default destructor. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute distance from point px,py to a BRIK. ;  ; const TBuffer3D & GetBuffer3D (Int_t reqSections) const override;  Get buffer 3D. ;  ; Float_t GetDx () const;  ; Float_t GetDy () const;  ; Float_t GetDz () const;  ; void Sizeof3D () const override;  Return total X3D needed by TNode::ls (when called with option ""x"") ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TShape;  TShape ();  Shape default constructor. ;  ;  TShape (const char *name, const char *title, const char *material);  Shape normal constructor. ;  ;  TShape (const TShape &);  copy constructor ;  ;  ~TShape () override;  Shape default destructor. ;  ; TMaterial * GetMaterial () const;  ; virtual Int_t GetNumber () const;  ; Int_t GetVisibility () const;  ; TClass * IsA () const override;  ; TShape & operator= (const TShape &);  assignment operator ;  ; void Paint (Option_t *option="""") override;  This method is used only when a shape is painted outside a TNode. ;  ; void SetName (const char *name) override;  Set the name of the TNamed. ;  ; virtual void SetVisibility (Int_t vis);  ; void Streamer (TBuffer &) override;  Stream an object of class TShape. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void TransformPoints (Double_t *points",MatchSource.WIKI,doc/master/classTPARA.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPARA.html
https://root.cern/doc/master/classTPARA.html:3208,Modifiability,inherit,inherited,3208,"ef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TShape;  TShape ();  Shape default constructor. ;  ;  TShape (const char *name, const char *title, const char *material);  Shape normal constructor. ;  ;  TShape (const TShape &);  copy constructor ;  ;  ~TShape () override;  Shape default destructor. ;  ; TMaterial * GetMaterial () const;  ; virtual Int_t GetNumber () const;  ; Int_t GetVisibility () const;  ; TClass * IsA () const override;  ; TShape & operator= (const TShape &);  assignment operator ;  ; void Paint (Option_t *option="""") override;  This method is used only when a shape is painted outside a TNode. ;  ; void SetName (const char *name) override;  Set the name of the TNamed. ;  ; virtual void SetVisibility (Int_t vis);  ; void Streamer (TBuffer &) override;  Stream an object of class TShape. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void TransformPoints (Double_t *points, UInt_t NbPnts) const;  Transform points (LocalToMaster) ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""")",MatchSource.WIKI,doc/master/classTPARA.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPARA.html
https://root.cern/doc/master/classTPARA.html:4761,Modifiability,inherit,inherited,4761,"  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class in",MatchSource.WIKI,doc/master/classTPARA.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPARA.html
https://root.cern/doc/master/classTPARA.html:5740,Modifiability,inherit,inheritance,5740,"Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTPARA.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPARA.html
https://root.cern/doc/master/classTPARA.html:7739,Modifiability,inherit,inherits,7739,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTPARA.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPARA.html
https://root.cern/doc/master/classTPARA.html:7856,Modifiability,inherit,inherits,7856,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTPARA.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPARA.html
https://root.cern/doc/master/classTPARA.html:11302,Modifiability,inherit,inherited,11302,"tDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ; ",MatchSource.WIKI,doc/master/classTPARA.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPARA.html
https://root.cern/doc/master/classTPARA.html:12807,Modifiability,inherit,inherited,12807,";  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetLineAttributes ();  Invoke the DialogCanvas Line attributes. ;  ; virtual void SetLineColor (Color_t lcolor);  Set the line color. ;  ; virtual void SetLineColorAlpha (Color_t lcolor, Float_t lalpha);  Set a transparent line color. ;  ; virtual void SetLineStyle (Style_t lstyle);  Set the line style. ;  ; virtual void SetLineWidth (Width_t lwidth);  Set the line width. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttFill;  TAttFill ();  AttFill default constructor. ;  ;  TAttFill (Color_t fcolor, Style_t fstyle);  AttFill normal constructor. ;  ; virtual ~TAttFill ();  AttFill destructor. ;  ; void Copy (TAttFill &attfill) const;  Copy this fill attributes to a new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ; ",MatchSource.WIKI,doc/master/classTPARA.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPARA.html
https://root.cern/doc/master/classTPARA.html:14062,Modifiability,inherit,inherited,14062,"new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; virtual void SetFillStyle (Style_t fstyle);  Set the fill area style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAtt3D;  TAtt3D ();  ; virtual ~TAtt3D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TBRIK; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TShape; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * C",MatchSource.WIKI,doc/master/classTPARA.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPARA.html
https://root.cern/doc/master/classTPARA.html:14407,Modifiability,inherit,inherited,14407,"d SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; virtual void SetFillStyle (Style_t fstyle);  Set the fill area style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAtt3D;  TAtt3D ();  ; virtual ~TAtt3D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TBRIK; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TShape; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ",MatchSource.WIKI,doc/master/classTPARA.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPARA.html
https://root.cern/doc/master/classTPARA.html:14616,Modifiability,inherit,inherited,14616,"d SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; virtual void SetFillStyle (Style_t fstyle);  Set the fill area style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAtt3D;  TAtt3D ();  ; virtual ~TAtt3D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TBRIK; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TShape; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ",MatchSource.WIKI,doc/master/classTPARA.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPARA.html
https://root.cern/doc/master/classTPARA.html:14826,Modifiability,inherit,inherited,14826,"d SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; virtual void SetFillStyle (Style_t fstyle);  Set the fill area style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAtt3D;  TAtt3D ();  ; virtual ~TAtt3D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TBRIK; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TShape; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ",MatchSource.WIKI,doc/master/classTPARA.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPARA.html
https://root.cern/doc/master/classTPARA.html:15036,Modifiability,inherit,inherited,15036,"d SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; virtual void SetFillStyle (Style_t fstyle);  Set the fill area style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAtt3D;  TAtt3D ();  ; virtual ~TAtt3D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TBRIK; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TShape; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ",MatchSource.WIKI,doc/master/classTPARA.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPARA.html
https://root.cern/doc/master/classTPARA.html:15554,Modifiability,inherit,inherited,15554," from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void SetPoints (Double_t *points) const override;  Create PARA points. ;  ;  Protected Member Functions inherited from TShape; virtual void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections) const;  We have to set kRawSize (unless already done) to allocate buffer space before kRaw can be filled. ;  ; Int_t GetBasicColor () const;  Get basic color. ;  ; Int_t ShapeDistancetoPrimitive (Int_t numPoints, Int_t px, Int_t py);  Distance to primitive. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void Make",MatchSource.WIKI,doc/master/classTPARA.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPARA.html
https://root.cern/doc/master/classTPARA.html:15766,Modifiability,inherit,inherited,15766," from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void SetPoints (Double_t *points) const override;  Create PARA points. ;  ;  Protected Member Functions inherited from TShape; virtual void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections) const;  We have to set kRawSize (unless already done) to allocate buffer space before kRaw can be filled. ;  ; Int_t GetBasicColor () const;  Get basic color. ;  ; Int_t ShapeDistancetoPrimitive (Int_t numPoints, Int_t px, Int_t py);  Distance to primitive. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void Make",MatchSource.WIKI,doc/master/classTPARA.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPARA.html
https://root.cern/doc/master/classTPARA.html:15978,Modifiability,inherit,inherited,15978," from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void SetPoints (Double_t *points) const override;  Create PARA points. ;  ;  Protected Member Functions inherited from TShape; virtual void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections) const;  We have to set kRawSize (unless already done) to allocate buffer space before kRaw can be filled. ;  ; Int_t GetBasicColor () const;  Get basic color. ;  ; Int_t ShapeDistancetoPrimitive (Int_t numPoints, Int_t px, Int_t py);  Distance to primitive. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void Make",MatchSource.WIKI,doc/master/classTPARA.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPARA.html
https://root.cern/doc/master/classTPARA.html:16288,Modifiability,inherit,inherited,16288,"tDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void SetPoints (Double_t *points) const override;  Create PARA points. ;  ;  Protected Member Functions inherited from TShape; virtual void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections) const;  We have to set kRawSize (unless already done) to allocate buffer space before kRaw can be filled. ;  ; Int_t GetBasicColor () const;  Get basic color. ;  ; Int_t ShapeDistancetoPrimitive (Int_t numPoints, Int_t px, Int_t py);  Distance to primitive. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Float_t fAlpha;  ; Float_t fPhi;  ; Float_t fTheta;  ;  Protected Attributes inherited from TBRIK; Float_t fDx;  ; Float_t fDy;  ; Float_t fDz;  ;  Protected Attributes inherited from TShape; TMaterial * fMaterial;  ; Int_t fNumber;  ; Int_t fVisibility;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ",MatchSource.WIKI,doc/master/classTPARA.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPARA.html
https://root.cern/doc/master/classTPARA.html:16667,Modifiability,inherit,inherited,16667,"();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void SetPoints (Double_t *points) const override;  Create PARA points. ;  ;  Protected Member Functions inherited from TShape; virtual void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections) const;  We have to set kRawSize (unless already done) to allocate buffer space before kRaw can be filled. ;  ; Int_t GetBasicColor () const;  Get basic color. ;  ; Int_t ShapeDistancetoPrimitive (Int_t numPoints, Int_t px, Int_t py);  Distance to primitive. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Float_t fAlpha;  ; Float_t fPhi;  ; Float_t fTheta;  ;  Protected Attributes inherited from TBRIK; Float_t fDx;  ; Float_t fDy;  ; Float_t fDz;  ;  Protected Attributes inherited from TShape; TMaterial * fMaterial;  ; Int_t fNumber;  ; Int_t fVisibility;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; ",MatchSource.WIKI,doc/master/classTPARA.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPARA.html
https://root.cern/doc/master/classTPARA.html:16949,Modifiability,inherit,inherited,16949,"atic constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void SetPoints (Double_t *points) const override;  Create PARA points. ;  ;  Protected Member Functions inherited from TShape; virtual void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections) const;  We have to set kRawSize (unless already done) to allocate buffer space before kRaw can be filled. ;  ; Int_t GetBasicColor () const;  Get basic color. ;  ; Int_t ShapeDistancetoPrimitive (Int_t numPoints, Int_t px, Int_t py);  Distance to primitive. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Float_t fAlpha;  ; Float_t fPhi;  ; Float_t fTheta;  ;  Protected Attributes inherited from TBRIK; Float_t fDx;  ; Float_t fDy;  ; Float_t fDz;  ;  Protected Attributes inherited from TShape; TMaterial * fMaterial;  ; Int_t fNumber;  ; Int_t fVisibility;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCanno",MatchSource.WIKI,doc/master/classTPARA.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPARA.html
https://root.cern/doc/master/classTPARA.html:17041,Modifiability,inherit,inherited,17041,"atic constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void SetPoints (Double_t *points) const override;  Create PARA points. ;  ;  Protected Member Functions inherited from TShape; virtual void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections) const;  We have to set kRawSize (unless already done) to allocate buffer space before kRaw can be filled. ;  ; Int_t GetBasicColor () const;  Get basic color. ;  ; Int_t ShapeDistancetoPrimitive (Int_t numPoints, Int_t px, Int_t py);  Distance to primitive. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Float_t fAlpha;  ; Float_t fPhi;  ; Float_t fTheta;  ;  Protected Attributes inherited from TBRIK; Float_t fDx;  ; Float_t fDy;  ; Float_t fDz;  ;  Protected Attributes inherited from TShape; TMaterial * fMaterial;  ; Int_t fNumber;  ; Int_t fVisibility;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCanno",MatchSource.WIKI,doc/master/classTPARA.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPARA.html
https://root.cern/doc/master/classTPARA.html:17152,Modifiability,inherit,inherited,17152,"atic constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void SetPoints (Double_t *points) const override;  Create PARA points. ;  ;  Protected Member Functions inherited from TShape; virtual void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections) const;  We have to set kRawSize (unless already done) to allocate buffer space before kRaw can be filled. ;  ; Int_t GetBasicColor () const;  Get basic color. ;  ; Int_t ShapeDistancetoPrimitive (Int_t numPoints, Int_t px, Int_t py);  Distance to primitive. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Float_t fAlpha;  ; Float_t fPhi;  ; Float_t fTheta;  ;  Protected Attributes inherited from TBRIK; Float_t fDx;  ; Float_t fDy;  ; Float_t fDz;  ;  Protected Attributes inherited from TShape; TMaterial * fMaterial;  ; Int_t fNumber;  ; Int_t fVisibility;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCanno",MatchSource.WIKI,doc/master/classTPARA.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPARA.html
https://root.cern/doc/master/classTPARA.html:17234,Modifiability,inherit,inherited,17234,"atic constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void SetPoints (Double_t *points) const override;  Create PARA points. ;  ;  Protected Member Functions inherited from TShape; virtual void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections) const;  We have to set kRawSize (unless already done) to allocate buffer space before kRaw can be filled. ;  ; Int_t GetBasicColor () const;  Get basic color. ;  ; Int_t ShapeDistancetoPrimitive (Int_t numPoints, Int_t px, Int_t py);  Distance to primitive. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Float_t fAlpha;  ; Float_t fPhi;  ; Float_t fTheta;  ;  Protected Attributes inherited from TBRIK; Float_t fDx;  ; Float_t fDy;  ; Float_t fDz;  ;  Protected Attributes inherited from TShape; TMaterial * fMaterial;  ; Int_t fNumber;  ; Int_t fVisibility;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCanno",MatchSource.WIKI,doc/master/classTPARA.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPARA.html
https://root.cern/doc/master/classTPARA.html:17395,Modifiability,inherit,inherited,17395,"ess already done) to allocate buffer space before kRaw can be filled. ;  ; Int_t GetBasicColor () const;  Get basic color. ;  ; Int_t ShapeDistancetoPrimitive (Int_t numPoints, Int_t px, Int_t py);  Distance to primitive. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Float_t fAlpha;  ; Float_t fPhi;  ; Float_t fTheta;  ;  Protected Attributes inherited from TBRIK; Float_t fDx;  ; Float_t fDy;  ; Float_t fDz;  ;  Protected Attributes inherited from TShape; TMaterial * fMaterial;  ; Int_t fNumber;  ; Int_t fVisibility;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TPARA.h>. Inheritance diagram for TPARA:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Co",MatchSource.WIKI,doc/master/classTPARA.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPARA.html
https://root.cern/doc/master/classTPARA.html:17550,Modifiability,inherit,inherited,17550,"istance to primitive. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Float_t fAlpha;  ; Float_t fPhi;  ; Float_t fTheta;  ;  Protected Attributes inherited from TBRIK; Float_t fDx;  ; Float_t fDy;  ; Float_t fDz;  ;  Protected Attributes inherited from TShape; TMaterial * fMaterial;  ; Int_t fNumber;  ; Int_t fVisibility;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TPARA.h>. Inheritance diagram for TPARA:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TPARA() [1/2]. TPARA::TPARA ; (; ). PARA shape default constructor. ; Definition at line 42 of file TPARA.cxx. ◆ TPARA() [2/2]. TPARA::TPARA ; (; const char * ; ",MatchSource.WIKI,doc/master/classTPARA.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPARA.html
https://root.cern/doc/master/classTPARA.html:18191,Modifiability,inherit,inherited,18191,"rotected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TPARA.h>. Inheritance diagram for TPARA:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TPARA() [1/2]. TPARA::TPARA ; (; ). PARA shape default constructor. ; Definition at line 42 of file TPARA.cxx. ◆ TPARA() [2/2]. TPARA::TPARA ; (; const char * ; name, . const char * ; title, . const char * ; material, . Float_t ; dx, . Float_t ; dy, . Float_t ; dz, . Float_t ; alpha, . Float_t ; theta, . Float_t ; phi . ). PARA shape normal constructor. ; Definition at line 52 of file TPARA.cxx. ◆ ~TPARA(). TPARA::~TPARA ; (; ). override . PARA shape default destructor. ; Definition at line 63 of file TPARA.cxx. Member Function Documentation. ◆ Class(). static TClass * TPARA::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TPARA::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). ",MatchSource.WIKI,doc/master/classTPARA.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPARA.html
https://root.cern/doc/master/classTPARA.html:4076,Security,hash,hash,4076,"NVirtual_b);  ; void TransformPoints (Double_t *points, UInt_t NbPnts) const;  Transform points (LocalToMaster) ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely a",MatchSource.WIKI,doc/master/classTPARA.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPARA.html
https://root.cern/doc/master/classTParallelCoord.html:1299,Availability,avail,available,1299,"; TParallelCoord Class Reference. ; Parallel Coordinates class. ; The multidimensional system of Parallel coordinates is a common way of studying high-dimensional geometry and visualizing multivariate problems. It has first been proposed by A. Inselberg in 1981.; To show a set of points in an n-dimensional space, a backdrop is drawn consisting of n parallel lines. A point in n-dimensional space is represented as a polyline with vertices on the parallel axes; the position of the vertex on the i-th axis corresponds to the i-th coordinate of the point.; This tool comes with a rather large gui in the editor. It is necessary to use this editor in order to explore a data set, as explained below. Reduce cluttering:; The main issue for parallel coordinates is the very high cluttering of the output when dealing with large data set. Two techniques have been implemented to bypass that so far:. Draw doted lines instead of plain lines with an adjustable dots spacing. A slider to adjust the dots spacing is available in the editor.; Sort the entries to display with a ""weight cut"". On each axis is drawn a histogram describing the distribution of the data on the corresponding variable. The ""weight"" of an entry is the sum of the bin content of each bin the entry is going through. An entry going through the histograms peaks will have a big weight wether an entry going randomly through the histograms will have a rather small weight. Setting a cut on this weight allows to draw only the most representative entries. A slider set the cut is also available in the gui. Selections:; Selections of specific entries can be defined over the data se using parallel coordinates. With that representation, a selection is an ensemble of ranges defined on the axes. Ranges defined on the same axis are conjugated with OR (an entry must be in one or the other ranges to be selected). Ranges on different axes are are conjugated with AND (an entry must be in all the ranges to be selected). Several selections ",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:1839,Availability,avail,available,1839,"f the point.; This tool comes with a rather large gui in the editor. It is necessary to use this editor in order to explore a data set, as explained below. Reduce cluttering:; The main issue for parallel coordinates is the very high cluttering of the output when dealing with large data set. Two techniques have been implemented to bypass that so far:. Draw doted lines instead of plain lines with an adjustable dots spacing. A slider to adjust the dots spacing is available in the editor.; Sort the entries to display with a ""weight cut"". On each axis is drawn a histogram describing the distribution of the data on the corresponding variable. The ""weight"" of an entry is the sum of the bin content of each bin the entry is going through. An entry going through the histograms peaks will have a big weight wether an entry going randomly through the histograms will have a rather small weight. Setting a cut on this weight allows to draw only the most representative entries. A slider set the cut is also available in the gui. Selections:; Selections of specific entries can be defined over the data se using parallel coordinates. With that representation, a selection is an ensemble of ranges defined on the axes. Ranges defined on the same axis are conjugated with OR (an entry must be in one or the other ranges to be selected). Ranges on different axes are are conjugated with AND (an entry must be in all the ranges to be selected). Several selections can be defined with different colors. It is possible to generate an entry list from a given selection and apply it to the tree using the editor (""Apply to tree"" button). Axes:; Options can be defined each axis separately using the right mouse click. These options can be applied to every axes using the editor. Axis width: If set to 0, the axis is simply a line. If higher, a color histogram is drawn on the axis.; Axis histogram height: If not 0, a usual bar histogram is drawn on the plot. The order in which the variables are drawn is essent",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:2925,Availability,avail,available,2925,"er the data se using parallel coordinates. With that representation, a selection is an ensemble of ranges defined on the axes. Ranges defined on the same axis are conjugated with OR (an entry must be in one or the other ranges to be selected). Ranges on different axes are are conjugated with AND (an entry must be in all the ranges to be selected). Several selections can be defined with different colors. It is possible to generate an entry list from a given selection and apply it to the tree using the editor (""Apply to tree"" button). Axes:; Options can be defined each axis separately using the right mouse click. These options can be applied to every axes using the editor. Axis width: If set to 0, the axis is simply a line. If higher, a color histogram is drawn on the axis.; Axis histogram height: If not 0, a usual bar histogram is drawn on the plot. The order in which the variables are drawn is essential to see the clusters. The axes can be dragged to change their position. A zoom is also available. The logarithm scale is also available by right clicking on the axis. Candle chart:; TParallelCoord can also be used to display a candle chart. In that mode, every variable is drawn in the same scale. The candle chart can be combined with the parallel coordinates mode, drawing the candle sticks over the axes.; {; TCanvas *c1 = new TCanvas(""c1"");; TFile *f = TFile::Open(""cernstaff.root"");; TTree *T = (TTree*)f->Get(""T"");; T->Draw(""Age:Grade:Step:Cost:Division:Nation"","""",""para"");; TParallelCoord* para = (TParallelCoord*)gPad->GetListOfPrimitives()->FindObject(""ParaCoord"");; TParallelCoordVar* grade = (TParallelCoordVar*)para->GetVarList()->FindObject(""Grade"");; grade->AddRange(new TParallelCoordRange(grade,11.5,14));; para->AddSelection(""less30"");; para->GetCurrentSelection()->SetLineColor(kViolet);; TParallelCoordVar* age = (TParallelCoordVar*)para->GetVarList()->FindObject(""Age"");; age->AddRange(new TParallelCoordRange(age,21,30));; }; f#define f(i)Definition RSha256.hxx:1",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:2964,Availability,avail,available,2964," that representation, a selection is an ensemble of ranges defined on the axes. Ranges defined on the same axis are conjugated with OR (an entry must be in one or the other ranges to be selected). Ranges on different axes are are conjugated with AND (an entry must be in all the ranges to be selected). Several selections can be defined with different colors. It is possible to generate an entry list from a given selection and apply it to the tree using the editor (""Apply to tree"" button). Axes:; Options can be defined each axis separately using the right mouse click. These options can be applied to every axes using the editor. Axis width: If set to 0, the axis is simply a line. If higher, a color histogram is drawn on the axis.; Axis histogram height: If not 0, a usual bar histogram is drawn on the plot. The order in which the variables are drawn is essential to see the clusters. The axes can be dragged to change their position. A zoom is also available. The logarithm scale is also available by right clicking on the axis. Candle chart:; TParallelCoord can also be used to display a candle chart. In that mode, every variable is drawn in the same scale. The candle chart can be combined with the parallel coordinates mode, drawing the candle sticks over the axes.; {; TCanvas *c1 = new TCanvas(""c1"");; TFile *f = TFile::Open(""cernstaff.root"");; TTree *T = (TTree*)f->Get(""T"");; T->Draw(""Age:Grade:Step:Cost:Division:Nation"","""",""para"");; TParallelCoord* para = (TParallelCoord*)gPad->GetListOfPrimitives()->FindObject(""ParaCoord"");; TParallelCoordVar* grade = (TParallelCoordVar*)para->GetVarList()->FindObject(""Grade"");; grade->AddRange(new TParallelCoordRange(grade,11.5,14));; para->AddSelection(""less30"");; para->GetCurrentSelection()->SetLineColor(kViolet);; TParallelCoordVar* age = (TParallelCoordVar*)para->GetVarList()->FindObject(""Age"");; age->AddRange(new TParallelCoordRange(age,21,30));; }; f#define f(i)Definition RSha256.hxx:104; kViolet@ kVioletDefinition Rtypes.h:67; gPad",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:14901,Availability,error,error,14901,"ct"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () co",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:14990,Availability,error,error,14990,"t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:15145,Availability,error,error,15145,"; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this obj",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:15322,Availability,error,error,15322,". ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:19155,Availability,error,error,19155,"r new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static void BuildParallelCoord (TSelectorDraw *selector, bool candle);  Call constructor and add the variables. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SetEntryList (TPara",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:11567,Deployability,update,updated,11567,"idth for all axis. ;  ; void SetCandleChart (bool can);  Set a candle chart display. ;  ; void SetCurrentEntries (TEntryList *entries);  ; void SetCurrentFirst (Long64_t);  Set the first entry to be displayed. ;  ; void SetCurrentN (Long64_t);  Set the number of entry to be displayed. ;  ; TParallelCoordSelect * SetCurrentSelection (const char *title);  Set the selection being edited. ;  ; void SetCurrentSelection (TParallelCoordSelect *sel);  Set the selection being edited. ;  ; virtual void SetCurveDisplay (bool curve=true);  ; void SetDotsSpacing (Int_t s=0);  Set dots spacing. ;  ; void SetGlobalLogScale (bool);  All axes in log scale. ;  ; void SetGlobalMax (Double_t max);  Force all variables to adopt the same max. ;  ; void SetGlobalMin (Double_t min);  Force all variables to adopt the same min. ;  ; void SetGlobalScale (bool gl);  Constraint all axes to the same scale. ;  ; void SetInitEntries (TEntryList *entries);  ; void SetLineColor (Color_t col);  ; void SetLineWidth (Width_t wid);  ; void SetLiveRangesUpdate (bool);  If true, the pad is updated while the motion of a dragged range. ;  ; void SetNentries (Long64_t n);  ; void SetTree (TTree *tree);  ; void SetVertDisplay (bool vert=true);  Set the vertical or horizontal display. ;  ; void SetWeightCut (Int_t w=0);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnzoomAll ();  Unzoom all variables. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:35835,Deployability,update,updated,35835,"allelCoord::SetGlobalMax ; (; Double_t ; max). Force all variables to adopt the same max. ; Definition at line 1134 of file TParallelCoord.cxx. ◆ SetGlobalMin(). void TParallelCoord::SetGlobalMin ; (; Double_t ; min). Force all variables to adopt the same min. ; Definition at line 1146 of file TParallelCoord.cxx. ◆ SetGlobalScale(). void TParallelCoord::SetGlobalScale ; (; bool ; gl). Constraint all axes to the same scale. ; Definition at line 984 of file TParallelCoord.cxx. ◆ SetInitEntries(). void TParallelCoord::SetInitEntries ; (; TEntryList * ; entries). inline . Definition at line 126 of file TParallelCoord.h. ◆ SetLineColor(). void TParallelCoord::SetLineColor ; (; Color_t ; col). inline . Definition at line 127 of file TParallelCoord.h. ◆ SetLineWidth(). void TParallelCoord::SetLineWidth ; (; Width_t ; wid). inline . Definition at line 128 of file TParallelCoord.h. ◆ SetLiveRangesUpdate(). void TParallelCoord::SetLiveRangesUpdate ; (; bool ; on). If true, the pad is updated while the motion of a dragged range. ; Definition at line 1158 of file TParallelCoord.cxx. ◆ SetNentries(). void TParallelCoord::SetNentries ; (; Long64_t ; n). inline . Definition at line 130 of file TParallelCoord.h. ◆ SetTree(). void TParallelCoord::SetTree ; (; TTree * ; tree). inline . Definition at line 131 of file TParallelCoord.h. ◆ SetVertDisplay(). void TParallelCoord::SetVertDisplay ; (; bool ; vert = true). Set the vertical or horizontal display. ; Definition at line 1169 of file TParallelCoord.cxx. ◆ SetWeightCut(). void TParallelCoord::SetWeightCut ; (; Int_t ; w = 0). inline . Definition at line 133 of file TParallelCoord.h. ◆ Streamer(). void TParallelCoord::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TNamed. ◆ StreamerNVirtual(). void TParallelCoord::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 136 of file TParallelCoord.h. ◆ UnzoomAll(). void TParallelCoord::Unzoo",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:14907,Integrability,message,message,14907,"ct"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () co",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:15328,Integrability,message,message,15328,". ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:16318,Integrability,message,message,16318,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:19161,Integrability,message,message,19161,"r new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static void BuildParallelCoord (TSelectorDraw *selector, bool candle);  Call constructor and add the variables. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SetEntryList (TPara",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:19534,Integrability,message,message,19534,"move this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static void BuildParallelCoord (TSelectorDraw *selector, bool candle);  Call constructor and add the variables. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SetEntryList (TParallelCoord *para, TEntryList *enlist);  Set the entry lists of ""para"". ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; stati",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:1469,Modifiability,variab,variable,1469,"of studying high-dimensional geometry and visualizing multivariate problems. It has first been proposed by A. Inselberg in 1981.; To show a set of points in an n-dimensional space, a backdrop is drawn consisting of n parallel lines. A point in n-dimensional space is represented as a polyline with vertices on the parallel axes; the position of the vertex on the i-th axis corresponds to the i-th coordinate of the point.; This tool comes with a rather large gui in the editor. It is necessary to use this editor in order to explore a data set, as explained below. Reduce cluttering:; The main issue for parallel coordinates is the very high cluttering of the output when dealing with large data set. Two techniques have been implemented to bypass that so far:. Draw doted lines instead of plain lines with an adjustable dots spacing. A slider to adjust the dots spacing is available in the editor.; Sort the entries to display with a ""weight cut"". On each axis is drawn a histogram describing the distribution of the data on the corresponding variable. The ""weight"" of an entry is the sum of the bin content of each bin the entry is going through. An entry going through the histograms peaks will have a big weight wether an entry going randomly through the histograms will have a rather small weight. Setting a cut on this weight allows to draw only the most representative entries. A slider set the cut is also available in the gui. Selections:; Selections of specific entries can be defined over the data se using parallel coordinates. With that representation, a selection is an ensemble of ranges defined on the axes. Ranges defined on the same axis are conjugated with OR (an entry must be in one or the other ranges to be selected). Ranges on different axes are are conjugated with AND (an entry must be in all the ranges to be selected). Several selections can be defined with different colors. It is possible to generate an entry list from a given selection and apply it to the tree using th",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:2806,Modifiability,variab,variables,2806,"et the cut is also available in the gui. Selections:; Selections of specific entries can be defined over the data se using parallel coordinates. With that representation, a selection is an ensemble of ranges defined on the axes. Ranges defined on the same axis are conjugated with OR (an entry must be in one or the other ranges to be selected). Ranges on different axes are are conjugated with AND (an entry must be in all the ranges to be selected). Several selections can be defined with different colors. It is possible to generate an entry list from a given selection and apply it to the tree using the editor (""Apply to tree"" button). Axes:; Options can be defined each axis separately using the right mouse click. These options can be applied to every axes using the editor. Axis width: If set to 0, the axis is simply a line. If higher, a color histogram is drawn on the axis.; Axis histogram height: If not 0, a usual bar histogram is drawn on the plot. The order in which the variables are drawn is essential to see the clusters. The axes can be dragged to change their position. A zoom is also available. The logarithm scale is also available by right clicking on the axis. Candle chart:; TParallelCoord can also be used to display a candle chart. In that mode, every variable is drawn in the same scale. The candle chart can be combined with the parallel coordinates mode, drawing the candle sticks over the axes.; {; TCanvas *c1 = new TCanvas(""c1"");; TFile *f = TFile::Open(""cernstaff.root"");; TTree *T = (TTree*)f->Get(""T"");; T->Draw(""Age:Grade:Step:Cost:Division:Nation"","""",""para"");; TParallelCoord* para = (TParallelCoord*)gPad->GetListOfPrimitives()->FindObject(""ParaCoord"");; TParallelCoordVar* grade = (TParallelCoordVar*)para->GetVarList()->FindObject(""Grade"");; grade->AddRange(new TParallelCoordRange(grade,11.5,14));; para->AddSelection(""less30"");; para->GetCurrentSelection()->SetLineColor(kViolet);; TParallelCoordVar* age = (TParallelCoordVar*)para->GetVarList()->FindObject(",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:3099,Modifiability,variab,variable,3099,"n entry must be in one or the other ranges to be selected). Ranges on different axes are are conjugated with AND (an entry must be in all the ranges to be selected). Several selections can be defined with different colors. It is possible to generate an entry list from a given selection and apply it to the tree using the editor (""Apply to tree"" button). Axes:; Options can be defined each axis separately using the right mouse click. These options can be applied to every axes using the editor. Axis width: If set to 0, the axis is simply a line. If higher, a color histogram is drawn on the axis.; Axis histogram height: If not 0, a usual bar histogram is drawn on the plot. The order in which the variables are drawn is essential to see the clusters. The axes can be dragged to change their position. A zoom is also available. The logarithm scale is also available by right clicking on the axis. Candle chart:; TParallelCoord can also be used to display a candle chart. In that mode, every variable is drawn in the same scale. The candle chart can be combined with the parallel coordinates mode, drawing the candle sticks over the axes.; {; TCanvas *c1 = new TCanvas(""c1"");; TFile *f = TFile::Open(""cernstaff.root"");; TTree *T = (TTree*)f->Get(""T"");; T->Draw(""Age:Grade:Step:Cost:Division:Nation"","""",""para"");; TParallelCoord* para = (TParallelCoord*)gPad->GetListOfPrimitives()->FindObject(""ParaCoord"");; TParallelCoordVar* grade = (TParallelCoordVar*)para->GetVarList()->FindObject(""Grade"");; grade->AddRange(new TParallelCoordRange(grade,11.5,14));; para->AddSelection(""less30"");; para->GetCurrentSelection()->SetLineColor(kViolet);; TParallelCoordVar* age = (TParallelCoordVar*)para->GetVarList()->FindObject(""Age"");; age->AddRange(new TParallelCoordRange(age,21,30));; }; f#define f(i)Definition RSha256.hxx:104; kViolet@ kVioletDefinition Rtypes.h:67; gPad#define gPadDefinition TVirtualPad.h:308; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TA",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:6429,Modifiability,inherit,inherited,6429," TParallelCoord::GetVarListTList * GetVarList()Definition TParallelCoord.h:102; TTreeA TTree represents a columnar dataset.Definition TTree.h:79; c1return c1Definition legend1.C:41. Some references:. Alfred Inselberg's Homepage http://www.math.tau.ac.il/~aiisreal, with Visual Tutorial, History, Selected Publications and Applications.; Almir Olivette Artero, Maria Cristina Ferreira de Oliveira, Haim Levkowitz, ""Uncovering Clusters in Crowded Parallel Coordinates Visualizations,"" infovis, pp. 81-88, IEEE Symposium on Information Visualization (INFOVIS'04), 2004. . Definition at line 28 of file TParallelCoord.h. Public Types; enum  EStatusBits { ;   kVertDisplay = (1ULL << ( 14 )); , kCurveDisplay = (1ULL << ( 15 )); , kPaintEntries = (1ULL << ( 16 )); , kLiveUpdate = (1ULL << ( 17 )); , ;   kGlobalScale = (1ULL << ( 19 )); , kCandleChart = (1ULL << ( 20 )); , kGlobalLogScale = (1ULL << ( 21 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TParallelCoord ();  Default constructor. ;  ;  TParallelCoord (Long64_t nentries);  Constructor without a reference to a tree, the datas must be added afterwards with TParallelCoord::AddVariable(Double_t*,const char*). ;  ;  TParallelCoord (TTree *tree, Long64_t nentries);  Normal constructor, the datas must be added afterwards with TParallelCoord::AddVariable(Double_t*,const char*). ;  ;  ~TParallelCoord () override;  De",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:7627,Modifiability,variab,variable,7627,"SingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TParallelCoord ();  Default constructor. ;  ;  TParallelCoord (Long64_t nentries);  Constructor without a reference to a tree, the datas must be added afterwards with TParallelCoord::AddVariable(Double_t*,const char*). ;  ;  TParallelCoord (TTree *tree, Long64_t nentries);  Normal constructor, the datas must be added afterwards with TParallelCoord::AddVariable(Double_t*,const char*). ;  ;  ~TParallelCoord () override;  Destructor. ;  ; void AddSelection (const char *title);  Add a selection. ;  ; void AddVariable (const char *varexp);  Add a variable from an expression. ;  ; void AddVariable (Double_t *val, const char *title="""");  Add a variable. ;  ; void ApplySelectionToTree ();  Apply the current selection to the tree. ;  ; void CleanUpSelections (TParallelCoordRange *range);  Clean up the selections from the ranges which could have been deleted when a variable has been deleted. ;  ; void DeleteSelection (TParallelCoordSelect *sel);  Delete a selection. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute the distance from the TParallelCoord. ;  ; void Draw (Option_t *options="""") override;  Draw the parallel coordinates graph. ;  ; void ExecuteEvent (Int_t entry, Int_t px, Int_t py) override;  Execute the corresponding entry. ;  ; bool GetCandleChart ();  ; Long64_t GetCurrentFirst ();  ; Long64_t GetCurrentN ();  ; TParallelCoordSelect * GetCurrentSelection ();  Return the selection currently being edited. ;  ; bool GetCurveDisplay () const;  ; Int_t GetDotsSpacing () const;  ; TEntryList ",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:7724,Modifiability,variab,variable,7724,"1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TParallelCoord ();  Default constructor. ;  ;  TParallelCoord (Long64_t nentries);  Constructor without a reference to a tree, the datas must be added afterwards with TParallelCoord::AddVariable(Double_t*,const char*). ;  ;  TParallelCoord (TTree *tree, Long64_t nentries);  Normal constructor, the datas must be added afterwards with TParallelCoord::AddVariable(Double_t*,const char*). ;  ;  ~TParallelCoord () override;  Destructor. ;  ; void AddSelection (const char *title);  Add a selection. ;  ; void AddVariable (const char *varexp);  Add a variable from an expression. ;  ; void AddVariable (Double_t *val, const char *title="""");  Add a variable. ;  ; void ApplySelectionToTree ();  Apply the current selection to the tree. ;  ; void CleanUpSelections (TParallelCoordRange *range);  Clean up the selections from the ranges which could have been deleted when a variable has been deleted. ;  ; void DeleteSelection (TParallelCoordSelect *sel);  Delete a selection. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute the distance from the TParallelCoord. ;  ; void Draw (Option_t *options="""") override;  Draw the parallel coordinates graph. ;  ; void ExecuteEvent (Int_t entry, Int_t px, Int_t py) override;  Execute the corresponding entry. ;  ; bool GetCandleChart ();  ; Long64_t GetCurrentFirst ();  ; Long64_t GetCurrentN ();  ; TParallelCoordSelect * GetCurrentSelection ();  Return the selection currently being edited. ;  ; bool GetCurveDisplay () const;  ; Int_t GetDotsSpacing () const;  ; TEntryList * GetEntryList (bool sel=true);  Get the whole entry list or one for a selectio",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:7947,Modifiability,variab,variable,7947,"1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TParallelCoord ();  Default constructor. ;  ;  TParallelCoord (Long64_t nentries);  Constructor without a reference to a tree, the datas must be added afterwards with TParallelCoord::AddVariable(Double_t*,const char*). ;  ;  TParallelCoord (TTree *tree, Long64_t nentries);  Normal constructor, the datas must be added afterwards with TParallelCoord::AddVariable(Double_t*,const char*). ;  ;  ~TParallelCoord () override;  Destructor. ;  ; void AddSelection (const char *title);  Add a selection. ;  ; void AddVariable (const char *varexp);  Add a variable from an expression. ;  ; void AddVariable (Double_t *val, const char *title="""");  Add a variable. ;  ; void ApplySelectionToTree ();  Apply the current selection to the tree. ;  ; void CleanUpSelections (TParallelCoordRange *range);  Clean up the selections from the ranges which could have been deleted when a variable has been deleted. ;  ; void DeleteSelection (TParallelCoordSelect *sel);  Delete a selection. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute the distance from the TParallelCoord. ;  ; void Draw (Option_t *options="""") override;  Draw the parallel coordinates graph. ;  ; void ExecuteEvent (Int_t entry, Int_t px, Int_t py) override;  Execute the corresponding entry. ;  ; bool GetCandleChart ();  ; Long64_t GetCurrentFirst ();  ; Long64_t GetCurrentN ();  ; TParallelCoordSelect * GetCurrentSelection ();  Return the selection currently being edited. ;  ; bool GetCurveDisplay () const;  ; Int_t GetDotsSpacing () const;  ; TEntryList * GetEntryList (bool sel=true);  Get the whole entry list or one for a selection. ;  ; bool GetGlobalLogScale ();  ; Double_t GetGlobalMax ();  return the global maximum. ;  ; Double_t GetGlobalMin ();  return the global minimum. ;  ; bool GetGlobalScale ();  ; Color_t GetLine",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:9281,Modifiability,variab,variables,9281,"(Int_t entry, Int_t px, Int_t py) override;  Execute the corresponding entry. ;  ; bool GetCandleChart ();  ; Long64_t GetCurrentFirst ();  ; Long64_t GetCurrentN ();  ; TParallelCoordSelect * GetCurrentSelection ();  Return the selection currently being edited. ;  ; bool GetCurveDisplay () const;  ; Int_t GetDotsSpacing () const;  ; TEntryList * GetEntryList (bool sel=true);  Get the whole entry list or one for a selection. ;  ; bool GetGlobalLogScale ();  ; Double_t GetGlobalMax ();  return the global maximum. ;  ; Double_t GetGlobalMin ();  return the global minimum. ;  ; bool GetGlobalScale ();  ; Color_t GetLineColor ();  ; Width_t GetLineWidth ();  ; Int_t GetNbins ();  get the binning of the histograms. ;  ; Long64_t GetNentries ();  ; UInt_t GetNvar ();  ; TParallelCoordSelect * GetSelection (const char *title);  Get a selection from its title. ;  ; TList * GetSelectList ();  ; TTree * GetTree ();  return the tree if fTree is defined. ;  ; Double_t * GetVariable (const char *var);  Get the variables values from its title. ;  ; Double_t * GetVariable (Int_t i);  Get the variables values from its index. ;  ; TList * GetVarList ();  ; bool GetVertDisplay () const;  ; Int_t GetWeightCut () const;  ; TClass * IsA () const override;  ; void Paint (Option_t *options="""") override;  Paint the parallel coordinates graph. ;  ; bool RemoveVariable (const char *var);  Delete the variable ""vartitle"" from the graph. ;  ; void RemoveVariable (TParallelCoordVar *var);  Delete a variable from the graph. ;  ; void ResetTree ();  Reset the tree entry list to the initial one.. ;  ; void SaveEntryLists (const char *filename="""", bool overwrite=false);  Save the entry lists in a root file ""filename.root"". ;  ; void SavePrimitive (std::ostream &out, Option_t *options) override;  Save the TParallelCoord in a macro. ;  ; void SaveTree (const char *filename="""", bool overwrite=false);  Save the tree in a file if fTreeFileName == """". ;  ; void SetAxisHistogramBinning (Int_t n=100);  Set t",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:9362,Modifiability,variab,variables,9362,"ol GetCandleChart ();  ; Long64_t GetCurrentFirst ();  ; Long64_t GetCurrentN ();  ; TParallelCoordSelect * GetCurrentSelection ();  Return the selection currently being edited. ;  ; bool GetCurveDisplay () const;  ; Int_t GetDotsSpacing () const;  ; TEntryList * GetEntryList (bool sel=true);  Get the whole entry list or one for a selection. ;  ; bool GetGlobalLogScale ();  ; Double_t GetGlobalMax ();  return the global maximum. ;  ; Double_t GetGlobalMin ();  return the global minimum. ;  ; bool GetGlobalScale ();  ; Color_t GetLineColor ();  ; Width_t GetLineWidth ();  ; Int_t GetNbins ();  get the binning of the histograms. ;  ; Long64_t GetNentries ();  ; UInt_t GetNvar ();  ; TParallelCoordSelect * GetSelection (const char *title);  Get a selection from its title. ;  ; TList * GetSelectList ();  ; TTree * GetTree ();  return the tree if fTree is defined. ;  ; Double_t * GetVariable (const char *var);  Get the variables values from its title. ;  ; Double_t * GetVariable (Int_t i);  Get the variables values from its index. ;  ; TList * GetVarList ();  ; bool GetVertDisplay () const;  ; Int_t GetWeightCut () const;  ; TClass * IsA () const override;  ; void Paint (Option_t *options="""") override;  Paint the parallel coordinates graph. ;  ; bool RemoveVariable (const char *var);  Delete the variable ""vartitle"" from the graph. ;  ; void RemoveVariable (TParallelCoordVar *var);  Delete a variable from the graph. ;  ; void ResetTree ();  Reset the tree entry list to the initial one.. ;  ; void SaveEntryLists (const char *filename="""", bool overwrite=false);  Save the entry lists in a root file ""filename.root"". ;  ; void SavePrimitive (std::ostream &out, Option_t *options) override;  Save the TParallelCoord in a macro. ;  ; void SaveTree (const char *filename="""", bool overwrite=false);  Save the tree in a file if fTreeFileName == """". ;  ; void SetAxisHistogramBinning (Int_t n=100);  Set the same histogram axis binning for all axis. ;  ; void SetAxisHistogramHeight (Double",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:9665,Modifiability,variab,variable,9665,"e whole entry list or one for a selection. ;  ; bool GetGlobalLogScale ();  ; Double_t GetGlobalMax ();  return the global maximum. ;  ; Double_t GetGlobalMin ();  return the global minimum. ;  ; bool GetGlobalScale ();  ; Color_t GetLineColor ();  ; Width_t GetLineWidth ();  ; Int_t GetNbins ();  get the binning of the histograms. ;  ; Long64_t GetNentries ();  ; UInt_t GetNvar ();  ; TParallelCoordSelect * GetSelection (const char *title);  Get a selection from its title. ;  ; TList * GetSelectList ();  ; TTree * GetTree ();  return the tree if fTree is defined. ;  ; Double_t * GetVariable (const char *var);  Get the variables values from its title. ;  ; Double_t * GetVariable (Int_t i);  Get the variables values from its index. ;  ; TList * GetVarList ();  ; bool GetVertDisplay () const;  ; Int_t GetWeightCut () const;  ; TClass * IsA () const override;  ; void Paint (Option_t *options="""") override;  Paint the parallel coordinates graph. ;  ; bool RemoveVariable (const char *var);  Delete the variable ""vartitle"" from the graph. ;  ; void RemoveVariable (TParallelCoordVar *var);  Delete a variable from the graph. ;  ; void ResetTree ();  Reset the tree entry list to the initial one.. ;  ; void SaveEntryLists (const char *filename="""", bool overwrite=false);  Save the entry lists in a root file ""filename.root"". ;  ; void SavePrimitive (std::ostream &out, Option_t *options) override;  Save the TParallelCoord in a macro. ;  ; void SaveTree (const char *filename="""", bool overwrite=false);  Save the tree in a file if fTreeFileName == """". ;  ; void SetAxisHistogramBinning (Int_t n=100);  Set the same histogram axis binning for all axis. ;  ; void SetAxisHistogramHeight (Double_t h=0.5);  Set the same histogram axis height for all axis. ;  ; void SetAxisHistogramLineWidth (Int_t lw=2);  Set the same histogram axis line width for all axis. ;  ; void SetCandleChart (bool can);  Set a candle chart display. ;  ; void SetCurrentEntries (TEntryList *entries);  ; void SetCurrent",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:9762,Modifiability,variab,variable,9762,"tGlobalMax ();  return the global maximum. ;  ; Double_t GetGlobalMin ();  return the global minimum. ;  ; bool GetGlobalScale ();  ; Color_t GetLineColor ();  ; Width_t GetLineWidth ();  ; Int_t GetNbins ();  get the binning of the histograms. ;  ; Long64_t GetNentries ();  ; UInt_t GetNvar ();  ; TParallelCoordSelect * GetSelection (const char *title);  Get a selection from its title. ;  ; TList * GetSelectList ();  ; TTree * GetTree ();  return the tree if fTree is defined. ;  ; Double_t * GetVariable (const char *var);  Get the variables values from its title. ;  ; Double_t * GetVariable (Int_t i);  Get the variables values from its index. ;  ; TList * GetVarList ();  ; bool GetVertDisplay () const;  ; Int_t GetWeightCut () const;  ; TClass * IsA () const override;  ; void Paint (Option_t *options="""") override;  Paint the parallel coordinates graph. ;  ; bool RemoveVariable (const char *var);  Delete the variable ""vartitle"" from the graph. ;  ; void RemoveVariable (TParallelCoordVar *var);  Delete a variable from the graph. ;  ; void ResetTree ();  Reset the tree entry list to the initial one.. ;  ; void SaveEntryLists (const char *filename="""", bool overwrite=false);  Save the entry lists in a root file ""filename.root"". ;  ; void SavePrimitive (std::ostream &out, Option_t *options) override;  Save the TParallelCoord in a macro. ;  ; void SaveTree (const char *filename="""", bool overwrite=false);  Save the tree in a file if fTreeFileName == """". ;  ; void SetAxisHistogramBinning (Int_t n=100);  Set the same histogram axis binning for all axis. ;  ; void SetAxisHistogramHeight (Double_t h=0.5);  Set the same histogram axis height for all axis. ;  ; void SetAxisHistogramLineWidth (Int_t lw=2);  Set the same histogram axis line width for all axis. ;  ; void SetCandleChart (bool can);  Set a candle chart display. ;  ; void SetCurrentEntries (TEntryList *entries);  ; void SetCurrentFirst (Long64_t);  Set the first entry to be displayed. ;  ; void SetCurrentN (Long64_t);",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:11198,Modifiability,variab,variables,11198,"e if fTreeFileName == """". ;  ; void SetAxisHistogramBinning (Int_t n=100);  Set the same histogram axis binning for all axis. ;  ; void SetAxisHistogramHeight (Double_t h=0.5);  Set the same histogram axis height for all axis. ;  ; void SetAxisHistogramLineWidth (Int_t lw=2);  Set the same histogram axis line width for all axis. ;  ; void SetCandleChart (bool can);  Set a candle chart display. ;  ; void SetCurrentEntries (TEntryList *entries);  ; void SetCurrentFirst (Long64_t);  Set the first entry to be displayed. ;  ; void SetCurrentN (Long64_t);  Set the number of entry to be displayed. ;  ; TParallelCoordSelect * SetCurrentSelection (const char *title);  Set the selection being edited. ;  ; void SetCurrentSelection (TParallelCoordSelect *sel);  Set the selection being edited. ;  ; virtual void SetCurveDisplay (bool curve=true);  ; void SetDotsSpacing (Int_t s=0);  Set dots spacing. ;  ; void SetGlobalLogScale (bool);  All axes in log scale. ;  ; void SetGlobalMax (Double_t max);  Force all variables to adopt the same max. ;  ; void SetGlobalMin (Double_t min);  Force all variables to adopt the same min. ;  ; void SetGlobalScale (bool gl);  Constraint all axes to the same scale. ;  ; void SetInitEntries (TEntryList *entries);  ; void SetLineColor (Color_t col);  ; void SetLineWidth (Width_t wid);  ; void SetLiveRangesUpdate (bool);  If true, the pad is updated while the motion of a dragged range. ;  ; void SetNentries (Long64_t n);  ; void SetTree (TTree *tree);  ; void SetVertDisplay (bool vert=true);  Set the vertical or horizontal display. ;  ; void SetWeightCut (Int_t w=0);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnzoomAll ();  Unzoom all variables. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, co",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:11281,Modifiability,variab,variables,11281," same histogram axis binning for all axis. ;  ; void SetAxisHistogramHeight (Double_t h=0.5);  Set the same histogram axis height for all axis. ;  ; void SetAxisHistogramLineWidth (Int_t lw=2);  Set the same histogram axis line width for all axis. ;  ; void SetCandleChart (bool can);  Set a candle chart display. ;  ; void SetCurrentEntries (TEntryList *entries);  ; void SetCurrentFirst (Long64_t);  Set the first entry to be displayed. ;  ; void SetCurrentN (Long64_t);  Set the number of entry to be displayed. ;  ; TParallelCoordSelect * SetCurrentSelection (const char *title);  Set the selection being edited. ;  ; void SetCurrentSelection (TParallelCoordSelect *sel);  Set the selection being edited. ;  ; virtual void SetCurveDisplay (bool curve=true);  ; void SetDotsSpacing (Int_t s=0);  Set dots spacing. ;  ; void SetGlobalLogScale (bool);  All axes in log scale. ;  ; void SetGlobalMax (Double_t max);  Force all variables to adopt the same max. ;  ; void SetGlobalMin (Double_t min);  Force all variables to adopt the same min. ;  ; void SetGlobalScale (bool gl);  Constraint all axes to the same scale. ;  ; void SetInitEntries (TEntryList *entries);  ; void SetLineColor (Color_t col);  ; void SetLineWidth (Width_t wid);  ; void SetLiveRangesUpdate (bool);  If true, the pad is updated while the motion of a dragged range. ;  ; void SetNentries (Long64_t n);  ; void SetTree (TTree *tree);  ; void SetVertDisplay (bool vert=true);  Set the vertical or horizontal display. ;  ; void SetWeightCut (Int_t w=0);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnzoomAll ();  Unzoom all variables. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Op",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:11973,Modifiability,variab,variables,11973,"lCoordSelect *sel);  Set the selection being edited. ;  ; virtual void SetCurveDisplay (bool curve=true);  ; void SetDotsSpacing (Int_t s=0);  Set dots spacing. ;  ; void SetGlobalLogScale (bool);  All axes in log scale. ;  ; void SetGlobalMax (Double_t max);  Force all variables to adopt the same max. ;  ; void SetGlobalMin (Double_t min);  Force all variables to adopt the same min. ;  ; void SetGlobalScale (bool gl);  Constraint all axes to the same scale. ;  ; void SetInitEntries (TEntryList *entries);  ; void SetLineColor (Color_t col);  ; void SetLineWidth (Width_t wid);  ; void SetLiveRangesUpdate (bool);  If true, the pad is updated while the motion of a dragged range. ;  ; void SetNentries (Long64_t n);  ; void SetTree (TTree *tree);  ; void SetVertDisplay (bool vert=true);  Set the vertical or horizontal display. ;  ; void SetWeightCut (Int_t w=0);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnzoomAll ();  Unzoom all variables. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSor",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:12014,Modifiability,inherit,inherited,12014,";  Set dots spacing. ;  ; void SetGlobalLogScale (bool);  All axes in log scale. ;  ; void SetGlobalMax (Double_t max);  Force all variables to adopt the same max. ;  ; void SetGlobalMin (Double_t min);  Force all variables to adopt the same min. ;  ; void SetGlobalScale (bool gl);  Constraint all axes to the same scale. ;  ; void SetInitEntries (TEntryList *entries);  ; void SetLineColor (Color_t col);  ; void SetLineWidth (Width_t wid);  ; void SetLiveRangesUpdate (bool);  If true, the pad is updated while the motion of a dragged range. ;  ; void SetNentries (Long64_t n);  ; void SetTree (TTree *tree);  ; void SetVertDisplay (bool vert=true);  Set the vertical or horizontal display. ;  ; void SetWeightCut (Int_t w=0);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnzoomAll ();  Unzoom all variables. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:13642,Modifiability,inherit,inherited,13642,"ual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * Dra",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:14537,Modifiability,inherit,inheritance,14537,"ject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ;",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:16416,Modifiability,inherit,inherits,16416,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:16533,Modifiability,inherit,inherits,16533,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:19949,Modifiability,variab,variables,19949,"n="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static void BuildParallelCoord (TSelectorDraw *selector, bool candle);  Call constructor and add the variables. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SetEntryList (TParallelCoord *para, TEntryList *enlist);  Set the entry lists of ""para"". ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:20258,Modifiability,inherit,inherited,20258,"ng (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static void BuildParallelCoord (TSelectorDraw *selector, bool candle);  Call constructor and add the variables. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SetEntryList (TParallelCoord *para, TEntryList *enlist);  Set the entry lists of ""para"". ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; void Init ();  Initialise the data members of TParallelCoord. ;  ; void PaintEntries (TParallelCoordSelect *sel=nullptr);  Loop over the entries and paint them. ;  ; void SetAxesPosition ();  Update the position of the axes. ;  . Private Attributes; TGaxis * fCandleAxis;  ! An axis used when displaying a candle chart. ;  ; TEntryList * fCurrentEntries;  -> Current selected entries in the tree. ;  ; Long64_t fCurrentFirst;  First entry to display. ;  ; Long64_t fCurrentN;  Number o",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:20468,Modifiability,inherit,inherited,20468,"ng (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static void BuildParallelCoord (TSelectorDraw *selector, bool candle);  Call constructor and add the variables. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SetEntryList (TParallelCoord *para, TEntryList *enlist);  Set the entry lists of ""para"". ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; void Init ();  Initialise the data members of TParallelCoord. ;  ; void PaintEntries (TParallelCoordSelect *sel=nullptr);  Loop over the entries and paint them. ;  ; void SetAxesPosition ();  Update the position of the axes. ;  . Private Attributes; TGaxis * fCandleAxis;  ! An axis used when displaying a candle chart. ;  ; TEntryList * fCurrentEntries;  -> Current selected entries in the tree. ;  ; Long64_t fCurrentFirst;  First entry to display. ;  ; Long64_t fCurrentN;  Number o",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:21897,Modifiability,variab,variables,21897,"t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; void Init ();  Initialise the data members of TParallelCoord. ;  ; void PaintEntries (TParallelCoordSelect *sel=nullptr);  Loop over the entries and paint them. ;  ; void SetAxesPosition ();  Update the position of the axes. ;  . Private Attributes; TGaxis * fCandleAxis;  ! An axis used when displaying a candle chart. ;  ; TEntryList * fCurrentEntries;  -> Current selected entries in the tree. ;  ; Long64_t fCurrentFirst;  First entry to display. ;  ; Long64_t fCurrentN;  Number of entries to display. ;  ; TParallelCoordSelect * fCurrentSelection;  ! Current Selection being edited. ;  ; Int_t fDotsSpacing;  Spacing between dots to draw the entries. ;  ; TEntryList * fInitEntries;  -> Selected entries when TParallelCoord first initialized. ;  ; Color_t fLineColor;  entries line color. ;  ; Width_t fLineWidth;  entries line width. ;  ; Long64_t fNentries;  Number of entries;. ;  ; UInt_t fNvar;  Number of variables. ;  ; TList * fSelectList;  List of selections over the variables. ;  ; TTree * fTree;  ! Pointer to the TTree. ;  ; TString fTreeFileName;  Name of the file containing the tree. ;  ; TString fTreeName;  Name of the tree. ;  ; TList * fVarList;  List of the variables. ;  ; Int_t fWeightCut;  Specify a cut on the entries from their weight (see TParallelCoordVar::GetEvtWeight(Long64_t)) ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TParallelCoord.h>. Inheritance diagram for TParallelCoord:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enu",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:21963,Modifiability,variab,variables,21963,"ctTable. ;  . Private Member Functions; void Init ();  Initialise the data members of TParallelCoord. ;  ; void PaintEntries (TParallelCoordSelect *sel=nullptr);  Loop over the entries and paint them. ;  ; void SetAxesPosition ();  Update the position of the axes. ;  . Private Attributes; TGaxis * fCandleAxis;  ! An axis used when displaying a candle chart. ;  ; TEntryList * fCurrentEntries;  -> Current selected entries in the tree. ;  ; Long64_t fCurrentFirst;  First entry to display. ;  ; Long64_t fCurrentN;  Number of entries to display. ;  ; TParallelCoordSelect * fCurrentSelection;  ! Current Selection being edited. ;  ; Int_t fDotsSpacing;  Spacing between dots to draw the entries. ;  ; TEntryList * fInitEntries;  -> Selected entries when TParallelCoord first initialized. ;  ; Color_t fLineColor;  entries line color. ;  ; Width_t fLineWidth;  entries line width. ;  ; Long64_t fNentries;  Number of entries;. ;  ; UInt_t fNvar;  Number of variables. ;  ; TList * fSelectList;  List of selections over the variables. ;  ; TTree * fTree;  ! Pointer to the TTree. ;  ; TString fTreeFileName;  Name of the file containing the tree. ;  ; TString fTreeName;  Name of the tree. ;  ; TList * fVarList;  List of the variables. ;  ; Int_t fWeightCut;  Specify a cut on the entries from their weight (see TParallelCoordVar::GetEvtWeight(Long64_t)) ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TParallelCoord.h>. Inheritance diagram for TParallelCoord:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TParallel",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:22165,Modifiability,variab,variables,22165,"SetAxesPosition ();  Update the position of the axes. ;  . Private Attributes; TGaxis * fCandleAxis;  ! An axis used when displaying a candle chart. ;  ; TEntryList * fCurrentEntries;  -> Current selected entries in the tree. ;  ; Long64_t fCurrentFirst;  First entry to display. ;  ; Long64_t fCurrentN;  Number of entries to display. ;  ; TParallelCoordSelect * fCurrentSelection;  ! Current Selection being edited. ;  ; Int_t fDotsSpacing;  Spacing between dots to draw the entries. ;  ; TEntryList * fInitEntries;  -> Selected entries when TParallelCoord first initialized. ;  ; Color_t fLineColor;  entries line color. ;  ; Width_t fLineWidth;  entries line width. ;  ; Long64_t fNentries;  Number of entries;. ;  ; UInt_t fNvar;  Number of variables. ;  ; TList * fSelectList;  List of selections over the variables. ;  ; TTree * fTree;  ! Pointer to the TTree. ;  ; TString fTreeFileName;  Name of the file containing the tree. ;  ; TString fTreeName;  Name of the tree. ;  ; TList * fVarList;  List of the variables. ;  ; Int_t fWeightCut;  Specify a cut on the entries from their weight (see TParallelCoordVar::GetEvtWeight(Long64_t)) ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TParallelCoord.h>. Inheritance diagram for TParallelCoord:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TParallelCoord::EStatusBits. EnumeratorkVertDisplay If the axes are drawn vertically, false if horizontally. . kCurveDisplay If the polylines are replaced by interpolated curves. . kPaintEntries To paint all TParallelCoor",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:22347,Modifiability,inherit,inherited,22347,"rentN;  Number of entries to display. ;  ; TParallelCoordSelect * fCurrentSelection;  ! Current Selection being edited. ;  ; Int_t fDotsSpacing;  Spacing between dots to draw the entries. ;  ; TEntryList * fInitEntries;  -> Selected entries when TParallelCoord first initialized. ;  ; Color_t fLineColor;  entries line color. ;  ; Width_t fLineWidth;  entries line width. ;  ; Long64_t fNentries;  Number of entries;. ;  ; UInt_t fNvar;  Number of variables. ;  ; TList * fSelectList;  List of selections over the variables. ;  ; TTree * fTree;  ! Pointer to the TTree. ;  ; TString fTreeFileName;  Name of the file containing the tree. ;  ; TString fTreeName;  Name of the tree. ;  ; TList * fVarList;  List of the variables. ;  ; Int_t fWeightCut;  Specify a cut on the entries from their weight (see TParallelCoordVar::GetEvtWeight(Long64_t)) ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TParallelCoord.h>. Inheritance diagram for TParallelCoord:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TParallelCoord::EStatusBits. EnumeratorkVertDisplay If the axes are drawn vertically, false if horizontally. . kCurveDisplay If the polylines are replaced by interpolated curves. . kPaintEntries To paint all TParallelCoord entries. . kLiveUpdate To paint the entries when being modified. . kGlobalScale Every variable is on the same scale. . kCandleChart To produce a candle chart. . kGlobalLogScale Every variable in log scale. . Definition at line 30 of file TParallelCoord.h. Constructor & Destructor Documentation. ",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:22446,Modifiability,inherit,inherited,22446,"rentN;  Number of entries to display. ;  ; TParallelCoordSelect * fCurrentSelection;  ! Current Selection being edited. ;  ; Int_t fDotsSpacing;  Spacing between dots to draw the entries. ;  ; TEntryList * fInitEntries;  -> Selected entries when TParallelCoord first initialized. ;  ; Color_t fLineColor;  entries line color. ;  ; Width_t fLineWidth;  entries line width. ;  ; Long64_t fNentries;  Number of entries;. ;  ; UInt_t fNvar;  Number of variables. ;  ; TList * fSelectList;  List of selections over the variables. ;  ; TTree * fTree;  ! Pointer to the TTree. ;  ; TString fTreeFileName;  Name of the file containing the tree. ;  ; TString fTreeName;  Name of the tree. ;  ; TList * fVarList;  List of the variables. ;  ; Int_t fWeightCut;  Specify a cut on the entries from their weight (see TParallelCoordVar::GetEvtWeight(Long64_t)) ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TParallelCoord.h>. Inheritance diagram for TParallelCoord:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TParallelCoord::EStatusBits. EnumeratorkVertDisplay If the axes are drawn vertically, false if horizontally. . kCurveDisplay If the polylines are replaced by interpolated curves. . kPaintEntries To paint all TParallelCoord entries. . kLiveUpdate To paint the entries when being modified. . kGlobalScale Every variable is on the same scale. . kCandleChart To produce a candle chart. . kGlobalLogScale Every variable in log scale. . Definition at line 30 of file TParallelCoord.h. Constructor & Destructor Documentation. ",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:22651,Modifiability,inherit,inherited,22651,"fInitEntries;  -> Selected entries when TParallelCoord first initialized. ;  ; Color_t fLineColor;  entries line color. ;  ; Width_t fLineWidth;  entries line width. ;  ; Long64_t fNentries;  Number of entries;. ;  ; UInt_t fNvar;  Number of variables. ;  ; TList * fSelectList;  List of selections over the variables. ;  ; TTree * fTree;  ! Pointer to the TTree. ;  ; TString fTreeFileName;  Name of the file containing the tree. ;  ; TString fTreeName;  Name of the tree. ;  ; TList * fVarList;  List of the variables. ;  ; Int_t fWeightCut;  Specify a cut on the entries from their weight (see TParallelCoordVar::GetEvtWeight(Long64_t)) ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TParallelCoord.h>. Inheritance diagram for TParallelCoord:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TParallelCoord::EStatusBits. EnumeratorkVertDisplay If the axes are drawn vertically, false if horizontally. . kCurveDisplay If the polylines are replaced by interpolated curves. . kPaintEntries To paint all TParallelCoord entries. . kLiveUpdate To paint the entries when being modified. . kGlobalScale Every variable is on the same scale. . kCandleChart To produce a candle chart. . kGlobalLogScale Every variable in log scale. . Definition at line 30 of file TParallelCoord.h. Constructor & Destructor Documentation. ◆ TParallelCoord() [1/3]. TParallelCoord::TParallelCoord ; (; ). Default constructor. ; Definition at line 130 of file TParallelCoord.cxx. ◆ TParallelCoord() [2/3]. TParallelCoord::TParallelCoord ; (; Long",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:23240,Modifiability,variab,variable,23240,"t (see TParallelCoordVar::GetEvtWeight(Long64_t)) ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TParallelCoord.h>. Inheritance diagram for TParallelCoord:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TParallelCoord::EStatusBits. EnumeratorkVertDisplay If the axes are drawn vertically, false if horizontally. . kCurveDisplay If the polylines are replaced by interpolated curves. . kPaintEntries To paint all TParallelCoord entries. . kLiveUpdate To paint the entries when being modified. . kGlobalScale Every variable is on the same scale. . kCandleChart To produce a candle chart. . kGlobalLogScale Every variable in log scale. . Definition at line 30 of file TParallelCoord.h. Constructor & Destructor Documentation. ◆ TParallelCoord() [1/3]. TParallelCoord::TParallelCoord ; (; ). Default constructor. ; Definition at line 130 of file TParallelCoord.cxx. ◆ TParallelCoord() [2/3]. TParallelCoord::TParallelCoord ; (; Long64_t ; nentries). Constructor without a reference to a tree, the datas must be added afterwards with TParallelCoord::AddVariable(Double_t*,const char*). ; Definition at line 141 of file TParallelCoord.cxx. ◆ TParallelCoord() [3/3]. TParallelCoord::TParallelCoord ; (; TTree * ; tree, . Long64_t ; nentries . ). Normal constructor, the datas must be added afterwards with TParallelCoord::AddVariable(Double_t*,const char*). ; Definition at line 156 of file TParallelCoord.cxx. ◆ ~TParallelCoord(). TParallelCoord::~TParallelCoord ; (; ). override . Destructor. ; Definition at line 181 of fi",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:23337,Modifiability,variab,variable,23337,"cted Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TParallelCoord.h>. Inheritance diagram for TParallelCoord:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TParallelCoord::EStatusBits. EnumeratorkVertDisplay If the axes are drawn vertically, false if horizontally. . kCurveDisplay If the polylines are replaced by interpolated curves. . kPaintEntries To paint all TParallelCoord entries. . kLiveUpdate To paint the entries when being modified. . kGlobalScale Every variable is on the same scale. . kCandleChart To produce a candle chart. . kGlobalLogScale Every variable in log scale. . Definition at line 30 of file TParallelCoord.h. Constructor & Destructor Documentation. ◆ TParallelCoord() [1/3]. TParallelCoord::TParallelCoord ; (; ). Default constructor. ; Definition at line 130 of file TParallelCoord.cxx. ◆ TParallelCoord() [2/3]. TParallelCoord::TParallelCoord ; (; Long64_t ; nentries). Constructor without a reference to a tree, the datas must be added afterwards with TParallelCoord::AddVariable(Double_t*,const char*). ; Definition at line 141 of file TParallelCoord.cxx. ◆ TParallelCoord() [3/3]. TParallelCoord::TParallelCoord ; (; TTree * ; tree, . Long64_t ; nentries . ). Normal constructor, the datas must be added afterwards with TParallelCoord::AddVariable(Double_t*,const char*). ; Definition at line 156 of file TParallelCoord.cxx. ◆ ~TParallelCoord(). TParallelCoord::~TParallelCoord ; (; ). override . Destructor. ; Definition at line 181 of file TParallelCoord.cxx. Member Function Documentation. ◆ AddSelection(). void TParallelCoord:",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:24540,Modifiability,variab,variable,24540,"t line 130 of file TParallelCoord.cxx. ◆ TParallelCoord() [2/3]. TParallelCoord::TParallelCoord ; (; Long64_t ; nentries). Constructor without a reference to a tree, the datas must be added afterwards with TParallelCoord::AddVariable(Double_t*,const char*). ; Definition at line 141 of file TParallelCoord.cxx. ◆ TParallelCoord() [3/3]. TParallelCoord::TParallelCoord ; (; TTree * ; tree, . Long64_t ; nentries . ). Normal constructor, the datas must be added afterwards with TParallelCoord::AddVariable(Double_t*,const char*). ; Definition at line 156 of file TParallelCoord.cxx. ◆ ~TParallelCoord(). TParallelCoord::~TParallelCoord ; (; ). override . Destructor. ; Definition at line 181 of file TParallelCoord.cxx. Member Function Documentation. ◆ AddSelection(). void TParallelCoord::AddSelection ; (; const char * ; title). Add a selection. ; Definition at line 242 of file TParallelCoord.cxx. ◆ AddVariable() [1/2]. void TParallelCoord::AddVariable ; (; const char * ; varexp). Add a variable from an expression. ; Definition at line 209 of file TParallelCoord.cxx. ◆ AddVariable() [2/2]. void TParallelCoord::AddVariable ; (; Double_t * ; val, . const char * ; title = """" . ). Add a variable. ; Definition at line 199 of file TParallelCoord.cxx. ◆ ApplySelectionToTree(). void TParallelCoord::ApplySelectionToTree ; (; ). Apply the current selection to the tree. ; Definition at line 252 of file TParallelCoord.cxx. ◆ BuildParallelCoord(). void TParallelCoord::BuildParallelCoord ; (; TSelectorDraw * ; selector, . bool ; candle . ). static . Call constructor and add the variables. ; Definition at line 288 of file TParallelCoord.cxx. ◆ Class(). static TClass * TParallelCoord::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TParallelCoord::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TParallelCoord::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definit",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:24740,Modifiability,variab,variable,24740,"fterwards with TParallelCoord::AddVariable(Double_t*,const char*). ; Definition at line 141 of file TParallelCoord.cxx. ◆ TParallelCoord() [3/3]. TParallelCoord::TParallelCoord ; (; TTree * ; tree, . Long64_t ; nentries . ). Normal constructor, the datas must be added afterwards with TParallelCoord::AddVariable(Double_t*,const char*). ; Definition at line 156 of file TParallelCoord.cxx. ◆ ~TParallelCoord(). TParallelCoord::~TParallelCoord ; (; ). override . Destructor. ; Definition at line 181 of file TParallelCoord.cxx. Member Function Documentation. ◆ AddSelection(). void TParallelCoord::AddSelection ; (; const char * ; title). Add a selection. ; Definition at line 242 of file TParallelCoord.cxx. ◆ AddVariable() [1/2]. void TParallelCoord::AddVariable ; (; const char * ; varexp). Add a variable from an expression. ; Definition at line 209 of file TParallelCoord.cxx. ◆ AddVariable() [2/2]. void TParallelCoord::AddVariable ; (; Double_t * ; val, . const char * ; title = """" . ). Add a variable. ; Definition at line 199 of file TParallelCoord.cxx. ◆ ApplySelectionToTree(). void TParallelCoord::ApplySelectionToTree ; (; ). Apply the current selection to the tree. ; Definition at line 252 of file TParallelCoord.cxx. ◆ BuildParallelCoord(). void TParallelCoord::BuildParallelCoord ; (; TSelectorDraw * ; selector, . bool ; candle . ). static . Call constructor and add the variables. ; Definition at line 288 of file TParallelCoord.cxx. ◆ Class(). static TClass * TParallelCoord::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TParallelCoord::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TParallelCoord::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 136 of file TParallelCoord.h. ◆ CleanUpSelections(). void TParallelCoord::CleanUpSelections ; (; TParallelCoordRange * ; range). Clean up the selections from the ranges which cou",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:25129,Modifiability,variab,variables,25129,"lCoord.cxx. ◆ ~TParallelCoord(). TParallelCoord::~TParallelCoord ; (; ). override . Destructor. ; Definition at line 181 of file TParallelCoord.cxx. Member Function Documentation. ◆ AddSelection(). void TParallelCoord::AddSelection ; (; const char * ; title). Add a selection. ; Definition at line 242 of file TParallelCoord.cxx. ◆ AddVariable() [1/2]. void TParallelCoord::AddVariable ; (; const char * ; varexp). Add a variable from an expression. ; Definition at line 209 of file TParallelCoord.cxx. ◆ AddVariable() [2/2]. void TParallelCoord::AddVariable ; (; Double_t * ; val, . const char * ; title = """" . ). Add a variable. ; Definition at line 199 of file TParallelCoord.cxx. ◆ ApplySelectionToTree(). void TParallelCoord::ApplySelectionToTree ; (; ). Apply the current selection to the tree. ; Definition at line 252 of file TParallelCoord.cxx. ◆ BuildParallelCoord(). void TParallelCoord::BuildParallelCoord ; (; TSelectorDraw * ; selector, . bool ; candle . ). static . Call constructor and add the variables. ; Definition at line 288 of file TParallelCoord.cxx. ◆ Class(). static TClass * TParallelCoord::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TParallelCoord::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TParallelCoord::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 136 of file TParallelCoord.h. ◆ CleanUpSelections(). void TParallelCoord::CleanUpSelections ; (; TParallelCoordRange * ; range). Clean up the selections from the ranges which could have been deleted when a variable has been deleted. ; Definition at line 313 of file TParallelCoord.cxx. ◆ DeclFileName(). static const char * TParallelCoord::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 136 of file TParallelCoord.h. ◆ DeleteSelection(). void TParallelCoord::DeleteSelection ; (; TParallel",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:25769,Modifiability,variab,variable,25769,"iable. ; Definition at line 199 of file TParallelCoord.cxx. ◆ ApplySelectionToTree(). void TParallelCoord::ApplySelectionToTree ; (; ). Apply the current selection to the tree. ; Definition at line 252 of file TParallelCoord.cxx. ◆ BuildParallelCoord(). void TParallelCoord::BuildParallelCoord ; (; TSelectorDraw * ; selector, . bool ; candle . ). static . Call constructor and add the variables. ; Definition at line 288 of file TParallelCoord.cxx. ◆ Class(). static TClass * TParallelCoord::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TParallelCoord::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TParallelCoord::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 136 of file TParallelCoord.h. ◆ CleanUpSelections(). void TParallelCoord::CleanUpSelections ; (; TParallelCoordRange * ; range). Clean up the selections from the ranges which could have been deleted when a variable has been deleted. ; Definition at line 313 of file TParallelCoord.cxx. ◆ DeclFileName(). static const char * TParallelCoord::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 136 of file TParallelCoord.h. ◆ DeleteSelection(). void TParallelCoord::DeleteSelection ; (; TParallelCoordSelect * ; sel). Delete a selection. ; Definition at line 325 of file TParallelCoord.cxx. ◆ DistancetoPrimitive(). Int_t TParallelCoord::DistancetoPrimitive ; (; Int_t ; px, . Int_t ; py . ). overridevirtual . Compute the distance from the TParallelCoord. ; Reimplemented from TObject.; Definition at line 336 of file TParallelCoord.cxx. ◆ Draw(). void TParallelCoord::Draw ; (; Option_t * ; options = """"). overridevirtual . Draw the parallel coordinates graph. ; Reimplemented from TObject.; Definition at line 359 of file TParallelCoord.cxx. ◆ ExecuteEvent(). void TParallelCoord::ExecuteEvent ; (; Int_t ; entry, . I",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:29659,Modifiability,variab,variables,29659,"allelCoord.h. ◆ GetNbins(). Int_t TParallelCoord::GetNbins ; (; ). get the binning of the histograms. ; Definition at line 502 of file TParallelCoord.cxx. ◆ GetNentries(). Long64_t TParallelCoord::GetNentries ; (; ). inline . Definition at line 96 of file TParallelCoord.h. ◆ GetNvar(). UInt_t TParallelCoord::GetNvar ; (; ). inline . Definition at line 95 of file TParallelCoord.h. ◆ GetSelection(). TParallelCoordSelect * TParallelCoord::GetSelection ; (; const char * ; title). Get a selection from its title. ; Definition at line 510 of file TParallelCoord.cxx. ◆ GetSelectList(). TList * TParallelCoord::GetSelectList ; (; ). inline . Definition at line 97 of file TParallelCoord.h. ◆ GetTree(). TTree * TParallelCoord::GetTree ; (; ). return the tree if fTree is defined. ; If not, the method try to load the tree from fTreeFileName. ; Definition at line 522 of file TParallelCoord.cxx. ◆ GetVariable() [1/2]. Double_t * TParallelCoord::GetVariable ; (; const char * ; var). Get the variables values from its title. ; Definition at line 564 of file TParallelCoord.cxx. ◆ GetVariable() [2/2]. Double_t * TParallelCoord::GetVariable ; (; Int_t ; i). Get the variables values from its index. ; Definition at line 576 of file TParallelCoord.cxx. ◆ GetVarList(). TList * TParallelCoord::GetVarList ; (; ). inline . Definition at line 102 of file TParallelCoord.h. ◆ GetVertDisplay(). bool TParallelCoord::GetVertDisplay ; (; ); const. inline . Definition at line 103 of file TParallelCoord.h. ◆ GetWeightCut(). Int_t TParallelCoord::GetWeightCut ; (; ); const. inline . Definition at line 104 of file TParallelCoord.h. ◆ Init(). void TParallelCoord::Init ; (; ). private . Initialise the data members of TParallelCoord. ; Definition at line 585 of file TParallelCoord.cxx. ◆ IsA(). TClass * TParallelCoord::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TNamed.; Definition at line 136 of file TParallelCoord.h. ◆ Paint(). void TParallelCoord:",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:29832,Modifiability,variab,variables,29832,"ong64_t TParallelCoord::GetNentries ; (; ). inline . Definition at line 96 of file TParallelCoord.h. ◆ GetNvar(). UInt_t TParallelCoord::GetNvar ; (; ). inline . Definition at line 95 of file TParallelCoord.h. ◆ GetSelection(). TParallelCoordSelect * TParallelCoord::GetSelection ; (; const char * ; title). Get a selection from its title. ; Definition at line 510 of file TParallelCoord.cxx. ◆ GetSelectList(). TList * TParallelCoord::GetSelectList ; (; ). inline . Definition at line 97 of file TParallelCoord.h. ◆ GetTree(). TTree * TParallelCoord::GetTree ; (; ). return the tree if fTree is defined. ; If not, the method try to load the tree from fTreeFileName. ; Definition at line 522 of file TParallelCoord.cxx. ◆ GetVariable() [1/2]. Double_t * TParallelCoord::GetVariable ; (; const char * ; var). Get the variables values from its title. ; Definition at line 564 of file TParallelCoord.cxx. ◆ GetVariable() [2/2]. Double_t * TParallelCoord::GetVariable ; (; Int_t ; i). Get the variables values from its index. ; Definition at line 576 of file TParallelCoord.cxx. ◆ GetVarList(). TList * TParallelCoord::GetVarList ; (; ). inline . Definition at line 102 of file TParallelCoord.h. ◆ GetVertDisplay(). bool TParallelCoord::GetVertDisplay ; (; ); const. inline . Definition at line 103 of file TParallelCoord.h. ◆ GetWeightCut(). Int_t TParallelCoord::GetWeightCut ; (; ); const. inline . Definition at line 104 of file TParallelCoord.h. ◆ Init(). void TParallelCoord::Init ; (; ). private . Initialise the data members of TParallelCoord. ; Definition at line 585 of file TParallelCoord.cxx. ◆ IsA(). TClass * TParallelCoord::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TNamed.; Definition at line 136 of file TParallelCoord.h. ◆ Paint(). void TParallelCoord::Paint ; (; Option_t * ; options = """"). overridevirtual . Paint the parallel coordinates graph. ; Reimplemented from TObject.; Definition at line 616 of file TParallelCoord.",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:31147,Modifiability,variab,variable,31147,"rd.h. ◆ GetWeightCut(). Int_t TParallelCoord::GetWeightCut ; (; ); const. inline . Definition at line 104 of file TParallelCoord.h. ◆ Init(). void TParallelCoord::Init ; (; ). private . Initialise the data members of TParallelCoord. ; Definition at line 585 of file TParallelCoord.cxx. ◆ IsA(). TClass * TParallelCoord::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TNamed.; Definition at line 136 of file TParallelCoord.h. ◆ Paint(). void TParallelCoord::Paint ; (; Option_t * ; options = """"). overridevirtual . Paint the parallel coordinates graph. ; Reimplemented from TObject.; Definition at line 616 of file TParallelCoord.cxx. ◆ PaintEntries(). void TParallelCoord::PaintEntries ; (; TParallelCoordSelect * ; sel = nullptr). private . Loop over the entries and paint them. ; Definition at line 645 of file TParallelCoord.cxx. ◆ RemoveVariable() [1/2]. bool TParallelCoord::RemoveVariable ; (; const char * ; var). Delete the variable ""vartitle"" from the graph. ; Definition at line 739 of file TParallelCoord.cxx. ◆ RemoveVariable() [2/2]. void TParallelCoord::RemoveVariable ; (; TParallelCoordVar * ; var). Delete a variable from the graph. ; Definition at line 729 of file TParallelCoord.cxx. ◆ ResetTree(). void TParallelCoord::ResetTree ; (; ). Reset the tree entry list to the initial one.. ; Definition at line 759 of file TParallelCoord.cxx. ◆ SaveEntryLists(). void TParallelCoord::SaveEntryLists ; (; const char * ; filename = """", . bool ; overwrite = false . ). Save the entry lists in a root file ""filename.root"". ; Definition at line 791 of file TParallelCoord.cxx. ◆ SavePrimitive(). void TParallelCoord::SavePrimitive ; (; std::ostream & ; out, . Option_t * ; options . ). overridevirtual . Save the TParallelCoord in a macro. ; Reimplemented from TObject.; Definition at line 814 of file TParallelCoord.cxx. ◆ SaveTree(). void TParallelCoord::SaveTree ; (; const char * ; filename = """", . bool ; overwrite = false . ). Sa",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:31340,Modifiability,variab,variable,31340,"tialise the data members of TParallelCoord. ; Definition at line 585 of file TParallelCoord.cxx. ◆ IsA(). TClass * TParallelCoord::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TNamed.; Definition at line 136 of file TParallelCoord.h. ◆ Paint(). void TParallelCoord::Paint ; (; Option_t * ; options = """"). overridevirtual . Paint the parallel coordinates graph. ; Reimplemented from TObject.; Definition at line 616 of file TParallelCoord.cxx. ◆ PaintEntries(). void TParallelCoord::PaintEntries ; (; TParallelCoordSelect * ; sel = nullptr). private . Loop over the entries and paint them. ; Definition at line 645 of file TParallelCoord.cxx. ◆ RemoveVariable() [1/2]. bool TParallelCoord::RemoveVariable ; (; const char * ; var). Delete the variable ""vartitle"" from the graph. ; Definition at line 739 of file TParallelCoord.cxx. ◆ RemoveVariable() [2/2]. void TParallelCoord::RemoveVariable ; (; TParallelCoordVar * ; var). Delete a variable from the graph. ; Definition at line 729 of file TParallelCoord.cxx. ◆ ResetTree(). void TParallelCoord::ResetTree ; (; ). Reset the tree entry list to the initial one.. ; Definition at line 759 of file TParallelCoord.cxx. ◆ SaveEntryLists(). void TParallelCoord::SaveEntryLists ; (; const char * ; filename = """", . bool ; overwrite = false . ). Save the entry lists in a root file ""filename.root"". ; Definition at line 791 of file TParallelCoord.cxx. ◆ SavePrimitive(). void TParallelCoord::SavePrimitive ; (; std::ostream & ; out, . Option_t * ; options . ). overridevirtual . Save the TParallelCoord in a macro. ; Reimplemented from TObject.; Definition at line 814 of file TParallelCoord.cxx. ◆ SaveTree(). void TParallelCoord::SaveTree ; (; const char * ; filename = """", . bool ; overwrite = false . ). Save the tree in a file if fTreeFileName == """". ; Definition at line 883 of file TParallelCoord.cxx. ◆ SetAxesPosition(). void TParallelCoord::SetAxesPosition ; (; ). private . Update the po",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:34903,Modifiability,variab,variables,34903,"lelCoord::SetCurrentSelection ; (; TParallelCoordSelect * ; sel). Set the selection being edited. ; Definition at line 1104 of file TParallelCoord.cxx. ◆ SetCurveDisplay(). virtual void TParallelCoord::SetCurveDisplay ; (; bool ; curve = true). inlinevirtual . Definition at line 114 of file TParallelCoord.h. ◆ SetDotsSpacing(). void TParallelCoord::SetDotsSpacing ; (; Int_t ; s = 0). Set dots spacing. ; Modify the line style 11. If the canvas support transparency dot spacing is ignored. ; Definition at line 1114 of file TParallelCoord.cxx. ◆ SetEntryList(). void TParallelCoord::SetEntryList ; (; TParallelCoord * ; para, . TEntryList * ; enlist . ). static . Set the entry lists of ""para"". ; Definition at line 1125 of file TParallelCoord.cxx. ◆ SetGlobalLogScale(). void TParallelCoord::SetGlobalLogScale ; (; bool ; lt). All axes in log scale. ; Definition at line 971 of file TParallelCoord.cxx. ◆ SetGlobalMax(). void TParallelCoord::SetGlobalMax ; (; Double_t ; max). Force all variables to adopt the same max. ; Definition at line 1134 of file TParallelCoord.cxx. ◆ SetGlobalMin(). void TParallelCoord::SetGlobalMin ; (; Double_t ; min). Force all variables to adopt the same min. ; Definition at line 1146 of file TParallelCoord.cxx. ◆ SetGlobalScale(). void TParallelCoord::SetGlobalScale ; (; bool ; gl). Constraint all axes to the same scale. ; Definition at line 984 of file TParallelCoord.cxx. ◆ SetInitEntries(). void TParallelCoord::SetInitEntries ; (; TEntryList * ; entries). inline . Definition at line 126 of file TParallelCoord.h. ◆ SetLineColor(). void TParallelCoord::SetLineColor ; (; Color_t ; col). inline . Definition at line 127 of file TParallelCoord.h. ◆ SetLineWidth(). void TParallelCoord::SetLineWidth ; (; Width_t ; wid). inline . Definition at line 128 of file TParallelCoord.h. ◆ SetLiveRangesUpdate(). void TParallelCoord::SetLiveRangesUpdate ; (; bool ; on). If true, the pad is updated while the motion of a dragged range. ; Definition at line 1158 of file ",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:35074,Modifiability,variab,variables,35074,". virtual void TParallelCoord::SetCurveDisplay ; (; bool ; curve = true). inlinevirtual . Definition at line 114 of file TParallelCoord.h. ◆ SetDotsSpacing(). void TParallelCoord::SetDotsSpacing ; (; Int_t ; s = 0). Set dots spacing. ; Modify the line style 11. If the canvas support transparency dot spacing is ignored. ; Definition at line 1114 of file TParallelCoord.cxx. ◆ SetEntryList(). void TParallelCoord::SetEntryList ; (; TParallelCoord * ; para, . TEntryList * ; enlist . ). static . Set the entry lists of ""para"". ; Definition at line 1125 of file TParallelCoord.cxx. ◆ SetGlobalLogScale(). void TParallelCoord::SetGlobalLogScale ; (; bool ; lt). All axes in log scale. ; Definition at line 971 of file TParallelCoord.cxx. ◆ SetGlobalMax(). void TParallelCoord::SetGlobalMax ; (; Double_t ; max). Force all variables to adopt the same max. ; Definition at line 1134 of file TParallelCoord.cxx. ◆ SetGlobalMin(). void TParallelCoord::SetGlobalMin ; (; Double_t ; min). Force all variables to adopt the same min. ; Definition at line 1146 of file TParallelCoord.cxx. ◆ SetGlobalScale(). void TParallelCoord::SetGlobalScale ; (; bool ; gl). Constraint all axes to the same scale. ; Definition at line 984 of file TParallelCoord.cxx. ◆ SetInitEntries(). void TParallelCoord::SetInitEntries ; (; TEntryList * ; entries). inline . Definition at line 126 of file TParallelCoord.h. ◆ SetLineColor(). void TParallelCoord::SetLineColor ; (; Color_t ; col). inline . Definition at line 127 of file TParallelCoord.h. ◆ SetLineWidth(). void TParallelCoord::SetLineWidth ; (; Width_t ; wid). inline . Definition at line 128 of file TParallelCoord.h. ◆ SetLiveRangesUpdate(). void TParallelCoord::SetLiveRangesUpdate ; (; bool ; on). If true, the pad is updated while the motion of a dragged range. ; Definition at line 1158 of file TParallelCoord.cxx. ◆ SetNentries(). void TParallelCoord::SetNentries ; (; Long64_t ; n). inline . Definition at line 130 of file TParallelCoord.h. ◆ SetTree(). void TPara",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:36871,Modifiability,variab,variables,36871,ed range. ; Definition at line 1158 of file TParallelCoord.cxx. ◆ SetNentries(). void TParallelCoord::SetNentries ; (; Long64_t ; n). inline . Definition at line 130 of file TParallelCoord.h. ◆ SetTree(). void TParallelCoord::SetTree ; (; TTree * ; tree). inline . Definition at line 131 of file TParallelCoord.h. ◆ SetVertDisplay(). void TParallelCoord::SetVertDisplay ; (; bool ; vert = true). Set the vertical or horizontal display. ; Definition at line 1169 of file TParallelCoord.cxx. ◆ SetWeightCut(). void TParallelCoord::SetWeightCut ; (; Int_t ; w = 0). inline . Definition at line 133 of file TParallelCoord.h. ◆ Streamer(). void TParallelCoord::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TNamed. ◆ StreamerNVirtual(). void TParallelCoord::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 136 of file TParallelCoord.h. ◆ UnzoomAll(). void TParallelCoord::UnzoomAll ; (; ). Unzoom all variables. ; Definition at line 1199 of file TParallelCoord.cxx. Member Data Documentation. ◆ fCandleAxis. TGaxis* TParallelCoord::fCandleAxis. private . ! An axis used when displaying a candle chart. ; Definition at line 57 of file TParallelCoord.h. ◆ fCurrentEntries. TEntryList* TParallelCoord::fCurrentEntries. private . -> Current selected entries in the tree. ; Definition at line 49 of file TParallelCoord.h. ◆ fCurrentFirst. Long64_t TParallelCoord::fCurrentFirst. private . First entry to display. ; Definition at line 42 of file TParallelCoord.h. ◆ fCurrentN. Long64_t TParallelCoord::fCurrentN. private . Number of entries to display. ; Definition at line 43 of file TParallelCoord.h. ◆ fCurrentSelection. TParallelCoordSelect* TParallelCoord::fCurrentSelection. private . ! Current Selection being edited. ; Definition at line 56 of file TParallelCoord.h. ◆ fDotsSpacing. Int_t TParallelCoord::fDotsSpacing. private . Spacing between dots to draw the entries. ; Definition at line 45 of ,MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:38518,Modifiability,variab,variables,38518,; Definition at line 43 of file TParallelCoord.h. ◆ fCurrentSelection. TParallelCoordSelect* TParallelCoord::fCurrentSelection. private . ! Current Selection being edited. ; Definition at line 56 of file TParallelCoord.h. ◆ fDotsSpacing. Int_t TParallelCoord::fDotsSpacing. private . Spacing between dots to draw the entries. ; Definition at line 45 of file TParallelCoord.h. ◆ fInitEntries. TEntryList* TParallelCoord::fInitEntries. private . -> Selected entries when TParallelCoord first initialized. ; Definition at line 50 of file TParallelCoord.h. ◆ fLineColor. Color_t TParallelCoord::fLineColor. private . entries line color. ; Definition at line 46 of file TParallelCoord.h. ◆ fLineWidth. Width_t TParallelCoord::fLineWidth. private . entries line width. ; Definition at line 47 of file TParallelCoord.h. ◆ fNentries. Long64_t TParallelCoord::fNentries. private . Number of entries;. ; Definition at line 44 of file TParallelCoord.h. ◆ fNvar. UInt_t TParallelCoord::fNvar. private . Number of variables. ; Definition at line 41 of file TParallelCoord.h. ◆ fSelectList. TList* TParallelCoord::fSelectList. private . List of selections over the variables. ; Definition at line 55 of file TParallelCoord.h. ◆ fTree. TTree* TParallelCoord::fTree. private . ! Pointer to the TTree. ; Definition at line 51 of file TParallelCoord.h. ◆ fTreeFileName. TString TParallelCoord::fTreeFileName. private . Name of the file containing the tree. ; Definition at line 53 of file TParallelCoord.h. ◆ fTreeName. TString TParallelCoord::fTreeName. private . Name of the tree. ; Definition at line 52 of file TParallelCoord.h. ◆ fVarList. TList* TParallelCoord::fVarList. private . List of the variables. ; Definition at line 54 of file TParallelCoord.h. ◆ fWeightCut. Int_t TParallelCoord::fWeightCut. private . Specify a cut on the entries from their weight (see TParallelCoordVar::GetEvtWeight(Long64_t)) ; Definition at line 48 of file TParallelCoord.h. Libraries for TParallelCoord:. [legend]; The documentat,MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:38668,Modifiability,variab,variables,38668,urrent Selection being edited. ; Definition at line 56 of file TParallelCoord.h. ◆ fDotsSpacing. Int_t TParallelCoord::fDotsSpacing. private . Spacing between dots to draw the entries. ; Definition at line 45 of file TParallelCoord.h. ◆ fInitEntries. TEntryList* TParallelCoord::fInitEntries. private . -> Selected entries when TParallelCoord first initialized. ; Definition at line 50 of file TParallelCoord.h. ◆ fLineColor. Color_t TParallelCoord::fLineColor. private . entries line color. ; Definition at line 46 of file TParallelCoord.h. ◆ fLineWidth. Width_t TParallelCoord::fLineWidth. private . entries line width. ; Definition at line 47 of file TParallelCoord.h. ◆ fNentries. Long64_t TParallelCoord::fNentries. private . Number of entries;. ; Definition at line 44 of file TParallelCoord.h. ◆ fNvar. UInt_t TParallelCoord::fNvar. private . Number of variables. ; Definition at line 41 of file TParallelCoord.h. ◆ fSelectList. TList* TParallelCoord::fSelectList. private . List of selections over the variables. ; Definition at line 55 of file TParallelCoord.h. ◆ fTree. TTree* TParallelCoord::fTree. private . ! Pointer to the TTree. ; Definition at line 51 of file TParallelCoord.h. ◆ fTreeFileName. TString TParallelCoord::fTreeFileName. private . Name of the file containing the tree. ; Definition at line 53 of file TParallelCoord.h. ◆ fTreeName. TString TParallelCoord::fTreeName. private . Name of the tree. ; Definition at line 52 of file TParallelCoord.h. ◆ fVarList. TList* TParallelCoord::fVarList. private . List of the variables. ; Definition at line 54 of file TParallelCoord.h. ◆ fWeightCut. Int_t TParallelCoord::fWeightCut. private . Specify a cut on the entries from their weight (see TParallelCoordVar::GetEvtWeight(Long64_t)) ; Definition at line 48 of file TParallelCoord.h. Libraries for TParallelCoord:. [legend]; The documentation for this class was generated from the following files:; tree/treeviewer/inc/TParallelCoord.h; tree/treeviewer/src/TParallelCoord.cxx. TPa,MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:39199,Modifiability,variab,variables,39199,:fDotsSpacing. private . Spacing between dots to draw the entries. ; Definition at line 45 of file TParallelCoord.h. ◆ fInitEntries. TEntryList* TParallelCoord::fInitEntries. private . -> Selected entries when TParallelCoord first initialized. ; Definition at line 50 of file TParallelCoord.h. ◆ fLineColor. Color_t TParallelCoord::fLineColor. private . entries line color. ; Definition at line 46 of file TParallelCoord.h. ◆ fLineWidth. Width_t TParallelCoord::fLineWidth. private . entries line width. ; Definition at line 47 of file TParallelCoord.h. ◆ fNentries. Long64_t TParallelCoord::fNentries. private . Number of entries;. ; Definition at line 44 of file TParallelCoord.h. ◆ fNvar. UInt_t TParallelCoord::fNvar. private . Number of variables. ; Definition at line 41 of file TParallelCoord.h. ◆ fSelectList. TList* TParallelCoord::fSelectList. private . List of selections over the variables. ; Definition at line 55 of file TParallelCoord.h. ◆ fTree. TTree* TParallelCoord::fTree. private . ! Pointer to the TTree. ; Definition at line 51 of file TParallelCoord.h. ◆ fTreeFileName. TString TParallelCoord::fTreeFileName. private . Name of the file containing the tree. ; Definition at line 53 of file TParallelCoord.h. ◆ fTreeName. TString TParallelCoord::fTreeName. private . Name of the tree. ; Definition at line 52 of file TParallelCoord.h. ◆ fVarList. TList* TParallelCoord::fVarList. private . List of the variables. ; Definition at line 54 of file TParallelCoord.h. ◆ fWeightCut. Int_t TParallelCoord::fWeightCut. private . Specify a cut on the entries from their weight (see TParallelCoordVar::GetEvtWeight(Long64_t)) ; Definition at line 48 of file TParallelCoord.h. Libraries for TParallelCoord:. [legend]; The documentation for this class was generated from the following files:; tree/treeviewer/inc/TParallelCoord.h; tree/treeviewer/src/TParallelCoord.cxx. TParallelCoord. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:06 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:29476,Performance,load,load,29476,"lCoord::GetLineColor ; (; ). inline . Definition at line 92 of file TParallelCoord.h. ◆ GetLineWidth(). Width_t TParallelCoord::GetLineWidth ; (; ). inline . Definition at line 93 of file TParallelCoord.h. ◆ GetNbins(). Int_t TParallelCoord::GetNbins ; (; ). get the binning of the histograms. ; Definition at line 502 of file TParallelCoord.cxx. ◆ GetNentries(). Long64_t TParallelCoord::GetNentries ; (; ). inline . Definition at line 96 of file TParallelCoord.h. ◆ GetNvar(). UInt_t TParallelCoord::GetNvar ; (; ). inline . Definition at line 95 of file TParallelCoord.h. ◆ GetSelection(). TParallelCoordSelect * TParallelCoord::GetSelection ; (; const char * ; title). Get a selection from its title. ; Definition at line 510 of file TParallelCoord.cxx. ◆ GetSelectList(). TList * TParallelCoord::GetSelectList ; (; ). inline . Definition at line 97 of file TParallelCoord.h. ◆ GetTree(). TTree * TParallelCoord::GetTree ; (; ). return the tree if fTree is defined. ; If not, the method try to load the tree from fTreeFileName. ; Definition at line 522 of file TParallelCoord.cxx. ◆ GetVariable() [1/2]. Double_t * TParallelCoord::GetVariable ; (; const char * ; var). Get the variables values from its title. ; Definition at line 564 of file TParallelCoord.cxx. ◆ GetVariable() [2/2]. Double_t * TParallelCoord::GetVariable ; (; Int_t ; i). Get the variables values from its index. ; Definition at line 576 of file TParallelCoord.cxx. ◆ GetVarList(). TList * TParallelCoord::GetVarList ; (; ). inline . Definition at line 102 of file TParallelCoord.h. ◆ GetVertDisplay(). bool TParallelCoord::GetVertDisplay ; (; ); const. inline . Definition at line 103 of file TParallelCoord.h. ◆ GetWeightCut(). Int_t TParallelCoord::GetWeightCut ; (; ); const. inline . Definition at line 104 of file TParallelCoord.h. ◆ Init(). void TParallelCoord::Init ; (; ). private . Initialise the data members of TParallelCoord. ; Definition at line 585 of file TParallelCoord.cxx. ◆ IsA(). TClass * TParallelCoord::",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:12882,Security,hash,hash,12882,";  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnzoomAll ();  Unzoom all variables. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this met",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:2940,Testability,log,logarithm,2940," that representation, a selection is an ensemble of ranges defined on the axes. Ranges defined on the same axis are conjugated with OR (an entry must be in one or the other ranges to be selected). Ranges on different axes are are conjugated with AND (an entry must be in all the ranges to be selected). Several selections can be defined with different colors. It is possible to generate an entry list from a given selection and apply it to the tree using the editor (""Apply to tree"" button). Axes:; Options can be defined each axis separately using the right mouse click. These options can be applied to every axes using the editor. Axis width: If set to 0, the axis is simply a line. If higher, a color histogram is drawn on the axis.; Axis histogram height: If not 0, a usual bar histogram is drawn on the plot. The order in which the variables are drawn is essential to see the clusters. The axes can be dragged to change their position. A zoom is also available. The logarithm scale is also available by right clicking on the axis. Candle chart:; TParallelCoord can also be used to display a candle chart. In that mode, every variable is drawn in the same scale. The candle chart can be combined with the parallel coordinates mode, drawing the candle sticks over the axes.; {; TCanvas *c1 = new TCanvas(""c1"");; TFile *f = TFile::Open(""cernstaff.root"");; TTree *T = (TTree*)f->Get(""T"");; T->Draw(""Age:Grade:Step:Cost:Division:Nation"","""",""para"");; TParallelCoord* para = (TParallelCoord*)gPad->GetListOfPrimitives()->FindObject(""ParaCoord"");; TParallelCoordVar* grade = (TParallelCoordVar*)para->GetVarList()->FindObject(""Grade"");; grade->AddRange(new TParallelCoordRange(grade,11.5,14));; para->AddSelection(""less30"");; para->GetCurrentSelection()->SetLineColor(kViolet);; TParallelCoordVar* age = (TParallelCoordVar*)para->GetVarList()->FindObject(""Age"");; age->AddRange(new TParallelCoordRange(age,21,30));; }; f#define f(i)Definition RSha256.hxx:104; kViolet@ kVioletDefinition Rtypes.h:67; gPad",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:11137,Testability,log,log,11137,"const char *filename="""", bool overwrite=false);  Save the tree in a file if fTreeFileName == """". ;  ; void SetAxisHistogramBinning (Int_t n=100);  Set the same histogram axis binning for all axis. ;  ; void SetAxisHistogramHeight (Double_t h=0.5);  Set the same histogram axis height for all axis. ;  ; void SetAxisHistogramLineWidth (Int_t lw=2);  Set the same histogram axis line width for all axis. ;  ; void SetCandleChart (bool can);  Set a candle chart display. ;  ; void SetCurrentEntries (TEntryList *entries);  ; void SetCurrentFirst (Long64_t);  Set the first entry to be displayed. ;  ; void SetCurrentN (Long64_t);  Set the number of entry to be displayed. ;  ; TParallelCoordSelect * SetCurrentSelection (const char *title);  Set the selection being edited. ;  ; void SetCurrentSelection (TParallelCoordSelect *sel);  Set the selection being edited. ;  ; virtual void SetCurveDisplay (bool curve=true);  ; void SetDotsSpacing (Int_t s=0);  Set dots spacing. ;  ; void SetGlobalLogScale (bool);  All axes in log scale. ;  ; void SetGlobalMax (Double_t max);  Force all variables to adopt the same max. ;  ; void SetGlobalMin (Double_t min);  Force all variables to adopt the same min. ;  ; void SetGlobalScale (bool gl);  Constraint all axes to the same scale. ;  ; void SetInitEntries (TEntryList *entries);  ; void SetLineColor (Color_t col);  ; void SetLineWidth (Width_t wid);  ; void SetLiveRangesUpdate (bool);  If true, the pad is updated while the motion of a dragged range. ;  ; void SetNentries (Long64_t n);  ; void SetTree (TTree *tree);  ; void SetVertDisplay (bool vert=true);  Set the vertical or horizontal display. ;  ; void SetWeightCut (Int_t w=0);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnzoomAll ();  Unzoom all variables. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const ",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:23349,Testability,log,log,23349,"cted Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TParallelCoord.h>. Inheritance diagram for TParallelCoord:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TParallelCoord::EStatusBits. EnumeratorkVertDisplay If the axes are drawn vertically, false if horizontally. . kCurveDisplay If the polylines are replaced by interpolated curves. . kPaintEntries To paint all TParallelCoord entries. . kLiveUpdate To paint the entries when being modified. . kGlobalScale Every variable is on the same scale. . kCandleChart To produce a candle chart. . kGlobalLogScale Every variable in log scale. . Definition at line 30 of file TParallelCoord.h. Constructor & Destructor Documentation. ◆ TParallelCoord() [1/3]. TParallelCoord::TParallelCoord ; (; ). Default constructor. ; Definition at line 130 of file TParallelCoord.cxx. ◆ TParallelCoord() [2/3]. TParallelCoord::TParallelCoord ; (; Long64_t ; nentries). Constructor without a reference to a tree, the datas must be added afterwards with TParallelCoord::AddVariable(Double_t*,const char*). ; Definition at line 141 of file TParallelCoord.cxx. ◆ TParallelCoord() [3/3]. TParallelCoord::TParallelCoord ; (; TTree * ; tree, . Long64_t ; nentries . ). Normal constructor, the datas must be added afterwards with TParallelCoord::AddVariable(Double_t*,const char*). ; Definition at line 156 of file TParallelCoord.cxx. ◆ ~TParallelCoord(). TParallelCoord::~TParallelCoord ; (; ). override . Destructor. ; Definition at line 181 of file TParallelCoord.cxx. Member Function Documentation. ◆ AddSelection(). void TParallelCoord:",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:34755,Testability,log,log,34755,"ion ; (; const char * ; title). Set the selection being edited. ; Definition at line 1091 of file TParallelCoord.cxx. ◆ SetCurrentSelection() [2/2]. void TParallelCoord::SetCurrentSelection ; (; TParallelCoordSelect * ; sel). Set the selection being edited. ; Definition at line 1104 of file TParallelCoord.cxx. ◆ SetCurveDisplay(). virtual void TParallelCoord::SetCurveDisplay ; (; bool ; curve = true). inlinevirtual . Definition at line 114 of file TParallelCoord.h. ◆ SetDotsSpacing(). void TParallelCoord::SetDotsSpacing ; (; Int_t ; s = 0). Set dots spacing. ; Modify the line style 11. If the canvas support transparency dot spacing is ignored. ; Definition at line 1114 of file TParallelCoord.cxx. ◆ SetEntryList(). void TParallelCoord::SetEntryList ; (; TParallelCoord * ; para, . TEntryList * ; enlist . ). static . Set the entry lists of ""para"". ; Definition at line 1125 of file TParallelCoord.cxx. ◆ SetGlobalLogScale(). void TParallelCoord::SetGlobalLogScale ; (; bool ; lt). All axes in log scale. ; Definition at line 971 of file TParallelCoord.cxx. ◆ SetGlobalMax(). void TParallelCoord::SetGlobalMax ; (; Double_t ; max). Force all variables to adopt the same max. ; Definition at line 1134 of file TParallelCoord.cxx. ◆ SetGlobalMin(). void TParallelCoord::SetGlobalMin ; (; Double_t ; min). Force all variables to adopt the same min. ; Definition at line 1146 of file TParallelCoord.cxx. ◆ SetGlobalScale(). void TParallelCoord::SetGlobalScale ; (; bool ; gl). Constraint all axes to the same scale. ; Definition at line 984 of file TParallelCoord.cxx. ◆ SetInitEntries(). void TParallelCoord::SetInitEntries ; (; TEntryList * ; entries). inline . Definition at line 126 of file TParallelCoord.h. ◆ SetLineColor(). void TParallelCoord::SetLineColor ; (; Color_t ; col). inline . Definition at line 127 of file TParallelCoord.h. ◆ SetLineWidth(). void TParallelCoord::SetLineWidth ; (; Width_t ; wid). inline . Definition at line 128 of file TParallelCoord.h. ◆ SetLiveRangesUpdate(",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoord.html:2639,Usability,simpl,simply,2639," a big weight wether an entry going randomly through the histograms will have a rather small weight. Setting a cut on this weight allows to draw only the most representative entries. A slider set the cut is also available in the gui. Selections:; Selections of specific entries can be defined over the data se using parallel coordinates. With that representation, a selection is an ensemble of ranges defined on the axes. Ranges defined on the same axis are conjugated with OR (an entry must be in one or the other ranges to be selected). Ranges on different axes are are conjugated with AND (an entry must be in all the ranges to be selected). Several selections can be defined with different colors. It is possible to generate an entry list from a given selection and apply it to the tree using the editor (""Apply to tree"" button). Axes:; Options can be defined each axis separately using the right mouse click. These options can be applied to every axes using the editor. Axis width: If set to 0, the axis is simply a line. If higher, a color histogram is drawn on the axis.; Axis histogram height: If not 0, a usual bar histogram is drawn on the plot. The order in which the variables are drawn is essential to see the clusters. The axes can be dragged to change their position. A zoom is also available. The logarithm scale is also available by right clicking on the axis. Candle chart:; TParallelCoord can also be used to display a candle chart. In that mode, every variable is drawn in the same scale. The candle chart can be combined with the parallel coordinates mode, drawing the candle sticks over the axes.; {; TCanvas *c1 = new TCanvas(""c1"");; TFile *f = TFile::Open(""cernstaff.root"");; TTree *T = (TTree*)f->Get(""T"");; T->Draw(""Age:Grade:Step:Cost:Division:Nation"","""",""para"");; TParallelCoord* para = (TParallelCoord*)gPad->GetListOfPrimitives()->FindObject(""ParaCoord"");; TParallelCoordVar* grade = (TParallelCoordVar*)para->GetVarList()->FindObject(""Grade"");; grade->AddRange(new TPar",MatchSource.WIKI,doc/master/classTParallelCoord.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html
https://root.cern/doc/master/classTParallelCoordRange.html:5580,Availability,error,error,5580,"ct"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () co",MatchSource.WIKI,doc/master/classTParallelCoordRange.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordRange.html
https://root.cern/doc/master/classTParallelCoordRange.html:5669,Availability,error,error,5669,"t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t",MatchSource.WIKI,doc/master/classTParallelCoordRange.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordRange.html
https://root.cern/doc/master/classTParallelCoordRange.html:5824,Availability,error,error,5824,"; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this obj",MatchSource.WIKI,doc/master/classTParallelCoordRange.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordRange.html
https://root.cern/doc/master/classTParallelCoordRange.html:6001,Availability,error,error,6001,". ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTParallelCoordRange.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordRange.html
https://root.cern/doc/master/classTParallelCoordRange.html:9972,Availability,error,error,9972,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t ",MatchSource.WIKI,doc/master/classTParallelCoordRange.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordRange.html
https://root.cern/doc/master/classTParallelCoordRange.html:5586,Integrability,message,message,5586,"ct"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () co",MatchSource.WIKI,doc/master/classTParallelCoordRange.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordRange.html
https://root.cern/doc/master/classTParallelCoordRange.html:6007,Integrability,message,message,6007,". ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTParallelCoordRange.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordRange.html
https://root.cern/doc/master/classTParallelCoordRange.html:6997,Integrability,message,message,6997,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTParallelCoordRange.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordRange.html
https://root.cern/doc/master/classTParallelCoordRange.html:9978,Integrability,message,message,9978,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t ",MatchSource.WIKI,doc/master/classTParallelCoordRange.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordRange.html
https://root.cern/doc/master/classTParallelCoordRange.html:10351,Integrability,message,message,10351," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Ch",MatchSource.WIKI,doc/master/classTParallelCoordRange.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordRange.html
https://root.cern/doc/master/classTParallelCoordRange.html:581,Modifiability,inherit,inherited,581,". ROOT: TParallelCoordRange Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TParallelCoordRange Class Reference. ; A TParallelCoordRange is a range used for parallel coordinates plots. ; Definition at line 25 of file TParallelCoordRange.h. Public Types; enum  EStatusBits { kShowOnPad = (1ULL << ( 15 )); , kLiveUpdate = (1ULL << ( 16 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TParallelCoordRange ();  Default constructor. ;  ;  TParallelCoordRange (TParallelCoordVar *var, Double_t min=0, Double_t max=0, TParallelCoordSelect *sel=nullptr);  Normal constructor. ;  ;  ~TParallelCoordRange () override;  Destructor. ;  ; virtual void BringOnTop ();  Make the selection which owns the range to be drawn on top of the others. ;  ; void Delete (const Option_t *options="""") override;  Delete the range. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute the distance to the primitive. ;  ; void Draw (Option_t *options="""") override;  Draw a TParallelCoordRange. ;  ; void ExecuteEvent (Int_t entry, Int_t px, Int_t py) override;  Execute the entry. ;  ; virtual Double_t GetMax ();  ; virtual Double_t GetMin ();  ; TParallelCoordS",MatchSource.WIKI,doc/master/classTParallelCoordRange.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordRange.html
https://root.cern/doc/master/classTParallelCoordRange.html:2777,Modifiability,inherit,inherited,2777,"ride;  Draw a TParallelCoordRange. ;  ; void ExecuteEvent (Int_t entry, Int_t px, Int_t py) override;  Execute the entry. ;  ; virtual Double_t GetMax ();  ; virtual Double_t GetMin ();  ; TParallelCoordSelect * GetSelection ();  ; TParallelCoordVar * GetVar ();  ; TClass * IsA () const override;  ; bool IsIn (Double_t evtval);  Evaluate if the given value is within the range or not. ;  ; void Paint (Option_t *options) override;  Paint a TParallelCoordRange. ;  ; void Print (Option_t *options) const override;  Print info about the range. ;  ; virtual void SendToBack ();  Make the selection which owns the range to be drawn under all the others. ;  ; void SetLineColor (Color_t col) override;  Set the selection line color. ;  ; void SetLineWidth (Width_t wid) override;  Set the selection line width. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; ",MatchSource.WIKI,doc/master/classTParallelCoordRange.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordRange.html
https://root.cern/doc/master/classTParallelCoordRange.html:4321,Modifiability,inherit,inherited,4321,"bjects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * Dra",MatchSource.WIKI,doc/master/classTParallelCoordRange.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordRange.html
https://root.cern/doc/master/classTParallelCoordRange.html:5216,Modifiability,inherit,inheritance,5216,"ject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ;",MatchSource.WIKI,doc/master/classTParallelCoordRange.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordRange.html
https://root.cern/doc/master/classTParallelCoordRange.html:7095,Modifiability,inherit,inherits,7095,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTParallelCoordRange.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordRange.html
https://root.cern/doc/master/classTParallelCoordRange.html:7212,Modifiability,inherit,inherits,7212,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTParallelCoordRange.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordRange.html
https://root.cern/doc/master/classTParallelCoordRange.html:10658,Modifiability,inherit,inherited,10658,"tDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ; ",MatchSource.WIKI,doc/master/classTParallelCoordRange.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordRange.html
https://root.cern/doc/master/classTParallelCoordRange.html:12217,Modifiability,inherit,inherited,12217,"ify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetLineAttributes ();  Invoke the DialogCanvas Line attributes. ;  ; virtual void SetLineColorAlpha (Color_t lcolor, Float_t lalpha);  Set a transparent line color. ;  ; virtual void SetLineStyle (Style_t lstyle);  Set the line style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Member Functions; TPoint * GetBindingLinePoints (Int_t pos, Int_t mindragged);  Return the points of the line binding the two needles of the range. ;  ; TPoint * GetSliderPoints (Double_t value);  Ret",MatchSource.WIKI,doc/master/classTParallelCoordRange.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordRange.html
https://root.cern/doc/master/classTParallelCoordRange.html:12427,Modifiability,inherit,inherited,12427,"ify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetLineAttributes ();  Invoke the DialogCanvas Line attributes. ;  ; virtual void SetLineColorAlpha (Color_t lcolor, Float_t lalpha);  Set a transparent line color. ;  ; virtual void SetLineStyle (Style_t lstyle);  Set the line style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Member Functions; TPoint * GetBindingLinePoints (Int_t pos, Int_t mindragged);  Return the points of the line binding the two needles of the range. ;  ; TPoint * GetSliderPoints (Double_t value);  Ret",MatchSource.WIKI,doc/master/classTParallelCoordRange.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordRange.html
https://root.cern/doc/master/classTParallelCoordRange.html:12945,Modifiability,inherit,inherited,12945,"ber Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Member Functions; TPoint * GetBindingLinePoints (Int_t pos, Int_t mindragged);  Return the points of the line binding the two needles of the range. ;  ; TPoint * GetSliderPoints (Double_t value);  Return the points to paint the needles at ""value"". ;  ; TPoint * GetSliderPoints (Int_t pos);  Return the points to paint the needle at ""pos"". ;  ; void PaintSlider (Double_t value, bool fill=false);  Paint a slider. ;  . Private Attributes; Double_t fMax;  Max value for the range. ;  ; Double_t fMin;  Min value for the range. ;  ; TParallelCoordSelect * fSelect;  Selection owning the range. ;  ; const Double_t fSize;  Size of the painted range. ;  ; TParallelCoordVar * fVar;  Variable owning the range. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; vi",MatchSource.WIKI,doc/master/classTParallelCoordRange.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordRange.html
https://root.cern/doc/master/classTParallelCoordRange.html:13891,Modifiability,inherit,inherited,13891,");  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Member Functions; TPoint * GetBindingLinePoints (Int_t pos, Int_t mindragged);  Return the points of the line binding the two needles of the range. ;  ; TPoint * GetSliderPoints (Double_t value);  Return the points to paint the needles at ""value"". ;  ; TPoint * GetSliderPoints (Int_t pos);  Return the points to paint the needle at ""pos"". ;  ; void PaintSlider (Double_t value, bool fill=false);  Paint a slider. ;  . Private Attributes; Double_t fMax;  Max value for the range. ;  ; Double_t fMin;  Min value for the range. ;  ; TParallelCoordSelect * fSelect;  Selection owning the range. ;  ; const Double_t fSize;  Size of the painted range. ;  ; TParallelCoordVar * fVar;  Variable owning the range. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  . #include <TParallelCoordRange.h>. Inheritance diagram for TParallelCoordRange:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TParallelCoordRange::EStatusBits. EnumeratorkShowOnPad ; kLiveUpdate . Definition at line 27 of file TParallelCoordRange.h. Constructor & Destructor Documentation. ◆ TParallelCoordRange() [1/2]. TParallelCoordRange::TParallelCoordRange ; (; ). Default constructor. ; Definition at line 36 of file TParallelCoordRange.cxx. ◆ TParallelCoordRange() [2",MatchSource.WIKI,doc/master/classTParallelCoordRange.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordRange.html
https://root.cern/doc/master/classTParallelCoordRange.html:13990,Modifiability,inherit,inherited,13990,");  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Member Functions; TPoint * GetBindingLinePoints (Int_t pos, Int_t mindragged);  Return the points of the line binding the two needles of the range. ;  ; TPoint * GetSliderPoints (Double_t value);  Return the points to paint the needles at ""value"". ;  ; TPoint * GetSliderPoints (Int_t pos);  Return the points to paint the needle at ""pos"". ;  ; void PaintSlider (Double_t value, bool fill=false);  Paint a slider. ;  . Private Attributes; Double_t fMax;  Max value for the range. ;  ; Double_t fMin;  Min value for the range. ;  ; TParallelCoordSelect * fSelect;  Selection owning the range. ;  ; const Double_t fSize;  Size of the painted range. ;  ; TParallelCoordVar * fVar;  Variable owning the range. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  . #include <TParallelCoordRange.h>. Inheritance diagram for TParallelCoordRange:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TParallelCoordRange::EStatusBits. EnumeratorkShowOnPad ; kLiveUpdate . Definition at line 27 of file TParallelCoordRange.h. Constructor & Destructor Documentation. ◆ TParallelCoordRange() [1/2]. TParallelCoordRange::TParallelCoordRange ; (; ). Default constructor. ; Definition at line 36 of file TParallelCoordRange.cxx. ◆ TParallelCoordRange() [2",MatchSource.WIKI,doc/master/classTParallelCoordRange.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordRange.html
https://root.cern/doc/master/classTParallelCoordRange.html:14195,Modifiability,inherit,inherited,14195,"ine binding the two needles of the range. ;  ; TPoint * GetSliderPoints (Double_t value);  Return the points to paint the needles at ""value"". ;  ; TPoint * GetSliderPoints (Int_t pos);  Return the points to paint the needle at ""pos"". ;  ; void PaintSlider (Double_t value, bool fill=false);  Paint a slider. ;  . Private Attributes; Double_t fMax;  Max value for the range. ;  ; Double_t fMin;  Min value for the range. ;  ; TParallelCoordSelect * fSelect;  Selection owning the range. ;  ; const Double_t fSize;  Size of the painted range. ;  ; TParallelCoordVar * fVar;  Variable owning the range. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  . #include <TParallelCoordRange.h>. Inheritance diagram for TParallelCoordRange:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TParallelCoordRange::EStatusBits. EnumeratorkShowOnPad ; kLiveUpdate . Definition at line 27 of file TParallelCoordRange.h. Constructor & Destructor Documentation. ◆ TParallelCoordRange() [1/2]. TParallelCoordRange::TParallelCoordRange ; (; ). Default constructor. ; Definition at line 36 of file TParallelCoordRange.cxx. ◆ TParallelCoordRange() [2/2]. TParallelCoordRange::TParallelCoordRange ; (; TParallelCoordVar * ; var, . Double_t ; min = 0, . Double_t ; max = 0, . TParallelCoordSelect * ; sel = nullptr . ). Normal constructor. ; Definition at line 57 of file TParallelCoordRange.cxx. ",MatchSource.WIKI,doc/master/classTParallelCoordRange.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordRange.html
https://root.cern/doc/master/classTParallelCoordRange.html:14277,Modifiability,inherit,inherited,14277,"ine binding the two needles of the range. ;  ; TPoint * GetSliderPoints (Double_t value);  Return the points to paint the needles at ""value"". ;  ; TPoint * GetSliderPoints (Int_t pos);  Return the points to paint the needle at ""pos"". ;  ; void PaintSlider (Double_t value, bool fill=false);  Paint a slider. ;  . Private Attributes; Double_t fMax;  Max value for the range. ;  ; Double_t fMin;  Min value for the range. ;  ; TParallelCoordSelect * fSelect;  Selection owning the range. ;  ; const Double_t fSize;  Size of the painted range. ;  ; TParallelCoordVar * fVar;  Variable owning the range. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  . #include <TParallelCoordRange.h>. Inheritance diagram for TParallelCoordRange:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TParallelCoordRange::EStatusBits. EnumeratorkShowOnPad ; kLiveUpdate . Definition at line 27 of file TParallelCoordRange.h. Constructor & Destructor Documentation. ◆ TParallelCoordRange() [1/2]. TParallelCoordRange::TParallelCoordRange ; (; ). Default constructor. ; Definition at line 36 of file TParallelCoordRange.cxx. ◆ TParallelCoordRange() [2/2]. TParallelCoordRange::TParallelCoordRange ; (; TParallelCoordVar * ; var, . Double_t ; min = 0, . Double_t ; max = 0, . TParallelCoordSelect * ; sel = nullptr . ). Normal constructor. ; Definition at line 57 of file TParallelCoordRange.cxx. ",MatchSource.WIKI,doc/master/classTParallelCoordRange.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordRange.html
https://root.cern/doc/master/classTParallelCoordRange.html:3645,Security,hash,hash,3645," override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ",MatchSource.WIKI,doc/master/classTParallelCoordRange.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordRange.html
https://root.cern/doc/master/classTParallelCoordSelect.html:11416,Availability,error,error,11416,"ar *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; ",MatchSource.WIKI,doc/master/classTParallelCoordSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordSelect.html
https://root.cern/doc/master/classTParallelCoordSelect.html:11505,Availability,error,error,11505,"leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out.",MatchSource.WIKI,doc/master/classTParallelCoordSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordSelect.html
https://root.cern/doc/master/classTParallelCoordSelect.html:11660,Availability,error,error,11660," whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ; ",MatchSource.WIKI,doc/master/classTParallelCoordSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordSelect.html
https://root.cern/doc/master/classTParallelCoordSelect.html:11957,Availability,error,error,11957,"bj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns k",MatchSource.WIKI,doc/master/classTParallelCoordSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordSelect.html
https://root.cern/doc/master/classTParallelCoordSelect.html:15363,Availability,error,error,15363," operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line ",MatchSource.WIKI,doc/master/classTParallelCoordSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordSelect.html
https://root.cern/doc/master/classTParallelCoordSelect.html:11422,Integrability,message,message,11422,"ar *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; ",MatchSource.WIKI,doc/master/classTParallelCoordSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordSelect.html
https://root.cern/doc/master/classTParallelCoordSelect.html:11963,Integrability,message,message,11963,"bj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns k",MatchSource.WIKI,doc/master/classTParallelCoordSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordSelect.html
https://root.cern/doc/master/classTParallelCoordSelect.html:12753,Integrability,message,message,12753,". ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *a",MatchSource.WIKI,doc/master/classTParallelCoordSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordSelect.html
https://root.cern/doc/master/classTParallelCoordSelect.html:15369,Integrability,message,message,15369," operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line ",MatchSource.WIKI,doc/master/classTParallelCoordSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordSelect.html
https://root.cern/doc/master/classTParallelCoordSelect.html:15742,Integrability,message,message,15742," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1); ",MatchSource.WIKI,doc/master/classTParallelCoordSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordSelect.html
https://root.cern/doc/master/classTParallelCoordSelect.html:1161,Modifiability,inherit,inherited,1161,"CoordSelect Class Reference. ; A TParallelCoordSelect is a specialised TList to hold TParallelCoordRanges used by TParallelCoord. ; Selections of specific entries can be defined over the data se using parallel coordinates. With that representation, a selection is an ensemble of ranges defined on the axes. Ranges defined on the same axis are conjugated with OR (an entry must be in one or the other ranges to be selected). Ranges on different axes are are conjugated with AND (an entry must be in all the ranges to be selected). Several selections can be defined with different colors. It is possible to generate an entry list from a given selection and apply it to the tree using the editor (""Apply to tree"" button). ; Definition at line 69 of file TParallelCoordRange.h. Public Types; enum  { kActivated = (1ULL << ( 18 )); , kShowRanges = (1ULL << ( 19 )); };  ;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TParallelCoordSelect ();  Default constructor. ;  ;  TParallelCoordSelect (const char *title);  Normal constructor. ;  ;  ~TParallelCoordSelect () override;  Destructor. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; TClass * IsA () const override;  ; void SetAct",MatchSource.WIKI,doc/master/classTParallelCoordSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordSelect.html
https://root.cern/doc/master/classTParallelCoordSelect.html:1230,Modifiability,inherit,inherited,1230,"CoordSelect Class Reference. ; A TParallelCoordSelect is a specialised TList to hold TParallelCoordRanges used by TParallelCoord. ; Selections of specific entries can be defined over the data se using parallel coordinates. With that representation, a selection is an ensemble of ranges defined on the axes. Ranges defined on the same axis are conjugated with OR (an entry must be in one or the other ranges to be selected). Ranges on different axes are are conjugated with AND (an entry must be in all the ranges to be selected). Several selections can be defined with different colors. It is possible to generate an entry list from a given selection and apply it to the tree using the editor (""Apply to tree"" button). ; Definition at line 69 of file TParallelCoordRange.h. Public Types; enum  { kActivated = (1ULL << ( 18 )); , kShowRanges = (1ULL << ( 19 )); };  ;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TParallelCoordSelect ();  Default constructor. ;  ;  TParallelCoordSelect (const char *title);  Normal constructor. ;  ;  ~TParallelCoordSelect () override;  Destructor. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; TClass * IsA () const override;  ; void SetAct",MatchSource.WIKI,doc/master/classTParallelCoordSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordSelect.html
https://root.cern/doc/master/classTParallelCoordSelect.html:1337,Modifiability,inherit,inherited,1337,"CoordSelect Class Reference. ; A TParallelCoordSelect is a specialised TList to hold TParallelCoordRanges used by TParallelCoord. ; Selections of specific entries can be defined over the data se using parallel coordinates. With that representation, a selection is an ensemble of ranges defined on the axes. Ranges defined on the same axis are conjugated with OR (an entry must be in one or the other ranges to be selected). Ranges on different axes are are conjugated with AND (an entry must be in all the ranges to be selected). Several selections can be defined with different colors. It is possible to generate an entry list from a given selection and apply it to the tree using the editor (""Apply to tree"" button). ; Definition at line 69 of file TParallelCoordRange.h. Public Types; enum  { kActivated = (1ULL << ( 18 )); , kShowRanges = (1ULL << ( 19 )); };  ;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TParallelCoordSelect ();  Default constructor. ;  ;  TParallelCoordSelect (const char *title);  Normal constructor. ;  ;  ~TParallelCoordSelect () override;  Destructor. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; TClass * IsA () const override;  ; void SetAct",MatchSource.WIKI,doc/master/classTParallelCoordSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordSelect.html
https://root.cern/doc/master/classTParallelCoordSelect.html:2622,Modifiability,inherit,inherited,2622,"; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TParallelCoordSelect ();  Default constructor. ;  ;  TParallelCoordSelect (const char *title);  Normal constructor. ;  ;  ~TParallelCoordSelect () override;  Destructor. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; TClass * IsA () const override;  ; void SetActivated (bool on);  Activate the selection. ;  ; void SetShowRanges (bool s);  Show the ranges needles. ;  ; void SetTitle (const char *title);  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void Add (TObject *obj) override;  ; virtual void Add (TObject *obj, Option_t *opt);  ; void AddAfter (const TObject *after, TObject *obj) override;  Insert object after object after in the list. ;  ; virtual void AddAfter (TObjLink *after, TObject *obj);  Insert object after the specified ObjLink object. ;  ; void AddAt (TObject *obj, Int_t idx) override;  Insert object at position idx in the list. ;  ; void AddBefore (const TObject *before, TObject *obj) override;  Insert object before object before in the list. ;  ; virtual void AddBefore (TObjLink *before, TObject *obj);  Insert object before the specified ObjLink object. ;  ; void AddFirst (TObject *obj) override;  Add object at the beginning of the list. ;  ; virtual void AddFirst (TObject *obj, Option_t *opt);  Add object at the beginning of the l",MatchSource.WIKI,doc/master/classTParallelCoordSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordSelect.html
https://root.cern/doc/master/classTParallelCoordSelect.html:5769,Modifiability,inherit,inherited,5769,erride;  Return address of pointer to obj. ;  ; Bool_t IsAscending ();  ; TObject * Last () const override;  Return the last object in the list. Returns 0 when list is empty. ;  ; virtual TObjLink * LastLink () const;  ; TIterator * MakeIterator (Bool_t dir=kIterForward) const override;  Return a list iterator. ;  ; void RecursiveRemove (TObject *obj) override;  Remove object from this collection and recursively remove the object from all other objects (and collections). ;  ; TObject * Remove (const TObjLinkPtr_t &lnk);  ; TObject * Remove (TObject *obj) override;  Remove object from the list. ;  ; virtual TObject * Remove (TObjLink *lnk);  Remove object link (and therefore the object it contains) from the list. ;  ; void RemoveLast () override;  Remove the last object of the list. ;  ; virtual void Sort (Bool_t order=kSortAscending);  Sort linked list. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSeqCollection; virtual ~TSeqCollection ();  ; void Add (TObject *obj) override;  ; virtual Int_t GetLast () const;  Returns index of last object in collection. ;  ; virtual Int_t IndexOf (const TObject *obj) const;  Return index of object in collection. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual TObject * RemoveAt (Int_t idx);  ; virtual void RemoveBefore (TObject *before);  ; virtual void RemoveFirst ();  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnSort ();  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this ,MatchSource.WIKI,doc/master/classTParallelCoordSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordSelect.html
https://root.cern/doc/master/classTParallelCoordSelect.html:6640,Modifiability,inherit,inherited,6640," Sort (Bool_t order=kSortAscending);  Sort linked list. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSeqCollection; virtual ~TSeqCollection ();  ; void Add (TObject *obj) override;  ; virtual Int_t GetLast () const;  Returns index of last object in collection. ;  ; virtual Int_t IndexOf (const TObject *obj) const;  Return index of object in collection. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual TObject * RemoveAt (Int_t idx);  ; virtual void RemoveBefore (TObject *before);  ; virtual void RemoveFirst ();  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnSort ();  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this collection. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIte",MatchSource.WIKI,doc/master/classTParallelCoordSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordSelect.html
https://root.cern/doc/master/classTParallelCoordSelect.html:6986,Modifiability,inherit,inherit,6986,"tual Int_t IndexOf (const TObject *obj) const;  Return index of object in collection. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual TObject * RemoveAt (Int_t idx);  ; virtual void RemoveBefore (TObject *before);  ; virtual void RemoveFirst ();  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnSort ();  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this collection. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIter end () const;  ; virtual Int_t GetEntries () const;  ; const char * GetName () const override;  Return name of this collection. ;  ; virtual Int_t GetSize () const;  Return the capacity of the collection, i.e. ;  ; virtual Int_t GrowBy (Int_t delta) const;  Increase the collection's capacity by delta slots. ;  ; ULong_t Hash () con",MatchSource.WIKI,doc/master/classTParallelCoordSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordSelect.html
https://root.cern/doc/master/classTParallelCoordSelect.html:10216,Modifiability,inherit,inherited,10216," the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool UseRWLock (Bool_t enable=true);  Set this collection to use a RW lock upon access, making it thread safe. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *optio",MatchSource.WIKI,doc/master/classTParallelCoordSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordSelect.html
https://root.cern/doc/master/classTParallelCoordSelect.html:11121,Modifiability,inherit,inheritance,11121," bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () con",MatchSource.WIKI,doc/master/classTParallelCoordSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordSelect.html
https://root.cern/doc/master/classTParallelCoordSelect.html:12851,Modifiability,inherit,inherits,12851," action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method to declare a ",MatchSource.WIKI,doc/master/classTParallelCoordSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordSelect.html
https://root.cern/doc/master/classTParallelCoordSelect.html:12968,Modifiability,inherit,inherits,12968,"const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method to declare a method obsolete. ;  ; void operator delete (void *ptr);  Operator delete. ;  ; void operator delete (void *ptr, void",MatchSource.WIKI,doc/master/classTParallelCoordSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordSelect.html
https://root.cern/doc/master/classTParallelCoordSelect.html:15781,Modifiability,inherit,inherited,15781," void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ; ",MatchSource.WIKI,doc/master/classTParallelCoordSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordSelect.html
https://root.cern/doc/master/classTParallelCoordSelect.html:17480,Modifiability,inherit,inherited,17480,"  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetLineAttributes ();  Invoke the DialogCanvas Line attributes. ;  ; virtual void SetLineColor (Color_t lcolor);  Set the line color. ;  ; virtual void SetLineColorAlpha (Color_t lcolor, Float_t lalpha);  Set a transparent line color. ;  ; virtual void SetLineStyle (Style_t lstyle);  Set the line style. ;  ; virtual void SetLineWidth (Width_t lwidth);  Set the line width. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do th",MatchSource.WIKI,doc/master/classTParallelCoordSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordSelect.html
https://root.cern/doc/master/classTParallelCoordSelect.html:17689,Modifiability,inherit,inherited,17689,"  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetLineAttributes ();  Invoke the DialogCanvas Line attributes. ;  ; virtual void SetLineColor (Color_t lcolor);  Set the line color. ;  ; virtual void SetLineColorAlpha (Color_t lcolor, Float_t lalpha);  Set a transparent line color. ;  ; virtual void SetLineStyle (Style_t lstyle);  Set the line style. ;  ; virtual void SetLineWidth (Width_t lwidth);  Set the line width. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do th",MatchSource.WIKI,doc/master/classTParallelCoordSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordSelect.html
https://root.cern/doc/master/classTParallelCoordSelect.html:18384,Modifiability,inherit,inherited,18384,"tic Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions ",MatchSource.WIKI,doc/master/classTParallelCoordSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordSelect.html
https://root.cern/doc/master/classTParallelCoordSelect.html:18935,Modifiability,inherit,inherited,18935,"nt_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Attributes; TString fTitle;  . Additional Inherited Members;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnl",MatchSource.WIKI,doc/master/classTParallelCoordSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordSelect.html
https://root.cern/doc/master/classTParallelCoordSelect.html:19453,Modifiability,inherit,inherited,19453,"  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Attributes; TString fTitle;  . Additional Inherited Members;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TList; TObjLinkPtr_t * DoSort (TObjLinkPtr_t *head, Int_t n);  Sort linked list. ;  ; TObjLink * FindLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedLi",MatchSource.WIKI,doc/master/classTParallelCoordSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordSelect.html
https://root.cern/doc/master/classTParallelCoordSelect.html:19719,Modifiability,inherit,inherited,19719,"s inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Attributes; TString fTitle;  . Additional Inherited Members;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TList; TObjLinkPtr_t * DoSort (TObjLinkPtr_t *head, Int_t n);  Sort linked list. ;  ; TObjLink * FindLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOpt",MatchSource.WIKI,doc/master/classTParallelCoordSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordSelect.html
https://root.cern/doc/master/classTParallelCoordSelect.html:19868,Modifiability,inherit,inherited,19868,"s inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Attributes; TString fTitle;  . Additional Inherited Members;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TList; TObjLinkPtr_t * DoSort (TObjLinkPtr_t *head, Int_t n);  Sort linked list. ;  ; TObjLink * FindLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOpt",MatchSource.WIKI,doc/master/classTParallelCoordSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordSelect.html
https://root.cern/doc/master/classTParallelCoordSelect.html:20001,Modifiability,inherit,inherited,20001,"s inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Attributes; TString fTitle;  . Additional Inherited Members;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TList; TObjLinkPtr_t * DoSort (TObjLinkPtr_t *head, Int_t n);  Sort linked list. ;  ; TObjLink * FindLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOpt",MatchSource.WIKI,doc/master/classTParallelCoordSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordSelect.html
https://root.cern/doc/master/classTParallelCoordSelect.html:20100,Modifiability,inherit,inherited,20100,"s inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Attributes; TString fTitle;  . Additional Inherited Members;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TList; TObjLinkPtr_t * DoSort (TObjLinkPtr_t *head, Int_t n);  Sort linked list. ;  ; TObjLink * FindLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOpt",MatchSource.WIKI,doc/master/classTParallelCoordSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordSelect.html
https://root.cern/doc/master/classTParallelCoordSelect.html:21088,Modifiability,inherit,inherited,21088,"dLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjLink that also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inheri",MatchSource.WIKI,doc/master/classTParallelCoordSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordSelect.html
https://root.cern/doc/master/classTParallelCoordSelect.html:21198,Modifiability,inherit,inherited,21198,"dLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjLink that also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inheri",MatchSource.WIKI,doc/master/classTParallelCoordSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordSelect.html
https://root.cern/doc/master/classTParallelCoordSelect.html:21706,Modifiability,inherit,inherited,21706,"bjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjLink that also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  . #include <TParallelCoordRange.h>. Inheritance diagram for TParallelCoordSelect:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkActiva",MatchSource.WIKI,doc/master/classTParallelCoordSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordSelect.html
https://root.cern/doc/master/classTParallelCoordSelect.html:21911,Modifiability,inherit,inherited,21911," virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  . #include <TParallelCoordRange.h>. Inheritance diagram for TParallelCoordSelect:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkActivated ; kShowRanges . Definition at line 71 of file TParallelCoordRange.h. Constructor & Destructor Documentation. ◆ TParallelCoordSelect() [1/2]. TParallelCoordSelect::TParallelCoordSelect ; (; ). Default constructor. ; Definition at line 472 of file TParallelCoordRange.cxx. ◆ TParallelCoordSelect() [2/2]. TParallelCoordSelect::TParallelCoordSelect ; (; const char * ; title",MatchSource.WIKI,doc/master/classTParallelCoordSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordSelect.html
https://root.cern/doc/master/classTParallelCoordSelect.html:22209,Modifiability,inherit,inherited,22209," virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  . #include <TParallelCoordRange.h>. Inheritance diagram for TParallelCoordSelect:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkActivated ; kShowRanges . Definition at line 71 of file TParallelCoordRange.h. Constructor & Destructor Documentation. ◆ TParallelCoordSelect() [1/2]. TParallelCoordSelect::TParallelCoordSelect ; (; ). Default constructor. ; Definition at line 472 of file TParallelCoordRange.cxx. ◆ TParallelCoordSelect() [2/2]. TParallelCoordSelect::TParallelCoordSelect ; (; const char * ; title",MatchSource.WIKI,doc/master/classTParallelCoordSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordSelect.html
https://root.cern/doc/master/classTParallelCoordSelect.html:22281,Modifiability,inherit,inherited,22281," virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  . #include <TParallelCoordRange.h>. Inheritance diagram for TParallelCoordSelect:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkActivated ; kShowRanges . Definition at line 71 of file TParallelCoordRange.h. Constructor & Destructor Documentation. ◆ TParallelCoordSelect() [1/2]. TParallelCoordSelect::TParallelCoordSelect ; (; ). Default constructor. ; Definition at line 472 of file TParallelCoordRange.cxx. ◆ TParallelCoordSelect() [2/2]. TParallelCoordSelect::TParallelCoordSelect ; (; const char * ; title",MatchSource.WIKI,doc/master/classTParallelCoordSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordSelect.html
https://root.cern/doc/master/classTParallelCoordSelect.html:22365,Modifiability,inherit,inherited,22365," virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  . #include <TParallelCoordRange.h>. Inheritance diagram for TParallelCoordSelect:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkActivated ; kShowRanges . Definition at line 71 of file TParallelCoordRange.h. Constructor & Destructor Documentation. ◆ TParallelCoordSelect() [1/2]. TParallelCoordSelect::TParallelCoordSelect ; (; ). Default constructor. ; Definition at line 472 of file TParallelCoordRange.cxx. ◆ TParallelCoordSelect() [2/2]. TParallelCoordSelect::TParallelCoordSelect ; (; const char * ; title",MatchSource.WIKI,doc/master/classTParallelCoordSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordSelect.html
https://root.cern/doc/master/classTParallelCoordSelect.html:21414,Performance,perform,perform,21414,"dLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjLink that also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inheri",MatchSource.WIKI,doc/master/classTParallelCoordSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordSelect.html
https://root.cern/doc/master/classTParallelCoordSelect.html:21953,Performance,cache,cache,21953," virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  . #include <TParallelCoordRange.h>. Inheritance diagram for TParallelCoordSelect:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkActivated ; kShowRanges . Definition at line 71 of file TParallelCoordRange.h. Constructor & Destructor Documentation. ◆ TParallelCoordSelect() [1/2]. TParallelCoordSelect::TParallelCoordSelect ; (; ). Default constructor. ; Definition at line 472 of file TParallelCoordRange.cxx. ◆ TParallelCoordSelect() [2/2]. TParallelCoordSelect::TParallelCoordSelect ; (; const char * ; title",MatchSource.WIKI,doc/master/classTParallelCoordSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordSelect.html
https://root.cern/doc/master/classTParallelCoordSelect.html:9922,Safety,safe,safe,9922,"d Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the wildcard. ;  ; virtual void Print (Option_t *option, Int_t recurse) const;  Print the collection header and its elements. ;  ; virtual void Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool UseRWLock (Bool_t enable=true);  Set this collection to use a RW lock upon access, making it thread safe. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () co",MatchSource.WIKI,doc/master/classTParallelCoordSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordSelect.html
https://root.cern/doc/master/classTParallelCoordSelect.html:7975,Security,hash,hash,7975,"s in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIter end () const;  ; virtual Int_t GetEntries () const;  ; const char * GetName () const override;  Return name of this collection. ;  ; virtual Int_t GetSize () const;  Return the capacity of the collection, i.e. ;  ; virtual Int_t GrowBy (Int_t delta) const;  Increase the collection's capacity by delta slots. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsArgNull (const char *where, const TObject *obj) const;  Returns true if object is a null pointer. ;  ; virtual Bool_t IsEmpty () const;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; Bool_t IsOwner () const;  ; Bool_t IsSortable () const override;  ; R__ALWAYS_INLINE Bool_t IsUsingRWLock () const;  ; void ls (Option_t *option="""") const override;  List (ls) all objects in this collection. ;  ; virtual TIterator * MakeReverseIterator () const;  ; Bool_t Notify () override;  'Notify' all objects in this collection. ;  ; TObject * operator() (const char *name) const;  Find an object in this collection by name. ;  ; void Paint (Option_t *option="""") override;  Paint all objects in this collection. ;  ; virtual void Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the ",MatchSource.WIKI,doc/master/classTParallelCoordSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordSelect.html
https://root.cern/doc/master/classTParallelCoordSelect.html:9557,Security,access,accessible,9557," MakeReverseIterator () const;  ; Bool_t Notify () override;  'Notify' all objects in this collection. ;  ; TObject * operator() (const char *name) const;  Find an object in this collection by name. ;  ; void Paint (Option_t *option="""") override;  Paint all objects in this collection. ;  ; virtual void Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the wildcard. ;  ; virtual void Print (Option_t *option, Int_t recurse) const;  Print the collection header and its elements. ;  ; virtual void Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool UseRWLock (Bool_t enable=true);  Set this collection to use a RW lock upon access, making it thread safe. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract.",MatchSource.WIKI,doc/master/classTParallelCoordSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordSelect.html
https://root.cern/doc/master/classTParallelCoordSelect.html:9897,Security,access,access,9897,"d Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the wildcard. ;  ; virtual void Print (Option_t *option, Int_t recurse) const;  Print the collection header and its elements. ;  ; virtual void Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool UseRWLock (Bool_t enable=true);  Set this collection to use a RW lock upon access, making it thread safe. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () co",MatchSource.WIKI,doc/master/classTParallelCoordSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordSelect.html
https://root.cern/doc/master/classTParallelCoordSelect.html:18799,Security,access,accessible,18799,"s_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Attributes; TString fTitle;  . Additional Inherited Members;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared",MatchSource.WIKI,doc/master/classTParallelCoordSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordSelect.html
https://root.cern/doc/master/classTParallelCoordVar.html:838,Availability,avail,available,838,". ROOT: TParallelCoordVar Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TParallelCoordVar Class Reference. ; TParallelCoord axes. ; Class containing a variable for the TParallelCoord.; Options can be defined each axis separately using the right mouse click. These options can be applied to every axes using the editor. Axis width: If set to 0, the axis is simply a line. If higher, a color histogram is drawn on the axis.; Axis histogram height: If not 0, a usual bar histogram is drawn on the plot. The order in which the variables are drawn is essential to see the clusters. The axes can be dragged to change their position. A zoom is also available. The logarithm scale is also available by right clicking on the axis. ; Definition at line 24 of file TParallelCoordVar.h. Public Types; enum  EStatusBits { kLogScale = (1ULL << ( 14 )); , kShowBox = (1ULL << ( 15 )); , kShowBarHisto = (1ULL << ( 16 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TParallelCoordVar ();  Default constructor. ;  ;  TParallelCoordVar (Double_t *val, const char *title, Int_t id, TParallelCoord *gram);  Normal constructor. ;  ;  ~TParallelCoordVar () override;  Destructor. ;  ; void AddRange ()",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:877,Availability,avail,available,877,". ROOT: TParallelCoordVar Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TParallelCoordVar Class Reference. ; TParallelCoord axes. ; Class containing a variable for the TParallelCoord.; Options can be defined each axis separately using the right mouse click. These options can be applied to every axes using the editor. Axis width: If set to 0, the axis is simply a line. If higher, a color histogram is drawn on the axis.; Axis histogram height: If not 0, a usual bar histogram is drawn on the plot. The order in which the variables are drawn is essential to see the clusters. The axes can be dragged to change their position. A zoom is also available. The logarithm scale is also available by right clicking on the axis. ; Definition at line 24 of file TParallelCoordVar.h. Public Types; enum  EStatusBits { kLogScale = (1ULL << ( 14 )); , kShowBox = (1ULL << ( 15 )); , kShowBarHisto = (1ULL << ( 16 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TParallelCoordVar ();  Default constructor. ;  ;  TParallelCoordVar (Double_t *val, const char *title, Int_t id, TParallelCoord *gram);  Normal constructor. ;  ;  ~TParallelCoordVar () override;  Destructor. ;  ; void AddRange ()",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:8506,Availability,error,error,8506,"ct"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:8595,Availability,error,error,8595,"t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return t",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:8750,Availability,error,error,8750,"; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:8927,Availability,error,error,8927,". ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:12628,Availability,error,error,12628,"r new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t ",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:5126,Deployability,update,updated,5126,"nt the boxes in the case of a candle chart. ;  ; void PaintHistogram ();  Paint the histogram on the axis. ;  ; void PaintLabels ();  Paint the axis labels and titles. ;  ; void Print (Option_t *option="""") const override;  Print the axis main data. ;  ; void SavePrimitive (std::ostream &out, Option_t *options) override;  Save the TParallelCoordVar as a macro. ;  ; void SetBarHisto (bool h);  ; void SetBoxPlot (bool box);  Set the axis to display a candle. ;  ; void SetCurrentLimits (Double_t min, Double_t max);  Set the limits within which one the entries must be painted. ;  ; void SetCurrentMax (Double_t max);  Set the current maximum of the axis. ;  ; void SetCurrentMin (Double_t min);  Set the current minimum of the axis. ;  ; void SetHistogramBinning (Int_t n=100);  Set the histogram binning. ;  ; void SetHistogramHeight (Double_t h=0);  Set the height of the bar histogram. ;  ; void SetHistogramLineWidth (Int_t lw=2);  ; void SetInitMax (Double_t max);  ; void SetInitMin (Double_t min);  ; void SetLiveRangesUpdate (bool on);  If true, the pad is updated while the motion of a dragged range. ;  ; void SetLogScale (bool log);  Set the axis in log scale. ;  ; void SetTitle (const char *) override;  Set the title of the TNamed. ;  ; void SetValues (Long64_t length, Double_t *val);  Set the variable values. ;  ; void SetX (Double_t x, bool gl);  Set the X position of the axis in the case of a vertical axis. ;  ; void SetY (Double_t y, bool gl);  Set the Y position of the axis in the case of a horizontal axis. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Unzoom ();  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""")",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:29783,Deployability,update,updated,29783," min). Set the current minimum of the axis. ; Definition at line 904 of file TParallelCoordVar.cxx. ◆ SetHistogramBinning(). void TParallelCoordVar::SetHistogramBinning ; (; Int_t ; n = 100). Set the histogram binning. ; Definition at line 882 of file TParallelCoordVar.cxx. ◆ SetHistogramHeight(). void TParallelCoordVar::SetHistogramHeight ; (; Double_t ; h = 0). Set the height of the bar histogram. ; Definition at line 892 of file TParallelCoordVar.cxx. ◆ SetHistogramLineWidth(). void TParallelCoordVar::SetHistogramLineWidth ; (; Int_t ; lw = 2). inline . Definition at line 101 of file TParallelCoordVar.h. ◆ SetInitMax(). void TParallelCoordVar::SetInitMax ; (; Double_t ; max). inline . Definition at line 108 of file TParallelCoordVar.h. ◆ SetInitMin(). void TParallelCoordVar::SetInitMin ; (; Double_t ; min). inline . Definition at line 107 of file TParallelCoordVar.h. ◆ SetLiveRangesUpdate(). void TParallelCoordVar::SetLiveRangesUpdate ; (; bool ; on). If true, the pad is updated while the motion of a dragged range. ; Definition at line 945 of file TParallelCoordVar.cxx. ◆ SetLogScale(). void TParallelCoordVar::SetLogScale ; (; bool ; log). Set the axis in log scale. ; Definition at line 955 of file TParallelCoordVar.cxx. ◆ SetTitle(). void TParallelCoordVar::SetTitle ; (; const char * ; title). inlineoverridevirtual . Set the title of the TNamed. ; Reimplemented from TNamed.; Definition at line 111 of file TParallelCoordVar.h. ◆ SetValues(). void TParallelCoordVar::SetValues ; (; Long64_t ; length, . Double_t * ; val . ). Set the variable values. ; Definition at line 977 of file TParallelCoordVar.cxx. ◆ SetX(). void TParallelCoordVar::SetX ; (; Double_t ; x, . bool ; gl . ). Set the X position of the axis in the case of a vertical axis. ; and rotate the axis if it was horizontal. ; Definition at line 992 of file TParallelCoordVar.cxx. ◆ SetY(). void TParallelCoordVar::SetY ; (; Double_t ; y, . bool ; gl . ). Set the Y position of the axis in the case of a horizont",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:8512,Integrability,message,message,8512,"ct"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:8933,Integrability,message,message,8933,". ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:9791,Integrability,message,message,9791," this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:12634,Integrability,message,message,12634,"r new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t ",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:13007,Integrability,message,message,13007,"move this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Ch",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:347,Modifiability,variab,variable,347,". ROOT: TParallelCoordVar Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TParallelCoordVar Class Reference. ; TParallelCoord axes. ; Class containing a variable for the TParallelCoord.; Options can be defined each axis separately using the right mouse click. These options can be applied to every axes using the editor. Axis width: If set to 0, the axis is simply a line. If higher, a color histogram is drawn on the axis.; Axis histogram height: If not 0, a usual bar histogram is drawn on the plot. The order in which the variables are drawn is essential to see the clusters. The axes can be dragged to change their position. A zoom is also available. The logarithm scale is also available by right clicking on the axis. ; Definition at line 24 of file TParallelCoordVar.h. Public Types; enum  EStatusBits { kLogScale = (1ULL << ( 14 )); , kShowBox = (1ULL << ( 15 )); , kShowBarHisto = (1ULL << ( 16 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TParallelCoordVar ();  Default constructor. ;  ;  TParallelCoordVar (Double_t *val, const char *title, Int_t id, TParallelCoord *gram);  Normal constructor. ;  ;  ~TParallelCoordVar () override;  Destructor. ;  ; void AddRange ()",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:719,Modifiability,variab,variables,719,". ROOT: TParallelCoordVar Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TParallelCoordVar Class Reference. ; TParallelCoord axes. ; Class containing a variable for the TParallelCoord.; Options can be defined each axis separately using the right mouse click. These options can be applied to every axes using the editor. Axis width: If set to 0, the axis is simply a line. If higher, a color histogram is drawn on the axis.; Axis histogram height: If not 0, a usual bar histogram is drawn on the plot. The order in which the variables are drawn is essential to see the clusters. The axes can be dragged to change their position. A zoom is also available. The logarithm scale is also available by right clicking on the axis. ; Definition at line 24 of file TParallelCoordVar.h. Public Types; enum  EStatusBits { kLogScale = (1ULL << ( 14 )); , kShowBox = (1ULL << ( 15 )); , kShowBarHisto = (1ULL << ( 16 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TParallelCoordVar ();  Default constructor. ;  ;  TParallelCoordVar (Double_t *val, const char *title, Int_t id, TParallelCoord *gram);  Normal constructor. ;  ;  ~TParallelCoordVar () override;  Destructor. ;  ; void AddRange ()",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:1122,Modifiability,inherit,inherited,1122," all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TParallelCoordVar Class Reference. ; TParallelCoord axes. ; Class containing a variable for the TParallelCoord.; Options can be defined each axis separately using the right mouse click. These options can be applied to every axes using the editor. Axis width: If set to 0, the axis is simply a line. If higher, a color histogram is drawn on the axis.; Axis histogram height: If not 0, a usual bar histogram is drawn on the plot. The order in which the variables are drawn is essential to see the clusters. The axes can be dragged to change their position. A zoom is also available. The logarithm scale is also available by right clicking on the axis. ; Definition at line 24 of file TParallelCoordVar.h. Public Types; enum  EStatusBits { kLogScale = (1ULL << ( 14 )); , kShowBox = (1ULL << ( 15 )); , kShowBarHisto = (1ULL << ( 16 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TParallelCoordVar ();  Default constructor. ;  ;  TParallelCoordVar (Double_t *val, const char *title, Int_t id, TParallelCoord *gram);  Normal constructor. ;  ;  ~TParallelCoordVar () override;  Destructor. ;  ; void AddRange ();  ; void AddRange (TParallelCoordRange *range);  Add a range to the current selection on the axis. ;  ; void DeleteVariable ();  ",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:2138,Modifiability,variab,variables,2138,"herited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TParallelCoordVar ();  Default constructor. ;  ;  TParallelCoordVar (Double_t *val, const char *title, Int_t id, TParallelCoord *gram);  Normal constructor. ;  ;  ~TParallelCoordVar () override;  Destructor. ;  ; void AddRange ();  ; void AddRange (TParallelCoordRange *range);  Add a range to the current selection on the axis. ;  ; void DeleteVariable ();  Delete variables. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Computes the distance from the axis. ;  ; void Draw (Option_t *option="""") override;  Draw the axis. ;  ; bool Eval (Long64_t evtidx, TParallelCoordSelect *select);  Check if the entry is within the range(s) of ""select"". ;  ; void ExecuteEvent (Int_t entry, Int_t px, Int_t py) override;  Execute the corresponding entry. ;  ; bool GetBarHisto ();  ; bool GetBoxPlot ();  ; Double_t GetCurrentAverage () const;  ; Double_t GetCurrentMax () const;  ; Double_t GetCurrentMin () const;  ; Int_t GetEntryWeight (Long64_t evtidx);  Get the entry weight: The weight of an entry for a given variable is the bin content of the histogram bin the entry is going through. ;  ; void GetEntryXY (Long64_t n, Double_t &x, Double_t &y);  Get the position of the variable on the graph for the n'th entry. ;  ; Int_t GetHistBinning () const;  ; Double_t GetHistHeight ();  ; Int_t GetHistLineWidth ();  ; TH1F * GetHistogram ();  ",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:2795,Modifiability,variab,variable,2795,"; , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TParallelCoordVar ();  Default constructor. ;  ;  TParallelCoordVar (Double_t *val, const char *title, Int_t id, TParallelCoord *gram);  Normal constructor. ;  ;  ~TParallelCoordVar () override;  Destructor. ;  ; void AddRange ();  ; void AddRange (TParallelCoordRange *range);  Add a range to the current selection on the axis. ;  ; void DeleteVariable ();  Delete variables. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Computes the distance from the axis. ;  ; void Draw (Option_t *option="""") override;  Draw the axis. ;  ; bool Eval (Long64_t evtidx, TParallelCoordSelect *select);  Check if the entry is within the range(s) of ""select"". ;  ; void ExecuteEvent (Int_t entry, Int_t px, Int_t py) override;  Execute the corresponding entry. ;  ; bool GetBarHisto ();  ; bool GetBoxPlot ();  ; Double_t GetCurrentAverage () const;  ; Double_t GetCurrentMax () const;  ; Double_t GetCurrentMin () const;  ; Int_t GetEntryWeight (Long64_t evtidx);  Get the entry weight: The weight of an entry for a given variable is the bin content of the histogram bin the entry is going through. ;  ; void GetEntryXY (Long64_t n, Double_t &x, Double_t &y);  Get the position of the variable on the graph for the n'th entry. ;  ; Int_t GetHistBinning () const;  ; Double_t GetHistHeight ();  ; Int_t GetHistLineWidth ();  ; TH1F * GetHistogram ();  Create or recreate the histogram. ;  ; Int_t GetId ();  ; bool GetLogScale () const;  ; void GetMinMaxMean ();  Get mean, min and max of those variable. ;  ; Int_t GetNbins ();  ; Long64_t GetNentries () const;  ; char * GetObjectInfo (Int_t px, Int_t py) const override;  Returns info about this axis. ;  ; TParallelCoord * GetParallel ();  ; void GetQuantiles ();  Get the box plot values (quantiles). ;  ; TList * GetRanges ();  ; Double_t GetValuefromXY (Double_t x, Double_t y);  Get the value corresponding to the position. ;  ; Double_t * GetValues ();  ; bool GetVert ()",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:2958,Modifiability,variab,variable,2958,"~TParallelCoordVar () override;  Destructor. ;  ; void AddRange ();  ; void AddRange (TParallelCoordRange *range);  Add a range to the current selection on the axis. ;  ; void DeleteVariable ();  Delete variables. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Computes the distance from the axis. ;  ; void Draw (Option_t *option="""") override;  Draw the axis. ;  ; bool Eval (Long64_t evtidx, TParallelCoordSelect *select);  Check if the entry is within the range(s) of ""select"". ;  ; void ExecuteEvent (Int_t entry, Int_t px, Int_t py) override;  Execute the corresponding entry. ;  ; bool GetBarHisto ();  ; bool GetBoxPlot ();  ; Double_t GetCurrentAverage () const;  ; Double_t GetCurrentMax () const;  ; Double_t GetCurrentMin () const;  ; Int_t GetEntryWeight (Long64_t evtidx);  Get the entry weight: The weight of an entry for a given variable is the bin content of the histogram bin the entry is going through. ;  ; void GetEntryXY (Long64_t n, Double_t &x, Double_t &y);  Get the position of the variable on the graph for the n'th entry. ;  ; Int_t GetHistBinning () const;  ; Double_t GetHistHeight ();  ; Int_t GetHistLineWidth ();  ; TH1F * GetHistogram ();  Create or recreate the histogram. ;  ; Int_t GetId ();  ; bool GetLogScale () const;  ; void GetMinMaxMean ();  Get mean, min and max of those variable. ;  ; Int_t GetNbins ();  ; Long64_t GetNentries () const;  ; char * GetObjectInfo (Int_t px, Int_t py) const override;  Returns info about this axis. ;  ; TParallelCoord * GetParallel ();  ; void GetQuantiles ();  Get the box plot values (quantiles). ;  ; TList * GetRanges ();  ; Double_t GetValuefromXY (Double_t x, Double_t y);  Get the value corresponding to the position. ;  ; Double_t * GetValues ();  ; bool GetVert ();  ; Double_t GetX ();  ; void GetXYfromValue (Double_t value, Double_t &x, Double_t &y);  Get a position corresponding to the value on the axis. ;  ; Double_t GetY ();  ; void Init ();  Initialise the TParallelVar variables. ;  ; TC",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:3267,Modifiability,variab,variable,3267,"utes the distance from the axis. ;  ; void Draw (Option_t *option="""") override;  Draw the axis. ;  ; bool Eval (Long64_t evtidx, TParallelCoordSelect *select);  Check if the entry is within the range(s) of ""select"". ;  ; void ExecuteEvent (Int_t entry, Int_t px, Int_t py) override;  Execute the corresponding entry. ;  ; bool GetBarHisto ();  ; bool GetBoxPlot ();  ; Double_t GetCurrentAverage () const;  ; Double_t GetCurrentMax () const;  ; Double_t GetCurrentMin () const;  ; Int_t GetEntryWeight (Long64_t evtidx);  Get the entry weight: The weight of an entry for a given variable is the bin content of the histogram bin the entry is going through. ;  ; void GetEntryXY (Long64_t n, Double_t &x, Double_t &y);  Get the position of the variable on the graph for the n'th entry. ;  ; Int_t GetHistBinning () const;  ; Double_t GetHistHeight ();  ; Int_t GetHistLineWidth ();  ; TH1F * GetHistogram ();  Create or recreate the histogram. ;  ; Int_t GetId ();  ; bool GetLogScale () const;  ; void GetMinMaxMean ();  Get mean, min and max of those variable. ;  ; Int_t GetNbins ();  ; Long64_t GetNentries () const;  ; char * GetObjectInfo (Int_t px, Int_t py) const override;  Returns info about this axis. ;  ; TParallelCoord * GetParallel ();  ; void GetQuantiles ();  Get the box plot values (quantiles). ;  ; TList * GetRanges ();  ; Double_t GetValuefromXY (Double_t x, Double_t y);  Get the value corresponding to the position. ;  ; Double_t * GetValues ();  ; bool GetVert ();  ; Double_t GetX ();  ; void GetXYfromValue (Double_t value, Double_t &x, Double_t &y);  Get a position corresponding to the value on the axis. ;  ; Double_t GetY ();  ; void Init ();  Initialise the TParallelVar variables. ;  ; TClass * IsA () const override;  ; void Paint (Option_t *option="""") override;  Paint the axis. ;  ; void PaintBoxPlot ();  Paint the boxes in the case of a candle chart. ;  ; void PaintHistogram ();  Paint the histogram on the axis. ;  ; void PaintLabels ();  Paint the axis labels an",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:3917,Modifiability,variab,variables,3917,"tryXY (Long64_t n, Double_t &x, Double_t &y);  Get the position of the variable on the graph for the n'th entry. ;  ; Int_t GetHistBinning () const;  ; Double_t GetHistHeight ();  ; Int_t GetHistLineWidth ();  ; TH1F * GetHistogram ();  Create or recreate the histogram. ;  ; Int_t GetId ();  ; bool GetLogScale () const;  ; void GetMinMaxMean ();  Get mean, min and max of those variable. ;  ; Int_t GetNbins ();  ; Long64_t GetNentries () const;  ; char * GetObjectInfo (Int_t px, Int_t py) const override;  Returns info about this axis. ;  ; TParallelCoord * GetParallel ();  ; void GetQuantiles ();  Get the box plot values (quantiles). ;  ; TList * GetRanges ();  ; Double_t GetValuefromXY (Double_t x, Double_t y);  Get the value corresponding to the position. ;  ; Double_t * GetValues ();  ; bool GetVert ();  ; Double_t GetX ();  ; void GetXYfromValue (Double_t value, Double_t &x, Double_t &y);  Get a position corresponding to the value on the axis. ;  ; Double_t GetY ();  ; void Init ();  Initialise the TParallelVar variables. ;  ; TClass * IsA () const override;  ; void Paint (Option_t *option="""") override;  Paint the axis. ;  ; void PaintBoxPlot ();  Paint the boxes in the case of a candle chart. ;  ; void PaintHistogram ();  Paint the histogram on the axis. ;  ; void PaintLabels ();  Paint the axis labels and titles. ;  ; void Print (Option_t *option="""") const override;  Print the axis main data. ;  ; void SavePrimitive (std::ostream &out, Option_t *options) override;  Save the TParallelCoordVar as a macro. ;  ; void SetBarHisto (bool h);  ; void SetBoxPlot (bool box);  Set the axis to display a candle. ;  ; void SetCurrentLimits (Double_t min, Double_t max);  Set the limits within which one the entries must be painted. ;  ; void SetCurrentMax (Double_t max);  Set the current maximum of the axis. ;  ; void SetCurrentMin (Double_t min);  Set the current minimum of the axis. ;  ; void SetHistogramBinning (Int_t n=100);  Set the histogram binning. ;  ; void SetHistogr",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:5370,Modifiability,variab,variable,5370,"&out, Option_t *options) override;  Save the TParallelCoordVar as a macro. ;  ; void SetBarHisto (bool h);  ; void SetBoxPlot (bool box);  Set the axis to display a candle. ;  ; void SetCurrentLimits (Double_t min, Double_t max);  Set the limits within which one the entries must be painted. ;  ; void SetCurrentMax (Double_t max);  Set the current maximum of the axis. ;  ; void SetCurrentMin (Double_t min);  Set the current minimum of the axis. ;  ; void SetHistogramBinning (Int_t n=100);  Set the histogram binning. ;  ; void SetHistogramHeight (Double_t h=0);  Set the height of the bar histogram. ;  ; void SetHistogramLineWidth (Int_t lw=2);  ; void SetInitMax (Double_t max);  ; void SetInitMin (Double_t min);  ; void SetLiveRangesUpdate (bool on);  If true, the pad is updated while the motion of a dragged range. ;  ; void SetLogScale (bool log);  Set the axis in log scale. ;  ; void SetTitle (const char *) override;  Set the title of the TNamed. ;  ; void SetValues (Long64_t length, Double_t *val);  Set the variable values. ;  ; void SetX (Double_t x, bool gl);  Set the X position of the axis in the case of a vertical axis. ;  ; void SetY (Double_t y, bool gl);  Set the Y position of the axis in the case of a horizontal axis. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Unzoom ();  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &name",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:5784,Modifiability,inherit,inherited,5784,"  ; void SetHistogramBinning (Int_t n=100);  Set the histogram binning. ;  ; void SetHistogramHeight (Double_t h=0);  Set the height of the bar histogram. ;  ; void SetHistogramLineWidth (Int_t lw=2);  ; void SetInitMax (Double_t max);  ; void SetInitMin (Double_t min);  ; void SetLiveRangesUpdate (bool on);  If true, the pad is updated while the motion of a dragged range. ;  ; void SetLogScale (bool log);  Set the axis in log scale. ;  ; void SetTitle (const char *) override;  Set the title of the TNamed. ;  ; void SetValues (Long64_t length, Double_t *val);  Set the variable values. ;  ; void SetX (Double_t x, bool gl);  Set the X position of the axis in the case of a vertical axis. ;  ; void SetY (Double_t y, bool gl);  Set the Y position of the axis in the case of a horizontal axis. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Unzoom ();  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and ti",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:7247,Modifiability,inherit,inherited,7247,"ty. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * Dra",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:8142,Modifiability,inherit,inheritance,8142,"ject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ;",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:9889,Modifiability,inherit,inherits,9889,"l (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:10006,Modifiability,inherit,inherits,10006," (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:13314,Modifiability,inherit,inherited,13314,"tDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ; ",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:14819,Modifiability,inherit,inherited,14819,";  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetLineAttributes ();  Invoke the DialogCanvas Line attributes. ;  ; virtual void SetLineColor (Color_t lcolor);  Set the line color. ;  ; virtual void SetLineColorAlpha (Color_t lcolor, Float_t lalpha);  Set a transparent line color. ;  ; virtual void SetLineStyle (Style_t lstyle);  Set the line style. ;  ; virtual void SetLineWidth (Width_t lwidth);  Set the line width. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttFill;  TAttFill ();  AttFill default constructor. ;  ;  TAttFill (Color_t fcolor, Style_t fstyle);  AttFill normal constructor. ;  ; virtual ~TAttFill ();  AttFill destructor. ;  ; void Copy (TAttFill &attfill) const;  Copy this fill attributes to a new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ; ",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:16268,Modifiability,inherit,inherited,16268,"void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; virtual void SetFillStyle (Style_t fstyle);  Set the fill area style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:16478,Modifiability,inherit,inherited,16478,"void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; virtual void SetFillStyle (Style_t fstyle);  Set the fill area style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:16996,Modifiability,inherit,inherited,16996,_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Attributes; TH1F * fHistogram;  ! Histogram holding the variable distribution. ;  ; Double_t fHistoHeight;  Histogram Height. ;  ; Int_t fHistoLW;  Line width used to draw the histogram line. ;  ; Int_t fId;  Id identifying the variable for the editor. ;  ; Double_t fMaxCurrent;  Current used maximum. ;  ; Double_t fMaxInit;  Memory of the maximum when first initialized. ;  ; Double_t fMean;  Average. ;  ; Double_t fMed;  Median value (Q2). ;  ; Double_t fMinCurrent;  Current used minimum. ;  ; Double_t fMinInit;  Memory of the minimum when first initialized. ;  ; Int_t fNbins;  Number of bins in fHistogram. ;  ; Long64_t fNentries;  Number of stored entries values. ;  ; TParallelCoord * fParallel;  Pointer to the TParallelCoord which owns the TParallelCoordVar. ;  ;,MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:17208,Modifiability,inherit,inherited,17208,_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Attributes; TH1F * fHistogram;  ! Histogram holding the variable distribution. ;  ; Double_t fHistoHeight;  Histogram Height. ;  ; Int_t fHistoLW;  Line width used to draw the histogram line. ;  ; Int_t fId;  Id identifying the variable for the editor. ;  ; Double_t fMaxCurrent;  Current used maximum. ;  ; Double_t fMaxInit;  Memory of the maximum when first initialized. ;  ; Double_t fMean;  Average. ;  ; Double_t fMed;  Median value (Q2). ;  ; Double_t fMinCurrent;  Current used minimum. ;  ; Double_t fMinInit;  Memory of the minimum when first initialized. ;  ; Int_t fNbins;  Number of bins in fHistogram. ;  ; Long64_t fNentries;  Number of stored entries values. ;  ; TParallelCoord * fParallel;  Pointer to the TParallelCoord which owns the TParallelCoordVar. ;  ;,MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:17452,Modifiability,variab,variable,17452,FileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Attributes; TH1F * fHistogram;  ! Histogram holding the variable distribution. ;  ; Double_t fHistoHeight;  Histogram Height. ;  ; Int_t fHistoLW;  Line width used to draw the histogram line. ;  ; Int_t fId;  Id identifying the variable for the editor. ;  ; Double_t fMaxCurrent;  Current used maximum. ;  ; Double_t fMaxInit;  Memory of the maximum when first initialized. ;  ; Double_t fMean;  Average. ;  ; Double_t fMed;  Median value (Q2). ;  ; Double_t fMinCurrent;  Current used minimum. ;  ; Double_t fMinInit;  Memory of the minimum when first initialized. ;  ; Int_t fNbins;  Number of bins in fHistogram. ;  ; Long64_t fNentries;  Number of stored entries values. ;  ; TParallelCoord * fParallel;  Pointer to the TParallelCoord which owns the TParallelCoordVar. ;  ; Double_t fQua1;  First quantile (Q1). ;  ; Double_t fQua3;  Third quantile (Q3). ;  ; TList * fRanges;  List of the TParallelRange owned by TParallelCoordVar. ;  ; Double_t * fVal;  ![fNentries] Entries values for the variable. ;  ; Double_t fX1;  x1 coordi,MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:17624,Modifiability,variab,variable,17624,static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Attributes; TH1F * fHistogram;  ! Histogram holding the variable distribution. ;  ; Double_t fHistoHeight;  Histogram Height. ;  ; Int_t fHistoLW;  Line width used to draw the histogram line. ;  ; Int_t fId;  Id identifying the variable for the editor. ;  ; Double_t fMaxCurrent;  Current used maximum. ;  ; Double_t fMaxInit;  Memory of the maximum when first initialized. ;  ; Double_t fMean;  Average. ;  ; Double_t fMed;  Median value (Q2). ;  ; Double_t fMinCurrent;  Current used minimum. ;  ; Double_t fMinInit;  Memory of the minimum when first initialized. ;  ; Int_t fNbins;  Number of bins in fHistogram. ;  ; Long64_t fNentries;  Number of stored entries values. ;  ; TParallelCoord * fParallel;  Pointer to the TParallelCoord which owns the TParallelCoordVar. ;  ; Double_t fQua1;  First quantile (Q1). ;  ; Double_t fQua3;  Third quantile (Q3). ;  ; TList * fRanges;  List of the TParallelRange owned by TParallelCoordVar. ;  ; Double_t * fVal;  ![fNentries] Entries values for the variable. ;  ; Double_t fX1;  x1 coordinate of the axis. ;  ; Double_t fX2;  x2 coordinate of the axis. ;  ; Double_t fY1;  y1 coordinate of the axis. ;  ; Double_t fY2;  y2 coordinate of the axis. ;  . Additional Inherited Me,MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:18392,Modifiability,variab,variable,18392,"* DeclFileName ();  . Private Attributes; TH1F * fHistogram;  ! Histogram holding the variable distribution. ;  ; Double_t fHistoHeight;  Histogram Height. ;  ; Int_t fHistoLW;  Line width used to draw the histogram line. ;  ; Int_t fId;  Id identifying the variable for the editor. ;  ; Double_t fMaxCurrent;  Current used maximum. ;  ; Double_t fMaxInit;  Memory of the maximum when first initialized. ;  ; Double_t fMean;  Average. ;  ; Double_t fMed;  Median value (Q2). ;  ; Double_t fMinCurrent;  Current used minimum. ;  ; Double_t fMinInit;  Memory of the minimum when first initialized. ;  ; Int_t fNbins;  Number of bins in fHistogram. ;  ; Long64_t fNentries;  Number of stored entries values. ;  ; TParallelCoord * fParallel;  Pointer to the TParallelCoord which owns the TParallelCoordVar. ;  ; Double_t fQua1;  First quantile (Q1). ;  ; Double_t fQua3;  Third quantile (Q3). ;  ; TList * fRanges;  List of the TParallelRange owned by TParallelCoordVar. ;  ; Double_t * fVal;  ![fNentries] Entries values for the variable. ;  ; Double_t fX1;  x1 coordinate of the axis. ;  ; Double_t fX2;  x2 coordinate of the axis. ;  ; Double_t fY1;  y1 coordinate of the axis. ;  ; Double_t fY2;  y2 coordinate of the axis. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . #include <TParallelCoordVar.h>. Inheritance diagram for TParallelCo",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:18642,Modifiability,inherit,inherited,18642,"m when first initialized. ;  ; Double_t fMean;  Average. ;  ; Double_t fMed;  Median value (Q2). ;  ; Double_t fMinCurrent;  Current used minimum. ;  ; Double_t fMinInit;  Memory of the minimum when first initialized. ;  ; Int_t fNbins;  Number of bins in fHistogram. ;  ; Long64_t fNentries;  Number of stored entries values. ;  ; TParallelCoord * fParallel;  Pointer to the TParallelCoord which owns the TParallelCoordVar. ;  ; Double_t fQua1;  First quantile (Q1). ;  ; Double_t fQua3;  Third quantile (Q3). ;  ; TList * fRanges;  List of the TParallelRange owned by TParallelCoordVar. ;  ; Double_t * fVal;  ![fNentries] Entries values for the variable. ;  ; Double_t fX1;  x1 coordinate of the axis. ;  ; Double_t fX2;  x2 coordinate of the axis. ;  ; Double_t fY1;  y1 coordinate of the axis. ;  ; Double_t fY2;  y2 coordinate of the axis. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . #include <TParallelCoordVar.h>. Inheritance diagram for TParallelCoordVar:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TParallelCoordVar::EStatusBits. EnumeratorkLogScale ; kShowBox ; kShowBarHisto . Definition at line 26 of file TParallelCoordVar.h. Constructor & Destructor Documentation. ◆ TParallelCoordVar() [1/2]. TParallelCoordVar:",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:18741,Modifiability,inherit,inherited,18741,"m when first initialized. ;  ; Double_t fMean;  Average. ;  ; Double_t fMed;  Median value (Q2). ;  ; Double_t fMinCurrent;  Current used minimum. ;  ; Double_t fMinInit;  Memory of the minimum when first initialized. ;  ; Int_t fNbins;  Number of bins in fHistogram. ;  ; Long64_t fNentries;  Number of stored entries values. ;  ; TParallelCoord * fParallel;  Pointer to the TParallelCoord which owns the TParallelCoordVar. ;  ; Double_t fQua1;  First quantile (Q1). ;  ; Double_t fQua3;  Third quantile (Q3). ;  ; TList * fRanges;  List of the TParallelRange owned by TParallelCoordVar. ;  ; Double_t * fVal;  ![fNentries] Entries values for the variable. ;  ; Double_t fX1;  x1 coordinate of the axis. ;  ; Double_t fX2;  x2 coordinate of the axis. ;  ; Double_t fY1;  y1 coordinate of the axis. ;  ; Double_t fY2;  y2 coordinate of the axis. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . #include <TParallelCoordVar.h>. Inheritance diagram for TParallelCoordVar:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TParallelCoordVar::EStatusBits. EnumeratorkLogScale ; kShowBox ; kShowBarHisto . Definition at line 26 of file TParallelCoordVar.h. Constructor & Destructor Documentation. ◆ TParallelCoordVar() [1/2]. TParallelCoordVar:",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:18946,Modifiability,inherit,inherited,18946,"f bins in fHistogram. ;  ; Long64_t fNentries;  Number of stored entries values. ;  ; TParallelCoord * fParallel;  Pointer to the TParallelCoord which owns the TParallelCoordVar. ;  ; Double_t fQua1;  First quantile (Q1). ;  ; Double_t fQua3;  Third quantile (Q3). ;  ; TList * fRanges;  List of the TParallelRange owned by TParallelCoordVar. ;  ; Double_t * fVal;  ![fNentries] Entries values for the variable. ;  ; Double_t fX1;  x1 coordinate of the axis. ;  ; Double_t fX2;  x2 coordinate of the axis. ;  ; Double_t fY1;  y1 coordinate of the axis. ;  ; Double_t fY2;  y2 coordinate of the axis. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . #include <TParallelCoordVar.h>. Inheritance diagram for TParallelCoordVar:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TParallelCoordVar::EStatusBits. EnumeratorkLogScale ; kShowBox ; kShowBarHisto . Definition at line 26 of file TParallelCoordVar.h. Constructor & Destructor Documentation. ◆ TParallelCoordVar() [1/2]. TParallelCoordVar::TParallelCoordVar ; (; ). Default constructor. ; Definition at line 54 of file TParallelCoordVar.cxx. ◆ TParallelCoordVar() [2/2]. TParallelCoordVar::TParallelCoordVar ; (; Double_t * ; val, . const char * ; title, . Int_t ; id, . TParallelCoor",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:19028,Modifiability,inherit,inherited,19028,"f bins in fHistogram. ;  ; Long64_t fNentries;  Number of stored entries values. ;  ; TParallelCoord * fParallel;  Pointer to the TParallelCoord which owns the TParallelCoordVar. ;  ; Double_t fQua1;  First quantile (Q1). ;  ; Double_t fQua3;  Third quantile (Q3). ;  ; TList * fRanges;  List of the TParallelRange owned by TParallelCoordVar. ;  ; Double_t * fVal;  ![fNentries] Entries values for the variable. ;  ; Double_t fX1;  x1 coordinate of the axis. ;  ; Double_t fX2;  x2 coordinate of the axis. ;  ; Double_t fY1;  y1 coordinate of the axis. ;  ; Double_t fY2;  y2 coordinate of the axis. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . #include <TParallelCoordVar.h>. Inheritance diagram for TParallelCoordVar:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TParallelCoordVar::EStatusBits. EnumeratorkLogScale ; kShowBox ; kShowBarHisto . Definition at line 26 of file TParallelCoordVar.h. Constructor & Destructor Documentation. ◆ TParallelCoordVar() [1/2]. TParallelCoordVar::TParallelCoordVar ; (; ). Default constructor. ; Definition at line 54 of file TParallelCoordVar.cxx. ◆ TParallelCoordVar() [2/2]. TParallelCoordVar::TParallelCoordVar ; (; Double_t * ; val, . const char * ; title, . Int_t ; id, . TParallelCoor",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:19189,Modifiability,inherit,inherited,19189,"(Q1). ;  ; Double_t fQua3;  Third quantile (Q3). ;  ; TList * fRanges;  List of the TParallelRange owned by TParallelCoordVar. ;  ; Double_t * fVal;  ![fNentries] Entries values for the variable. ;  ; Double_t fX1;  x1 coordinate of the axis. ;  ; Double_t fX2;  x2 coordinate of the axis. ;  ; Double_t fY1;  y1 coordinate of the axis. ;  ; Double_t fY2;  y2 coordinate of the axis. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . #include <TParallelCoordVar.h>. Inheritance diagram for TParallelCoordVar:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TParallelCoordVar::EStatusBits. EnumeratorkLogScale ; kShowBox ; kShowBarHisto . Definition at line 26 of file TParallelCoordVar.h. Constructor & Destructor Documentation. ◆ TParallelCoordVar() [1/2]. TParallelCoordVar::TParallelCoordVar ; (; ). Default constructor. ; Definition at line 54 of file TParallelCoordVar.cxx. ◆ TParallelCoordVar() [2/2]. TParallelCoordVar::TParallelCoordVar ; (; Double_t * ; val, . const char * ; title, . Int_t ; id, . TParallelCoord * ; parallel . ). Normal constructor. ; By default, the title and the name are the expression given to TTree::Draw. The name can be changed by the user (the label on the plot) but not the title. ; Definition at lin",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:21428,Modifiability,variab,variables,21428,"ge() [1/2]. void TParallelCoordVar::AddRange ; (; ). inline . Definition at line 60 of file TParallelCoordVar.h. ◆ AddRange() [2/2]. void TParallelCoordVar::AddRange ; (; TParallelCoordRange * ; range). Add a range to the current selection on the axis. ; Definition at line 102 of file TParallelCoordVar.cxx. ◆ Class(). static TClass * TParallelCoordVar::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TParallelCoordVar::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TParallelCoordVar::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 117 of file TParallelCoordVar.h. ◆ DeclFileName(). static const char * TParallelCoordVar::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 117 of file TParallelCoordVar.h. ◆ DeleteVariable(). void TParallelCoordVar::DeleteVariable ; (; ). Delete variables. ; Definition at line 122 of file TParallelCoordVar.cxx. ◆ DistancetoPrimitive(). Int_t TParallelCoordVar::DistancetoPrimitive ; (; Int_t ; px, . Int_t ; py . ). overridevirtual . Computes the distance from the axis. ; Reimplemented from TObject.; Definition at line 131 of file TParallelCoordVar.cxx. ◆ Draw(). void TParallelCoordVar::Draw ; (; Option_t * ; option = """"). overridevirtual . Draw the axis. ; Reimplemented from TObject.; Definition at line 150 of file TParallelCoordVar.cxx. ◆ Eval(). bool TParallelCoordVar::Eval ; (; Long64_t ; evtidx, . TParallelCoordSelect * ; select . ). Check if the entry is within the range(s) of ""select"". ; Two ranges on a single axis are conjugated as a ""or"": to be selected, the entry must be in one of the ranges. ; Definition at line 160 of file TParallelCoordVar.cxx. ◆ ExecuteEvent(). void TParallelCoordVar::ExecuteEvent ; (; Int_t ; entry, . Int_t ; px, . Int_t ; py . ). overridevirtual . Execute the corresponding entry. ; Reimplemented f",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:23295,Modifiability,variab,variable,23295,"vent ; (; Int_t ; entry, . Int_t ; px, . Int_t ; py . ). overridevirtual . Execute the corresponding entry. ; Reimplemented from TObject.; Definition at line 182 of file TParallelCoordVar.cxx. ◆ GetBarHisto(). bool TParallelCoordVar::GetBarHisto ; (; ). inline . Definition at line 66 of file TParallelCoordVar.h. ◆ GetBoxPlot(). bool TParallelCoordVar::GetBoxPlot ; (; ). inline . Definition at line 67 of file TParallelCoordVar.h. ◆ GetCurrentAverage(). Double_t TParallelCoordVar::GetCurrentAverage ; (; ); const. inline . Definition at line 74 of file TParallelCoordVar.h. ◆ GetCurrentMax(). Double_t TParallelCoordVar::GetCurrentMax ; (; ); const. inline . Definition at line 73 of file TParallelCoordVar.h. ◆ GetCurrentMin(). Double_t TParallelCoordVar::GetCurrentMin ; (; ); const. inline . Definition at line 72 of file TParallelCoordVar.h. ◆ GetEntryWeight(). Int_t TParallelCoordVar::GetEntryWeight ; (; Long64_t ; evtidx). Get the entry weight: The weight of an entry for a given variable is the bin content of the histogram bin the entry is going through. ; Definition at line 346 of file TParallelCoordVar.cxx. ◆ GetEntryXY(). void TParallelCoordVar::GetEntryXY ; (; Long64_t ; n, . Double_t & ; x, . Double_t & ; y . ). Get the position of the variable on the graph for the n'th entry. ; Definition at line 317 of file TParallelCoordVar.cxx. ◆ GetHistBinning(). Int_t TParallelCoordVar::GetHistBinning ; (; ); const. inline . Definition at line 71 of file TParallelCoordVar.h. ◆ GetHistHeight(). Double_t TParallelCoordVar::GetHistHeight ; (; ). inline . Definition at line 77 of file TParallelCoordVar.h. ◆ GetHistLineWidth(). Int_t TParallelCoordVar::GetHistLineWidth ; (; ). inline . Definition at line 78 of file TParallelCoordVar.h. ◆ GetHistogram(). TH1F * TParallelCoordVar::GetHistogram ; (; ). Create or recreate the histogram. ; Definition at line 355 of file TParallelCoordVar.cxx. ◆ GetId(). Int_t TParallelCoordVar::GetId ; (; ). inline . Definition at line 69 of file TPar",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:23562,Modifiability,variab,variable,23562,"inition at line 66 of file TParallelCoordVar.h. ◆ GetBoxPlot(). bool TParallelCoordVar::GetBoxPlot ; (; ). inline . Definition at line 67 of file TParallelCoordVar.h. ◆ GetCurrentAverage(). Double_t TParallelCoordVar::GetCurrentAverage ; (; ); const. inline . Definition at line 74 of file TParallelCoordVar.h. ◆ GetCurrentMax(). Double_t TParallelCoordVar::GetCurrentMax ; (; ); const. inline . Definition at line 73 of file TParallelCoordVar.h. ◆ GetCurrentMin(). Double_t TParallelCoordVar::GetCurrentMin ; (; ); const. inline . Definition at line 72 of file TParallelCoordVar.h. ◆ GetEntryWeight(). Int_t TParallelCoordVar::GetEntryWeight ; (; Long64_t ; evtidx). Get the entry weight: The weight of an entry for a given variable is the bin content of the histogram bin the entry is going through. ; Definition at line 346 of file TParallelCoordVar.cxx. ◆ GetEntryXY(). void TParallelCoordVar::GetEntryXY ; (; Long64_t ; n, . Double_t & ; x, . Double_t & ; y . ). Get the position of the variable on the graph for the n'th entry. ; Definition at line 317 of file TParallelCoordVar.cxx. ◆ GetHistBinning(). Int_t TParallelCoordVar::GetHistBinning ; (; ); const. inline . Definition at line 71 of file TParallelCoordVar.h. ◆ GetHistHeight(). Double_t TParallelCoordVar::GetHistHeight ; (; ). inline . Definition at line 77 of file TParallelCoordVar.h. ◆ GetHistLineWidth(). Int_t TParallelCoordVar::GetHistLineWidth ; (; ). inline . Definition at line 78 of file TParallelCoordVar.h. ◆ GetHistogram(). TH1F * TParallelCoordVar::GetHistogram ; (; ). Create or recreate the histogram. ; Definition at line 355 of file TParallelCoordVar.cxx. ◆ GetId(). Int_t TParallelCoordVar::GetId ; (; ). inline . Definition at line 69 of file TParallelCoordVar.h. ◆ GetLogScale(). bool TParallelCoordVar::GetLogScale ; (; ); const. inline . Definition at line 70 of file TParallelCoordVar.h. ◆ GetMinMaxMean(). void TParallelCoordVar::GetMinMaxMean ; (; ). Get mean, min and max of those variable. ; Definition at",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:24545,Modifiability,variab,variable,24545,". ). Get the position of the variable on the graph for the n'th entry. ; Definition at line 317 of file TParallelCoordVar.cxx. ◆ GetHistBinning(). Int_t TParallelCoordVar::GetHistBinning ; (; ); const. inline . Definition at line 71 of file TParallelCoordVar.h. ◆ GetHistHeight(). Double_t TParallelCoordVar::GetHistHeight ; (; ). inline . Definition at line 77 of file TParallelCoordVar.h. ◆ GetHistLineWidth(). Int_t TParallelCoordVar::GetHistLineWidth ; (; ). inline . Definition at line 78 of file TParallelCoordVar.h. ◆ GetHistogram(). TH1F * TParallelCoordVar::GetHistogram ; (; ). Create or recreate the histogram. ; Definition at line 355 of file TParallelCoordVar.cxx. ◆ GetId(). Int_t TParallelCoordVar::GetId ; (; ). inline . Definition at line 69 of file TParallelCoordVar.h. ◆ GetLogScale(). bool TParallelCoordVar::GetLogScale ; (; ); const. inline . Definition at line 70 of file TParallelCoordVar.h. ◆ GetMinMaxMean(). void TParallelCoordVar::GetMinMaxMean ; (; ). Get mean, min and max of those variable. ; Definition at line 372 of file TParallelCoordVar.cxx. ◆ GetNbins(). Int_t TParallelCoordVar::GetNbins ; (; ). inline . Definition at line 83 of file TParallelCoordVar.h. ◆ GetNentries(). Long64_t TParallelCoordVar::GetNentries ; (; ); const. inline . Definition at line 84 of file TParallelCoordVar.h. ◆ GetObjectInfo(). char * TParallelCoordVar::GetObjectInfo ; (; Int_t ; px, . Int_t ; py . ); const. overridevirtual . Returns info about this axis. ; Reimplemented from TObject.; Definition at line 394 of file TParallelCoordVar.cxx. ◆ GetParallel(). TParallelCoord * TParallelCoordVar::GetParallel ; (; ). inline . Definition at line 86 of file TParallelCoordVar.h. ◆ GetQuantiles(). void TParallelCoordVar::GetQuantiles ; (; ). Get the box plot values (quantiles). ; Definition at line 429 of file TParallelCoordVar.cxx. ◆ GetRanges(). TList * TParallelCoordVar::GetRanges ; (; ). inline . Definition at line 87 of file TParallelCoordVar.h. ◆ GetValuefromXY(). Double_t TPa",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:26471,Modifiability,variab,variables,26471," at line 87 of file TParallelCoordVar.h. ◆ GetValuefromXY(). Double_t TParallelCoordVar::GetValuefromXY ; (; Double_t ; x, . Double_t ; y . ). Get the value corresponding to the position. ; Definition at line 469 of file TParallelCoordVar.cxx. ◆ GetValues(). Double_t * TParallelCoordVar::GetValues ; (; ). inline . Definition at line 88 of file TParallelCoordVar.h. ◆ GetVert(). bool TParallelCoordVar::GetVert ; (; ). inline . Definition at line 90 of file TParallelCoordVar.h. ◆ GetX(). Double_t TParallelCoordVar::GetX ; (; ). inline . Definition at line 81 of file TParallelCoordVar.h. ◆ GetXYfromValue(). void TParallelCoordVar::GetXYfromValue ; (; Double_t ; value, . Double_t & ; x, . Double_t & ; y . ). Get a position corresponding to the value on the axis. ; Definition at line 488 of file TParallelCoordVar.cxx. ◆ GetY(). Double_t TParallelCoordVar::GetY ; (; ). inline . Definition at line 82 of file TParallelCoordVar.h. ◆ Init(). void TParallelCoordVar::Init ; (; ). Initialise the TParallelVar variables. ; Definition at line 518 of file TParallelCoordVar.cxx. ◆ IsA(). TClass * TParallelCoordVar::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TNamed.; Definition at line 117 of file TParallelCoordVar.h. ◆ Paint(). void TParallelCoordVar::Paint ; (; Option_t * ; option = """"). overridevirtual . Paint the axis. ; Reimplemented from TObject.; Definition at line 549 of file TParallelCoordVar.cxx. ◆ PaintBoxPlot(). void TParallelCoordVar::PaintBoxPlot ; (; ). Paint the boxes in the case of a candle chart. ; Definition at line 563 of file TParallelCoordVar.cxx. ◆ PaintHistogram(). void TParallelCoordVar::PaintHistogram ; (; ). Paint the histogram on the axis. ; Definition at line 663 of file TParallelCoordVar.cxx. ◆ PaintLabels(). void TParallelCoordVar::PaintLabels ; (; ). Paint the axis labels and titles. ; Definition at line 768 of file TParallelCoordVar.cxx. ◆ Print(). void TParallelCoordVar::Print ; (; Option_t * ",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:30353,Modifiability,variab,variable,30353," Definition at line 101 of file TParallelCoordVar.h. ◆ SetInitMax(). void TParallelCoordVar::SetInitMax ; (; Double_t ; max). inline . Definition at line 108 of file TParallelCoordVar.h. ◆ SetInitMin(). void TParallelCoordVar::SetInitMin ; (; Double_t ; min). inline . Definition at line 107 of file TParallelCoordVar.h. ◆ SetLiveRangesUpdate(). void TParallelCoordVar::SetLiveRangesUpdate ; (; bool ; on). If true, the pad is updated while the motion of a dragged range. ; Definition at line 945 of file TParallelCoordVar.cxx. ◆ SetLogScale(). void TParallelCoordVar::SetLogScale ; (; bool ; log). Set the axis in log scale. ; Definition at line 955 of file TParallelCoordVar.cxx. ◆ SetTitle(). void TParallelCoordVar::SetTitle ; (; const char * ; title). inlineoverridevirtual . Set the title of the TNamed. ; Reimplemented from TNamed.; Definition at line 111 of file TParallelCoordVar.h. ◆ SetValues(). void TParallelCoordVar::SetValues ; (; Long64_t ; length, . Double_t * ; val . ). Set the variable values. ; Definition at line 977 of file TParallelCoordVar.cxx. ◆ SetX(). void TParallelCoordVar::SetX ; (; Double_t ; x, . bool ; gl . ). Set the X position of the axis in the case of a vertical axis. ; and rotate the axis if it was horizontal. ; Definition at line 992 of file TParallelCoordVar.cxx. ◆ SetY(). void TParallelCoordVar::SetY ; (; Double_t ; y, . bool ; gl . ). Set the Y position of the axis in the case of a horizontal axis. ; and rotate the axis if it was vertical. ; Definition at line 1011 of file TParallelCoordVar.cxx. ◆ Streamer(). void TParallelCoordVar::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TNamed. ◆ StreamerNVirtual(). void TParallelCoordVar::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 117 of file TParallelCoordVar.h. ◆ Unzoom(). void TParallelCoordVar::Unzoom ; (; ). inline . Definition at line 115 of file TParallelCoordVar.h. Member Data Docume",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:31451,Modifiability,variab,variable,31451,"lCoordVar::SetX ; (; Double_t ; x, . bool ; gl . ). Set the X position of the axis in the case of a vertical axis. ; and rotate the axis if it was horizontal. ; Definition at line 992 of file TParallelCoordVar.cxx. ◆ SetY(). void TParallelCoordVar::SetY ; (; Double_t ; y, . bool ; gl . ). Set the Y position of the axis in the case of a horizontal axis. ; and rotate the axis if it was vertical. ; Definition at line 1011 of file TParallelCoordVar.cxx. ◆ Streamer(). void TParallelCoordVar::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TNamed. ◆ StreamerNVirtual(). void TParallelCoordVar::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 117 of file TParallelCoordVar.h. ◆ Unzoom(). void TParallelCoordVar::Unzoom ; (; ). inline . Definition at line 115 of file TParallelCoordVar.h. Member Data Documentation. ◆ fHistogram. TH1F* TParallelCoordVar::fHistogram. private . ! Histogram holding the variable distribution. ; Definition at line 52 of file TParallelCoordVar.h. ◆ fHistoHeight. Double_t TParallelCoordVar::fHistoHeight. private . Histogram Height. ; Definition at line 48 of file TParallelCoordVar.h. ◆ fHistoLW. Int_t TParallelCoordVar::fHistoLW. private . Line width used to draw the histogram line. ; Definition at line 33 of file TParallelCoordVar.h. ◆ fId. Int_t TParallelCoordVar::fId. private . Id identifying the variable for the editor. ; Definition at line 34 of file TParallelCoordVar.h. ◆ fMaxCurrent. Double_t TParallelCoordVar::fMaxCurrent. private . Current used maximum. ; Definition at line 44 of file TParallelCoordVar.h. ◆ fMaxInit. Double_t TParallelCoordVar::fMaxInit. private . Memory of the maximum when first initialized. ; Definition at line 41 of file TParallelCoordVar.h. ◆ fMean. Double_t TParallelCoordVar::fMean. private . Average. ; Definition at line 42 of file TParallelCoordVar.h. ◆ fMed. Double_t TParallelCoordVar::fMed. private . Median value (Q2).",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:31886,Modifiability,variab,variable,31886,lCoordVar.cxx. ◆ Streamer(). void TParallelCoordVar::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TNamed. ◆ StreamerNVirtual(). void TParallelCoordVar::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 117 of file TParallelCoordVar.h. ◆ Unzoom(). void TParallelCoordVar::Unzoom ; (; ). inline . Definition at line 115 of file TParallelCoordVar.h. Member Data Documentation. ◆ fHistogram. TH1F* TParallelCoordVar::fHistogram. private . ! Histogram holding the variable distribution. ; Definition at line 52 of file TParallelCoordVar.h. ◆ fHistoHeight. Double_t TParallelCoordVar::fHistoHeight. private . Histogram Height. ; Definition at line 48 of file TParallelCoordVar.h. ◆ fHistoLW. Int_t TParallelCoordVar::fHistoLW. private . Line width used to draw the histogram line. ; Definition at line 33 of file TParallelCoordVar.h. ◆ fId. Int_t TParallelCoordVar::fId. private . Id identifying the variable for the editor. ; Definition at line 34 of file TParallelCoordVar.h. ◆ fMaxCurrent. Double_t TParallelCoordVar::fMaxCurrent. private . Current used maximum. ; Definition at line 44 of file TParallelCoordVar.h. ◆ fMaxInit. Double_t TParallelCoordVar::fMaxInit. private . Memory of the maximum when first initialized. ; Definition at line 41 of file TParallelCoordVar.h. ◆ fMean. Double_t TParallelCoordVar::fMean. private . Average. ; Definition at line 42 of file TParallelCoordVar.h. ◆ fMed. Double_t TParallelCoordVar::fMed. private . Median value (Q2). ; Definition at line 45 of file TParallelCoordVar.h. ◆ fMinCurrent. Double_t TParallelCoordVar::fMinCurrent. private . Current used minimum. ; Definition at line 43 of file TParallelCoordVar.h. ◆ fMinInit. Double_t TParallelCoordVar::fMinInit. private . Memory of the minimum when first initialized. ; Definition at line 40 of file TParallelCoordVar.h. ◆ fNbins. Int_t TParallelCoordVar::fNbins. private . Number of bins in fHistogram. ;,MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:33783,Modifiability,variab,variable,33783,it. private . Memory of the minimum when first initialized. ; Definition at line 40 of file TParallelCoordVar.h. ◆ fNbins. Int_t TParallelCoordVar::fNbins. private . Number of bins in fHistogram. ; Definition at line 32 of file TParallelCoordVar.h. ◆ fNentries. Long64_t TParallelCoordVar::fNentries. private . Number of stored entries values. ; Definition at line 35 of file TParallelCoordVar.h. ◆ fParallel. TParallelCoord* TParallelCoordVar::fParallel. private . Pointer to the TParallelCoord which owns the TParallelCoordVar. ; Definition at line 51 of file TParallelCoordVar.h. ◆ fQua1. Double_t TParallelCoordVar::fQua1. private . First quantile (Q1). ; Definition at line 46 of file TParallelCoordVar.h. ◆ fQua3. Double_t TParallelCoordVar::fQua3. private . Third quantile (Q3). ; Definition at line 47 of file TParallelCoordVar.h. ◆ fRanges. TList* TParallelCoordVar::fRanges. private . List of the TParallelRange owned by TParallelCoordVar. ; Definition at line 50 of file TParallelCoordVar.h. ◆ fVal. Double_t* TParallelCoordVar::fVal. private . ![fNentries] Entries values for the variable. ; Definition at line 49 of file TParallelCoordVar.h. ◆ fX1. Double_t TParallelCoordVar::fX1. private . x1 coordinate of the axis. ; Definition at line 36 of file TParallelCoordVar.h. ◆ fX2. Double_t TParallelCoordVar::fX2. private . x2 coordinate of the axis. ; Definition at line 37 of file TParallelCoordVar.h. ◆ fY1. Double_t TParallelCoordVar::fY1. private . y1 coordinate of the axis. ; Definition at line 38 of file TParallelCoordVar.h. ◆ fY2. Double_t TParallelCoordVar::fY2. private . y2 coordinate of the axis. ; Definition at line 39 of file TParallelCoordVar.h. Libraries for TParallelCoordVar:. [legend]; The documentation for this class was generated from the following files:; tree/treeviewer/inc/TParallelCoordVar.h; tree/treeviewer/src/TParallelCoordVar.cxx. TParallelCoordVar. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:07 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:6652,Security,hash,hash,6652,"an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Unzoom ();  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to cur",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:853,Testability,log,logarithm,853,". ROOT: TParallelCoordVar Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TParallelCoordVar Class Reference. ; TParallelCoord axes. ; Class containing a variable for the TParallelCoord.; Options can be defined each axis separately using the right mouse click. These options can be applied to every axes using the editor. Axis width: If set to 0, the axis is simply a line. If higher, a color histogram is drawn on the axis.; Axis histogram height: If not 0, a usual bar histogram is drawn on the plot. The order in which the variables are drawn is essential to see the clusters. The axes can be dragged to change their position. A zoom is also available. The logarithm scale is also available by right clicking on the axis. ; Definition at line 24 of file TParallelCoordVar.h. Public Types; enum  EStatusBits { kLogScale = (1ULL << ( 14 )); , kShowBox = (1ULL << ( 15 )); , kShowBarHisto = (1ULL << ( 16 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TParallelCoordVar ();  Default constructor. ;  ;  TParallelCoordVar (Double_t *val, const char *title, Int_t id, TParallelCoord *gram);  Normal constructor. ;  ;  ~TParallelCoordVar () override;  Destructor. ;  ; void AddRange ()",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:5199,Testability,log,log,5199,"e axis labels and titles. ;  ; void Print (Option_t *option="""") const override;  Print the axis main data. ;  ; void SavePrimitive (std::ostream &out, Option_t *options) override;  Save the TParallelCoordVar as a macro. ;  ; void SetBarHisto (bool h);  ; void SetBoxPlot (bool box);  Set the axis to display a candle. ;  ; void SetCurrentLimits (Double_t min, Double_t max);  Set the limits within which one the entries must be painted. ;  ; void SetCurrentMax (Double_t max);  Set the current maximum of the axis. ;  ; void SetCurrentMin (Double_t min);  Set the current minimum of the axis. ;  ; void SetHistogramBinning (Int_t n=100);  Set the histogram binning. ;  ; void SetHistogramHeight (Double_t h=0);  Set the height of the bar histogram. ;  ; void SetHistogramLineWidth (Int_t lw=2);  ; void SetInitMax (Double_t max);  ; void SetInitMin (Double_t min);  ; void SetLiveRangesUpdate (bool on);  If true, the pad is updated while the motion of a dragged range. ;  ; void SetLogScale (bool log);  Set the axis in log scale. ;  ; void SetTitle (const char *) override;  Set the title of the TNamed. ;  ; void SetValues (Long64_t length, Double_t *val);  Set the variable values. ;  ; void SetX (Double_t x, bool gl);  Set the X position of the axis in the case of a vertical axis. ;  ; void SetY (Double_t y, bool gl);  Set the Y position of the axis in the case of a horizontal axis. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Unzoom ();  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an objec",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:5222,Testability,log,log,5222,"e axis labels and titles. ;  ; void Print (Option_t *option="""") const override;  Print the axis main data. ;  ; void SavePrimitive (std::ostream &out, Option_t *options) override;  Save the TParallelCoordVar as a macro. ;  ; void SetBarHisto (bool h);  ; void SetBoxPlot (bool box);  Set the axis to display a candle. ;  ; void SetCurrentLimits (Double_t min, Double_t max);  Set the limits within which one the entries must be painted. ;  ; void SetCurrentMax (Double_t max);  Set the current maximum of the axis. ;  ; void SetCurrentMin (Double_t min);  Set the current minimum of the axis. ;  ; void SetHistogramBinning (Int_t n=100);  Set the histogram binning. ;  ; void SetHistogramHeight (Double_t h=0);  Set the height of the bar histogram. ;  ; void SetHistogramLineWidth (Int_t lw=2);  ; void SetInitMax (Double_t max);  ; void SetInitMin (Double_t min);  ; void SetLiveRangesUpdate (bool on);  If true, the pad is updated while the motion of a dragged range. ;  ; void SetLogScale (bool log);  Set the axis in log scale. ;  ; void SetTitle (const char *) override;  Set the title of the TNamed. ;  ; void SetValues (Long64_t length, Double_t *val);  Set the variable values. ;  ; void SetX (Double_t x, bool gl);  Set the X position of the axis in the case of a vertical axis. ;  ; void SetY (Double_t y, bool gl);  Set the Y position of the axis in the case of a horizontal axis. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Unzoom ();  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an objec",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:29949,Testability,log,log,29949,"rallelCoordVar::SetHistogramBinning ; (; Int_t ; n = 100). Set the histogram binning. ; Definition at line 882 of file TParallelCoordVar.cxx. ◆ SetHistogramHeight(). void TParallelCoordVar::SetHistogramHeight ; (; Double_t ; h = 0). Set the height of the bar histogram. ; Definition at line 892 of file TParallelCoordVar.cxx. ◆ SetHistogramLineWidth(). void TParallelCoordVar::SetHistogramLineWidth ; (; Int_t ; lw = 2). inline . Definition at line 101 of file TParallelCoordVar.h. ◆ SetInitMax(). void TParallelCoordVar::SetInitMax ; (; Double_t ; max). inline . Definition at line 108 of file TParallelCoordVar.h. ◆ SetInitMin(). void TParallelCoordVar::SetInitMin ; (; Double_t ; min). inline . Definition at line 107 of file TParallelCoordVar.h. ◆ SetLiveRangesUpdate(). void TParallelCoordVar::SetLiveRangesUpdate ; (; bool ; on). If true, the pad is updated while the motion of a dragged range. ; Definition at line 945 of file TParallelCoordVar.cxx. ◆ SetLogScale(). void TParallelCoordVar::SetLogScale ; (; bool ; log). Set the axis in log scale. ; Definition at line 955 of file TParallelCoordVar.cxx. ◆ SetTitle(). void TParallelCoordVar::SetTitle ; (; const char * ; title). inlineoverridevirtual . Set the title of the TNamed. ; Reimplemented from TNamed.; Definition at line 111 of file TParallelCoordVar.h. ◆ SetValues(). void TParallelCoordVar::SetValues ; (; Long64_t ; length, . Double_t * ; val . ). Set the variable values. ; Definition at line 977 of file TParallelCoordVar.cxx. ◆ SetX(). void TParallelCoordVar::SetX ; (; Double_t ; x, . bool ; gl . ). Set the X position of the axis in the case of a vertical axis. ; and rotate the axis if it was horizontal. ; Definition at line 992 of file TParallelCoordVar.cxx. ◆ SetY(). void TParallelCoordVar::SetY ; (; Double_t ; y, . bool ; gl . ). Set the Y position of the axis in the case of a horizontal axis. ; and rotate the axis if it was vertical. ; Definition at line 1011 of file TParallelCoordVar.cxx. ◆ Streamer(). void TPara",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:29971,Testability,log,log,29971," Int_t ; n = 100). Set the histogram binning. ; Definition at line 882 of file TParallelCoordVar.cxx. ◆ SetHistogramHeight(). void TParallelCoordVar::SetHistogramHeight ; (; Double_t ; h = 0). Set the height of the bar histogram. ; Definition at line 892 of file TParallelCoordVar.cxx. ◆ SetHistogramLineWidth(). void TParallelCoordVar::SetHistogramLineWidth ; (; Int_t ; lw = 2). inline . Definition at line 101 of file TParallelCoordVar.h. ◆ SetInitMax(). void TParallelCoordVar::SetInitMax ; (; Double_t ; max). inline . Definition at line 108 of file TParallelCoordVar.h. ◆ SetInitMin(). void TParallelCoordVar::SetInitMin ; (; Double_t ; min). inline . Definition at line 107 of file TParallelCoordVar.h. ◆ SetLiveRangesUpdate(). void TParallelCoordVar::SetLiveRangesUpdate ; (; bool ; on). If true, the pad is updated while the motion of a dragged range. ; Definition at line 945 of file TParallelCoordVar.cxx. ◆ SetLogScale(). void TParallelCoordVar::SetLogScale ; (; bool ; log). Set the axis in log scale. ; Definition at line 955 of file TParallelCoordVar.cxx. ◆ SetTitle(). void TParallelCoordVar::SetTitle ; (; const char * ; title). inlineoverridevirtual . Set the title of the TNamed. ; Reimplemented from TNamed.; Definition at line 111 of file TParallelCoordVar.h. ◆ SetValues(). void TParallelCoordVar::SetValues ; (; Long64_t ; length, . Double_t * ; val . ). Set the variable values. ; Definition at line 977 of file TParallelCoordVar.cxx. ◆ SetX(). void TParallelCoordVar::SetX ; (; Double_t ; x, . bool ; gl . ). Set the X position of the axis in the case of a vertical axis. ; and rotate the axis if it was horizontal. ; Definition at line 992 of file TParallelCoordVar.cxx. ◆ SetY(). void TParallelCoordVar::SetY ; (; Double_t ; y, . bool ; gl . ). Set the Y position of the axis in the case of a horizontal axis. ; and rotate the axis if it was vertical. ; Definition at line 1011 of file TParallelCoordVar.cxx. ◆ Streamer(). void TParallelCoordVar::Streamer ; (; TBuffer & ; R",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelCoordVar.html:552,Usability,simpl,simply,552,". ROOT: TParallelCoordVar Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TParallelCoordVar Class Reference. ; TParallelCoord axes. ; Class containing a variable for the TParallelCoord.; Options can be defined each axis separately using the right mouse click. These options can be applied to every axes using the editor. Axis width: If set to 0, the axis is simply a line. If higher, a color histogram is drawn on the axis.; Axis histogram height: If not 0, a usual bar histogram is drawn on the plot. The order in which the variables are drawn is essential to see the clusters. The axes can be dragged to change their position. A zoom is also available. The logarithm scale is also available by right clicking on the axis. ; Definition at line 24 of file TParallelCoordVar.h. Public Types; enum  EStatusBits { kLogScale = (1ULL << ( 14 )); , kShowBox = (1ULL << ( 15 )); , kShowBarHisto = (1ULL << ( 16 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TParallelCoordVar ();  Default constructor. ;  ;  TParallelCoordVar (Double_t *val, const char *title, Int_t id, TParallelCoord *gram);  Normal constructor. ;  ;  ~TParallelCoordVar () override;  Destructor. ;  ; void AddRange ()",MatchSource.WIKI,doc/master/classTParallelCoordVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html
https://root.cern/doc/master/classTParallelMergingFile.html:3151,Availability,alive,alive,3151,"RCompressionSetting::EDefaults::kUseCompiledDefault, Long64_t defBlockSize=0LL);  Usual Constructor. ;  ;  TMemFile (const char *name, std::unique_ptr< TBufferFile > buffer);  Constructor to create a read-only TMemFile using an std::unique_ptr<TBufferFile> ;  ;  TMemFile (const TMemFile &orig);  Copying the content of the TMemFile into another TMemFile. ;  ;  ~TMemFile () override;  Close and clean-up file. ;  ; virtual void CopyTo (TBuffer &tobuf) const;  Copy the binary representation of the TMemFile into the TBuffer tobuf. ;  ; virtual Long64_t CopyTo (void *to, Long64_t maxsize) const;  Copy the binary representation of the TMemFile into the memory area starting at 'to' and of length at most 'maxsize' returns the number of bytes actually copied. ;  ; Long64_t GetSize () const override;  Return the current size of the memory file. ;  ; void Print (Option_t *option="""") const override;  Print all objects in the file. ;  ; void ResetAfterMerge (TFileMergeInfo *) override;  Wipe all the data from the permanent buffer but keep, the in-memory object alive. ;  ; void ResetErrno () const override;  Simply calls TSystem::ResetErrno(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TFile;  TFile ();  File default Constructor. ;  ;  TFile (const char *fname, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Opens or creates a local ROOT file. ;  ;  ~TFile () override;  File destructor. ;  ; void Copy (TObject &) const override;  Copy this to obj. ;  ; virtual Bool_t Cp (const char *dst, Bool_t progressbar=kTRUE, UInt_t buffersize=1000000);  Allows to copy this file to the dst URL. ;  ; virtual TKey * CreateKey (TDirectory *mother, const TObject *obj, const char *name, Int_t bufsize);  Creates key for object and converts data to buffer. ;  ; virtual TKey * CreateKey (TDirectory *mother, const void *obj, const TClass *cl, const char *name, Int_t",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:8179,Availability,recover,recover,8179,"ption_t *opt);  List the contents of a file sequentially. ;  ; virtual Bool_t Matches (const char *name);  Return kTRUE if 'url' matches the coordinates of this file. ;  ; virtual Bool_t MustFlush () const;  ; void Paint (Option_t *option="""") override;  Paint all objects in the file. ;  ; virtual Bool_t ReadBuffer (char *buf, Int_t len);  Read a buffer from the file. ;  ; virtual Bool_t ReadBuffer (char *buf, Long64_t pos, Int_t len);  Read a buffer from the file at the offset 'pos' in the file. ;  ; virtual Bool_t ReadBufferAsync (Long64_t offs, Int_t len);  ; virtual Bool_t ReadBuffers (char *buf, Long64_t *pos, Int_t *len, Int_t nbuf);  Read the nbuf blocks described in arrays pos and len. ;  ; virtual void ReadFree ();  Read the FREE linked list. ;  ; virtual TProcessID * ReadProcessID (UShort_t pidf);  The TProcessID with number pidf is read from this file. ;  ; virtual void ReadStreamerInfo ();  Read the list of StreamerInfo from this file. ;  ; virtual Int_t Recover ();  Attempt to recover file if not correctly closed. ;  ; virtual Int_t ReOpen (Option_t *mode);  Reopen a file with a different access mode. ;  ; virtual void Seek (Long64_t offset, ERelativeTo pos=kBeg);  Seek to a specific position in the file. Pos it either kBeg, kCur or kEnd. ;  ; virtual void SetCacheRead (TFileCacheRead *cache, TObject *tree=nullptr, ECacheAction action=kDisconnect);  Set a pointer to the read cache. ;  ; virtual void SetCacheWrite (TFileCacheWrite *cache);  Set a pointer to the write cache. ;  ; virtual void SetCompressionAlgorithm (Int_t algorithm=ROOT::RCompressionSetting::EAlgorithm::kUseGlobal);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionLevel (Int_t level=ROOT::RCompressionSetting::ELevel::kUseMin);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionSettings (Int_t settings=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Used to specify the compression level and algorithm. ;  ; virtua",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:20844,Availability,error,error,20844," *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer)",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:20933,Availability,error,error,20933,"ave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:21088,Availability,error,error,21088,"hether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, ",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:21385,Availability,error,error,21385,"putes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ; ",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:24878,Availability,error,error,24878," operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMemFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TFile; static TFileOpenHandle * AsyncOpen (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults:",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:33652,Availability,alive,alive,33652,"enced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TMemFile; enum class  EMode { kCreate; , kRecreate; , kUpdate; , kRead; };  ;  Protected Types inherited from TDirectory; using SharedGDirectory_t = std::shared_ptr< std::atomic< TDirectory * > >;  Pointer to a list of TContext object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TMemFile; Bool_t IsExternalData () const;  ; Long64_t MemRead (Int_t fd, void *buf, Long64_t len) const;  ; bool NeedsExistingFile (EMode mode) const;  ; bool NeedsToWrite (EMode mode) const;  ; TMemFile & operator= (const TMemFile &)=delete;  ; EMode ParseOption (Option_t *option);  Parse option strings and set fOption. ;  ; void ResetObjects (TDirectoryFile *, TFileMergeInfo *) const;  Wipe all the data from the permanent buffer but keep, the in-memory object alive. ;  ; Int_t SysClose (Int_t fd) override;  Close the mem file. ;  ; Int_t SysOpen (const char *pathname, Int_t flags, UInt_t mode) override;  Open a file in 'MemFile'. ;  ; Int_t SysRead (Int_t fd, void *buf, Int_t len) override;  Read specified number of bytes from current offset into the buffer. ;  ; Int_t SysReadImpl (Int_t fd, void *buf, Long64_t len);  Read specified number of bytes from current offset into the buffer. ;  ; Long64_t SysSeek (Int_t fd, Long64_t offset, Int_t whence) override;  Seek to a specified position in the file. ;  ; Int_t SysStat (Int_t fd, Long_t *id, Long64_t *size, Long_t *flags, Long_t *modtime) override;  Perform a stat on the file; see TFile::SysStat(). ;  ; Int_t SysSync (Int_t fd) override;  Sync remaining data to disk. ;  ; Int_t SysWrite (Int_t fd, const void *buf, Int_t len) override;  Write a buffer into the file. ;  ; Int_t SysWriteImpl (Int_t fd, const void *buf, Long64_",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:20850,Integrability,message,message,20850," *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer)",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:21391,Integrability,message,message,21391,"putes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ; ",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:22139,Integrability,message,message,22139,"ct with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be o",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:24884,Integrability,message,message,24884," operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMemFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TFile; static TFileOpenHandle * AsyncOpen (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults:",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:25257,Integrability,message,message,25257," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMemFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TFile; static TFileOpenHandle * AsyncOpen (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Submit an asynchronous open request. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Cp (const char *src, const char *dst, Bool_t progressbar=kTRUE, UInt_t buffersize=1000000);  Allows to copy file from src to dst URL. ;  ; static TFile *& CurrentFi",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:27663,Integrability,protocol,protocol,27663,"const char * GetCacheFileDir ();  Get the directory where to locally stage/cache remote files. ;  ; static const TUrl * GetEndpointUrl (const char *name);  Get final URL for file being opened asynchronously. ;  ; static Long64_t GetFileBytesRead ();  Static function returning the total number of bytes read from all files. ;  ; static Long64_t GetFileBytesWritten ();  Static function returning the total number of bytes written to all files. ;  ; static Long64_t GetFileCounter ();  ; static Int_t GetFileReadCalls ();  Static function returning the total number of read calls from all files. ;  ; static Bool_t GetOnlyStaged ();  Returns staged only flag. ;  ; static UInt_t GetOpenTimeout ();  Returns open timeout (in ms). ;  ; static Int_t GetReadaheadSize ();  Static function returning the readahead buffer size. ;  ; static Bool_t GetReadStreamerInfo ();  If the streamerinfos are to be read at file opening. ;  ; static EFileType GetType (const char *name, Option_t *option="""", TString *prefix=nullptr);  Resolve the file type as a function of the protocol field in 'name'. ;  ; static void IncrementFileCounter ();  ; static TFile * Open (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Create / open a file. ;  ; static TFile * Open (TFileOpenHandle *handle);  Waits for the completion of an asynchronous open request. ;  ; static Bool_t SetCacheFileDir (std::string_view cacheDir, Bool_t operateDisconnected=kTRUE, Bool_t forceCacheread=kFALSE);  Sets the directory where to locally stage/cache remote files. ;  ; static void SetFileBytesRead (Long64_t bytes=0);  ; static void SetFileBytesWritten (Long64_t bytes=0);  ; static void SetFileReadCalls (Int_t readcalls=0);  ; static Bool_t SetOnlyStaged (Bool_t onlystaged);  Sets only staged flag. ;  ; static UInt_t SetOpenTimeout (UInt_t timeout);  Sets open timeout time (in ms). Returns previous timeout value. ;  ; static void ",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:47528,Integrability,rout,routine,47528,"eimplemented from TMemFile. ◆ StreamerNVirtual(). void TParallelMergingFile::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 58 of file TParallelMergingFile.h. ◆ UploadAndReset(). Bool_t TParallelMergingFile::UploadAndReset ; (; ). Upload the current file data to the merging server. ; Reset the file and return true in case of success. ; Definition at line 76 of file TParallelMergingFile.cxx. ◆ Write() [1/2]. Int_t TParallelMergingFile::Write ; (; const char * ; name = nullptr, . Int_t ; opt = 0, . Int_t ; bufsiz = 0 . ); const. overridevirtual . One can not save a const TDirectory object. ; Reimplemented from TFile.; Definition at line 177 of file TParallelMergingFile.cxx. ◆ Write() [2/2]. Int_t TParallelMergingFile::Write ; (; const char * ; name = nullptr, . Int_t ; opt = 0, . Int_t ; bufsiz = 0 . ). overridevirtual . Write memory objects to this file and upload them to the parallel merge server. ; Then reset all the resetable object (those with a ResetAfterMerge routine, like TTree).; Loop on all objects in memory (including subdirectories). A new key is created in the KEYS linked list for each object. The list of keys is then saved on the file (via WriteKeys) as a single data record. For values of opt see TObject::Write(). The directory header info is rewritten on the directory header record. The linked list of FREE segments is written. The file header is written (bytes 1->fBEGIN). ; Reimplemented from TFile.; Definition at line 165 of file TParallelMergingFile.cxx. ◆ WriteStreamerInfo(). void TParallelMergingFile::WriteStreamerInfo ; (; ). overridevirtual . Write the list of TStreamerInfo as a single object in this file The class Streamer description for all classes written to this file is saved. ; See class TStreamerInfo. ; Reimplemented from TFile.; Definition at line 188 of file TParallelMergingFile.cxx. Member Data Documentation. ◆ fClassSent. TArrayC* TParallelMergingFile::fClassSent. private . Definition at line",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:1421,Modifiability,inherit,inherited,1421,"efault);  Constructor. ;  ;  ~TParallelMergingFile ();  Destructor. ;  ; void Close (Option_t *option="""") override;  Close a file. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream a TFile object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t UploadAndReset ();  Upload the current file data to the merging server. ;  ; Int_t Write (const char *name=nullptr, Int_t opt=0, Int_t bufsiz=0) const override;  One can not save a const TDirectory object. ;  ; Int_t Write (const char *name=nullptr, Int_t opt=0, Int_t bufsiz=0) override;  Write memory objects to this file and upload them to the parallel merge server. ;  ; void WriteStreamerInfo () override;  Write the list of TStreamerInfo as a single object in this file The class Streamer description for all classes written to this file is saved. ;  ;  Public Member Functions inherited from TMemFile;  TMemFile (const char *name, char *buffer, Long64_t size, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Long64_t defBlockSize=0LL);  Usual Constructor. See the TFile constructor for details. Copy data from buffer. ;  ;  TMemFile (const char *name, const ZeroCopyView_t &datarange);  Constructor to create a TMemFile re-using external C-Style storage. ;  ;  TMemFile (const char *name, ExternalDataPtr_t data);  Constructor to create a TMemFile re-using external storage. ;  ;  TMemFile (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Long64_t defBlockSize=0LL);  Usual Constructor. ;  ;  TMemFile (const char *name, std::unique_ptr< TBufferFile > buffer);  Constructor to create a read-only TMemFile using an std::unique_ptr<TBufferFile> ;  ;  TMemFile (const TMemFile &orig);  Copying the content of the TMemFile into another TMemFile. ;  ;  ~TMemFile () override;  Close and clean-up file. ;  ; virtual void CopyTo (TBuff",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:3330,Modifiability,inherit,inherited,3330,"g an std::unique_ptr<TBufferFile> ;  ;  TMemFile (const TMemFile &orig);  Copying the content of the TMemFile into another TMemFile. ;  ;  ~TMemFile () override;  Close and clean-up file. ;  ; virtual void CopyTo (TBuffer &tobuf) const;  Copy the binary representation of the TMemFile into the TBuffer tobuf. ;  ; virtual Long64_t CopyTo (void *to, Long64_t maxsize) const;  Copy the binary representation of the TMemFile into the memory area starting at 'to' and of length at most 'maxsize' returns the number of bytes actually copied. ;  ; Long64_t GetSize () const override;  Return the current size of the memory file. ;  ; void Print (Option_t *option="""") const override;  Print all objects in the file. ;  ; void ResetAfterMerge (TFileMergeInfo *) override;  Wipe all the data from the permanent buffer but keep, the in-memory object alive. ;  ; void ResetErrno () const override;  Simply calls TSystem::ResetErrno(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TFile;  TFile ();  File default Constructor. ;  ;  TFile (const char *fname, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Opens or creates a local ROOT file. ;  ;  ~TFile () override;  File destructor. ;  ; void Copy (TObject &) const override;  Copy this to obj. ;  ; virtual Bool_t Cp (const char *dst, Bool_t progressbar=kTRUE, UInt_t buffersize=1000000);  Allows to copy this file to the dst URL. ;  ; virtual TKey * CreateKey (TDirectory *mother, const TObject *obj, const char *name, Int_t bufsize);  Creates key for object and converts data to buffer. ;  ; virtual TKey * CreateKey (TDirectory *mother, const void *obj, const TClass *cl, const char *name, Int_t bufsize);  Creates key for object and converts data to buffer. ;  ; void Delete (const char *namecycle="""") override;  Delete object namecycle. ;  ; void Draw (Option_t *option="""") override;  Fill Graphics Structure and Pain",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:10185,Modifiability,inherit,inherited,10185,"tual void SetOffset (Long64_t offset, ERelativeTo pos=kBeg);  Set position from where to start reading. ;  ; virtual void SetOption (Option_t *option="">"");  ; virtual void SetReadCalls (Int_t readcalls=0);  ; virtual void ShowStreamerInfo ();  Show the StreamerInfo of all classes written to this file. ;  ; Int_t Sizeof () const override;  Return the size in bytes of the file header. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void SumBuffer (Int_t bufsize);  Increment statistics for buffer sizes of objects in this file. ;  ; virtual Bool_t WriteBuffer (const char *buf, Int_t len);  Write a buffer to the file. ;  ; virtual void WriteFree ();  Write FREE linked list on the file. ;  ; virtual void WriteHeader ();  Write File Header. ;  ; virtual UShort_t WriteProcessID (TProcessID *pid);  Check if the ProcessID pidd is already in the file, if not, add it and return the index number in the local file list. ;  ;  Public Member Functions inherited from TDirectoryFile;  TDirectoryFile ();  Default TDirectoryFile constructor. ;  ;  TDirectoryFile (const char *name, const char *title, Option_t *option="""", TDirectory *motherDir=nullptr);  Create a new TDirectoryFile. ;  ;  ~TDirectoryFile () override;  Destructor. ;  ; void Add (TObject *obj, Bool_t replace=kFALSE) override;  ; void Append (TObject *obj, Bool_t replace=kFALSE) override;  Append object to this directory. ;  ; Int_t AppendKey (TKey *key) override;  Insert key in the linked list of keys of this directory. ;  ; void Browse (TBrowser *b) override;  Browse the content of the directory. ;  ; void Build (TFile *motherFile=nullptr, TDirectory *motherDir=nullptr) override;  ; Bool_t cd () override;  Change current directory to ""this"" directory. ;  ; Bool_t cd (const char *path) override;  Change current directory the directory described by the path if given one. ;  ; TObject * CloneObject (const TObject *obj, Bool_t autoadd=kTRUE) override;  Make a clone of an object using the Streamer facilit",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:15820,Modifiability,inherit,inherited,15820,"d in the dictionary of the parent class and store the corresponding exec number into fBits. ;  ; void SetWritable (Bool_t writable=kTRUE) override;  Set the new value of fWritable recursively. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void WriteDirHeader () override;  Overwrite the Directory header record. ;  ; void WriteKeys () override;  Write Keys linked list on the file. ;  ; Int_t WriteObjectAny (const void *obj, const char *classname, const char *name, Option_t *option="""", Int_t bufsize=0) override;  Write object from pointer of class classname in this directory. ;  ; Int_t WriteObjectAny (const void *obj, const TClass *cl, const char *name, Option_t *option="""", Int_t bufsize=0) override;  Write object of class with dictionary cl in this directory. ;  ; Int_t WriteTObject (const TObject *obj, const char *name=nullptr, Option_t *option="""", Int_t bufsize=0) override;  Write object obj to this directory. ;  ;  Public Member Functions inherited from TDirectory;  TDirectory ();  Directory default constructor. ;  ;  TDirectory (const char *name, const char *title, Option_t *option="""", TDirectory *motherDir=nullptr);  Create a new Directory. ;  ; virtual ~TDirectory ();  Destructor. ;  ; void Clear (Option_t *option="""") override;  Delete all objects from a Directory list. ;  ; virtual void DeleteAll (Option_t *option="""");  Delete all objects from memory. ;  ; TObject * FindObject (const char *name) const override;  Find object by name in the list of memory objects. ;  ; TObject * FindObject (const TObject *obj) const override;  Find object in the list of memory objects. ;  ; template<class T > ; T * Get (const char *namecycle);  See documentation of TDirectoryFile::Get(const char *namecycle) ;  ; virtual TList * GetList () const;  ; TObject * GetMother () const;  ; TDirectory * GetMotherDir () const;  ; template<class T > ; void GetObject (const char *namecycle, T *&ptr);  Get an object with proper type checking. ;  ; virtual const char * G",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:18254,Modifiability,inherit,inherited,18254,"ecursively remove object from a Directory. ;  ; virtual TObject * Remove (TObject *);  Remove an object from the in-memory list. ;  ; virtual void SetMother (TObject *mother);  ; void SetName (const char *newname) override;  Set the name for directory If the directory name is changed after the directory was written once, ROOT currently would NOT change the name of correspondent key in the mother directory. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; template<typename T > ; std::enable_if_t<!std::is_base_of< TObject, T >::value, Int_t > WriteObject (const T *obj, const char *name, Option_t *option="""", Int_t bufsize=0);  Write an object with proper type checking. ;  ; template<typename T > ; std::enable_if_t< std::is_base_of< TObject, T >::value, Int_t > WriteObject (const T *obj, const char *name, Option_t *option="""", Int_t bufsize=0);  Write an object with proper type checking. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const ",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:19642,Modifiability,inherit,inherited,19642,"me="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:20480,Modifiability,inherit,inheritance,20480,"SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics sys",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:22237,Modifiability,inherit,inherits,22237,"Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op).",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:22354,Modifiability,inherit,inherits,22354,"nst char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method ",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:25490,Modifiability,inherit,inherited,25490,"n="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMemFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TFile; static TFileOpenHandle * AsyncOpen (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Submit an asynchronous open request. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Cp (const char *src, const char *dst, Bool_t progressbar=kTRUE, UInt_t buffersize=1000000);  Allows to copy file from src to dst URL. ;  ; static TFile *& CurrentFile ();  Return the current ROOT file if any. ;  ; static const char * DeclFileName ();  ; static EAsyncOpenStatus GetAsyncOpenStatus (const char *name);  Get status of the async open request related to 'name'. ;  ; static EAsyncOpenStatus GetAsyncOpenStatus (TFileOpenHandle *handle);  Get status of the async open request related to 'handle'. ;  ; static const",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:25702,Modifiability,inherit,inherited,25702,"n="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMemFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TFile; static TFileOpenHandle * AsyncOpen (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Submit an asynchronous open request. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Cp (const char *src, const char *dst, Bool_t progressbar=kTRUE, UInt_t buffersize=1000000);  Allows to copy file from src to dst URL. ;  ; static TFile *& CurrentFile ();  Return the current ROOT file if any. ;  ; static const char * DeclFileName ();  ; static EAsyncOpenStatus GetAsyncOpenStatus (const char *name);  Get status of the async open request related to 'name'. ;  ; static EAsyncOpenStatus GetAsyncOpenStatus (TFileOpenHandle *handle);  Get status of the async open request related to 'handle'. ;  ; static const",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:28935,Modifiability,inherit,inherited,28935,"l_t operateDisconnected=kTRUE, Bool_t forceCacheread=kFALSE);  Sets the directory where to locally stage/cache remote files. ;  ; static void SetFileBytesRead (Long64_t bytes=0);  ; static void SetFileBytesWritten (Long64_t bytes=0);  ; static void SetFileReadCalls (Int_t readcalls=0);  ; static Bool_t SetOnlyStaged (Bool_t onlystaged);  Sets only staged flag. ;  ; static UInt_t SetOpenTimeout (UInt_t timeout);  Sets open timeout time (in ms). Returns previous timeout value. ;  ; static void SetReadaheadSize (Int_t bufsize=256000);  ; static void SetReadStreamerInfo (Bool_t readinfo=kTRUE);  Specify if the streamerinfos must be read at file opening. ;  ; static Bool_t ShrinkCacheFileDir (Long64_t shrinkSize, Long_t cleanupInteval=0);  Try to shrink the cache to the desired size. ;  ;  Static Public Member Functions inherited from TDirectoryFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDirectory; static void AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add objects like histograms, TGraph2D, etc in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: see TDirectory::AddDirectory for more comments. ;  ; static Bool_t Cd (const char *path);  Change current directory to ""path"". ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static std::atomic< TDirectory * > & CurrentDirectory ();  Return the current directory for the current thread. ;  ; static const char * DeclFileName ();  ; static void DecodeNameCycle (const char *namecycle, char *name, Short_t &cycle, const size_t namesize=0);  Decode a namecycle ""aap;2"" into name ""aap"" and cycle ""2"". ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:29153,Modifiability,inherit,inherited,29153,"l_t operateDisconnected=kTRUE, Bool_t forceCacheread=kFALSE);  Sets the directory where to locally stage/cache remote files. ;  ; static void SetFileBytesRead (Long64_t bytes=0);  ; static void SetFileBytesWritten (Long64_t bytes=0);  ; static void SetFileReadCalls (Int_t readcalls=0);  ; static Bool_t SetOnlyStaged (Bool_t onlystaged);  Sets only staged flag. ;  ; static UInt_t SetOpenTimeout (UInt_t timeout);  Sets open timeout time (in ms). Returns previous timeout value. ;  ; static void SetReadaheadSize (Int_t bufsize=256000);  ; static void SetReadStreamerInfo (Bool_t readinfo=kTRUE);  Specify if the streamerinfos must be read at file opening. ;  ; static Bool_t ShrinkCacheFileDir (Long64_t shrinkSize, Long_t cleanupInteval=0);  Try to shrink the cache to the desired size. ;  ;  Static Public Member Functions inherited from TDirectoryFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDirectory; static void AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add objects like histograms, TGraph2D, etc in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: see TDirectory::AddDirectory for more comments. ;  ; static Bool_t Cd (const char *path);  Change current directory to ""path"". ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static std::atomic< TDirectory * > & CurrentDirectory ();  Return the current directory for the current thread. ;  ; static const char * DeclFileName ();  ; static void DecodeNameCycle (const char *namecycle, char *name, Short_t &cycle, const size_t namesize=0);  Decode a namecycle ""aap;2"" into name ""aap"" and cycle ""2"". ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:29986,Modifiability,inherit,inherited,29986,"AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add objects like histograms, TGraph2D, etc in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: see TDirectory::AddDirectory for more comments. ;  ; static Bool_t Cd (const char *path);  Change current directory to ""path"". ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static std::atomic< TDirectory * > & CurrentDirectory ();  Return the current directory for the current thread. ;  ; static const char * DeclFileName ();  ; static void DecodeNameCycle (const char *namecycle, char *name, Short_t &cycle, const size_t namesize=0);  Decode a namecycle ""aap;2"" into name ""aap"" and cycle ""2"". ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TArrayC * fClassSent;  ; TMessage fMessage;  ; Int_t fServerIdx;  ; TUrl fServerLocation;  ; Int_t fServerVersion;  ; TSocket * fSocket;  . Additional Inherited Members;  Public Types inherited from TMemFile; using ExternalDataPtr_t = std::shared_ptr< const std::vector< char > >;  ;  Public Types inherited from TFile; enum  { kStartBigFile = 2000000000; };  ; enum  EAsyncOpenStatus { kAOSNotAsync = -1; , kAOSFailure = 0; , kAOSInProgress = 1; , kAOSSuccess = 2; };  Asynchronous open req",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:30196,Modifiability,inherit,inherited,30196,"AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add objects like histograms, TGraph2D, etc in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: see TDirectory::AddDirectory for more comments. ;  ; static Bool_t Cd (const char *path);  Change current directory to ""path"". ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static std::atomic< TDirectory * > & CurrentDirectory ();  Return the current directory for the current thread. ;  ; static const char * DeclFileName ();  ; static void DecodeNameCycle (const char *namecycle, char *name, Short_t &cycle, const size_t namesize=0);  Decode a namecycle ""aap;2"" into name ""aap"" and cycle ""2"". ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TArrayC * fClassSent;  ; TMessage fMessage;  ; Int_t fServerIdx;  ; TUrl fServerLocation;  ; Int_t fServerVersion;  ; TSocket * fSocket;  . Additional Inherited Members;  Public Types inherited from TMemFile; using ExternalDataPtr_t = std::shared_ptr< const std::vector< char > >;  ;  Public Types inherited from TFile; enum  { kStartBigFile = 2000000000; };  ; enum  EAsyncOpenStatus { kAOSNotAsync = -1; , kAOSFailure = 0; , kAOSInProgress = 1; , kAOSSuccess = 2; };  Asynchronous open req",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:30886,Modifiability,inherit,inherited,30886,"* Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TArrayC * fClassSent;  ; TMessage fMessage;  ; Int_t fServerIdx;  ; TUrl fServerLocation;  ; Int_t fServerVersion;  ; TSocket * fSocket;  . Additional Inherited Members;  Public Types inherited from TMemFile; using ExternalDataPtr_t = std::shared_ptr< const std::vector< char > >;  ;  Public Types inherited from TFile; enum  { kStartBigFile = 2000000000; };  ; enum  EAsyncOpenStatus { kAOSNotAsync = -1; , kAOSFailure = 0; , kAOSInProgress = 1; , kAOSSuccess = 2; };  Asynchronous open request status. More...;  ; enum  ECacheAction { kDisconnect = 0; , kDoNotDisconnect = 1; };  TTreeCache flushing semantics. More...;  ; enum  EFileType { ;   kDefault = 0; , kLocal = 1; , kNet = 2; , kWeb = 3; , ;   kFile = 4; , kMerge = 5. };  File type. More...;  ; enum  EOpenTimeOut { kInstantTimeout = 0; , kEternalTimeout = 999999999; };  Open timeout constants. More...;  ; enum  ERelativeTo { kBeg = 0; , kCur = 1; , kEnd = 2; };  ; enum  EStatusBits { ;   k630forwardCompatibility = (1ULL << ( 2 )); , kRecovered = (1ULL << ( 10 )); , kHasReferences = (1ULL << ( 11 )); , kDevNull = (1ULL << ( 12 )); , ;   kWriteError = (1ULL << ( 14 )); , kBinaryFile = (1ULL << ( 15 )); , kRedirected = (1ULL << ( 16 )); , kReproducible = (1ULL << ( 17 )). };  TFile status bits. BIT(13) is taken up by TObject. More...;  ;  Public Types",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:31000,Modifiability,inherit,inherited,31000,"* Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TArrayC * fClassSent;  ; TMessage fMessage;  ; Int_t fServerIdx;  ; TUrl fServerLocation;  ; Int_t fServerVersion;  ; TSocket * fSocket;  . Additional Inherited Members;  Public Types inherited from TMemFile; using ExternalDataPtr_t = std::shared_ptr< const std::vector< char > >;  ;  Public Types inherited from TFile; enum  { kStartBigFile = 2000000000; };  ; enum  EAsyncOpenStatus { kAOSNotAsync = -1; , kAOSFailure = 0; , kAOSInProgress = 1; , kAOSSuccess = 2; };  Asynchronous open request status. More...;  ; enum  ECacheAction { kDisconnect = 0; , kDoNotDisconnect = 1; };  TTreeCache flushing semantics. More...;  ; enum  EFileType { ;   kDefault = 0; , kLocal = 1; , kNet = 2; , kWeb = 3; , ;   kFile = 4; , kMerge = 5. };  File type. More...;  ; enum  EOpenTimeOut { kInstantTimeout = 0; , kEternalTimeout = 999999999; };  Open timeout constants. More...;  ; enum  ERelativeTo { kBeg = 0; , kCur = 1; , kEnd = 2; };  ; enum  EStatusBits { ;   k630forwardCompatibility = (1ULL << ( 2 )); , kRecovered = (1ULL << ( 10 )); , kHasReferences = (1ULL << ( 11 )); , kDevNull = (1ULL << ( 12 )); , ;   kWriteError = (1ULL << ( 14 )); , kBinaryFile = (1ULL << ( 15 )); , kRedirected = (1ULL << ( 16 )); , kReproducible = (1ULL << ( 17 )). };  TFile status bits. BIT(13) is taken up by TObject. More...;  ;  Public Types",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:32024,Modifiability,inherit,inherited,32024,"AOSSuccess = 2; };  Asynchronous open request status. More...;  ; enum  ECacheAction { kDisconnect = 0; , kDoNotDisconnect = 1; };  TTreeCache flushing semantics. More...;  ; enum  EFileType { ;   kDefault = 0; , kLocal = 1; , kNet = 2; , kWeb = 3; , ;   kFile = 4; , kMerge = 5. };  File type. More...;  ; enum  EOpenTimeOut { kInstantTimeout = 0; , kEternalTimeout = 999999999; };  Open timeout constants. More...;  ; enum  ERelativeTo { kBeg = 0; , kCur = 1; , kEnd = 2; };  ; enum  EStatusBits { ;   k630forwardCompatibility = (1ULL << ( 2 )); , kRecovered = (1ULL << ( 10 )); , kHasReferences = (1ULL << ( 11 )); , kDevNull = (1ULL << ( 12 )); , ;   kWriteError = (1ULL << ( 14 )); , kBinaryFile = (1ULL << ( 15 )); , kRedirected = (1ULL << ( 16 )); , kReproducible = (1ULL << ( 17 )). };  TFile status bits. BIT(13) is taken up by TObject. More...;  ;  Public Types inherited from TDirectoryFile; enum  EStatusBits { kCloseDirectory = (1ULL << ( 7 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TMemFile; enum class  EMode { kCreate; , kRecreate; , kUpdate; , kRead; };  ;  Protected Types inherited from TDirectory; using SharedGDirectory_t = std::shared_ptr< std::atomic< TDirectory * > >;  Pointer to a list of TContext object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:32130,Modifiability,inherit,inherited,32130,"AOSSuccess = 2; };  Asynchronous open request status. More...;  ; enum  ECacheAction { kDisconnect = 0; , kDoNotDisconnect = 1; };  TTreeCache flushing semantics. More...;  ; enum  EFileType { ;   kDefault = 0; , kLocal = 1; , kNet = 2; , kWeb = 3; , ;   kFile = 4; , kMerge = 5. };  File type. More...;  ; enum  EOpenTimeOut { kInstantTimeout = 0; , kEternalTimeout = 999999999; };  Open timeout constants. More...;  ; enum  ERelativeTo { kBeg = 0; , kCur = 1; , kEnd = 2; };  ; enum  EStatusBits { ;   k630forwardCompatibility = (1ULL << ( 2 )); , kRecovered = (1ULL << ( 10 )); , kHasReferences = (1ULL << ( 11 )); , kDevNull = (1ULL << ( 12 )); , ;   kWriteError = (1ULL << ( 14 )); , kBinaryFile = (1ULL << ( 15 )); , kRedirected = (1ULL << ( 16 )); , kReproducible = (1ULL << ( 17 )). };  TFile status bits. BIT(13) is taken up by TObject. More...;  ;  Public Types inherited from TDirectoryFile; enum  EStatusBits { kCloseDirectory = (1ULL << ( 7 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TMemFile; enum class  EMode { kCreate; , kRecreate; , kUpdate; , kRead; };  ;  Protected Types inherited from TDirectory; using SharedGDirectory_t = std::shared_ptr< std::atomic< TDirectory * > >;  Pointer to a list of TContext object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:32771,Modifiability,inherit,inherited,32771,"( 16 )); , kReproducible = (1ULL << ( 17 )). };  TFile status bits. BIT(13) is taken up by TObject. More...;  ;  Public Types inherited from TDirectoryFile; enum  EStatusBits { kCloseDirectory = (1ULL << ( 7 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TMemFile; enum class  EMode { kCreate; , kRecreate; , kUpdate; , kRead; };  ;  Protected Types inherited from TDirectory; using SharedGDirectory_t = std::shared_ptr< std::atomic< TDirectory * > >;  Pointer to a list of TContext object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TMemFile; Bool_t IsExternalData () const;  ; Long64_t MemRead (Int_t fd, void *buf, Long64_t len) const;  ; bool NeedsExistingFile (EMode mode) const;  ; bool NeedsToWrite (EMode mode) const;  ; TMemFile & operator= (const TMemFile &)=delete;  ; EMode ParseOption (Option_t *option);  Parse option strings and set fOption. ;  ; void ResetObjects (TDirectoryFile *, TFileMergeInfo *) const;  Wipe all the data from the permanent buffer but keep, the in-memory object alive. ;  ; Int_t SysClose (Int_t fd) override;  Close the mem file. ;  ; Int_t SysOpen (const char *pathname, Int_t flags, UInt_t mode) override;  Open a file in 'MemFile'. ;  ; Int_t SysRead (Int_t fd, void *buf, Int_t len) override;  Read spec",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:32881,Modifiability,inherit,inherited,32881,"( 16 )); , kReproducible = (1ULL << ( 17 )). };  TFile status bits. BIT(13) is taken up by TObject. More...;  ;  Public Types inherited from TDirectoryFile; enum  EStatusBits { kCloseDirectory = (1ULL << ( 7 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TMemFile; enum class  EMode { kCreate; , kRecreate; , kUpdate; , kRead; };  ;  Protected Types inherited from TDirectory; using SharedGDirectory_t = std::shared_ptr< std::atomic< TDirectory * > >;  Pointer to a list of TContext object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TMemFile; Bool_t IsExternalData () const;  ; Long64_t MemRead (Int_t fd, void *buf, Long64_t len) const;  ; bool NeedsExistingFile (EMode mode) const;  ; bool NeedsToWrite (EMode mode) const;  ; TMemFile & operator= (const TMemFile &)=delete;  ; EMode ParseOption (Option_t *option);  Parse option strings and set fOption. ;  ; void ResetObjects (TDirectoryFile *, TFileMergeInfo *) const;  Wipe all the data from the permanent buffer but keep, the in-memory object alive. ;  ; Int_t SysClose (Int_t fd) override;  Close the mem file. ;  ; Int_t SysOpen (const char *pathname, Int_t flags, UInt_t mode) override;  Open a file in 'MemFile'. ;  ; Int_t SysRead (Int_t fd, void *buf, Int_t len) override;  Read spec",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:33072,Modifiability,inherit,inherited,33072,"kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TMemFile; enum class  EMode { kCreate; , kRecreate; , kUpdate; , kRead; };  ;  Protected Types inherited from TDirectory; using SharedGDirectory_t = std::shared_ptr< std::atomic< TDirectory * > >;  Pointer to a list of TContext object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TMemFile; Bool_t IsExternalData () const;  ; Long64_t MemRead (Int_t fd, void *buf, Long64_t len) const;  ; bool NeedsExistingFile (EMode mode) const;  ; bool NeedsToWrite (EMode mode) const;  ; TMemFile & operator= (const TMemFile &)=delete;  ; EMode ParseOption (Option_t *option);  Parse option strings and set fOption. ;  ; void ResetObjects (TDirectoryFile *, TFileMergeInfo *) const;  Wipe all the data from the permanent buffer but keep, the in-memory object alive. ;  ; Int_t SysClose (Int_t fd) override;  Close the mem file. ;  ; Int_t SysOpen (const char *pathname, Int_t flags, UInt_t mode) override;  Open a file in 'MemFile'. ;  ; Int_t SysRead (Int_t fd, void *buf, Int_t len) override;  Read specified number of bytes from current offset into the buffer. ;  ; Int_t SysReadImpl (Int_t fd, void *buf, Long64_t len);  Read specified number of bytes from current offset into the buffer. ;  ; Long64_t SysSeek (Int_t fd, Long64_t offset, Int_t whence) override;  Seek to a specified position in the file. ;  ; Int_t SysStat (Int_t fd, Long_t *id, Long64_t *size, Long_t *flags, Lon",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:33171,Modifiability,inherit,inherited,33171,"kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TMemFile; enum class  EMode { kCreate; , kRecreate; , kUpdate; , kRead; };  ;  Protected Types inherited from TDirectory; using SharedGDirectory_t = std::shared_ptr< std::atomic< TDirectory * > >;  Pointer to a list of TContext object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TMemFile; Bool_t IsExternalData () const;  ; Long64_t MemRead (Int_t fd, void *buf, Long64_t len) const;  ; bool NeedsExistingFile (EMode mode) const;  ; bool NeedsToWrite (EMode mode) const;  ; TMemFile & operator= (const TMemFile &)=delete;  ; EMode ParseOption (Option_t *option);  Parse option strings and set fOption. ;  ; void ResetObjects (TDirectoryFile *, TFileMergeInfo *) const;  Wipe all the data from the permanent buffer but keep, the in-memory object alive. ;  ; Int_t SysClose (Int_t fd) override;  Close the mem file. ;  ; Int_t SysOpen (const char *pathname, Int_t flags, UInt_t mode) override;  Open a file in 'MemFile'. ;  ; Int_t SysRead (Int_t fd, void *buf, Int_t len) override;  Read specified number of bytes from current offset into the buffer. ;  ; Int_t SysReadImpl (Int_t fd, void *buf, Long64_t len);  Read specified number of bytes from current offset into the buffer. ;  ; Long64_t SysSeek (Int_t fd, Long64_t offset, Int_t whence) override;  Seek to a specified position in the file. ;  ; Int_t SysStat (Int_t fd, Long_t *id, Long64_t *size, Long_t *flags, Lon",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:34655,Modifiability,inherit,inherited,34655,"s, UInt_t mode) override;  Open a file in 'MemFile'. ;  ; Int_t SysRead (Int_t fd, void *buf, Int_t len) override;  Read specified number of bytes from current offset into the buffer. ;  ; Int_t SysReadImpl (Int_t fd, void *buf, Long64_t len);  Read specified number of bytes from current offset into the buffer. ;  ; Long64_t SysSeek (Int_t fd, Long64_t offset, Int_t whence) override;  Seek to a specified position in the file. ;  ; Int_t SysStat (Int_t fd, Long_t *id, Long64_t *size, Long_t *flags, Long_t *modtime) override;  Perform a stat on the file; see TFile::SysStat(). ;  ; Int_t SysSync (Int_t fd) override;  Sync remaining data to disk. ;  ; Int_t SysWrite (Int_t fd, const void *buf, Int_t len) override;  Write a buffer into the file. ;  ; Int_t SysWriteImpl (Int_t fd, const void *buf, Long64_t len);  Write a buffer into the file. ;  ;  Protected Member Functions inherited from TFile; virtual Long64_t DirCreateEntry (TDirectory *);  ; virtual Int_t DirReadKeys (TDirectory *);  ; virtual void DirWriteHeader (TDirectory *);  ; virtual void DirWriteKeys (TDirectory *);  ; Bool_t FlushWriteCache ();  Flush the write cache if active. ;  ; virtual EAsyncOpenStatus GetAsyncOpenStatus ();  ; virtual InfoListRet GetStreamerInfoListImpl (bool lookupSICache);  See documentation of GetStreamerInfoList for more details. ;  ; virtual void Init (Bool_t create);  Initialize a TFile object. ;  ; Int_t MakeProjectParMake (const char *packname, const char *filename);  Create makefile at 'filemake' for PAR package 'pack'. ;  ; Int_t MakeProjectParProofInf (const char *packname, const char *proofinfdir);  Create BUILD.sh and SETUP.C under 'proofinf' for PAR package 'pack'. ;  ; Int_t ReadBufferViaCache (char *buf, Int_t len);  Read buffer via cache. ;  ; Int_t WriteBufferViaCache (const char *buf, Int_t len);  Write buffer via cache. ;  ;  Protected Member Functions inherited from TDirectoryFile; void BuildDirectoryFile (TFile *motherFile, TDirectory *motherDir);  Initialise direc",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:35657,Modifiability,inherit,inherited,35657,"ry (TDirectory *);  ; virtual Int_t DirReadKeys (TDirectory *);  ; virtual void DirWriteHeader (TDirectory *);  ; virtual void DirWriteKeys (TDirectory *);  ; Bool_t FlushWriteCache ();  Flush the write cache if active. ;  ; virtual EAsyncOpenStatus GetAsyncOpenStatus ();  ; virtual InfoListRet GetStreamerInfoListImpl (bool lookupSICache);  See documentation of GetStreamerInfoList for more details. ;  ; virtual void Init (Bool_t create);  Initialize a TFile object. ;  ; Int_t MakeProjectParMake (const char *packname, const char *filename);  Create makefile at 'filemake' for PAR package 'pack'. ;  ; Int_t MakeProjectParProofInf (const char *packname, const char *proofinfdir);  Create BUILD.sh and SETUP.C under 'proofinf' for PAR package 'pack'. ;  ; Int_t ReadBufferViaCache (char *buf, Int_t len);  Read buffer via cache. ;  ; Int_t WriteBufferViaCache (const char *buf, Int_t len);  Write buffer via cache. ;  ;  Protected Member Functions inherited from TDirectoryFile; void BuildDirectoryFile (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.) ;  ; void InitDirectoryFile (TClass *cl=nullptr);  Initialize the key associated with this directory (and the related data members. ;  ;  Protected Member Functions inherited from TDirectory;  TDirectory (const TDirectory &directory)=delete;  ; void BuildDirectory (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; Bool_t cd1 (const char *path);  flag to add histograms, graphs,etc to the directory ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.). ;  ; void FillFullPath (TString &buf) const;  Recursive method to fill full path for directory. ;  ; void operator= (const TDirectory &)=delete;  ; void RegisterContext (TContext *ctxt);  Register a TContext pointing to this TDirectory object. ;  ; void RegisterGDirectory (SharedGDirectory_t &ptr); ",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:36047,Modifiability,inherit,inherited,36047,"l void Init (Bool_t create);  Initialize a TFile object. ;  ; Int_t MakeProjectParMake (const char *packname, const char *filename);  Create makefile at 'filemake' for PAR package 'pack'. ;  ; Int_t MakeProjectParProofInf (const char *packname, const char *proofinfdir);  Create BUILD.sh and SETUP.C under 'proofinf' for PAR package 'pack'. ;  ; Int_t ReadBufferViaCache (char *buf, Int_t len);  Read buffer via cache. ;  ; Int_t WriteBufferViaCache (const char *buf, Int_t len);  Write buffer via cache. ;  ;  Protected Member Functions inherited from TDirectoryFile; void BuildDirectoryFile (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.) ;  ; void InitDirectoryFile (TClass *cl=nullptr);  Initialize the key associated with this directory (and the related data members. ;  ;  Protected Member Functions inherited from TDirectory;  TDirectory (const TDirectory &directory)=delete;  ; void BuildDirectory (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; Bool_t cd1 (const char *path);  flag to add histograms, graphs,etc to the directory ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.). ;  ; void FillFullPath (TString &buf) const;  Recursive method to fill full path for directory. ;  ; void operator= (const TDirectory &)=delete;  ; void RegisterContext (TContext *ctxt);  Register a TContext pointing to this TDirectory object. ;  ; void RegisterGDirectory (SharedGDirectory_t &ptr);  Register a std::atomic<TDirectory*> that will soon be pointing to this TDirectory object. ;  ; void UnregisterContext (TContext *ctxt);  UnRegister a TContext pointing to this TDirectory object. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ; ",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:36936,Modifiability,inherit,inherited,36936,"ted data members. ;  ;  Protected Member Functions inherited from TDirectory;  TDirectory (const TDirectory &directory)=delete;  ; void BuildDirectory (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; Bool_t cd1 (const char *path);  flag to add histograms, graphs,etc to the directory ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.). ;  ; void FillFullPath (TString &buf) const;  Recursive method to fill full path for directory. ;  ; void operator= (const TDirectory &)=delete;  ; void RegisterContext (TContext *ctxt);  Register a TContext pointing to this TDirectory object. ;  ; void RegisterGDirectory (SharedGDirectory_t &ptr);  Register a std::atomic<TDirectory*> that will soon be pointing to this TDirectory object. ;  ; void UnregisterContext (TContext *ctxt);  UnRegister a TContext pointing to this TDirectory object. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TDirectory; static Bool_t Cd1 (const char *path);  Change current directory to ""path"". ;  ; static SharedGDirectory_t & GetSharedLocalCurrentDirectory ();  Return the (address of) a shared pointer to the struct holding the actual thread local gDirectory pointer and the atomic_flag for its lock. ;  ;  Protected Attributes inherited from TMemFile; TMemBlock fBlockList;  Collection of memory blocks of size fgDefaultBlockSize. ;  ; Long64_t fBlockOffset {0};  Seek offset within the block. ;  ; TMemBlock * fBlockSeek {nullptr};  Pointer to the block we seeked to. ;  ; Long64_t fDefaultBlockSize = fgDefaultBlockSize;  ; ExternalDataPtr_t fExternalData;  shared file data / content ;  ; Bool_t fIsOwnedByROOT {kFALSE};  if this is a C-style memory region ;  ; Long64_t fSize {0};  Total file size (sum of the size of the chunk",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:37154,Modifiability,inherit,inherited,37154,"ctory *motherDir);  Initialise directory to defaults. ;  ; Bool_t cd1 (const char *path);  flag to add histograms, graphs,etc to the directory ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.). ;  ; void FillFullPath (TString &buf) const;  Recursive method to fill full path for directory. ;  ; void operator= (const TDirectory &)=delete;  ; void RegisterContext (TContext *ctxt);  Register a TContext pointing to this TDirectory object. ;  ; void RegisterGDirectory (SharedGDirectory_t &ptr);  Register a std::atomic<TDirectory*> that will soon be pointing to this TDirectory object. ;  ; void UnregisterContext (TContext *ctxt);  UnRegister a TContext pointing to this TDirectory object. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TDirectory; static Bool_t Cd1 (const char *path);  Change current directory to ""path"". ;  ; static SharedGDirectory_t & GetSharedLocalCurrentDirectory ();  Return the (address of) a shared pointer to the struct holding the actual thread local gDirectory pointer and the atomic_flag for its lock. ;  ;  Protected Attributes inherited from TMemFile; TMemBlock fBlockList;  Collection of memory blocks of size fgDefaultBlockSize. ;  ; Long64_t fBlockOffset {0};  Seek offset within the block. ;  ; TMemBlock * fBlockSeek {nullptr};  Pointer to the block we seeked to. ;  ; Long64_t fDefaultBlockSize = fgDefaultBlockSize;  ; ExternalDataPtr_t fExternalData;  shared file data / content ;  ; Bool_t fIsOwnedByROOT {kFALSE};  if this is a C-style memory region ;  ; Long64_t fSize {0};  Total file size (sum of the size of the chunks) ;  ; Long64_t fSysOffset {0};  Seek offset in file. ;  ;  Protected Attributes inherited from TFile; TArchiveFile * fArchive {nullptr};  !Archive file from which we read this",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:37492,Modifiability,inherit,inherited,37492," TDirectory &)=delete;  ; void RegisterContext (TContext *ctxt);  Register a TContext pointing to this TDirectory object. ;  ; void RegisterGDirectory (SharedGDirectory_t &ptr);  Register a std::atomic<TDirectory*> that will soon be pointing to this TDirectory object. ;  ; void UnregisterContext (TContext *ctxt);  UnRegister a TContext pointing to this TDirectory object. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TDirectory; static Bool_t Cd1 (const char *path);  Change current directory to ""path"". ;  ; static SharedGDirectory_t & GetSharedLocalCurrentDirectory ();  Return the (address of) a shared pointer to the struct holding the actual thread local gDirectory pointer and the atomic_flag for its lock. ;  ;  Protected Attributes inherited from TMemFile; TMemBlock fBlockList;  Collection of memory blocks of size fgDefaultBlockSize. ;  ; Long64_t fBlockOffset {0};  Seek offset within the block. ;  ; TMemBlock * fBlockSeek {nullptr};  Pointer to the block we seeked to. ;  ; Long64_t fDefaultBlockSize = fgDefaultBlockSize;  ; ExternalDataPtr_t fExternalData;  shared file data / content ;  ; Bool_t fIsOwnedByROOT {kFALSE};  if this is a C-style memory region ;  ; Long64_t fSize {0};  Total file size (sum of the size of the chunks) ;  ; Long64_t fSysOffset {0};  Seek offset in file. ;  ;  Protected Attributes inherited from TFile; TArchiveFile * fArchive {nullptr};  !Archive file from which we read this file ;  ; Long64_t fArchiveOffset {0};  !Offset at which file starts in archive ;  ; TFileOpenHandle * fAsyncHandle {nullptr};  !For proper automatic cleanup ;  ; EAsyncOpenStatus fAsyncOpenStatus {kAOSNotAsync};  !Status of an asynchronous open request ;  ; Long64_t fBEGIN {0};  First used byte in file. ;  ; Long64_t fBytesRead {0};  Number of bytes rea",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:38078,Modifiability,inherit,inherited,38078,tic SharedGDirectory_t & GetSharedLocalCurrentDirectory ();  Return the (address of) a shared pointer to the struct holding the actual thread local gDirectory pointer and the atomic_flag for its lock. ;  ;  Protected Attributes inherited from TMemFile; TMemBlock fBlockList;  Collection of memory blocks of size fgDefaultBlockSize. ;  ; Long64_t fBlockOffset {0};  Seek offset within the block. ;  ; TMemBlock * fBlockSeek {nullptr};  Pointer to the block we seeked to. ;  ; Long64_t fDefaultBlockSize = fgDefaultBlockSize;  ; ExternalDataPtr_t fExternalData;  shared file data / content ;  ; Bool_t fIsOwnedByROOT {kFALSE};  if this is a C-style memory region ;  ; Long64_t fSize {0};  Total file size (sum of the size of the chunks) ;  ; Long64_t fSysOffset {0};  Seek offset in file. ;  ;  Protected Attributes inherited from TFile; TArchiveFile * fArchive {nullptr};  !Archive file from which we read this file ;  ; Long64_t fArchiveOffset {0};  !Offset at which file starts in archive ;  ; TFileOpenHandle * fAsyncHandle {nullptr};  !For proper automatic cleanup ;  ; EAsyncOpenStatus fAsyncOpenStatus {kAOSNotAsync};  !Status of an asynchronous open request ;  ; Long64_t fBEGIN {0};  First used byte in file. ;  ; Long64_t fBytesRead {0};  Number of bytes read from this file. ;  ; Long64_t fBytesReadExtra {0};  Number of extra bytes (overhead) read by the readahead buffer. ;  ; Long64_t fBytesWrite {0};  Number of bytes written to this file. ;  ; TFileCacheRead * fCacheRead {nullptr};  !Pointer to the read cache (if any) ;  ; TMap * fCacheReadMap {nullptr};  !Pointer to the read cache (if any) ;  ; TFileCacheWrite * fCacheWrite {nullptr};  !Pointer to the write cache (if any) ;  ; TArrayC * fClassIndex {nullptr};  !Index of TStreamerInfo classes written to this file ;  ; Int_t fCompress {0};  Compression level and algorithm. ;  ; Int_t fD {-1};  File descriptor. ;  ; Long64_t fEND {0};  Last used byte in file. ;  ; TList * fFree {nullptr};  Free segments linked list table. ;  ; b,MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:41116,Modifiability,inherit,inherited,41116,;  !Seek offset cache ;  ; TList * fOpenPhases {nullptr};  !Time info about open phases ;  ; TString fOption;  File options. ;  ; TObjArray * fProcessIDs {nullptr};  !Array of pointers to TProcessIDs ;  ; Int_t fReadCalls {0};  Number of read calls ( not counting the cache calls ) ;  ; TString fRealName;  Effective real file name (not original url) ;  ; Long64_t fSeekFree {0};  Location on disk of free segments structure. ;  ; Long64_t fSeekInfo {0};  Location on disk of StreamerInfo record. ;  ; Double_t fSum2Buffer {0};  Sum of squares of buffer sizes of objects written so far. ;  ; Double_t fSumBuffer {0};  Sum of buffer sizes of objects written so far. ;  ; Char_t fUnits {0};  Number of bytes for file pointers. ;  ; TUrl fUrl;  !URL of file ;  ; Int_t fVersion {0};  File format version. ;  ; std::mutex fWriteMutex;  !Lock for writing baskets / keys into the file. ;  ; Int_t fWritten {0};  Number of objects written so far. ;  ;  Protected Attributes inherited from TDirectoryFile; Int_t fBufferSize {0};  Default buffer size to create new TKeys. ;  ; TDatime fDatimeC;  Date and time when directory is created. ;  ; TDatime fDatimeM;  Date and time of last modification. ;  ; TFile * fFile {nullptr};  Pointer to current file in memory. ;  ; TList * fKeys {nullptr};  Pointer to keys list in memory. ;  ; Bool_t fModified {kFALSE};  True if directory has been modified. ;  ; Int_t fNbytesKeys {0};  Number of bytes for the keys. ;  ; Int_t fNbytesName {0};  Number of bytes in TNamed at creation time. ;  ; Long64_t fSeekDir {0};  Location of directory on file. ;  ; Long64_t fSeekKeys {0};  Location of Keys record on file. ;  ; Long64_t fSeekParent {0};  Location of parent directory on file. ;  ; Bool_t fWritable {kFALSE};  True if directory is writable. ;  ;  Protected Attributes inherited from TDirectory; TContext * fContext {nullptr};  Buffer for GetPath() function. ;  ; std::atomic< size_t > fContextPeg {0};  thread local gDirectory pointing to this object. ;  ; std::vect,MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:41952,Modifiability,inherit,inherited,41952,Lock for writing baskets / keys into the file. ;  ; Int_t fWritten {0};  Number of objects written so far. ;  ;  Protected Attributes inherited from TDirectoryFile; Int_t fBufferSize {0};  Default buffer size to create new TKeys. ;  ; TDatime fDatimeC;  Date and time when directory is created. ;  ; TDatime fDatimeM;  Date and time of last modification. ;  ; TFile * fFile {nullptr};  Pointer to current file in memory. ;  ; TList * fKeys {nullptr};  Pointer to keys list in memory. ;  ; Bool_t fModified {kFALSE};  True if directory has been modified. ;  ; Int_t fNbytesKeys {0};  Number of bytes for the keys. ;  ; Int_t fNbytesName {0};  Number of bytes in TNamed at creation time. ;  ; Long64_t fSeekDir {0};  Location of directory on file. ;  ; Long64_t fSeekKeys {0};  Location of Keys record on file. ;  ; Long64_t fSeekParent {0};  Location of parent directory on file. ;  ; Bool_t fWritable {kFALSE};  True if directory is writable. ;  ;  Protected Attributes inherited from TDirectory; TContext * fContext {nullptr};  Buffer for GetPath() function. ;  ; std::atomic< size_t > fContextPeg {0};  thread local gDirectory pointing to this object. ;  ; std::vector< SharedGDirectory_t > fGDirectories;  ; TList * fList {nullptr};  ; TObject * fMother {nullptr};  ; TString fPathBuffer;  ; std::atomic_flag fSpinLock;  Counter delaying the TDirectory destructor from finishing. ;  ; TUUID fUUID;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from TMemFile; static constexpr Long64_t fgDefaultBlockSize = 2 * 1024 * 1024;  ;  Static Protected Attributes inherited from TFile; static TList * fgAsyncOpenRequests = nullptr;  ; static std::atomic< Long64_t > fgBytesRead {0};  Number of bytes read by all TFile objects. ;  ; static std::atomic< Long64_t > fgBytesWrite {0};  Number of bytes written by all TFile objects. ;  ; static TString fgCacheFileDir;  Directory where to locally stage files. ;  ; static Bool_t fgCac,MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:42408,Modifiability,inherit,inherited,42408,"of bytes for the keys. ;  ; Int_t fNbytesName {0};  Number of bytes in TNamed at creation time. ;  ; Long64_t fSeekDir {0};  Location of directory on file. ;  ; Long64_t fSeekKeys {0};  Location of Keys record on file. ;  ; Long64_t fSeekParent {0};  Location of parent directory on file. ;  ; Bool_t fWritable {kFALSE};  True if directory is writable. ;  ;  Protected Attributes inherited from TDirectory; TContext * fContext {nullptr};  Buffer for GetPath() function. ;  ; std::atomic< size_t > fContextPeg {0};  thread local gDirectory pointing to this object. ;  ; std::vector< SharedGDirectory_t > fGDirectories;  ; TList * fList {nullptr};  ; TObject * fMother {nullptr};  ; TString fPathBuffer;  ; std::atomic_flag fSpinLock;  Counter delaying the TDirectory destructor from finishing. ;  ; TUUID fUUID;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from TMemFile; static constexpr Long64_t fgDefaultBlockSize = 2 * 1024 * 1024;  ;  Static Protected Attributes inherited from TFile; static TList * fgAsyncOpenRequests = nullptr;  ; static std::atomic< Long64_t > fgBytesRead {0};  Number of bytes read by all TFile objects. ;  ; static std::atomic< Long64_t > fgBytesWrite {0};  Number of bytes written by all TFile objects. ;  ; static TString fgCacheFileDir;  Directory where to locally stage files. ;  ; static Bool_t fgCacheFileDisconnected = kTRUE;  Indicates, we trust in the files in the cache dir without stat on the cached file. ;  ; static Bool_t fgCacheFileForce = kFALSE;  Indicates, to force all READ to CACHEREAD. ;  ; static std::atomic< Long64_t > fgFileCounter {0};  Counter for all opened files. ;  ; static Bool_t fgOnlyStaged = kFALSE;  Before the file is opened, it is checked, that the file is staged, if not, the open fails. ;  ; static UInt_t fgOpenTimeout = TFile::kEternalTimeout;  Timeout for open operations in ms - 0 corresponds to blocking i/o. ;  ; static Int_t fgReadaheadSize = 2560",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:42497,Modifiability,inherit,inherited,42497,"of bytes for the keys. ;  ; Int_t fNbytesName {0};  Number of bytes in TNamed at creation time. ;  ; Long64_t fSeekDir {0};  Location of directory on file. ;  ; Long64_t fSeekKeys {0};  Location of Keys record on file. ;  ; Long64_t fSeekParent {0};  Location of parent directory on file. ;  ; Bool_t fWritable {kFALSE};  True if directory is writable. ;  ;  Protected Attributes inherited from TDirectory; TContext * fContext {nullptr};  Buffer for GetPath() function. ;  ; std::atomic< size_t > fContextPeg {0};  thread local gDirectory pointing to this object. ;  ; std::vector< SharedGDirectory_t > fGDirectories;  ; TList * fList {nullptr};  ; TObject * fMother {nullptr};  ; TString fPathBuffer;  ; std::atomic_flag fSpinLock;  Counter delaying the TDirectory destructor from finishing. ;  ; TUUID fUUID;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from TMemFile; static constexpr Long64_t fgDefaultBlockSize = 2 * 1024 * 1024;  ;  Static Protected Attributes inherited from TFile; static TList * fgAsyncOpenRequests = nullptr;  ; static std::atomic< Long64_t > fgBytesRead {0};  Number of bytes read by all TFile objects. ;  ; static std::atomic< Long64_t > fgBytesWrite {0};  Number of bytes written by all TFile objects. ;  ; static TString fgCacheFileDir;  Directory where to locally stage files. ;  ; static Bool_t fgCacheFileDisconnected = kTRUE;  Indicates, we trust in the files in the cache dir without stat on the cached file. ;  ; static Bool_t fgCacheFileForce = kFALSE;  Indicates, to force all READ to CACHEREAD. ;  ; static std::atomic< Long64_t > fgFileCounter {0};  Counter for all opened files. ;  ; static Bool_t fgOnlyStaged = kFALSE;  Before the file is opened, it is checked, that the file is staged, if not, the open fails. ;  ; static UInt_t fgOpenTimeout = TFile::kEternalTimeout;  Timeout for open operations in ms - 0 corresponds to blocking i/o. ;  ; static Int_t fgReadaheadSize = 2560",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:42618,Modifiability,inherit,inherited,42618,"of bytes for the keys. ;  ; Int_t fNbytesName {0};  Number of bytes in TNamed at creation time. ;  ; Long64_t fSeekDir {0};  Location of directory on file. ;  ; Long64_t fSeekKeys {0};  Location of Keys record on file. ;  ; Long64_t fSeekParent {0};  Location of parent directory on file. ;  ; Bool_t fWritable {kFALSE};  True if directory is writable. ;  ;  Protected Attributes inherited from TDirectory; TContext * fContext {nullptr};  Buffer for GetPath() function. ;  ; std::atomic< size_t > fContextPeg {0};  thread local gDirectory pointing to this object. ;  ; std::vector< SharedGDirectory_t > fGDirectories;  ; TList * fList {nullptr};  ; TObject * fMother {nullptr};  ; TString fPathBuffer;  ; std::atomic_flag fSpinLock;  Counter delaying the TDirectory destructor from finishing. ;  ; TUUID fUUID;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from TMemFile; static constexpr Long64_t fgDefaultBlockSize = 2 * 1024 * 1024;  ;  Static Protected Attributes inherited from TFile; static TList * fgAsyncOpenRequests = nullptr;  ; static std::atomic< Long64_t > fgBytesRead {0};  Number of bytes read by all TFile objects. ;  ; static std::atomic< Long64_t > fgBytesWrite {0};  Number of bytes written by all TFile objects. ;  ; static TString fgCacheFileDir;  Directory where to locally stage files. ;  ; static Bool_t fgCacheFileDisconnected = kTRUE;  Indicates, we trust in the files in the cache dir without stat on the cached file. ;  ; static Bool_t fgCacheFileForce = kFALSE;  Indicates, to force all READ to CACHEREAD. ;  ; static std::atomic< Long64_t > fgFileCounter {0};  Counter for all opened files. ;  ; static Bool_t fgOnlyStaged = kFALSE;  Before the file is opened, it is checked, that the file is staged, if not, the open fails. ;  ; static UInt_t fgOpenTimeout = TFile::kEternalTimeout;  Timeout for open operations in ms - 0 corresponds to blocking i/o. ;  ; static Int_t fgReadaheadSize = 2560",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:43947,Modifiability,inherit,inherited,43947,"bjects. ;  ; static TString fgCacheFileDir;  Directory where to locally stage files. ;  ; static Bool_t fgCacheFileDisconnected = kTRUE;  Indicates, we trust in the files in the cache dir without stat on the cached file. ;  ; static Bool_t fgCacheFileForce = kFALSE;  Indicates, to force all READ to CACHEREAD. ;  ; static std::atomic< Long64_t > fgFileCounter {0};  Counter for all opened files. ;  ; static Bool_t fgOnlyStaged = kFALSE;  Before the file is opened, it is checked, that the file is staged, if not, the open fails. ;  ; static UInt_t fgOpenTimeout = TFile::kEternalTimeout;  Timeout for open operations in ms - 0 corresponds to blocking i/o. ;  ; static Int_t fgReadaheadSize = 256000;  Readahead buffer size. ;  ; static std::atomic< Int_t > fgReadCalls {0};  Number of bytes read from all TFile objects. ;  ; static Bool_t fgReadInfo = kTRUE;  if true (default) ReadStreamerInfo is called when opening a file ;  ; static ROOT::Internal::RConcurrentHashColl fgTsSIHashes;  !TS Set of hashes built from read streamer infos ;  ;  Static Protected Attributes inherited from TDirectory; static Bool_t fgAddDirectory = kTRUE;  MSVC doesn't support = ATOMIC_FLAG_INIT;. ;  . #include <TParallelMergingFile.h>. Inheritance diagram for TParallelMergingFile:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TParallelMergingFile(). TParallelMergingFile::TParallelMergingFile ; (; const char * ; filename, . Option_t * ; option = """", . const char * ; ftitle = """", . Int_t ; compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault . ). Constructor. ; We do no yet open any connection to the server. This will be done at the time the first upload will be requested. ; Definition at line 35 of file TParallelMergingFile.cxx. ◆ ~TParallelMergingFile(). TParallelMergingFile::~TParallelMergingFile ; (; ). Destructor. ; Definition at line 49 of file TParallelMergingFile.cxx. Member Function Docu",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:5136,Performance,cache,cache,5136,"Int_t bufsize);  Creates key for object and converts data to buffer. ;  ; void Delete (const char *namecycle="""") override;  Delete object namecycle. ;  ; void Draw (Option_t *option="""") override;  Fill Graphics Structure and Paint. ;  ; virtual void DrawMap (const char *keys=""*"", Option_t *option="""");  Draw map of objects in this file. ;  ; void FillBuffer (char *&buffer) override;  Encode file output buffer. ;  ; virtual void Flush ();  Synchronize a file's in-memory and on-disk states. ;  ; TArchiveFile * GetArchive () const;  ; Long64_t GetArchiveOffset () const;  ; Int_t GetBestBuffer () const;  Return the best buffer size of objects on this file. ;  ; virtual Long64_t GetBytesRead () const;  ; virtual Long64_t GetBytesReadExtra () const;  ; virtual Int_t GetBytesToPrefetch () const;  Max number of bytes to prefetch. ;  ; virtual Long64_t GetBytesWritten () const;  Return the total number of bytes written so far to the file. ;  ; TFileCacheRead * GetCacheRead (const TObject *tree=nullptr) const;  Return a pointer to the current read cache. ;  ; TFileCacheWrite * GetCacheWrite () const;  Return a pointer to the current write cache. ;  ; TArrayC * GetClassIndex () const;  ; Int_t GetCompressionAlgorithm () const;  ; Float_t GetCompressionFactor ();  Return the file compression factor. ;  ; Int_t GetCompressionLevel () const;  ; Int_t GetCompressionSettings () const;  ; virtual Long64_t GetEND () const;  ; virtual const TUrl * GetEndpointUrl () const;  ; virtual Int_t GetErrno () const;  Method returning errno. ;  ; Int_t GetFd () const;  ; TList * GetListOfFree () const;  ; TObjArray * GetListOfProcessIDs () const;  ; virtual Int_t GetNbytesFree () const;  ; virtual Int_t GetNbytesInfo () const;  ; virtual TString GetNewUrl ();  ; virtual Int_t GetNfree () const;  ; virtual Int_t GetNProcessIDs () const;  ; Option_t * GetOption () const override;  ; virtual Int_t GetReadCalls () const;  ; Int_t GetRecordHeader (char *buf, Long64_t first, Int_t maxbytes, Int_t &nbyt",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:5229,Performance,cache,cache,5229,"cle="""") override;  Delete object namecycle. ;  ; void Draw (Option_t *option="""") override;  Fill Graphics Structure and Paint. ;  ; virtual void DrawMap (const char *keys=""*"", Option_t *option="""");  Draw map of objects in this file. ;  ; void FillBuffer (char *&buffer) override;  Encode file output buffer. ;  ; virtual void Flush ();  Synchronize a file's in-memory and on-disk states. ;  ; TArchiveFile * GetArchive () const;  ; Long64_t GetArchiveOffset () const;  ; Int_t GetBestBuffer () const;  Return the best buffer size of objects on this file. ;  ; virtual Long64_t GetBytesRead () const;  ; virtual Long64_t GetBytesReadExtra () const;  ; virtual Int_t GetBytesToPrefetch () const;  Max number of bytes to prefetch. ;  ; virtual Long64_t GetBytesWritten () const;  Return the total number of bytes written so far to the file. ;  ; TFileCacheRead * GetCacheRead (const TObject *tree=nullptr) const;  Return a pointer to the current read cache. ;  ; TFileCacheWrite * GetCacheWrite () const;  Return a pointer to the current write cache. ;  ; TArrayC * GetClassIndex () const;  ; Int_t GetCompressionAlgorithm () const;  ; Float_t GetCompressionFactor ();  Return the file compression factor. ;  ; Int_t GetCompressionLevel () const;  ; Int_t GetCompressionSettings () const;  ; virtual Long64_t GetEND () const;  ; virtual const TUrl * GetEndpointUrl () const;  ; virtual Int_t GetErrno () const;  Method returning errno. ;  ; Int_t GetFd () const;  ; TList * GetListOfFree () const;  ; TObjArray * GetListOfProcessIDs () const;  ; virtual Int_t GetNbytesFree () const;  ; virtual Int_t GetNbytesInfo () const;  ; virtual TString GetNewUrl ();  ; virtual Int_t GetNfree () const;  ; virtual Int_t GetNProcessIDs () const;  ; Option_t * GetOption () const override;  ; virtual Int_t GetReadCalls () const;  ; Int_t GetRecordHeader (char *buf, Long64_t first, Int_t maxbytes, Int_t &nbytes, Int_t &objlen, Int_t &keylen);  Read the logical record header starting at a certain postion. ;  ; Lo",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:6358,Performance,cache,cached,6358,"ssionAlgorithm () const;  ; Float_t GetCompressionFactor ();  Return the file compression factor. ;  ; Int_t GetCompressionLevel () const;  ; Int_t GetCompressionSettings () const;  ; virtual Long64_t GetEND () const;  ; virtual const TUrl * GetEndpointUrl () const;  ; virtual Int_t GetErrno () const;  Method returning errno. ;  ; Int_t GetFd () const;  ; TList * GetListOfFree () const;  ; TObjArray * GetListOfProcessIDs () const;  ; virtual Int_t GetNbytesFree () const;  ; virtual Int_t GetNbytesInfo () const;  ; virtual TString GetNewUrl ();  ; virtual Int_t GetNfree () const;  ; virtual Int_t GetNProcessIDs () const;  ; Option_t * GetOption () const override;  ; virtual Int_t GetReadCalls () const;  ; Int_t GetRecordHeader (char *buf, Long64_t first, Int_t maxbytes, Int_t &nbytes, Int_t &objlen, Int_t &keylen);  Read the logical record header starting at a certain postion. ;  ; Long64_t GetRelOffset () const;  ; virtual Long64_t GetSeekFree () const;  ; virtual Long64_t GetSeekInfo () const;  ; const TList * GetStreamerInfoCache ();  Returns the cached list of StreamerInfos used in this file. ;  ; virtual TList * GetStreamerInfoList () final;  Read the list of TStreamerInfo objects written to this file. ;  ; Int_t GetVersion () const;  ; virtual void IncrementProcessIDs ();  ; virtual Bool_t IsArchive () const;  ; Bool_t IsBinary () const;  ; virtual Bool_t IsOpen () const;  Returns kTRUE in case file is open and kFALSE if file is not open. ;  ; Bool_t IsRaw () const;  ; void ls (Option_t *option="""") const override;  List file contents. ;  ; virtual void MakeFree (Long64_t first, Long64_t last);  Mark unused bytes on the file. ;  ; virtual void MakeProject (const char *dirname, const char *classes=""*"", Option_t *option=""new"");  Generate source code necessary to access the objects stored in the file. ;  ; virtual void Map ();  ; virtual void Map (Option_t *opt);  List the contents of a file sequentially. ;  ; virtual Bool_t Matches (const char *name);  Return kTRU",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:8494,Performance,cache,cache,8494,"ad a buffer from the file. ;  ; virtual Bool_t ReadBuffer (char *buf, Long64_t pos, Int_t len);  Read a buffer from the file at the offset 'pos' in the file. ;  ; virtual Bool_t ReadBufferAsync (Long64_t offs, Int_t len);  ; virtual Bool_t ReadBuffers (char *buf, Long64_t *pos, Int_t *len, Int_t nbuf);  Read the nbuf blocks described in arrays pos and len. ;  ; virtual void ReadFree ();  Read the FREE linked list. ;  ; virtual TProcessID * ReadProcessID (UShort_t pidf);  The TProcessID with number pidf is read from this file. ;  ; virtual void ReadStreamerInfo ();  Read the list of StreamerInfo from this file. ;  ; virtual Int_t Recover ();  Attempt to recover file if not correctly closed. ;  ; virtual Int_t ReOpen (Option_t *mode);  Reopen a file with a different access mode. ;  ; virtual void Seek (Long64_t offset, ERelativeTo pos=kBeg);  Seek to a specific position in the file. Pos it either kBeg, kCur or kEnd. ;  ; virtual void SetCacheRead (TFileCacheRead *cache, TObject *tree=nullptr, ECacheAction action=kDisconnect);  Set a pointer to the read cache. ;  ; virtual void SetCacheWrite (TFileCacheWrite *cache);  Set a pointer to the write cache. ;  ; virtual void SetCompressionAlgorithm (Int_t algorithm=ROOT::RCompressionSetting::EAlgorithm::kUseGlobal);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionLevel (Int_t level=ROOT::RCompressionSetting::ELevel::kUseMin);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionSettings (Int_t settings=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Used to specify the compression level and algorithm. ;  ; virtual void SetEND (Long64_t last);  ; virtual void SetOffset (Long64_t offset, ERelativeTo pos=kBeg);  Set position from where to start reading. ;  ; virtual void SetOption (Option_t *option="">"");  ; virtual void SetReadCalls (Int_t readcalls=0);  ; virtual void ShowStreamerInfo ();  Show the StreamerInfo of all classes written to this file. ; ",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:8585,Performance,cache,cache,8585,"ad a buffer from the file. ;  ; virtual Bool_t ReadBuffer (char *buf, Long64_t pos, Int_t len);  Read a buffer from the file at the offset 'pos' in the file. ;  ; virtual Bool_t ReadBufferAsync (Long64_t offs, Int_t len);  ; virtual Bool_t ReadBuffers (char *buf, Long64_t *pos, Int_t *len, Int_t nbuf);  Read the nbuf blocks described in arrays pos and len. ;  ; virtual void ReadFree ();  Read the FREE linked list. ;  ; virtual TProcessID * ReadProcessID (UShort_t pidf);  The TProcessID with number pidf is read from this file. ;  ; virtual void ReadStreamerInfo ();  Read the list of StreamerInfo from this file. ;  ; virtual Int_t Recover ();  Attempt to recover file if not correctly closed. ;  ; virtual Int_t ReOpen (Option_t *mode);  Reopen a file with a different access mode. ;  ; virtual void Seek (Long64_t offset, ERelativeTo pos=kBeg);  Seek to a specific position in the file. Pos it either kBeg, kCur or kEnd. ;  ; virtual void SetCacheRead (TFileCacheRead *cache, TObject *tree=nullptr, ECacheAction action=kDisconnect);  Set a pointer to the read cache. ;  ; virtual void SetCacheWrite (TFileCacheWrite *cache);  Set a pointer to the write cache. ;  ; virtual void SetCompressionAlgorithm (Int_t algorithm=ROOT::RCompressionSetting::EAlgorithm::kUseGlobal);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionLevel (Int_t level=ROOT::RCompressionSetting::ELevel::kUseMin);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionSettings (Int_t settings=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Used to specify the compression level and algorithm. ;  ; virtual void SetEND (Long64_t last);  ; virtual void SetOffset (Long64_t offset, ERelativeTo pos=kBeg);  Set position from where to start reading. ;  ; virtual void SetOption (Option_t *option="">"");  ; virtual void SetReadCalls (Int_t readcalls=0);  ; virtual void ShowStreamerInfo ();  Show the StreamerInfo of all classes written to this file. ; ",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:8642,Performance,cache,cache,8642," file at the offset 'pos' in the file. ;  ; virtual Bool_t ReadBufferAsync (Long64_t offs, Int_t len);  ; virtual Bool_t ReadBuffers (char *buf, Long64_t *pos, Int_t *len, Int_t nbuf);  Read the nbuf blocks described in arrays pos and len. ;  ; virtual void ReadFree ();  Read the FREE linked list. ;  ; virtual TProcessID * ReadProcessID (UShort_t pidf);  The TProcessID with number pidf is read from this file. ;  ; virtual void ReadStreamerInfo ();  Read the list of StreamerInfo from this file. ;  ; virtual Int_t Recover ();  Attempt to recover file if not correctly closed. ;  ; virtual Int_t ReOpen (Option_t *mode);  Reopen a file with a different access mode. ;  ; virtual void Seek (Long64_t offset, ERelativeTo pos=kBeg);  Seek to a specific position in the file. Pos it either kBeg, kCur or kEnd. ;  ; virtual void SetCacheRead (TFileCacheRead *cache, TObject *tree=nullptr, ECacheAction action=kDisconnect);  Set a pointer to the read cache. ;  ; virtual void SetCacheWrite (TFileCacheWrite *cache);  Set a pointer to the write cache. ;  ; virtual void SetCompressionAlgorithm (Int_t algorithm=ROOT::RCompressionSetting::EAlgorithm::kUseGlobal);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionLevel (Int_t level=ROOT::RCompressionSetting::ELevel::kUseMin);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionSettings (Int_t settings=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Used to specify the compression level and algorithm. ;  ; virtual void SetEND (Long64_t last);  ; virtual void SetOffset (Long64_t offset, ERelativeTo pos=kBeg);  Set position from where to start reading. ;  ; virtual void SetOption (Option_t *option="">"");  ; virtual void SetReadCalls (Int_t readcalls=0);  ; virtual void ShowStreamerInfo ();  Show the StreamerInfo of all classes written to this file. ;  ; Int_t Sizeof () const override;  Return the size in bytes of the file header. ;  ; void StreamerNVirtual (TBuffer &Cl",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:8678,Performance,cache,cache,8678," file at the offset 'pos' in the file. ;  ; virtual Bool_t ReadBufferAsync (Long64_t offs, Int_t len);  ; virtual Bool_t ReadBuffers (char *buf, Long64_t *pos, Int_t *len, Int_t nbuf);  Read the nbuf blocks described in arrays pos and len. ;  ; virtual void ReadFree ();  Read the FREE linked list. ;  ; virtual TProcessID * ReadProcessID (UShort_t pidf);  The TProcessID with number pidf is read from this file. ;  ; virtual void ReadStreamerInfo ();  Read the list of StreamerInfo from this file. ;  ; virtual Int_t Recover ();  Attempt to recover file if not correctly closed. ;  ; virtual Int_t ReOpen (Option_t *mode);  Reopen a file with a different access mode. ;  ; virtual void Seek (Long64_t offset, ERelativeTo pos=kBeg);  Seek to a specific position in the file. Pos it either kBeg, kCur or kEnd. ;  ; virtual void SetCacheRead (TFileCacheRead *cache, TObject *tree=nullptr, ECacheAction action=kDisconnect);  Set a pointer to the read cache. ;  ; virtual void SetCacheWrite (TFileCacheWrite *cache);  Set a pointer to the write cache. ;  ; virtual void SetCompressionAlgorithm (Int_t algorithm=ROOT::RCompressionSetting::EAlgorithm::kUseGlobal);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionLevel (Int_t level=ROOT::RCompressionSetting::ELevel::kUseMin);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionSettings (Int_t settings=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Used to specify the compression level and algorithm. ;  ; virtual void SetEND (Long64_t last);  ; virtual void SetOffset (Long64_t offset, ERelativeTo pos=kBeg);  Set position from where to start reading. ;  ; virtual void SetOption (Option_t *option="">"");  ; virtual void SetReadCalls (Int_t readcalls=0);  ; virtual void ShowStreamerInfo ();  Show the StreamerInfo of all classes written to this file. ;  ; Int_t Sizeof () const override;  Return the size in bytes of the file header. ;  ; void StreamerNVirtual (TBuffer &Cl",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:13048,Performance,perform,performed,13048,"ject with name. ;  ; template<class T > ; T * Get (const char *namecycle);  See documentation of TDirectoryFile::Get(const char *namecycle) ;  ; TObject * Get (const char *namecycle) override;  Return pointer to object identified by namecycle. ;  ; Int_t GetBufferSize () const override;  Return the buffer size to create new TKeys. ;  ; const TDatime & GetCreationDate () const;  ; TDirectory * GetDirectory (const char *apath, Bool_t printError=false, const char *funcname=""GetDirectory"") override;  Find a directory named ""apath"". ;  ; TFile * GetFile () const override;  ; TKey * GetKey (const char *name, Short_t cycle=9999) const override;  Return pointer to key with name,cycle. ;  ; TList * GetListOfKeys () const override;  ; const TDatime & GetModificationDate () const;  ; Int_t GetNbytesKeys () const override;  ; Int_t GetNkeys () const override;  ; void * GetObjectChecked (const char *namecycle, const char *classname) override;  See documentation of TDirectoryFile::GetObjectCheck(const char *namecycle, const TClass *cl) ;  ; void * GetObjectChecked (const char *namecycle, const TClass *cl) override;  Return pointer to object identified by namecycle if and only if the actual object is a type suitable to be stored as a pointer to a ""expectedClass"" If expectedClass is null, no check is performed. ;  ; void * GetObjectUnchecked (const char *namecycle) override;  Return pointer to object identified by namecycle. ;  ; Long64_t GetSeekDir () const override;  ; Long64_t GetSeekKeys () const override;  ; Long64_t GetSeekParent () const override;  ; Bool_t IsModified () const override;  ; Bool_t IsWritable () const override;  ; TDirectory * mkdir (const char *name, const char *title="""", Bool_t returnExistingDirectory=kFALSE) override;  Create a sub-directory ""a"" or a hierarchy of sub-directories ""a/b/c/..."". ;  ; TFile * OpenFile (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t neto",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:26680,Performance,cache,cache,26680,"ar * DeclFileName ();  ;  Static Public Member Functions inherited from TFile; static TFileOpenHandle * AsyncOpen (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Submit an asynchronous open request. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Cp (const char *src, const char *dst, Bool_t progressbar=kTRUE, UInt_t buffersize=1000000);  Allows to copy file from src to dst URL. ;  ; static TFile *& CurrentFile ();  Return the current ROOT file if any. ;  ; static const char * DeclFileName ();  ; static EAsyncOpenStatus GetAsyncOpenStatus (const char *name);  Get status of the async open request related to 'name'. ;  ; static EAsyncOpenStatus GetAsyncOpenStatus (TFileOpenHandle *handle);  Get status of the async open request related to 'handle'. ;  ; static const char * GetCacheFileDir ();  Get the directory where to locally stage/cache remote files. ;  ; static const TUrl * GetEndpointUrl (const char *name);  Get final URL for file being opened asynchronously. ;  ; static Long64_t GetFileBytesRead ();  Static function returning the total number of bytes read from all files. ;  ; static Long64_t GetFileBytesWritten ();  Static function returning the total number of bytes written to all files. ;  ; static Long64_t GetFileCounter ();  ; static Int_t GetFileReadCalls ();  Static function returning the total number of read calls from all files. ;  ; static Bool_t GetOnlyStaged ();  Returns staged only flag. ;  ; static UInt_t GetOpenTimeout ();  Returns open timeout (in ms). ;  ; static Int_t GetReadaheadSize ();  Static function returning the readahead buffer size. ;  ; static Bool_t GetReadStreamerInfo ();  If the streamerinfos are to be read at file opening. ;  ; static EFileType GetType (const char *name, Option_t *option="""", TString *prefix=nullptr);  Resolve the file type as a",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:28095,Performance,cache,cacheDir,28095,"nction returning the total number of read calls from all files. ;  ; static Bool_t GetOnlyStaged ();  Returns staged only flag. ;  ; static UInt_t GetOpenTimeout ();  Returns open timeout (in ms). ;  ; static Int_t GetReadaheadSize ();  Static function returning the readahead buffer size. ;  ; static Bool_t GetReadStreamerInfo ();  If the streamerinfos are to be read at file opening. ;  ; static EFileType GetType (const char *name, Option_t *option="""", TString *prefix=nullptr);  Resolve the file type as a function of the protocol field in 'name'. ;  ; static void IncrementFileCounter ();  ; static TFile * Open (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Create / open a file. ;  ; static TFile * Open (TFileOpenHandle *handle);  Waits for the completion of an asynchronous open request. ;  ; static Bool_t SetCacheFileDir (std::string_view cacheDir, Bool_t operateDisconnected=kTRUE, Bool_t forceCacheread=kFALSE);  Sets the directory where to locally stage/cache remote files. ;  ; static void SetFileBytesRead (Long64_t bytes=0);  ; static void SetFileBytesWritten (Long64_t bytes=0);  ; static void SetFileReadCalls (Int_t readcalls=0);  ; static Bool_t SetOnlyStaged (Bool_t onlystaged);  Sets only staged flag. ;  ; static UInt_t SetOpenTimeout (UInt_t timeout);  Sets open timeout time (in ms). Returns previous timeout value. ;  ; static void SetReadaheadSize (Int_t bufsize=256000);  ; static void SetReadStreamerInfo (Bool_t readinfo=kTRUE);  Specify if the streamerinfos must be read at file opening. ;  ; static Bool_t ShrinkCacheFileDir (Long64_t shrinkSize, Long_t cleanupInteval=0);  Try to shrink the cache to the desired size. ;  ;  Static Public Member Functions inherited from TDirectoryFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public M",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:28213,Performance,cache,cache,28213,"nction returning the total number of read calls from all files. ;  ; static Bool_t GetOnlyStaged ();  Returns staged only flag. ;  ; static UInt_t GetOpenTimeout ();  Returns open timeout (in ms). ;  ; static Int_t GetReadaheadSize ();  Static function returning the readahead buffer size. ;  ; static Bool_t GetReadStreamerInfo ();  If the streamerinfos are to be read at file opening. ;  ; static EFileType GetType (const char *name, Option_t *option="""", TString *prefix=nullptr);  Resolve the file type as a function of the protocol field in 'name'. ;  ; static void IncrementFileCounter ();  ; static TFile * Open (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Create / open a file. ;  ; static TFile * Open (TFileOpenHandle *handle);  Waits for the completion of an asynchronous open request. ;  ; static Bool_t SetCacheFileDir (std::string_view cacheDir, Bool_t operateDisconnected=kTRUE, Bool_t forceCacheread=kFALSE);  Sets the directory where to locally stage/cache remote files. ;  ; static void SetFileBytesRead (Long64_t bytes=0);  ; static void SetFileBytesWritten (Long64_t bytes=0);  ; static void SetFileReadCalls (Int_t readcalls=0);  ; static Bool_t SetOnlyStaged (Bool_t onlystaged);  Sets only staged flag. ;  ; static UInt_t SetOpenTimeout (UInt_t timeout);  Sets open timeout time (in ms). Returns previous timeout value. ;  ; static void SetReadaheadSize (Int_t bufsize=256000);  ; static void SetReadStreamerInfo (Bool_t readinfo=kTRUE);  Specify if the streamerinfos must be read at file opening. ;  ; static Bool_t ShrinkCacheFileDir (Long64_t shrinkSize, Long_t cleanupInteval=0);  Try to shrink the cache to the desired size. ;  ;  Static Public Member Functions inherited from TDirectoryFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public M",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:28871,Performance,cache,cache,28871,"=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Create / open a file. ;  ; static TFile * Open (TFileOpenHandle *handle);  Waits for the completion of an asynchronous open request. ;  ; static Bool_t SetCacheFileDir (std::string_view cacheDir, Bool_t operateDisconnected=kTRUE, Bool_t forceCacheread=kFALSE);  Sets the directory where to locally stage/cache remote files. ;  ; static void SetFileBytesRead (Long64_t bytes=0);  ; static void SetFileBytesWritten (Long64_t bytes=0);  ; static void SetFileReadCalls (Int_t readcalls=0);  ; static Bool_t SetOnlyStaged (Bool_t onlystaged);  Sets only staged flag. ;  ; static UInt_t SetOpenTimeout (UInt_t timeout);  Sets open timeout time (in ms). Returns previous timeout value. ;  ; static void SetReadaheadSize (Int_t bufsize=256000);  ; static void SetReadStreamerInfo (Bool_t readinfo=kTRUE);  Specify if the streamerinfos must be read at file opening. ;  ; static Bool_t ShrinkCacheFileDir (Long64_t shrinkSize, Long_t cleanupInteval=0);  Try to shrink the cache to the desired size. ;  ;  Static Public Member Functions inherited from TDirectoryFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDirectory; static void AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add objects like histograms, TGraph2D, etc in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: see TDirectory::AddDirectory for more comments. ;  ; static Bool_t Cd (const char *path);  Change current directory to ""path"". ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static std::atomic< TDirectory * > & CurrentDirectory ();  Return the current directory for the current thread. ;  ; static const char * DeclFileName ();  ; static void DecodeNameCycle (const char *namecy",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:34909,Performance,cache,cache,34909,"s, UInt_t mode) override;  Open a file in 'MemFile'. ;  ; Int_t SysRead (Int_t fd, void *buf, Int_t len) override;  Read specified number of bytes from current offset into the buffer. ;  ; Int_t SysReadImpl (Int_t fd, void *buf, Long64_t len);  Read specified number of bytes from current offset into the buffer. ;  ; Long64_t SysSeek (Int_t fd, Long64_t offset, Int_t whence) override;  Seek to a specified position in the file. ;  ; Int_t SysStat (Int_t fd, Long_t *id, Long64_t *size, Long_t *flags, Long_t *modtime) override;  Perform a stat on the file; see TFile::SysStat(). ;  ; Int_t SysSync (Int_t fd) override;  Sync remaining data to disk. ;  ; Int_t SysWrite (Int_t fd, const void *buf, Int_t len) override;  Write a buffer into the file. ;  ; Int_t SysWriteImpl (Int_t fd, const void *buf, Long64_t len);  Write a buffer into the file. ;  ;  Protected Member Functions inherited from TFile; virtual Long64_t DirCreateEntry (TDirectory *);  ; virtual Int_t DirReadKeys (TDirectory *);  ; virtual void DirWriteHeader (TDirectory *);  ; virtual void DirWriteKeys (TDirectory *);  ; Bool_t FlushWriteCache ();  Flush the write cache if active. ;  ; virtual EAsyncOpenStatus GetAsyncOpenStatus ();  ; virtual InfoListRet GetStreamerInfoListImpl (bool lookupSICache);  See documentation of GetStreamerInfoList for more details. ;  ; virtual void Init (Bool_t create);  Initialize a TFile object. ;  ; Int_t MakeProjectParMake (const char *packname, const char *filename);  Create makefile at 'filemake' for PAR package 'pack'. ;  ; Int_t MakeProjectParProofInf (const char *packname, const char *proofinfdir);  Create BUILD.sh and SETUP.C under 'proofinf' for PAR package 'pack'. ;  ; Int_t ReadBufferViaCache (char *buf, Int_t len);  Read buffer via cache. ;  ; Int_t WriteBufferViaCache (const char *buf, Int_t len);  Write buffer via cache. ;  ;  Protected Member Functions inherited from TDirectoryFile; void BuildDirectoryFile (TFile *motherFile, TDirectory *motherDir);  Initialise direc",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:35531,Performance,cache,cache,35531,"e a buffer into the file. ;  ; Int_t SysWriteImpl (Int_t fd, const void *buf, Long64_t len);  Write a buffer into the file. ;  ;  Protected Member Functions inherited from TFile; virtual Long64_t DirCreateEntry (TDirectory *);  ; virtual Int_t DirReadKeys (TDirectory *);  ; virtual void DirWriteHeader (TDirectory *);  ; virtual void DirWriteKeys (TDirectory *);  ; Bool_t FlushWriteCache ();  Flush the write cache if active. ;  ; virtual EAsyncOpenStatus GetAsyncOpenStatus ();  ; virtual InfoListRet GetStreamerInfoListImpl (bool lookupSICache);  See documentation of GetStreamerInfoList for more details. ;  ; virtual void Init (Bool_t create);  Initialize a TFile object. ;  ; Int_t MakeProjectParMake (const char *packname, const char *filename);  Create makefile at 'filemake' for PAR package 'pack'. ;  ; Int_t MakeProjectParProofInf (const char *packname, const char *proofinfdir);  Create BUILD.sh and SETUP.C under 'proofinf' for PAR package 'pack'. ;  ; Int_t ReadBufferViaCache (char *buf, Int_t len);  Read buffer via cache. ;  ; Int_t WriteBufferViaCache (const char *buf, Int_t len);  Write buffer via cache. ;  ;  Protected Member Functions inherited from TDirectoryFile; void BuildDirectoryFile (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.) ;  ; void InitDirectoryFile (TClass *cl=nullptr);  Initialize the key associated with this directory (and the related data members. ;  ;  Protected Member Functions inherited from TDirectory;  TDirectory (const TDirectory &directory)=delete;  ; void BuildDirectory (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; Bool_t cd1 (const char *path);  flag to add histograms, graphs,etc to the directory ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.). ;  ; void FillFullPath (TString &buf) const;  Recursive method to fill full path for direct",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:35617,Performance,cache,cache,35617,"64_t len);  Write a buffer into the file. ;  ;  Protected Member Functions inherited from TFile; virtual Long64_t DirCreateEntry (TDirectory *);  ; virtual Int_t DirReadKeys (TDirectory *);  ; virtual void DirWriteHeader (TDirectory *);  ; virtual void DirWriteKeys (TDirectory *);  ; Bool_t FlushWriteCache ();  Flush the write cache if active. ;  ; virtual EAsyncOpenStatus GetAsyncOpenStatus ();  ; virtual InfoListRet GetStreamerInfoListImpl (bool lookupSICache);  See documentation of GetStreamerInfoList for more details. ;  ; virtual void Init (Bool_t create);  Initialize a TFile object. ;  ; Int_t MakeProjectParMake (const char *packname, const char *filename);  Create makefile at 'filemake' for PAR package 'pack'. ;  ; Int_t MakeProjectParProofInf (const char *packname, const char *proofinfdir);  Create BUILD.sh and SETUP.C under 'proofinf' for PAR package 'pack'. ;  ; Int_t ReadBufferViaCache (char *buf, Int_t len);  Read buffer via cache. ;  ; Int_t WriteBufferViaCache (const char *buf, Int_t len);  Write buffer via cache. ;  ;  Protected Member Functions inherited from TDirectoryFile; void BuildDirectoryFile (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.) ;  ; void InitDirectoryFile (TClass *cl=nullptr);  Initialize the key associated with this directory (and the related data members. ;  ;  Protected Member Functions inherited from TDirectory;  TDirectory (const TDirectory &directory)=delete;  ; void BuildDirectory (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; Bool_t cd1 (const char *path);  flag to add histograms, graphs,etc to the directory ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.). ;  ; void FillFullPath (TString &buf) const;  Recursive method to fill full path for directory. ;  ; void operator= (const TDirectory &)=delete;  ; void RegisterContext (TCo",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:38783,Performance,cache,cache,38783,"memory region ;  ; Long64_t fSize {0};  Total file size (sum of the size of the chunks) ;  ; Long64_t fSysOffset {0};  Seek offset in file. ;  ;  Protected Attributes inherited from TFile; TArchiveFile * fArchive {nullptr};  !Archive file from which we read this file ;  ; Long64_t fArchiveOffset {0};  !Offset at which file starts in archive ;  ; TFileOpenHandle * fAsyncHandle {nullptr};  !For proper automatic cleanup ;  ; EAsyncOpenStatus fAsyncOpenStatus {kAOSNotAsync};  !Status of an asynchronous open request ;  ; Long64_t fBEGIN {0};  First used byte in file. ;  ; Long64_t fBytesRead {0};  Number of bytes read from this file. ;  ; Long64_t fBytesReadExtra {0};  Number of extra bytes (overhead) read by the readahead buffer. ;  ; Long64_t fBytesWrite {0};  Number of bytes written to this file. ;  ; TFileCacheRead * fCacheRead {nullptr};  !Pointer to the read cache (if any) ;  ; TMap * fCacheReadMap {nullptr};  !Pointer to the read cache (if any) ;  ; TFileCacheWrite * fCacheWrite {nullptr};  !Pointer to the write cache (if any) ;  ; TArrayC * fClassIndex {nullptr};  !Index of TStreamerInfo classes written to this file ;  ; Int_t fCompress {0};  Compression level and algorithm. ;  ; Int_t fD {-1};  File descriptor. ;  ; Long64_t fEND {0};  Last used byte in file. ;  ; TList * fFree {nullptr};  Free segments linked list table. ;  ; bool fGlobalRegistration = true;  ! if true, bypass use of global lists ;  ; TList * fInfoCache {nullptr};  !Cached list of the streamer infos in this file ;  ; Bool_t fInitDone {kFALSE};  !True if the file has been initialized ;  ; Bool_t fIsArchive {kFALSE};  !True if this is a pure archive file ;  ; Bool_t fIsPcmFile {kFALSE};  !True if the file is a ROOT pcm file. ;  ; Bool_t fIsRootFile {kTRUE};  !True is this is a ROOT file, raw file otherwise ;  ; Bool_t fMustFlush {kTRUE};  !True if the file buffers must be flushed ;  ; Int_t fNbytesFree {0};  Number of bytes for free segments structure. ;  ; Int_t fNbytesInfo {0};  Number of bytes ",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:38857,Performance,cache,cache,38857,"memory region ;  ; Long64_t fSize {0};  Total file size (sum of the size of the chunks) ;  ; Long64_t fSysOffset {0};  Seek offset in file. ;  ;  Protected Attributes inherited from TFile; TArchiveFile * fArchive {nullptr};  !Archive file from which we read this file ;  ; Long64_t fArchiveOffset {0};  !Offset at which file starts in archive ;  ; TFileOpenHandle * fAsyncHandle {nullptr};  !For proper automatic cleanup ;  ; EAsyncOpenStatus fAsyncOpenStatus {kAOSNotAsync};  !Status of an asynchronous open request ;  ; Long64_t fBEGIN {0};  First used byte in file. ;  ; Long64_t fBytesRead {0};  Number of bytes read from this file. ;  ; Long64_t fBytesReadExtra {0};  Number of extra bytes (overhead) read by the readahead buffer. ;  ; Long64_t fBytesWrite {0};  Number of bytes written to this file. ;  ; TFileCacheRead * fCacheRead {nullptr};  !Pointer to the read cache (if any) ;  ; TMap * fCacheReadMap {nullptr};  !Pointer to the read cache (if any) ;  ; TFileCacheWrite * fCacheWrite {nullptr};  !Pointer to the write cache (if any) ;  ; TArrayC * fClassIndex {nullptr};  !Index of TStreamerInfo classes written to this file ;  ; Int_t fCompress {0};  Compression level and algorithm. ;  ; Int_t fD {-1};  File descriptor. ;  ; Long64_t fEND {0};  Last used byte in file. ;  ; TList * fFree {nullptr};  Free segments linked list table. ;  ; bool fGlobalRegistration = true;  ! if true, bypass use of global lists ;  ; TList * fInfoCache {nullptr};  !Cached list of the streamer infos in this file ;  ; Bool_t fInitDone {kFALSE};  !True if the file has been initialized ;  ; Bool_t fIsArchive {kFALSE};  !True if this is a pure archive file ;  ; Bool_t fIsPcmFile {kFALSE};  !True if the file is a ROOT pcm file. ;  ; Bool_t fIsRootFile {kTRUE};  !True is this is a ROOT file, raw file otherwise ;  ; Bool_t fMustFlush {kTRUE};  !True if the file buffers must be flushed ;  ; Int_t fNbytesFree {0};  Number of bytes for free segments structure. ;  ; Int_t fNbytesInfo {0};  Number of bytes ",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:38941,Performance,cache,cache,38941,"memory region ;  ; Long64_t fSize {0};  Total file size (sum of the size of the chunks) ;  ; Long64_t fSysOffset {0};  Seek offset in file. ;  ;  Protected Attributes inherited from TFile; TArchiveFile * fArchive {nullptr};  !Archive file from which we read this file ;  ; Long64_t fArchiveOffset {0};  !Offset at which file starts in archive ;  ; TFileOpenHandle * fAsyncHandle {nullptr};  !For proper automatic cleanup ;  ; EAsyncOpenStatus fAsyncOpenStatus {kAOSNotAsync};  !Status of an asynchronous open request ;  ; Long64_t fBEGIN {0};  First used byte in file. ;  ; Long64_t fBytesRead {0};  Number of bytes read from this file. ;  ; Long64_t fBytesReadExtra {0};  Number of extra bytes (overhead) read by the readahead buffer. ;  ; Long64_t fBytesWrite {0};  Number of bytes written to this file. ;  ; TFileCacheRead * fCacheRead {nullptr};  !Pointer to the read cache (if any) ;  ; TMap * fCacheReadMap {nullptr};  !Pointer to the read cache (if any) ;  ; TFileCacheWrite * fCacheWrite {nullptr};  !Pointer to the write cache (if any) ;  ; TArrayC * fClassIndex {nullptr};  !Index of TStreamerInfo classes written to this file ;  ; Int_t fCompress {0};  Compression level and algorithm. ;  ; Int_t fD {-1};  File descriptor. ;  ; Long64_t fEND {0};  Last used byte in file. ;  ; TList * fFree {nullptr};  Free segments linked list table. ;  ; bool fGlobalRegistration = true;  ! if true, bypass use of global lists ;  ; TList * fInfoCache {nullptr};  !Cached list of the streamer infos in this file ;  ; Bool_t fInitDone {kFALSE};  !True if the file has been initialized ;  ; Bool_t fIsArchive {kFALSE};  !True if this is a pure archive file ;  ; Bool_t fIsPcmFile {kFALSE};  !True if the file is a ROOT pcm file. ;  ; Bool_t fIsRootFile {kTRUE};  !True is this is a ROOT file, raw file otherwise ;  ; Bool_t fMustFlush {kTRUE};  !True if the file buffers must be flushed ;  ; Int_t fNbytesFree {0};  Number of bytes for free segments structure. ;  ; Int_t fNbytesInfo {0};  Number of bytes ",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:40165,Performance,cache,cache,40165,"; TList * fFree {nullptr};  Free segments linked list table. ;  ; bool fGlobalRegistration = true;  ! if true, bypass use of global lists ;  ; TList * fInfoCache {nullptr};  !Cached list of the streamer infos in this file ;  ; Bool_t fInitDone {kFALSE};  !True if the file has been initialized ;  ; Bool_t fIsArchive {kFALSE};  !True if this is a pure archive file ;  ; Bool_t fIsPcmFile {kFALSE};  !True if the file is a ROOT pcm file. ;  ; Bool_t fIsRootFile {kTRUE};  !True is this is a ROOT file, raw file otherwise ;  ; Bool_t fMustFlush {kTRUE};  !True if the file buffers must be flushed ;  ; Int_t fNbytesFree {0};  Number of bytes for free segments structure. ;  ; Int_t fNbytesInfo {0};  Number of bytes for StreamerInfo record. ;  ; Bool_t fNoAnchorInName {kFALSE};  !True if we don't want to force the anchor to be appended to the file name ;  ; Int_t fNProcessIDs {0};  Number of TProcessID written to this file. ;  ; Long64_t fOffset {0};  !Seek offset cache ;  ; TList * fOpenPhases {nullptr};  !Time info about open phases ;  ; TString fOption;  File options. ;  ; TObjArray * fProcessIDs {nullptr};  !Array of pointers to TProcessIDs ;  ; Int_t fReadCalls {0};  Number of read calls ( not counting the cache calls ) ;  ; TString fRealName;  Effective real file name (not original url) ;  ; Long64_t fSeekFree {0};  Location on disk of free segments structure. ;  ; Long64_t fSeekInfo {0};  Location on disk of StreamerInfo record. ;  ; Double_t fSum2Buffer {0};  Sum of squares of buffer sizes of objects written so far. ;  ; Double_t fSumBuffer {0};  Sum of buffer sizes of objects written so far. ;  ; Char_t fUnits {0};  Number of bytes for file pointers. ;  ; TUrl fUrl;  !URL of file ;  ; Int_t fVersion {0};  File format version. ;  ; std::mutex fWriteMutex;  !Lock for writing baskets / keys into the file. ;  ; Int_t fWritten {0};  Number of objects written so far. ;  ;  Protected Attributes inherited from TDirectoryFile; Int_t fBufferSize {0};  Default buffer size to crea",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:40417,Performance,cache,cache,40417,"; Bool_t fInitDone {kFALSE};  !True if the file has been initialized ;  ; Bool_t fIsArchive {kFALSE};  !True if this is a pure archive file ;  ; Bool_t fIsPcmFile {kFALSE};  !True if the file is a ROOT pcm file. ;  ; Bool_t fIsRootFile {kTRUE};  !True is this is a ROOT file, raw file otherwise ;  ; Bool_t fMustFlush {kTRUE};  !True if the file buffers must be flushed ;  ; Int_t fNbytesFree {0};  Number of bytes for free segments structure. ;  ; Int_t fNbytesInfo {0};  Number of bytes for StreamerInfo record. ;  ; Bool_t fNoAnchorInName {kFALSE};  !True if we don't want to force the anchor to be appended to the file name ;  ; Int_t fNProcessIDs {0};  Number of TProcessID written to this file. ;  ; Long64_t fOffset {0};  !Seek offset cache ;  ; TList * fOpenPhases {nullptr};  !Time info about open phases ;  ; TString fOption;  File options. ;  ; TObjArray * fProcessIDs {nullptr};  !Array of pointers to TProcessIDs ;  ; Int_t fReadCalls {0};  Number of read calls ( not counting the cache calls ) ;  ; TString fRealName;  Effective real file name (not original url) ;  ; Long64_t fSeekFree {0};  Location on disk of free segments structure. ;  ; Long64_t fSeekInfo {0};  Location on disk of StreamerInfo record. ;  ; Double_t fSum2Buffer {0};  Sum of squares of buffer sizes of objects written so far. ;  ; Double_t fSumBuffer {0};  Sum of buffer sizes of objects written so far. ;  ; Char_t fUnits {0};  Number of bytes for file pointers. ;  ; TUrl fUrl;  !URL of file ;  ; Int_t fVersion {0};  File format version. ;  ; std::mutex fWriteMutex;  !Lock for writing baskets / keys into the file. ;  ; Int_t fWritten {0};  Number of objects written so far. ;  ;  Protected Attributes inherited from TDirectoryFile; Int_t fBufferSize {0};  Default buffer size to create new TKeys. ;  ; TDatime fDatimeC;  Date and time when directory is created. ;  ; TDatime fDatimeM;  Date and time of last modification. ;  ; TFile * fFile {nullptr};  Pointer to current file in memory. ;  ; TList * fKeys {n",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:43052,Performance,cache,cache,43052,"ath() function. ;  ; std::atomic< size_t > fContextPeg {0};  thread local gDirectory pointing to this object. ;  ; std::vector< SharedGDirectory_t > fGDirectories;  ; TList * fList {nullptr};  ; TObject * fMother {nullptr};  ; TString fPathBuffer;  ; std::atomic_flag fSpinLock;  Counter delaying the TDirectory destructor from finishing. ;  ; TUUID fUUID;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from TMemFile; static constexpr Long64_t fgDefaultBlockSize = 2 * 1024 * 1024;  ;  Static Protected Attributes inherited from TFile; static TList * fgAsyncOpenRequests = nullptr;  ; static std::atomic< Long64_t > fgBytesRead {0};  Number of bytes read by all TFile objects. ;  ; static std::atomic< Long64_t > fgBytesWrite {0};  Number of bytes written by all TFile objects. ;  ; static TString fgCacheFileDir;  Directory where to locally stage files. ;  ; static Bool_t fgCacheFileDisconnected = kTRUE;  Indicates, we trust in the files in the cache dir without stat on the cached file. ;  ; static Bool_t fgCacheFileForce = kFALSE;  Indicates, to force all READ to CACHEREAD. ;  ; static std::atomic< Long64_t > fgFileCounter {0};  Counter for all opened files. ;  ; static Bool_t fgOnlyStaged = kFALSE;  Before the file is opened, it is checked, that the file is staged, if not, the open fails. ;  ; static UInt_t fgOpenTimeout = TFile::kEternalTimeout;  Timeout for open operations in ms - 0 corresponds to blocking i/o. ;  ; static Int_t fgReadaheadSize = 256000;  Readahead buffer size. ;  ; static std::atomic< Int_t > fgReadCalls {0};  Number of bytes read from all TFile objects. ;  ; static Bool_t fgReadInfo = kTRUE;  if true (default) ReadStreamerInfo is called when opening a file ;  ; static ROOT::Internal::RConcurrentHashColl fgTsSIHashes;  !TS Set of hashes built from read streamer infos ;  ;  Static Protected Attributes inherited from TDirectory; static Bool_t fgAddDirectory = kTRUE;  MSVC doesn't ",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:43082,Performance,cache,cached,43082,"ath() function. ;  ; std::atomic< size_t > fContextPeg {0};  thread local gDirectory pointing to this object. ;  ; std::vector< SharedGDirectory_t > fGDirectories;  ; TList * fList {nullptr};  ; TObject * fMother {nullptr};  ; TString fPathBuffer;  ; std::atomic_flag fSpinLock;  Counter delaying the TDirectory destructor from finishing. ;  ; TUUID fUUID;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from TMemFile; static constexpr Long64_t fgDefaultBlockSize = 2 * 1024 * 1024;  ;  Static Protected Attributes inherited from TFile; static TList * fgAsyncOpenRequests = nullptr;  ; static std::atomic< Long64_t > fgBytesRead {0};  Number of bytes read by all TFile objects. ;  ; static std::atomic< Long64_t > fgBytesWrite {0};  Number of bytes written by all TFile objects. ;  ; static TString fgCacheFileDir;  Directory where to locally stage files. ;  ; static Bool_t fgCacheFileDisconnected = kTRUE;  Indicates, we trust in the files in the cache dir without stat on the cached file. ;  ; static Bool_t fgCacheFileForce = kFALSE;  Indicates, to force all READ to CACHEREAD. ;  ; static std::atomic< Long64_t > fgFileCounter {0};  Counter for all opened files. ;  ; static Bool_t fgOnlyStaged = kFALSE;  Before the file is opened, it is checked, that the file is staged, if not, the open fails. ;  ; static UInt_t fgOpenTimeout = TFile::kEternalTimeout;  Timeout for open operations in ms - 0 corresponds to blocking i/o. ;  ; static Int_t fgReadaheadSize = 256000;  Readahead buffer size. ;  ; static std::atomic< Int_t > fgReadCalls {0};  Number of bytes read from all TFile objects. ;  ; static Bool_t fgReadInfo = kTRUE;  if true (default) ReadStreamerInfo is called when opening a file ;  ; static ROOT::Internal::RConcurrentHashColl fgTsSIHashes;  !TS Set of hashes built from read streamer infos ;  ;  Static Protected Attributes inherited from TDirectory; static Bool_t fgAddDirectory = kTRUE;  MSVC doesn't ",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:8179,Safety,recover,recover,8179,"ption_t *opt);  List the contents of a file sequentially. ;  ; virtual Bool_t Matches (const char *name);  Return kTRUE if 'url' matches the coordinates of this file. ;  ; virtual Bool_t MustFlush () const;  ; void Paint (Option_t *option="""") override;  Paint all objects in the file. ;  ; virtual Bool_t ReadBuffer (char *buf, Int_t len);  Read a buffer from the file. ;  ; virtual Bool_t ReadBuffer (char *buf, Long64_t pos, Int_t len);  Read a buffer from the file at the offset 'pos' in the file. ;  ; virtual Bool_t ReadBufferAsync (Long64_t offs, Int_t len);  ; virtual Bool_t ReadBuffers (char *buf, Long64_t *pos, Int_t *len, Int_t nbuf);  Read the nbuf blocks described in arrays pos and len. ;  ; virtual void ReadFree ();  Read the FREE linked list. ;  ; virtual TProcessID * ReadProcessID (UShort_t pidf);  The TProcessID with number pidf is read from this file. ;  ; virtual void ReadStreamerInfo ();  Read the list of StreamerInfo from this file. ;  ; virtual Int_t Recover ();  Attempt to recover file if not correctly closed. ;  ; virtual Int_t ReOpen (Option_t *mode);  Reopen a file with a different access mode. ;  ; virtual void Seek (Long64_t offset, ERelativeTo pos=kBeg);  Seek to a specific position in the file. Pos it either kBeg, kCur or kEnd. ;  ; virtual void SetCacheRead (TFileCacheRead *cache, TObject *tree=nullptr, ECacheAction action=kDisconnect);  Set a pointer to the read cache. ;  ; virtual void SetCacheWrite (TFileCacheWrite *cache);  Set a pointer to the write cache. ;  ; virtual void SetCompressionAlgorithm (Int_t algorithm=ROOT::RCompressionSetting::EAlgorithm::kUseGlobal);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionLevel (Int_t level=ROOT::RCompressionSetting::ELevel::kUseMin);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionSettings (Int_t settings=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Used to specify the compression level and algorithm. ;  ; virtua",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:27316,Safety,timeout,timeout,27316,"; static const char * DeclFileName ();  ; static EAsyncOpenStatus GetAsyncOpenStatus (const char *name);  Get status of the async open request related to 'name'. ;  ; static EAsyncOpenStatus GetAsyncOpenStatus (TFileOpenHandle *handle);  Get status of the async open request related to 'handle'. ;  ; static const char * GetCacheFileDir ();  Get the directory where to locally stage/cache remote files. ;  ; static const TUrl * GetEndpointUrl (const char *name);  Get final URL for file being opened asynchronously. ;  ; static Long64_t GetFileBytesRead ();  Static function returning the total number of bytes read from all files. ;  ; static Long64_t GetFileBytesWritten ();  Static function returning the total number of bytes written to all files. ;  ; static Long64_t GetFileCounter ();  ; static Int_t GetFileReadCalls ();  Static function returning the total number of read calls from all files. ;  ; static Bool_t GetOnlyStaged ();  Returns staged only flag. ;  ; static UInt_t GetOpenTimeout ();  Returns open timeout (in ms). ;  ; static Int_t GetReadaheadSize ();  Static function returning the readahead buffer size. ;  ; static Bool_t GetReadStreamerInfo ();  If the streamerinfos are to be read at file opening. ;  ; static EFileType GetType (const char *name, Option_t *option="""", TString *prefix=nullptr);  Resolve the file type as a function of the protocol field in 'name'. ;  ; static void IncrementFileCounter ();  ; static TFile * Open (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Create / open a file. ;  ; static TFile * Open (TFileOpenHandle *handle);  Waits for the completion of an asynchronous open request. ;  ; static Bool_t SetCacheFileDir (std::string_view cacheDir, Bool_t operateDisconnected=kTRUE, Bool_t forceCacheread=kFALSE);  Sets the directory where to locally stage/cache remote files. ;  ; static void SetFileBytesRead (Long64_t bytes=0);  ; static v",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:28513,Safety,timeout,timeout,28513,"e opening. ;  ; static EFileType GetType (const char *name, Option_t *option="""", TString *prefix=nullptr);  Resolve the file type as a function of the protocol field in 'name'. ;  ; static void IncrementFileCounter ();  ; static TFile * Open (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Create / open a file. ;  ; static TFile * Open (TFileOpenHandle *handle);  Waits for the completion of an asynchronous open request. ;  ; static Bool_t SetCacheFileDir (std::string_view cacheDir, Bool_t operateDisconnected=kTRUE, Bool_t forceCacheread=kFALSE);  Sets the directory where to locally stage/cache remote files. ;  ; static void SetFileBytesRead (Long64_t bytes=0);  ; static void SetFileBytesWritten (Long64_t bytes=0);  ; static void SetFileReadCalls (Int_t readcalls=0);  ; static Bool_t SetOnlyStaged (Bool_t onlystaged);  Sets only staged flag. ;  ; static UInt_t SetOpenTimeout (UInt_t timeout);  Sets open timeout time (in ms). Returns previous timeout value. ;  ; static void SetReadaheadSize (Int_t bufsize=256000);  ; static void SetReadStreamerInfo (Bool_t readinfo=kTRUE);  Specify if the streamerinfos must be read at file opening. ;  ; static Bool_t ShrinkCacheFileDir (Long64_t shrinkSize, Long_t cleanupInteval=0);  Try to shrink the cache to the desired size. ;  ;  Static Public Member Functions inherited from TDirectoryFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDirectory; static void AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add objects like histograms, TGraph2D, etc in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: see TDirectory::AddDirectory for more comments. ;  ; static Bool_t Cd (const char *path);  Change current directory to ""path"". ;  ; s",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:28534,Safety,timeout,timeout,28534,"e opening. ;  ; static EFileType GetType (const char *name, Option_t *option="""", TString *prefix=nullptr);  Resolve the file type as a function of the protocol field in 'name'. ;  ; static void IncrementFileCounter ();  ; static TFile * Open (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Create / open a file. ;  ; static TFile * Open (TFileOpenHandle *handle);  Waits for the completion of an asynchronous open request. ;  ; static Bool_t SetCacheFileDir (std::string_view cacheDir, Bool_t operateDisconnected=kTRUE, Bool_t forceCacheread=kFALSE);  Sets the directory where to locally stage/cache remote files. ;  ; static void SetFileBytesRead (Long64_t bytes=0);  ; static void SetFileBytesWritten (Long64_t bytes=0);  ; static void SetFileReadCalls (Int_t readcalls=0);  ; static Bool_t SetOnlyStaged (Bool_t onlystaged);  Sets only staged flag. ;  ; static UInt_t SetOpenTimeout (UInt_t timeout);  Sets open timeout time (in ms). Returns previous timeout value. ;  ; static void SetReadaheadSize (Int_t bufsize=256000);  ; static void SetReadStreamerInfo (Bool_t readinfo=kTRUE);  Specify if the streamerinfos must be read at file opening. ;  ; static Bool_t ShrinkCacheFileDir (Long64_t shrinkSize, Long_t cleanupInteval=0);  Try to shrink the cache to the desired size. ;  ;  Static Public Member Functions inherited from TDirectoryFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDirectory; static void AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add objects like histograms, TGraph2D, etc in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: see TDirectory::AddDirectory for more comments. ;  ; static Bool_t Cd (const char *path);  Change current directory to ""path"". ;  ; s",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:28573,Safety,timeout,timeout,28573," Option_t *option="""", TString *prefix=nullptr);  Resolve the file type as a function of the protocol field in 'name'. ;  ; static void IncrementFileCounter ();  ; static TFile * Open (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Create / open a file. ;  ; static TFile * Open (TFileOpenHandle *handle);  Waits for the completion of an asynchronous open request. ;  ; static Bool_t SetCacheFileDir (std::string_view cacheDir, Bool_t operateDisconnected=kTRUE, Bool_t forceCacheread=kFALSE);  Sets the directory where to locally stage/cache remote files. ;  ; static void SetFileBytesRead (Long64_t bytes=0);  ; static void SetFileBytesWritten (Long64_t bytes=0);  ; static void SetFileReadCalls (Int_t readcalls=0);  ; static Bool_t SetOnlyStaged (Bool_t onlystaged);  Sets only staged flag. ;  ; static UInt_t SetOpenTimeout (UInt_t timeout);  Sets open timeout time (in ms). Returns previous timeout value. ;  ; static void SetReadaheadSize (Int_t bufsize=256000);  ; static void SetReadStreamerInfo (Bool_t readinfo=kTRUE);  Specify if the streamerinfos must be read at file opening. ;  ; static Bool_t ShrinkCacheFileDir (Long64_t shrinkSize, Long_t cleanupInteval=0);  Try to shrink the cache to the desired size. ;  ;  Static Public Member Functions inherited from TDirectoryFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDirectory; static void AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add objects like histograms, TGraph2D, etc in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: see TDirectory::AddDirectory for more comments. ;  ; static Bool_t Cd (const char *path);  Change current directory to ""path"". ;  ; static TClass * Class ();  ; static const char * Class_Name",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:31541,Safety,timeout,timeout,31541,". ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TArrayC * fClassSent;  ; TMessage fMessage;  ; Int_t fServerIdx;  ; TUrl fServerLocation;  ; Int_t fServerVersion;  ; TSocket * fSocket;  . Additional Inherited Members;  Public Types inherited from TMemFile; using ExternalDataPtr_t = std::shared_ptr< const std::vector< char > >;  ;  Public Types inherited from TFile; enum  { kStartBigFile = 2000000000; };  ; enum  EAsyncOpenStatus { kAOSNotAsync = -1; , kAOSFailure = 0; , kAOSInProgress = 1; , kAOSSuccess = 2; };  Asynchronous open request status. More...;  ; enum  ECacheAction { kDisconnect = 0; , kDoNotDisconnect = 1; };  TTreeCache flushing semantics. More...;  ; enum  EFileType { ;   kDefault = 0; , kLocal = 1; , kNet = 2; , kWeb = 3; , ;   kFile = 4; , kMerge = 5. };  File type. More...;  ; enum  EOpenTimeOut { kInstantTimeout = 0; , kEternalTimeout = 999999999; };  Open timeout constants. More...;  ; enum  ERelativeTo { kBeg = 0; , kCur = 1; , kEnd = 2; };  ; enum  EStatusBits { ;   k630forwardCompatibility = (1ULL << ( 2 )); , kRecovered = (1ULL << ( 10 )); , kHasReferences = (1ULL << ( 11 )); , kDevNull = (1ULL << ( 12 )); , ;   kWriteError = (1ULL << ( 14 )); , kBinaryFile = (1ULL << ( 15 )); , kRedirected = (1ULL << ( 16 )); , kReproducible = (1ULL << ( 17 )). };  TFile status bits. BIT(13) is taken up by TObject. More...;  ;  Public Types inherited from TDirectoryFile; enum  EStatusBits { kCloseDirectory = (1ULL << ( 7 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ; ",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:7088,Security,access,access,7088,"f, Long64_t first, Int_t maxbytes, Int_t &nbytes, Int_t &objlen, Int_t &keylen);  Read the logical record header starting at a certain postion. ;  ; Long64_t GetRelOffset () const;  ; virtual Long64_t GetSeekFree () const;  ; virtual Long64_t GetSeekInfo () const;  ; const TList * GetStreamerInfoCache ();  Returns the cached list of StreamerInfos used in this file. ;  ; virtual TList * GetStreamerInfoList () final;  Read the list of TStreamerInfo objects written to this file. ;  ; Int_t GetVersion () const;  ; virtual void IncrementProcessIDs ();  ; virtual Bool_t IsArchive () const;  ; Bool_t IsBinary () const;  ; virtual Bool_t IsOpen () const;  Returns kTRUE in case file is open and kFALSE if file is not open. ;  ; Bool_t IsRaw () const;  ; void ls (Option_t *option="""") const override;  List file contents. ;  ; virtual void MakeFree (Long64_t first, Long64_t last);  Mark unused bytes on the file. ;  ; virtual void MakeProject (const char *dirname, const char *classes=""*"", Option_t *option=""new"");  Generate source code necessary to access the objects stored in the file. ;  ; virtual void Map ();  ; virtual void Map (Option_t *opt);  List the contents of a file sequentially. ;  ; virtual Bool_t Matches (const char *name);  Return kTRUE if 'url' matches the coordinates of this file. ;  ; virtual Bool_t MustFlush () const;  ; void Paint (Option_t *option="""") override;  Paint all objects in the file. ;  ; virtual Bool_t ReadBuffer (char *buf, Int_t len);  Read a buffer from the file. ;  ; virtual Bool_t ReadBuffer (char *buf, Long64_t pos, Int_t len);  Read a buffer from the file at the offset 'pos' in the file. ;  ; virtual Bool_t ReadBufferAsync (Long64_t offs, Int_t len);  ; virtual Bool_t ReadBuffers (char *buf, Long64_t *pos, Int_t *len, Int_t nbuf);  Read the nbuf blocks described in arrays pos and len. ;  ; virtual void ReadFree ();  Read the FREE linked list. ;  ; virtual TProcessID * ReadProcessID (UShort_t pidf);  The TProcessID with number pidf is read from",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:8293,Security,access,access,8293," (const char *name);  Return kTRUE if 'url' matches the coordinates of this file. ;  ; virtual Bool_t MustFlush () const;  ; void Paint (Option_t *option="""") override;  Paint all objects in the file. ;  ; virtual Bool_t ReadBuffer (char *buf, Int_t len);  Read a buffer from the file. ;  ; virtual Bool_t ReadBuffer (char *buf, Long64_t pos, Int_t len);  Read a buffer from the file at the offset 'pos' in the file. ;  ; virtual Bool_t ReadBufferAsync (Long64_t offs, Int_t len);  ; virtual Bool_t ReadBuffers (char *buf, Long64_t *pos, Int_t *len, Int_t nbuf);  Read the nbuf blocks described in arrays pos and len. ;  ; virtual void ReadFree ();  Read the FREE linked list. ;  ; virtual TProcessID * ReadProcessID (UShort_t pidf);  The TProcessID with number pidf is read from this file. ;  ; virtual void ReadStreamerInfo ();  Read the list of StreamerInfo from this file. ;  ; virtual Int_t Recover ();  Attempt to recover file if not correctly closed. ;  ; virtual Int_t ReOpen (Option_t *mode);  Reopen a file with a different access mode. ;  ; virtual void Seek (Long64_t offset, ERelativeTo pos=kBeg);  Seek to a specific position in the file. Pos it either kBeg, kCur or kEnd. ;  ; virtual void SetCacheRead (TFileCacheRead *cache, TObject *tree=nullptr, ECacheAction action=kDisconnect);  Set a pointer to the read cache. ;  ; virtual void SetCacheWrite (TFileCacheWrite *cache);  Set a pointer to the write cache. ;  ; virtual void SetCompressionAlgorithm (Int_t algorithm=ROOT::RCompressionSetting::EAlgorithm::kUseGlobal);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionLevel (Int_t level=ROOT::RCompressionSetting::ELevel::kUseMin);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionSettings (Int_t settings=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Used to specify the compression level and algorithm. ;  ; virtual void SetEND (Long64_t last);  ; virtual void SetOffset (Long64_t offset, ERelativeT",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:19041,Security,hash,hash,19041," std::enable_if_t< std::is_base_of< TObject, T >::value, Int_t > WriteObject (const T *obj, const char *name, Option_t *option="""", Int_t bufsize=0);  Write an object with proper type checking. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object ",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:43875,Security,hash,hashes,43875,"bjects. ;  ; static TString fgCacheFileDir;  Directory where to locally stage files. ;  ; static Bool_t fgCacheFileDisconnected = kTRUE;  Indicates, we trust in the files in the cache dir without stat on the cached file. ;  ; static Bool_t fgCacheFileForce = kFALSE;  Indicates, to force all READ to CACHEREAD. ;  ; static std::atomic< Long64_t > fgFileCounter {0};  Counter for all opened files. ;  ; static Bool_t fgOnlyStaged = kFALSE;  Before the file is opened, it is checked, that the file is staged, if not, the open fails. ;  ; static UInt_t fgOpenTimeout = TFile::kEternalTimeout;  Timeout for open operations in ms - 0 corresponds to blocking i/o. ;  ; static Int_t fgReadaheadSize = 256000;  Readahead buffer size. ;  ; static std::atomic< Int_t > fgReadCalls {0};  Number of bytes read from all TFile objects. ;  ; static Bool_t fgReadInfo = kTRUE;  if true (default) ReadStreamerInfo is called when opening a file ;  ; static ROOT::Internal::RConcurrentHashColl fgTsSIHashes;  !TS Set of hashes built from read streamer infos ;  ;  Static Protected Attributes inherited from TDirectory; static Bool_t fgAddDirectory = kTRUE;  MSVC doesn't support = ATOMIC_FLAG_INIT;. ;  . #include <TParallelMergingFile.h>. Inheritance diagram for TParallelMergingFile:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TParallelMergingFile(). TParallelMergingFile::TParallelMergingFile ; (; const char * ; filename, . Option_t * ; option = """", . const char * ; ftitle = """", . Int_t ; compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault . ). Constructor. ; We do no yet open any connection to the server. This will be done at the time the first upload will be requested. ; Definition at line 35 of file TParallelMergingFile.cxx. ◆ ~TParallelMergingFile(). TParallelMergingFile::~TParallelMergingFile ; (; ). Destructor. ; Definition at line 49 of file TParallelMergingFile.cxx. Member Function Docu",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParallelMergingFile.html:6129,Testability,log,logical,6129,"es to prefetch. ;  ; virtual Long64_t GetBytesWritten () const;  Return the total number of bytes written so far to the file. ;  ; TFileCacheRead * GetCacheRead (const TObject *tree=nullptr) const;  Return a pointer to the current read cache. ;  ; TFileCacheWrite * GetCacheWrite () const;  Return a pointer to the current write cache. ;  ; TArrayC * GetClassIndex () const;  ; Int_t GetCompressionAlgorithm () const;  ; Float_t GetCompressionFactor ();  Return the file compression factor. ;  ; Int_t GetCompressionLevel () const;  ; Int_t GetCompressionSettings () const;  ; virtual Long64_t GetEND () const;  ; virtual const TUrl * GetEndpointUrl () const;  ; virtual Int_t GetErrno () const;  Method returning errno. ;  ; Int_t GetFd () const;  ; TList * GetListOfFree () const;  ; TObjArray * GetListOfProcessIDs () const;  ; virtual Int_t GetNbytesFree () const;  ; virtual Int_t GetNbytesInfo () const;  ; virtual TString GetNewUrl ();  ; virtual Int_t GetNfree () const;  ; virtual Int_t GetNProcessIDs () const;  ; Option_t * GetOption () const override;  ; virtual Int_t GetReadCalls () const;  ; Int_t GetRecordHeader (char *buf, Long64_t first, Int_t maxbytes, Int_t &nbytes, Int_t &objlen, Int_t &keylen);  Read the logical record header starting at a certain postion. ;  ; Long64_t GetRelOffset () const;  ; virtual Long64_t GetSeekFree () const;  ; virtual Long64_t GetSeekInfo () const;  ; const TList * GetStreamerInfoCache ();  Returns the cached list of StreamerInfos used in this file. ;  ; virtual TList * GetStreamerInfoList () final;  Read the list of TStreamerInfo objects written to this file. ;  ; Int_t GetVersion () const;  ; virtual void IncrementProcessIDs ();  ; virtual Bool_t IsArchive () const;  ; Bool_t IsBinary () const;  ; virtual Bool_t IsOpen () const;  Returns kTRUE in case file is open and kFALSE if file is not open. ;  ; Bool_t IsRaw () const;  ; void ls (Option_t *option="""") const override;  List file contents. ;  ; virtual void MakeFree (Long64_t first",MatchSource.WIKI,doc/master/classTParallelMergingFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html
https://root.cern/doc/master/classTParameter.html:4195,Availability,error,error,4195,"  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTParameter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParameter.html
https://root.cern/doc/master/classTParameter.html:4284,Availability,error,error,4284,"gs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTParameter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParameter.html
https://root.cern/doc/master/classTParameter.html:4439,Availability,error,error,4439,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the uniqu",MatchSource.WIKI,doc/master/classTParameter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParameter.html
https://root.cern/doc/master/classTParameter.html:4736,Availability,error,error,4736,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual voi",MatchSource.WIKI,doc/master/classTParameter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParameter.html
https://root.cern/doc/master/classTParameter.html:8891,Availability,error,error,8891,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTParameter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParameter.html
https://root.cern/doc/master/classTParameter.html:14653,Availability,error,error,14653,"nlineoverridevirtual . Return hash value for this object. ; Note: If this routine is overloaded in a derived class, this derived class should also add ROOT::CallRecursiveRemoveIfNeeded(*this); ROOT::CallRecursiveRemoveIfNeededvoid CallRecursiveRemoveIfNeeded(TObject &obj)call RecursiveRemove for obj if gROOT is valid and obj.TestBit(kMustCleanup) is true.Definition TROOT.h:395; Otherwise, when RecursiveRemove is called (by ~TObject or example) for this type of object, the transversal of THashList and THashTable containers will will have to be done without call Hash (and hence be linear rather than logarithmic complexity). You will also see warnings like Error in <ROOT::Internal::TCheckHashRecursiveRemoveConsistency::CheckRecursiveRemove>: The class SomeName overrides TObject::Hash but does not call TROOT::RecursiveRemove in its destructor.; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TParameter::HashULong_t Hash() const overrideReturn hash value for this object.Definition TParameter.h:92; TROOT::RecursiveRemovevoid RecursiveRemove(TObject *obj) overrideRecursively remove this object from the list of Cleanups.Definition TROOT.cxx:2498. Reimplemented from TObject.; Definition at line 92 of file TParameter.h. ◆ IsA(). template<class AParamType > . TClass * TParameter< AParamType >::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Reimplemented in TSelectorScalar.; Definition at line 119 of file TParameter.h. ◆ IsConst(). template<class AParamType > . Bool_t TParameter< AParamType >::IsConst ; (; ); const. inline . Definition at line 68 of file TParameter.h. ◆ IsSortable(). template<class AParamType > . Bool_t TParameter< AParamType >::IsSortable ; (; ); const. inlineoverridevirtual . Reimplemented from TObject.; Definition at line 93 of file TParameter.h. ◆ ls(). ",MatchSource.WIKI,doc/master/classTParameter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParameter.html
https://root.cern/doc/master/classTParameter.html:4201,Integrability,message,message,4201,"  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTParameter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParameter.html
https://root.cern/doc/master/classTParameter.html:4742,Integrability,message,message,4742,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual voi",MatchSource.WIKI,doc/master/classTParameter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParameter.html
https://root.cern/doc/master/classTParameter.html:5803,Integrability,message,message,5803," *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTParameter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParameter.html
https://root.cern/doc/master/classTParameter.html:8897,Integrability,message,message,8897,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTParameter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParameter.html
https://root.cern/doc/master/classTParameter.html:9270,Integrability,message,message,9270," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Priva",MatchSource.WIKI,doc/master/classTParameter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParameter.html
https://root.cern/doc/master/classTParameter.html:13727,Integrability,rout,routine,13727,"emplate<class AParamType > . static const char * TParameter< AParamType >::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 119 of file TParameter.h. ◆ GetName(). template<class AParamType > . const char * TParameter< AParamType >::GetName ; (; ); const. inlineoverridevirtual . Returns name of object. ; This default method returns the class name. Classes that give objects a name should override this method. ; Reimplemented from TObject.; Definition at line 66 of file TParameter.h. ◆ GetVal(). template<class AParamType > . const AParamType & TParameter< AParamType >::GetVal ; (; ); const. inline . Definition at line 67 of file TParameter.h. ◆ Hash(). template<class AParamType > . ULong_t TParameter< AParamType >::Hash ; (; ); const. inlineoverridevirtual . Return hash value for this object. ; Note: If this routine is overloaded in a derived class, this derived class should also add ROOT::CallRecursiveRemoveIfNeeded(*this); ROOT::CallRecursiveRemoveIfNeededvoid CallRecursiveRemoveIfNeeded(TObject &obj)call RecursiveRemove for obj if gROOT is valid and obj.TestBit(kMustCleanup) is true.Definition TROOT.h:395; Otherwise, when RecursiveRemove is called (by ~TObject or example) for this type of object, the transversal of THashList and THashTable containers will will have to be done without call Hash (and hence be linear rather than logarithmic complexity). You will also see warnings like Error in <ROOT::Internal::TCheckHashRecursiveRemoveConsistency::CheckRecursiveRemove>: The class SomeName overrides TObject::Hash but does not call TROOT::RecursiveRemove in its destructor.; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TParameter::HashULong_t Hash() const overrideReturn hash value for this object.Definition TParameter.h:92; TROOT::RecursiveRemovevoid RecursiveRemove(",MatchSource.WIKI,doc/master/classTParameter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParameter.html
https://root.cern/doc/master/classTParameter.html:14659,Integrability,message,message,14659,"nlineoverridevirtual . Return hash value for this object. ; Note: If this routine is overloaded in a derived class, this derived class should also add ROOT::CallRecursiveRemoveIfNeeded(*this); ROOT::CallRecursiveRemoveIfNeededvoid CallRecursiveRemoveIfNeeded(TObject &obj)call RecursiveRemove for obj if gROOT is valid and obj.TestBit(kMustCleanup) is true.Definition TROOT.h:395; Otherwise, when RecursiveRemove is called (by ~TObject or example) for this type of object, the transversal of THashList and THashTable containers will will have to be done without call Hash (and hence be linear rather than logarithmic complexity). You will also see warnings like Error in <ROOT::Internal::TCheckHashRecursiveRemoveConsistency::CheckRecursiveRemove>: The class SomeName overrides TObject::Hash but does not call TROOT::RecursiveRemove in its destructor.; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TParameter::HashULong_t Hash() const overrideReturn hash value for this object.Definition TParameter.h:92; TROOT::RecursiveRemovevoid RecursiveRemove(TObject *obj) overrideRecursively remove this object from the list of Cleanups.Definition TROOT.cxx:2498. Reimplemented from TObject.; Definition at line 92 of file TParameter.h. ◆ IsA(). template<class AParamType > . TClass * TParameter< AParamType >::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Reimplemented in TSelectorScalar.; Definition at line 119 of file TParameter.h. ◆ IsConst(). template<class AParamType > . Bool_t TParameter< AParamType >::IsConst ; (; ); const. inline . Definition at line 68 of file TParameter.h. ◆ IsSortable(). template<class AParamType > . Bool_t TParameter< AParamType >::IsSortable ; (; ); const. inlineoverridevirtual . Reimplemented from TObject.; Definition at line 93 of file TParameter.h. ◆ ls(). ",MatchSource.WIKI,doc/master/classTParameter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParameter.html
https://root.cern/doc/master/classTParameter.html:782,Modifiability,inherit,inherited,782,". ROOT: TParameter< AParamType > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TParameter< AParamType > Class Template ReferenceCore ROOT classes » Base ROOT classes. ; template<class AParamType>; class TParameter< AParamType >Named parameter, streamable and storable. ; Definition at line 35 of file TParameter.h. Public Types; enum  EStatusBits { ;   kMultiply = (1ULL << ( 16 )); , kMax = (1ULL << ( 17 )); , kMin = (1ULL << ( 18 )); , kFirst = (1ULL << ( 19 )); , ;   kLast = (1ULL << ( 20 )); , kIsConst = (1ULL << ( 21 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TParameter ();  ;  TParameter (const char *name, const AParamType &val);  ;  TParameter (const char *name, const AParamType &val, char mergemode);  ; virtual ~TParameter ();  ; Int_t Compare (const TObject *obj) const override;  Compare abstract method. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const AParamType & GetVal () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsConst () const;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *) cons",MatchSource.WIKI,doc/master/classTParameter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParameter.html
https://root.cern/doc/master/classTParameter.html:2515,Modifiability,inherit,inherited,2515,"e &val);  ;  TParameter (const char *name, const AParamType &val, char mergemode);  ; virtual ~TParameter ();  ; Int_t Compare (const TObject *obj) const override;  Compare abstract method. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const AParamType & GetVal () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsConst () const;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *) const override;  The ls function lists the contents of a class on stdout. ;  ; virtual Int_t Merge (TCollection *in);  ; Int_t Merge (TCollection *in);  ; void Print (Option_t *) const override;  This method must be overridden when a class wants to print itself. ;  ; void SetMergeMode (char mergemode='+');  ; void SetVal (const AParamType &val);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual void Copy (TObject &object) const;  ",MatchSource.WIKI,doc/master/classTParameter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParameter.html
https://root.cern/doc/master/classTParameter.html:3831,Modifiability,inherit,inheritance,3831,"virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTParameter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParameter.html
https://root.cern/doc/master/classTParameter.html:5901,Modifiability,inherit,inherits,5901," FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTParameter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTParameter.html
