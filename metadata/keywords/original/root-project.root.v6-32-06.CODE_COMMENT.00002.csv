id,quality_attribute,keyword,matched_word,match_idx,sentence,source,filename,author,repo,version,wiki,url
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:32,Testability,log,log,32,"/// Remove and return the given log handler. Returns `nullptr` if not found.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:89,Testability,Log,Log,89,"// Emit a `RLogEntry` to the RLogHandlers.; // Returns false if further emission of this Log should be suppressed.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:151,Integrability,message,message,151,"/**; A diagnostic that can be emitted by the RLogManager.; One can construct a RLogEntry through RLogBuilder, including streaming into; the diagnostic message and automatic emission.; */",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:8,Testability,log,log,8,"/// The log entry to be built.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:13,Testability,log,log,13,"/// Emit the log entry through the static log manager.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:42,Testability,log,log,42,"/// Emit the log entry through the static log manager.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:48,Availability,error,errors,48,"/**; Object to count the number of warnings and errors emitted by a section of code,; after construction of this type.; */",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:46,Availability,error,errors,46,"/// The number of the RLogDiagCount's emitted errors at construction time.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:52,Availability,error,errors,52,"/// The number of the RLogDiagCount's emitted fatal errors at construction time.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:22,Availability,error,errors,22,"/// Get the number of errors that the RLogDiagCount has emitted since construction of *this.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:22,Availability,error,errors,22,"/// Get the number of errors that the RLogDiagCount has emitted since construction of *this.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:45,Availability,error,error,45,"/// Whether the RLogDiagCount has emitted an error (fatal or not) since construction time of *this.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:45,Availability,error,error,45,"/// Whether the RLogDiagCount has emitted an error or a warning since construction time of *this.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:278,Availability,error,errors,278,"/*; Some implementation details:. - The conditional `RLogBuilder` use prevents stream operators from being called if; verbosity is too low, i.e.:; ~~~; RLogScopedVerbosity silence(RLogLevel::kFatal);; R__LOG_DEBUG(7) << WillNotBeCalled();; ~~~; - To update counts of warnings / errors / fatal errors, those RLogEntries must; always be created, even if in the end their emission will be silenced. This; should be fine, performance-wise, as they should not happen frequently.; - Use `(condition) && RLogBuilder(...)` instead of `if (condition) RLogBuilder(...)`; to prevent ""ambiguous else"" in invocations such as `if (something) R__LOG_DEBUG()...`.; */",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:293,Availability,error,errors,293,"/*; Some implementation details:. - The conditional `RLogBuilder` use prevents stream operators from being called if; verbosity is too low, i.e.:; ~~~; RLogScopedVerbosity silence(RLogLevel::kFatal);; R__LOG_DEBUG(7) << WillNotBeCalled();; ~~~; - To update counts of warnings / errors / fatal errors, those RLogEntries must; always be created, even if in the end their emission will be silenced. This; should be fine, performance-wise, as they should not happen frequently.; - Use `(condition) && RLogBuilder(...)` instead of `if (condition) RLogBuilder(...)`; to prevent ""ambiguous else"" in invocations such as `if (something) R__LOG_DEBUG()...`.; */",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:250,Deployability,update,update,250,"/*; Some implementation details:. - The conditional `RLogBuilder` use prevents stream operators from being called if; verbosity is too low, i.e.:; ~~~; RLogScopedVerbosity silence(RLogLevel::kFatal);; R__LOG_DEBUG(7) << WillNotBeCalled();; ~~~; - To update counts of warnings / errors / fatal errors, those RLogEntries must; always be created, even if in the end their emission will be silenced. This; should be fine, performance-wise, as they should not happen frequently.; - Use `(condition) && RLogBuilder(...)` instead of `if (condition) RLogBuilder(...)`; to prevent ""ambiguous else"" in invocations such as `if (something) R__LOG_DEBUG()...`.; */",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:418,Performance,perform,performance-wise,418,"/*; Some implementation details:. - The conditional `RLogBuilder` use prevents stream operators from being called if; verbosity is too low, i.e.:; ~~~; RLogScopedVerbosity silence(RLogLevel::kFatal);; R__LOG_DEBUG(7) << WillNotBeCalled();; ~~~; - To update counts of warnings / errors / fatal errors, those RLogEntries must; always be created, even if in the end their emission will be silenced. This; should be fine, performance-wise, as they should not happen frequently.; - Use `(condition) && RLogBuilder(...)` instead of `if (condition) RLogBuilder(...)`; to prevent ""ambiguous else"" in invocations such as `if (something) R__LOG_DEBUG()...`.; */",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:10,Testability,Log,LogMacros,10,"/// \name LogMacros; /// Macros to log diagnostics.; /// ~~~ {.cpp}; /// R__LOG_INFO(ROOT::Experimental::HistLog()) << ""all we know is "" << 42;; ///; /// RLogScopedVerbosity verbose(kDebug + 5);; /// const int decreasedInfoLevel = 5;; /// R__LOG_DEBUG(ROOT::WebGUILog(), decreasedInfoLevel) << ""nitty-gritty details"";; /// ~~~; ///\{",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:35,Testability,log,log,35,"/// \name LogMacros; /// Macros to log diagnostics.; /// ~~~ {.cpp}; /// R__LOG_INFO(ROOT::Experimental::HistLog()) << ""all we know is "" << 42;; ///; /// RLogScopedVerbosity verbose(kDebug + 5);; /// const int decreasedInfoLevel = 5;; /// R__LOG_DEBUG(ROOT::WebGUILog(), decreasedInfoLevel) << ""nitty-gritty details"";; /// ~~~; ///\{",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RNotFn.hxx:29,Availability,avail,available,29,"// Backport if not_fn is not available.; // libc++ does not define __cpp_lib_not_fn.; // Assume we have not_fn if libc++ is compiled with C++14 and up.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RNotFn.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RNotFn.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RRangeCast.hxx:149,Availability,error,error,149,"// We want to know at compile time whether dynamic_cast or static_cast is; // used. First of all to avoid overhead, but also to avoid a compiler; // error when using dynamic_cast on a non-polymorphic class. In C++17,; // this can be done easily with `if constexpr`, but for the older; // standards we have to use a more verbose alternative. Both ways are; // explicitely implemented for different standards, so that when the; // minimum C++ standard for ROOT is raised to C++17 it's easy to remember; // that we can avoid much boilerplate code in this file.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RRangeCast.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RRangeCast.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RRangeCast.hxx:188,Modifiability,polymorphi,polymorphic,188,"// We want to know at compile time whether dynamic_cast or static_cast is; // used. First of all to avoid overhead, but also to avoid a compiler; // error when using dynamic_cast on a non-polymorphic class. In C++17,; // this can be done easily with `if constexpr`, but for the older; // standards we have to use a more verbose alternative. Both ways are; // explicitely implemented for different standards, so that when the; // minimum C++ standard for ROOT is raised to C++17 it's easy to remember; // that we can avoid much boilerplate code in this file.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RRangeCast.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RRangeCast.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RRangeCast.hxx:100,Safety,avoid,avoid,100,"// We want to know at compile time whether dynamic_cast or static_cast is; // used. First of all to avoid overhead, but also to avoid a compiler; // error when using dynamic_cast on a non-polymorphic class. In C++17,; // this can be done easily with `if constexpr`, but for the older; // standards we have to use a more verbose alternative. Both ways are; // explicitely implemented for different standards, so that when the; // minimum C++ standard for ROOT is raised to C++17 it's easy to remember; // that we can avoid much boilerplate code in this file.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RRangeCast.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RRangeCast.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RRangeCast.hxx:128,Safety,avoid,avoid,128,"// We want to know at compile time whether dynamic_cast or static_cast is; // used. First of all to avoid overhead, but also to avoid a compiler; // error when using dynamic_cast on a non-polymorphic class. In C++17,; // this can be done easily with `if constexpr`, but for the older; // standards we have to use a more verbose alternative. Both ways are; // explicitely implemented for different standards, so that when the; // minimum C++ standard for ROOT is raised to C++17 it's easy to remember; // that we can avoid much boilerplate code in this file.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RRangeCast.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RRangeCast.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RRangeCast.hxx:516,Safety,avoid,avoid,516,"// We want to know at compile time whether dynamic_cast or static_cast is; // used. First of all to avoid overhead, but also to avoid a compiler; // error when using dynamic_cast on a non-polymorphic class. In C++17,; // this can be done easily with `if constexpr`, but for the older; // standards we have to use a more verbose alternative. Both ways are; // explicitely implemented for different standards, so that when the; // minimum C++ standard for ROOT is raised to C++17 it's easy to remember; // that we can avoid much boilerplate code in this file.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RRangeCast.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RRangeCast.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RRangeCast.hxx:27,Integrability,Wrap,Wraps,27,"// namespace Internal; /// Wraps any collection that can be used in range-based loops and applies; /// `static_cast<T>` or `dynamic_cast<T>` to each element.; /// \tparam T The new type to convert to.; /// \tparam isDynamic If `true`, `dynamic_cast` is used, otherwise `static_cast` is used.; /// \tparam Range_t The type of the input range, which should be usually a reference type to avoid copying.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RRangeCast.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RRangeCast.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RRangeCast.hxx:386,Safety,avoid,avoid,386,"// namespace Internal; /// Wraps any collection that can be used in range-based loops and applies; /// `static_cast<T>` or `dynamic_cast<T>` to each element.; /// \tparam T The new type to convert to.; /// \tparam isDynamic If `true`, `dynamic_cast` is used, otherwise `static_cast` is used.; /// \tparam Range_t The type of the input range, which should be usually a reference type to avoid copying.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RRangeCast.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RRangeCast.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RRangeCast.hxx:175,Integrability,depend,depending,175,"// Overload for C-style arrays. It's not possible to make an overload of the; // RRangeCast constructor itself, because when the C-style array is forwarded; // it might decay depending on the compiler version.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RRangeCast.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RRangeCast.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RRangeCast.hxx:175,Integrability,depend,depending,175,"// Overload for C-style arrays. It's not possible to make an overload of the; // RRangeCast constructor itself, because when the C-style array is forwarded; // it might decay depending on the compiler version.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RRangeCast.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RRangeCast.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RVersion.hxx:3,Deployability,Update,Update,3,/* Update on release: */,MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RVersion.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RVersion.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RVersion.hxx:13,Deployability,release,release,13,/* Update on release: */,MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RVersion.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RVersion.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/span.hxx:15,Integrability,interface,interfaces,15,/*; * iterator interfaces; */,MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/span.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/span.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/span.hxx:6,Security,access,access,6,/*; * access; */,MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/span.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/span.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/span.hxx:37,Usability,simpl,simple,37,"// This stuff is too complex for our simple use case!",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/span.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/span.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/span.hxx:4,Testability,Mock,Mock-up,4,"/// Mock-up of future atd::(experimental::)span.; /// Supports only what we need for THist, e.g. Rank := 1.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/span.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/span.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/TypeTraits.hxx:132,Performance,perform,performed,132,"/// Lightweight storage for a collection of types.; /// Differently from std::tuple, no instantiation of objects of stored types is performed",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/TypeTraits.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/TypeTraits.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/TypeTraits.hxx:93,Availability,avail,available,93,"/// An adapter for std::invoke_result that falls back to std::result_of if the former is not available.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/TypeTraits.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/TypeTraits.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/TypeTraits.hxx:7,Energy Efficiency,adapt,adapter,7,"/// An adapter for std::invoke_result that falls back to std::result_of if the former is not available.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/TypeTraits.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/TypeTraits.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/TypeTraits.hxx:7,Integrability,adapter,adapter,7,"/// An adapter for std::invoke_result that falls back to std::result_of if the former is not available.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/TypeTraits.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/TypeTraits.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/TypeTraits.hxx:7,Modifiability,adapt,adapter,7,"/// An adapter for std::invoke_result that falls back to std::result_of if the former is not available.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/TypeTraits.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/TypeTraits.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/RConversionRuleParser.h:89,Modifiability,variab,variables,89,"//---------------------------------------------------------------------------; // Global variables; //---------------------------------------------------------------------------",MatchSource.CODE_COMMENT,core/foundation/res/RConversionRuleParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/RConversionRuleParser.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/TSpinLockGuard.h:195,Modifiability,variab,variable,195,/**; * \class ROOT::Internal::TSpinLockGuard; * \brief A spin mutex-as-code-guard class.; * \ingroup Parallelism; * This class allows to acquire spin locks in combination with a std::atomic_flag variable.; * For example:; * ~~~{.cpp}; * mutable std::atomic_flag fSpinLock;; * [...]; * ROOT::Internal::TSpinLockGuard slg(fSpinLock);; * // do something important; * [...]; * ~~~{.cpp}; */,MatchSource.CODE_COMMENT,core/foundation/res/TSpinLockGuard.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/TSpinLockGuard.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/FoundationUtils.hxx:102,Deployability,a/b,a/b,102,"///\returns the relative path of \c path with respect to \c base.; /// For instance, for path being ""/a/b/c/d"" and base ""/a/b"", returns ""c/d"".; ///; ///\param path - the input path; ///; ///\param base - the base path to be removed from \c path.; ///; ///\param isBuildingROOT - if true, it converts module directories such as; /// core/base/inc/ to include/",MatchSource.CODE_COMMENT,core/foundation/res/ROOT/FoundationUtils.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/FoundationUtils.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/FoundationUtils.hxx:122,Deployability,a/b,a/b,122,"///\returns the relative path of \c path with respect to \c base.; /// For instance, for path being ""/a/b/c/d"" and base ""/a/b"", returns ""c/d"".; ///; ///\param path - the input path; ///; ///\param base - the base path to be removed from \c path.; ///; ///\param isBuildingROOT - if true, it converts module directories such as; /// core/base/inc/ to include/",MatchSource.CODE_COMMENT,core/foundation/res/ROOT/FoundationUtils.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/FoundationUtils.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/FoundationUtils.hxx:50,Integrability,depend,depending,50,"///\returns the path separator slash or backslash depending on the platform.",MatchSource.CODE_COMMENT,core/foundation/res/ROOT/FoundationUtils.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/FoundationUtils.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/FoundationUtils.hxx:56,Modifiability,variab,variable,56,"///\returns the path separator for the PATH environment variable on the; /// platform.",MatchSource.CODE_COMMENT,core/foundation/res/ROOT/FoundationUtils.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/FoundationUtils.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/FoundationUtils.hxx:42,Deployability,install,installation,42,"///\returns the fallback directory in the installation (eg. /usr/local/root/).",MatchSource.CODE_COMMENT,core/foundation/res/ROOT/FoundationUtils.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/FoundationUtils.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/FoundationUtils.hxx:41,Deployability,install,installation,41,"///\returns the rootsys directory in the installation.; ///",MatchSource.CODE_COMMENT,core/foundation/res/ROOT/FoundationUtils.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/FoundationUtils.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/FoundationUtils.hxx:42,Deployability,install,installation,42,"///\ returns the include directory in the installation.; ///",MatchSource.CODE_COMMENT,core/foundation/res/ROOT/FoundationUtils.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/FoundationUtils.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/FoundationUtils.hxx:43,Deployability,install,installation,43,"///\returns the sysconfig directory in the installation.",MatchSource.CODE_COMMENT,core/foundation/res/ROOT/FoundationUtils.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/FoundationUtils.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/RSha256.hxx:3,Testability,test,tests,3,"// tests fail if we don't have this cast...",MatchSource.CODE_COMMENT,core/foundation/res/ROOT/RSha256.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/RSha256.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/RSha256.hxx:23,Performance,optimiz,optimization,23,/* define it for speed optimization */,MatchSource.CODE_COMMENT,core/foundation/res/ROOT/RSha256.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/RSha256.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/RSha256.hxx:8,Modifiability,variab,variables,8,"/* Wipe variables */; /* memset(W, 0, sizeof(W)); */; /* memset(T, 0, sizeof(T)); */",MatchSource.CODE_COMMENT,core/foundation/res/ROOT/RSha256.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/RSha256.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/RSha256.hxx:39,Integrability,interface,interface,39,"// Here the final cast is to match the interface of the C code and; // the data member. The length is the same!",MatchSource.CODE_COMMENT,core/foundation/res/ROOT/RSha256.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/RSha256.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/FoundationUtils.cxx:48,Integrability,interface,interface,48,"// FIXME: This is not a generic approach for an interface. We should rework; // this part.",MatchSource.CODE_COMMENT,core/foundation/src/FoundationUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/FoundationUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/FoundationUtils.cxx:166,Integrability,depend,depend,166,"// FIXME: We should not hardcode this path. We can use a similar to the; // windows technique to get the path to the executable. The easiest way; // to do this is to depend on LLVMSupport and use getMainExecutable.",MatchSource.CODE_COMMENT,core/foundation/src/FoundationUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/FoundationUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/FoundationUtils.cxx:22,Integrability,wrap,wrapper,22,"// FIXME: Implement a wrapper around __builtin_unreachable() and use it here",MatchSource.CODE_COMMENT,core/foundation/src/FoundationUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/FoundationUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RConversionRuleParser.cxx:81,Energy Efficiency,Allocate,Allocate,81,"//--------------------------------------------------------------------------; // Allocate global variables; /////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/foundation/src/RConversionRuleParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RConversionRuleParser.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RConversionRuleParser.cxx:97,Modifiability,variab,variables,97,"//--------------------------------------------------------------------------; // Allocate global variables; /////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/foundation/src/RConversionRuleParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RConversionRuleParser.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RConversionRuleParser.cxx:83,Security,Validat,Validate,83,"/////////////////////////////////////////////////////////////////////////////; /// Validate if the user specified rules are correct",MatchSource.CODE_COMMENT,core/foundation/src/RConversionRuleParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RConversionRuleParser.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RConversionRuleParser.cxx:113,Security,checksum,checksum,113,"//-----------------------------------------------------------------------; // Check if we have either version or checksum specified; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/foundation/src/RConversionRuleParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RConversionRuleParser.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RConversionRuleParser.cxx:91,Security,checksum,checksum,91,"//-----------------------------------------------------------------------; // Check if the checksum has been set to right value; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/foundation/src/RConversionRuleParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RConversionRuleParser.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RConversionRuleParser.cxx:181,Security,checksum,checksum,181,"//-----------------------------------------------------------------------; // Check if we're dealing with renameing declaration - sourceClass,; // targetClass and either version or checksum required; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/foundation/src/RConversionRuleParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RConversionRuleParser.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RConversionRuleParser.cxx:89,Availability,down,down,89,"/////////////////////////////////////////////////////////////////////////////; /// Write down the sources",MatchSource.CODE_COMMENT,core/foundation/src/RConversionRuleParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RConversionRuleParser.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RConversionRuleParser.cxx:84,Availability,down,down,84,"//-----------------------------------------------------------------------; // Write down the targets; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/foundation/src/RConversionRuleParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RConversionRuleParser.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RConversionRuleParser.cxx:112,Modifiability,variab,variables,112,"//-----------------------------------------------------------------------; // Write the automatically generated variables; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/foundation/src/RConversionRuleParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RConversionRuleParser.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RConversionRuleParser.cxx:112,Modifiability,variab,variables,112,"//-----------------------------------------------------------------------; // Write the automatically generated variables; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/foundation/src/RConversionRuleParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RConversionRuleParser.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RConversionRuleParser.cxx:81,Availability,down,down,81,"//--------------------------------------------------------------------; // Write down the mandatory fields; ///////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/foundation/src/RConversionRuleParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RConversionRuleParser.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RLogger.cxx:223,Usability,Feedback,Feedback,223,"/// \file RLogger.cxx; /// \ingroup Base ROOT7; /// \author Axel Naumann <axel@cern.ch>; /// \date 2015-07-07; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /*************************************************************************; * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,core/foundation/src/RLogger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RLogger.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RLogger.cxx:45,Testability,log,log,45,"// Returns false if further emission of this log entry should be suppressed.",MatchSource.CODE_COMMENT,core/foundation/src/RLogger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RLogger.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:66,Energy Efficiency,reduce,reduced,66,"// TODO: This is likely to induce unwanted autoparsing, those are reduced; // by the caching of the result.",MatchSource.CODE_COMMENT,core/foundation/src/TClassEdit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:85,Performance,cache,cache,85,"// We assume that we are called in already serialized code.; // Note: should we also cache the negative answers?",MatchSource.CODE_COMMENT,core/foundation/src/TClassEdit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:150,Testability,test,testAlloc,150,"////////////////////////////////////////////////////////////////////////////////; /// type : type name: vector<list<classA,allocator>,allocator>; /// testAlloc: if true, we test allocator, if it is not default result is negative; /// result: 0 : not stl container; /// abs(result): code of container 1=vector,2=list,3=deque,4=map; /// 5=multimap,6=set,7=multiset; /// positive val: we have a vector or list with default allocator to any depth; /// like vector<list<vector<int>>>; /// negative val: STL container other than vector or list, or non default allocator; /// For example: vector<deque<int>> has answer -1",MatchSource.CODE_COMMENT,core/foundation/src/TClassEdit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:173,Testability,test,test,173,"////////////////////////////////////////////////////////////////////////////////; /// type : type name: vector<list<classA,allocator>,allocator>; /// testAlloc: if true, we test allocator, if it is not default result is negative; /// result: 0 : not stl container; /// abs(result): code of container 1=vector,2=list,3=deque,4=map; /// 5=multimap,6=set,7=multiset; /// positive val: we have a vector or list with default allocator to any depth; /// like vector<list<vector<int>>>; /// negative val: STL container other than vector or list, or non default allocator; /// For example: vector<deque<int>> has answer -1",MatchSource.CODE_COMMENT,core/foundation/src/TClassEdit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:22,Security,Hash,Hash,22,"// Treat now Pred and Hash for unordered set/map containers. Signature is:; // template < class Key,; // class Hash = hash<Key>,; // class Pred = equal_to<Key>,; // class Alloc = allocator<Key>; // > class unordered_{set,multiset}; // template < class Key,; // class Val,; // class Hash = hash<Key>,; // class Pred = equal_to<Key>,; // class Alloc = allocator<Key>; // > class unordered_{map,multimap}",MatchSource.CODE_COMMENT,core/foundation/src/TClassEdit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:111,Security,Hash,Hash,111,"// Treat now Pred and Hash for unordered set/map containers. Signature is:; // template < class Key,; // class Hash = hash<Key>,; // class Pred = equal_to<Key>,; // class Alloc = allocator<Key>; // > class unordered_{set,multiset}; // template < class Key,; // class Val,; // class Hash = hash<Key>,; // class Pred = equal_to<Key>,; // class Alloc = allocator<Key>; // > class unordered_{map,multimap}",MatchSource.CODE_COMMENT,core/foundation/src/TClassEdit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:118,Security,hash,hash,118,"// Treat now Pred and Hash for unordered set/map containers. Signature is:; // template < class Key,; // class Hash = hash<Key>,; // class Pred = equal_to<Key>,; // class Alloc = allocator<Key>; // > class unordered_{set,multiset}; // template < class Key,; // class Val,; // class Hash = hash<Key>,; // class Pred = equal_to<Key>,; // class Alloc = allocator<Key>; // > class unordered_{map,multimap}",MatchSource.CODE_COMMENT,core/foundation/src/TClassEdit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:282,Security,Hash,Hash,282,"// Treat now Pred and Hash for unordered set/map containers. Signature is:; // template < class Key,; // class Hash = hash<Key>,; // class Pred = equal_to<Key>,; // class Alloc = allocator<Key>; // > class unordered_{set,multiset}; // template < class Key,; // class Val,; // class Hash = hash<Key>,; // class Pred = equal_to<Key>,; // class Alloc = allocator<Key>; // > class unordered_{map,multimap}",MatchSource.CODE_COMMENT,core/foundation/src/TClassEdit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:289,Security,hash,hash,289,"// Treat now Pred and Hash for unordered set/map containers. Signature is:; // template < class Key,; // class Hash = hash<Key>,; // class Pred = equal_to<Key>,; // class Alloc = allocator<Key>; // > class unordered_{set,multiset}; // template < class Key,; // class Val,; // class Hash = hash<Key>,; // class Pred = equal_to<Key>,; // class Alloc = allocator<Key>; // > class unordered_{map,multimap}",MatchSource.CODE_COMMENT,core/foundation/src/TClassEdit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:18,Security,hash,hash,18,"// remove default hash",MatchSource.CODE_COMMENT,core/foundation/src/TClassEdit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:109,Security,hash,hashname,109,"////////////////////////////////////////////////////////////////////////////////; /// return whether or not 'hashname' is the STL default hash for type; /// 'classname'",MatchSource.CODE_COMMENT,core/foundation/src/TClassEdit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:138,Security,hash,hash,138,"////////////////////////////////////////////////////////////////////////////////; /// return whether or not 'hashname' is the STL default hash for type; /// 'classname'",MatchSource.CODE_COMMENT,core/foundation/src/TClassEdit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:383,Integrability,rout,routines,383,"////////////////////////////////////////////////////////////////////////////////; /// Return the normalized name. See TMetaUtils::GetNormalizedName.; ///; /// Return the type name normalized for ROOT,; /// keeping only the ROOT opaque typedef (Double32_t, etc.) and; /// removing the STL collections default parameter if any.; ///; /// Compare to TMetaUtils::GetNormalizedName, this routines does not; /// and can not add default template parameters.",MatchSource.CODE_COMMENT,core/foundation/src/TClassEdit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:3,Integrability,Depend,Depending,3,"// Depending on how the user typed their code, in particular typedef; // declarations, we may end up with an explicit '::' being; // part of the result string. For consistency, we must remove it.",MatchSource.CODE_COMMENT,core/foundation/src/TClassEdit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:190,Availability,redundant,redundant,190,"////////////////////////////////////////////////////////////////////////////////; ////////////////////////////////////////////////////////////////////////////; /// Cleanup type description, redundant blanks removed; /// and redundant tail ignored; /// return *tail = pointer to last used character; /// if (mode==0) keep keywords; /// if (mode==1) remove keywords outside the template params; /// if (mode>=2) remove the keywords everywhere.; /// if (tail!=0) cut before the trailing *; ///; /// The keywords currently are: ""const"" , ""volatile"" removed; ///; ///; /// CleanType("" A<B, C< D, E> > *,F,G>"") returns ""A<B,C<D,E> >*""; ////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/foundation/src/TClassEdit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:224,Availability,redundant,redundant,224,"////////////////////////////////////////////////////////////////////////////////; ////////////////////////////////////////////////////////////////////////////; /// Cleanup type description, redundant blanks removed; /// and redundant tail ignored; /// return *tail = pointer to last used character; /// if (mode==0) keep keywords; /// if (mode==1) remove keywords outside the template params; /// if (mode>=2) remove the keywords everywhere.; /// if (tail!=0) cut before the trailing *; ///; /// The keywords currently are: ""const"" , ""volatile"" removed; ///; ///; /// CleanType("" A<B, C< D, E> > *,F,G>"") returns ""A<B,C<D,E> >*""; ////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/foundation/src/TClassEdit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:190,Safety,redund,redundant,190,"////////////////////////////////////////////////////////////////////////////////; ////////////////////////////////////////////////////////////////////////////; /// Cleanup type description, redundant blanks removed; /// and redundant tail ignored; /// return *tail = pointer to last used character; /// if (mode==0) keep keywords; /// if (mode==1) remove keywords outside the template params; /// if (mode>=2) remove the keywords everywhere.; /// if (tail!=0) cut before the trailing *; ///; /// The keywords currently are: ""const"" , ""volatile"" removed; ///; ///; /// CleanType("" A<B, C< D, E> > *,F,G>"") returns ""A<B,C<D,E> >*""; ////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/foundation/src/TClassEdit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:224,Safety,redund,redundant,224,"////////////////////////////////////////////////////////////////////////////////; ////////////////////////////////////////////////////////////////////////////; /// Cleanup type description, redundant blanks removed; /// and redundant tail ignored; /// return *tail = pointer to last used character; /// if (mode==0) keep keywords; /// if (mode==1) remove keywords outside the template params; /// if (mode>=2) remove the keywords everywhere.; /// if (tail!=0) cut before the trailing *; ///; /// The keywords currently are: ""const"" , ""volatile"" removed; ///; ///; /// CleanType("" A<B, C< D, E> > *,F,G>"") returns ""A<B,C<D,E> >*""; ////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/foundation/src/TClassEdit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:150,Testability,test,testAlloc,150,"////////////////////////////////////////////////////////////////////////////////; /// type : type name: vector<list<classA,allocator>,allocator>; /// testAlloc: if true, we test allocator, if it is not default result is negative; /// result: 0 : not stl container; /// abs(result): code of container 1=vector,2=list,3=deque,4=map; /// 5=multimap,6=set,7=multiset; /// positive val: we have a vector or list with default allocator to any depth; /// like vector<list<vector<int>>>; /// negative val: STL container other than vector or list, or non default allocator; /// For example: vector<deque<int>> has answer -1",MatchSource.CODE_COMMENT,core/foundation/src/TClassEdit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:173,Testability,test,test,173,"////////////////////////////////////////////////////////////////////////////////; /// type : type name: vector<list<classA,allocator>,allocator>; /// testAlloc: if true, we test allocator, if it is not default result is negative; /// result: 0 : not stl container; /// abs(result): code of container 1=vector,2=list,3=deque,4=map; /// 5=multimap,6=set,7=multiset; /// positive val: we have a vector or list with default allocator to any depth; /// like vector<list<vector<int>>>; /// negative val: STL container other than vector or list, or non default allocator; /// For example: vector<deque<int>> has answer -1",MatchSource.CODE_COMMENT,core/foundation/src/TClassEdit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:21,Safety,avoid,avoid,21,"// we need to try to avoid this copy",MatchSource.CODE_COMMENT,core/foundation/src/TClassEdit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:21,Safety,avoid,avoid,21,"// we need to try to avoid this copy",MatchSource.CODE_COMMENT,core/foundation/src/TClassEdit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:100,Modifiability,portab,portable,100,"////////////////////////////////////////////////////////////////////////////////; /// Demangle in a portable way the type id name.; /// IMPORTANT: The caller is responsible for freeing the returned const char*",MatchSource.CODE_COMMENT,core/foundation/src/TClassEdit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:423,Availability,Error,Error,423,"// @(#)root/base:$Id$; // Author: Fons Rademakers 29/07/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; Error handling routines. This file defines a number of global error handling routines:; Warning(), Error(), SysError() and Fatal(). They all take a; location string (where the error happened) and a printf style format; string plus vararg's. In the end these functions call an; errorhandler function. Initially the MinimalErrorHandler, which is supposed; to be replaced by the proper DefaultErrorHandler(); */",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:485,Availability,error,error,485,"// @(#)root/base:$Id$; // Author: Fons Rademakers 29/07/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; Error handling routines. This file defines a number of global error handling routines:; Warning(), Error(), SysError() and Fatal(). They all take a; location string (where the error happened) and a printf style format; string plus vararg's. In the end these functions call an; errorhandler function. Initially the MinimalErrorHandler, which is supposed; to be replaced by the proper DefaultErrorHandler(); */",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:522,Availability,Error,Error,522,"// @(#)root/base:$Id$; // Author: Fons Rademakers 29/07/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; Error handling routines. This file defines a number of global error handling routines:; Warning(), Error(), SysError() and Fatal(). They all take a; location string (where the error happened) and a printf style format; string plus vararg's. In the end these functions call an; errorhandler function. Initially the MinimalErrorHandler, which is supposed; to be replaced by the proper DefaultErrorHandler(); */",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:599,Availability,error,error,599,"// @(#)root/base:$Id$; // Author: Fons Rademakers 29/07/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; Error handling routines. This file defines a number of global error handling routines:; Warning(), Error(), SysError() and Fatal(). They all take a; location string (where the error happened) and a printf style format; string plus vararg's. In the end these functions call an; errorhandler function. Initially the MinimalErrorHandler, which is supposed; to be replaced by the proper DefaultErrorHandler(); */",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:700,Availability,error,errorhandler,700,"// @(#)root/base:$Id$; // Author: Fons Rademakers 29/07/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; Error handling routines. This file defines a number of global error handling routines:; Warning(), Error(), SysError() and Fatal(). They all take a; location string (where the error happened) and a printf style format; string plus vararg's. In the end these functions call an; errorhandler function. Initially the MinimalErrorHandler, which is supposed; to be replaced by the proper DefaultErrorHandler(); */",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:438,Integrability,rout,routines,438,"// @(#)root/base:$Id$; // Author: Fons Rademakers 29/07/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; Error handling routines. This file defines a number of global error handling routines:; Warning(), Error(), SysError() and Fatal(). They all take a; location string (where the error happened) and a printf style format; string plus vararg's. In the end these functions call an; errorhandler function. Initially the MinimalErrorHandler, which is supposed; to be replaced by the proper DefaultErrorHandler(); */",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:500,Integrability,rout,routines,500,"// @(#)root/base:$Id$; // Author: Fons Rademakers 29/07/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; Error handling routines. This file defines a number of global error handling routines:; Warning(), Error(), SysError() and Fatal(). They all take a; location string (where the error happened) and a printf style format; string plus vararg's. In the end these functions call an; errorhandler function. Initially the MinimalErrorHandler, which is supposed; to be replaced by the proper DefaultErrorHandler(); */",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:18,Availability,error,error,18,"/// A very simple error handler that is usually replaced by the TROOT default error handler.; /// The minimal error handler is not serialized across threads, so that output of multi-threaded programs; /// can get scrambled; /// @note `abort()` is only called if `abort_bool` is `true` and `level >= gErrorIgnoreLevel`",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:78,Availability,error,error,78,"/// A very simple error handler that is usually replaced by the TROOT default error handler.; /// The minimal error handler is not serialized across threads, so that output of multi-threaded programs; /// can get scrambled; /// @note `abort()` is only called if `abort_bool` is `true` and `level >= gErrorIgnoreLevel`",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:110,Availability,error,error,110,"/// A very simple error handler that is usually replaced by the TROOT default error handler.; /// The minimal error handler is not serialized across threads, so that output of multi-threaded programs; /// can get scrambled; /// @note `abort()` is only called if `abort_bool` is `true` and `level >= gErrorIgnoreLevel`",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:176,Performance,multi-thread,multi-threaded,176,"/// A very simple error handler that is usually replaced by the TROOT default error handler.; /// The minimal error handler is not serialized across threads, so that output of multi-threaded programs; /// can get scrambled; /// @note `abort()` is only called if `abort_bool` is `true` and `level >= gErrorIgnoreLevel`",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:235,Safety,abort,abort,235,"/// A very simple error handler that is usually replaced by the TROOT default error handler.; /// The minimal error handler is not serialized across threads, so that output of multi-threaded programs; /// can get scrambled; /// @note `abort()` is only called if `abort_bool` is `true` and `level >= gErrorIgnoreLevel`",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:11,Usability,simpl,simple,11,"/// A very simple error handler that is usually replaced by the TROOT default error handler.; /// The minimal error handler is not serialized across threads, so that output of multi-threaded programs; /// can get scrambled; /// @note `abort()` is only called if `abort_bool` is `true` and `level >= gErrorIgnoreLevel`",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:112,Availability,error,errorhandler,112,"// namespace ROOT; ////////////////////////////////////////////////////////////////////////////////; /// Set an errorhandler function. Returns the old handler.",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:106,Availability,error,error,106,"////////////////////////////////////////////////////////////////////////////////; /// Returns the current error handler function.",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:94,Availability,error,error,94,"////////////////////////////////////////////////////////////////////////////////; /// General error handler function. It calls the user set error handler.",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:140,Availability,error,error,140,"////////////////////////////////////////////////////////////////////////////////; /// General error handler function. It calls the user set error handler.",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:180,Modifiability,inherit,inherited,180,"////////////////////////////////////////////////////////////////////////////////; /// This function can be used in classes that should override a certain; /// function, but in the inherited class the function makes no sense.",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:115,Availability,error,error,115,"////////////////////////////////////////////////////////////////////////////////; /// Use this function in case an error occurred.",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:141,Availability,error,error,141,"////////////////////////////////////////////////////////////////////////////////; /// Use this function in case a system (OS or GUI) related error occurred.",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:115,Availability,error,error,115,"////////////////////////////////////////////////////////////////////////////////; /// Use this function in case an error occurred.",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:122,Integrability,message,messages,122,"////////////////////////////////////////////////////////////////////////////////; /// Use this function for informational messages.",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:123,Availability,error,error,123,"////////////////////////////////////////////////////////////////////////////////; /// Use this function in case of a fatal error. It will abort the program.; /// @warning Fatal() *will* not abort the program if `gErrorIgnoreLevel > kFatal`; /// - but for all reasonable settings it *will* abort.; // So let's be reasonable wrt Coverity:; // coverity[+kill]",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:138,Safety,abort,abort,138,"////////////////////////////////////////////////////////////////////////////////; /// Use this function in case of a fatal error. It will abort the program.; /// @warning Fatal() *will* not abort the program if `gErrorIgnoreLevel > kFatal`; /// - but for all reasonable settings it *will* abort.; // So let's be reasonable wrt Coverity:; // coverity[+kill]",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:190,Safety,abort,abort,190,"////////////////////////////////////////////////////////////////////////////////; /// Use this function in case of a fatal error. It will abort the program.; /// @warning Fatal() *will* not abort the program if `gErrorIgnoreLevel > kFatal`; /// - but for all reasonable settings it *will* abort.; // So let's be reasonable wrt Coverity:; // coverity[+kill]",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:289,Safety,abort,abort,289,"////////////////////////////////////////////////////////////////////////////////; /// Use this function in case of a fatal error. It will abort the program.; /// @warning Fatal() *will* not abort the program if `gErrorIgnoreLevel > kFatal`; /// - but for all reasonable settings it *will* abort.; // So let's be reasonable wrt Coverity:; // coverity[+kill]",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/FoundationUtilsTests.cxx:49,Testability,test,tests,49,"/// \file; ///; /// \brief The file contain unit tests which test the ROOT::FoundationUtils; ///; /// \author Vassil Vassilev <vvasilev@cern.ch>; ///; /// \date Jun, 2020; ///; /*************************************************************************; * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,core/foundation/test/FoundationUtilsTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/FoundationUtilsTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/FoundationUtilsTests.cxx:61,Testability,test,test,61,"/// \file; ///; /// \brief The file contain unit tests which test the ROOT::FoundationUtils; ///; /// \author Vassil Vassilev <vvasilev@cern.ch>; ///; /// \date Jun, 2020; ///; /*************************************************************************; * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,core/foundation/test/FoundationUtilsTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/FoundationUtilsTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/testLogger.cxx:3,Testability,Test,Test,3,"// Test simple suppression.",MatchSource.CODE_COMMENT,core/foundation/test/testLogger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/testLogger.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/testLogger.cxx:8,Usability,simpl,simple,8,"// Test simple suppression.",MatchSource.CODE_COMMENT,core/foundation/test/testLogger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/testLogger.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/testLogger.cxx:3,Testability,Test,Test,3,"// Test channel specific suppression given global higher verbosity.",MatchSource.CODE_COMMENT,core/foundation/test/testLogger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/testLogger.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/testLogger.cxx:3,Testability,Test,Test,3,"// Test same diag level as verbosity, in channel and global, before and after RAII.",MatchSource.CODE_COMMENT,core/foundation/test/testLogger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/testLogger.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/testLogger.cxx:3,Testability,Test,Test,3,"// Test different diag levels, in channel and global, before and after RAII.",MatchSource.CODE_COMMENT,core/foundation/test/testLogger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/testLogger.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/testLogger.cxx:3,Testability,Test,Test,3,"// Test Info level verbosity.",MatchSource.CODE_COMMENT,core/foundation/test/testLogger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/testLogger.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/testLogger.cxx:3,Testability,Test,Test,3,"// Test verbosity change on other channel not influcing this one.",MatchSource.CODE_COMMENT,core/foundation/test/testLogger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/testLogger.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/testStringUtils.cxx:3,Testability,Test,Test,3,"// Test that ROOT::Split behaves like str.split from Python.",MatchSource.CODE_COMMENT,core/foundation/test/testStringUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/testStringUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/testStringUtils.cxx:3,Testability,Test,Test,3,"// Test that ROOT::Join behaves like str.join from Python.",MatchSource.CODE_COMMENT,core/foundation/test/testStringUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/testStringUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/testTypeTraits.cxx:21,Availability,mask,masking,21,"// std::function; // masking signature int(int) of freeFunc1",MatchSource.CODE_COMMENT,core/foundation/test/testTypeTraits.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/testTypeTraits.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/testTypeTraits.cxx:3,Availability,mask,masking,3,"// masking signature of lambda2",MatchSource.CODE_COMMENT,core/foundation/test/testTypeTraits.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/testTypeTraits.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:230,Usability,Feedback,Feedback,230,"/// \file ROOT/RError.hxx; /// \ingroup Base ROOT7; /// \author Jakob Blomer <jblomer@cern.ch>; /// \date 2019-12-11; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /*************************************************************************; * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:130,Availability,error,error,130,"// clang-format off; /**; \class ROOT::Experimental::RError; \ingroup Base; \brief Captures diagnostics related to a ROOT runtime error; */; // clang-format on",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:47,Availability,avail,available,47,"// TODO(jblomer) use std::source_location once available",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:16,Availability,error,error,16,"/// User-facing error message",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:22,Integrability,message,message,22,"/// User-facing error message",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:24,Availability,error,error,24,"/// The location of the error related to fMessage plus upper frames if the error is forwarded through the call stack",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:75,Availability,error,error,75,"/// The location of the error related to fMessage plus upper frames if the error is forwarded through the call stack",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:54,Integrability,message,message,54,"/// Format a dignostics report, e.g. for an exception message",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:111,Availability,error,error,111,"// clang-format off; /**; \class ROOT::Experimental::RResultBase; \ingroup Base; \brief Common handling of the error case for RResult<T> (T != void) and RResult<void>. RResultBase captures a possible runtime error that might have occured. If the RResultBase leaves the scope unchecked,; it will throw an exception. RResultBase should only be allocated on the stack, which is helped by deleting the; new operator. RResultBase is movable but not copyable to avoid throwing multiple exceptions about the same failure.; */; // clang-format on",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:208,Availability,error,error,208,"// clang-format off; /**; \class ROOT::Experimental::RResultBase; \ingroup Base; \brief Common handling of the error case for RResult<T> (T != void) and RResult<void>. RResultBase captures a possible runtime error that might have occured. If the RResultBase leaves the scope unchecked,; it will throw an exception. RResultBase should only be allocated on the stack, which is helped by deleting the; new operator. RResultBase is movable but not copyable to avoid throwing multiple exceptions about the same failure.; */; // clang-format on",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:506,Availability,failure,failure,506,"// clang-format off; /**; \class ROOT::Experimental::RResultBase; \ingroup Base; \brief Common handling of the error case for RResult<T> (T != void) and RResult<void>. RResultBase captures a possible runtime error that might have occured. If the RResultBase leaves the scope unchecked,; it will throw an exception. RResultBase should only be allocated on the stack, which is helped by deleting the; new operator. RResultBase is movable but not copyable to avoid throwing multiple exceptions about the same failure.; */; // clang-format on",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:342,Energy Efficiency,allocate,allocated,342,"// clang-format off; /**; \class ROOT::Experimental::RResultBase; \ingroup Base; \brief Common handling of the error case for RResult<T> (T != void) and RResult<void>. RResultBase captures a possible runtime error that might have occured. If the RResultBase leaves the scope unchecked,; it will throw an exception. RResultBase should only be allocated on the stack, which is helped by deleting the; new operator. RResultBase is movable but not copyable to avoid throwing multiple exceptions about the same failure.; */; // clang-format on",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:456,Safety,avoid,avoid,456,"// clang-format off; /**; \class ROOT::Experimental::RResultBase; \ingroup Base; \brief Common handling of the error case for RResult<T> (T != void) and RResult<void>. RResultBase captures a possible runtime error that might have occured. If the RResultBase leaves the scope unchecked,; it will throw an exception. RResultBase should only be allocated on the stack, which is helped by deleting the; new operator. RResultBase is movable but not copyable to avoid throwing multiple exceptions about the same failure.; */; // clang-format on",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:404,Availability,error,error,404,"// class RResultBase; // clang-format off; /**; \class ROOT::Experimental::RResult; \ingroup Base; \brief The class is used as a return type for operations that can fail; wraps a value of type T or an RError. The RResult<T> class and their related classes are used for call chains that can throw exceptions,; such as I/O code paths. Throwing of the exception is deferred to allow for `if (result)` style error; checking where it makes sense. If an RResult in error state leaves the scope unchecked, it will throw. A function returning an RResult might look like this:. ~~~ {.cpp}; RResult<int> MyIOFunc(); {; int rv = syscall(...);; if (rv == -1); return R__FAIL(""user-facing error message"");; if (rv == kShortcut); return 42;; return R__FORWARD_RESULT(FuncThatReturnsRResultOfInt());; }; ~~~. Code using MyIOFunc might look like this:. ~~~ {.cpp}; auto result = MyIOOperation();; if (!result) {; // custom error handling or result.Throw(); }; switch (result.Inspect()) {; ...; }; ~~~. Note that RResult<void> can be used for a function without return value, like this. ~~~ {.cpp}; RResult<void> DoSomething(); {; if (failure); return R__FAIL(""user-facing error messge"");; return RResult<void>::Success();; }; ~~~. RResult<T>::Unwrap() can be used as a short hand for; ""give me the wrapped value or, in case of an error, throw"". For instance:. ~~~ {.cpp}; int value = FuncThatReturnsRResultOfInt().Unwrap(); // may throw; ~~~. There is no implict operator that converts RResult<T> to T. This is intentional to make it clear in the calling code; where an exception may be thrown.; */; // clang-format on",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:459,Availability,error,error,459,"// class RResultBase; // clang-format off; /**; \class ROOT::Experimental::RResult; \ingroup Base; \brief The class is used as a return type for operations that can fail; wraps a value of type T or an RError. The RResult<T> class and their related classes are used for call chains that can throw exceptions,; such as I/O code paths. Throwing of the exception is deferred to allow for `if (result)` style error; checking where it makes sense. If an RResult in error state leaves the scope unchecked, it will throw. A function returning an RResult might look like this:. ~~~ {.cpp}; RResult<int> MyIOFunc(); {; int rv = syscall(...);; if (rv == -1); return R__FAIL(""user-facing error message"");; if (rv == kShortcut); return 42;; return R__FORWARD_RESULT(FuncThatReturnsRResultOfInt());; }; ~~~. Code using MyIOFunc might look like this:. ~~~ {.cpp}; auto result = MyIOOperation();; if (!result) {; // custom error handling or result.Throw(); }; switch (result.Inspect()) {; ...; }; ~~~. Note that RResult<void> can be used for a function without return value, like this. ~~~ {.cpp}; RResult<void> DoSomething(); {; if (failure); return R__FAIL(""user-facing error messge"");; return RResult<void>::Success();; }; ~~~. RResult<T>::Unwrap() can be used as a short hand for; ""give me the wrapped value or, in case of an error, throw"". For instance:. ~~~ {.cpp}; int value = FuncThatReturnsRResultOfInt().Unwrap(); // may throw; ~~~. There is no implict operator that converts RResult<T> to T. This is intentional to make it clear in the calling code; where an exception may be thrown.; */; // clang-format on",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:676,Availability,error,error,676,"// class RResultBase; // clang-format off; /**; \class ROOT::Experimental::RResult; \ingroup Base; \brief The class is used as a return type for operations that can fail; wraps a value of type T or an RError. The RResult<T> class and their related classes are used for call chains that can throw exceptions,; such as I/O code paths. Throwing of the exception is deferred to allow for `if (result)` style error; checking where it makes sense. If an RResult in error state leaves the scope unchecked, it will throw. A function returning an RResult might look like this:. ~~~ {.cpp}; RResult<int> MyIOFunc(); {; int rv = syscall(...);; if (rv == -1); return R__FAIL(""user-facing error message"");; if (rv == kShortcut); return 42;; return R__FORWARD_RESULT(FuncThatReturnsRResultOfInt());; }; ~~~. Code using MyIOFunc might look like this:. ~~~ {.cpp}; auto result = MyIOOperation();; if (!result) {; // custom error handling or result.Throw(); }; switch (result.Inspect()) {; ...; }; ~~~. Note that RResult<void> can be used for a function without return value, like this. ~~~ {.cpp}; RResult<void> DoSomething(); {; if (failure); return R__FAIL(""user-facing error messge"");; return RResult<void>::Success();; }; ~~~. RResult<T>::Unwrap() can be used as a short hand for; ""give me the wrapped value or, in case of an error, throw"". For instance:. ~~~ {.cpp}; int value = FuncThatReturnsRResultOfInt().Unwrap(); // may throw; ~~~. There is no implict operator that converts RResult<T> to T. This is intentional to make it clear in the calling code; where an exception may be thrown.; */; // clang-format on",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:907,Availability,error,error,907,"// class RResultBase; // clang-format off; /**; \class ROOT::Experimental::RResult; \ingroup Base; \brief The class is used as a return type for operations that can fail; wraps a value of type T or an RError. The RResult<T> class and their related classes are used for call chains that can throw exceptions,; such as I/O code paths. Throwing of the exception is deferred to allow for `if (result)` style error; checking where it makes sense. If an RResult in error state leaves the scope unchecked, it will throw. A function returning an RResult might look like this:. ~~~ {.cpp}; RResult<int> MyIOFunc(); {; int rv = syscall(...);; if (rv == -1); return R__FAIL(""user-facing error message"");; if (rv == kShortcut); return 42;; return R__FORWARD_RESULT(FuncThatReturnsRResultOfInt());; }; ~~~. Code using MyIOFunc might look like this:. ~~~ {.cpp}; auto result = MyIOOperation();; if (!result) {; // custom error handling or result.Throw(); }; switch (result.Inspect()) {; ...; }; ~~~. Note that RResult<void> can be used for a function without return value, like this. ~~~ {.cpp}; RResult<void> DoSomething(); {; if (failure); return R__FAIL(""user-facing error messge"");; return RResult<void>::Success();; }; ~~~. RResult<T>::Unwrap() can be used as a short hand for; ""give me the wrapped value or, in case of an error, throw"". For instance:. ~~~ {.cpp}; int value = FuncThatReturnsRResultOfInt().Unwrap(); // may throw; ~~~. There is no implict operator that converts RResult<T> to T. This is intentional to make it clear in the calling code; where an exception may be thrown.; */; // clang-format on",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:1118,Availability,failure,failure,1118,"// class RResultBase; // clang-format off; /**; \class ROOT::Experimental::RResult; \ingroup Base; \brief The class is used as a return type for operations that can fail; wraps a value of type T or an RError. The RResult<T> class and their related classes are used for call chains that can throw exceptions,; such as I/O code paths. Throwing of the exception is deferred to allow for `if (result)` style error; checking where it makes sense. If an RResult in error state leaves the scope unchecked, it will throw. A function returning an RResult might look like this:. ~~~ {.cpp}; RResult<int> MyIOFunc(); {; int rv = syscall(...);; if (rv == -1); return R__FAIL(""user-facing error message"");; if (rv == kShortcut); return 42;; return R__FORWARD_RESULT(FuncThatReturnsRResultOfInt());; }; ~~~. Code using MyIOFunc might look like this:. ~~~ {.cpp}; auto result = MyIOOperation();; if (!result) {; // custom error handling or result.Throw(); }; switch (result.Inspect()) {; ...; }; ~~~. Note that RResult<void> can be used for a function without return value, like this. ~~~ {.cpp}; RResult<void> DoSomething(); {; if (failure); return R__FAIL(""user-facing error messge"");; return RResult<void>::Success();; }; ~~~. RResult<T>::Unwrap() can be used as a short hand for; ""give me the wrapped value or, in case of an error, throw"". For instance:. ~~~ {.cpp}; int value = FuncThatReturnsRResultOfInt().Unwrap(); // may throw; ~~~. There is no implict operator that converts RResult<T> to T. This is intentional to make it clear in the calling code; where an exception may be thrown.; */; // clang-format on",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:1156,Availability,error,error,1156,"// class RResultBase; // clang-format off; /**; \class ROOT::Experimental::RResult; \ingroup Base; \brief The class is used as a return type for operations that can fail; wraps a value of type T or an RError. The RResult<T> class and their related classes are used for call chains that can throw exceptions,; such as I/O code paths. Throwing of the exception is deferred to allow for `if (result)` style error; checking where it makes sense. If an RResult in error state leaves the scope unchecked, it will throw. A function returning an RResult might look like this:. ~~~ {.cpp}; RResult<int> MyIOFunc(); {; int rv = syscall(...);; if (rv == -1); return R__FAIL(""user-facing error message"");; if (rv == kShortcut); return 42;; return R__FORWARD_RESULT(FuncThatReturnsRResultOfInt());; }; ~~~. Code using MyIOFunc might look like this:. ~~~ {.cpp}; auto result = MyIOOperation();; if (!result) {; // custom error handling or result.Throw(); }; switch (result.Inspect()) {; ...; }; ~~~. Note that RResult<void> can be used for a function without return value, like this. ~~~ {.cpp}; RResult<void> DoSomething(); {; if (failure); return R__FAIL(""user-facing error messge"");; return RResult<void>::Success();; }; ~~~. RResult<T>::Unwrap() can be used as a short hand for; ""give me the wrapped value or, in case of an error, throw"". For instance:. ~~~ {.cpp}; int value = FuncThatReturnsRResultOfInt().Unwrap(); // may throw; ~~~. There is no implict operator that converts RResult<T> to T. This is intentional to make it clear in the calling code; where an exception may be thrown.; */; // clang-format on",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:1314,Availability,error,error,1314,"// class RResultBase; // clang-format off; /**; \class ROOT::Experimental::RResult; \ingroup Base; \brief The class is used as a return type for operations that can fail; wraps a value of type T or an RError. The RResult<T> class and their related classes are used for call chains that can throw exceptions,; such as I/O code paths. Throwing of the exception is deferred to allow for `if (result)` style error; checking where it makes sense. If an RResult in error state leaves the scope unchecked, it will throw. A function returning an RResult might look like this:. ~~~ {.cpp}; RResult<int> MyIOFunc(); {; int rv = syscall(...);; if (rv == -1); return R__FAIL(""user-facing error message"");; if (rv == kShortcut); return 42;; return R__FORWARD_RESULT(FuncThatReturnsRResultOfInt());; }; ~~~. Code using MyIOFunc might look like this:. ~~~ {.cpp}; auto result = MyIOOperation();; if (!result) {; // custom error handling or result.Throw(); }; switch (result.Inspect()) {; ...; }; ~~~. Note that RResult<void> can be used for a function without return value, like this. ~~~ {.cpp}; RResult<void> DoSomething(); {; if (failure); return R__FAIL(""user-facing error messge"");; return RResult<void>::Success();; }; ~~~. RResult<T>::Unwrap() can be used as a short hand for; ""give me the wrapped value or, in case of an error, throw"". For instance:. ~~~ {.cpp}; int value = FuncThatReturnsRResultOfInt().Unwrap(); // may throw; ~~~. There is no implict operator that converts RResult<T> to T. This is intentional to make it clear in the calling code; where an exception may be thrown.; */; // clang-format on",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:171,Integrability,wrap,wraps,171,"// class RResultBase; // clang-format off; /**; \class ROOT::Experimental::RResult; \ingroup Base; \brief The class is used as a return type for operations that can fail; wraps a value of type T or an RError. The RResult<T> class and their related classes are used for call chains that can throw exceptions,; such as I/O code paths. Throwing of the exception is deferred to allow for `if (result)` style error; checking where it makes sense. If an RResult in error state leaves the scope unchecked, it will throw. A function returning an RResult might look like this:. ~~~ {.cpp}; RResult<int> MyIOFunc(); {; int rv = syscall(...);; if (rv == -1); return R__FAIL(""user-facing error message"");; if (rv == kShortcut); return 42;; return R__FORWARD_RESULT(FuncThatReturnsRResultOfInt());; }; ~~~. Code using MyIOFunc might look like this:. ~~~ {.cpp}; auto result = MyIOOperation();; if (!result) {; // custom error handling or result.Throw(); }; switch (result.Inspect()) {; ...; }; ~~~. Note that RResult<void> can be used for a function without return value, like this. ~~~ {.cpp}; RResult<void> DoSomething(); {; if (failure); return R__FAIL(""user-facing error messge"");; return RResult<void>::Success();; }; ~~~. RResult<T>::Unwrap() can be used as a short hand for; ""give me the wrapped value or, in case of an error, throw"". For instance:. ~~~ {.cpp}; int value = FuncThatReturnsRResultOfInt().Unwrap(); // may throw; ~~~. There is no implict operator that converts RResult<T> to T. This is intentional to make it clear in the calling code; where an exception may be thrown.; */; // clang-format on",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:682,Integrability,message,message,682,"// class RResultBase; // clang-format off; /**; \class ROOT::Experimental::RResult; \ingroup Base; \brief The class is used as a return type for operations that can fail; wraps a value of type T or an RError. The RResult<T> class and their related classes are used for call chains that can throw exceptions,; such as I/O code paths. Throwing of the exception is deferred to allow for `if (result)` style error; checking where it makes sense. If an RResult in error state leaves the scope unchecked, it will throw. A function returning an RResult might look like this:. ~~~ {.cpp}; RResult<int> MyIOFunc(); {; int rv = syscall(...);; if (rv == -1); return R__FAIL(""user-facing error message"");; if (rv == kShortcut); return 42;; return R__FORWARD_RESULT(FuncThatReturnsRResultOfInt());; }; ~~~. Code using MyIOFunc might look like this:. ~~~ {.cpp}; auto result = MyIOOperation();; if (!result) {; // custom error handling or result.Throw(); }; switch (result.Inspect()) {; ...; }; ~~~. Note that RResult<void> can be used for a function without return value, like this. ~~~ {.cpp}; RResult<void> DoSomething(); {; if (failure); return R__FAIL(""user-facing error messge"");; return RResult<void>::Success();; }; ~~~. RResult<T>::Unwrap() can be used as a short hand for; ""give me the wrapped value or, in case of an error, throw"". For instance:. ~~~ {.cpp}; int value = FuncThatReturnsRResultOfInt().Unwrap(); // may throw; ~~~. There is no implict operator that converts RResult<T> to T. This is intentional to make it clear in the calling code; where an exception may be thrown.; */; // clang-format on",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:1282,Integrability,wrap,wrapped,1282,"// class RResultBase; // clang-format off; /**; \class ROOT::Experimental::RResult; \ingroup Base; \brief The class is used as a return type for operations that can fail; wraps a value of type T or an RError. The RResult<T> class and their related classes are used for call chains that can throw exceptions,; such as I/O code paths. Throwing of the exception is deferred to allow for `if (result)` style error; checking where it makes sense. If an RResult in error state leaves the scope unchecked, it will throw. A function returning an RResult might look like this:. ~~~ {.cpp}; RResult<int> MyIOFunc(); {; int rv = syscall(...);; if (rv == -1); return R__FAIL(""user-facing error message"");; if (rv == kShortcut); return 42;; return R__FORWARD_RESULT(FuncThatReturnsRResultOfInt());; }; ~~~. Code using MyIOFunc might look like this:. ~~~ {.cpp}; auto result = MyIOOperation();; if (!result) {; // custom error handling or result.Throw(); }; switch (result.Inspect()) {; ...; }; ~~~. Note that RResult<void> can be used for a function without return value, like this. ~~~ {.cpp}; RResult<void> DoSomething(); {; if (failure); return R__FAIL(""user-facing error messge"");; return RResult<void>::Success();; }; ~~~. RResult<T>::Unwrap() can be used as a short hand for; ""give me the wrapped value or, in case of an error, throw"". For instance:. ~~~ {.cpp}; int value = FuncThatReturnsRResultOfInt().Unwrap(); // may throw; ~~~. There is no implict operator that converts RResult<T> to T. This is intentional to make it clear in the calling code; where an exception may be thrown.; */; // clang-format on",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:1518,Usability,clear,clear,1518,"// class RResultBase; // clang-format off; /**; \class ROOT::Experimental::RResult; \ingroup Base; \brief The class is used as a return type for operations that can fail; wraps a value of type T or an RError. The RResult<T> class and their related classes are used for call chains that can throw exceptions,; such as I/O code paths. Throwing of the exception is deferred to allow for `if (result)` style error; checking where it makes sense. If an RResult in error state leaves the scope unchecked, it will throw. A function returning an RResult might look like this:. ~~~ {.cpp}; RResult<int> MyIOFunc(); {; int rv = syscall(...);; if (rv == -1); return R__FAIL(""user-facing error message"");; if (rv == kShortcut); return 42;; return R__FORWARD_RESULT(FuncThatReturnsRResultOfInt());; }; ~~~. Code using MyIOFunc might look like this:. ~~~ {.cpp}; auto result = MyIOOperation();; if (!result) {; // custom error handling or result.Throw(); }; switch (result.Inspect()) {; ...; }; ~~~. Note that RResult<void> can be used for a function without return value, like this. ~~~ {.cpp}; RResult<void> DoSomething(); {; if (failure); return R__FAIL(""user-facing error messge"");; return RResult<void>::Success();; }; ~~~. RResult<T>::Unwrap() can be used as a short hand for; ""give me the wrapped value or, in case of an error, throw"". For instance:. ~~~ {.cpp}; int value = FuncThatReturnsRResultOfInt().Unwrap(); // may throw; ~~~. There is no implict operator that converts RResult<T> to T. This is intentional to make it clear in the calling code; where an exception may be thrown.; */; // clang-format on",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:44,Availability,error,errors,44,"// Ensure accessor methods throw in case of errors",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:10,Security,access,accessor,10,"// Ensure accessor methods throw in case of errors",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:109,Availability,error,error,109,"// Accessors can be wrapped in a try-catch block, so throwing the; // exception here is akin to checking the error.; //; // Setting fIsChecked to true also avoids a spurious warning in the RResult destructor",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:20,Integrability,wrap,wrapped,20,"// Accessors can be wrapped in a try-catch block, so throwing the; // exception here is akin to checking the error.; //; // Setting fIsChecked to true also avoids a spurious warning in the RResult destructor",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:156,Safety,avoid,avoids,156,"// Accessors can be wrapped in a try-catch block, so throwing the; // exception here is akin to checking the error.; //; // Setting fIsChecked to true also avoids a spurious warning in the RResult destructor",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:3,Security,Access,Accessors,3,"// Accessors can be wrapped in a try-catch block, so throwing the; // exception here is akin to checking the error.; //; // Setting fIsChecked to true also avoids a spurious warning in the RResult destructor",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:83,Availability,error,errors,83,"/// Used by R__FORWARD_RESULT in order to keep track of the stack trace in case of errors",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:103,Availability,error,error,103,"/// If the operation was successful, returns a const reference to the inner type.; /// If there was an error, Inspect() instead throws an exception.",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:299,Availability,error,error,299,"/// If the operation was successful, returns the inner type by value.; ///; /// For move-only types, Unwrap can only be called once, as it yields ownership of; /// the inner value to the caller using std::move, potentially leaving the; /// RResult in an unspecified state.; ///; /// If there was an error, Unwrap() instead throws an exception.",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:83,Availability,error,errors,83,"/// Used by R__FORWARD_RESULT in order to keep track of the stack trace in case of errors",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:59,Availability,error,errors,59,"/// Short-hand method to throw an exception in the case of errors. Does nothing for; /// successful RResults.",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:45,Availability,error,error,45,"/// Short-hand to return an RResult<T> in an error state; the RError is implicitly converted into RResult<T>",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:45,Availability,error,error,45,"/// Short-hand to return an RResult<T> in an error state (i.e. after checking)",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/src/RError.cxx:225,Usability,Feedback,Feedback,225,"/// \file RError.cxx; /// \ingroup Base ROOT7; /// \author Jakob Blomer <jblomer@cern.ch>; /// \date 2019-12-11; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /*************************************************************************; * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,core/foundation/v7/src/RError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/src/RError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/src/RError.cxx:3,Safety,Avoid,Avoid,3,"// Avoid frequent reallocations as we move up the call stack",MatchSource.CODE_COMMENT,core/foundation/v7/src/RError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/src/RError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/test/base_exception.cxx:24,Integrability,wrap,wrapped,24,"/// Used to verify that wrapped return values are not unnecessarily copied",MatchSource.CODE_COMMENT,core/foundation/v7/test/base_exception.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/test/base_exception.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/test/base_exception.cxx:75,Availability,error,error,75,"// Throwing ExceptionX will destruct rv along the way. Since rv carries an error state, it would normally; // throw an exception itself. In this test, we verify that rv surpresses throwing an exception if another; // exception is currently active.",MatchSource.CODE_COMMENT,core/foundation/v7/test/base_exception.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/test/base_exception.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/test/base_exception.cxx:145,Testability,test,test,145,"// Throwing ExceptionX will destruct rv along the way. Since rv carries an error state, it would normally; // throw an exception itself. In this test, we verify that rv surpresses throwing an exception if another; // exception is currently active.",MatchSource.CODE_COMMENT,core/foundation/v7/test/base_exception.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/test/base_exception.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/test/base_exception.cxx:127,Availability,failure,failure,127,"// This will only catch ExceptionX but not RException. In case rv mistakenly throws an exception,; // we would notice the test failure by a crash of the unit test.",MatchSource.CODE_COMMENT,core/foundation/v7/test/base_exception.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/test/base_exception.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/test/base_exception.cxx:122,Testability,test,test,122,"// This will only catch ExceptionX but not RException. In case rv mistakenly throws an exception,; // we would notice the test failure by a crash of the unit test.",MatchSource.CODE_COMMENT,core/foundation/v7/test/base_exception.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/test/base_exception.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/test/base_exception.cxx:158,Testability,test,test,158,"// This will only catch ExceptionX but not RException. In case rv mistakenly throws an exception,; // we would notice the test failure by a crash of the unit test.",MatchSource.CODE_COMMENT,core/foundation/v7/test/base_exception.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/test/base_exception.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/test/base_exception.cxx:12,Availability,failure,failure,12,"// throw on failure",MatchSource.CODE_COMMENT,core/foundation/v7/test/base_exception.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/test/base_exception.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/test/base_exception.cxx:39,Availability,error,error,39,"// In production code, we would expect error handling code other than throw",MatchSource.CODE_COMMENT,core/foundation/v7/test/base_exception.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/test/base_exception.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/test/base_exception.cxx:133,Security,access,access,133,"// Using Inspect to make a copy won't compile; // auto copy_inner = res.Inspect();; // This will compile, but we only have read-only access",MatchSource.CODE_COMMENT,core/foundation/v7/test/base_exception.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/test/base_exception.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h:15,Availability,mask,mask,15,"///< Structure mask type",MatchSource.CODE_COMMENT,core/gui/inc/GuiTypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h:9,Availability,mask,mask,9,"///< bit mask specifying which fields are valid",MatchSource.CODE_COMMENT,core/gui/inc/GuiTypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h:37,Deployability,install,installed,37,"///< boolean, is color map currently installed",MatchSource.CODE_COMMENT,core/gui/inc/GuiTypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h:14,Availability,mask,mask,14,"///< my event mask",MatchSource.CODE_COMMENT,core/gui/inc/GuiTypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h:15,Availability,mask,masks,15,"// Input event masks, used to set SetWindowAttributes_t::fEventMask; // and to be passed to TVirtualX::SelectInput()",MatchSource.CODE_COMMENT,core/gui/inc/GuiTypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h:19,Availability,mask,mask,19,"///< key or button mask",MatchSource.CODE_COMMENT,core/gui/inc/GuiTypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h:25,Security,expose,exposed,25,"///< width and height of exposed area",MatchSource.CODE_COMMENT,core/gui/inc/GuiTypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h:42,Security,expose,exposes,42,"///< if non-zero, at least this many more exposes",MatchSource.CODE_COMMENT,core/gui/inc/GuiTypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h:35,Integrability,message,message,35,"///< 5 longs can be used by client message events; ///< NOTE: only [0], [1] and [2] may be used.; ///< [1] and [2] may contain >32 bit quantities; ///< (i.e. pointers on 64 bit machines)",MatchSource.CODE_COMMENT,core/gui/inc/GuiTypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h:7,Availability,mask,masks,7,"// Key masks, used as modifiers to GrabButton and GrabKey and; // in Event_t::fState in various key-, mouse-, and button-related events",MatchSource.CODE_COMMENT,core/gui/inc/GuiTypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h:5,Testability,log,logical,5,"///< logical operation",MatchSource.CODE_COMMENT,core/gui/inc/GuiTypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h:11,Availability,mask,mask,11,"///< plane mask",MatchSource.CODE_COMMENT,core/gui/inc/GuiTypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h:9,Availability,mask,mask,9,"///< bit mask specifying which fields are valid",MatchSource.CODE_COMMENT,core/gui/inc/GuiTypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h:5,Energy Efficiency,green,green,5,"///< green component (0..65535)",MatchSource.CODE_COMMENT,core/gui/inc/GuiTypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h:5,Availability,mask,mask,5,"///< mask telling which color components are valid",MatchSource.CODE_COMMENT,core/gui/inc/GuiTypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h:5,Availability,mask,mask,5,"///< mask specifying which attributes are defined",MatchSource.CODE_COMMENT,core/gui/inc/GuiTypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h:23,Availability,mask,masks,23,"// PictureAttributes_t masks bits",MatchSource.CODE_COMMENT,core/gui/inc/GuiTypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TApplicationImp.h:174,Integrability,protocol,protocol,174,"//////////////////////////////////////////////////////////////////////////; // //; // TApplicationImp //; // //; // ABC describing GUI independent application implementation protocol. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/gui/inc/TApplicationImp.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TApplicationImp.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TApplicationImp.h:29,Integrability,protocol,protocol,29,"//ABC describing application protocol",MatchSource.CODE_COMMENT,core/gui/inc/TApplicationImp.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TApplicationImp.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TBrowserImp.h:166,Integrability,protocol,protocol,166,"//////////////////////////////////////////////////////////////////////////; // //; // TBrowserImp //; // //; // ABC describing GUI independent browser implementation protocol. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/gui/inc/TBrowserImp.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TBrowserImp.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TBrowserImp.h:40,Integrability,protocol,protocol,40,"//ABC describing browser implementation protocol",MatchSource.CODE_COMMENT,core/gui/inc/TBrowserImp.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TBrowserImp.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TCanvasImp.h:29,Integrability,protocol,protocol,29,"//ABC describing main window protocol",MatchSource.CODE_COMMENT,core/gui/inc/TCanvasImp.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TCanvasImp.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TClassMenuItem.h:7,Deployability,toggle,toggle,7,"//flag toggle method",MatchSource.CODE_COMMENT,core/gui/inc/TClassMenuItem.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TClassMenuItem.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TContextMenu.h:299,Availability,down,downs,299,"////////////////////////////////////////////////////////////////////////////////; // //; // TContextMenu //; // //; // This class provides an interface to context sensitive popup menus. //; // These menus pop up when the user hits the right mouse button, and //; // are destroyed when the menu pops downs. //; // //; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/gui/inc/TContextMenu.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TContextMenu.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TContextMenu.h:142,Integrability,interface,interface,142,"////////////////////////////////////////////////////////////////////////////////; // //; // TContextMenu //; // //; // This class provides an interface to context sensitive popup menus. //; // These menus pop up when the user hits the right mouse button, and //; // are destroyed when the menu pops downs. //; // //; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/gui/inc/TContextMenu.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TContextMenu.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TContextMenuImp.h:145,Integrability,interface,interface,145,"////////////////////////////////////////////////////////////////////////////////; // //; // TContextMenuImp //; // //; // This class provides an interface to GUI independent //; // context sensitive popup menus. //; // //; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/gui/inc/TContextMenuImp.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TContextMenuImp.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TObjectSpy.h:444,Availability,error,error,444,"//////////////////////////////////////////////////////////////////////////; // //; // TObjectSpy, TObjectRefSpy //; // //; // Monitors objects for deletion and reflects the deletion by reverting //; // the internal pointer to zero. When this pointer is zero we know the //; // object has been deleted. This avoids the unsafe TestBit(kNotDeleted) //; // hack. The spied object must have the kMustCleanup bit set otherwise //; // you will get an error. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/gui/inc/TObjectSpy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TObjectSpy.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TObjectSpy.h:126,Energy Efficiency,Monitor,Monitors,126,"//////////////////////////////////////////////////////////////////////////; // //; // TObjectSpy, TObjectRefSpy //; // //; // Monitors objects for deletion and reflects the deletion by reverting //; // the internal pointer to zero. When this pointer is zero we know the //; // object has been deleted. This avoids the unsafe TestBit(kNotDeleted) //; // hack. The spied object must have the kMustCleanup bit set otherwise //; // you will get an error. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/gui/inc/TObjectSpy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TObjectSpy.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TObjectSpy.h:307,Safety,avoid,avoids,307,"//////////////////////////////////////////////////////////////////////////; // //; // TObjectSpy, TObjectRefSpy //; // //; // Monitors objects for deletion and reflects the deletion by reverting //; // the internal pointer to zero. When this pointer is zero we know the //; // object has been deleted. This avoids the unsafe TestBit(kNotDeleted) //; // hack. The spied object must have the kMustCleanup bit set otherwise //; // you will get an error. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/gui/inc/TObjectSpy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TObjectSpy.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TObjectSpy.h:318,Safety,unsafe,unsafe,318,"//////////////////////////////////////////////////////////////////////////; // //; // TObjectSpy, TObjectRefSpy //; // //; // Monitors objects for deletion and reflects the deletion by reverting //; // the internal pointer to zero. When this pointer is zero we know the //; // object has been deleted. This avoids the unsafe TestBit(kNotDeleted) //; // hack. The spied object must have the kMustCleanup bit set otherwise //; // you will get an error. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/gui/inc/TObjectSpy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TObjectSpy.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TObjectSpy.h:325,Testability,Test,TestBit,325,"//////////////////////////////////////////////////////////////////////////; // //; // TObjectSpy, TObjectRefSpy //; // //; // Monitors objects for deletion and reflects the deletion by reverting //; // the internal pointer to zero. When this pointer is zero we know the //; // object has been deleted. This avoids the unsafe TestBit(kNotDeleted) //; // hack. The spied object must have the kMustCleanup bit set otherwise //; // you will get an error. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/gui/inc/TObjectSpy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TObjectSpy.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TToggle.h:591,Deployability,toggle,toggle,591,"//////////////////////////////////////////////////////////////////////////; // //; // TToggle //; // //; // This class defines toggling facility for both - object's method or //; // variables. //; // Assume that user provides an object with a two-state field, and //; // methods to Get/Set value of this field. This object enables to switch//; // values via this method when the only thing you know about the field //; // is the name of the method (or method itself) which sets the field. //; // This facility is required in context popup menu, when the only //; // information about how to toggle a field is a name of method which //; // sets it. //; // This Object may be also used for toggling an integer variable, //; // which may be important while building universal objects... //; // When user provides a ""set-method"" of name SetXXX this object tries //; // automaticaly to find a matching ""get-method"" by looking for a method //; // with name GetXXX or IsXXX for given object. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/gui/inc/TToggle.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TToggle.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TToggle.h:182,Modifiability,variab,variables,182,"//////////////////////////////////////////////////////////////////////////; // //; // TToggle //; // //; // This class defines toggling facility for both - object's method or //; // variables. //; // Assume that user provides an object with a two-state field, and //; // methods to Get/Set value of this field. This object enables to switch//; // values via this method when the only thing you know about the field //; // is the name of the method (or method itself) which sets the field. //; // This facility is required in context popup menu, when the only //; // information about how to toggle a field is a name of method which //; // sets it. //; // This Object may be also used for toggling an integer variable, //; // which may be important while building universal objects... //; // When user provides a ""set-method"" of name SetXXX this object tries //; // automaticaly to find a matching ""get-method"" by looking for a method //; // with name GetXXX or IsXXX for given object. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/gui/inc/TToggle.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TToggle.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TToggle.h:708,Modifiability,variab,variable,708,"//////////////////////////////////////////////////////////////////////////; // //; // TToggle //; // //; // This class defines toggling facility for both - object's method or //; // variables. //; // Assume that user provides an object with a two-state field, and //; // methods to Get/Set value of this field. This object enables to switch//; // values via this method when the only thing you know about the field //; // is the name of the method (or method itself) which sets the field. //; // This facility is required in context popup menu, when the only //; // information about how to toggle a field is a name of method which //; // sets it. //; // This Object may be also used for toggling an integer variable, //; // which may be important while building universal objects... //; // When user provides a ""set-method"" of name SetXXX this object tries //; // automaticaly to find a matching ""get-method"" by looking for a method //; // with name GetXXX or IsXXX for given object. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/gui/inc/TToggle.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TToggle.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TToggle.h:73,Deployability,Toggle,Toggle,73,"//True if either SetToggledObject or SetToggledVariable called - enables Toggle() method.",MatchSource.CODE_COMMENT,core/gui/inc/TToggle.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TToggle.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TToggle.h:18,Deployability,Toggle,Toggle,18,"//The object this Toggle belongs to",MatchSource.CODE_COMMENT,core/gui/inc/TToggle.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TToggle.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TToggle.h:51,Deployability,Toggle,Toggled,51,"//Alternatively: pointer to an integer value to be Toggled instead of TObjectl",MatchSource.CODE_COMMENT,core/gui/inc/TToggle.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TToggle.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TToggleGroup.h:24,Deployability,toggle,toggle,24,"// Group of contex-menu toggle objects",MatchSource.CODE_COMMENT,core/gui/inc/TToggleGroup.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TToggleGroup.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/InitGui.cxx:186,Integrability,interface,interface,186,"// @(#)root/base:$Id$; // Author: Fons Rademakers 15/01/98; ////////////////////////////////////////////////////////////////////////////////; /// Initialize the GUI and windowing system interface.; /// This version initializes the ROOT native GUI system.",MatchSource.CODE_COMMENT,core/gui/src/InitGui.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/InitGui.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/InitGui.cxx:41,Performance,Load,Loading,41,"// Dummy for backward compatability.; // Loading of libraries and initialization of graphics objects is; // done in TApplication::LoadGraphicsLibs().",MatchSource.CODE_COMMENT,core/gui/src/InitGui.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/InitGui.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/InitGui.cxx:130,Performance,Load,LoadGraphicsLibs,130,"// Dummy for backward compatability.; // Loading of libraries and initialization of graphics objects is; // done in TApplication::LoadGraphicsLibs().",MatchSource.CODE_COMMENT,core/gui/src/InitGui.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/InitGui.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TApplicationImp.cxx:519,Integrability,protocol,protocol,519,"// @(#)root/base:$Id$; // Author: Fons Rademakers 22/12/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TApplicationImp; \ingroup Base. ABC describing GUI independent application implementation protocol.; */",MatchSource.CODE_COMMENT,core/gui/src/TApplicationImp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TApplicationImp.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TBrowser.cxx:53,Integrability,wrap,wrap,53,/** \class TBrowserObject; This class is designed to wrap a Foreign object in order to inject it into the Browse sub-system.; */,MatchSource.CODE_COMMENT,core/gui/src/TBrowser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TBrowser.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TBrowser.cxx:87,Integrability,inject,inject,87,/** \class TBrowserObject; This class is designed to wrap a Foreign object in order to inject it into the Browse sub-system.; */,MatchSource.CODE_COMMENT,core/gui/src/TBrowser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TBrowser.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TBrowser.cxx:87,Security,inject,inject,87,/** \class TBrowserObject; This class is designed to wrap a Foreign object in order to inject it into the Browse sub-system.; */,MatchSource.CODE_COMMENT,core/gui/src/TBrowser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TBrowser.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TBrowser.cxx:151,Performance,load,loaded,151,"////////////////////////////////////////////////////////////////////////////////; // Make sure the application environment exists and the GUI libs are loaded",MatchSource.CODE_COMMENT,core/gui/src/TBrowser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TBrowser.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TBrowser.cxx:44,Performance,load,loaded,44,"// make sure that the Gpad and GUI libs are loaded",MatchSource.CODE_COMMENT,core/gui/src/TBrowser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TBrowser.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TBrowser.cxx:232,Integrability,depend,depending,232,"////////////////////////////////////////////////////////////////////////////////; /// Create a new browser with a name, title. Width and height are by; /// default set to 640x400 and (optionally) adjusted by the screen factor; /// (depending on Rint.Canvas.UseScreenFactor to be true or false, default; /// is true).",MatchSource.CODE_COMMENT,core/gui/src/TBrowser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TBrowser.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TBrowserImp.cxx:511,Integrability,protocol,protocol,511,"// @(#)root/base:$Id$; // Author: Fons Rademakers 15/11/95; /*************************************************************************; * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TBrowserImp; \ingroup Base. ABC describing GUI independent browser implementation protocol.; */",MatchSource.CODE_COMMENT,core/gui/src/TBrowserImp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TBrowserImp.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TContextMenu.cxx:623,Availability,down,downs,623,"// @(#)root/base:$Id$; // Author: Nenad Buncic 08/02/96; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TContextMenu; \ingroup Base. This class provides an interface to context sensitive popup menus.; These menus pop up when the user hits the right mouse button, and; are destroyed when the menu pops downs. Context Menus are automatically generated by ROOT using the; following convention: if the string `// *MENU*` is found in the; comment field of a member function. This function will be added to; the list of items in the menu. The picture below shows a canvas with a pop-up menu. \image html base_hsummenu.png. The picture below shows a canvas with a pop-up menu and a dialog box. \image html base_hsumdialog.png; */; // silence warning about some cast operations",MatchSource.CODE_COMMENT,core/gui/src/TContextMenu.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TContextMenu.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TContextMenu.cxx:478,Integrability,interface,interface,478,"// @(#)root/base:$Id$; // Author: Nenad Buncic 08/02/96; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TContextMenu; \ingroup Base. This class provides an interface to context sensitive popup menus.; These menus pop up when the user hits the right mouse button, and; are destroyed when the menu pops downs. Context Menus are automatically generated by ROOT using the; following convention: if the string `// *MENU*` is found in the; comment field of a member function. This function will be added to; the list of items in the menu. The picture below shows a canvas with a pop-up menu. \image html base_hsummenu.png. The picture below shows a canvas with a pop-up menu and a dialog box. \image html base_hsumdialog.png; */; // silence warning about some cast operations",MatchSource.CODE_COMMENT,core/gui/src/TContextMenu.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TContextMenu.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TContextMenu.cxx:99,Performance,perform,performed,99,"////////////////////////////////////////////////////////////////////////////////; /// Action to be performed when this menu item is selected.; /// If the selected method requires arguments we popup an; /// automatically generated dialog, otherwise the method is; /// directly executed.",MatchSource.CODE_COMMENT,core/gui/src/TContextMenu.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TContextMenu.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TContextMenu.cxx:99,Performance,perform,performed,99,"////////////////////////////////////////////////////////////////////////////////; /// Action to be performed when this menu item is selected.; /// If the selected method requires arguments we popup an; /// automatically generated dialog, otherwise the method is; /// directly executed.",MatchSource.CODE_COMMENT,core/gui/src/TContextMenu.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TContextMenu.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TContextMenu.cxx:119,Deployability,toggle,toggle,119,"////////////////////////////////////////////////////////////////////////////////; /// Action to be performed when this toggle menu item is selected.",MatchSource.CODE_COMMENT,core/gui/src/TContextMenu.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TContextMenu.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TContextMenu.cxx:99,Performance,perform,performed,99,"////////////////////////////////////////////////////////////////////////////////; /// Action to be performed when this toggle menu item is selected.",MatchSource.CODE_COMMENT,core/gui/src/TContextMenu.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TContextMenu.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TContextMenuImp.cxx:481,Integrability,interface,interface,481,"// @(#)root/base:$Id$; // Author: Nenad Buncic 08/02/96; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TContextMenuImp; \ingroup Base. This class provides an interface to GUI independent context sensitive popup menus.; */",MatchSource.CODE_COMMENT,core/gui/src/TContextMenuImp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TContextMenuImp.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TGuiFactory.cxx:499,Integrability,Depend,Depending,499,"// @(#)root/base:$Id$; // Author: Fons Rademakers 15/11/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGuiFactory; \ingroup Base. This ABC is a factory for GUI components. Depending on which; factory is active one gets either ROOT native (X11 based with Win95; look and feel), Win32 or Mac components. In case there is no platform dependent implementation on can run in; batch mode directly using an instance of this base class.; */",MatchSource.CODE_COMMENT,core/gui/src/TGuiFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TGuiFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TGuiFactory.cxx:658,Integrability,depend,dependent,658,"// @(#)root/base:$Id$; // Author: Fons Rademakers 15/11/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGuiFactory; \ingroup Base. This ABC is a factory for GUI components. Depending on which; factory is active one gets either ROOT native (X11 based with Win95; look and feel), Win32 or Mac components. In case there is no platform dependent implementation on can run in; batch mode directly using an instance of this base class.; */",MatchSource.CODE_COMMENT,core/gui/src/TGuiFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TGuiFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TObjectSpy.cxx:354,Availability,error,error,354,/** \class TObjectRefSpy; \class TObjectSpy; \ingroup Base. Monitors objects for deletion and reflects the deletion by reverting; the internal pointer to zero. When this pointer is zero we know the; object has been deleted. This avoids the unsafe TestBit(kNotDeleted); hack. The spied object must have the kMustCleanup bit set otherwise; you will get an error.; */,MatchSource.CODE_COMMENT,core/gui/src/TObjectSpy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TObjectSpy.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TObjectSpy.cxx:60,Energy Efficiency,Monitor,Monitors,60,/** \class TObjectRefSpy; \class TObjectSpy; \ingroup Base. Monitors objects for deletion and reflects the deletion by reverting; the internal pointer to zero. When this pointer is zero we know the; object has been deleted. This avoids the unsafe TestBit(kNotDeleted); hack. The spied object must have the kMustCleanup bit set otherwise; you will get an error.; */,MatchSource.CODE_COMMENT,core/gui/src/TObjectSpy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TObjectSpy.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TObjectSpy.cxx:229,Safety,avoid,avoids,229,/** \class TObjectRefSpy; \class TObjectSpy; \ingroup Base. Monitors objects for deletion and reflects the deletion by reverting; the internal pointer to zero. When this pointer is zero we know the; object has been deleted. This avoids the unsafe TestBit(kNotDeleted); hack. The spied object must have the kMustCleanup bit set otherwise; you will get an error.; */,MatchSource.CODE_COMMENT,core/gui/src/TObjectSpy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TObjectSpy.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TObjectSpy.cxx:240,Safety,unsafe,unsafe,240,/** \class TObjectRefSpy; \class TObjectSpy; \ingroup Base. Monitors objects for deletion and reflects the deletion by reverting; the internal pointer to zero. When this pointer is zero we know the; object has been deleted. This avoids the unsafe TestBit(kNotDeleted); hack. The spied object must have the kMustCleanup bit set otherwise; you will get an error.; */,MatchSource.CODE_COMMENT,core/gui/src/TObjectSpy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TObjectSpy.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TObjectSpy.cxx:247,Testability,Test,TestBit,247,/** \class TObjectRefSpy; \class TObjectSpy; \ingroup Base. Monitors objects for deletion and reflects the deletion by reverting; the internal pointer to zero. When this pointer is zero we know the; object has been deleted. This avoids the unsafe TestBit(kNotDeleted); hack. The spied object must have the kMustCleanup bit set otherwise; you will get an error.; */,MatchSource.CODE_COMMENT,core/gui/src/TObjectSpy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TObjectSpy.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx:880,Deployability,toggle,toggle,880,"// @(#)root/meta:$Id$; // Author: Piotr Golonka 30/07/97; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TToggle. This class defines toggling facility for both - object's method or; variables.; Assume that user provides an object with a two-state field , and; methods to Get/Set value of this field. This object enables to switch; values via this method when the only thing you know about the field; is the name of the method (or method itself) which sets the field.; This facility is required in context Pop-Up menu, when the only; information about how to toggle a field is a name of methhod which; sets it.; This class may be also used for toggling an integer variable,; which may be important while building universal objects...; When user provides a ""set-method"" of name SetXXX this object tries; automaticaly find a matching ""get-method"" by lookin for a method; with name GetXXX, IsXXX or HasXXX for given object.; */",MatchSource.CODE_COMMENT,core/gui/src/TToggle.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx:504,Modifiability,variab,variables,504,"// @(#)root/meta:$Id$; // Author: Piotr Golonka 30/07/97; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TToggle. This class defines toggling facility for both - object's method or; variables.; Assume that user provides an object with a two-state field , and; methods to Get/Set value of this field. This object enables to switch; values via this method when the only thing you know about the field; is the name of the method (or method itself) which sets the field.; This facility is required in context Pop-Up menu, when the only; information about how to toggle a field is a name of methhod which; sets it.; This class may be also used for toggling an integer variable,; which may be important while building universal objects...; When user provides a ""set-method"" of name SetXXX this object tries; automaticaly find a matching ""get-method"" by lookin for a method; with name GetXXX, IsXXX or HasXXX for given object.; */",MatchSource.CODE_COMMENT,core/gui/src/TToggle.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx:985,Modifiability,variab,variable,985,"// @(#)root/meta:$Id$; // Author: Piotr Golonka 30/07/97; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TToggle. This class defines toggling facility for both - object's method or; variables.; Assume that user provides an object with a two-state field , and; methods to Get/Set value of this field. This object enables to switch; values via this method when the only thing you know about the field; is the name of the method (or method itself) which sets the field.; This facility is required in context Pop-Up menu, when the only; information about how to toggle a field is a name of methhod which; sets it.; This class may be also used for toggling an integer variable,; which may be important while building universal objects...; When user provides a ""set-method"" of name SetXXX this object tries; automaticaly find a matching ""get-method"" by lookin for a method; with name GetXXX, IsXXX or HasXXX for given object.; */",MatchSource.CODE_COMMENT,core/gui/src/TToggle.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx:188,Deployability,Toggle,Toggle,188,"////////////////////////////////////////////////////////////////////////////////; /// Initializes object for use with a variable - you pass it via reference; /// so it will be modified by Toggle.",MatchSource.CODE_COMMENT,core/gui/src/TToggle.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx:120,Modifiability,variab,variable,120,"////////////////////////////////////////////////////////////////////////////////; /// Initializes object for use with a variable - you pass it via reference; /// so it will be modified by Toggle.",MatchSource.CODE_COMMENT,core/gui/src/TToggle.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx:107,Deployability,Toggle,Toggle,107,"////////////////////////////////////////////////////////////////////////////////; /// Returns the state of Toggle according to its current value and; /// fOnValue, returns true if they match.",MatchSource.CODE_COMMENT,core/gui/src/TToggle.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx:104,Deployability,toggle,toggle,104,"////////////////////////////////////////////////////////////////////////////////; /// Sets the value of toggle to fOnValue or fOffValue according to passed; /// argument.",MatchSource.CODE_COMMENT,core/gui/src/TToggle.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx:104,Deployability,toggle,toggle,104,"////////////////////////////////////////////////////////////////////////////////; /// Sets the value of toggle and modifies its state according to whether; /// the value is equal to fOnValue.",MatchSource.CODE_COMMENT,core/gui/src/TToggle.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx:86,Deployability,Toggle,Toggles,86,"////////////////////////////////////////////////////////////////////////////////; /// Toggles the Values and State of this object and connected data!",MatchSource.CODE_COMMENT,core/gui/src/TToggle.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx:104,Deployability,toggle,toggle,104,"////////////////////////////////////////////////////////////////////////////////; /// Initializes it to toggle an object's datamember using this object's; /// method.",MatchSource.CODE_COMMENT,core/gui/src/TToggle.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggleGroup.cxx:94,Deployability,toggle,togglegroup,94,"////////////////////////////////////////////////////////////////////////////////; /// Deletes togglegroup but does not disposes toggled objects!",MatchSource.CODE_COMMENT,core/gui/src/TToggleGroup.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggleGroup.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggleGroup.cxx:128,Deployability,toggle,toggled,128,"////////////////////////////////////////////////////////////////////////////////; /// Deletes togglegroup but does not disposes toggled objects!",MatchSource.CODE_COMMENT,core/gui/src/TToggleGroup.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggleGroup.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggleGroup.cxx:96,Deployability,toggle,toggle,96,"////////////////////////////////////////////////////////////////////////////////; /// Add a new toggle.",MatchSource.CODE_COMMENT,core/gui/src/TToggleGroup.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggleGroup.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggleGroup.cxx:96,Deployability,toggle,toggle,96,"////////////////////////////////////////////////////////////////////////////////; /// Add a new toggle at a specific position.",MatchSource.CODE_COMMENT,core/gui/src/TToggleGroup.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggleGroup.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggleGroup.cxx:95,Deployability,toggle,toggle,95,"////////////////////////////////////////////////////////////////////////////////; /// Select a toggle.",MatchSource.CODE_COMMENT,core/gui/src/TToggleGroup.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggleGroup.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggleGroup.cxx:97,Deployability,toggle,toggle,97,"////////////////////////////////////////////////////////////////////////////////; /// Selector a toggle.",MatchSource.CODE_COMMENT,core/gui/src/TToggleGroup.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggleGroup.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggleGroup.cxx:12,Deployability,toggle,toggled,12,"// Untoggle toggled , and toggle this one if it's present on a list!",MatchSource.CODE_COMMENT,core/gui/src/TToggleGroup.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggleGroup.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggleGroup.cxx:26,Deployability,toggle,toggle,26,"// Untoggle toggled , and toggle this one if it's present on a list!",MatchSource.CODE_COMMENT,core/gui/src/TToggleGroup.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggleGroup.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggleGroup.cxx:114,Usability,clear,clears,114,"////////////////////////////////////////////////////////////////////////////////; /// Disposes of all objects and clears array",MatchSource.CODE_COMMENT,core/gui/src/TToggleGroup.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggleGroup.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RSlotStack.hxx:314,Availability,avail,available,314,"/// A thread-safe stack of N indexes (0 to size - 1).; /// RSlotStack can be used to safely assign a ""processing slot"" number to; /// each thread in multi-thread applications.; /// In release builds, pop and push operations are unchecked, potentially; /// resulting in undefined behavior if more slot numbers than available are; /// requested.; /// An important design assumption is that a slot will almost always be available; /// when a thread asks for it, and if it is not available it will be very soon,; /// therefore a spinlock is used for synchronization.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/RSlotStack.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RSlotStack.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RSlotStack.hxx:417,Availability,avail,available,417,"/// A thread-safe stack of N indexes (0 to size - 1).; /// RSlotStack can be used to safely assign a ""processing slot"" number to; /// each thread in multi-thread applications.; /// In release builds, pop and push operations are unchecked, potentially; /// resulting in undefined behavior if more slot numbers than available are; /// requested.; /// An important design assumption is that a slot will almost always be available; /// when a thread asks for it, and if it is not available it will be very soon,; /// therefore a spinlock is used for synchronization.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/RSlotStack.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RSlotStack.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RSlotStack.hxx:476,Availability,avail,available,476,"/// A thread-safe stack of N indexes (0 to size - 1).; /// RSlotStack can be used to safely assign a ""processing slot"" number to; /// each thread in multi-thread applications.; /// In release builds, pop and push operations are unchecked, potentially; /// resulting in undefined behavior if more slot numbers than available are; /// requested.; /// An important design assumption is that a slot will almost always be available; /// when a thread asks for it, and if it is not available it will be very soon,; /// therefore a spinlock is used for synchronization.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/RSlotStack.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RSlotStack.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RSlotStack.hxx:184,Deployability,release,release,184,"/// A thread-safe stack of N indexes (0 to size - 1).; /// RSlotStack can be used to safely assign a ""processing slot"" number to; /// each thread in multi-thread applications.; /// In release builds, pop and push operations are unchecked, potentially; /// resulting in undefined behavior if more slot numbers than available are; /// requested.; /// An important design assumption is that a slot will almost always be available; /// when a thread asks for it, and if it is not available it will be very soon,; /// therefore a spinlock is used for synchronization.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/RSlotStack.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RSlotStack.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RSlotStack.hxx:546,Integrability,synchroniz,synchronization,546,"/// A thread-safe stack of N indexes (0 to size - 1).; /// RSlotStack can be used to safely assign a ""processing slot"" number to; /// each thread in multi-thread applications.; /// In release builds, pop and push operations are unchecked, potentially; /// resulting in undefined behavior if more slot numbers than available are; /// requested.; /// An important design assumption is that a slot will almost always be available; /// when a thread asks for it, and if it is not available it will be very soon,; /// therefore a spinlock is used for synchronization.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/RSlotStack.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RSlotStack.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RSlotStack.hxx:149,Performance,multi-thread,multi-thread,149,"/// A thread-safe stack of N indexes (0 to size - 1).; /// RSlotStack can be used to safely assign a ""processing slot"" number to; /// each thread in multi-thread applications.; /// In release builds, pop and push operations are unchecked, potentially; /// resulting in undefined behavior if more slot numbers than available are; /// requested.; /// An important design assumption is that a slot will almost always be available; /// when a thread asks for it, and if it is not available it will be very soon,; /// therefore a spinlock is used for synchronization.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/RSlotStack.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RSlotStack.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RSlotStack.hxx:13,Safety,safe,safe,13,"/// A thread-safe stack of N indexes (0 to size - 1).; /// RSlotStack can be used to safely assign a ""processing slot"" number to; /// each thread in multi-thread applications.; /// In release builds, pop and push operations are unchecked, potentially; /// resulting in undefined behavior if more slot numbers than available are; /// requested.; /// An important design assumption is that a slot will almost always be available; /// when a thread asks for it, and if it is not available it will be very soon,; /// therefore a spinlock is used for synchronization.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/RSlotStack.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RSlotStack.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RSlotStack.hxx:85,Safety,safe,safely,85,"/// A thread-safe stack of N indexes (0 to size - 1).; /// RSlotStack can be used to safely assign a ""processing slot"" number to; /// each thread in multi-thread applications.; /// In release builds, pop and push operations are unchecked, potentially; /// resulting in undefined behavior if more slot numbers than available are; /// requested.; /// An important design assumption is that a slot will almost always be available; /// when a thread asks for it, and if it is not available it will be very soon,; /// therefore a spinlock is used for synchronization.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/RSlotStack.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RSlotStack.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RSlotStack.hxx:116,Availability,avail,available,116,"/// A RAII object to pop and push slot numbers from a RSlotStack object.; /// After construction the slot number is available as the data member fSlot.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/RSlotStack.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RSlotStack.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RTaskArena.hxx:789,Deployability,install,installed,789,"// @(#)root/thread:$Id$; // // Author: Xavier Valls Pla 08/05/20; //; /*************************************************************************; * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // RTaskArena //; // //; // This file implements the method to initialize and retrieve ROOT's //; // global task arena, together with a method to check for active //; // CPU bandwith control, and a class to wrap the tbb task arena with //; // the purpose of keeping tbb off the installed headers //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/RTaskArena.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RTaskArena.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RTaskArena.hxx:718,Integrability,wrap,wrap,718,"// @(#)root/thread:$Id$; // // Author: Xavier Valls Pla 08/05/20; //; /*************************************************************************; * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // RTaskArena //; // //; // This file implements the method to initialize and retrieve ROOT's //; // global task arena, together with a method to check for active //; // CPU bandwith control, and a class to wrap the tbb task arena with //; // the purpose of keeping tbb off the installed headers //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/RTaskArena.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RTaskArena.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RTaskArena.hxx:14,Availability,error,error,14,"// No need to error out for dictionaries.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/RTaskArena.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RTaskArena.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RTaskArena.hxx:98,Availability,avail,available,98,"////////////////////////////////////////////////////////////////////////////////; /// Returns the available number of logical cores.; ///; /// - Checks if there is CFS bandwidth control in place (linux, via cgroups,; /// assuming standard paths); /// - Otherwise, returns the number of logical cores provided by; /// std::thread::hardware_concurrency(); ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/RTaskArena.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RTaskArena.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RTaskArena.hxx:118,Testability,log,logical,118,"////////////////////////////////////////////////////////////////////////////////; /// Returns the available number of logical cores.; ///; /// - Checks if there is CFS bandwidth control in place (linux, via cgroups,; /// assuming standard paths); /// - Otherwise, returns the number of logical cores provided by; /// std::thread::hardware_concurrency(); ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/RTaskArena.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RTaskArena.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RTaskArena.hxx:286,Testability,log,logical,286,"////////////////////////////////////////////////////////////////////////////////; /// Returns the available number of logical cores.; ///; /// - Checks if there is CFS bandwidth control in place (linux, via cgroups,; /// assuming standard paths); /// - Otherwise, returns the number of logical cores provided by; /// std::thread::hardware_concurrency(); ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/RTaskArena.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RTaskArena.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RTaskArena.hxx:86,Integrability,Wrap,Wrapper,86,"////////////////////////////////////////////////////////////////////////////////; /// Wrapper for tbb::task_arena.; ///; /// Necessary in order to keep tbb away from ROOT headers.; /// This class is thought out to be used as a singleton.; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/RTaskArena.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RTaskArena.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx:223,Energy Efficiency,Reduce,Reduce,223,"// MapReduce; // the late return types also check at compile-time whether redfunc is compatible with func,; // other than checking that func is compatible with the type of arguments.; // a static_assert check in TExecutor::Reduce is used to check that redfunc is compatible with the type returned by func",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx:3,Energy Efficiency,Reduce,Reduce,3,"// Reduce; //",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx:21,Availability,avail,available,21,"// When they are not available, we use a placeholder type instead of TThreadExecutor or TProcessExecutor.; // The corresponding data members will not be used.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx:169,Energy Efficiency,Reduce,Reduce,169,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function `nTimes` (Map) and accumulate the results into a single value (Reduce).; /// Benefits from partial reduction into `nChunks` intermediate results if the execution policy is multithreaded.; /// Otherwise, <b>it ignores the nChunks argument</b> and performs a normal MapReduce operation.; ///; /// \param func Function to be executed. Must take an element of the sequence passed as second argument as a parameter.; /// \param nTimes Number of times function should be called.; /// \param redfunc Reduction function to combine the results of the calls to `func` into partial results, and these; /// into a final result. Must return the same type as `func` and should be callable with `const std::vector<T>` where T; /// is the output of `func`.; /// \param nChunks Number of chunks to split the input data for processing.; /// \return A value result of ""reducing"" the vector returned by the Map operation into a single object.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx:352,Performance,perform,performs,352,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function `nTimes` (Map) and accumulate the results into a single value (Reduce).; /// Benefits from partial reduction into `nChunks` intermediate results if the execution policy is multithreaded.; /// Otherwise, <b>it ignores the nChunks argument</b> and performs a normal MapReduce operation.; ///; /// \param func Function to be executed. Must take an element of the sequence passed as second argument as a parameter.; /// \param nTimes Number of times function should be called.; /// \param redfunc Reduction function to combine the results of the calls to `func` into partial results, and these; /// into a final result. Must return the same type as `func` and should be callable with `const std::vector<T>` where T; /// is the output of `func`.; /// \param nChunks Number of chunks to split the input data for processing.; /// \return A value result of ""reducing"" the vector returned by the Map operation into a single object.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx:22,Energy Efficiency,reduce,reduce,22,"// check we can apply reduce to objs",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx:187,Energy Efficiency,Reduce,Reduce,187,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function over a sequence of indexes (Map) and accumulate the results into a single value (Reduce).; /// Benefits from partial reduction into `nChunks` intermediate results if the execution policy is multithreaded.; /// Otherwise, <b>it ignores the nChunks argument</b> and performs a normal MapReduce operation.; ///; /// \param func Function to be executed. Must take an element of the sequence passed assecond argument as a parameter.; /// \param args Sequence of indexes to execute `func` on.; /// \param redfunc Reduction function to combine the results of the calls to `func` into partial results, and these; /// into a final result. Must return the same type as `func` and should be callable with `std::vector<T>` where T is the; /// output of `func`.; /// \param nChunks Number of chunks to split the input data for processing.; /// \return A value result of ""reducing"" the vector returned by the Map operation into a single object.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx:370,Performance,perform,performs,370,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function over a sequence of indexes (Map) and accumulate the results into a single value (Reduce).; /// Benefits from partial reduction into `nChunks` intermediate results if the execution policy is multithreaded.; /// Otherwise, <b>it ignores the nChunks argument</b> and performs a normal MapReduce operation.; ///; /// \param func Function to be executed. Must take an element of the sequence passed assecond argument as a parameter.; /// \param args Sequence of indexes to execute `func` on.; /// \param redfunc Reduction function to combine the results of the calls to `func` into partial results, and these; /// into a final result. Must return the same type as `func` and should be callable with `std::vector<T>` where T is the; /// output of `func`.; /// \param nChunks Number of chunks to split the input data for processing.; /// \return A value result of ""reducing"" the vector returned by the Map operation into a single object.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx:206,Energy Efficiency,Reduce,Reduce,206,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function over the elements of an initializer_list (Map) and accumulate the results into a single; /// value (Reduce). Benefits from partial reduction into `nChunks` intermediate results if the execution policy is; /// multithreaded. Otherwise, <b>it ignores the nChunks argument</b> and performs a normal MapReduce operation.; ///; /// \param func Function to be executed. Must take an element of the sequence passed as second argument as a parameter.; /// \param args initializer_list for a vector to apply `func` on.; /// \param redfunc Reduction function to combine the results of the calls to `func` into partial results, and these; /// into a final result. Must return the same type as `func` and should be callable with `const std::vector<T>` where T; /// is the output of `func`.; /// \param nChunks Number of chunks to split the input data for processing.; /// \return A value result of ""reducing"" the vector returned by the Map operation into a single object.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx:384,Performance,perform,performs,384,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function over the elements of an initializer_list (Map) and accumulate the results into a single; /// value (Reduce). Benefits from partial reduction into `nChunks` intermediate results if the execution policy is; /// multithreaded. Otherwise, <b>it ignores the nChunks argument</b> and performs a normal MapReduce operation.; ///; /// \param func Function to be executed. Must take an element of the sequence passed as second argument as a parameter.; /// \param args initializer_list for a vector to apply `func` on.; /// \param redfunc Reduction function to combine the results of the calls to `func` into partial results, and these; /// into a final result. Must return the same type as `func` and should be callable with `const std::vector<T>` where T; /// is the output of `func`.; /// \param nChunks Number of chunks to split the input data for processing.; /// \return A value result of ""reducing"" the vector returned by the Map operation into a single object.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx:195,Energy Efficiency,Reduce,Reduce,195,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function over the elements of a vector (Map) and accumulate the results into a single value; /// (Reduce). Benefits from partial reduction into `nChunks` intermediate results if the execution policy is; /// multithreaded. Otherwise, <b>it ignores the nChunks argument</b> and performs a normal MapReduce operation.; ///; /// \param func Function to be executed. Must take an element of the sequence passed assecond argument as a parameter.; /// \param args Vector of elements passed as an argument to `func`.; /// \param redfunc Reduction function to combine the results of the calls to `func` into partial results, and these; /// into a final result. Must return the same type as `func` and should be callable with `const std::vector<T>` where T; /// is the output of `func`.; /// \param nChunks Number of chunks to split the input data for processing.; /// \return A value result of ""reducing"" the vector returned by the Map operation into a single object.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx:373,Performance,perform,performs,373,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function over the elements of a vector (Map) and accumulate the results into a single value; /// (Reduce). Benefits from partial reduction into `nChunks` intermediate results if the execution policy is; /// multithreaded. Otherwise, <b>it ignores the nChunks argument</b> and performs a normal MapReduce operation.; ///; /// \param func Function to be executed. Must take an element of the sequence passed assecond argument as a parameter.; /// \param args Vector of elements passed as an argument to `func`.; /// \param redfunc Reduction function to combine the results of the calls to `func` into partial results, and these; /// into a final result. Must return the same type as `func` and should be callable with `const std::vector<T>` where T; /// is the output of `func`.; /// \param nChunks Number of chunks to split the input data for processing.; /// \return A value result of ""reducing"" the vector returned by the Map operation into a single object.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx:206,Energy Efficiency,Reduce,Reduce,206,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function over the elements of an immutable vector (Map) and accumulate the results into a single; /// value (Reduce). Benefits from partial reduction into `nChunks` intermediate results if the execution policy is; /// multithreaded. Otherwise, <b>it ignores the nChunks argument</b> and performs a normal MapReduce operation.; ///; /// \param func Function to be executed. Must take an element of the sequence passed assecond argument as a parameter.; /// \param args Immutable vector, whose elements are passed as an argument to `func`.; /// \param redfunc Reduction function to combine the results of the calls to `func` into partial results, and these; /// into a final result. Must return the same type as `func` and should be callable with `const std::vector<T>` where T; /// is the output of `func`.; /// \param nChunks Number of chunks to split the input data for processing.; /// \return A value result of ""reducing"" the vector returned by the Map operation into a single object.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx:384,Performance,perform,performs,384,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function over the elements of an immutable vector (Map) and accumulate the results into a single; /// value (Reduce). Benefits from partial reduction into `nChunks` intermediate results if the execution policy is; /// multithreaded. Otherwise, <b>it ignores the nChunks argument</b> and performs a normal MapReduce operation.; ///; /// \param func Function to be executed. Must take an element of the sequence passed assecond argument as a parameter.; /// \param args Immutable vector, whose elements are passed as an argument to `func`.; /// \param redfunc Reduction function to combine the results of the calls to `func` into partial results, and these; /// into a final result. Must return the same type as `func` and should be callable with `const std::vector<T>` where T; /// is the output of `func`.; /// \param nChunks Number of chunks to split the input data for processing.; /// \return A value result of ""reducing"" the vector returned by the Map operation into a single object.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TTaskGroup.hxx:157,Performance,concurren,concurrent,157,/**; \class ROOT::Experimental::TTaskGroup; \ingroup Parallelism; \brief A class to manage the asynchronous execution of work items. A TTaskGroup represents concurrent execution of a group of tasks. Tasks may be dynamically added to the group as it; is executing.; */,MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TTaskGroup.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TTaskGroup.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:14,Availability,error,error,14,"// No need to error out for dictionaries.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TThreadExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:375,Energy Efficiency,Reduce,Reduce,375,"// MapReduce; //; // We need to reimplement the MapReduce interfaces to allow for parallel reduction, defined in; // this class but not in the base class.; //; // the late return types also check at compile-time whether redfunc is compatible with func,; // other than checking that func is compatible with the type of arguments.; // a static_assert check in TThreadExecutor::Reduce is used to check that redfunc is compatible with the type returned by func",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TThreadExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:58,Integrability,interface,interfaces,58,"// MapReduce; //; // We need to reimplement the MapReduce interfaces to allow for parallel reduction, defined in; // this class but not in the base class.; //; // the late return types also check at compile-time whether redfunc is compatible with func,; // other than checking that func is compatible with the type of arguments.; // a static_assert check in TThreadExecutor::Reduce is used to check that redfunc is compatible with the type returned by func",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TThreadExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:86,Availability,avail,available,86,"// Extension of the Map interfaces with chunking, specific to this class and; // only available from a MapReduce call.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TThreadExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:24,Integrability,interface,interfaces,24,"// Extension of the Map interfaces with chunking, specific to this class and; // only available from a MapReduce call.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TThreadExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:18,Integrability,interface,interface,18,"// Functions that interface with the parallel library used as a backend",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TThreadExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:34,Integrability,wrap,wrapper,34,"/// Pointer to the TBB task arena wrapper",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TThreadExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:3,Safety,Avoid,Avoid,3,"// Avoid empty chunks",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TThreadExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:28,Safety,Avoid,Avoid,28,"// ceiling the division; // Avoid empty chunks",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TThreadExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:27,Safety,Avoid,Avoid,27,"//ceiling the division; // Avoid empty chunks",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TThreadExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:27,Safety,Avoid,Avoid,27,"//ceiling the division; // Avoid empty chunks",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TThreadExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:181,Energy Efficiency,Reduce,Reduce,181,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function `nTimes` in parallel (Map) and accumulate the results into a single value (Reduce).; /// \copydetails ROOT::Internal::TExecutor::MapReduce(F func,unsigned nTimes,R redfunc)",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TThreadExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:202,Energy Efficiency,Reduce,Reduce,202,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function in parallel over the elements of a vector (Map) and accumulate the results into a single value (Reduce).; /// Benefits from partial reduction into `nChunks` intermediate results.; ///; /// \copydetails ROOT::Internal::TExecutor::MapReduce(F func,unsigned nTimes,R redfunc,unsigned nChunks)",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TThreadExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:202,Energy Efficiency,Reduce,Reduce,202,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function in parallel over the elements of a vector (Map) and accumulate the results into a single value (Reduce).; /// Benefits from partial reduction into `nChunks` intermediate results.; ///; /// \copydetails ROOT::Internal::TExecutor::MapReduce(F func,ROOT::TSeq<INTEGER> args,R redfunc,unsigned nChunks)",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TThreadExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:213,Energy Efficiency,Reduce,Reduce,213,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function in parallel over the elements of an initializer_list (Map) and accumulate the results into a single value (Reduce).; /// Benefits from partial reduction into `nChunks` intermediate results.; ///; /// \copydetails ROOT::Internal::TExecutor::MapReduce(F func,std::initializer_list<T> args,R redfunc,unsigned nChunks)",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TThreadExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:202,Energy Efficiency,Reduce,Reduce,202,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function over the elements of a vector in parallel (Map) and accumulate the results into a single value (Reduce).; /// \copydetails ROOT::Internal::TExecutor::MapReduce(F func,std::vector<T> &args,R redfunc)",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TThreadExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:213,Energy Efficiency,Reduce,Reduce,213,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function over the elements of an immutable vector in parallel (Map) and accumulate the results into a single value (Reduce).; /// \copydetails ROOT::Internal::TExecutor::MapReduce(F func,const std::vector<T> &args,R redfunc)",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TThreadExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:202,Energy Efficiency,Reduce,Reduce,202,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function in parallel over the elements of a vector (Map) and accumulate the results into a single value (Reduce).; /// Benefits from partial reduction into `nChunks` intermediate results.; ///; /// \copydetails ROOT::Internal::TExecutor::MapReduce(F func,std::vector<T> &args,R redfunc,unsigned nChunks)",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TThreadExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:213,Energy Efficiency,Reduce,Reduce,213,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function in parallel over the elements of an immutable vector (Map) and accumulate the results into a single value (Reduce).; /// Benefits from partial reduction into `nChunks` intermediate results.; ///; /// \copydetails ROOT::Internal::TExecutor::MapReduce(F func,const std::vector<T> &args,R redfunc,unsigned nChunks)",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TThreadExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:116,Energy Efficiency,Reduce,Reduce,116,"//////////////////////////////////////////////////////////////////////////; /// \copydoc ROOT::Internal::TExecutor::Reduce(const std::vector<T> &objs,R redfunc)",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TThreadExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:22,Energy Efficiency,reduce,reduce,22,"// check we can apply reduce to objs",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TThreadExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:88,Energy Efficiency,Reduce,Reduce,88,"//////////////////////////////////////////////////////////////////////////; /// \brief ""Reduce"" an std::vector into a single object in parallel by passing a; /// binary function as the second argument defining the reduction operation.; ///; /// \param objs A vector of elements to combine.; /// \param redfunc Binary reduction function to combine the elements of the vector `objs`.; /// \return A value result of combining the vector elements into a single object of the same type.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TThreadExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:22,Energy Efficiency,reduce,reduce,22,"// check we can apply reduce to objs",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TThreadExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:88,Energy Efficiency,Reduce,Reduce,88,"//////////////////////////////////////////////////////////////////////////; /// \brief ""Reduce"", sequentially, an std::vector into a single object; ///; /// \param objs A vector of elements to combine.; /// \param redfunc Reduction function to combine the elements of the vector `objs`.; /// \return A value result of combining the vector elements into a single object of the same type.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TThreadExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx:491,Energy Efficiency,schedul,scheduler,491,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::Internal::RTaskArenaWrapper; /// \ingroup Parallelism; /// \brief Wrapper over tbb::task_arena; ///; /// This class is a wrapper over tbb::task_arena, in order to keep; /// TBB away from ROOT's headers. We keep a single global instance to be; /// used by any parallel ROOT class with TBB as a backend.; ///; /// TThreadExecutor, IMT and any class relying on TBB will get a pointer; /// to the scheduler through `ROOT::Internal::GetGlobalTaskArena()`, which; /// will return areference to the only pointer to the TBB scheduler that; /// will be active in any ROOT Process.; ///; /// #### Examples:; /// ~~~{.cpp}; /// root[] auto gTA = ROOT::Internal::GetGlobalTaskArena(nWorkers) //get a shared_ptr to the global arena and initialize; /// //it with nWorkers. Enable thread safety in ROOT; /// root[] gTA->TaskArenaSize() // Get the current size of the arena (number of worker threads); /// root[] gTA->Access() //std::unique_ptr to the internal tbb::task_arena for interacting directly with it (needed to; /// //call operations such as execute); /// root[] gTA->Access().max_concurrency() // call to tbb::task_arena::max_concurrency(); /// ~~~; ///; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/imt/src/RTaskArena.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx:614,Energy Efficiency,schedul,scheduler,614,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::Internal::RTaskArenaWrapper; /// \ingroup Parallelism; /// \brief Wrapper over tbb::task_arena; ///; /// This class is a wrapper over tbb::task_arena, in order to keep; /// TBB away from ROOT's headers. We keep a single global instance to be; /// used by any parallel ROOT class with TBB as a backend.; ///; /// TThreadExecutor, IMT and any class relying on TBB will get a pointer; /// to the scheduler through `ROOT::Internal::GetGlobalTaskArena()`, which; /// will return areference to the only pointer to the TBB scheduler that; /// will be active in any ROOT Process.; ///; /// #### Examples:; /// ~~~{.cpp}; /// root[] auto gTA = ROOT::Internal::GetGlobalTaskArena(nWorkers) //get a shared_ptr to the global arena and initialize; /// //it with nWorkers. Enable thread safety in ROOT; /// root[] gTA->TaskArenaSize() // Get the current size of the arena (number of worker threads); /// root[] gTA->Access() //std::unique_ptr to the internal tbb::task_arena for interacting directly with it (needed to; /// //call operations such as execute); /// root[] gTA->Access().max_concurrency() // call to tbb::task_arena::max_concurrency(); /// ~~~; ///; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/imt/src/RTaskArena.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx:164,Integrability,Wrap,Wrapper,164,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::Internal::RTaskArenaWrapper; /// \ingroup Parallelism; /// \brief Wrapper over tbb::task_arena; ///; /// This class is a wrapper over tbb::task_arena, in order to keep; /// TBB away from ROOT's headers. We keep a single global instance to be; /// used by any parallel ROOT class with TBB as a backend.; ///; /// TThreadExecutor, IMT and any class relying on TBB will get a pointer; /// to the scheduler through `ROOT::Internal::GetGlobalTaskArena()`, which; /// will return areference to the only pointer to the TBB scheduler that; /// will be active in any ROOT Process.; ///; /// #### Examples:; /// ~~~{.cpp}; /// root[] auto gTA = ROOT::Internal::GetGlobalTaskArena(nWorkers) //get a shared_ptr to the global arena and initialize; /// //it with nWorkers. Enable thread safety in ROOT; /// root[] gTA->TaskArenaSize() // Get the current size of the arena (number of worker threads); /// root[] gTA->Access() //std::unique_ptr to the internal tbb::task_arena for interacting directly with it (needed to; /// //call operations such as execute); /// root[] gTA->Access().max_concurrency() // call to tbb::task_arena::max_concurrency(); /// ~~~; ///; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/imt/src/RTaskArena.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx:219,Integrability,wrap,wrapper,219,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::Internal::RTaskArenaWrapper; /// \ingroup Parallelism; /// \brief Wrapper over tbb::task_arena; ///; /// This class is a wrapper over tbb::task_arena, in order to keep; /// TBB away from ROOT's headers. We keep a single global instance to be; /// used by any parallel ROOT class with TBB as a backend.; ///; /// TThreadExecutor, IMT and any class relying on TBB will get a pointer; /// to the scheduler through `ROOT::Internal::GetGlobalTaskArena()`, which; /// will return areference to the only pointer to the TBB scheduler that; /// will be active in any ROOT Process.; ///; /// #### Examples:; /// ~~~{.cpp}; /// root[] auto gTA = ROOT::Internal::GetGlobalTaskArena(nWorkers) //get a shared_ptr to the global arena and initialize; /// //it with nWorkers. Enable thread safety in ROOT; /// root[] gTA->TaskArenaSize() // Get the current size of the arena (number of worker threads); /// root[] gTA->Access() //std::unique_ptr to the internal tbb::task_arena for interacting directly with it (needed to; /// //call operations such as execute); /// root[] gTA->Access().max_concurrency() // call to tbb::task_arena::max_concurrency(); /// ~~~; ///; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/imt/src/RTaskArena.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx:871,Safety,safe,safety,871,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::Internal::RTaskArenaWrapper; /// \ingroup Parallelism; /// \brief Wrapper over tbb::task_arena; ///; /// This class is a wrapper over tbb::task_arena, in order to keep; /// TBB away from ROOT's headers. We keep a single global instance to be; /// used by any parallel ROOT class with TBB as a backend.; ///; /// TThreadExecutor, IMT and any class relying on TBB will get a pointer; /// to the scheduler through `ROOT::Internal::GetGlobalTaskArena()`, which; /// will return areference to the only pointer to the TBB scheduler that; /// will be active in any ROOT Process.; ///; /// #### Examples:; /// ~~~{.cpp}; /// root[] auto gTA = ROOT::Internal::GetGlobalTaskArena(nWorkers) //get a shared_ptr to the global arena and initialize; /// //it with nWorkers. Enable thread safety in ROOT; /// root[] gTA->TaskArenaSize() // Get the current size of the arena (number of worker threads); /// root[] gTA->Access() //std::unique_ptr to the internal tbb::task_arena for interacting directly with it (needed to; /// //call operations such as execute); /// root[] gTA->Access().max_concurrency() // call to tbb::task_arena::max_concurrency(); /// ~~~; ///; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/imt/src/RTaskArena.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx:1000,Security,Access,Access,1000,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::Internal::RTaskArenaWrapper; /// \ingroup Parallelism; /// \brief Wrapper over tbb::task_arena; ///; /// This class is a wrapper over tbb::task_arena, in order to keep; /// TBB away from ROOT's headers. We keep a single global instance to be; /// used by any parallel ROOT class with TBB as a backend.; ///; /// TThreadExecutor, IMT and any class relying on TBB will get a pointer; /// to the scheduler through `ROOT::Internal::GetGlobalTaskArena()`, which; /// will return areference to the only pointer to the TBB scheduler that; /// will be active in any ROOT Process.; ///; /// #### Examples:; /// ~~~{.cpp}; /// root[] auto gTA = ROOT::Internal::GetGlobalTaskArena(nWorkers) //get a shared_ptr to the global arena and initialize; /// //it with nWorkers. Enable thread safety in ROOT; /// root[] gTA->TaskArenaSize() // Get the current size of the arena (number of worker threads); /// root[] gTA->Access() //std::unique_ptr to the internal tbb::task_arena for interacting directly with it (needed to; /// //call operations such as execute); /// root[] gTA->Access().max_concurrency() // call to tbb::task_arena::max_concurrency(); /// ~~~; ///; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/imt/src/RTaskArena.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx:1160,Security,Access,Access,1160,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::Internal::RTaskArenaWrapper; /// \ingroup Parallelism; /// \brief Wrapper over tbb::task_arena; ///; /// This class is a wrapper over tbb::task_arena, in order to keep; /// TBB away from ROOT's headers. We keep a single global instance to be; /// used by any parallel ROOT class with TBB as a backend.; ///; /// TThreadExecutor, IMT and any class relying on TBB will get a pointer; /// to the scheduler through `ROOT::Internal::GetGlobalTaskArena()`, which; /// will return areference to the only pointer to the TBB scheduler that; /// will be active in any ROOT Process.; ///; /// #### Examples:; /// ~~~{.cpp}; /// root[] auto gTA = ROOT::Internal::GetGlobalTaskArena(nWorkers) //get a shared_ptr to the global arena and initialize; /// //it with nWorkers. Enable thread safety in ROOT; /// root[] gTA->TaskArenaSize() // Get the current size of the arena (number of worker threads); /// root[] gTA->Access() //std::unique_ptr to the internal tbb::task_arena for interacting directly with it (needed to; /// //call operations such as execute); /// root[] gTA->Access().max_concurrency() // call to tbb::task_arena::max_concurrency(); /// ~~~; ///; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/imt/src/RTaskArena.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx:21,Modifiability,variab,variable,21,"// Honor environment variable `ROOT_MAX_THREADS` if set.; // Also honor cgroup quotas if set: see https://github.com/oneapi-src/oneTBB/issues/190",MatchSource.CODE_COMMENT,core/imt/src/RTaskArena.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx:7,Safety,detect,detect,7,/*auto-detect base*/,MatchSource.CODE_COMMENT,core/imt/src/RTaskArena.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx:223,Safety,avoid,avoids,223,"////////////////////////////////////////////////////////////////////////////////; /// Initializes the tbb::task_arena within RTaskArenaWrapper.; ///; /// * Can't be reinitialized; /// * Checks for CPU bandwidth control and avoids oversubscribing; /// * If no BC in place and maxConcurrency<1, defaults to the default tbb number of threads,; /// which is CPU affinity aware; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/imt/src/RTaskArena.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx:109,Integrability,wrap,wrapped,109,"////////////////////////////////////////////////////////////////////////////////; /// Provides access to the wrapped tbb::task_arena.; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/imt/src/RTaskArena.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx:95,Security,access,access,95,"////////////////////////////////////////////////////////////////////////////////; /// Provides access to the wrapped tbb::task_arena.; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/imt/src/RTaskArena.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TExecutor.cxx:2469,Availability,avail,available,2469,"nts (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.\n; /// \endparblock; ///; /// **Note:** in cases where the function to be executed takes more than; /// zero/one argument but all are fixed except zero/one, the function can be wrapped; /// in a lambda or via std::bind to give it the right signature.\n; ///; /// #### Return value:; /// An std::vector. The elements in the container; /// will be the objects returned by func.; ///; /// ### ROOT::Internal::TExecutor::MapReduce; /// This set of methods behaves exactly like Map, but takes an additional; /// function as a third argument. This function is applied to the set of; /// objects returned by the corresponding Map execution to ""squash"" them; /// into a single object. The signature of the reduce function should be `(const std::vector<T>) -> T`; ///; /// An integer can be passed as the fourth argument indicating the number of chunks we want to divide our work in.; /// <b>(Note: Please be aware that chunking is only available when the policy is kMultiThread, ignoring this argument in; /// other cases)</b> This may be useful to avoid the overhead introduced when running really short tasks. In this case,; /// the reduction function should be independent of the size of the vector returned by Map due to optimization of the; /// number of chunks.; ///; /// #### Examples:; /// ~~~{.cpp}; /// root[] ROOT::Internal::TExecutor pool; auto ten = pool.MapReduce([]() { return 1; }, 10, [](const std::vector<int>; /// &v) { return std::accumulate(v.begin(), v.end(), 0); }); /// root[] ROOT::Internal::TExecutor; /// pool(ROOT::EExecutionPolicy::kMultiProcess); auto hist = pool.MapReduce(CreateAndFillHists, 10,; /// PoolUtils::ReduceObjects);; /// ~~~; ///; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/imt/src/TExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TExecutor.cxx:2239,Energy Efficiency,reduce,reduce,2239,"nts (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.\n; /// \endparblock; ///; /// **Note:** in cases where the function to be executed takes more than; /// zero/one argument but all are fixed except zero/one, the function can be wrapped; /// in a lambda or via std::bind to give it the right signature.\n; ///; /// #### Return value:; /// An std::vector. The elements in the container; /// will be the objects returned by func.; ///; /// ### ROOT::Internal::TExecutor::MapReduce; /// This set of methods behaves exactly like Map, but takes an additional; /// function as a third argument. This function is applied to the set of; /// objects returned by the corresponding Map execution to ""squash"" them; /// into a single object. The signature of the reduce function should be `(const std::vector<T>) -> T`; ///; /// An integer can be passed as the fourth argument indicating the number of chunks we want to divide our work in.; /// <b>(Note: Please be aware that chunking is only available when the policy is kMultiThread, ignoring this argument in; /// other cases)</b> This may be useful to avoid the overhead introduced when running really short tasks. In this case,; /// the reduction function should be independent of the size of the vector returned by Map due to optimization of the; /// number of chunks.; ///; /// #### Examples:; /// ~~~{.cpp}; /// root[] ROOT::Internal::TExecutor pool; auto ten = pool.MapReduce([]() { return 1; }, 10, [](const std::vector<int>; /// &v) { return std::accumulate(v.begin(), v.end(), 0); }); /// root[] ROOT::Internal::TExecutor; /// pool(ROOT::EExecutionPolicy::kMultiProcess); auto hist = pool.MapReduce(CreateAndFillHists, 10,; /// PoolUtils::ReduceObjects);; /// ~~~; ///; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/imt/src/TExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TExecutor.cxx:3177,Energy Efficiency,Reduce,ReduceObjects,3177,"nts (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.\n; /// \endparblock; ///; /// **Note:** in cases where the function to be executed takes more than; /// zero/one argument but all are fixed except zero/one, the function can be wrapped; /// in a lambda or via std::bind to give it the right signature.\n; ///; /// #### Return value:; /// An std::vector. The elements in the container; /// will be the objects returned by func.; ///; /// ### ROOT::Internal::TExecutor::MapReduce; /// This set of methods behaves exactly like Map, but takes an additional; /// function as a third argument. This function is applied to the set of; /// objects returned by the corresponding Map execution to ""squash"" them; /// into a single object. The signature of the reduce function should be `(const std::vector<T>) -> T`; ///; /// An integer can be passed as the fourth argument indicating the number of chunks we want to divide our work in.; /// <b>(Note: Please be aware that chunking is only available when the policy is kMultiThread, ignoring this argument in; /// other cases)</b> This may be useful to avoid the overhead introduced when running really short tasks. In this case,; /// the reduction function should be independent of the size of the vector returned by Map due to optimization of the; /// number of chunks.; ///; /// #### Examples:; /// ~~~{.cpp}; /// root[] ROOT::Internal::TExecutor pool; auto ten = pool.MapReduce([]() { return 1; }, 10, [](const std::vector<int>; /// &v) { return std::accumulate(v.begin(), v.end(), 0); }); /// root[] ROOT::Internal::TExecutor; /// pool(ROOT::EExecutionPolicy::kMultiProcess); auto hist = pool.MapReduce(CreateAndFillHists, 10,; /// PoolUtils::ReduceObjects);; /// ~~~; ///; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/imt/src/TExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TExecutor.cxx:156,Integrability,interface,interface,156,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::Internal::TExecutor; /// \brief This class implements the interface to execute the same task; /// multiple times, sequentially or in parallel depending on the execution policy passed; /// as a first parameter on construction, and possibly with different arguments every time.; ///; /// ###ROOT::Internal::TExecutor::Map; /// The two possible usages of the Map method are:\n; /// * `Map(F func, unsigned nTimes)`: func is executed nTimes with no arguments; /// * `Map(F func, T& args)`: func is executed on each element of the collection of arguments args; ///; /// For either signature, func is executed as many times as needed by a pool of; /// n workers; where n tipically defaults to the number of cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included. ROOT::::Internal::TExecutor never; /// deletes what it returns, it simply forgets it.\n; ///; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.\n; /// \endparblock; ///; /// **Note:** in cases where the function to be executed takes more than; /// zero/one argument but all are fixed except zero/one, the function can be wrapped; /// in a lambda or via std::bind to give it the right signature.\n; ///; /// #### Return value:; /// An std::vector. The elements in the container; /// will be the objects returned by func.; ///; /// ### ROOT::Internal::TExecutor::MapReduce; /// This set of methods behaves ",MatchSource.CODE_COMMENT,core/imt/src/TExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TExecutor.cxx:240,Integrability,depend,depending,240,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::Internal::TExecutor; /// \brief This class implements the interface to execute the same task; /// multiple times, sequentially or in parallel depending on the execution policy passed; /// as a first parameter on construction, and possibly with different arguments every time.; ///; /// ###ROOT::Internal::TExecutor::Map; /// The two possible usages of the Map method are:\n; /// * `Map(F func, unsigned nTimes)`: func is executed nTimes with no arguments; /// * `Map(F func, T& args)`: func is executed on each element of the collection of arguments args; ///; /// For either signature, func is executed as many times as needed by a pool of; /// n workers; where n tipically defaults to the number of cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included. ROOT::::Internal::TExecutor never; /// deletes what it returns, it simply forgets it.\n; ///; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.\n; /// \endparblock; ///; /// **Note:** in cases where the function to be executed takes more than; /// zero/one argument but all are fixed except zero/one, the function can be wrapped; /// in a lambda or via std::bind to give it the right signature.\n; ///; /// #### Return value:; /// An std::vector. The elements in the container; /// will be the objects returned by func.; ///; /// ### ROOT::Internal::TExecutor::MapReduce; /// This set of methods behaves ",MatchSource.CODE_COMMENT,core/imt/src/TExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TExecutor.cxx:1718,Integrability,wrap,wrapped,1718,"r either signature, func is executed as many times as needed by a pool of; /// n workers; where n tipically defaults to the number of cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included. ROOT::::Internal::TExecutor never; /// deletes what it returns, it simply forgets it.\n; ///; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.\n; /// \endparblock; ///; /// **Note:** in cases where the function to be executed takes more than; /// zero/one argument but all are fixed except zero/one, the function can be wrapped; /// in a lambda or via std::bind to give it the right signature.\n; ///; /// #### Return value:; /// An std::vector. The elements in the container; /// will be the objects returned by func.; ///; /// ### ROOT::Internal::TExecutor::MapReduce; /// This set of methods behaves exactly like Map, but takes an additional; /// function as a third argument. This function is applied to the set of; /// objects returned by the corresponding Map execution to ""squash"" them; /// into a single object. The signature of the reduce function should be `(const std::vector<T>) -> T`; ///; /// An integer can be passed as the fourth argument indicating the number of chunks we want to divide our work in.; /// <b>(Note: Please be aware that chunking is only available when the policy is kMultiThread, ignoring this argument in; /// other cases)</b> This may be useful to avoid the overhead introduced when running really short tasks. In this case,; /// th",MatchSource.CODE_COMMENT,core/imt/src/TExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TExecutor.cxx:2758,Performance,optimiz,optimization,2758,"nts (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.\n; /// \endparblock; ///; /// **Note:** in cases where the function to be executed takes more than; /// zero/one argument but all are fixed except zero/one, the function can be wrapped; /// in a lambda or via std::bind to give it the right signature.\n; ///; /// #### Return value:; /// An std::vector. The elements in the container; /// will be the objects returned by func.; ///; /// ### ROOT::Internal::TExecutor::MapReduce; /// This set of methods behaves exactly like Map, but takes an additional; /// function as a third argument. This function is applied to the set of; /// objects returned by the corresponding Map execution to ""squash"" them; /// into a single object. The signature of the reduce function should be `(const std::vector<T>) -> T`; ///; /// An integer can be passed as the fourth argument indicating the number of chunks we want to divide our work in.; /// <b>(Note: Please be aware that chunking is only available when the policy is kMultiThread, ignoring this argument in; /// other cases)</b> This may be useful to avoid the overhead introduced when running really short tasks. In this case,; /// the reduction function should be independent of the size of the vector returned by Map due to optimization of the; /// number of chunks.; ///; /// #### Examples:; /// ~~~{.cpp}; /// root[] ROOT::Internal::TExecutor pool; auto ten = pool.MapReduce([]() { return 1; }, 10, [](const std::vector<int>; /// &v) { return std::accumulate(v.begin(), v.end(), 0); }); /// root[] ROOT::Internal::TExecutor; /// pool(ROOT::EExecutionPolicy::kMultiProcess); auto hist = pool.MapReduce(CreateAndFillHists, 10,; /// PoolUtils::ReduceObjects);; /// ~~~; ///; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/imt/src/TExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TExecutor.cxx:2582,Safety,avoid,avoid,2582,"nts (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.\n; /// \endparblock; ///; /// **Note:** in cases where the function to be executed takes more than; /// zero/one argument but all are fixed except zero/one, the function can be wrapped; /// in a lambda or via std::bind to give it the right signature.\n; ///; /// #### Return value:; /// An std::vector. The elements in the container; /// will be the objects returned by func.; ///; /// ### ROOT::Internal::TExecutor::MapReduce; /// This set of methods behaves exactly like Map, but takes an additional; /// function as a third argument. This function is applied to the set of; /// objects returned by the corresponding Map execution to ""squash"" them; /// into a single object. The signature of the reduce function should be `(const std::vector<T>) -> T`; ///; /// An integer can be passed as the fourth argument indicating the number of chunks we want to divide our work in.; /// <b>(Note: Please be aware that chunking is only available when the policy is kMultiThread, ignoring this argument in; /// other cases)</b> This may be useful to avoid the overhead introduced when running really short tasks. In this case,; /// the reduction function should be independent of the size of the vector returned by Map due to optimization of the; /// number of chunks.; ///; /// #### Examples:; /// ~~~{.cpp}; /// root[] ROOT::Internal::TExecutor pool; auto ten = pool.MapReduce([]() { return 1; }, 10, [](const std::vector<int>; /// &v) { return std::accumulate(v.begin(), v.end(), 0); }); /// root[] ROOT::Internal::TExecutor; /// pool(ROOT::EExecutionPolicy::kMultiProcess); auto hist = pool.MapReduce(CreateAndFillHists, 10,; /// PoolUtils::ReduceObjects);; /// ~~~; ///; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/imt/src/TExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TExecutor.cxx:1096,Usability,simpl,simply,1096,"///; ///; /// \class ROOT::Internal::TExecutor; /// \brief This class implements the interface to execute the same task; /// multiple times, sequentially or in parallel depending on the execution policy passed; /// as a first parameter on construction, and possibly with different arguments every time.; ///; /// ###ROOT::Internal::TExecutor::Map; /// The two possible usages of the Map method are:\n; /// * `Map(F func, unsigned nTimes)`: func is executed nTimes with no arguments; /// * `Map(F func, T& args)`: func is executed on each element of the collection of arguments args; ///; /// For either signature, func is executed as many times as needed by a pool of; /// n workers; where n tipically defaults to the number of cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included. ROOT::::Internal::TExecutor never; /// deletes what it returns, it simply forgets it.\n; ///; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.\n; /// \endparblock; ///; /// **Note:** in cases where the function to be executed takes more than; /// zero/one argument but all are fixed except zero/one, the function can be wrapped; /// in a lambda or via std::bind to give it the right signature.\n; ///; /// #### Return value:; /// An std::vector. The elements in the container; /// will be the objects returned by func.; ///; /// ### ROOT::Internal::TExecutor::MapReduce; /// This set of methods behaves exactly like Map, but takes an additional; /// function as a third arg",MatchSource.CODE_COMMENT,core/imt/src/TExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TImplicitMT.cxx:649,Performance,multi-thread,multi-threading,649,"// @(#)root/thread:$Id$; // // Author: Enric Tejedor Saavedra 03/12/15; //; /*************************************************************************; * Copyright (C) 1995-2015, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TImplicitMT //; // //; // This file implements the methods to enable, disable and check the //; // status of the global implicit multi-threading in ROOT. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/imt/src/TImplicitMT.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TImplicitMT.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TTaskGroup.cxx:157,Performance,concurren,concurrent,157,/**; \class ROOT::Experimental::TTaskGroup; \ingroup Parallelism; \brief A class to manage the asynchronous execution of work items. A TTaskGroup represents concurrent execution of a group of tasks.; Tasks may be dynamically added to the group as it is executing.; Nesting TTaskGroup instances may result in a runtime overhead.; */,MatchSource.CODE_COMMENT,core/imt/src/TTaskGroup.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TTaskGroup.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TTaskGroup.cxx:212,Energy Efficiency,efficient,efficient,212,"/////////////////////////////////////////////////////////////////////////////; /// Add to the group an item of work which will be ran asynchronously.; /// Adding many small items of work to the TTaskGroup is not efficient,; /// unless they run for long enough. If the work to be done is little, look; /// try to express nested parallelism or resort to other constructs such as; /// the TThreadExecutor.; /// Trying to add a work item to the group while it is in waiting state; /// makes the method block.",MatchSource.CODE_COMMENT,core/imt/src/TTaskGroup.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TTaskGroup.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:417,Energy Efficiency,adapt,adapting,417,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::TThreadExecutor; /// \ingroup Parallelism; /// \brief This class provides a simple interface to execute the same task; /// multiple times in parallel threads, possibly with different arguments every; /// time.; ///; /// ### ROOT::TThreadExecutor::Map; /// This class inherits its interfaces from ROOT::TExecutorCRTP\n, adapting them for multithreaded; /// parallelism and extends them supporting:; /// * Parallel `Foreach` operations.; /// * Custom task granularity and partial reduction, by specifying reduction function; /// and the number of chunks as extra parameters for the Map call. This is specially useful; /// to reduce the size of intermediate results when dealing with a sizeable number of elements; /// in the input data.; ///; /// The two possible usages of the Map method are:\n; /// * Map(F func, unsigned nTimes): func is executed nTimes with no arguments; /// * Map(F func, T& args): func is executed on each element of the collection of arguments args; ///; /// For either signature, func is executed as many times as needed by a pool of; /// nThreads threads, where nThreads typically defaults to the number of cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included: ROOT::TThreadExecutor never; /// deletes what it returns, it simply forgets it.\n; ///; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.; /// \endparblock; /// **Note:** in ",MatchSource.CODE_COMMENT,core/imt/src/TThreadExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:721,Energy Efficiency,reduce,reduce,721,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::TThreadExecutor; /// \ingroup Parallelism; /// \brief This class provides a simple interface to execute the same task; /// multiple times in parallel threads, possibly with different arguments every; /// time.; ///; /// ### ROOT::TThreadExecutor::Map; /// This class inherits its interfaces from ROOT::TExecutorCRTP\n, adapting them for multithreaded; /// parallelism and extends them supporting:; /// * Parallel `Foreach` operations.; /// * Custom task granularity and partial reduction, by specifying reduction function; /// and the number of chunks as extra parameters for the Map call. This is specially useful; /// to reduce the size of intermediate results when dealing with a sizeable number of elements; /// in the input data.; ///; /// The two possible usages of the Map method are:\n; /// * Map(F func, unsigned nTimes): func is executed nTimes with no arguments; /// * Map(F func, T& args): func is executed on each element of the collection of arguments args; ///; /// For either signature, func is executed as many times as needed by a pool of; /// nThreads threads, where nThreads typically defaults to the number of cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included: ROOT::TThreadExecutor never; /// deletes what it returns, it simply forgets it.\n; ///; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.; /// \endparblock; /// **Note:** in ",MatchSource.CODE_COMMENT,core/imt/src/TThreadExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:3728,Energy Efficiency,Reduce,ReduceObjects,3728,"ects returned by the corresponding Map execution to ""squash"" them; /// into a single object. This function should be independent of the size of; /// the vector returned by Map due to optimization of the number of chunks.; ///; /// If this function is a binary operator, the ""squashing"" will be performed in parallel.; /// This is exclusive to ROOT::TThreadExecutor and not any other ROOT::TExecutorCRTP-derived classes.\n; ///; /// An integer can be passed as the fourth argument indicating the number of chunks we want to divide our work in.; /// This may be useful to avoid the overhead introduced when running really short tasks.; ///; /// #### Examples:; /// ~~~{.cpp}; /// root[] ROOT::TThreadExecutor pool; auto ten = pool.MapReduce([]() { return 1; }, 10, [](const std::vector<int> &v) { return std::accumulate(v.begin(), v.end(), 0); }); /// root[] ROOT::TThreadExecutor pool; auto hist = pool.MapReduce(CreateAndFillHists, 10, PoolUtils::ReduceObjects);; /// ~~~; ///; //////////////////////////////////////////////////////////////////////////; /*; VERY IMPORTANT NOTE ABOUT WORK ISOLATION. We enclose the parallel_for and parallel_reduce invocations in a; task_arena::isolate because we want to prevent a thread to start executing an; outer task when the task it's running spawned subtasks, e.g. with a parallel_for,; and is waiting on inner tasks to be completed. While this change has a negligible performance impact, it has benefits for; several applications, for example big parallelised HEP frameworks and; RDataFrame analyses.; - For HEP Frameworks, without work isolation, it can happen that a huge; framework task is pulled by a yielding ROOT task.; This causes to delay the processing of the event which is interrupted by the; long task.; For example, work isolation avoids that during the wait due to the parallel; flushing of baskets, a very long simulation task is pulled in by the idle task.; - For RDataFrame analyses we want to guarantee that each entry is processed from; the",MatchSource.CODE_COMMENT,core/imt/src/TThreadExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:181,Integrability,interface,interface,181,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::TThreadExecutor; /// \ingroup Parallelism; /// \brief This class provides a simple interface to execute the same task; /// multiple times in parallel threads, possibly with different arguments every; /// time.; ///; /// ### ROOT::TThreadExecutor::Map; /// This class inherits its interfaces from ROOT::TExecutorCRTP\n, adapting them for multithreaded; /// parallelism and extends them supporting:; /// * Parallel `Foreach` operations.; /// * Custom task granularity and partial reduction, by specifying reduction function; /// and the number of chunks as extra parameters for the Map call. This is specially useful; /// to reduce the size of intermediate results when dealing with a sizeable number of elements; /// in the input data.; ///; /// The two possible usages of the Map method are:\n; /// * Map(F func, unsigned nTimes): func is executed nTimes with no arguments; /// * Map(F func, T& args): func is executed on each element of the collection of arguments args; ///; /// For either signature, func is executed as many times as needed by a pool of; /// nThreads threads, where nThreads typically defaults to the number of cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included: ROOT::TThreadExecutor never; /// deletes what it returns, it simply forgets it.\n; ///; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.; /// \endparblock; /// **Note:** in ",MatchSource.CODE_COMMENT,core/imt/src/TThreadExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:378,Integrability,interface,interfaces,378,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::TThreadExecutor; /// \ingroup Parallelism; /// \brief This class provides a simple interface to execute the same task; /// multiple times in parallel threads, possibly with different arguments every; /// time.; ///; /// ### ROOT::TThreadExecutor::Map; /// This class inherits its interfaces from ROOT::TExecutorCRTP\n, adapting them for multithreaded; /// parallelism and extends them supporting:; /// * Parallel `Foreach` operations.; /// * Custom task granularity and partial reduction, by specifying reduction function; /// and the number of chunks as extra parameters for the Map call. This is specially useful; /// to reduce the size of intermediate results when dealing with a sizeable number of elements; /// in the input data.; ///; /// The two possible usages of the Map method are:\n; /// * Map(F func, unsigned nTimes): func is executed nTimes with no arguments; /// * Map(F func, T& args): func is executed on each element of the collection of arguments args; ///; /// For either signature, func is executed as many times as needed by a pool of; /// nThreads threads, where nThreads typically defaults to the number of cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included: ROOT::TThreadExecutor never; /// deletes what it returns, it simply forgets it.\n; ///; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.; /// \endparblock; /// **Note:** in ",MatchSource.CODE_COMMENT,core/imt/src/TThreadExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:2135,Integrability,wrap,wrapped,2135,"her signature, func is executed as many times as needed by a pool of; /// nThreads threads, where nThreads typically defaults to the number of cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included: ROOT::TThreadExecutor never; /// deletes what it returns, it simply forgets it.\n; ///; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.; /// \endparblock; /// **Note:** in cases where the function to be executed takes more than; /// zero/one argument but all are fixed except zero/one, the function can be wrapped; /// in a lambda or via std::bind to give it the right signature.\n; ///; /// #### Return value:; /// An std::vector. The elements in the container; /// will be the objects returned by func.; ///; ///; /// #### Examples:; ///; /// ~~~{.cpp}; /// root[] ROOT::TThreadExecutor pool; auto hists = pool.Map(CreateHisto, 10);; /// root[] ROOT::TThreadExecutor pool(2); auto squares = pool.Map([](int a) { return a*a; }, {1,2,3});; /// ~~~; ///; /// ### ROOT::TThreadExecutor::MapReduce; /// This set of methods behaves exactly like Map, but takes an additional; /// function as a third argument. This function is applied to the set of; /// objects returned by the corresponding Map execution to ""squash"" them; /// into a single object. This function should be independent of the size of; /// the vector returned by Map due to optimization of the number of chunks.; ///; /// If this function is a binary operator, the ""squashing"" will be performed i",MatchSource.CODE_COMMENT,core/imt/src/TThreadExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:365,Modifiability,inherit,inherits,365,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::TThreadExecutor; /// \ingroup Parallelism; /// \brief This class provides a simple interface to execute the same task; /// multiple times in parallel threads, possibly with different arguments every; /// time.; ///; /// ### ROOT::TThreadExecutor::Map; /// This class inherits its interfaces from ROOT::TExecutorCRTP\n, adapting them for multithreaded; /// parallelism and extends them supporting:; /// * Parallel `Foreach` operations.; /// * Custom task granularity and partial reduction, by specifying reduction function; /// and the number of chunks as extra parameters for the Map call. This is specially useful; /// to reduce the size of intermediate results when dealing with a sizeable number of elements; /// in the input data.; ///; /// The two possible usages of the Map method are:\n; /// * Map(F func, unsigned nTimes): func is executed nTimes with no arguments; /// * Map(F func, T& args): func is executed on each element of the collection of arguments args; ///; /// For either signature, func is executed as many times as needed by a pool of; /// nThreads threads, where nThreads typically defaults to the number of cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included: ROOT::TThreadExecutor never; /// deletes what it returns, it simply forgets it.\n; ///; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.; /// \endparblock; /// **Note:** in ",MatchSource.CODE_COMMENT,core/imt/src/TThreadExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:417,Modifiability,adapt,adapting,417,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::TThreadExecutor; /// \ingroup Parallelism; /// \brief This class provides a simple interface to execute the same task; /// multiple times in parallel threads, possibly with different arguments every; /// time.; ///; /// ### ROOT::TThreadExecutor::Map; /// This class inherits its interfaces from ROOT::TExecutorCRTP\n, adapting them for multithreaded; /// parallelism and extends them supporting:; /// * Parallel `Foreach` operations.; /// * Custom task granularity and partial reduction, by specifying reduction function; /// and the number of chunks as extra parameters for the Map call. This is specially useful; /// to reduce the size of intermediate results when dealing with a sizeable number of elements; /// in the input data.; ///; /// The two possible usages of the Map method are:\n; /// * Map(F func, unsigned nTimes): func is executed nTimes with no arguments; /// * Map(F func, T& args): func is executed on each element of the collection of arguments args; ///; /// For either signature, func is executed as many times as needed by a pool of; /// nThreads threads, where nThreads typically defaults to the number of cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included: ROOT::TThreadExecutor never; /// deletes what it returns, it simply forgets it.\n; ///; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.; /// \endparblock; /// **Note:** in ",MatchSource.CODE_COMMENT,core/imt/src/TThreadExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:470,Modifiability,extend,extends,470,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::TThreadExecutor; /// \ingroup Parallelism; /// \brief This class provides a simple interface to execute the same task; /// multiple times in parallel threads, possibly with different arguments every; /// time.; ///; /// ### ROOT::TThreadExecutor::Map; /// This class inherits its interfaces from ROOT::TExecutorCRTP\n, adapting them for multithreaded; /// parallelism and extends them supporting:; /// * Parallel `Foreach` operations.; /// * Custom task granularity and partial reduction, by specifying reduction function; /// and the number of chunks as extra parameters for the Map call. This is specially useful; /// to reduce the size of intermediate results when dealing with a sizeable number of elements; /// in the input data.; ///; /// The two possible usages of the Map method are:\n; /// * Map(F func, unsigned nTimes): func is executed nTimes with no arguments; /// * Map(F func, T& args): func is executed on each element of the collection of arguments args; ///; /// For either signature, func is executed as many times as needed by a pool of; /// nThreads threads, where nThreads typically defaults to the number of cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included: ROOT::TThreadExecutor never; /// deletes what it returns, it simply forgets it.\n; ///; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.; /// \endparblock; /// **Note:** in ",MatchSource.CODE_COMMENT,core/imt/src/TThreadExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:2964,Performance,optimiz,optimization,2964,"integer only for the first.; /// \endparblock; /// **Note:** in cases where the function to be executed takes more than; /// zero/one argument but all are fixed except zero/one, the function can be wrapped; /// in a lambda or via std::bind to give it the right signature.\n; ///; /// #### Return value:; /// An std::vector. The elements in the container; /// will be the objects returned by func.; ///; ///; /// #### Examples:; ///; /// ~~~{.cpp}; /// root[] ROOT::TThreadExecutor pool; auto hists = pool.Map(CreateHisto, 10);; /// root[] ROOT::TThreadExecutor pool(2); auto squares = pool.Map([](int a) { return a*a; }, {1,2,3});; /// ~~~; ///; /// ### ROOT::TThreadExecutor::MapReduce; /// This set of methods behaves exactly like Map, but takes an additional; /// function as a third argument. This function is applied to the set of; /// objects returned by the corresponding Map execution to ""squash"" them; /// into a single object. This function should be independent of the size of; /// the vector returned by Map due to optimization of the number of chunks.; ///; /// If this function is a binary operator, the ""squashing"" will be performed in parallel.; /// This is exclusive to ROOT::TThreadExecutor and not any other ROOT::TExecutorCRTP-derived classes.\n; ///; /// An integer can be passed as the fourth argument indicating the number of chunks we want to divide our work in.; /// This may be useful to avoid the overhead introduced when running really short tasks.; ///; /// #### Examples:; /// ~~~{.cpp}; /// root[] ROOT::TThreadExecutor pool; auto ten = pool.MapReduce([]() { return 1; }, 10, [](const std::vector<int> &v) { return std::accumulate(v.begin(), v.end(), 0); }); /// root[] ROOT::TThreadExecutor pool; auto hist = pool.MapReduce(CreateAndFillHists, 10, PoolUtils::ReduceObjects);; /// ~~~; ///; //////////////////////////////////////////////////////////////////////////; /*; VERY IMPORTANT NOTE ABOUT WORK ISOLATION. We enclose the parallel_for and parallel_reduce invocati",MatchSource.CODE_COMMENT,core/imt/src/TThreadExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:3075,Performance,perform,performed,3075,"re than; /// zero/one argument but all are fixed except zero/one, the function can be wrapped; /// in a lambda or via std::bind to give it the right signature.\n; ///; /// #### Return value:; /// An std::vector. The elements in the container; /// will be the objects returned by func.; ///; ///; /// #### Examples:; ///; /// ~~~{.cpp}; /// root[] ROOT::TThreadExecutor pool; auto hists = pool.Map(CreateHisto, 10);; /// root[] ROOT::TThreadExecutor pool(2); auto squares = pool.Map([](int a) { return a*a; }, {1,2,3});; /// ~~~; ///; /// ### ROOT::TThreadExecutor::MapReduce; /// This set of methods behaves exactly like Map, but takes an additional; /// function as a third argument. This function is applied to the set of; /// objects returned by the corresponding Map execution to ""squash"" them; /// into a single object. This function should be independent of the size of; /// the vector returned by Map due to optimization of the number of chunks.; ///; /// If this function is a binary operator, the ""squashing"" will be performed in parallel.; /// This is exclusive to ROOT::TThreadExecutor and not any other ROOT::TExecutorCRTP-derived classes.\n; ///; /// An integer can be passed as the fourth argument indicating the number of chunks we want to divide our work in.; /// This may be useful to avoid the overhead introduced when running really short tasks.; ///; /// #### Examples:; /// ~~~{.cpp}; /// root[] ROOT::TThreadExecutor pool; auto ten = pool.MapReduce([]() { return 1; }, 10, [](const std::vector<int> &v) { return std::accumulate(v.begin(), v.end(), 0); }); /// root[] ROOT::TThreadExecutor pool; auto hist = pool.MapReduce(CreateAndFillHists, 10, PoolUtils::ReduceObjects);; /// ~~~; ///; //////////////////////////////////////////////////////////////////////////; /*; VERY IMPORTANT NOTE ABOUT WORK ISOLATION. We enclose the parallel_for and parallel_reduce invocations in a; task_arena::isolate because we want to prevent a thread to start executing an; outer task when the tas",MatchSource.CODE_COMMENT,core/imt/src/TThreadExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:4191,Performance,perform,performance,4191,"lel.; /// This is exclusive to ROOT::TThreadExecutor and not any other ROOT::TExecutorCRTP-derived classes.\n; ///; /// An integer can be passed as the fourth argument indicating the number of chunks we want to divide our work in.; /// This may be useful to avoid the overhead introduced when running really short tasks.; ///; /// #### Examples:; /// ~~~{.cpp}; /// root[] ROOT::TThreadExecutor pool; auto ten = pool.MapReduce([]() { return 1; }, 10, [](const std::vector<int> &v) { return std::accumulate(v.begin(), v.end(), 0); }); /// root[] ROOT::TThreadExecutor pool; auto hist = pool.MapReduce(CreateAndFillHists, 10, PoolUtils::ReduceObjects);; /// ~~~; ///; //////////////////////////////////////////////////////////////////////////; /*; VERY IMPORTANT NOTE ABOUT WORK ISOLATION. We enclose the parallel_for and parallel_reduce invocations in a; task_arena::isolate because we want to prevent a thread to start executing an; outer task when the task it's running spawned subtasks, e.g. with a parallel_for,; and is waiting on inner tasks to be completed. While this change has a negligible performance impact, it has benefits for; several applications, for example big parallelised HEP frameworks and; RDataFrame analyses.; - For HEP Frameworks, without work isolation, it can happen that a huge; framework task is pulled by a yielding ROOT task.; This causes to delay the processing of the event which is interrupted by the; long task.; For example, work isolation avoids that during the wait due to the parallel; flushing of baskets, a very long simulation task is pulled in by the idle task.; - For RDataFrame analyses we want to guarantee that each entry is processed from; the beginning to the end without TBB interrupting it to pull in other work items.; As a corollary, the usage of ROOT (or TBB in work isolation mode) in actions; and transformations guarantee that each entry is processed from the beginning to; the end without being interrupted by the processing of outer tasks.; */",MatchSource.CODE_COMMENT,core/imt/src/TThreadExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:3351,Safety,avoid,avoid,3351,"; /// ~~~{.cpp}; /// root[] ROOT::TThreadExecutor pool; auto hists = pool.Map(CreateHisto, 10);; /// root[] ROOT::TThreadExecutor pool(2); auto squares = pool.Map([](int a) { return a*a; }, {1,2,3});; /// ~~~; ///; /// ### ROOT::TThreadExecutor::MapReduce; /// This set of methods behaves exactly like Map, but takes an additional; /// function as a third argument. This function is applied to the set of; /// objects returned by the corresponding Map execution to ""squash"" them; /// into a single object. This function should be independent of the size of; /// the vector returned by Map due to optimization of the number of chunks.; ///; /// If this function is a binary operator, the ""squashing"" will be performed in parallel.; /// This is exclusive to ROOT::TThreadExecutor and not any other ROOT::TExecutorCRTP-derived classes.\n; ///; /// An integer can be passed as the fourth argument indicating the number of chunks we want to divide our work in.; /// This may be useful to avoid the overhead introduced when running really short tasks.; ///; /// #### Examples:; /// ~~~{.cpp}; /// root[] ROOT::TThreadExecutor pool; auto ten = pool.MapReduce([]() { return 1; }, 10, [](const std::vector<int> &v) { return std::accumulate(v.begin(), v.end(), 0); }); /// root[] ROOT::TThreadExecutor pool; auto hist = pool.MapReduce(CreateAndFillHists, 10, PoolUtils::ReduceObjects);; /// ~~~; ///; //////////////////////////////////////////////////////////////////////////; /*; VERY IMPORTANT NOTE ABOUT WORK ISOLATION. We enclose the parallel_for and parallel_reduce invocations in a; task_arena::isolate because we want to prevent a thread to start executing an; outer task when the task it's running spawned subtasks, e.g. with a parallel_for,; and is waiting on inner tasks to be completed. While this change has a negligible performance impact, it has benefits for; several applications, for example big parallelised HEP frameworks and; RDataFrame analyses.; - For HEP Frameworks, without work isolatio",MatchSource.CODE_COMMENT,core/imt/src/TThreadExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:4567,Safety,avoid,avoids,4567,"lel.; /// This is exclusive to ROOT::TThreadExecutor and not any other ROOT::TExecutorCRTP-derived classes.\n; ///; /// An integer can be passed as the fourth argument indicating the number of chunks we want to divide our work in.; /// This may be useful to avoid the overhead introduced when running really short tasks.; ///; /// #### Examples:; /// ~~~{.cpp}; /// root[] ROOT::TThreadExecutor pool; auto ten = pool.MapReduce([]() { return 1; }, 10, [](const std::vector<int> &v) { return std::accumulate(v.begin(), v.end(), 0); }); /// root[] ROOT::TThreadExecutor pool; auto hist = pool.MapReduce(CreateAndFillHists, 10, PoolUtils::ReduceObjects);; /// ~~~; ///; //////////////////////////////////////////////////////////////////////////; /*; VERY IMPORTANT NOTE ABOUT WORK ISOLATION. We enclose the parallel_for and parallel_reduce invocations in a; task_arena::isolate because we want to prevent a thread to start executing an; outer task when the task it's running spawned subtasks, e.g. with a parallel_for,; and is waiting on inner tasks to be completed. While this change has a negligible performance impact, it has benefits for; several applications, for example big parallelised HEP frameworks and; RDataFrame analyses.; - For HEP Frameworks, without work isolation, it can happen that a huge; framework task is pulled by a yielding ROOT task.; This causes to delay the processing of the event which is interrupted by the; long task.; For example, work isolation avoids that during the wait due to the parallel; flushing of baskets, a very long simulation task is pulled in by the idle task.; - For RDataFrame analyses we want to guarantee that each entry is processed from; the beginning to the end without TBB interrupting it to pull in other work items.; As a corollary, the usage of ROOT (or TBB in work isolation mode) in actions; and transformations guarantee that each entry is processed from the beginning to; the end without being interrupted by the processing of outer tasks.; */",MatchSource.CODE_COMMENT,core/imt/src/TThreadExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:174,Usability,simpl,simple,174,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::TThreadExecutor; /// \ingroup Parallelism; /// \brief This class provides a simple interface to execute the same task; /// multiple times in parallel threads, possibly with different arguments every; /// time.; ///; /// ### ROOT::TThreadExecutor::Map; /// This class inherits its interfaces from ROOT::TExecutorCRTP\n, adapting them for multithreaded; /// parallelism and extends them supporting:; /// * Parallel `Foreach` operations.; /// * Custom task granularity and partial reduction, by specifying reduction function; /// and the number of chunks as extra parameters for the Map call. This is specially useful; /// to reduce the size of intermediate results when dealing with a sizeable number of elements; /// in the input data.; ///; /// The two possible usages of the Map method are:\n; /// * Map(F func, unsigned nTimes): func is executed nTimes with no arguments; /// * Map(F func, T& args): func is executed on each element of the collection of arguments args; ///; /// For either signature, func is executed as many times as needed by a pool of; /// nThreads threads, where nThreads typically defaults to the number of cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included: ROOT::TThreadExecutor never; /// deletes what it returns, it simply forgets it.\n; ///; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.; /// \endparblock; /// **Note:** in ",MatchSource.CODE_COMMENT,core/imt/src/TThreadExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:1520,Usability,simpl,simply,1520,"ng them for multithreaded; /// parallelism and extends them supporting:; /// * Parallel `Foreach` operations.; /// * Custom task granularity and partial reduction, by specifying reduction function; /// and the number of chunks as extra parameters for the Map call. This is specially useful; /// to reduce the size of intermediate results when dealing with a sizeable number of elements; /// in the input data.; ///; /// The two possible usages of the Map method are:\n; /// * Map(F func, unsigned nTimes): func is executed nTimes with no arguments; /// * Map(F func, T& args): func is executed on each element of the collection of arguments args; ///; /// For either signature, func is executed as many times as needed by a pool of; /// nThreads threads, where nThreads typically defaults to the number of cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included: ROOT::TThreadExecutor never; /// deletes what it returns, it simply forgets it.\n; ///; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.; /// \endparblock; /// **Note:** in cases where the function to be executed takes more than; /// zero/one argument but all are fixed except zero/one, the function can be wrapped; /// in a lambda or via std::bind to give it the right signature.\n; ///; /// #### Return value:; /// An std::vector. The elements in the container; /// will be the objects returned by func.; ///; ///; /// #### Examples:; ///; /// ~~~{.cpp}; /// root[] ROOT::TThreadExecutor pool;",MatchSource.CODE_COMMENT,core/imt/src/TThreadExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:449,Availability,avail,available,449,"// End NS Internal; //////////////////////////////////////////////////////////////////////////; /// \brief Class constructor.; /// If the scheduler is active (e.g. because another TThreadExecutor is in flight, or ROOT::EnableImplicitMT() was; /// called), work with the current pool of threads.; /// If not, initialize the pool of threads, spawning nThreads. nThreads' default value, 0, initializes the; /// pool with as many logical threads as are available in the system (see NLogicalCores in RTaskArenaWrapper.cxx).; ///; /// At construction time, TThreadExecutor automatically enables ROOT's thread-safety locks as per calling; /// ROOT::EnableThreadSafety().",MatchSource.CODE_COMMENT,core/imt/src/TThreadExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:138,Energy Efficiency,schedul,scheduler,138,"// End NS Internal; //////////////////////////////////////////////////////////////////////////; /// \brief Class constructor.; /// If the scheduler is active (e.g. because another TThreadExecutor is in flight, or ROOT::EnableImplicitMT() was; /// called), work with the current pool of threads.; /// If not, initialize the pool of threads, spawning nThreads. nThreads' default value, 0, initializes the; /// pool with as many logical threads as are available in the system (see NLogicalCores in RTaskArenaWrapper.cxx).; ///; /// At construction time, TThreadExecutor automatically enables ROOT's thread-safety locks as per calling; /// ROOT::EnableThreadSafety().",MatchSource.CODE_COMMENT,core/imt/src/TThreadExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:603,Safety,safe,safety,603,"// End NS Internal; //////////////////////////////////////////////////////////////////////////; /// \brief Class constructor.; /// If the scheduler is active (e.g. because another TThreadExecutor is in flight, or ROOT::EnableImplicitMT() was; /// called), work with the current pool of threads.; /// If not, initialize the pool of threads, spawning nThreads. nThreads' default value, 0, initializes the; /// pool with as many logical threads as are available in the system (see NLogicalCores in RTaskArenaWrapper.cxx).; ///; /// At construction time, TThreadExecutor automatically enables ROOT's thread-safety locks as per calling; /// ROOT::EnableThreadSafety().",MatchSource.CODE_COMMENT,core/imt/src/TThreadExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:426,Testability,log,logical,426,"// End NS Internal; //////////////////////////////////////////////////////////////////////////; /// \brief Class constructor.; /// If the scheduler is active (e.g. because another TThreadExecutor is in flight, or ROOT::EnableImplicitMT() was; /// called), work with the current pool of threads.; /// If not, initialize the pool of threads, spawning nThreads. nThreads' default value, 0, initializes the; /// pool with as many logical threads as are available in the system (see NLogicalCores in RTaskArenaWrapper.cxx).; ///; /// At construction time, TThreadExecutor automatically enables ROOT's thread-safety locks as per calling; /// ROOT::EnableThreadSafety().",MatchSource.CODE_COMMENT,core/imt/src/TThreadExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:88,Energy Efficiency,Reduce,Reduce,88,"//////////////////////////////////////////////////////////////////////////; /// \brief ""Reduce"" in parallel an std::vector<double> into a single double value; ///; /// \param objs A vector of elements to combine.; /// \param redfunc Reduction function to combine the elements of the vector `objs`.; /// \return A value result of combining the vector elements into a single object of the same type.",MatchSource.CODE_COMMENT,core/imt/src/TThreadExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:88,Energy Efficiency,Reduce,Reduce,88,"//////////////////////////////////////////////////////////////////////////; /// \brief ""Reduce"" in parallel an std::vector<float> into a single float value; ///; /// \param objs A vector of elements to combine.; /// \param redfunc Reduction function to combine the elements of the vector `objs`.; /// \return A value result of combining the vector elements into a single object of the same type.",MatchSource.CODE_COMMENT,core/imt/src/TThreadExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/test/testRTaskArena.cxx:65,Testability,test,tests,65,"// define the range; /// Suppress the task arena diagnostics for tests where we try to create the task arena multiple times.",MatchSource.CODE_COMMENT,core/imt/test/testRTaskArena.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/test/testRTaskArena.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/test/testRTaskArena.cxx:77,Deployability,Integrat,Integration,77,"////////////////////////////////////////////////////////////////////////; // Integration Tests",MatchSource.CODE_COMMENT,core/imt/test/testRTaskArena.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/test/testRTaskArena.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/test/testRTaskArena.cxx:77,Integrability,Integrat,Integration,77,"////////////////////////////////////////////////////////////////////////; // Integration Tests",MatchSource.CODE_COMMENT,core/imt/test/testRTaskArena.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/test/testRTaskArena.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/test/testRTaskArena.cxx:89,Testability,Test,Tests,89,"////////////////////////////////////////////////////////////////////////; // Integration Tests",MatchSource.CODE_COMMENT,core/imt/test/testRTaskArena.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/test/testRTaskArena.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/test/testRTaskArena.cxx:357,Deployability,release,released,357,"// Acquire pointers to ROOT's task arena from many threads in parallel.; // To create more chaos, half of the threads will immediately try to get the pointer,; // while the other half waits for a condition variable.; // To test destroying and recreating a task arena, the first half of the shared; // pointers will be destroyed before the other threads are released.; // Then, using a notify_all(), the other half of threads will wake up; // and race to create a task arena again.",MatchSource.CODE_COMMENT,core/imt/test/testRTaskArena.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/test/testRTaskArena.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/test/testRTaskArena.cxx:206,Modifiability,variab,variable,206,"// Acquire pointers to ROOT's task arena from many threads in parallel.; // To create more chaos, half of the threads will immediately try to get the pointer,; // while the other half waits for a condition variable.; // To test destroying and recreating a task arena, the first half of the shared; // pointers will be destroyed before the other threads are released.; // Then, using a notify_all(), the other half of threads will wake up; // and race to create a task arena again.",MatchSource.CODE_COMMENT,core/imt/test/testRTaskArena.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/test/testRTaskArena.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/test/testRTaskArena.cxx:223,Testability,test,test,223,"// Acquire pointers to ROOT's task arena from many threads in parallel.; // To create more chaos, half of the threads will immediately try to get the pointer,; // while the other half waits for a condition variable.; // To test destroying and recreating a task arena, the first half of the shared; // pointers will be destroyed before the other threads are released.; // Then, using a notify_all(), the other half of threads will wake up; // and race to create a task arena again.",MatchSource.CODE_COMMENT,core/imt/test/testRTaskArena.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/test/testRTaskArena.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/test/testTBBGlobalControl.cxx:13,Testability,test,test,13,"// skip this test on systems with only 1 core",MatchSource.CODE_COMMENT,core/imt/test/testTBBGlobalControl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/test/testTBBGlobalControl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/test/testTBBGlobalControl.cxx:13,Testability,test,test,13,"// skip this test on systems with only 1 core; // ***See them warn***",MatchSource.CODE_COMMENT,core/imt/test/testTBBGlobalControl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/test/testTBBGlobalControl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/lz4/inc/ZipLZ4.h:102,Safety,avoid,avoid,102,"// NOTE: the ROOT compression libraries aren't consistently written in C++; hence the; // #ifdef's to avoid problems with C code.",MatchSource.CODE_COMMENT,core/lz4/inc/ZipLZ4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/lz4/inc/ZipLZ4.h
https://github.com/root-project/root/tree/v6-32-06/core/lz4/src/ZipLZ4.cxx:166,Security,checksum,checksum,166,"// Header consists of:; // - 2 byte identifier ""L4""; // - 1 byte LZ4 version string.; // - 3 bytes of uncompressed size; // - 3 bytes of compressed size; // - 8 byte checksum using xxhash 64.",MatchSource.CODE_COMMENT,core/lz4/src/ZipLZ4.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/lz4/src/ZipLZ4.cxx
https://github.com/root-project/root/tree/v6-32-06/core/lz4/src/ZipLZ4.cxx:139,Modifiability,layers,layers,139,"/* compressed size, including the checksum. */; // NOTE: these next 6 bytes are required from the ROOT compressed buffer format;; // upper layers will assume they are laid out in a specific manner.",MatchSource.CODE_COMMENT,core/lz4/src/ZipLZ4.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/lz4/src/ZipLZ4.cxx
https://github.com/root-project/root/tree/v6-32-06/core/lz4/src/ZipLZ4.cxx:34,Security,checksum,checksum,34,"/* compressed size, including the checksum. */; // NOTE: these next 6 bytes are required from the ROOT compressed buffer format;; // upper layers will assume they are laid out in a specific manner.",MatchSource.CODE_COMMENT,core/lz4/src/ZipLZ4.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/lz4/src/ZipLZ4.cxx
https://github.com/root-project/root/tree/v6-32-06/core/lz4/src/ZipLZ4.cxx:13,Security,checksum,checksum,13,"// Write out checksum.",MatchSource.CODE_COMMENT,core/lz4/src/ZipLZ4.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/lz4/src/ZipLZ4.cxx
https://github.com/root-project/root/tree/v6-32-06/core/lz4/src/ZipLZ4.cxx:143,Modifiability,layers,layers,143,"// NOTE: We don't check that srcsize / tgtsize is reasonable or within the ROOT-imposed limits.; // This is assumed to be handled by the upper layers.",MatchSource.CODE_COMMENT,core/lz4/src/ZipLZ4.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/lz4/src/ZipLZ4.cxx
https://github.com/root-project/root/tree/v6-32-06/core/lz4/src/ZipLZ4.cxx:109,Performance,perform,perform,109,"// TODO: The checksum followed by the decompression means we iterate through the buffer twice.; // We should perform some performance tests to see whether we can interleave the two -- i.e., at; // what size of chunks does interleaving (avoiding two fetches from RAM) improve enough for the; // extra function call costs? NOTE that ROOT limits the buffer size to 16MB.",MatchSource.CODE_COMMENT,core/lz4/src/ZipLZ4.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/lz4/src/ZipLZ4.cxx
https://github.com/root-project/root/tree/v6-32-06/core/lz4/src/ZipLZ4.cxx:122,Performance,perform,performance,122,"// TODO: The checksum followed by the decompression means we iterate through the buffer twice.; // We should perform some performance tests to see whether we can interleave the two -- i.e., at; // what size of chunks does interleaving (avoiding two fetches from RAM) improve enough for the; // extra function call costs? NOTE that ROOT limits the buffer size to 16MB.",MatchSource.CODE_COMMENT,core/lz4/src/ZipLZ4.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/lz4/src/ZipLZ4.cxx
https://github.com/root-project/root/tree/v6-32-06/core/lz4/src/ZipLZ4.cxx:236,Safety,avoid,avoiding,236,"// TODO: The checksum followed by the decompression means we iterate through the buffer twice.; // We should perform some performance tests to see whether we can interleave the two -- i.e., at; // what size of chunks does interleaving (avoiding two fetches from RAM) improve enough for the; // extra function call costs? NOTE that ROOT limits the buffer size to 16MB.",MatchSource.CODE_COMMENT,core/lz4/src/ZipLZ4.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/lz4/src/ZipLZ4.cxx
https://github.com/root-project/root/tree/v6-32-06/core/lz4/src/ZipLZ4.cxx:13,Security,checksum,checksum,13,"// TODO: The checksum followed by the decompression means we iterate through the buffer twice.; // We should perform some performance tests to see whether we can interleave the two -- i.e., at; // what size of chunks does interleaving (avoiding two fetches from RAM) improve enough for the; // extra function call costs? NOTE that ROOT limits the buffer size to 16MB.",MatchSource.CODE_COMMENT,core/lz4/src/ZipLZ4.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/lz4/src/ZipLZ4.cxx
https://github.com/root-project/root/tree/v6-32-06/core/lz4/src/ZipLZ4.cxx:134,Testability,test,tests,134,"// TODO: The checksum followed by the decompression means we iterate through the buffer twice.; // We should perform some performance tests to see whether we can interleave the two -- i.e., at; // what size of chunks does interleaving (avoiding two fetches from RAM) improve enough for the; // extra function call costs? NOTE that ROOT limits the buffer size to 16MB.",MatchSource.CODE_COMMENT,core/lz4/src/ZipLZ4.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/lz4/src/ZipLZ4.cxx
https://github.com/root-project/root/tree/v6-32-06/core/macosx/inc/CocoaUtils.h:58,Deployability,release,release,58,"//Even if both reference the same NSObject, it's ok to do release.",MatchSource.CODE_COMMENT,core/macosx/inc/CocoaUtils.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/macosx/inc/CocoaUtils.h
https://github.com/root-project/root/tree/v6-32-06/core/macosx/inc/CocoaUtils.h:2,Energy Efficiency,Drain,Drains,2,"//Drains the previous pool (if any); //and activates a new one.",MatchSource.CODE_COMMENT,core/macosx/inc/CocoaUtils.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/macosx/inc/CocoaUtils.h
https://github.com/root-project/root/tree/v6-32-06/core/macosx/inc/CocoaUtils.h:217,Deployability,release,release,217,"///////////////////////////////////////////////////////////; // //; // Strong reference for a Core Foundation object. //; // This class can have specializations for CF object //; // with it's own version of retain or release. //; // //; ///////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/macosx/inc/CocoaUtils.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/macosx/inc/CocoaUtils.h
https://github.com/root-project/root/tree/v6-32-06/core/macosx/inc/CocoaUtils.h:177,Energy Efficiency,allocate,allocated,177,"///////////////////////////////////////////////////; // //; // Scoped array - scope guard for an array. //; // Sometimes, I can not use std::vector, //; // for example, data is allocated in TGCocoa //; // and must be later freed in Objective-C code. //; // To make the code exception-safe, I still //; // have to care about memory, which is already //; // allocated. //; // //; ///////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/macosx/inc/CocoaUtils.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/macosx/inc/CocoaUtils.h
https://github.com/root-project/root/tree/v6-32-06/core/macosx/inc/CocoaUtils.h:356,Energy Efficiency,allocate,allocated,356,"///////////////////////////////////////////////////; // //; // Scoped array - scope guard for an array. //; // Sometimes, I can not use std::vector, //; // for example, data is allocated in TGCocoa //; // and must be later freed in Objective-C code. //; // To make the code exception-safe, I still //; // have to care about memory, which is already //; // allocated. //; // //; ///////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/macosx/inc/CocoaUtils.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/macosx/inc/CocoaUtils.h
https://github.com/root-project/root/tree/v6-32-06/core/macosx/inc/CocoaUtils.h:284,Safety,safe,safe,284,"///////////////////////////////////////////////////; // //; // Scoped array - scope guard for an array. //; // Sometimes, I can not use std::vector, //; // for example, data is allocated in TGCocoa //; // and must be later freed in Objective-C code. //; // To make the code exception-safe, I still //; // have to care about memory, which is already //; // allocated. //; // //; ///////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/macosx/inc/CocoaUtils.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/macosx/inc/CocoaUtils.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/RootMetaSelection.h:18,Safety,avoid,avoid,18,"///\brief Used to avoid to select all instances of a template",MatchSource.CODE_COMMENT,core/meta/inc/RootMetaSelection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/RootMetaSelection.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TBaseClass.h:3,Performance,cache,cache,3,"// cache of IsSTLContainer()",MatchSource.CODE_COMMENT,core/meta/inc/TBaseClass.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TBaseClass.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h:64,Performance,load,loaded,64,"// The library containing the dictionary for this class was; // loaded and has been unloaded from memory.",MatchSource.CODE_COMMENT,core/meta/inc/TClass.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h:160,Performance,load,loaded,160,"// The class has a TClass proper bootstrap coming from a run; // through rootcling/genreflex/TMetaUtils and the library; // containing this dictionary has been loaded in memory.",MatchSource.CODE_COMMENT,core/meta/inc/TClass.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h:48,Energy Efficiency,allocate,allocated,48,"// ""Typed"" pointer that recalls how TClass::New allocated the object.; // It is returned by TClass:NewObject and should be passed to TClass::DeleteArray or TClass::Destructor; // to delete the object.; // It is also used in TVirtualCollectionProxy for the same reasons.",MatchSource.CODE_COMMENT,core/meta/inc/TClass.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h:152,Performance,perform,performed,152,"// A class which is used to collect decl names starting from normalised; // names (typedef resolution is excluded here, just string manipulation; // is performed). At the heart of the implementation, an unordered set.",MatchSource.CODE_COMMENT,core/meta/inc/TClass.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h:492,Deployability,update,updated,492,"// TClass objects can be created as a result of opening a TFile (in which; // they are in emulated mode) or as a result of loading the dictionary for; // the corresponding class. When a dictionary is loaded any pre-existing; // emulated TClass is replaced by the one created/coming from the dictionary.; // To have a reference that always point to the 'current' TClass object for; // a given class, one should use a TClassRef.; // TClassRef works by holding on to the fPersistentRef which is updated; // atomically whenever a TClass is replaced. During the replacement the; // value of fPersistentRef is set to zero, leading the TClassRef to call; // TClass::GetClass which is also locked by the replacement. At the end; // of the replacement, fPersistentRef points to the new TClass object.",MatchSource.CODE_COMMENT,core/meta/inc/TClass.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h:123,Performance,load,loading,123,"// TClass objects can be created as a result of opening a TFile (in which; // they are in emulated mode) or as a result of loading the dictionary for; // the corresponding class. When a dictionary is loaded any pre-existing; // emulated TClass is replaced by the one created/coming from the dictionary.; // To have a reference that always point to the 'current' TClass object for; // a given class, one should use a TClassRef.; // TClassRef works by holding on to the fPersistentRef which is updated; // atomically whenever a TClass is replaced. During the replacement the; // value of fPersistentRef is set to zero, leading the TClassRef to call; // TClass::GetClass which is also locked by the replacement. At the end; // of the replacement, fPersistentRef points to the new TClass object.",MatchSource.CODE_COMMENT,core/meta/inc/TClass.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h:200,Performance,load,loaded,200,"// TClass objects can be created as a result of opening a TFile (in which; // they are in emulated mode) or as a result of loading the dictionary for; // the corresponding class. When a dictionary is loaded any pre-existing; // emulated TClass is replaced by the one created/coming from the dictionary.; // To have a reference that always point to the 'current' TClass object for; // a given class, one should use a TClassRef.; // TClassRef works by holding on to the fPersistentRef which is updated; // atomically whenever a TClass is replaced. During the replacement the; // value of fPersistentRef is set to zero, leading the TClassRef to call; // TClass::GetClass which is also locked by the replacement. At the end; // of the replacement, fPersistentRef points to the new TClass object.",MatchSource.CODE_COMMENT,core/meta/inc/TClass.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h:2,Security,checksum,checksum,2,"//checksum of data members and base classes",MatchSource.CODE_COMMENT,core/meta/inc/TClass.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h:13,Integrability,interface,interface,13,"//Collection interface",MatchSource.CODE_COMMENT,core/meta/inc/TClass.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h:2,Integrability,Wrap,Wrapper,2,"//Wrapper around this class custom Streamer member function.",MatchSource.CODE_COMMENT,core/meta/inc/TClass.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h:2,Integrability,Wrap,Wrapper,2,"//Wrapper around this class custom conversion Streamer member function.",MatchSource.CODE_COMMENT,core/meta/inc/TClass.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h:20,Performance,load,loaded,20,"//!Whether info was loaded from a root pcm.",MatchSource.CODE_COMMENT,core/meta/inc/TClass.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h:53,Availability,avail,available,53,"//!Indicates whether the ClassInfo is supposed to be available.",MatchSource.CODE_COMMENT,core/meta/inc/TClass.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h:3,Performance,cache,cached,3,"//!cached of the streaming method to use",MatchSource.CODE_COMMENT,core/meta/inc/TClass.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h:54,Performance,Load,Loaded,54,"//!Current 'state' of the class (Emulated,Interpreted,Loaded)",MatchSource.CODE_COMMENT,core/meta/inc/TClass.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h:3,Performance,cache,cached,3,"//!cached current streamer info.",MatchSource.CODE_COMMENT,core/meta/inc/TClass.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h:3,Performance,cache,cached,3,"//!cached streamer info used in the last read.",MatchSource.CODE_COMMENT,core/meta/inc/TClass.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h:34,Security,hash,hash,34,"// These are the above-referenced hash tables. (The pointers are null; // if no entries have been made.)",MatchSource.CODE_COMMENT,core/meta/inc/TClass.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h:97,Modifiability,inherit,inheritance,97,"/// @brief Return 'true' if we can guarantee that if this class (or any class in; /// this class inheritance hierarchy) overload TObject::Hash it also starts; /// the RecursiveRemove process from its own destructor.",MatchSource.CODE_COMMENT,core/meta/inc/TClass.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h:138,Security,Hash,Hash,138,"/// @brief Return 'true' if we can guarantee that if this class (or any class in; /// this class inheritance hierarchy) overload TObject::Hash it also starts; /// the RecursiveRemove process from its own destructor.",MatchSource.CODE_COMMENT,core/meta/inc/TClass.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h:14,Performance,perform,performance,14,"// Inline for performance, skipping one function call.",MatchSource.CODE_COMMENT,core/meta/inc/TClass.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClassGenerator.h:139,Integrability,interface,interface,139,"//////////////////////////////////////////////////////////////////////////; // //; // TClassGenerator //; // //; // Objects following this interface can be passed onto the TROOT object //; // to implement a user customized way to create the TClass objects. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/inc/TClassGenerator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClassGenerator.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClassGenerator.h:3,Integrability,interface,interface,3,"// interface for TClass generators",MatchSource.CODE_COMMENT,core/meta/inc/TClassGenerator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClassGenerator.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClassStreamer.h:385,Availability,error,error,385,"// The address passed to operator() will be the address of the start of the; // object. Overload this routine, if your derived class can optimize; // the handling of the onfileClass (rather than storing and restoring from the; // fOnFileClass member.; // Note we can not name this routine 'operator' has it would be slightly; // backward incompatible and lead to the following warning/error from the; // compiler in the derived class overloading the other operator():; // include/TClassStreamer.h:51: error: ‘virtual void TClassStreamer::operator()(TBuffer&, void*, const TClass*)’ was hidden; // include/TCollectionProxyFactory.h:180: error: by ‘virtual void TCollectionClassStreamer::operator()(TBuffer&, void*)’; // cc1plus: warnings being treated as errors",MatchSource.CODE_COMMENT,core/meta/inc/TClassStreamer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClassStreamer.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClassStreamer.h:501,Availability,error,error,501,"// The address passed to operator() will be the address of the start of the; // object. Overload this routine, if your derived class can optimize; // the handling of the onfileClass (rather than storing and restoring from the; // fOnFileClass member.; // Note we can not name this routine 'operator' has it would be slightly; // backward incompatible and lead to the following warning/error from the; // compiler in the derived class overloading the other operator():; // include/TClassStreamer.h:51: error: ‘virtual void TClassStreamer::operator()(TBuffer&, void*, const TClass*)’ was hidden; // include/TCollectionProxyFactory.h:180: error: by ‘virtual void TCollectionClassStreamer::operator()(TBuffer&, void*)’; // cc1plus: warnings being treated as errors",MatchSource.CODE_COMMENT,core/meta/inc/TClassStreamer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClassStreamer.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClassStreamer.h:636,Availability,error,error,636,"// The address passed to operator() will be the address of the start of the; // object. Overload this routine, if your derived class can optimize; // the handling of the onfileClass (rather than storing and restoring from the; // fOnFileClass member.; // Note we can not name this routine 'operator' has it would be slightly; // backward incompatible and lead to the following warning/error from the; // compiler in the derived class overloading the other operator():; // include/TClassStreamer.h:51: error: ‘virtual void TClassStreamer::operator()(TBuffer&, void*, const TClass*)’ was hidden; // include/TCollectionProxyFactory.h:180: error: by ‘virtual void TCollectionClassStreamer::operator()(TBuffer&, void*)’; // cc1plus: warnings being treated as errors",MatchSource.CODE_COMMENT,core/meta/inc/TClassStreamer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClassStreamer.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClassStreamer.h:754,Availability,error,errors,754,"// The address passed to operator() will be the address of the start of the; // object. Overload this routine, if your derived class can optimize; // the handling of the onfileClass (rather than storing and restoring from the; // fOnFileClass member.; // Note we can not name this routine 'operator' has it would be slightly; // backward incompatible and lead to the following warning/error from the; // compiler in the derived class overloading the other operator():; // include/TClassStreamer.h:51: error: ‘virtual void TClassStreamer::operator()(TBuffer&, void*, const TClass*)’ was hidden; // include/TCollectionProxyFactory.h:180: error: by ‘virtual void TCollectionClassStreamer::operator()(TBuffer&, void*)’; // cc1plus: warnings being treated as errors",MatchSource.CODE_COMMENT,core/meta/inc/TClassStreamer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClassStreamer.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClassStreamer.h:102,Integrability,rout,routine,102,"// The address passed to operator() will be the address of the start of the; // object. Overload this routine, if your derived class can optimize; // the handling of the onfileClass (rather than storing and restoring from the; // fOnFileClass member.; // Note we can not name this routine 'operator' has it would be slightly; // backward incompatible and lead to the following warning/error from the; // compiler in the derived class overloading the other operator():; // include/TClassStreamer.h:51: error: ‘virtual void TClassStreamer::operator()(TBuffer&, void*, const TClass*)’ was hidden; // include/TCollectionProxyFactory.h:180: error: by ‘virtual void TCollectionClassStreamer::operator()(TBuffer&, void*)’; // cc1plus: warnings being treated as errors",MatchSource.CODE_COMMENT,core/meta/inc/TClassStreamer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClassStreamer.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClassStreamer.h:281,Integrability,rout,routine,281,"// The address passed to operator() will be the address of the start of the; // object. Overload this routine, if your derived class can optimize; // the handling of the onfileClass (rather than storing and restoring from the; // fOnFileClass member.; // Note we can not name this routine 'operator' has it would be slightly; // backward incompatible and lead to the following warning/error from the; // compiler in the derived class overloading the other operator():; // include/TClassStreamer.h:51: error: ‘virtual void TClassStreamer::operator()(TBuffer&, void*, const TClass*)’ was hidden; // include/TCollectionProxyFactory.h:180: error: by ‘virtual void TCollectionClassStreamer::operator()(TBuffer&, void*)’; // cc1plus: warnings being treated as errors",MatchSource.CODE_COMMENT,core/meta/inc/TClassStreamer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClassStreamer.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClassStreamer.h:137,Performance,optimiz,optimize,137,"// The address passed to operator() will be the address of the start of the; // object. Overload this routine, if your derived class can optimize; // the handling of the onfileClass (rather than storing and restoring from the; // fOnFileClass member.; // Note we can not name this routine 'operator' has it would be slightly; // backward incompatible and lead to the following warning/error from the; // compiler in the derived class overloading the other operator():; // include/TClassStreamer.h:51: error: ‘virtual void TClassStreamer::operator()(TBuffer&, void*, const TClass*)’ was hidden; // include/TCollectionProxyFactory.h:180: error: by ‘virtual void TCollectionClassStreamer::operator()(TBuffer&, void*)’; // cc1plus: warnings being treated as errors",MatchSource.CODE_COMMENT,core/meta/inc/TClassStreamer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClassStreamer.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDataMember.h:123,Integrability,interface,interface,123,"//////////////////////////////////////////////////////////////////////////; // //; // TDataMember //; // //; // Dictionary interface for a class data member. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/inc/TDataMember.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDataMember.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDataMember.h:37,Modifiability,variab,variable,37,"//String representation of the index variable name",MatchSource.CODE_COMMENT,core/meta/inc/TDataMember.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDataMember.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDataMember.h:75,Security,access,access,75,"//full type description with no typedef; // The following fields allows to access all (even private) datamembers and; // provide a possibility of having options with names and strings.; // These options are defined in a comment to a field!",MatchSource.CODE_COMMENT,core/meta/inc/TDataMember.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDataMember.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDataMember.h:46,Deployability,toggle,toggle,46,"//Not used yet: bitmask used when option is a toggle group",MatchSource.CODE_COMMENT,core/meta/inc/TDataMember.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDataMember.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDictionary.h:143,Integrability,interface,interface,143,"//////////////////////////////////////////////////////////////////////////; // //; // TDictionary //; // //; // This class defines an abstract interface that must be implemented //; // by all classes that contain dictionary information. //; // //; // The dictionary is defined by the followling classes: //; // TDataType (typedef definitions) //; // TGlobal (global variables) //; // TFunction (global functions) //; // TClass (classes) //; // TBaseClass (base classes) //; // TDataMember (class datamembers) //; // TMethod (class methods) //; // TMethodArg (method arguments) //; // //; // All the above classes implement the TDictionary abstract interface //; // (note: the indentation shows aggregation not inheritance). //; // The ROOT dictionary system provides a very extensive RTTI //; // environment that facilitates a.o. object inspectors, object I/O, //; // ROOT Trees, etc. Most of the type information is provided by the //; // CINT C++ interpreter. //; // //; // TMethodCall (method call environment) //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/inc/TDictionary.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDictionary.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDictionary.h:648,Integrability,interface,interface,648,"//////////////////////////////////////////////////////////////////////////; // //; // TDictionary //; // //; // This class defines an abstract interface that must be implemented //; // by all classes that contain dictionary information. //; // //; // The dictionary is defined by the followling classes: //; // TDataType (typedef definitions) //; // TGlobal (global variables) //; // TFunction (global functions) //; // TClass (classes) //; // TBaseClass (base classes) //; // TDataMember (class datamembers) //; // TMethod (class methods) //; // TMethodArg (method arguments) //; // //; // All the above classes implement the TDictionary abstract interface //; // (note: the indentation shows aggregation not inheritance). //; // The ROOT dictionary system provides a very extensive RTTI //; // environment that facilitates a.o. object inspectors, object I/O, //; // ROOT Trees, etc. Most of the type information is provided by the //; // CINT C++ interpreter. //; // //; // TMethodCall (method call environment) //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/inc/TDictionary.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDictionary.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDictionary.h:366,Modifiability,variab,variables,366,"//////////////////////////////////////////////////////////////////////////; // //; // TDictionary //; // //; // This class defines an abstract interface that must be implemented //; // by all classes that contain dictionary information. //; // //; // The dictionary is defined by the followling classes: //; // TDataType (typedef definitions) //; // TGlobal (global variables) //; // TFunction (global functions) //; // TClass (classes) //; // TBaseClass (base classes) //; // TDataMember (class datamembers) //; // TMethod (class methods) //; // TMethodArg (method arguments) //; // //; // All the above classes implement the TDictionary abstract interface //; // (note: the indentation shows aggregation not inheritance). //; // The ROOT dictionary system provides a very extensive RTTI //; // environment that facilitates a.o. object inspectors, object I/O, //; // ROOT Trees, etc. Most of the type information is provided by the //; // CINT C++ interpreter. //; // //; // TMethodCall (method call environment) //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/inc/TDictionary.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDictionary.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDictionary.h:710,Modifiability,inherit,inheritance,710,"//////////////////////////////////////////////////////////////////////////; // //; // TDictionary //; // //; // This class defines an abstract interface that must be implemented //; // by all classes that contain dictionary information. //; // //; // The dictionary is defined by the followling classes: //; // TDataType (typedef definitions) //; // TGlobal (global variables) //; // TFunction (global functions) //; // TClass (classes) //; // TBaseClass (base classes) //; // TDataMember (class datamembers) //; // TMethod (class methods) //; // TMethodArg (method arguments) //; // //; // All the above classes implement the TDictionary abstract interface //; // (note: the indentation shows aggregation not inheritance). //; // The ROOT dictionary system provides a very extensive RTTI //; // environment that facilitates a.o. object inspectors, object I/O, //; // ROOT Trees, etc. Most of the type information is provided by the //; // CINT C++ interpreter. //; // //; // TMethodCall (method call environment) //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/inc/TDictionary.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDictionary.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDictionary.h:17,Availability,avail,available,17,"// 0x01000000 is available",MatchSource.CODE_COMMENT,core/meta/inc/TDictionary.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDictionary.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDictionary.h:17,Availability,avail,available,17,"// 0x80000000 is available",MatchSource.CODE_COMMENT,core/meta/inc/TDictionary.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDictionary.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDictionary.h:45,Deployability,update,updated,45,"//!the Cling ID of the transaction that last updated the object",MatchSource.CODE_COMMENT,core/meta/inc/TDictionary.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDictionary.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDictionary.h:2,Integrability,Interface,Interface,2,"//Interface to dictionary",MatchSource.CODE_COMMENT,core/meta/inc/TDictionary.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDictionary.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TFileMergeInfo.h:235,Security,access,access,235,"//////////////////////////////////////////////////////////////////////////; // //; // TFileMergeInfo //; // //; // This class helps passing information from the TFileMerger to //; // the objects being merged. //; // //; // It provides access to the output directory pointer (fOutputDirectory)//; // to whether or not this is the first time Merge is being called in the//; // serie (for example for TTree, the first time we also need to Clone //; // the object on which Merge is called), and provides for a User Data //; // object to be passed along to each of the calls to Merge. //; // The fUserData object is owned by the TFileMergeInfo and will be //; // deleted when the TFileMerger moves on to the next set of objects. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/inc/TFileMergeInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TFileMergeInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TFileMergeInfo.h:45,Availability,down,down,45,"// Additional text based option being passed down to customize the merge.",MatchSource.CODE_COMMENT,core/meta/inc/TFileMergeInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TFileMergeInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TGlobal.h:115,Modifiability,variab,variables,115,"//////////////////////////////////////////////////////////////////////////; // //; // TGlobal //; // //; // Global variables class (global variables are obtained from CINT). //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/inc/TGlobal.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TGlobal.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TGlobal.h:139,Modifiability,variab,variables,139,"//////////////////////////////////////////////////////////////////////////; // //; // TGlobal //; // //; // Global variables class (global variables are obtained from CINT). //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/inc/TGlobal.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TGlobal.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TGlobal.h:9,Modifiability,variab,variable,9,"//Global variable class",MatchSource.CODE_COMMENT,core/meta/inc/TGlobal.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TGlobal.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h:144,Integrability,interface,interface,144,"//////////////////////////////////////////////////////////////////////////; // //; // TInterpreter //; // //; // This class defines an abstract interface to a generic command line //; // interpreter. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/inc/TInterpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h:3,Availability,error,error,3,/* error */,MatchSource.CODE_COMMENT,core/meta/inc/TInterpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h:42,Availability,error,error,42,"/// \brief Report diagnostics to the ROOT error handler (see TError.h).",MatchSource.CODE_COMMENT,core/meta/inc/TInterpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h:12,Integrability,interface,interface,12,"// CallFunc interface",MatchSource.CODE_COMMENT,core/meta/inc/TInterpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h:13,Integrability,interface,interface,13,"// ClassInfo interface",MatchSource.CODE_COMMENT,core/meta/inc/TInterpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h:17,Integrability,interface,interface,17,"// BaseClassInfo interface",MatchSource.CODE_COMMENT,core/meta/inc/TInterpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h:18,Integrability,interface,interface,18,"// DataMemberInfo interface",MatchSource.CODE_COMMENT,core/meta/inc/TInterpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h:21,Integrability,interface,interface,21,"// Function Template interface",MatchSource.CODE_COMMENT,core/meta/inc/TInterpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h:14,Integrability,interface,interface,14,"// MethodInfo interface",MatchSource.CODE_COMMENT,core/meta/inc/TInterpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h:17,Integrability,interface,interface,17,"// MethodArgInfo interface",MatchSource.CODE_COMMENT,core/meta/inc/TInterpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h:12,Integrability,interface,interface,12,"// TypeInfo interface",MatchSource.CODE_COMMENT,core/meta/inc/TInterpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h:15,Integrability,interface,interface,15,"// TypedefInfo interface",MatchSource.CODE_COMMENT,core/meta/inc/TInterpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h:23,Integrability,interface,interface,23,"// QualType Opaque Ptr interface",MatchSource.CODE_COMMENT,core/meta/inc/TInterpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h:16,Integrability,interface,interface,16,"// FunctionDecl interface",MatchSource.CODE_COMMENT,core/meta/inc/TInterpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h:15,Integrability,interface,interface,15,"//ABC defining interface to generic interpreter",MatchSource.CODE_COMMENT,core/meta/inc/TInterpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreterValue.h:684,Modifiability,variab,variable,684,"// @(#)root/core/meta:$Id$e; // Author: Vassil Vassilev 13/03/2013; /*******************************************************************************; * Copyright (C) 1995-2013, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; ******************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; // //; // Class representing a value coming from the interpreter. Its main use case //; // is to TCallFunc. When TCallFunc returns by-value, i.e. a temporary //; // variable, its lifetime has to be extended. TInterpreterValue provides a //; // way to extend the temporaries lifetime and gives the user to control it. //; // //; // The class needs to be derived from for the actual interpreter, //; // see TClingValue. //; // //; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/inc/TInterpreterValue.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreterValue.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreterValue.h:717,Modifiability,extend,extended,717,"// @(#)root/core/meta:$Id$e; // Author: Vassil Vassilev 13/03/2013; /*******************************************************************************; * Copyright (C) 1995-2013, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; ******************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; // //; // Class representing a value coming from the interpreter. Its main use case //; // is to TCallFunc. When TCallFunc returns by-value, i.e. a temporary //; // variable, its lifetime has to be extended. TInterpreterValue provides a //; // way to extend the temporaries lifetime and gives the user to control it. //; // //; // The class needs to be derived from for the actual interpreter, //; // see TClingValue. //; // //; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/inc/TInterpreterValue.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreterValue.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreterValue.h:770,Modifiability,extend,extend,770,"// @(#)root/core/meta:$Id$e; // Author: Vassil Vassilev 13/03/2013; /*******************************************************************************; * Copyright (C) 1995-2013, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; ******************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; // //; // Class representing a value coming from the interpreter. Its main use case //; // is to TCallFunc. When TCallFunc returns by-value, i.e. a temporary //; // variable, its lifetime has to be extended. TInterpreterValue provides a //; // way to extend the temporaries lifetime and gives the user to control it. //; // //; // The class needs to be derived from for the actual interpreter, //; // see TClingValue. //; // //; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/inc/TInterpreterValue.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreterValue.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TIsAProxy.h:334,Availability,down,down,334,"// On testing with the data from the 250202_181_RECO.root and doing ""just"" serializing; // the value 8 was the sweet spot of performance. With more slots, too much time is; // spent scanning the array of ""last"" seen and with less slots then the; // serialization induced by and/or the cost of executed `++fSubTypesReaders is slow; // down (noticeably) the streaming of branches with polymorphic containers.",MatchSource.CODE_COMMENT,core/meta/inc/TIsAProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TIsAProxy.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TIsAProxy.h:383,Modifiability,polymorphi,polymorphic,383,"// On testing with the data from the 250202_181_RECO.root and doing ""just"" serializing; // the value 8 was the sweet spot of performance. With more slots, too much time is; // spent scanning the array of ""last"" seen and with less slots then the; // serialization induced by and/or the cost of executed `++fSubTypesReaders is slow; // down (noticeably) the streaming of branches with polymorphic containers.",MatchSource.CODE_COMMENT,core/meta/inc/TIsAProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TIsAProxy.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TIsAProxy.h:125,Performance,perform,performance,125,"// On testing with the data from the 250202_181_RECO.root and doing ""just"" serializing; // the value 8 was the sweet spot of performance. With more slots, too much time is; // spent scanning the array of ""last"" seen and with less slots then the; // serialization induced by and/or the cost of executed `++fSubTypesReaders is slow; // down (noticeably) the streaming of branches with polymorphic containers.",MatchSource.CODE_COMMENT,core/meta/inc/TIsAProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TIsAProxy.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TIsAProxy.h:6,Testability,test,testing,6,"// On testing with the data from the 250202_181_RECO.root and doing ""just"" serializing; // the value 8 was the sweet spot of performance. With more slots, too much time is; // spent scanning the array of ""last"" seen and with less slots then the; // serialization induced by and/or the cost of executed `++fSubTypesReaders is slow; // down (noticeably) the streaming of branches with polymorphic containers.",MatchSource.CODE_COMMENT,core/meta/inc/TIsAProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TIsAProxy.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TIsAProxy.h:34,Deployability,update,update,34,"// Next slot in fLasts to use for update (ring buffer)",MatchSource.CODE_COMMENT,core/meta/inc/TIsAProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TIsAProxy.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TListOfDataMembers.h:173,Security,access,access,173,"//////////////////////////////////////////////////////////////////////////; // //; // TListOfDataMembers //; // //; // A collection of TDataMember objects designed for fast access given a //; // DeclId_t and for keep track of TDataMember that were described //; // unloaded member. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/inc/TListOfDataMembers.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TListOfDataMembers.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TListOfDataMembers.h:56,Performance,load,load,56,"//! Represent interpreter state when we last did a full load.",MatchSource.CODE_COMMENT,core/meta/inc/TListOfDataMembers.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TListOfDataMembers.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TListOfDataMembers.h:17,Performance,Load,Load,17,"//! Mark whether Load was executed.",MatchSource.CODE_COMMENT,core/meta/inc/TListOfDataMembers.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TListOfDataMembers.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TListOfDataMembers.h:123,Modifiability,variab,variables,123,"/// Constructor, possibly for all members of a class (or globals).; /// Include (or not) the scope's using declarations of variables.",MatchSource.CODE_COMMENT,core/meta/inc/TListOfDataMembers.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TListOfDataMembers.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TListOfEnums.h:161,Security,access,access,161,"//////////////////////////////////////////////////////////////////////////; // //; // TListOfEnums //; // //; // A collection of TEnum objects designed for fast access given a //; // DeclId_t and for keep track of TEnum that were described //; // unloaded enum. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/inc/TListOfEnums.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TListOfEnums.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TListOfEnums.h:17,Performance,Load,Load,17,"//! Mark whether Load was executed.",MatchSource.CODE_COMMENT,core/meta/inc/TListOfEnums.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TListOfEnums.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TListOfEnums.h:56,Performance,load,load,56,"//! Represent interpreter state when we last did a full load.",MatchSource.CODE_COMMENT,core/meta/inc/TListOfEnums.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TListOfEnums.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TListOfEnumsWithLock.h:169,Security,access,access,169,"//////////////////////////////////////////////////////////////////////////; // //; // TListOfEnumsWithLock //; // //; // A collection of TEnum objects designed for fast access given a //; // DeclId_t and for keep track of TEnum that were described //; // unloaded enum. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/inc/TListOfEnumsWithLock.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TListOfEnumsWithLock.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TListOfFunctions.h:169,Security,access,access,169,"//////////////////////////////////////////////////////////////////////////; // //; // TListOfFunctions //; // //; // A collection of TFunction objects designed for fast access given a //; // DeclId_t and for keep track of TFunction that were described //; // unloaded function. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/inc/TListOfFunctions.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TListOfFunctions.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TListOfFunctions.h:55,Performance,load,load,55,"// Represent interpreter state when we last did a full load.",MatchSource.CODE_COMMENT,core/meta/inc/TListOfFunctions.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TListOfFunctions.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TListOfFunctionTemplates.h:185,Security,access,access,185,"//////////////////////////////////////////////////////////////////////////; // //; // TListOfFunctionTemplates //; // //; // A collection of TFunctionTemplate objects designed for fast access //; // given a DeclId_t and for keep track of TFunctionTempalte that were //; // described unloaded function. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/inc/TListOfFunctionTemplates.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TListOfFunctionTemplates.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TListOfFunctionTemplates.h:55,Performance,load,load,55,"// Represent interpreter state when we last did a full load.",MatchSource.CODE_COMMENT,core/meta/inc/TListOfFunctionTemplates.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TListOfFunctionTemplates.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TMemberStreamer.h:104,Modifiability,variab,variable,104,"// The address passed to operator() will be the address of the data member.; // If the data member is a variable size array, 'size' is the number of elements; // to read/write",MatchSource.CODE_COMMENT,core/meta/inc/TMemberStreamer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TMemberStreamer.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TMethod.h:34,Deployability,TOGGLE,TOGGLE,34,"//state getter in case this is a *TOGGLE method",MatchSource.CODE_COMMENT,core/meta/inc/TMethod.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TMethod.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TMethod.h:49,Deployability,TOGGLE,TOGGLE,49,"//methodcall for state getter in case this is a *TOGGLE method",MatchSource.CODE_COMMENT,core/meta/inc/TMethod.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TMethod.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TMethod.h:49,Deployability,TOGGLE,TOGGLE,49,"//methodcall for state setter in case this is a *TOGGLE method",MatchSource.CODE_COMMENT,core/meta/inc/TMethod.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TMethod.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TMethodArg.h:122,Integrability,interface,interface,122,"//////////////////////////////////////////////////////////////////////////; // //; // TMethodArg //; // //; // Dictionary interface for a method argument. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/inc/TMethodArg.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TMethodArg.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TMethodCall.h:139,Integrability,interface,interface,139,"//////////////////////////////////////////////////////////////////////////; // //; // TMethodCall //; // //; // Method or function calling interface. Objects of this class contain //; // the (CINT) environment to call a global function or a method for an //; // object of a specific class with the desired arguments. This class is //; // espicially useful when a method has to be called more times for //; // different objects and/or with different arguments. If a function or //; // method needs to be called only once one better uses //; // TInterpreter::Execute(). //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/inc/TMethodCall.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TMethodCall.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TMethodCall.h:2,Availability,error,error,2,/*error*/,MatchSource.CODE_COMMENT,core/meta/inc/TMethodCall.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TMethodCall.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TMethodCall.h:2,Availability,error,error,2,/*error*/,MatchSource.CODE_COMMENT,core/meta/inc/TMethodCall.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TMethodCall.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TMethodCall.h:17,Integrability,interface,interface,17,"//Method calling interface",MatchSource.CODE_COMMENT,core/meta/inc/TMethodCall.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TMethodCall.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TProtoClass.h:11,Integrability,depend,dependent,11,"// list of dependent classes",MatchSource.CODE_COMMENT,core/meta/inc/TProtoClass.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TProtoClass.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TProtoClass.h:2,Security,checksum,checksum,2,"//checksum of data members and base classes",MatchSource.CODE_COMMENT,core/meta/inc/TProtoClass.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TProtoClass.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TSchemaRule.h:10,Security,checksum,checksum,10,"// Source checksum string",MatchSource.CODE_COMMENT,core/meta/inc/TSchemaRule.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TSchemaRule.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TSchemaRule.h:11,Security,checksum,checksum,11,"//! Source checksum vector (for searching purposes)",MatchSource.CODE_COMMENT,core/meta/inc/TSchemaRule.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TSchemaRule.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TSchemaRuleSet.h:16,Security,checksum,checksum,16,"// Target class checksum",MatchSource.CODE_COMMENT,core/meta/inc/TSchemaRuleSet.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TSchemaRuleSet.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TStreamerElement.h:42,Modifiability,inherit,inherits,42,"//!base offset for TObject if the element inherits from it",MatchSource.CODE_COMMENT,core/meta/inc/TStreamerElement.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TStreamerElement.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TStreamerElement.h:3,Security,checksum,checksum,3,"//!checksum of the base class (used during memberwise streaming)",MatchSource.CODE_COMMENT,core/meta/inc/TStreamerElement.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TStreamerElement.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TStreamerElement.h:16,Integrability,wrap,wrapper,16,"//!Pointer to a wrapper around a custom streamer member function.",MatchSource.CODE_COMMENT,core/meta/inc/TStreamerElement.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TStreamerElement.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TStreamerElement.h:16,Integrability,wrap,wrapper,16,"//!Pointer to a wrapper around a custom convertion streamer member function.",MatchSource.CODE_COMMENT,core/meta/inc/TStreamerElement.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TStreamerElement.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TStreamerElement.h:3,Availability,Error,Error,3,"//!Error message in case of checksum/version mismatch.",MatchSource.CODE_COMMENT,core/meta/inc/TStreamerElement.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TStreamerElement.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TStreamerElement.h:9,Integrability,message,message,9,"//!Error message in case of checksum/version mismatch.",MatchSource.CODE_COMMENT,core/meta/inc/TStreamerElement.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TStreamerElement.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TStreamerElement.h:28,Security,checksum,checksum,28,"//!Error message in case of checksum/version mismatch.",MatchSource.CODE_COMMENT,core/meta/inc/TStreamerElement.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TStreamerElement.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TStreamerElement.h:19,Integrability,inject,injected,19,"// StreamerElement injected by a TSchemaRule. Transient only to preserve forward compatibility.",MatchSource.CODE_COMMENT,core/meta/inc/TStreamerElement.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TStreamerElement.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TStreamerElement.h:19,Security,inject,injected,19,"// StreamerElement injected by a TSchemaRule. Transient only to preserve forward compatibility.",MatchSource.CODE_COMMENT,core/meta/inc/TStreamerElement.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TStreamerElement.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualArray.h:40,Integrability,Wrap,Wrapper,40,/**; \class TVirtualArray; \ingroup IO; Wrapper around an object and giving indirect access to its content; even if the object is not of a class in the Cint/Reflex dictionary.; */,MatchSource.CODE_COMMENT,core/meta/inc/TVirtualArray.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualArray.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualArray.h:85,Security,access,access,85,/**; \class TVirtualArray; \ingroup IO; Wrapper around an object and giving indirect access to its content; even if the object is not of a class in the Cint/Reflex dictionary.; */,MatchSource.CODE_COMMENT,core/meta/inc/TVirtualArray.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualArray.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualObject.h:41,Integrability,Wrap,Wrapper,41,/**; \class TVirtualObject; \ingroup IO. Wrapper around an object and giving indirect access to its content; even if the object is not of a class in the Cint/Reflex dictionary.; */,MatchSource.CODE_COMMENT,core/meta/inc/TVirtualObject.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualObject.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualObject.h:86,Security,access,access,86,/**; \class TVirtualObject; \ingroup IO. Wrapper around an object and giving indirect access to its content; even if the object is not of a class in the Cint/Reflex dictionary.; */,MatchSource.CODE_COMMENT,core/meta/inc/TVirtualObject.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualObject.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualRefProxy.h:2028,Availability,error,error,2028,"ramework in interactive mode in order to; // dereference these objects and access the objects pointed to by; // the reference objects.; //; // Implementations are supplied for ROOT own reference mechanism; // based on instances of the TRef and the TRefArray classes.; //; // To support generality this mechanism was implemented using a; // proxy mechanism, which shields the concrete implementation of the; // reference classes from ROOT. Hence, this mechanism also works for; // references as they are supported by the POOL persistency framework; // and by frameworks like Gaudi.; //; // To enable reference support a concrete sub-class instance of; // the TVirtualRefProxy base class must be attached to the TClass; // instance representing the reference itself. Please see the; // header- and implementation file TRefProxy.h/cxx for details.; // For ROOT's own references this is done simply by a call like:; //; // #include ""TROOT.h""; // #include ""TClass.h""; // #include ""TRefProxy.h""; //; // ...; // gROOT->GetClass(""TRef"")->AdoptReferenceProxy(new TRefProxy());; //; // - GetObject() must return the pointer to the referenced; // object. TTreeFormula then figures out how to access the; // value to be plotted.; // Hence, the actual work is done inside a call to:; //; // void* TRefProxy::GetObject(TFormLeafInfoReference* info, void* data, int); // {; // if ( data ) {; // TRef* ref = (TRef*)((char*)data + info->GetOffset());; // // Dereference TRef and return pointer to object; // void* obj = ref->GetObject();; // if ( obj ) { return obj; }; //; // ... else handle error or implement failover ....; //; //; // The type of the referenced object must either be known at compilation; // time or it must be possible to guess it reading the first TTree entry.; // In this case the following conditions must be met:; // - GetValueClass() must return the TClass to the referenced; // objects (or a base class); //; //______________________________________________________________________________",MatchSource.CODE_COMMENT,core/meta/inc/TVirtualRefProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualRefProxy.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualRefProxy.h:2047,Availability,failover,failover,2047,"ramework in interactive mode in order to; // dereference these objects and access the objects pointed to by; // the reference objects.; //; // Implementations are supplied for ROOT own reference mechanism; // based on instances of the TRef and the TRefArray classes.; //; // To support generality this mechanism was implemented using a; // proxy mechanism, which shields the concrete implementation of the; // reference classes from ROOT. Hence, this mechanism also works for; // references as they are supported by the POOL persistency framework; // and by frameworks like Gaudi.; //; // To enable reference support a concrete sub-class instance of; // the TVirtualRefProxy base class must be attached to the TClass; // instance representing the reference itself. Please see the; // header- and implementation file TRefProxy.h/cxx for details.; // For ROOT's own references this is done simply by a call like:; //; // #include ""TROOT.h""; // #include ""TClass.h""; // #include ""TRefProxy.h""; //; // ...; // gROOT->GetClass(""TRef"")->AdoptReferenceProxy(new TRefProxy());; //; // - GetObject() must return the pointer to the referenced; // object. TTreeFormula then figures out how to access the; // value to be plotted.; // Hence, the actual work is done inside a call to:; //; // void* TRefProxy::GetObject(TFormLeafInfoReference* info, void* data, int); // {; // if ( data ) {; // TRef* ref = (TRef*)((char*)data + info->GetOffset());; // // Dereference TRef and return pointer to object; // void* obj = ref->GetObject();; // if ( obj ) { return obj; }; //; // ... else handle error or implement failover ....; //; //; // The type of the referenced object must either be known at compilation; // time or it must be possible to guess it reading the first TTree entry.; // In this case the following conditions must be met:; // - GetValueClass() must return the TClass to the referenced; // objects (or a base class); //; //______________________________________________________________________________",MatchSource.CODE_COMMENT,core/meta/inc/TVirtualRefProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualRefProxy.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualRefProxy.h:527,Security,access,access,527,"//______________________________________________________________________________; //; // Abstract proxy definition to follow reference objects.; //; //; // Generic Mechanism for Object References; // =======================================; //; // References are a well known mechanism to support persistency; // of entities, which in C++ typically are represented as; // pointers. The generic mechanism allows clients to supply; // hooks to the ROOT framework in interactive mode in order to; // dereference these objects and access the objects pointed to by; // the reference objects.; //; // Implementations are supplied for ROOT own reference mechanism; // based on instances of the TRef and the TRefArray classes.; //; // To support generality this mechanism was implemented using a; // proxy mechanism, which shields the concrete implementation of the; // reference classes from ROOT. Hence, this mechanism also works for; // references as they are supported by the POOL persistency framework; // and by frameworks like Gaudi.; //; // To enable reference support a concrete sub-class instance of; // the TVirtualRefProxy base class must be attached to the TClass; // instance representing the reference itself. Please see the; // header- and implementation file TRefProxy.h/cxx for details.; // For ROOT's own references this is done simply by a call like:; //; // #include ""TROOT.h""; // #include ""TClass.h""; // #include ""TRefProxy.h""; //; // ...; // gROOT->GetClass(""TRef"")->AdoptReferenceProxy(new TRefProxy());; //; // - GetObject() must return the pointer to the referenced; // object. TTreeFormula then figures out how to access the; // value to be plotted.; // Hence, the actual work is done inside a call to:; //; // void* TRefProxy::GetObject(TFormLeafInfoReference* info, void* data, int); // {; // if ( data ) {; // TRef* ref = (TRef*)((char*)data + info->GetOffset());; // // Dereference TRef and return pointer to object; // void* obj = ref->GetObject();; // if ( obj ) { return obj;",MatchSource.CODE_COMMENT,core/meta/inc/TVirtualRefProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualRefProxy.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualRefProxy.h:1633,Security,access,access,1633,"ramework in interactive mode in order to; // dereference these objects and access the objects pointed to by; // the reference objects.; //; // Implementations are supplied for ROOT own reference mechanism; // based on instances of the TRef and the TRefArray classes.; //; // To support generality this mechanism was implemented using a; // proxy mechanism, which shields the concrete implementation of the; // reference classes from ROOT. Hence, this mechanism also works for; // references as they are supported by the POOL persistency framework; // and by frameworks like Gaudi.; //; // To enable reference support a concrete sub-class instance of; // the TVirtualRefProxy base class must be attached to the TClass; // instance representing the reference itself. Please see the; // header- and implementation file TRefProxy.h/cxx for details.; // For ROOT's own references this is done simply by a call like:; //; // #include ""TROOT.h""; // #include ""TClass.h""; // #include ""TRefProxy.h""; //; // ...; // gROOT->GetClass(""TRef"")->AdoptReferenceProxy(new TRefProxy());; //; // - GetObject() must return the pointer to the referenced; // object. TTreeFormula then figures out how to access the; // value to be plotted.; // Hence, the actual work is done inside a call to:; //; // void* TRefProxy::GetObject(TFormLeafInfoReference* info, void* data, int); // {; // if ( data ) {; // TRef* ref = (TRef*)((char*)data + info->GetOffset());; // // Dereference TRef and return pointer to object; // void* obj = ref->GetObject();; // if ( obj ) { return obj; }; //; // ... else handle error or implement failover ....; //; //; // The type of the referenced object must either be known at compilation; // time or it must be possible to guess it reading the first TTree entry.; // In this case the following conditions must be met:; // - GetValueClass() must return the TClass to the referenced; // objects (or a base class); //; //______________________________________________________________________________",MatchSource.CODE_COMMENT,core/meta/inc/TVirtualRefProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualRefProxy.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualRefProxy.h:1340,Usability,simpl,simply,1340,"pically are represented as; // pointers. The generic mechanism allows clients to supply; // hooks to the ROOT framework in interactive mode in order to; // dereference these objects and access the objects pointed to by; // the reference objects.; //; // Implementations are supplied for ROOT own reference mechanism; // based on instances of the TRef and the TRefArray classes.; //; // To support generality this mechanism was implemented using a; // proxy mechanism, which shields the concrete implementation of the; // reference classes from ROOT. Hence, this mechanism also works for; // references as they are supported by the POOL persistency framework; // and by frameworks like Gaudi.; //; // To enable reference support a concrete sub-class instance of; // the TVirtualRefProxy base class must be attached to the TClass; // instance representing the reference itself. Please see the; // header- and implementation file TRefProxy.h/cxx for details.; // For ROOT's own references this is done simply by a call like:; //; // #include ""TROOT.h""; // #include ""TClass.h""; // #include ""TRefProxy.h""; //; // ...; // gROOT->GetClass(""TRef"")->AdoptReferenceProxy(new TRefProxy());; //; // - GetObject() must return the pointer to the referenced; // object. TTreeFormula then figures out how to access the; // value to be plotted.; // Hence, the actual work is done inside a call to:; //; // void* TRefProxy::GetObject(TFormLeafInfoReference* info, void* data, int); // {; // if ( data ) {; // TRef* ref = (TRef*)((char*)data + info->GetOffset());; // // Dereference TRef and return pointer to object; // void* obj = ref->GetObject();; // if ( obj ) { return obj; }; //; // ... else handle error or implement failover ....; //; //; // The type of the referenced object must either be known at compilation; // time or it must be possible to guess it reading the first TTree entry.; // In this case the following conditions must be met:; // - GetValueClass() must return the TClass to the referenced; // ob",MatchSource.CODE_COMMENT,core/meta/inc/TVirtualRefProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualRefProxy.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualRefProxy.h:3,Deployability,Release,Release,3,"// Release the reference proxy (virtual destructor)",MatchSource.CODE_COMMENT,core/meta/inc/TVirtualRefProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualRefProxy.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualRefProxy.h:3,Security,Access,Access,3,"// Access to the target class.; // In the event the value class cannot be specified from the reference; // itself, because the object behind the reference requires a cast,; // the return value must be NULL.; //; // data [IN] Resolved pointer to the referenced object",MatchSource.CODE_COMMENT,core/meta/inc/TVirtualRefProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualRefProxy.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualRefProxy.h:3,Deployability,Update,Update,3,"// Update (and propagate) cached information",MatchSource.CODE_COMMENT,core/meta/inc/TVirtualRefProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualRefProxy.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualRefProxy.h:26,Performance,cache,cached,26,"// Update (and propagate) cached information",MatchSource.CODE_COMMENT,core/meta/inc/TVirtualRefProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualRefProxy.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualRefProxy.h:3,Security,Access,Access,3,"// Access to container size (if container reference (ie TRefArray) etc); //; // info [IN] Pointer to the structure called by TTree::Draw; // to extract the required object information.; // data [IN] Pointer to the reference object; //; // return value: The prepared pointer to the reference.",MatchSource.CODE_COMMENT,core/meta/inc/TVirtualRefProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualRefProxy.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualRefProxy.h:3,Security,Access,Access,3,"// Access referenced object(-data); //; // info [IN] Pointer to the structure called by TTree::Draw; // to extract the required object information.; // data [IN] Pointer to the referenced object; // instance [IN] Item number if ref collection; //; // return value: Pointer to the requested information",MatchSource.CODE_COMMENT,core/meta/inc/TVirtualRefProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualRefProxy.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualStreamerInfo.h:116,Integrability,Interface,Interface,116,"//////////////////////////////////////////////////////////////////////////; // //; // TVirtualStreamerInfo Abstract Interface class //; // //; // Abstract Interface describing Streamer information for one class. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/inc/TVirtualStreamerInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualStreamerInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualStreamerInfo.h:155,Integrability,Interface,Interface,155,"//////////////////////////////////////////////////////////////////////////; // //; // TVirtualStreamerInfo Abstract Interface class //; // //; // Abstract Interface describing Streamer information for one class. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/inc/TVirtualStreamerInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualStreamerInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualStreamerInfo.h:38,Performance,optimiz,optimized,38,"//! true if the StreamerInfo has been optimized",MatchSource.CODE_COMMENT,core/meta/inc/TVirtualStreamerInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualStreamerInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualStreamerInfo.h:10,Performance,optimiz,optimization,10,"//True if optimization on",MatchSource.CODE_COMMENT,core/meta/inc/TVirtualStreamerInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualStreamerInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualStreamerInfo.h:1252,Performance,Cache,Cache,1252,"// clang-format off; /// EReadWrite Enumerator; /// | Enum Constant | Description |; /// |-------------|--------------------|; /// | kBase | Base class element |; /// | kOffsetL | Fixed size array |; /// | kOffsetP | Pointer to object |; /// | kCounter | Counter for array size |; /// | kCharStar | Pointer to array of char |; /// | kLegacyChar | Equal to TDataType's kchar |; /// | kBits | TObject::fBits in case of a referenced object |; /// | kObject | Class derived from TObject, or for TStreamerSTL::fCtype non-pointer elements |; /// | kObjectp | Class* derived from TObject and with comment field //->Class, or for TStreamerSTL::fCtype: pointer elements |; /// | kObjectP | Class* derived from TObject and with NO comment field //->Class |; /// | kAny | Class not derived from TObject |; /// | kAnyp | Class* not derived from TObject with comment field //->Class |; /// | kAnyP | Class* not derived from TObject with NO comment field //->Class |; /// | kAnyPnoVT | Class* not derived from TObject with NO comment field //->Class and Class has NO virtual table |; /// | kSTLp | Pointer to STL container |; /// | kTString | TString, special case |; /// | kTObject | TObject, special case |; /// | kTNamed | TNamed , special case |; /// | kCache | Cache the value in memory than is not part of the object but is accessible via a SchemaRule |; /// | kNoType | Indicator that we don't know the current type because the member does not exist in memory |; /// | kUnsupportedConversion | The member type onfile and in memory can not be converted |; /// | kUnset | default value |",MatchSource.CODE_COMMENT,core/meta/inc/TVirtualStreamerInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualStreamerInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualStreamerInfo.h:1316,Security,access,accessible,1316,"// clang-format off; /// EReadWrite Enumerator; /// | Enum Constant | Description |; /// |-------------|--------------------|; /// | kBase | Base class element |; /// | kOffsetL | Fixed size array |; /// | kOffsetP | Pointer to object |; /// | kCounter | Counter for array size |; /// | kCharStar | Pointer to array of char |; /// | kLegacyChar | Equal to TDataType's kchar |; /// | kBits | TObject::fBits in case of a referenced object |; /// | kObject | Class derived from TObject, or for TStreamerSTL::fCtype non-pointer elements |; /// | kObjectp | Class* derived from TObject and with comment field //->Class, or for TStreamerSTL::fCtype: pointer elements |; /// | kObjectP | Class* derived from TObject and with NO comment field //->Class |; /// | kAny | Class not derived from TObject |; /// | kAnyp | Class* not derived from TObject with comment field //->Class |; /// | kAnyP | Class* not derived from TObject with NO comment field //->Class |; /// | kAnyPnoVT | Class* not derived from TObject with NO comment field //->Class and Class has NO virtual table |; /// | kSTLp | Pointer to STL container |; /// | kTString | TString, special case |; /// | kTObject | TObject, special case |; /// | kTNamed | TNamed , special case |; /// | kCache | Cache the value in memory than is not part of the object but is accessible via a SchemaRule |; /// | kNoType | Indicator that we don't know the current type because the member does not exist in memory |; /// | kUnsupportedConversion | The member type onfile and in memory can not be converted |; /// | kUnset | default value |",MatchSource.CODE_COMMENT,core/meta/inc/TVirtualStreamerInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualStreamerInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualStreamerInfo.h:3,Performance,Cache,Cache,3,"// Cache the value in memory than is not part of the object but is accessible via a SchemaRule",MatchSource.CODE_COMMENT,core/meta/inc/TVirtualStreamerInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualStreamerInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualStreamerInfo.h:67,Security,access,accessible,67,"// Cache the value in memory than is not part of the object but is accessible via a SchemaRule",MatchSource.CODE_COMMENT,core/meta/inc/TVirtualStreamerInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualStreamerInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualStreamerInfo.h:337,Availability,avail,available,337,"/// \brief Generate the TClass and TStreamerInfo for the requested pair.; /// This creates a TVirtualStreamerInfo for the pair and trigger the BuildCheck/Old to; /// provokes the creation of the corresponding TClass. This relies on the dictionary for; /// std::pair<const int, int> to already exist (or the interpreter information being available); /// as it is used as a template.; /// \note The returned object is owned by the caller.",MatchSource.CODE_COMMENT,core/meta/inc/TVirtualStreamerInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualStreamerInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualStreamerInfo.h:11,Integrability,Interface,Interface,11,"//Abstract Interface describing Streamer information for one class",MatchSource.CODE_COMMENT,core/meta/inc/TVirtualStreamerInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualStreamerInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TBaseClass.cxx:258,Modifiability,inherit,inherited,258,/** \class TBaseClass; Each class (see TClass) has a linked list of its base class(es).; This class describes one single base class.; The base class info is obtained via the CINT api.; see class TCling. The base class information is used a.o. in to find all inherited methods.; */,MatchSource.CODE_COMMENT,core/meta/src/TBaseClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TBaseClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TBaseClass.cxx:75,Availability,avail,available,75,"// fSTLType is -1 if not yet evaluated.; // fSTLType is -2 if no fInfo was available.",MatchSource.CODE_COMMENT,core/meta/src/TBaseClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TBaseClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TBaseClass.cxx:161,Modifiability,variab,variables,161,"////////////////////////////////////////////////////////////////////////////////; /// Stream an object of TBaseClass. Triggers the calculation of the; /// cache variables to store them.",MatchSource.CODE_COMMENT,core/meta/src/TBaseClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TBaseClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TBaseClass.cxx:155,Performance,cache,cache,155,"////////////////////////////////////////////////////////////////////////////////; /// Stream an object of TBaseClass. Triggers the calculation of the; /// cache variables to store them.",MatchSource.CODE_COMMENT,core/meta/src/TBaseClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TBaseClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TBaseClass.cxx:26,Performance,cache,cache,26,"// Writing.; // Calculate cache properties first.",MatchSource.CODE_COMMENT,core/meta/src/TBaseClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TBaseClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:209,Security,Hash,Hash,209,"//////////////////////////////////////////////////////////////////////////; // //; // TCheckHashRecursiveRemoveConsistency //; // //; // Utility class to discover whether a class that overload //; // TObject::Hash also (as required) calls RecursiveRemove in its //; // destructor. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/src/TCheckHashRecursiveRemoveConsistency.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:48,Security,Hash,Hash,48,"// Destructor. This class does not overload; // Hash so it can rely on the base class to call; // RecursiveRemove (and hence remove this from the list; // of cleanups).",MatchSource.CODE_COMMENT,core/meta/src/TCheckHashRecursiveRemoveConsistency.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:36,Security,hash,hash,36,"// std::cout << "" Found object with hash = "" << p->fRecordedHash << '\n';; // std::cout << "" Current hash = "" << obj->Hash() << '\n';",MatchSource.CODE_COMMENT,core/meta/src/TCheckHashRecursiveRemoveConsistency.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:101,Security,hash,hash,101,"// std::cout << "" Found object with hash = "" << p->fRecordedHash << '\n';; // std::cout << "" Current hash = "" << obj->Hash() << '\n';",MatchSource.CODE_COMMENT,core/meta/src/TCheckHashRecursiveRemoveConsistency.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:118,Security,Hash,Hash,118,"// std::cout << "" Found object with hash = "" << p->fRecordedHash << '\n';; // std::cout << "" Current hash = "" << obj->Hash() << '\n';",MatchSource.CODE_COMMENT,core/meta/src/TCheckHashRecursiveRemoveConsistency.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:27,Availability,Error,Error,27,"// else; // std::cout << "" Error: the recorded hash and the one returned by Hash are distinct.\n"";",MatchSource.CODE_COMMENT,core/meta/src/TCheckHashRecursiveRemoveConsistency.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:47,Security,hash,hash,47,"// else; // std::cout << "" Error: the recorded hash and the one returned by Hash are distinct.\n"";",MatchSource.CODE_COMMENT,core/meta/src/TCheckHashRecursiveRemoveConsistency.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:76,Security,Hash,Hash,76,"// else; // std::cout << "" Error: the recorded hash and the one returned by Hash are distinct.\n"";",MatchSource.CODE_COMMENT,core/meta/src/TCheckHashRecursiveRemoveConsistency.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:137,Testability,test,test,137,"// Clean up is disable and the object is such that we wont be able to 'mark' it; // as needing a clean up anyway, so we can not actually test it.",MatchSource.CODE_COMMENT,core/meta/src/TCheckHashRecursiveRemoveConsistency.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:17,Availability,Error,Error,17,"// std::cerr << ""Error: old= "" << size << "" new="" << fCont.size() << '\n';; // std::cerr << ""Error "" << classRef.GetName() <<; // "" or one of its base classes override TObject::Hash but does not call TROOT::CallRecursiveRemoveIfNeeded; // in its destructor.\n"";",MatchSource.CODE_COMMENT,core/meta/src/TCheckHashRecursiveRemoveConsistency.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:93,Availability,Error,Error,93,"// std::cerr << ""Error: old= "" << size << "" new="" << fCont.size() << '\n';; // std::cerr << ""Error "" << classRef.GetName() <<; // "" or one of its base classes override TObject::Hash but does not call TROOT::CallRecursiveRemoveIfNeeded; // in its destructor.\n"";",MatchSource.CODE_COMMENT,core/meta/src/TCheckHashRecursiveRemoveConsistency.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:177,Security,Hash,Hash,177,"// std::cerr << ""Error: old= "" << size << "" new="" << fCont.size() << '\n';; // std::cerr << ""Error "" << classRef.GetName() <<; // "" or one of its base classes override TObject::Hash but does not call TROOT::CallRecursiveRemoveIfNeeded; // in its destructor.\n"";",MatchSource.CODE_COMMENT,core/meta/src/TCheckHashRecursiveRemoveConsistency.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:23,Testability,test,testing,23,"// We already did this testing for this class.",MatchSource.CODE_COMMENT,core/meta/src/TCheckHashRecursiveRemoveConsistency.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:123,Security,Hash,HashMember,123,"// We won't be able to check the base class, we need to (try) to check; // this class even-though it does not have a local HashMember.",MatchSource.CODE_COMMENT,core/meta/src/TCheckHashRecursiveRemoveConsistency.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:25,Modifiability,inherit,inherit,25,"// If the class does not inherit from TObject, the setup is always 'correct'; // (or more exactly does not matter).",MatchSource.CODE_COMMENT,core/meta/src/TCheckHashRecursiveRemoveConsistency.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:74,Availability,error,error,74,"// We won't be able to check, so assume the worst but don't issue any; // error message.",MatchSource.CODE_COMMENT,core/meta/src/TCheckHashRecursiveRemoveConsistency.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:80,Integrability,message,message,80,"// We won't be able to check, so assume the worst but don't issue any; // error message.",MatchSource.CODE_COMMENT,core/meta/src/TCheckHashRecursiveRemoveConsistency.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:154,Availability,Error,Error,154,"// Because ClassDefInline does not yet support class template on all platforms,; // we have no ClassDef and thus can not get a good message from TObject::Error.",MatchSource.CODE_COMMENT,core/meta/src/TCheckHashRecursiveRemoveConsistency.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:132,Integrability,message,message,132,"// Because ClassDefInline does not yet support class template on all platforms,; // we have no ClassDef and thus can not get a good message from TObject::Error.",MatchSource.CODE_COMMENT,core/meta/src/TCheckHashRecursiveRemoveConsistency.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:1172,Performance,perform,perform,1172,"; // Author: Rene Brun 07/01/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClass; TClass instances represent classes, structs and namespaces in the ROOT type system. TClass instances are created starting from different sources of information:; 1. TStreamerInfo instances saved in a ROOT file which is opened. This is called in jargon an *emulated TClass*.; 2. From TProtoClass instances saved in a ROOT pcm file created by the dictionary generator and the dictionary itself.; 3. From a lookup in the AST built by cling. If a TClass instance is built through the mechanisms 1. and 2., it does not contain information about methods of the; class/struct/namespace it represents. Conversely, if built through 3. or 1., it does not carry the information which is necessary; to ROOT to perform I/O of instances of the class/struct it represents.; The mechanisms 1., 2. and 3. are not mutually exclusive: it can happen that during the execution of the program, all; the three are triggered, modifying the state of the TClass instance. In order to retrieve a TClass instance from the type system, a query can be executed as follows through the static; TClass::GetClass method:. ~~~ {.cpp}; auto myClassTClass_0 = TClass::GetClass(""myClass"");; auto myClassTClass_1 = TClass::GetClass<myClass>();; auto myClassTClass_2 = TClass::GetClass(myClassTypeInfo);; ~~~. The name of classes is crucial for ROOT. A careful procedure of *name normalization* is carried out for; each and every class. A *normalized name* is a valid C++ class name.; In order to access the name of a class within the ROOT type system, the method TClass::GetName() can be used.; */; //*-*x7.5 macros/layout_class",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:1931,Security,access,access,1931,"; // Author: Rene Brun 07/01/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClass; TClass instances represent classes, structs and namespaces in the ROOT type system. TClass instances are created starting from different sources of information:; 1. TStreamerInfo instances saved in a ROOT file which is opened. This is called in jargon an *emulated TClass*.; 2. From TProtoClass instances saved in a ROOT pcm file created by the dictionary generator and the dictionary itself.; 3. From a lookup in the AST built by cling. If a TClass instance is built through the mechanisms 1. and 2., it does not contain information about methods of the; class/struct/namespace it represents. Conversely, if built through 3. or 1., it does not carry the information which is necessary; to ROOT to perform I/O of instances of the class/struct it represents.; The mechanisms 1., 2. and 3. are not mutually exclusive: it can happen that during the execution of the program, all; the three are triggered, modifying the state of the TClass instance. In order to retrieve a TClass instance from the type system, a query can be executed as follows through the static; TClass::GetClass method:. ~~~ {.cpp}; auto myClassTClass_0 = TClass::GetClass(""myClass"");; auto myClassTClass_1 = TClass::GetClass<myClass>();; auto myClassTClass_2 = TClass::GetClass(myClassTypeInfo);; ~~~. The name of classes is crucial for ROOT. A careful procedure of *name normalization* is carried out for; each and every class. A *normalized name* is a valid C++ class name.; In order to access the name of a class within the ROOT type system, the method TClass::GetName() can be used.; */; //*-*x7.5 macros/layout_class",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:212,Safety,avoid,avoid,212,"// When a new class is created, we need to be able to find; // if there are any existing classes that have the same name; // after any typedefs are expanded. (This only really affects; // template arguments.) To avoid having to search through all classes; // in that case, we keep a hash table mapping from the fully; // typedef-expanded names to the original class names.; // An entry is made in the table only if they are actually different.; //; // In these objects, the TObjString base holds the typedef-expanded; // name (the hash key), and fOrigName holds the original class name; // (the value to which the key maps).; //",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:283,Security,hash,hash,283,"// When a new class is created, we need to be able to find; // if there are any existing classes that have the same name; // after any typedefs are expanded. (This only really affects; // template arguments.) To avoid having to search through all classes; // in that case, we keep a hash table mapping from the fully; // typedef-expanded names to the original class names.; // An entry is made in the table only if they are actually different.; //; // In these objects, the TObjString base holds the typedef-expanded; // name (the hash key), and fOrigName holds the original class name; // (the value to which the key maps).; //",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:531,Security,hash,hash,531,"// When a new class is created, we need to be able to find; // if there are any existing classes that have the same name; // after any typedefs are expanded. (This only really affects; // template arguments.) To avoid having to search through all classes; // in that case, we keep a hash table mapping from the fully; // typedef-expanded names to the original class names.; // An entry is made in the table only if they are actually different.; //; // In these objects, the TObjString base holds the typedef-expanded; // name (the hash key), and fOrigName holds the original class name; // (the value to which the key maps).; //",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:3,Safety,Sanity check,Sanity check,3,"// Sanity check",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:8,Integrability,wrap,wrapper,8,"// This wrapper class allow to avoid putting #include <map> in the; // TROOT.h header file.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:31,Safety,avoid,avoid,31,"// This wrapper class allow to avoid putting #include <map> in the; // TROOT.h header file.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:3,Integrability,Wrap,Wrapper,3,"// Wrapper class for the multimap of DeclId_t and TClass.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:20,Performance,load,loaded,20,"// The class is not loaded, hence it is 'emulated' and the main source of; // information is the StreamerInfo.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:38,Security,access,access,38,"// For the DataModelEvolution we need access to the transient member.; // so we now record them in the list of RealData.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:177,Safety,detect,detect,177,"// Case where the collection dictionary was not requested and; // the content's dictionary was also not requested.; // [This is a super set of what we need, but we can't really detect it :(]",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:176,Security,access,access,176,"////////////////////////////////////////////////////////////////////////////////; /// Internal, default constructor.; ///; /// \note Use `TClass::GetClass(""ClassName"")` to get access to a TClass object for a certain class!",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:321,Integrability,interface,interface,321,"////////////////////////////////////////////////////////////////////////////////; /// Create a TClass object. This object contains the full dictionary; /// of a class. It has list to baseclasses, datamembers and methods.; /// Use this ctor to create a standalone TClass object. Only useful; /// to get a temporary TClass interface to an interpreted class. Used by TTabCom.; ///; /// \note Use `TClass::GetClass(""ClassName"")` to get access to a TClass object for a certain class!",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:432,Security,access,access,432,"////////////////////////////////////////////////////////////////////////////////; /// Create a TClass object. This object contains the full dictionary; /// of a class. It has list to baseclasses, datamembers and methods.; /// Use this ctor to create a standalone TClass object. Only useful; /// to get a temporary TClass interface to an interpreted class. Used by TTabCom.; ///; /// \note Use `TClass::GetClass(""ClassName"")` to get access to a TClass object for a certain class!",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:167,Security,access,access,167,"////////////////////////////////////////////////////////////////////////////////; /// Internal constructor.; ///; /// \note Use `TClass::GetClass(""ClassName"")` to get access to a TClass object for a certain class!",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:229,Security,access,access,229,"////////////////////////////////////////////////////////////////////////////////; /// Internal constructor, mimicing the case of a class fwd declared in the interpreter.; ///; /// \note Use `TClass::GetClass(""ClassName"")` to get access to a TClass object for a certain class!",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:343,Integrability,interface,interface,343,"////////////////////////////////////////////////////////////////////////////////; /// Internal constructor.; ///; /// Create a TClass object. This object contains the full dictionary; /// of a class. It has list to baseclasses, datamembers and methods.; /// Use this ctor to create a standalone TClass object. Most useful; /// to get a TClass interface to an interpreted class. Used by TTabCom.; ///; /// This copies the ClassInfo (i.e. does *not* take ownership of it).; ///; /// \note Use `TClass::GetClass(""class"")` to get access to a TClass object for a certain class!",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:526,Security,access,access,526,"////////////////////////////////////////////////////////////////////////////////; /// Internal constructor.; ///; /// Create a TClass object. This object contains the full dictionary; /// of a class. It has list to baseclasses, datamembers and methods.; /// Use this ctor to create a standalone TClass object. Most useful; /// to get a TClass interface to an interpreted class. Used by TTabCom.; ///; /// This copies the ClassInfo (i.e. does *not* take ownership of it).; ///; /// \note Use `TClass::GetClass(""class"")` to get access to a TClass object for a certain class!",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:163,Security,access,access,163,"////////////////////////////////////////////////////////////////////////////////; /// Internal constructor.; ///; /// \note Use `TClass::GetClass(""class"")` to get access to a TClass object for a certain class!",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:163,Security,access,access,163,"////////////////////////////////////////////////////////////////////////////////; /// Internal constructor.; ///; /// \note Use `TClass::GetClass(""class"")` to get access to a TClass object for a certain class!",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:48,Deployability,update,update,48,"// See also TCling::GenerateTClass() which will update fClassVersion after creation!",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:68,Deployability,update,updated,68,"// move the StreamerInfo immediately so that there are; // properly updated!",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:28,Performance,load,loading,28,"// Advertise ourself as the loading class for this class name",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:19,Performance,Load,LoadClassInfo,19,"// avoids calls to LoadClassInfo() if info is already loaded",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:54,Performance,load,loaded,54,"// avoids calls to LoadClassInfo() if info is already loaded",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:3,Safety,avoid,avoids,3,"// avoids calls to LoadClassInfo() if info is already loaded",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:156,Performance,load,load,156,"// If the TClass is being generated from a ROOT dictionary,; // even though we do not seem to have a CINT dictionary for; // the class, we will will try to load it anyway UNLESS; // the class is an STL container (or string).; // This is because we do not expect the CINT dictionary; // to be present for all STL classes (and we can handle; // the lack of CINT dictionary in that cases).; // However, the cling the dictionary no longer carries; // an instantiation with it, unless we request the loading; // here *or* the user explicitly instantiate the template; // we would not have a ClassInfo for the template; // instantiation.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:495,Performance,load,loading,495,"// If the TClass is being generated from a ROOT dictionary,; // even though we do not seem to have a CINT dictionary for; // the class, we will will try to load it anyway UNLESS; // the class is an STL container (or string).; // This is because we do not expect the CINT dictionary; // to be present for all STL classes (and we can handle; // the lack of CINT dictionary in that cases).; // However, the cling the dictionary no longer carries; // an instantiation with it, unless we request the loading; // here *or* the user explicitly instantiate the template; // we would not have a ClassInfo for the template; // instantiation.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:41,Security,hash,hash,41,"// Make the typedef-expanded -> original hash table entries.; // There may be several entries for any given key.; // We only make entries if the typedef-expanded name; // is different from the original name.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:11,Integrability,interface,interface,11,"// Missing interface:; // fDeclFileLine = gInterpreter->ClassInfo_FileLine( fClassInfo );; // But really do not want to set ImplFileLine as it is currently the; // marker of being 'loaded' or not (reminder loaded == has a TClass bootstrap).",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:181,Performance,load,loaded,181,"// Missing interface:; // fDeclFileLine = gInterpreter->ClassInfo_FileLine( fClassInfo );; // But really do not want to set ImplFileLine as it is currently the; // marker of being 'loaded' or not (reminder loaded == has a TClass bootstrap).",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:206,Performance,load,loaded,206,"// Missing interface:; // fDeclFileLine = gInterpreter->ClassInfo_FileLine( fClassInfo );; // But really do not want to set ImplFileLine as it is currently the; // marker of being 'loaded' or not (reminder loaded == has a TClass bootstrap).",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:55,Safety,safe,safely,55,"// If we have a TClass compiled initialization, we can safely assume that; // there will also be a collection proxy.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:27,Security,hash,hashtables,27,"// Remove from the typedef hashtables.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:120,Security,access,access,120,"// Not owning lists, don't call Delete(); // But this still need to be done first because the TList destructor; // does access the object contained (via GetObject()->TestBit(kCanDelete))",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:166,Testability,Test,TestBit,166,"// Not owning lists, don't call Delete(); // But this still need to be done first because the TList destructor; // does access the object contained (via GetObject()->TestBit(kCanDelete))",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:161,Availability,error,error,161,"// Read a class.rules file which contains one rule per line with comment; // starting with a #; // Returns the number of rules loaded.; // Returns -1 in case of error.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:127,Performance,load,loaded,127,"// Read a class.rules file which contains one rule per line with comment; // starting with a #; // Returns the number of rules loaded.; // Returns -1 in case of error.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:251,Availability,error,error,251,"////////////////////////////////////////////////////////////////////////////////; /// Read a class.rules file which contains one rule per line with comment; /// starting with a #; /// - Returns the number of rules loaded.; /// - Returns -1 in case of error.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:214,Performance,load,loaded,214,"////////////////////////////////////////////////////////////////////////////////; /// Read a class.rules file which contains one rule per line with comment; /// starting with a #; /// - Returns the number of rules loaded.; /// - Returns -1 in case of error.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:1343,Deployability,update,updated,1343,"////////////////////////////////////////////////////////////////////////////////; /// Add a schema evolution customization rule.; /// The syntax of the rule can be either the short form:; /// ~~~ {.cpp}; /// [type=Read] classname membername [attributes=... ] [version=[...] ] [checksum=[...] ] [oldtype=...] [code={...}]; /// ~~~; /// or the long form; /// ~~~ {.cpp}; /// [type=Read] sourceClass=classname [targetclass=newClassname] [ source=""type membername; [type2 membername2]"" ]; /// [target=""membername3;membername4""] [attributes=... ] [version=...] [checksum=...] [code={...}|functionname]; /// ~~~; ///; /// For example to set HepMC::GenVertex::m_event to _not_ owned the object it is pointing to:; /// HepMC::GenVertex m_event attributes=NotOwner; ///; /// Semantic of the tags:; /// - type : the type of the rule, valid values: Read, ReadRaw, Write, WriteRaw, the default is 'Read'.; /// - sourceClass : the name of the class as it is on the rule file; /// - targetClass : the name of the class as it is in the current code ; defaults to the value of sourceClass; /// - source : the types and names of the data members from the class on file that are needed, the list is separated by semi-colons ';'; /// - oldtype: in the short form only, indicates the type on disk of the data member.; /// - target : the names of the data members updated by this rule, the list is separated by semi-colons ';'; /// - attributes : list of possible qualifiers among: Owner, NotOwner; /// - version : list of the version of the class layout that this rule applies to. The syntax can be [1,4,5] or [2-] or [1-3] or [-3]; /// - checksum : comma delimited list of the checksums of the class layout that this rule applies to.; /// - code={...} : code to be executed for the rule or name of the function implementing it.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:277,Security,checksum,checksum,277,"////////////////////////////////////////////////////////////////////////////////; /// Add a schema evolution customization rule.; /// The syntax of the rule can be either the short form:; /// ~~~ {.cpp}; /// [type=Read] classname membername [attributes=... ] [version=[...] ] [checksum=[...] ] [oldtype=...] [code={...}]; /// ~~~; /// or the long form; /// ~~~ {.cpp}; /// [type=Read] sourceClass=classname [targetclass=newClassname] [ source=""type membername; [type2 membername2]"" ]; /// [target=""membername3;membername4""] [attributes=... ] [version=...] [checksum=...] [code={...}|functionname]; /// ~~~; ///; /// For example to set HepMC::GenVertex::m_event to _not_ owned the object it is pointing to:; /// HepMC::GenVertex m_event attributes=NotOwner; ///; /// Semantic of the tags:; /// - type : the type of the rule, valid values: Read, ReadRaw, Write, WriteRaw, the default is 'Read'.; /// - sourceClass : the name of the class as it is on the rule file; /// - targetClass : the name of the class as it is in the current code ; defaults to the value of sourceClass; /// - source : the types and names of the data members from the class on file that are needed, the list is separated by semi-colons ';'; /// - oldtype: in the short form only, indicates the type on disk of the data member.; /// - target : the names of the data members updated by this rule, the list is separated by semi-colons ';'; /// - attributes : list of possible qualifiers among: Owner, NotOwner; /// - version : list of the version of the class layout that this rule applies to. The syntax can be [1,4,5] or [2-] or [1-3] or [-3]; /// - checksum : comma delimited list of the checksums of the class layout that this rule applies to.; /// - code={...} : code to be executed for the rule or name of the function implementing it.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:557,Security,checksum,checksum,557,"////////////////////////////////////////////////////////////////////////////////; /// Add a schema evolution customization rule.; /// The syntax of the rule can be either the short form:; /// ~~~ {.cpp}; /// [type=Read] classname membername [attributes=... ] [version=[...] ] [checksum=[...] ] [oldtype=...] [code={...}]; /// ~~~; /// or the long form; /// ~~~ {.cpp}; /// [type=Read] sourceClass=classname [targetclass=newClassname] [ source=""type membername; [type2 membername2]"" ]; /// [target=""membername3;membername4""] [attributes=... ] [version=...] [checksum=...] [code={...}|functionname]; /// ~~~; ///; /// For example to set HepMC::GenVertex::m_event to _not_ owned the object it is pointing to:; /// HepMC::GenVertex m_event attributes=NotOwner; ///; /// Semantic of the tags:; /// - type : the type of the rule, valid values: Read, ReadRaw, Write, WriteRaw, the default is 'Read'.; /// - sourceClass : the name of the class as it is on the rule file; /// - targetClass : the name of the class as it is in the current code ; defaults to the value of sourceClass; /// - source : the types and names of the data members from the class on file that are needed, the list is separated by semi-colons ';'; /// - oldtype: in the short form only, indicates the type on disk of the data member.; /// - target : the names of the data members updated by this rule, the list is separated by semi-colons ';'; /// - attributes : list of possible qualifiers among: Owner, NotOwner; /// - version : list of the version of the class layout that this rule applies to. The syntax can be [1,4,5] or [2-] or [1-3] or [-3]; /// - checksum : comma delimited list of the checksums of the class layout that this rule applies to.; /// - code={...} : code to be executed for the rule or name of the function implementing it.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:1619,Security,checksum,checksum,1619,"////////////////////////////////////////////////////////////////////////////////; /// Add a schema evolution customization rule.; /// The syntax of the rule can be either the short form:; /// ~~~ {.cpp}; /// [type=Read] classname membername [attributes=... ] [version=[...] ] [checksum=[...] ] [oldtype=...] [code={...}]; /// ~~~; /// or the long form; /// ~~~ {.cpp}; /// [type=Read] sourceClass=classname [targetclass=newClassname] [ source=""type membername; [type2 membername2]"" ]; /// [target=""membername3;membername4""] [attributes=... ] [version=...] [checksum=...] [code={...}|functionname]; /// ~~~; ///; /// For example to set HepMC::GenVertex::m_event to _not_ owned the object it is pointing to:; /// HepMC::GenVertex m_event attributes=NotOwner; ///; /// Semantic of the tags:; /// - type : the type of the rule, valid values: Read, ReadRaw, Write, WriteRaw, the default is 'Read'.; /// - sourceClass : the name of the class as it is on the rule file; /// - targetClass : the name of the class as it is in the current code ; defaults to the value of sourceClass; /// - source : the types and names of the data members from the class on file that are needed, the list is separated by semi-colons ';'; /// - oldtype: in the short form only, indicates the type on disk of the data member.; /// - target : the names of the data members updated by this rule, the list is separated by semi-colons ';'; /// - attributes : list of possible qualifiers among: Owner, NotOwner; /// - version : list of the version of the class layout that this rule applies to. The syntax can be [1,4,5] or [2-] or [1-3] or [-3]; /// - checksum : comma delimited list of the checksums of the class layout that this rule applies to.; /// - code={...} : code to be executed for the rule or name of the function implementing it.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:1658,Security,checksum,checksums,1658,"////////////////////////////////////////////////////////////////////////////////; /// Add a schema evolution customization rule.; /// The syntax of the rule can be either the short form:; /// ~~~ {.cpp}; /// [type=Read] classname membername [attributes=... ] [version=[...] ] [checksum=[...] ] [oldtype=...] [code={...}]; /// ~~~; /// or the long form; /// ~~~ {.cpp}; /// [type=Read] sourceClass=classname [targetclass=newClassname] [ source=""type membername; [type2 membername2]"" ]; /// [target=""membername3;membername4""] [attributes=... ] [version=...] [checksum=...] [code={...}|functionname]; /// ~~~; ///; /// For example to set HepMC::GenVertex::m_event to _not_ owned the object it is pointing to:; /// HepMC::GenVertex m_event attributes=NotOwner; ///; /// Semantic of the tags:; /// - type : the type of the rule, valid values: Read, ReadRaw, Write, WriteRaw, the default is 'Read'.; /// - sourceClass : the name of the class as it is on the rule file; /// - targetClass : the name of the class as it is in the current code ; defaults to the value of sourceClass; /// - source : the types and names of the data members from the class on file that are needed, the list is separated by semi-colons ';'; /// - oldtype: in the short form only, indicates the type on disk of the data member.; /// - target : the names of the data members updated by this rule, the list is separated by semi-colons ';'; /// - attributes : list of possible qualifiers among: Owner, NotOwner; /// - version : list of the version of the class layout that this rule applies to. The syntax can be [1,4,5] or [2-] or [1-3] or [-3]; /// - checksum : comma delimited list of the checksums of the class layout that this rule applies to.; /// - code={...} : code to be executed for the rule or name of the function implementing it.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:109,Modifiability,inherit,inherited,109,"////////////////////////////////////////////////////////////////////////////////; /// Browse external object inherited from TObject.; /// It passes through inheritance tree and calls TBrowser::Add; /// in appropriate cases. Static function.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:156,Modifiability,inherit,inheritance,156,"////////////////////////////////////////////////////////////////////////////////; /// Browse external object inherited from TObject.; /// It passes through inheritance tree and calls TBrowser::Add; /// in appropriate cases. Static function.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:34,Deployability,Update,Update,34,"// When called via TMapFile (e.g. Update()) make sure that the dictionary; // gets allocated on the heap and not in the mapped file.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:83,Energy Efficiency,allocate,allocated,83,"// When called via TMapFile (e.g. Update()) make sure that the dictionary; // gets allocated on the heap and not in the mapped file.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:39,Modifiability,Inherit,InheritsFrom,39,"// CallShowMember will force a call to InheritsFrom, which indirectly; // calls TClass::GetClass. It forces the loading of new typedefs in; // case some of them were not yet loaded.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:112,Performance,load,loading,112,"// CallShowMember will force a call to InheritsFrom, which indirectly; // calls TClass::GetClass. It forces the loading of new typedefs in; // case some of them were not yet loaded.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:174,Performance,load,loaded,174,"// CallShowMember will force a call to InheritsFrom, which indirectly; // calls TClass::GetClass. It forces the loading of new typedefs in; // case some of them were not yet loaded.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:260,Availability,error,error,260,"// This is a transient data member, so it is probably fine to not have; // access to its content. However let's no mark it as definitively setup,; // since another class might use this class for a persistent data member and; // in this case we really want the error message.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:266,Integrability,message,message,266,"// This is a transient data member, so it is probably fine to not have; // access to its content. However let's no mark it as definitively setup,; // since another class might use this class for a persistent data member and; // in this case we really want the error message.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:75,Security,access,access,75,"// This is a transient data member, so it is probably fine to not have; // access to its content. However let's no mark it as definitively setup,; // since another class might use this class for a persistent data member and; // in this case we really want the error message.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:222,Security,access,access,222,"////////////////////////////////////////////////////////////////////////////////; /// Calculate the offset between an object of this class to; /// its base class TObject. The pointer can be adjusted by; /// that offset to access any virtual method of TObject like; /// Streamer() and ShowMembers().",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:34,Deployability,Update,Update,34,"// When called via TMapFile (e.g. Update()) make sure that the dictionary; // gets allocated on the heap and not in the mapped file.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:83,Energy Efficiency,allocate,allocated,83,"// When called via TMapFile (e.g. Update()) make sure that the dictionary; // gets allocated on the heap and not in the mapped file.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:23,Availability,avail,available,23,"// TTree is not always available (for example in rootcling), so we need; // to grab it silently.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:11,Modifiability,inherit,inheritance,11,"// Look at inheritance tree",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:16,Security,access,access,16,"// Need to lock access to TROOT::GetListOfClasses so the cloning happens atomically",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:37,Testability,test,test,37,"// // This code was used too quickly test the STL Emulation layer; // Int_t k = TClassEdit::IsSTLCont(GetName());; // if (k==1||k==-1) return;",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:106,Modifiability,inherit,inheritance,106,"////////////////////////////////////////////////////////////////////////////////; /// Draw detailed class inheritance structure.; /// If a class B inherits from a class A, the description of B is drawn; /// on the right side of the description of A.; /// Member functions overridden by B are shown in class A with a blue line; /// erasing the corresponding member function",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:147,Modifiability,inherit,inherits,147,"////////////////////////////////////////////////////////////////////////////////; /// Draw detailed class inheritance structure.; /// If a class B inherits from a class A, the description of B is drawn; /// on the right side of the description of A.; /// Member functions overridden by B are shown in class A with a blue line; /// erasing the corresponding member function",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:211,Modifiability,inherit,inheritance,211,"////////////////////////////////////////////////////////////////////////////////; /// Return pointer to the base class ""classname"". Returns 0 in case; /// ""classname"" is not a base class. Takes care of multiple inheritance.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:197,Modifiability,inherit,inheritance,197,"////////////////////////////////////////////////////////////////////////////////; /// Return pointer to the base class ""cl"". Returns 0 in case ""cl""; /// is not a base class. Takes care of multiple inheritance.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:21,Modifiability,inherit,inheritance,21,"// otherwise look at inheritance tree",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:313,Modifiability,inherit,inheritance,313,"////////////////////////////////////////////////////////////////////////////////; /// Return data member offset to the base class ""cl"".; /// - Returns -1 in case ""cl"" is not a base class.; /// - Returns -2 if cl is a base class, but we can't find the offset; /// because it's virtual.; /// Takes care of multiple inheritance.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:21,Modifiability,inherit,inheritance,21,"// otherwise look at inheritance tree",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:118,Availability,avail,available,118,"//use option load=kFALSE to avoid a warning like:; //""Warning in <TClass::TClass>: no dictionary for class TRefCnt is available""; //We can not afford to not have the class if it exist, so we; //use kTRUE.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:13,Performance,load,load,13,"//use option load=kFALSE to avoid a warning like:; //""Warning in <TClass::TClass>: no dictionary for class TRefCnt is available""; //We can not afford to not have the class if it exist, so we; //use kTRUE.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:28,Safety,avoid,avoid,28,"//use option load=kFALSE to avoid a warning like:; //""Warning in <TClass::TClass>: no dictionary for class TRefCnt is available""; //We can not afford to not have the class if it exist, so we; //use kTRUE.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:218,Modifiability,inherit,inheritance,218,"////////////////////////////////////////////////////////////////////////////////; /// - Return data member offset to the base class ""cl"".; /// - Returns -1 in case ""cl"" is not a base class.; /// Takes care of multiple inheritance.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:43,Performance,load,loaded,43,"// At least of the ClassInfo have not been loaded in memory yet and; // since there is no virtual base class (or we don't have enough so it; // would not make a difference) we can use the 'static' information",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:95,Performance,optimiz,optimized,95,"// Use assert, so that this line (slow because of the TClassEdit) is completely; // removed in optimized code.; //assert(TestBit(kLoading) || !TClassEdit::IsSTLCont(fName) || fCollectionProxy || 0 == ""The TClass for the STL collection has no collection proxy!"");",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:7,Testability,assert,assert,7,"// Use assert, so that this line (slow because of the TClassEdit) is completely; // removed in optimized code.; //assert(TestBit(kLoading) || !TClassEdit::IsSTLCont(fName) || fCollectionProxy || 0 == ""The TClass for the STL collection has no collection proxy!"");",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:114,Testability,assert,assert,114,"// Use assert, so that this line (slow because of the TClassEdit) is completely; // removed in optimized code.; //assert(TestBit(kLoading) || !TClassEdit::IsSTLCont(fName) || fCollectionProxy || 0 == ""The TClass for the STL collection has no collection proxy!"");",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:121,Testability,Test,TestBit,121,"// Use assert, so that this line (slow because of the TClassEdit) is completely; // removed in optimized code.; //assert(TestBit(kLoading) || !TClassEdit::IsSTLCont(fName) || fCollectionProxy || 0 == ""The TClass for the STL collection has no collection proxy!"");",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:92,Integrability,wrap,wrapper,92,"////////////////////////////////////////////////////////////////////////////////; /// Get a wrapper/accessor function around this class custom streamer (member function).",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:100,Security,access,accessor,100,"////////////////////////////////////////////////////////////////////////////////; /// Get a wrapper/accessor function around this class custom streamer (member function).",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:92,Integrability,wrap,wrapper,92,"////////////////////////////////////////////////////////////////////////////////; /// Get a wrapper/accessor function around this class custom conversion streamer (member function).",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:100,Security,access,accessor,100,"////////////////////////////////////////////////////////////////////////////////; /// Get a wrapper/accessor function around this class custom conversion streamer (member function).",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:165,Performance,load,load,165,"////////////////////////////////////////////////////////////////////////////////; /// Static method returning pointer to TClass of the specified class name.; /// If load is true, an attempt is made to obtain the class by loading; /// the appropriate shared library (directed by the rootmap file).; /// If silent is 'true', do not warn about missing dictionary for the class.; /// (typically used for classes that are used only for transient members); /// Returns `nullptr` in case class is not found.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:221,Performance,load,loading,221,"////////////////////////////////////////////////////////////////////////////////; /// Static method returning pointer to TClass of the specified class name.; /// If load is true, an attempt is made to obtain the class by loading; /// the appropriate shared library (directed by the rootmap file).; /// If silent is 'true', do not warn about missing dictionary for the class.; /// (typically used for classes that are used only for transient members); /// Returns `nullptr` in case class is not found.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:19,Deployability,release,release,19,"// Early return to release the lock without having to execute the; // long-ish normalization.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:171,Availability,avail,available,171,"// We could speed-up some of the search by adding (the equivalent of); //; // if (cl->GetState() == kInterpreter) return cl; //; // In this case, if a ROOT dictionary was available when the TClass; // was first requested it would have been used and if a ROOT dictionary is; // loaded later on TClassTable::Add will take care of updating the TClass.; // So as far as ROOT dictionary are concerned, if the current TClass is; // in interpreted state, we are sure there is nothing to load.; //; // However (see TROOT::LoadClass), the TClass can also be loaded/provided; // by a user provided TClassGenerator. We have no way of knowing whether; // those do (or even can) behave the same way as the ROOT dictionary and; // have the 'dictionary is now available for use' step informs the existing; // TClass that their dictionary is now available.; //we may pass here in case of a dummy class created by TVirtualStreamerInfo",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:745,Availability,avail,available,745,"// We could speed-up some of the search by adding (the equivalent of); //; // if (cl->GetState() == kInterpreter) return cl; //; // In this case, if a ROOT dictionary was available when the TClass; // was first requested it would have been used and if a ROOT dictionary is; // loaded later on TClassTable::Add will take care of updating the TClass.; // So as far as ROOT dictionary are concerned, if the current TClass is; // in interpreted state, we are sure there is nothing to load.; //; // However (see TROOT::LoadClass), the TClass can also be loaded/provided; // by a user provided TClassGenerator. We have no way of knowing whether; // those do (or even can) behave the same way as the ROOT dictionary and; // have the 'dictionary is now available for use' step informs the existing; // TClass that their dictionary is now available.; //we may pass here in case of a dummy class created by TVirtualStreamerInfo",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:830,Availability,avail,available,830,"// We could speed-up some of the search by adding (the equivalent of); //; // if (cl->GetState() == kInterpreter) return cl; //; // In this case, if a ROOT dictionary was available when the TClass; // was first requested it would have been used and if a ROOT dictionary is; // loaded later on TClassTable::Add will take care of updating the TClass.; // So as far as ROOT dictionary are concerned, if the current TClass is; // in interpreted state, we are sure there is nothing to load.; //; // However (see TROOT::LoadClass), the TClass can also be loaded/provided; // by a user provided TClassGenerator. We have no way of knowing whether; // those do (or even can) behave the same way as the ROOT dictionary and; // have the 'dictionary is now available for use' step informs the existing; // TClass that their dictionary is now available.; //we may pass here in case of a dummy class created by TVirtualStreamerInfo",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:277,Performance,load,loaded,277,"// We could speed-up some of the search by adding (the equivalent of); //; // if (cl->GetState() == kInterpreter) return cl; //; // In this case, if a ROOT dictionary was available when the TClass; // was first requested it would have been used and if a ROOT dictionary is; // loaded later on TClassTable::Add will take care of updating the TClass.; // So as far as ROOT dictionary are concerned, if the current TClass is; // in interpreted state, we are sure there is nothing to load.; //; // However (see TROOT::LoadClass), the TClass can also be loaded/provided; // by a user provided TClassGenerator. We have no way of knowing whether; // those do (or even can) behave the same way as the ROOT dictionary and; // have the 'dictionary is now available for use' step informs the existing; // TClass that their dictionary is now available.; //we may pass here in case of a dummy class created by TVirtualStreamerInfo",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:480,Performance,load,load,480,"// We could speed-up some of the search by adding (the equivalent of); //; // if (cl->GetState() == kInterpreter) return cl; //; // In this case, if a ROOT dictionary was available when the TClass; // was first requested it would have been used and if a ROOT dictionary is; // loaded later on TClassTable::Add will take care of updating the TClass.; // So as far as ROOT dictionary are concerned, if the current TClass is; // in interpreted state, we are sure there is nothing to load.; //; // However (see TROOT::LoadClass), the TClass can also be loaded/provided; // by a user provided TClassGenerator. We have no way of knowing whether; // those do (or even can) behave the same way as the ROOT dictionary and; // have the 'dictionary is now available for use' step informs the existing; // TClass that their dictionary is now available.; //we may pass here in case of a dummy class created by TVirtualStreamerInfo",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:514,Performance,Load,LoadClass,514,"// We could speed-up some of the search by adding (the equivalent of); //; // if (cl->GetState() == kInterpreter) return cl; //; // In this case, if a ROOT dictionary was available when the TClass; // was first requested it would have been used and if a ROOT dictionary is; // loaded later on TClassTable::Add will take care of updating the TClass.; // So as far as ROOT dictionary are concerned, if the current TClass is; // in interpreted state, we are sure there is nothing to load.; //; // However (see TROOT::LoadClass), the TClass can also be loaded/provided; // by a user provided TClassGenerator. We have no way of knowing whether; // those do (or even can) behave the same way as the ROOT dictionary and; // have the 'dictionary is now available for use' step informs the existing; // TClass that their dictionary is now available.; //we may pass here in case of a dummy class created by TVirtualStreamerInfo",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:549,Performance,load,loaded,549,"// We could speed-up some of the search by adding (the equivalent of); //; // if (cl->GetState() == kInterpreter) return cl; //; // In this case, if a ROOT dictionary was available when the TClass; // was first requested it would have been used and if a ROOT dictionary is; // loaded later on TClassTable::Add will take care of updating the TClass.; // So as far as ROOT dictionary are concerned, if the current TClass is; // in interpreted state, we are sure there is nothing to load.; //; // However (see TROOT::LoadClass), the TClass can also be loaded/provided; // by a user provided TClassGenerator. We have no way of knowing whether; // those do (or even can) behave the same way as the ROOT dictionary and; // have the 'dictionary is now available for use' step informs the existing; // TClass that their dictionary is now available.; //we may pass here in case of a dummy class created by TVirtualStreamerInfo",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:376,Performance,load,loading,376,"// If there is a @ symbol (followed by a version number) then this is a synthetic class name created; // from an already normalized name for the purpose of supporting schema evolution.; // There is no dictionary or interpreter information about this kind of class, the only; // (undesirable) side-effect of doing the search would be a waste of CPU time and potential; // auto-loading or auto-parsing based on the scope of the name.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:6,Safety,avoid,avoid,6,"// To avoid spurious auto parsing, let's check if the name as-is is; // known in the TClassTable.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:840,Safety,avoid,avoid,840,"// This assertion currently fails because of; // TClass *c1 = TClass::GetClass(""basic_iostream<char,char_traits<char> >"");; // TClass *c2 = TClass::GetClass(""std::iostream"");; // where the TClassEdit normalized name of iostream is basic_iostream<char>; // i.e missing the addition of the default parameter. This is because TClingLookupHelper; // uses only 'part' of TMetaUtils::GetNormalizedName.; // if (!cl) {; // TDataType* dataType = (TDataType*)gROOT->GetListOfTypes()->FindObject(name);; // TClass *altcl = dataType ? (TClass*)gROOT->GetListOfClasses()->FindObject(dataType->GetFullTypeName()) : 0;; // if (altcl && normalizedName != altcl->GetName()); // ::Fatal(""TClass::GetClass"",""The existing name (%s) for %s is different from the normalized name: %s\n"",; // altcl->GetName(), name, normalizedName.c_str());; // }; // We want to avoid auto-parsing due to intentionally missing dictionary for std::pair.; // However, we don't need this special treatement in rootcling (there is no auto-parsing); // and we want to make that the TClass for the pair goes through the regular creation; // mechanism (i.e. in rootcling they should be in kInterpreted state and never in; // kEmulated state) so that they have proper interpreter (ClassInfo) information which; // will be used to create the TProtoClass (if one is requested for the pair).",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:8,Testability,assert,assertion,8,"// This assertion currently fails because of; // TClass *c1 = TClass::GetClass(""basic_iostream<char,char_traits<char> >"");; // TClass *c2 = TClass::GetClass(""std::iostream"");; // where the TClassEdit normalized name of iostream is basic_iostream<char>; // i.e missing the addition of the default parameter. This is because TClingLookupHelper; // uses only 'part' of TMetaUtils::GetNormalizedName.; // if (!cl) {; // TDataType* dataType = (TDataType*)gROOT->GetListOfTypes()->FindObject(name);; // TClass *altcl = dataType ? (TClass*)gROOT->GetListOfClasses()->FindObject(dataType->GetFullTypeName()) : 0;; // if (altcl && normalizedName != altcl->GetName()); // ::Fatal(""TClass::GetClass"",""The existing name (%s) for %s is different from the normalized name: %s\n"",; // altcl->GetName(), name, normalizedName.c_str());; // }; // We want to avoid auto-parsing due to intentionally missing dictionary for std::pair.; // However, we don't need this special treatement in rootcling (there is no auto-parsing); // and we want to make that the TClass for the pair goes through the regular creation; // mechanism (i.e. in rootcling they should be in kInterpreted state and never in; // kEmulated state) so that they have proper interpreter (ClassInfo) information which; // will be used to create the TProtoClass (if one is requested for the pair).",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:43,Performance,load,loaded,43,"// At this point more information has been loaded. This; // information might be pertinent to the normalization of the name.; // For example it might contain or be a typedef for which we don't; // have a forward declaration (eg. typedef to instance of class; // template with default parameters). So let's redo the normalization; // as the new information (eg. typedef in TROOT::GetListOfTypes) might; // lead to a different value.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:35,Performance,load,loaded,35,"// We have not been able to find a loaded TClass, return the Emulated; // TClass if we have one.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:321,Safety,avoid,avoid,321,"// altname now contains the full name of the class including a possible; // namespace if there has been a using namespace statement.; // At least in the case C<string [2]> (normalized) vs C<string[2]> (altname); // the TClassEdit normalization and the TMetaUtils normalization leads to; // two different space layout. To avoid an infinite recursion, we also; // add the test on (altname != name)",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:370,Testability,test,test,370,"// altname now contains the full name of the class including a possible; // namespace if there has been a using namespace statement.; // At least in the case C<string [2]> (normalized) vs C<string[2]> (altname); // the TClassEdit normalization and the TMetaUtils normalization leads to; // two different space layout. To avoid an infinite recursion, we also; // add the test on (altname != name)",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:10,Security,access,access,10,"//protect access to TROOT::GetIdMap",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:100,Performance,load,load,100,"// Note we might need support for typedefs and simple types!; // TDataType *objType = GetType(name, load);; //if (objType) {; // const char *typdfName = objType->GetTypeName();; // if (typdfName && strcmp(typdfName, name)) {; // cl = GetClass(typdfName, load);; // return cl;; // }; // }",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:254,Performance,load,load,254,"// Note we might need support for typedefs and simple types!; // TDataType *objType = GetType(name, load);; //if (objType) {; // const char *typdfName = objType->GetTypeName();; // if (typdfName && strcmp(typdfName, name)) {; // cl = GetClass(typdfName, load);; // return cl;; // }; // }",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:47,Usability,simpl,simple,47,"// Note we might need support for typedefs and simple types!; // TDataType *objType = GetType(name, load);; //if (objType) {; // const char *typdfName = objType->GetTypeName();; // if (typdfName && strcmp(typdfName, name)) {; // cl = GetClass(typdfName, load);; // return cl;; // }; // }",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:32,Testability,test,test,32,"// Re-disable, we just meant to test",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:23,Safety,avoid,avoid,23,"// Disable autoload to avoid potential infinite recursion",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:164,Performance,load,load,164,"////////////////////////////////////////////////////////////////////////////////; /// Static method returning pointer to TClass of the specified ClassInfo.; /// If load is true an attempt is made to obtain the class by loading; /// the appropriate shared library (directed by the rootmap file).; /// If silent is 'true', do not warn about missing dictionary for the class.; /// (typically used for class that are used only for transient members); /// Returns 0 in case class is not found.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:219,Performance,load,loading,219,"////////////////////////////////////////////////////////////////////////////////; /// Static method returning pointer to TClass of the specified ClassInfo.; /// If load is true an attempt is made to obtain the class by loading; /// the appropriate shared library (directed by the rootmap file).; /// If silent is 'true', do not warn about missing dictionary for the class.; /// (typically used for class that are used only for transient members); /// Returns 0 in case class is not found.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:145,Performance,Load,LoadClass,145,"// Technically we need the write lock only for the call to ClassInfo_FullName; // and GenerateTClass but FindObject will take the read lock (and LoadClass will; // take the write lock). Since taking/releasing the lock is expensive, let just; // take the write guard and keep it.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:121,Performance,load,loading,121,"////////////////////////////////////////////////////////////////////////////////; /// Return a pointer to the dictionary loading function generated by; /// rootcint",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:121,Performance,load,loading,121,"////////////////////////////////////////////////////////////////////////////////; /// Return a pointer to the dictionary loading function generated by; /// rootcint",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:16,Usability,simpl,simple,16,"// If this is a simple name there is a chance to find it in the; // StreamerInfo even if we did not find it in the RealData.; // For example an array name would be fArray[3] in RealData but; // just fArray in the streamerInfo.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:19,Usability,simpl,simple,19,"// -- Not found, a simple name, all done.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:270,Integrability,depend,depends,270,"////////////////////////////////////////////////////////////////////////////////; /// Get the list of shared libraries containing the code for class cls.; /// The first library in the list is the one containing the class, the; /// others are the libraries the first one depends on. Returns 0; /// in case the library is not found.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:6,Testability,test,test,6,"// We test again on fCanLoadClassInfo has another thread may have executed it.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:165,Safety,safe,safe,165,"////////////////////////////////////////////////////////////////////////////////; /// Return a list containing the TEnums of a class.; ///; /// The list returned is safe to use from multiple thread without explicitly; /// taking the ROOT global lock.; ///; /// In the case the TClass represents a namespace, the returned list will; /// implicit take the ROOT global lock upon any access (see TListOfEnumsWithLock); ///; /// In the case the TClass represents a class or struct and requestListLoading; /// is true, the list is immutable (and thus safe to access from multiple thread; /// without taking the global lock at all).; ///; /// In the case the TClass represents a class or struct and requestListLoading; /// is false, the list is mutable and thus we return a TListOfEnumsWithLock; /// which will implicit take the ROOT global lock upon any access.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:545,Safety,safe,safe,545,"////////////////////////////////////////////////////////////////////////////////; /// Return a list containing the TEnums of a class.; ///; /// The list returned is safe to use from multiple thread without explicitly; /// taking the ROOT global lock.; ///; /// In the case the TClass represents a namespace, the returned list will; /// implicit take the ROOT global lock upon any access (see TListOfEnumsWithLock); ///; /// In the case the TClass represents a class or struct and requestListLoading; /// is true, the list is immutable (and thus safe to access from multiple thread; /// without taking the global lock at all).; ///; /// In the case the TClass represents a class or struct and requestListLoading; /// is false, the list is mutable and thus we return a TListOfEnumsWithLock; /// which will implicit take the ROOT global lock upon any access.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:380,Security,access,access,380,"////////////////////////////////////////////////////////////////////////////////; /// Return a list containing the TEnums of a class.; ///; /// The list returned is safe to use from multiple thread without explicitly; /// taking the ROOT global lock.; ///; /// In the case the TClass represents a namespace, the returned list will; /// implicit take the ROOT global lock upon any access (see TListOfEnumsWithLock); ///; /// In the case the TClass represents a class or struct and requestListLoading; /// is true, the list is immutable (and thus safe to access from multiple thread; /// without taking the global lock at all).; ///; /// In the case the TClass represents a class or struct and requestListLoading; /// is false, the list is mutable and thus we return a TListOfEnumsWithLock; /// which will implicit take the ROOT global lock upon any access.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:553,Security,access,access,553,"////////////////////////////////////////////////////////////////////////////////; /// Return a list containing the TEnums of a class.; ///; /// The list returned is safe to use from multiple thread without explicitly; /// taking the ROOT global lock.; ///; /// In the case the TClass represents a namespace, the returned list will; /// implicit take the ROOT global lock upon any access (see TListOfEnumsWithLock); ///; /// In the case the TClass represents a class or struct and requestListLoading; /// is true, the list is immutable (and thus safe to access from multiple thread; /// without taking the global lock at all).; ///; /// In the case the TClass represents a class or struct and requestListLoading; /// is false, the list is mutable and thus we return a TListOfEnumsWithLock; /// which will implicit take the ROOT global lock upon any access.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:848,Security,access,access,848,"////////////////////////////////////////////////////////////////////////////////; /// Return a list containing the TEnums of a class.; ///; /// The list returned is safe to use from multiple thread without explicitly; /// taking the ROOT global lock.; ///; /// In the case the TClass represents a namespace, the returned list will; /// implicit take the ROOT global lock upon any access (see TListOfEnumsWithLock); ///; /// In the case the TClass represents a class or struct and requestListLoading; /// is true, the list is immutable (and thus safe to access from multiple thread; /// without taking the global lock at all).; ///; /// In the case the TClass represents a class or struct and requestListLoading; /// is false, the list is mutable and thus we return a TListOfEnumsWithLock; /// which will implicit take the ROOT global lock upon any access.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:46,Performance,load,loaded,46,"// We have a class for which the list was not loaded fully at; // first use.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:164,Performance,load,load,164,"// If the we have a class or struct or union, the order; // of data members is the list is essential since it determines their; // order on file. So we must always load. Also, the list is fixed; // since the language does not allow to add members.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:31,Performance,load,load,31,"// Fast path, no lock? Classes load at creation time.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:31,Performance,load,load,31,"// Fast path, no lock? Classes load at creation time.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:142,Performance,load,load,142,"////////////////////////////////////////////////////////////////////////////////; /// Return list containing the TMethods of a class.; /// If load is true, the list is populated with all the defined function; /// and currently instantiated function template.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:110,Security,access,accessible,110,"////////////////////////////////////////////////////////////////////////////////; /// Returns list of methods accessible by context menu.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:242,Performance,load,loading,242,"////////////////////////////////////////////////////////////////////////////////; /// Check whether a class has a dictionary or not.; /// This is equivalent to ask if a class is coming from a bootstrapping; /// procedure initiated during the loading of a library.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:299,Availability,avail,available,299,"////////////////////////////////////////////////////////////////////////////////; /// Check whether a class has a dictionary or ROOT can load one.; /// This is equivalent to ask HasDictionary() or whether a library is known; /// where it can be loaded from, or whether a Dictionary function is; /// available because the class's dictionary library was already loaded.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:137,Performance,load,load,137,"////////////////////////////////////////////////////////////////////////////////; /// Check whether a class has a dictionary or ROOT can load one.; /// This is equivalent to ask HasDictionary() or whether a library is known; /// where it can be loaded from, or whether a Dictionary function is; /// available because the class's dictionary library was already loaded.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:245,Performance,load,loaded,245,"////////////////////////////////////////////////////////////////////////////////; /// Check whether a class has a dictionary or ROOT can load one.; /// This is equivalent to ask HasDictionary() or whether a library is known; /// where it can be loaded from, or whether a Dictionary function is; /// available because the class's dictionary library was already loaded.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:360,Performance,load,loaded,360,"////////////////////////////////////////////////////////////////////////////////; /// Check whether a class has a dictionary or ROOT can load one.; /// This is equivalent to ask HasDictionary() or whether a library is known; /// where it can be loaded from, or whether a Dictionary function is; /// available because the class's dictionary library was already loaded.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:10,Deployability,update,update,10,"//we must update the class pointers pointing to 'this' in all TStreamerElements",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:116,Performance,load,loading,116,"// Since we are in the process of replacing a TClass by a TClass; // coming from a dictionary, there is no point in loading any; // libraries during this search.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:24,Performance,load,loaded,24,"// if the ClassInfo was loaded for a class with a TClass Init and it; // gets unloaded, should we guess it can be reloaded?",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:103,Performance,cache,caches,103,"////////////////////////////////////////////////////////////////////////////////; /// To clean out all caches.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:199,Security,access,accessible,199,"////////////////////////////////////////////////////////////////////////////////; /// Makes a customizable version of the popup menu list, i.e. makes a list; /// of TClassMenuItem objects of methods accessible by context menu.; /// The standard (and different) way consists in having just one element; /// in this list, corresponding to the whole standard list.; /// Once the customizable version is done, one can remove or add elements.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:113,Performance,perform,perform,113,"// If/when we have access to a copy constructor (or better to a move; // constructor), this function should also perform the data move.; // For now we just information the repository.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:19,Security,access,access,19,"// If/when we have access to a copy constructor (or better to a move; // constructor), this function should also perform the data move.; // For now we just information the repository.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:303,Performance,load,loads,303,"////////////////////////////////////////////////////////////////////////////////; /// Return (create an empty one if needed) the list of functions.; /// The major difference with GetListOfMethod is that this returns; /// the internal type of fMethod and thus can not be made public.; /// It also never 'loads' the content of the list.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:217,Performance,load,loading,217,"////////////////////////////////////////////////////////////////////////////////; /// Return pointer to method without looking at parameters.; /// Does not look in (possible) base classes.; /// Has the side effect of loading all the TMethod object in the list; /// of the class.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:131,Integrability,interface,interface,131,"////////////////////////////////////////////////////////////////////////////////; /// Look for a method in this class that has the interface function; /// address faddr.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:256,Performance,load,load,256,"////////////////////////////////////////////////////////////////////////////////; /// Return the number of methods of this class; /// Note that in case the list of methods is not yet created, it will be done; /// by GetListOfMethods().; /// This will also load/populate the list of methods, to get 'just' the; /// number of currently loaded methods use:; /// cl->GetListOfMethods(false)->GetSize();",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:334,Performance,load,loaded,334,"////////////////////////////////////////////////////////////////////////////////; /// Return the number of methods of this class; /// Note that in case the list of methods is not yet created, it will be done; /// by GetListOfMethods().; /// This will also load/populate the list of methods, to get 'just' the; /// number of currently loaded methods use:; /// cl->GetListOfMethods(false)->GetSize();",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:529,Modifiability,variab,variable,529,"////////////////////////////////////////////////////////////////////////////////; /// returns a pointer to the TVirtualStreamerInfo object for version; /// If the object does not exist, it is created; ///; /// Note: There are two special version numbers:; ///; /// - 0: Use the class version from the currently loaded class library.; /// - -1: Assume no class library loaded (emulated class).; ///; /// Warning: If we create a new streamer info, whether or not the build; /// optimizes is controlled externally to us by a global variable!; /// Don't call us unless you have set that variable properly; /// with TStreamer::Optimize()!; ///",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:583,Modifiability,variab,variable,583,"////////////////////////////////////////////////////////////////////////////////; /// returns a pointer to the TVirtualStreamerInfo object for version; /// If the object does not exist, it is created; ///; /// Note: There are two special version numbers:; ///; /// - 0: Use the class version from the currently loaded class library.; /// - -1: Assume no class library loaded (emulated class).; ///; /// Warning: If we create a new streamer info, whether or not the build; /// optimizes is controlled externally to us by a global variable!; /// Don't call us unless you have set that variable properly; /// with TStreamer::Optimize()!; ///",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:311,Performance,load,loaded,311,"////////////////////////////////////////////////////////////////////////////////; /// returns a pointer to the TVirtualStreamerInfo object for version; /// If the object does not exist, it is created; ///; /// Note: There are two special version numbers:; ///; /// - 0: Use the class version from the currently loaded class library.; /// - -1: Assume no class library loaded (emulated class).; ///; /// Warning: If we create a new streamer info, whether or not the build; /// optimizes is controlled externally to us by a global variable!; /// Don't call us unless you have set that variable properly; /// with TStreamer::Optimize()!; ///",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:368,Performance,load,loaded,368,"////////////////////////////////////////////////////////////////////////////////; /// returns a pointer to the TVirtualStreamerInfo object for version; /// If the object does not exist, it is created; ///; /// Note: There are two special version numbers:; ///; /// - 0: Use the class version from the currently loaded class library.; /// - -1: Assume no class library loaded (emulated class).; ///; /// Warning: If we create a new streamer info, whether or not the build; /// optimizes is controlled externally to us by a global variable!; /// Don't call us unless you have set that variable properly; /// with TStreamer::Optimize()!; ///",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:476,Performance,optimiz,optimizes,476,"////////////////////////////////////////////////////////////////////////////////; /// returns a pointer to the TVirtualStreamerInfo object for version; /// If the object does not exist, it is created; ///; /// Note: There are two special version numbers:; ///; /// - 0: Use the class version from the currently loaded class library.; /// - -1: Assume no class library loaded (emulated class).; ///; /// Warning: If we create a new streamer info, whether or not the build; /// optimizes is controlled externally to us by a global variable!; /// Don't call us unless you have set that variable properly; /// with TStreamer::Optimize()!; ///",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:622,Performance,Optimiz,Optimize,622,"////////////////////////////////////////////////////////////////////////////////; /// returns a pointer to the TVirtualStreamerInfo object for version; /// If the object does not exist, it is created; ///; /// Note: There are two special version numbers:; ///; /// - 0: Use the class version from the currently loaded class library.; /// - -1: Assume no class library loaded (emulated class).; ///; /// Warning: If we create a new streamer info, whether or not the build; /// optimizes is controlled externally to us by a global variable!; /// Don't call us unless you have set that variable properly; /// with TStreamer::Optimize()!; ///",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:48,Performance,load,loaded,48,"// Version 0 is special, it means the currently loaded version.; // We need to set it at the beginning to be able to guess it correctly.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:687,Performance,load,loading,687,"// Note that the access to fClassVersion above is technically not thread-safe with a low probably of problems.; // fClassVersion is not an atomic and is modified TClass::SetClassVersion (called from RootClassVersion via; // ROOT::ResetClassVersion) and is 'somewhat' protected by the atomic fVersionUsed.; // However, direct access to fClassVersion should be replaced by calls to GetClassVersion to set fVersionUsed.; // Even with such a change the code here and in these functions need to be reviewed as a cursory look seem; // to indicates they are not yet properly protection against mutli-thread access.; //; // However, the use of these functions is rare and mostly done at library loading time which should; // in almost all cases preceeds the possibility of GetStreamerInfo being called from multiple thread; // on that same TClass object.; //; // Summary: need careful review but risk of problem is extremely low.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:73,Safety,safe,safe,73,"// Note that the access to fClassVersion above is technically not thread-safe with a low probably of problems.; // fClassVersion is not an atomic and is modified TClass::SetClassVersion (called from RootClassVersion via; // ROOT::ResetClassVersion) and is 'somewhat' protected by the atomic fVersionUsed.; // However, direct access to fClassVersion should be replaced by calls to GetClassVersion to set fVersionUsed.; // Even with such a change the code here and in these functions need to be reviewed as a cursory look seem; // to indicates they are not yet properly protection against mutli-thread access.; //; // However, the use of these functions is rare and mostly done at library loading time which should; // in almost all cases preceeds the possibility of GetStreamerInfo being called from multiple thread; // on that same TClass object.; //; // Summary: need careful review but risk of problem is extremely low.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:888,Safety,risk,risk,888,"// Note that the access to fClassVersion above is technically not thread-safe with a low probably of problems.; // fClassVersion is not an atomic and is modified TClass::SetClassVersion (called from RootClassVersion via; // ROOT::ResetClassVersion) and is 'somewhat' protected by the atomic fVersionUsed.; // However, direct access to fClassVersion should be replaced by calls to GetClassVersion to set fVersionUsed.; // Even with such a change the code here and in these functions need to be reviewed as a cursory look seem; // to indicates they are not yet properly protection against mutli-thread access.; //; // However, the use of these functions is rare and mostly done at library loading time which should; // in almost all cases preceeds the possibility of GetStreamerInfo being called from multiple thread; // on that same TClass object.; //; // Summary: need careful review but risk of problem is extremely low.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:17,Security,access,access,17,"// Note that the access to fClassVersion above is technically not thread-safe with a low probably of problems.; // fClassVersion is not an atomic and is modified TClass::SetClassVersion (called from RootClassVersion via; // ROOT::ResetClassVersion) and is 'somewhat' protected by the atomic fVersionUsed.; // However, direct access to fClassVersion should be replaced by calls to GetClassVersion to set fVersionUsed.; // Even with such a change the code here and in these functions need to be reviewed as a cursory look seem; // to indicates they are not yet properly protection against mutli-thread access.; //; // However, the use of these functions is rare and mostly done at library loading time which should; // in almost all cases preceeds the possibility of GetStreamerInfo being called from multiple thread; // on that same TClass object.; //; // Summary: need careful review but risk of problem is extremely low.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:325,Security,access,access,325,"// Note that the access to fClassVersion above is technically not thread-safe with a low probably of problems.; // fClassVersion is not an atomic and is modified TClass::SetClassVersion (called from RootClassVersion via; // ROOT::ResetClassVersion) and is 'somewhat' protected by the atomic fVersionUsed.; // However, direct access to fClassVersion should be replaced by calls to GetClassVersion to set fVersionUsed.; // Even with such a change the code here and in these functions need to be reviewed as a cursory look seem; // to indicates they are not yet properly protection against mutli-thread access.; //; // However, the use of these functions is rare and mostly done at library loading time which should; // in almost all cases preceeds the possibility of GetStreamerInfo being called from multiple thread; // on that same TClass object.; //; // Summary: need careful review but risk of problem is extremely low.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:600,Security,access,access,600,"// Note that the access to fClassVersion above is technically not thread-safe with a low probably of problems.; // fClassVersion is not an atomic and is modified TClass::SetClassVersion (called from RootClassVersion via; // ROOT::ResetClassVersion) and is 'somewhat' protected by the atomic fVersionUsed.; // However, direct access to fClassVersion should be replaced by calls to GetClassVersion to set fVersionUsed.; // Even with such a change the code here and in these functions need to be reviewed as a cursory look seem; // to indicates they are not yet properly protection against mutli-thread access.; //; // However, the use of these functions is rare and mostly done at library loading time which should; // in almost all cases preceeds the possibility of GetStreamerInfo being called from multiple thread; // on that same TClass object.; //; // Summary: need careful review but risk of problem is extremely low.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:66,Integrability,rout,routine,66,"// Implementation of/for TStreamerInfo::GetStreamerInfo.; // This routine assumes the global lock has been taken.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:53,Safety,abort,abort,53,"// FIXME: Shouldn't we go to -1 here, or better just abort?",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:102,Performance,load,loaded,102,"// When the requested version does not exist we return; // the TVirtualStreamerInfo for the currently loaded class version.; // FIXME: This arguably makes no sense, we should warn and return nothing instead.; // Note: This is done for STL collections; // Note: fClassVersion could be -1 here (for an emulated class).; // This is also the code path take for unversioned classes.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:3,Performance,Cache,Cache,3,"// Cache the current info if we now have it.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:691,Modifiability,variab,variable,691,"////////////////////////////////////////////////////////////////////////////////; /// For the case where the requestor class is emulated and this class is abstract,; /// returns a pointer to the TVirtualStreamerInfo object for version with an emulated; /// representation whether or not the class is loaded.; ///; /// If the object does not exist, it is created; ///; /// Note: There are two special version numbers:; ///; /// - 0: Use the class version from the currently loaded class library.; /// - -1: Assume no class library loaded (emulated class).; ///; /// Warning: If we create a new streamer info, whether or not the build; /// optimizes is controlled externally to us by a global variable!; /// Don't call us unless you have set that variable properly; /// with TStreamer::Optimize()!; ///",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:745,Modifiability,variab,variable,745,"////////////////////////////////////////////////////////////////////////////////; /// For the case where the requestor class is emulated and this class is abstract,; /// returns a pointer to the TVirtualStreamerInfo object for version with an emulated; /// representation whether or not the class is loaded.; ///; /// If the object does not exist, it is created; ///; /// Note: There are two special version numbers:; ///; /// - 0: Use the class version from the currently loaded class library.; /// - -1: Assume no class library loaded (emulated class).; ///; /// Warning: If we create a new streamer info, whether or not the build; /// optimizes is controlled externally to us by a global variable!; /// Don't call us unless you have set that variable properly; /// with TStreamer::Optimize()!; ///",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:300,Performance,load,loaded,300,"////////////////////////////////////////////////////////////////////////////////; /// For the case where the requestor class is emulated and this class is abstract,; /// returns a pointer to the TVirtualStreamerInfo object for version with an emulated; /// representation whether or not the class is loaded.; ///; /// If the object does not exist, it is created; ///; /// Note: There are two special version numbers:; ///; /// - 0: Use the class version from the currently loaded class library.; /// - -1: Assume no class library loaded (emulated class).; ///; /// Warning: If we create a new streamer info, whether or not the build; /// optimizes is controlled externally to us by a global variable!; /// Don't call us unless you have set that variable properly; /// with TStreamer::Optimize()!; ///",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:473,Performance,load,loaded,473,"////////////////////////////////////////////////////////////////////////////////; /// For the case where the requestor class is emulated and this class is abstract,; /// returns a pointer to the TVirtualStreamerInfo object for version with an emulated; /// representation whether or not the class is loaded.; ///; /// If the object does not exist, it is created; ///; /// Note: There are two special version numbers:; ///; /// - 0: Use the class version from the currently loaded class library.; /// - -1: Assume no class library loaded (emulated class).; ///; /// Warning: If we create a new streamer info, whether or not the build; /// optimizes is controlled externally to us by a global variable!; /// Don't call us unless you have set that variable properly; /// with TStreamer::Optimize()!; ///",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:530,Performance,load,loaded,530,"////////////////////////////////////////////////////////////////////////////////; /// For the case where the requestor class is emulated and this class is abstract,; /// returns a pointer to the TVirtualStreamerInfo object for version with an emulated; /// representation whether or not the class is loaded.; ///; /// If the object does not exist, it is created; ///; /// Note: There are two special version numbers:; ///; /// - 0: Use the class version from the currently loaded class library.; /// - -1: Assume no class library loaded (emulated class).; ///; /// Warning: If we create a new streamer info, whether or not the build; /// optimizes is controlled externally to us by a global variable!; /// Don't call us unless you have set that variable properly; /// with TStreamer::Optimize()!; ///",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:638,Performance,optimiz,optimizes,638,"////////////////////////////////////////////////////////////////////////////////; /// For the case where the requestor class is emulated and this class is abstract,; /// returns a pointer to the TVirtualStreamerInfo object for version with an emulated; /// representation whether or not the class is loaded.; ///; /// If the object does not exist, it is created; ///; /// Note: There are two special version numbers:; ///; /// - 0: Use the class version from the currently loaded class library.; /// - -1: Assume no class library loaded (emulated class).; ///; /// Warning: If we create a new streamer info, whether or not the build; /// optimizes is controlled externally to us by a global variable!; /// Don't call us unless you have set that variable properly; /// with TStreamer::Optimize()!; ///",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:784,Performance,Optimiz,Optimize,784,"////////////////////////////////////////////////////////////////////////////////; /// For the case where the requestor class is emulated and this class is abstract,; /// returns a pointer to the TVirtualStreamerInfo object for version with an emulated; /// representation whether or not the class is loaded.; ///; /// If the object does not exist, it is created; ///; /// Note: There are two special version numbers:; ///; /// - 0: Use the class version from the currently loaded class library.; /// - -1: Assume no class library loaded (emulated class).; ///; /// Warning: If we create a new streamer info, whether or not the build; /// optimizes is controlled externally to us by a global variable!; /// Don't call us unless you have set that variable properly; /// with TStreamer::Optimize()!; ///",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:102,Performance,load,loaded,102,"// When the requested version does not exist we return; // the TVirtualStreamerInfo for the currently loaded class version.; // FIXME: This arguably makes no sense, we should warn and return nothing instead.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:24,Availability,avail,available,24,"// Let's take the first available StreamerInfo as a start",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:498,Modifiability,variab,variable,498,"////////////////////////////////////////////////////////////////////////////////; /// For the case where the requestor class is emulated and this class is abstract,; /// returns a pointer to the TVirtualStreamerInfo object for version with an emulated; /// representation whether or not the class is loaded.; ///; /// If the object does not exist, it is created; ///; /// Warning: If we create a new streamer info, whether or not the build; /// optimizes is controlled externally to us by a global variable!; /// Don't call us unless you have set that variable properly; /// with TStreamer::Optimize()!; ///",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:552,Modifiability,variab,variable,552,"////////////////////////////////////////////////////////////////////////////////; /// For the case where the requestor class is emulated and this class is abstract,; /// returns a pointer to the TVirtualStreamerInfo object for version with an emulated; /// representation whether or not the class is loaded.; ///; /// If the object does not exist, it is created; ///; /// Warning: If we create a new streamer info, whether or not the build; /// optimizes is controlled externally to us by a global variable!; /// Don't call us unless you have set that variable properly; /// with TStreamer::Optimize()!; ///",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:300,Performance,load,loaded,300,"////////////////////////////////////////////////////////////////////////////////; /// For the case where the requestor class is emulated and this class is abstract,; /// returns a pointer to the TVirtualStreamerInfo object for version with an emulated; /// representation whether or not the class is loaded.; ///; /// If the object does not exist, it is created; ///; /// Warning: If we create a new streamer info, whether or not the build; /// optimizes is controlled externally to us by a global variable!; /// Don't call us unless you have set that variable properly; /// with TStreamer::Optimize()!; ///",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:445,Performance,optimiz,optimizes,445,"////////////////////////////////////////////////////////////////////////////////; /// For the case where the requestor class is emulated and this class is abstract,; /// returns a pointer to the TVirtualStreamerInfo object for version with an emulated; /// representation whether or not the class is loaded.; ///; /// If the object does not exist, it is created; ///; /// Warning: If we create a new streamer info, whether or not the build; /// optimizes is controlled externally to us by a global variable!; /// Don't call us unless you have set that variable properly; /// with TStreamer::Optimize()!; ///",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:591,Performance,Optimiz,Optimize,591,"////////////////////////////////////////////////////////////////////////////////; /// For the case where the requestor class is emulated and this class is abstract,; /// returns a pointer to the TVirtualStreamerInfo object for version with an emulated; /// representation whether or not the class is loaded.; ///; /// If the object does not exist, it is created; ///; /// Warning: If we create a new streamer info, whether or not the build; /// optimizes is controlled externally to us by a global variable!; /// Don't call us unless you have set that variable properly; /// with TStreamer::Optimize()!; ///",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:102,Performance,load,loaded,102,"// When the requested version does not exist we return; // the TVirtualStreamerInfo for the currently loaded class version.; // FIXME: This arguably makes no sense, we should warn and return nothing instead.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:24,Availability,avail,available,24,"// Let's take the first available StreamerInfo as a start",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:40,Testability,test,test,40,"// We need to tak the lock since we are test and then setting fBits; // and TStreamerInfo::fBits (and the StreamerInfo state in general); // which can also be modified by another thread.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:113,Modifiability,inherit,inherits,113,"////////////////////////////////////////////////////////////////////////////////; /// Return kTRUE if this class inherits from a class with name ""classname"".; /// note that the function returns kTRUE in case classname is the class itself",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:113,Modifiability,inherit,inherits,113,"////////////////////////////////////////////////////////////////////////////////; /// Return kTRUE if this class inherits from class cl.; /// note that the function returns KTRUE in case cl is the class itself",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:181,Availability,down,down,181,"////////////////////////////////////////////////////////////////////////////////; /// Cast obj of this class type up to baseclass cl if up is true.; /// Cast obj of this class type down from baseclass cl if up is false.; /// If this class is not a baseclass of cl return 0, else the pointer; /// to the cl part of this (up) or to this (down).",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:336,Availability,down,down,336,"////////////////////////////////////////////////////////////////////////////////; /// Cast obj of this class type up to baseclass cl if up is true.; /// Cast obj of this class type down from baseclass cl if up is false.; /// If this class is not a baseclass of cl return 0, else the pointer; /// to the cl part of this (up) or to this (down).",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:181,Availability,down,down,181,"////////////////////////////////////////////////////////////////////////////////; /// Cast obj of this class type up to baseclass cl if up is true.; /// Cast obj of this class type down from baseclass cl if up is false.; /// If this class is not a baseclass of cl return 0, else the pointer; /// to the cl part of this (up) or to this (down).",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:336,Availability,down,down,336,"////////////////////////////////////////////////////////////////////////////////; /// Cast obj of this class type up to baseclass cl if up is true.; /// Cast obj of this class type down from baseclass cl if up is false.; /// If this class is not a baseclass of cl return 0, else the pointer; /// to the cl part of this (up) or to this (down).",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:312,Availability,Error,Error,312,"////////////////////////////////////////////////////////////////////////////////; /// Return a pointer to a newly allocated object of this class.; /// The class must have a default constructor. For meaning of; /// defConstructor, see TClass::IsCallingNew().; ///; /// If quiet is true, do no issue a message via Error on case; /// of problems, just return 0.; ///; /// The constructor actually called here can be customized by; /// using the rootcint pragma:; /// ~~~ {.cpp}; /// #pragma link C++ ioctortype UserClass;; /// ~~~; /// For example, with this pragma and a class named MyClass,; /// this method will called the first of the following 3; /// constructors which exists and is public:; /// ~~~ {.cpp}; /// MyClass(UserClass*);; /// MyClass(TRootIOCtor*);; /// MyClass(); // Or a constructor with all its arguments defaulted.; /// ~~~; ///; /// When more than one pragma ioctortype is used, the first seen as priority; /// For example with:; /// ~~~ {.cpp}; /// #pragma link C++ ioctortype UserClass1;; /// #pragma link C++ ioctortype UserClass2;; /// ~~~; /// We look in the following order:; /// ~~~ {.cpp}; /// MyClass(UserClass1*);; /// MyClass(UserClass2*);; /// MyClass(TRootIOCtor*);; /// MyClass(); // Or a constructor with all its arguments defaulted.; /// ~~~",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:114,Energy Efficiency,allocate,allocated,114,"////////////////////////////////////////////////////////////////////////////////; /// Return a pointer to a newly allocated object of this class.; /// The class must have a default constructor. For meaning of; /// defConstructor, see TClass::IsCallingNew().; ///; /// If quiet is true, do no issue a message via Error on case; /// of problems, just return 0.; ///; /// The constructor actually called here can be customized by; /// using the rootcint pragma:; /// ~~~ {.cpp}; /// #pragma link C++ ioctortype UserClass;; /// ~~~; /// For example, with this pragma and a class named MyClass,; /// this method will called the first of the following 3; /// constructors which exists and is public:; /// ~~~ {.cpp}; /// MyClass(UserClass*);; /// MyClass(TRootIOCtor*);; /// MyClass(); // Or a constructor with all its arguments defaulted.; /// ~~~; ///; /// When more than one pragma ioctortype is used, the first seen as priority; /// For example with:; /// ~~~ {.cpp}; /// #pragma link C++ ioctortype UserClass1;; /// #pragma link C++ ioctortype UserClass2;; /// ~~~; /// We look in the following order:; /// ~~~ {.cpp}; /// MyClass(UserClass1*);; /// MyClass(UserClass2*);; /// MyClass(TRootIOCtor*);; /// MyClass(); // Or a constructor with all its arguments defaulted.; /// ~~~",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:300,Integrability,message,message,300,"////////////////////////////////////////////////////////////////////////////////; /// Return a pointer to a newly allocated object of this class.; /// The class must have a default constructor. For meaning of; /// defConstructor, see TClass::IsCallingNew().; ///; /// If quiet is true, do no issue a message via Error on case; /// of problems, just return 0.; ///; /// The constructor actually called here can be customized by; /// using the rootcint pragma:; /// ~~~ {.cpp}; /// #pragma link C++ ioctortype UserClass;; /// ~~~; /// For example, with this pragma and a class named MyClass,; /// this method will called the first of the following 3; /// constructors which exists and is public:; /// ~~~ {.cpp}; /// MyClass(UserClass*);; /// MyClass(TRootIOCtor*);; /// MyClass(); // Or a constructor with all its arguments defaulted.; /// ~~~; ///; /// When more than one pragma ioctortype is used, the first seen as priority; /// For example with:; /// ~~~ {.cpp}; /// #pragma link C++ ioctortype UserClass1;; /// #pragma link C++ ioctortype UserClass2;; /// ~~~; /// We look in the following order:; /// ~~~ {.cpp}; /// MyClass(UserClass1*);; /// MyClass(UserClass2*);; /// MyClass(TRootIOCtor*);; /// MyClass(); // Or a constructor with all its arguments defaulted.; /// ~~~",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:84,Energy Efficiency,allocate,allocated,84,"// See TClass:New; // returns a TClass::ObjectPtr which remembers if the object was allocated; // via a TStreamerInfo.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:28,Integrability,wrap,wrapper,28,"// We have the new operator wrapper function,; // so there is a dictionary and it was generated; // by rootcint, so there should be a default; // constructor we can call through the wrapper.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:182,Integrability,wrap,wrapper,182,"// We have the new operator wrapper function,; // so there is a dictionary and it was generated; // by rootcint, so there should be a default; // constructor we can call through the wrapper.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:2,Availability,Error,Error,2,"//Error(""New"", ""cannot create object of class %s version %d"", GetName(), fClassVersion);",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:62,Integrability,wrap,wrapper,62,"// We have the dictionary but do not have the; // constructor wrapper, so the dictionary was; // not generated by rootcint. Let's try to; // create the object by having the interpreter; // call the new operator, hopefully the class; // library is loaded and there will be a default; // constructor we can call.; // [This is very unlikely to work, but who knows!]",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:247,Performance,load,loaded,247,"// We have the dictionary but do not have the; // constructor wrapper, so the dictionary was; // not generated by rootcint. Let's try to; // create the object by having the interpreter; // call the new operator, hopefully the class; // library is loaded and there will be a default; // constructor we can call.; // [This is very unlikely to work, but who knows!]",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:2,Availability,Error,Error,2,"//Error(""New"", ""cannot create object of class %s version %d"", GetName(), fClassVersion);",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:2,Availability,Error,Error,2,"//Error(""New"", ""cannot create object of class %s version %d"", GetName(), fClassVersion);",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:91,Availability,avail,available,91,"// There is no dictionary at all and we do not have; // the services of a collection proxy available, so; // use the streamer info to approximate calling a; // constructor (basically we just make sure that the; // pointer data members are null, unless they are marked; // as preallocated with the ""->"" comment, in which case; // we default-construct an object to point at).; // Do not register any TObject's that we create; // as a result of creating this object.; // FIXME: Why do we do this?; // FIXME: Partial Answer: Is this because we may never actually deregister them???",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:114,Energy Efficiency,allocate,allocated,114,"////////////////////////////////////////////////////////////////////////////////; /// Return a pointer to a newly allocated object of this class.; /// The class must have a default constructor. For meaning of; /// defConstructor, see TClass::IsCallingNew().",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:114,Energy Efficiency,allocate,allocated,114,"////////////////////////////////////////////////////////////////////////////////; /// Return a pointer to a newly allocated object of this class.; /// The class must have a default constructor. For meaning of; /// defConstructor, see TClass::IsCallingNew().",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:28,Integrability,wrap,wrapper,28,"// We have the new operator wrapper function,; // so there is a dictionary and it was generated; // by rootcint, so there should be a default; // constructor we can call through the wrapper.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:182,Integrability,wrap,wrapper,182,"// We have the new operator wrapper function,; // so there is a dictionary and it was generated; // by rootcint, so there should be a default; // constructor we can call through the wrapper.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:62,Integrability,wrap,wrapper,62,"// We have the dictionary but do not have the; // constructor wrapper, so the dictionary was; // not generated by rootcint. Let's try to; // create the object by having the interpreter; // call the new operator, hopefully the class; // library is loaded and there will be a default; // constructor we can call.; // [This is very unlikely to work, but who knows!]",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:247,Performance,load,loaded,247,"// We have the dictionary but do not have the; // constructor wrapper, so the dictionary was; // not generated by rootcint. Let's try to; // create the object by having the interpreter; // call the new operator, hopefully the class; // library is loaded and there will be a default; // constructor we can call.; // [This is very unlikely to work, but who knows!]",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:91,Availability,avail,available,91,"// There is no dictionary at all and we do not have; // the services of a collection proxy available, so; // use the streamer info to approximate calling a; // constructor (basically we just make sure that the; // pointer data members are null, unless they are marked; // as preallocated with the ""->"" comment, in which case; // we default-construct an object to point at).; // ???BUG??? ???WHY???; // Do not register any TObject's that we create; // as a result of creating this object.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:114,Energy Efficiency,allocate,allocated,114,"////////////////////////////////////////////////////////////////////////////////; /// Return a pointer to a newly allocated array of objects; /// of this class.; /// The class must have a default constructor. For meaning of; /// defConstructor, see TClass::IsCallingNew().",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:114,Energy Efficiency,allocate,allocated,114,"////////////////////////////////////////////////////////////////////////////////; /// Return a pointer to a newly allocated array of objects; /// of this class.; /// The class must have a default constructor. For meaning of; /// defConstructor, see TClass::IsCallingNew().",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:28,Integrability,wrap,wrapper,28,"// We have the new operator wrapper function,; // so there is a dictionary and it was generated; // by rootcint, so there should be a default; // constructor we can call through the wrapper.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:182,Integrability,wrap,wrapper,182,"// We have the new operator wrapper function,; // so there is a dictionary and it was generated; // by rootcint, so there should be a default; // constructor we can call through the wrapper.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:62,Integrability,wrap,wrapper,62,"// We have the dictionary but do not have the; // constructor wrapper, so the dictionary was; // not generated by rootcint. Let's try to; // create the object by having the interpreter; // call the new operator, hopefully the class; // library is loaded and there will be a default; // constructor we can call.; // [This is very unlikely to work, but who knows!]",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:247,Performance,load,loaded,247,"// We have the dictionary but do not have the; // constructor wrapper, so the dictionary was; // not generated by rootcint. Let's try to; // create the object by having the interpreter; // call the new operator, hopefully the class; // library is loaded and there will be a default; // constructor we can call.; // [This is very unlikely to work, but who knows!]",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:91,Availability,avail,available,91,"// There is no dictionary at all and we do not have; // the services of a collection proxy available, so; // use the streamer info to approximate calling a; // constructor (basically we just make sure that the; // pointer data members are null, unless they are marked; // as preallocated with the ""->"" comment, in which case; // we default-construct an object to point at).; // ???BUG??? ???WHY???; // Do not register any TObject's that we create; // as a result of creating this object.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:114,Energy Efficiency,allocate,allocated,114,"////////////////////////////////////////////////////////////////////////////////; /// Return a pointer to a newly allocated object of this class.; /// The class must have a default constructor. For meaning of; /// defConstructor, see TClass::IsCallingNew().",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:114,Energy Efficiency,allocate,allocated,114,"////////////////////////////////////////////////////////////////////////////////; /// Return a pointer to a newly allocated object of this class.; /// The class must have a default constructor. For meaning of; /// defConstructor, see TClass::IsCallingNew().",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:28,Integrability,wrap,wrapper,28,"// We have the new operator wrapper function,; // so there is a dictionary and it was generated; // by rootcint, so there should be a default; // constructor we can call through the wrapper.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:182,Integrability,wrap,wrapper,182,"// We have the new operator wrapper function,; // so there is a dictionary and it was generated; // by rootcint, so there should be a default; // constructor we can call through the wrapper.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:470,Availability,avail,available,470,"// We have the dictionary but do not have the constructor wrapper,; // so the dictionary was not generated by rootcint (it was made either; // by cint or by some external mechanism). Let's try to create the; // object by having the interpreter call the new operator, either the; // class library is loaded and there is a default constructor we can; // call, or the class is interpreted and we will call the default; // constructor that way, or no default constructor is available and; // we fail.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:58,Integrability,wrap,wrapper,58,"// We have the dictionary but do not have the constructor wrapper,; // so the dictionary was not generated by rootcint (it was made either; // by cint or by some external mechanism). Let's try to create the; // object by having the interpreter call the new operator, either the; // class library is loaded and there is a default constructor we can; // call, or the class is interpreted and we will call the default; // constructor that way, or no default constructor is available and; // we fail.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:299,Performance,load,loaded,299,"// We have the dictionary but do not have the constructor wrapper,; // so the dictionary was not generated by rootcint (it was made either; // by cint or by some external mechanism). Let's try to create the; // object by having the interpreter call the new operator, either the; // class library is loaded and there is a default constructor we can; // call, or the class is interpreted and we will call the default; // constructor that way, or no default constructor is available and; // we fail.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:91,Availability,avail,available,91,"// There is no dictionary at all and we do not have; // the services of a collection proxy available, so; // use the streamer info to approximate calling a; // constructor (basically we just make sure that the; // pointer data members are null, unless they are marked; // as preallocated with the ""->"" comment, in which case; // we default-construct an object to point at).; // ???BUG??? ???WHY???; // Do not register any TObject's that we create; // as a result of creating this object.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:26,Integrability,wrap,wrapper,26,"// We have the destructor wrapper, use it.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:22,Integrability,wrap,wrapper,22,"// We have the delete wrapper, use it.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:66,Integrability,wrap,wrapper,66,"// We have the dictionary but do not have the; // destruct/delete wrapper, so the dictionary was; // not generated by rootcint (it could have been; // created by cint or by some external mechanism).; // Let's have the interpreter call the destructor,; // either the code will be in a loaded library,; // or it will be interpreted, otherwise we fail; // because there is no destructor code at all.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:284,Performance,load,loaded,284,"// We have the dictionary but do not have the; // destruct/delete wrapper, so the dictionary was; // not generated by rootcint (it could have been; // created by cint or by some external mechanism).; // Let's have the interpreter call the destructor,; // either the code will be in a loaded library,; // or it will be interpreted, otherwise we fail; // because there is no destructor code at all.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:91,Availability,avail,available,91,"// There is no dictionary at all and we do not have; // the services of a collection proxy available, so; // use the streamer info to approximate calling a; // destructor.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:19,Energy Efficiency,allocate,allocated,19,"// Was this object allocated through TClass?",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:52,Availability,Error,Error,52,"// No, it wasn't, skip special version handling.; //Error(""Destructor2"", ""Attempt to delete unregistered object of class '%s' at address %p!"", GetName(), p);",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:18,Energy Efficiency,allocate,allocated,18,"// The object was allocated using code for the same class version; // as is loaded now. We may proceed without worry.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:76,Performance,load,loaded,76,"// The object was allocated using code for the same class version; // as is loaded now. We may proceed without worry.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:93,Energy Efficiency,allocate,allocate,93,"// The loaded class version is not the same as the version of the code; // which was used to allocate this object. The best we can do is use; // the TVirtualStreamerInfo to try to free up some of the allocated memory.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:200,Energy Efficiency,allocate,allocated,200,"// The loaded class version is not the same as the version of the code; // which was used to allocate this object. The best we can do is use; // the TVirtualStreamerInfo to try to free up some of the allocated memory.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:7,Performance,load,loaded,7,"// The loaded class version is not the same as the version of the code; // which was used to allocate this object. The best we can do is use; // the TVirtualStreamerInfo to try to free up some of the allocated memory.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:28,Integrability,wrap,wrapper,28,"// We have the array delete wrapper, use it.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:63,Integrability,wrap,wrapper,63,"// We have the dictionary but do not have the; // array delete wrapper, so the dictionary was; // not generated by rootcint. Let's try to; // delete the array by having the interpreter; // call the array delete operator, hopefully; // the class library is loaded and there will be; // a destructor we can call.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:256,Performance,load,loaded,256,"// We have the dictionary but do not have the; // array delete wrapper, so the dictionary was; // not generated by rootcint. Let's try to; // delete the array by having the interpreter; // call the array delete operator, hopefully; // the class library is loaded and there will be; // a destructor we can call.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:91,Availability,avail,available,91,"// There is no dictionary at all and we do not have; // the services of a collection proxy available, so; // use the streamer info to approximate calling the; // array destructor.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:25,Energy Efficiency,allocate,allocated,25,"// Was this array object allocated through TClass?",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:48,Availability,Error,Error,48,"// No, it wasn't, we cannot know what to do.; //Error(""DeleteArray"", ""Attempt to delete unregistered array object, element type '%s', at address %p!"", GetName(), p);",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:18,Energy Efficiency,allocate,allocated,18,"// The object was allocated using code for the same class version; // as is loaded now. We may proceed without worry.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:76,Performance,load,loaded,76,"// The object was allocated using code for the same class version; // as is loaded now. We may proceed without worry.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:93,Energy Efficiency,allocate,allocate,93,"// The loaded class version is not the same as the version of the code; // which was used to allocate this array. The best we can do is use; // the TVirtualStreamerInfo to try to free up some of the allocated memory.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:199,Energy Efficiency,allocate,allocated,199,"// The loaded class version is not the same as the version of the code; // which was used to allocate this array. The best we can do is use; // the TVirtualStreamerInfo to try to free up some of the allocated memory.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:7,Performance,load,loaded,7,"// The loaded class version is not the same as the version of the code; // which was used to allocate this array. The best we can do is use; // the TVirtualStreamerInfo to try to free up some of the allocated memory.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:197,Integrability,interface,interface,197,"////////////////////////////////////////////////////////////////////////////////; /// Private function. Set the class version for the 'class' represented by; /// this TClass object. See the public interface:; /// ROOT::ResetClassVersion; /// defined in TClassTable.cxx; ///; /// Note on class version numbers:; /// - If no class number has been specified, TClass::GetVersion will return -1; /// - The Class Version 0 request the whole object to be transient; /// - The Class Version 1, unless specified via ClassDef indicates that the; /// I/O should use the TClass checksum to distinguish the layout of the class",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:566,Security,checksum,checksum,566,"////////////////////////////////////////////////////////////////////////////////; /// Private function. Set the class version for the 'class' represented by; /// this TClass object. See the public interface:; /// ROOT::ResetClassVersion; /// defined in TClassTable.cxx; ///; /// Note on class version numbers:; /// - If no class number has been specified, TClass::GetVersion will return -1; /// - The Class Version 0 request the whole object to be transient; /// - The Class Version 1, unless specified via ClassDef indicates that the; /// I/O should use the TClass checksum to distinguish the layout of the class",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load class description from I/O buffer and return class object.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:161,Performance,load,load,161,"////////////////////////////////////////////////////////////////////////////////; /// Helper function used by TClass::GetClass().; /// This function attempts to load the dictionary for 'classname'; /// either from the TClassTable or from the list of generator.; /// If silent is 'true', do not warn about missing dictionary for the class.; /// (typically used for class that are used only for transient members); ///; /// The 'requestedname' is expected to be already normalized.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:79,Performance,load,loaded,79,"// This function does not (and should not) attempt to check in the; // list of loaded classes or in the typedef.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:161,Performance,load,load,161,"////////////////////////////////////////////////////////////////////////////////; /// Helper function used by TClass::GetClass().; /// This function attempts to load the dictionary for 'classname' from; /// the TClassTable or the autoloader.; /// If silent is 'true', do not warn about missing dictionary for the class.; /// (typically used for class that are used only for transient members); ///; /// The 'requestedname' is expected to be already normalized.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:79,Performance,load,loaded,79,"// This function does not (and should not) attempt to check in the; // list of loaded classes or in the typedef.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:161,Performance,load,load,161,"////////////////////////////////////////////////////////////////////////////////; /// Helper function used by TClass::GetClass().; /// This function attempts to load the dictionary for 'classname'; /// from the list of generator.; /// If silent is 'true', do not warn about missing dictionary for the class.; /// (typically used for class that are used only for transient members); ///; /// The 'requestedname' is expected to be already normalized.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:79,Performance,load,loaded,79,"// This function does not (and should not) attempt to check in the; // list of loaded classes or in the typedef.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:115,Availability,avail,available,115,"////////////////////////////////////////////////////////////////////////////////; /// Try to load the ClassInfo if available. This function may require parsing; /// the header file and/or loading data from the clang pcm. If further calls to; /// this function cannot affect the value of fClassInfo, fCanLoadClassInfo is set; /// to false.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:93,Performance,load,load,93,"////////////////////////////////////////////////////////////////////////////////; /// Try to load the ClassInfo if available. This function may require parsing; /// the header file and/or loading data from the clang pcm. If further calls to; /// this function cannot affect the value of fClassInfo, fCanLoadClassInfo is set; /// to false.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:188,Performance,load,loading,188,"////////////////////////////////////////////////////////////////////////////////; /// Try to load the ClassInfo if available. This function may require parsing; /// the header file and/or loading data from the clang pcm. If further calls to; /// this function cannot affect the value of fClassInfo, fCanLoadClassInfo is set; /// to false.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:36,Performance,load,loaded,36,"// Return if another thread already loaded the info; // while we were waiting for the lock",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:34,Deployability,Update,Update,34,"// When called via TMapFile (e.g. Update()) make sure that the dictionary; // gets allocated on the heap and not in the mapped file.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:83,Energy Efficiency,allocate,allocated,83,"// When called via TMapFile (e.g. Update()) make sure that the dictionary; // gets allocated on the heap and not in the mapped file.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:34,Deployability,Update,Update,34,"// When called via TMapFile (e.g. Update()) make sure that the dictionary; // gets allocated on the heap and not in the mapped file.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:83,Energy Efficiency,allocate,allocated,83,"// When called via TMapFile (e.g. Update()) make sure that the dictionary; // gets allocated on the heap and not in the mapped file.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:113,Modifiability,inherit,inherits,113,"////////////////////////////////////////////////////////////////////////////////; /// Returns true if this class inherits from TObject and if the start of; /// the TObject parts is at the very beginning of the objects.; /// Concretely this means that the following code is proper for this class:; /// ~~~ {.cpp}; /// ThisClass *ptr;; /// void *void_ptr = (void)ptr;; /// TObject *obj = (TObject*)void_ptr;; /// ~~~; /// This code would be wrong if 'ThisClass' did not inherit 'first' from; /// TObject.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:468,Modifiability,inherit,inherit,468,"////////////////////////////////////////////////////////////////////////////////; /// Returns true if this class inherits from TObject and if the start of; /// the TObject parts is at the very beginning of the objects.; /// Concretely this means that the following code is proper for this class:; /// ~~~ {.cpp}; /// ThisClass *ptr;; /// void *void_ptr = (void)ptr;; /// TObject *obj = (TObject*)void_ptr;; /// ~~~; /// This code would be wrong if 'ThisClass' did not inherit 'first' from; /// TObject.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:112,Modifiability,inherit,inherits,112,"////////////////////////////////////////////////////////////////////////////////; /// Return kTRUE is the class inherits from TObject.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:209,Energy Efficiency,efficient,efficiently,209,"////////////////////////////////////////////////////////////////////////////////; /// Do the initialization that can only be done after the CINT dictionary has; /// been fully populated and can not be delayed efficiently.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:35,Performance,load,loaded,35,"// In the case of a Foreign class (loaded class without a Streamer function); // we reset fClassVersion to be -1 so that the current TVirtualStreamerInfo will not; // be confused with a previously loaded streamerInfo.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:197,Performance,load,loaded,197,"// In the case of a Foreign class (loaded class without a Streamer function); // we reset fClassVersion to be -1 so that the current TVirtualStreamerInfo will not; // be confused with a previously loaded streamerInfo.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:90,Performance,load,loaded,90,"// Here we need to check whether this TVirtualStreamerInfo (which presumably has been; // loaded from a file) is consistent with the definition in the library we just loaded.; // BuildCheck is not appropriate here since it check a streamerinfo against the; // 'current streamerinfo' which, at time point, would be the same as 'info'!",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:167,Performance,load,loaded,167,"// Here we need to check whether this TVirtualStreamerInfo (which presumably has been; // loaded from a file) is consistent with the definition in the library we just loaded.; // BuildCheck is not appropriate here since it check a streamerinfo against the; // 'current streamerinfo' which, at time point, would be the same as 'info'!",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:3,Deployability,Update,Update,3,"// Update the related pair's TClass if it has already been created.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:454,Modifiability,inherit,inherits,454,"////////////////////////////////////////////////////////////////////////////////; /// Returns the properties of the TClass as a bit field stored as a `Long_t` value.; ///; /// The bit values used for the return value are defined in the enum EProperty (in TDictionary.h); ///; /// Also sets `TObject::fBits` and `fStreamerType` to cache information about the; /// class. The bits stored in `TObject::fBits` are; /// ~~~ {.cpp}; /// kIsTObject : the class inherits from TObject; /// kStartWithTObject: TObject is the left-most class in the inheritance tree; /// kIsForeign : the class doe not have a Streamer method; /// ~~~; /// The value of `fStreamerType` are; /// ~~~ {.cpp}; /// kTObject : the class inherits from TObject; /// kForeign : the class does not have a Streamer method; /// kInstrumented: the class does have a Streamer method; /// kExternal: the class has a free standing way of streaming itself; /// kEmulatedStreamer: the class is missing its shared library.; /// ~~~; ///; /// Implementation note: the data member fProperty has the value -1; /// until it is initialized.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:538,Modifiability,inherit,inheritance,538,"////////////////////////////////////////////////////////////////////////////////; /// Returns the properties of the TClass as a bit field stored as a `Long_t` value.; ///; /// The bit values used for the return value are defined in the enum EProperty (in TDictionary.h); ///; /// Also sets `TObject::fBits` and `fStreamerType` to cache information about the; /// class. The bits stored in `TObject::fBits` are; /// ~~~ {.cpp}; /// kIsTObject : the class inherits from TObject; /// kStartWithTObject: TObject is the left-most class in the inheritance tree; /// kIsForeign : the class doe not have a Streamer method; /// ~~~; /// The value of `fStreamerType` are; /// ~~~ {.cpp}; /// kTObject : the class inherits from TObject; /// kForeign : the class does not have a Streamer method; /// kInstrumented: the class does have a Streamer method; /// kExternal: the class has a free standing way of streaming itself; /// kEmulatedStreamer: the class is missing its shared library.; /// ~~~; ///; /// Implementation note: the data member fProperty has the value -1; /// until it is initialized.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:703,Modifiability,inherit,inherits,703,"////////////////////////////////////////////////////////////////////////////////; /// Returns the properties of the TClass as a bit field stored as a `Long_t` value.; ///; /// The bit values used for the return value are defined in the enum EProperty (in TDictionary.h); ///; /// Also sets `TObject::fBits` and `fStreamerType` to cache information about the; /// class. The bits stored in `TObject::fBits` are; /// ~~~ {.cpp}; /// kIsTObject : the class inherits from TObject; /// kStartWithTObject: TObject is the left-most class in the inheritance tree; /// kIsForeign : the class doe not have a Streamer method; /// ~~~; /// The value of `fStreamerType` are; /// ~~~ {.cpp}; /// kTObject : the class inherits from TObject; /// kForeign : the class does not have a Streamer method; /// kInstrumented: the class does have a Streamer method; /// kExternal: the class has a free standing way of streaming itself; /// kEmulatedStreamer: the class is missing its shared library.; /// ~~~; ///; /// Implementation note: the data member fProperty has the value -1; /// until it is initialized.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:330,Performance,cache,cache,330,"////////////////////////////////////////////////////////////////////////////////; /// Returns the properties of the TClass as a bit field stored as a `Long_t` value.; ///; /// The bit values used for the return value are defined in the enum EProperty (in TDictionary.h); ///; /// Also sets `TObject::fBits` and `fStreamerType` to cache information about the; /// class. The bits stored in `TObject::fBits` are; /// ~~~ {.cpp}; /// kIsTObject : the class inherits from TObject; /// kStartWithTObject: TObject is the left-most class in the inheritance tree; /// kIsForeign : the class doe not have a Streamer method; /// ~~~; /// The value of `fStreamerType` are; /// ~~~ {.cpp}; /// kTObject : the class inherits from TObject; /// kForeign : the class does not have a Streamer method; /// kInstrumented: the class does have a Streamer method; /// kExternal: the class has a free standing way of streaming itself; /// kEmulatedStreamer: the class is missing its shared library.; /// ~~~; ///; /// Implementation note: the data member fProperty has the value -1; /// until it is initialized.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:3,Safety,Avoid,Avoid,3,"// Avoid asking about the class when it is still building",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:34,Deployability,Update,Update,34,"// When called via TMapFile (e.g. Update()) make sure that the dictionary; // gets allocated on the heap and not in the mapped file.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:83,Energy Efficiency,allocate,allocated,83,"// When called via TMapFile (e.g. Update()) make sure that the dictionary; // gets allocated on the heap and not in the mapped file.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:16,Modifiability,inherit,inheritance,16,"// Is it DIRECT inheritance from TObject?",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:94,Integrability,rout,routine,94,"// This code used to use ClassInfo_Has|IsValidMethod but since v6; // they return true if the routine is defined in the class or any of; // its parent. We explicitly want to know whether the function is; // defined locally.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:407,Performance,load,load,407,"// In the case where the TClass for one of ROOT's core class; // (eg TClonesArray for map<int,TClonesArray*>) is requested; // during the execution of rootcling, we could end up in a situation; // where we should have the information (since TClonesArray has; // a dictionary as part of libCore) but do not because the user; // only include a forward declaration of TClonesArray and we do not; // forcefully load the header file either (because the autoparsing; // is intentionally disabled).",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:79,Testability,test,test,79,"// Must set this last since other threads may read fProperty; // and think all test bits have been properly set.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:95,Integrability,rout,routine,95,"////////////////////////////////////////////////////////////////////////////////; /// Internal routine to set calculate the class properties that can only be; /// known at run-time, for example whether the Hash member function and the; /// destructor are consistent.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:206,Security,Hash,Hash,206,"////////////////////////////////////////////////////////////////////////////////; /// Internal routine to set calculate the class properties that can only be; /// known at run-time, for example whether the Hash member function and the; /// destructor are consistent.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:144,Availability,down,downside,144,"// For now, no need to lock this routines as fRuntimeProperties is; // the only atomic set here and this is done at the end; // and there is no downside if the execution is done twice.; // Note SetRuntimeProperties is set to const as it is technically; // thread-safe.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:33,Integrability,rout,routines,33,"// For now, no need to lock this routines as fRuntimeProperties is; // the only atomic set here and this is done at the end; // and there is no downside if the execution is done twice.; // Note SetRuntimeProperties is set to const as it is technically; // thread-safe.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:263,Safety,safe,safe,263,"// For now, no need to lock this routines as fRuntimeProperties is; // the only atomic set here and this is done at the end; // and there is no downside if the execution is done twice.; // Note SetRuntimeProperties is set to const as it is technically; // thread-safe.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:95,Integrability,rout,routine,95,"////////////////////////////////////////////////////////////////////////////////; /// Internal routine to set fStreamerImpl based on the value of; /// fStreamerType.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:100,Deployability,install,installs,100,"////////////////////////////////////////////////////////////////////////////////; /// This function installs a global IsA function for this class.; /// The global IsA function will be used if there is no local IsA function (fIsA); ///; /// A global IsA function has the signature:; ///; /// ~~~ {.cpp}; /// TClass *func( TClass *cl, const void *obj);; /// ~~~; ///; /// 'cl' is a pointer to the TClass object that corresponds to the; /// 'pointer type' used to retrieve the value 'obj'; ///; /// For example with:; /// ~~~ {.cpp}; /// TNamed * m = new TNamed(""example"",""test"");; /// TObject* o = m; /// ~~~; /// and; /// the global IsA function would be called with TObject::Class() as; /// the first parameter and the exact numerical value in the pointer; /// 'o'.; ///; /// In other word, inside the global IsA function. it is safe to C-style; /// cast the value of 'obj' into a pointer to the class described by 'cl'.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:829,Safety,safe,safe,829,"////////////////////////////////////////////////////////////////////////////////; /// This function installs a global IsA function for this class.; /// The global IsA function will be used if there is no local IsA function (fIsA); ///; /// A global IsA function has the signature:; ///; /// ~~~ {.cpp}; /// TClass *func( TClass *cl, const void *obj);; /// ~~~; ///; /// 'cl' is a pointer to the TClass object that corresponds to the; /// 'pointer type' used to retrieve the value 'obj'; ///; /// For example with:; /// ~~~ {.cpp}; /// TNamed * m = new TNamed(""example"",""test"");; /// TObject* o = m; /// ~~~; /// and; /// the global IsA function would be called with TObject::Class() as; /// the first parameter and the exact numerical value in the pointer; /// 'o'.; ///; /// In other word, inside the global IsA function. it is safe to C-style; /// cast the value of 'obj' into a pointer to the class described by 'cl'.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:570,Testability,test,test,570,"////////////////////////////////////////////////////////////////////////////////; /// This function installs a global IsA function for this class.; /// The global IsA function will be used if there is no local IsA function (fIsA); ///; /// A global IsA function has the signature:; ///; /// ~~~ {.cpp}; /// TClass *func( TClass *cl, const void *obj);; /// ~~~; ///; /// 'cl' is a pointer to the TClass object that corresponds to the; /// 'pointer type' used to retrieve the value 'obj'; ///; /// For example with:; /// ~~~ {.cpp}; /// TNamed * m = new TNamed(""example"",""test"");; /// TObject* o = m; /// ~~~; /// and; /// the global IsA function would be called with TObject::Class() as; /// the first parameter and the exact numerical value in the pointer; /// 'o'.; ///; /// In other word, inside the global IsA function. it is safe to C-style; /// cast the value of 'obj' into a pointer to the class described by 'cl'.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:1182,Availability,Error,Error,1182,"// info is specified, nothing to do, except that we should verify; // that it contains a valid descriptor.; /*; TDataMember *dm;; Int_t nch = info ? strlen(info) : 0;; Bool_t update = kTRUE;; if (nch != 0) {; //decode strings like ""TObject;TAttLine;fA;fB;Int_t i,j,k;""; char *save, *temp, *blank, *colon, *comma;; save = new char[10000];; temp = save;; strlcpy(temp,info,10000);; //remove heading and trailing blanks; while (*temp == ' ') temp++;; while (save[nch-1] == ' ') {nch--; save[nch] = 0;}; if (nch == 0) {delete [] save; return;}; if (save[nch-1] != ';') {save[nch] = ';'; save[nch+1] = 0;}; //remove blanks around , or ;; while ((blank = strstr(temp,""; ""))) strcpy(blank+1,blank+2);; while ((blank = strstr(temp,"" ;""))) strcpy(blank, blank+1);; while ((blank = strstr(temp,"", ""))) strcpy(blank+1,blank+2);; while ((blank = strstr(temp,"" ,""))) strcpy(blank, blank+1);; while ((blank = strstr(temp,"" ""))) strcpy(blank, blank+1);; //loop on tokens separated by ;; char *final = new char[1000];; char token[100];; while ((colon=strchr(temp,';'))) {; *colon = 0;; strlcpy(token,temp,100);; blank = strchr(token,' ');; if (blank) {; *blank = 0;; if (!gROOT->GetType(token)) {; Error(""SetStreamerInfo"",""Illegal type: %s in %s"",token,info);; return;; }; while (blank) {; strlcat(final,token,1000);; strlcat(final,"" "",1000);; comma = strchr(blank+1,','); if (comma) *comma=0;; strlcat(final,blank+1,1000);; strlcat(final,"";"",1000);; blank = comma;; }. } else {; if (TClass::GetClass(token,update)) {; //a class name; strlcat(final,token,1000); strlcat(final,"";"",1000);; } else {; //a data member name; dm = (TDataMember*)GetListOfDataMembers()->FindObject(token);; if (dm) {; strlcat(final,dm->GetFullTypeName(),1000);; strlcat(final,"" "",1000);; strlcat(final,token,1000); strlcat(final,"";"",1000);; } else {; Error(""SetStreamerInfo"",""Illegal name: %s in %s"",token,info);; return;; }; }; update = kFALSE;; }; temp = colon+1;; if (*temp == 0) break;; }; //// fStreamerInfo = final;; delete [] final;; ",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:1811,Availability,Error,Error,1811,"nk, blank+1);; while ((blank = strstr(temp,"", ""))) strcpy(blank+1,blank+2);; while ((blank = strstr(temp,"" ,""))) strcpy(blank, blank+1);; while ((blank = strstr(temp,"" ""))) strcpy(blank, blank+1);; //loop on tokens separated by ;; char *final = new char[1000];; char token[100];; while ((colon=strchr(temp,';'))) {; *colon = 0;; strlcpy(token,temp,100);; blank = strchr(token,' ');; if (blank) {; *blank = 0;; if (!gROOT->GetType(token)) {; Error(""SetStreamerInfo"",""Illegal type: %s in %s"",token,info);; return;; }; while (blank) {; strlcat(final,token,1000);; strlcat(final,"" "",1000);; comma = strchr(blank+1,','); if (comma) *comma=0;; strlcat(final,blank+1,1000);; strlcat(final,"";"",1000);; blank = comma;; }. } else {; if (TClass::GetClass(token,update)) {; //a class name; strlcat(final,token,1000); strlcat(final,"";"",1000);; } else {; //a data member name; dm = (TDataMember*)GetListOfDataMembers()->FindObject(token);; if (dm) {; strlcat(final,dm->GetFullTypeName(),1000);; strlcat(final,"" "",1000);; strlcat(final,token,1000); strlcat(final,"";"",1000);; } else {; Error(""SetStreamerInfo"",""Illegal name: %s in %s"",token,info);; return;; }; }; update = kFALSE;; }; temp = colon+1;; if (*temp == 0) break;; }; //// fStreamerInfo = final;; delete [] final;; delete [] save;; return;; }. //info is empty. Let's build the default Streamer descriptor. char *temp = new char[10000];; temp[0] = 0;; char local[100];. //add list of base classes; TIter nextb(GetListOfBases());; TBaseClass *base;; while ((base = (TBaseClass*) nextb())) {; snprintf(local,100,""%s;"",base->GetName());; strlcat(temp,local,10000);; }. //add list of data members and types; TIter nextd(GetListOfDataMembers());; while ((dm = (TDataMember *) nextd())) {; if (dm->IsEnum()) continue;; if (!dm->IsPersistent()) continue;; Long_t property = dm->Property();; if (property & kIsStatic) continue;; TClass *acl = TClass::GetClass(dm->GetTypeName(),update);; update = kFALSE;; if (acl) {; if (acl->GetClassVersion() == 0) continue;; }.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:175,Deployability,update,update,175,"// info is specified, nothing to do, except that we should verify; // that it contains a valid descriptor.; /*; TDataMember *dm;; Int_t nch = info ? strlen(info) : 0;; Bool_t update = kTRUE;; if (nch != 0) {; //decode strings like ""TObject;TAttLine;fA;fB;Int_t i,j,k;""; char *save, *temp, *blank, *colon, *comma;; save = new char[10000];; temp = save;; strlcpy(temp,info,10000);; //remove heading and trailing blanks; while (*temp == ' ') temp++;; while (save[nch-1] == ' ') {nch--; save[nch] = 0;}; if (nch == 0) {delete [] save; return;}; if (save[nch-1] != ';') {save[nch] = ';'; save[nch+1] = 0;}; //remove blanks around , or ;; while ((blank = strstr(temp,""; ""))) strcpy(blank+1,blank+2);; while ((blank = strstr(temp,"" ;""))) strcpy(blank, blank+1);; while ((blank = strstr(temp,"", ""))) strcpy(blank+1,blank+2);; while ((blank = strstr(temp,"" ,""))) strcpy(blank, blank+1);; while ((blank = strstr(temp,"" ""))) strcpy(blank, blank+1);; //loop on tokens separated by ;; char *final = new char[1000];; char token[100];; while ((colon=strchr(temp,';'))) {; *colon = 0;; strlcpy(token,temp,100);; blank = strchr(token,' ');; if (blank) {; *blank = 0;; if (!gROOT->GetType(token)) {; Error(""SetStreamerInfo"",""Illegal type: %s in %s"",token,info);; return;; }; while (blank) {; strlcat(final,token,1000);; strlcat(final,"" "",1000);; comma = strchr(blank+1,','); if (comma) *comma=0;; strlcat(final,blank+1,1000);; strlcat(final,"";"",1000);; blank = comma;; }. } else {; if (TClass::GetClass(token,update)) {; //a class name; strlcat(final,token,1000); strlcat(final,"";"",1000);; } else {; //a data member name; dm = (TDataMember*)GetListOfDataMembers()->FindObject(token);; if (dm) {; strlcat(final,dm->GetFullTypeName(),1000);; strlcat(final,"" "",1000);; strlcat(final,token,1000); strlcat(final,"";"",1000);; } else {; Error(""SetStreamerInfo"",""Illegal name: %s in %s"",token,info);; return;; }; }; update = kFALSE;; }; temp = colon+1;; if (*temp == 0) break;; }; //// fStreamerInfo = final;; delete [] final;; ",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:1491,Deployability,update,update,1491,"nk, blank+1);; while ((blank = strstr(temp,"", ""))) strcpy(blank+1,blank+2);; while ((blank = strstr(temp,"" ,""))) strcpy(blank, blank+1);; while ((blank = strstr(temp,"" ""))) strcpy(blank, blank+1);; //loop on tokens separated by ;; char *final = new char[1000];; char token[100];; while ((colon=strchr(temp,';'))) {; *colon = 0;; strlcpy(token,temp,100);; blank = strchr(token,' ');; if (blank) {; *blank = 0;; if (!gROOT->GetType(token)) {; Error(""SetStreamerInfo"",""Illegal type: %s in %s"",token,info);; return;; }; while (blank) {; strlcat(final,token,1000);; strlcat(final,"" "",1000);; comma = strchr(blank+1,','); if (comma) *comma=0;; strlcat(final,blank+1,1000);; strlcat(final,"";"",1000);; blank = comma;; }. } else {; if (TClass::GetClass(token,update)) {; //a class name; strlcat(final,token,1000); strlcat(final,"";"",1000);; } else {; //a data member name; dm = (TDataMember*)GetListOfDataMembers()->FindObject(token);; if (dm) {; strlcat(final,dm->GetFullTypeName(),1000);; strlcat(final,"" "",1000);; strlcat(final,token,1000); strlcat(final,"";"",1000);; } else {; Error(""SetStreamerInfo"",""Illegal name: %s in %s"",token,info);; return;; }; }; update = kFALSE;; }; temp = colon+1;; if (*temp == 0) break;; }; //// fStreamerInfo = final;; delete [] final;; delete [] save;; return;; }. //info is empty. Let's build the default Streamer descriptor. char *temp = new char[10000];; temp[0] = 0;; char local[100];. //add list of base classes; TIter nextb(GetListOfBases());; TBaseClass *base;; while ((base = (TBaseClass*) nextb())) {; snprintf(local,100,""%s;"",base->GetName());; strlcat(temp,local,10000);; }. //add list of data members and types; TIter nextd(GetListOfDataMembers());; while ((dm = (TDataMember *) nextd())) {; if (dm->IsEnum()) continue;; if (!dm->IsPersistent()) continue;; Long_t property = dm->Property();; if (property & kIsStatic) continue;; TClass *acl = TClass::GetClass(dm->GetTypeName(),update);; update = kFALSE;; if (acl) {; if (acl->GetClassVersion() == 0) continue;; }.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:1889,Deployability,update,update,1889,"nk, blank+1);; while ((blank = strstr(temp,"", ""))) strcpy(blank+1,blank+2);; while ((blank = strstr(temp,"" ,""))) strcpy(blank, blank+1);; while ((blank = strstr(temp,"" ""))) strcpy(blank, blank+1);; //loop on tokens separated by ;; char *final = new char[1000];; char token[100];; while ((colon=strchr(temp,';'))) {; *colon = 0;; strlcpy(token,temp,100);; blank = strchr(token,' ');; if (blank) {; *blank = 0;; if (!gROOT->GetType(token)) {; Error(""SetStreamerInfo"",""Illegal type: %s in %s"",token,info);; return;; }; while (blank) {; strlcat(final,token,1000);; strlcat(final,"" "",1000);; comma = strchr(blank+1,','); if (comma) *comma=0;; strlcat(final,blank+1,1000);; strlcat(final,"";"",1000);; blank = comma;; }. } else {; if (TClass::GetClass(token,update)) {; //a class name; strlcat(final,token,1000); strlcat(final,"";"",1000);; } else {; //a data member name; dm = (TDataMember*)GetListOfDataMembers()->FindObject(token);; if (dm) {; strlcat(final,dm->GetFullTypeName(),1000);; strlcat(final,"" "",1000);; strlcat(final,token,1000); strlcat(final,"";"",1000);; } else {; Error(""SetStreamerInfo"",""Illegal name: %s in %s"",token,info);; return;; }; }; update = kFALSE;; }; temp = colon+1;; if (*temp == 0) break;; }; //// fStreamerInfo = final;; delete [] final;; delete [] save;; return;; }. //info is empty. Let's build the default Streamer descriptor. char *temp = new char[10000];; temp[0] = 0;; char local[100];. //add list of base classes; TIter nextb(GetListOfBases());; TBaseClass *base;; while ((base = (TBaseClass*) nextb())) {; snprintf(local,100,""%s;"",base->GetName());; strlcat(temp,local,10000);; }. //add list of data members and types; TIter nextd(GetListOfDataMembers());; while ((dm = (TDataMember *) nextd())) {; if (dm->IsEnum()) continue;; if (!dm->IsPersistent()) continue;; Long_t property = dm->Property();; if (property & kIsStatic) continue;; TClass *acl = TClass::GetClass(dm->GetTypeName(),update);; update = kFALSE;; if (acl) {; if (acl->GetClassVersion() == 0) continue;; }.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:2655,Deployability,update,update,2655,"hr(token,' ');; if (blank) {; *blank = 0;; if (!gROOT->GetType(token)) {; Error(""SetStreamerInfo"",""Illegal type: %s in %s"",token,info);; return;; }; while (blank) {; strlcat(final,token,1000);; strlcat(final,"" "",1000);; comma = strchr(blank+1,','); if (comma) *comma=0;; strlcat(final,blank+1,1000);; strlcat(final,"";"",1000);; blank = comma;; }. } else {; if (TClass::GetClass(token,update)) {; //a class name; strlcat(final,token,1000); strlcat(final,"";"",1000);; } else {; //a data member name; dm = (TDataMember*)GetListOfDataMembers()->FindObject(token);; if (dm) {; strlcat(final,dm->GetFullTypeName(),1000);; strlcat(final,"" "",1000);; strlcat(final,token,1000); strlcat(final,"";"",1000);; } else {; Error(""SetStreamerInfo"",""Illegal name: %s in %s"",token,info);; return;; }; }; update = kFALSE;; }; temp = colon+1;; if (*temp == 0) break;; }; //// fStreamerInfo = final;; delete [] final;; delete [] save;; return;; }. //info is empty. Let's build the default Streamer descriptor. char *temp = new char[10000];; temp[0] = 0;; char local[100];. //add list of base classes; TIter nextb(GetListOfBases());; TBaseClass *base;; while ((base = (TBaseClass*) nextb())) {; snprintf(local,100,""%s;"",base->GetName());; strlcat(temp,local,10000);; }. //add list of data members and types; TIter nextd(GetListOfDataMembers());; while ((dm = (TDataMember *) nextd())) {; if (dm->IsEnum()) continue;; if (!dm->IsPersistent()) continue;; Long_t property = dm->Property();; if (property & kIsStatic) continue;; TClass *acl = TClass::GetClass(dm->GetTypeName(),update);; update = kFALSE;; if (acl) {; if (acl->GetClassVersion() == 0) continue;; }. // dm->GetArrayIndex() returns an empty string if it does not; // applies; const char * index = dm->GetArrayIndex();; if (strlen(index)==0); snprintf(local,100,""%s %s;"",dm->GetFullTypeName(),dm->GetName());; else; snprintf(local,100,""%s %s[%s];"",dm->GetFullTypeName(),dm->GetName(),index);; strlcat(temp,local,10000);; }; //fStreamerInfo = temp;; delete [] temp;; */",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:2665,Deployability,update,update,2665,"hr(token,' ');; if (blank) {; *blank = 0;; if (!gROOT->GetType(token)) {; Error(""SetStreamerInfo"",""Illegal type: %s in %s"",token,info);; return;; }; while (blank) {; strlcat(final,token,1000);; strlcat(final,"" "",1000);; comma = strchr(blank+1,','); if (comma) *comma=0;; strlcat(final,blank+1,1000);; strlcat(final,"";"",1000);; blank = comma;; }. } else {; if (TClass::GetClass(token,update)) {; //a class name; strlcat(final,token,1000); strlcat(final,"";"",1000);; } else {; //a data member name; dm = (TDataMember*)GetListOfDataMembers()->FindObject(token);; if (dm) {; strlcat(final,dm->GetFullTypeName(),1000);; strlcat(final,"" "",1000);; strlcat(final,token,1000); strlcat(final,"";"",1000);; } else {; Error(""SetStreamerInfo"",""Illegal name: %s in %s"",token,info);; return;; }; }; update = kFALSE;; }; temp = colon+1;; if (*temp == 0) break;; }; //// fStreamerInfo = final;; delete [] final;; delete [] save;; return;; }. //info is empty. Let's build the default Streamer descriptor. char *temp = new char[10000];; temp[0] = 0;; char local[100];. //add list of base classes; TIter nextb(GetListOfBases());; TBaseClass *base;; while ((base = (TBaseClass*) nextb())) {; snprintf(local,100,""%s;"",base->GetName());; strlcat(temp,local,10000);; }. //add list of data members and types; TIter nextd(GetListOfDataMembers());; while ((dm = (TDataMember *) nextd())) {; if (dm->IsEnum()) continue;; if (!dm->IsPersistent()) continue;; Long_t property = dm->Property();; if (property & kIsStatic) continue;; TClass *acl = TClass::GetClass(dm->GetTypeName(),update);; update = kFALSE;; if (acl) {; if (acl->GetClassVersion() == 0) continue;; }. // dm->GetArrayIndex() returns an empty string if it does not; // applies; const char * index = dm->GetArrayIndex();; if (strlen(index)==0); snprintf(local,100,""%s %s;"",dm->GetFullTypeName(),dm->GetName());; else; snprintf(local,100,""%s %s[%s];"",dm->GetFullTypeName(),dm->GetName(),index);; strlcat(temp,local,10000);; }; //fStreamerInfo = temp;; delete [] temp;; */",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:105,Security,checksum,checksum,105,"////////////////////////////////////////////////////////////////////////////////; /// Return true if the checksum passed as argument is one of the checksum; /// value produced by the older checksum calculation algorithm.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:147,Security,checksum,checksum,147,"////////////////////////////////////////////////////////////////////////////////; /// Return true if the checksum passed as argument is one of the checksum; /// value produced by the older checksum calculation algorithm.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:189,Security,checksum,checksum,189,"////////////////////////////////////////////////////////////////////////////////; /// Return true if the checksum passed as argument is one of the checksum; /// value produced by the older checksum calculation algorithm.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:212,Security,checksum,checksum,212,"////////////////////////////////////////////////////////////////////////////////; /// Compute and/or return the class check sum.; ///; /// isvalid is set to false, if the function is unable to calculate the; /// checksum.; ///; /// The class ckecksum is used by the automatic schema evolution algorithm; /// to uniquely identify a class version.; /// The check sum is built from the names/types of base classes and; /// data members.; /// Original algorithm from Victor Perevovchikov (perev@bnl.gov).; ///; /// The valid range of code is determined by ECheckSum.; ///; /// - kNoEnum: data members of type enum are not counted in the checksum; /// - kNoRange: return the checksum of data members and base classes, not including the ranges and array size found in comments.; /// - kWithTypeDef: use the sugared type name in the calculation.; ///; /// This is needed for backward compatibility.; ///; /// WARNING: this function must be kept in sync with TStreamerInfo::GetCheckSum.; /// They are both used to handle backward compatibility and should both return the same values.; /// TStreamerInfo uses the information in TStreamerElement while TClass uses the information; /// from TClass::GetListOfBases and TClass::GetListOfDataMembers.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:633,Security,checksum,checksum,633,"////////////////////////////////////////////////////////////////////////////////; /// Compute and/or return the class check sum.; ///; /// isvalid is set to false, if the function is unable to calculate the; /// checksum.; ///; /// The class ckecksum is used by the automatic schema evolution algorithm; /// to uniquely identify a class version.; /// The check sum is built from the names/types of base classes and; /// data members.; /// Original algorithm from Victor Perevovchikov (perev@bnl.gov).; ///; /// The valid range of code is determined by ECheckSum.; ///; /// - kNoEnum: data members of type enum are not counted in the checksum; /// - kNoRange: return the checksum of data members and base classes, not including the ranges and array size found in comments.; /// - kWithTypeDef: use the sugared type name in the calculation.; ///; /// This is needed for backward compatibility.; ///; /// WARNING: this function must be kept in sync with TStreamerInfo::GetCheckSum.; /// They are both used to handle backward compatibility and should both return the same values.; /// TStreamerInfo uses the information in TStreamerElement while TClass uses the information; /// from TClass::GetListOfBases and TClass::GetListOfDataMembers.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:670,Security,checksum,checksum,670,"////////////////////////////////////////////////////////////////////////////////; /// Compute and/or return the class check sum.; ///; /// isvalid is set to false, if the function is unable to calculate the; /// checksum.; ///; /// The class ckecksum is used by the automatic schema evolution algorithm; /// to uniquely identify a class version.; /// The check sum is built from the names/types of base classes and; /// data members.; /// Original algorithm from Victor Perevovchikov (perev@bnl.gov).; ///; /// The valid range of code is determined by ECheckSum.; ///; /// - kNoEnum: data members of type enum are not counted in the checksum; /// - kNoRange: return the checksum of data members and base classes, not including the ranges and array size found in comments.; /// - kWithTypeDef: use the sugared type name in the calculation.; ///; /// This is needed for backward compatibility.; ///; /// WARNING: this function must be kept in sync with TStreamerInfo::GetCheckSum.; /// They are both used to handle backward compatibility and should both return the same values.; /// TStreamerInfo uses the information in TStreamerElement while TClass uses the information; /// from TClass::GetListOfBases and TClass::GetListOfDataMembers.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:26,Modifiability,variab,variable,26,"// fCheckSum is an atomic variable. Also once it has; // transition from a zero Value it never changes. If two; // thread reach past this if statement and calculated the; // 'kLastestCheckSum', they will by definition obtain the; // same value, so technically we could simply have:; // if (fCheckSum && code == kCurrentCheckSum) return fCheckSum;; // However save a little bit of barrier time by calling load(); // only once.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:404,Performance,load,load,404,"// fCheckSum is an atomic variable. Also once it has; // transition from a zero Value it never changes. If two; // thread reach past this if statement and calculated the; // 'kLastestCheckSum', they will by definition obtain the; // same value, so technically we could simply have:; // if (fCheckSum && code == kCurrentCheckSum) return fCheckSum;; // However save a little bit of barrier time by calling load(); // only once.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:269,Usability,simpl,simply,269,"// fCheckSum is an atomic variable. Also once it has; // transition from a zero Value it never changes. If two; // thread reach past this if statement and calculated the; // 'kLastestCheckSum', they will by definition obtain the; // same value, so technically we could simply have:; // if (fCheckSum && code == kCurrentCheckSum) return fCheckSum;; // However save a little bit of barrier time by calling load(); // only once.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:86,Deployability,Install,Install,86,"////////////////////////////////////////////////////////////////////////////////; /// Install a new member streamer (p will be copied).",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:39,Testability,test,test,39,"// // This code can be used to quickly test the STL Emulation layer; // Int_t k = TClassEdit::IsSTLCont(GetName());; // if (k==1||k==-1) { delete str; return; }",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:92,Integrability,wrap,wrapper,92,"////////////////////////////////////////////////////////////////////////////////; /// Set a wrapper/accessor function around this class custom streamer.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:100,Security,access,accessor,100,"////////////////////////////////////////////////////////////////////////////////; /// Set a wrapper/accessor function around this class custom streamer.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:92,Integrability,wrap,wrapper,92,"////////////////////////////////////////////////////////////////////////////////; /// Set a wrapper/accessor function around this class custom conversion streamer.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:100,Security,access,accessor,100,"////////////////////////////////////////////////////////////////////////////////; /// Set a wrapper/accessor function around this class custom conversion streamer.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:86,Deployability,Install,Install,86,"////////////////////////////////////////////////////////////////////////////////; /// Install a new wrapper around 'Merge'.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:100,Integrability,wrap,wrapper,100,"////////////////////////////////////////////////////////////////////////////////; /// Install a new wrapper around 'Merge'.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:86,Deployability,Install,Install,86,"////////////////////////////////////////////////////////////////////////////////; /// Install a new wrapper around 'ResetAfterMerge'.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:100,Integrability,wrap,wrapper,100,"////////////////////////////////////////////////////////////////////////////////; /// Install a new wrapper around 'ResetAfterMerge'.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:86,Deployability,Install,Install,86,"////////////////////////////////////////////////////////////////////////////////; /// Install a new wrapper around 'new'.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:100,Integrability,wrap,wrapper,100,"////////////////////////////////////////////////////////////////////////////////; /// Install a new wrapper around 'new'.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:86,Deployability,Install,Install,86,"////////////////////////////////////////////////////////////////////////////////; /// Install a new wrapper around 'new []'.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:100,Integrability,wrap,wrapper,100,"////////////////////////////////////////////////////////////////////////////////; /// Install a new wrapper around 'new []'.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:86,Deployability,Install,Install,86,"////////////////////////////////////////////////////////////////////////////////; /// Install a new wrapper around 'delete'.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:100,Integrability,wrap,wrapper,100,"////////////////////////////////////////////////////////////////////////////////; /// Install a new wrapper around 'delete'.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:86,Deployability,Install,Install,86,"////////////////////////////////////////////////////////////////////////////////; /// Install a new wrapper around 'delete []'.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:100,Integrability,wrap,wrapper,100,"////////////////////////////////////////////////////////////////////////////////; /// Install a new wrapper around 'delete []'.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:86,Deployability,Install,Install,86,"////////////////////////////////////////////////////////////////////////////////; /// Install a new wrapper around the destructor.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:100,Integrability,wrap,wrapper,100,"////////////////////////////////////////////////////////////////////////////////; /// Install a new wrapper around the destructor.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:86,Deployability,Install,Install,86,"////////////////////////////////////////////////////////////////////////////////; /// Install a new wrapper around the directory auto add function.; /// The function autoAddFunc has the signature void (*)(void *obj, TDirectory dir); /// and should register 'obj' to the directory if dir is not null; /// and unregister 'obj' from its current directory if dir is null",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:100,Integrability,wrap,wrapper,100,"////////////////////////////////////////////////////////////////////////////////; /// Install a new wrapper around the directory auto add function.; /// The function autoAddFunc has the signature void (*)(void *obj, TDirectory dir); /// and should register 'obj' to the directory if dir is not null; /// and unregister 'obj' from its current directory if dir is null",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:154,Security,checksum,checksum,154,"////////////////////////////////////////////////////////////////////////////////; /// Find the TVirtualStreamerInfo in the StreamerInfos corresponding to checksum",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:154,Security,checksum,checksum,154,"////////////////////////////////////////////////////////////////////////////////; /// Find the TVirtualStreamerInfo in the StreamerInfos corresponding to checksum",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:83,Performance,Cache,Cache,83,"//----------------------------------------------------------------------------; // Cache this streamer info; /////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:177,Security,checksum,checksum,177,"////////////////////////////////////////////////////////////////////////////////; /// Return a Conversion StreamerInfo from the class 'classname' for the layout represented by 'checksum' to this class, if any.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:183,Security,checksum,checksum,183,"////////////////////////////////////////////////////////////////////////////////; /// Return a Conversion StreamerInfo from the class represented by cl for the layout represented by 'checksum' to this class, if any.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:83,Performance,Cache,Cache,83,"//----------------------------------------------------------------------------; // Cache this streamer info; /////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:145,Deployability,Update,Update,145,"////////////////////////////////////////////////////////////////////////////////; /// Remove and delete the StreamerInfo in the given slot.; /// Update the slot accordingly.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:396,Integrability,rout,routines,396,"////////////////////////////////////////////////////////////////////////////////; /// Return true is the Hash/RecursiveRemove setup is consistent, i.e. when all; /// classes in the class hierarchy that overload TObject::Hash do call; /// ROOT::CallRecursiveRemoveIfNeeded in their destructor.; /// i.e. it is safe to call the Hash virtual function during the RecursiveRemove operation.; /// This routines is used for a small subset of the class for which we need; /// the answer before gROOT is properly initialized.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:309,Safety,safe,safe,309,"////////////////////////////////////////////////////////////////////////////////; /// Return true is the Hash/RecursiveRemove setup is consistent, i.e. when all; /// classes in the class hierarchy that overload TObject::Hash do call; /// ROOT::CallRecursiveRemoveIfNeeded in their destructor.; /// i.e. it is safe to call the Hash virtual function during the RecursiveRemove operation.; /// This routines is used for a small subset of the class for which we need; /// the answer before gROOT is properly initialized.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:105,Security,Hash,Hash,105,"////////////////////////////////////////////////////////////////////////////////; /// Return true is the Hash/RecursiveRemove setup is consistent, i.e. when all; /// classes in the class hierarchy that overload TObject::Hash do call; /// ROOT::CallRecursiveRemoveIfNeeded in their destructor.; /// i.e. it is safe to call the Hash virtual function during the RecursiveRemove operation.; /// This routines is used for a small subset of the class for which we need; /// the answer before gROOT is properly initialized.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:220,Security,Hash,Hash,220,"////////////////////////////////////////////////////////////////////////////////; /// Return true is the Hash/RecursiveRemove setup is consistent, i.e. when all; /// classes in the class hierarchy that overload TObject::Hash do call; /// ROOT::CallRecursiveRemoveIfNeeded in their destructor.; /// i.e. it is safe to call the Hash virtual function during the RecursiveRemove operation.; /// This routines is used for a small subset of the class for which we need; /// the answer before gROOT is properly initialized.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:326,Security,Hash,Hash,326,"////////////////////////////////////////////////////////////////////////////////; /// Return true is the Hash/RecursiveRemove setup is consistent, i.e. when all; /// classes in the class hierarchy that overload TObject::Hash do call; /// ROOT::CallRecursiveRemoveIfNeeded in their destructor.; /// i.e. it is safe to call the Hash virtual function during the RecursiveRemove operation.; /// This routines is used for a small subset of the class for which we need; /// the answer before gROOT is properly initialized.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:83,Testability,test,testHashRecursiveRemove,83,"// Hand selection of correct classes, those classes should be; // cross-checked in testHashRecursiveRemove.cxx",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:309,Safety,safe,safe,309,"////////////////////////////////////////////////////////////////////////////////; /// Return true is the Hash/RecursiveRemove setup is consistent, i.e. when all; /// classes in the class hierarchy that overload TObject::Hash do call; /// ROOT::CallRecursiveRemoveIfNeeded in their destructor.; /// i.e. it is safe to call the Hash virtual function during the RecursiveRemove operation.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:105,Security,Hash,Hash,105,"////////////////////////////////////////////////////////////////////////////////; /// Return true is the Hash/RecursiveRemove setup is consistent, i.e. when all; /// classes in the class hierarchy that overload TObject::Hash do call; /// ROOT::CallRecursiveRemoveIfNeeded in their destructor.; /// i.e. it is safe to call the Hash virtual function during the RecursiveRemove operation.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:220,Security,Hash,Hash,220,"////////////////////////////////////////////////////////////////////////////////; /// Return true is the Hash/RecursiveRemove setup is consistent, i.e. when all; /// classes in the class hierarchy that overload TObject::Hash do call; /// ROOT::CallRecursiveRemoveIfNeeded in their destructor.; /// i.e. it is safe to call the Hash virtual function during the RecursiveRemove operation.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:326,Security,Hash,Hash,326,"////////////////////////////////////////////////////////////////////////////////; /// Return true is the Hash/RecursiveRemove setup is consistent, i.e. when all; /// classes in the class hierarchy that overload TObject::Hash do call; /// ROOT::CallRecursiveRemoveIfNeeded in their destructor.; /// i.e. it is safe to call the Hash virtual function during the RecursiveRemove operation.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:354,Integrability,rout,routine,354,"////////////////////////////////////////////////////////////////////////////////; /// Return true if we have access to a constructor usable for I/O. This is; /// typically the default constructor but can also be a constructor specifically; /// marked for I/O (for example a constructor taking a TRootIOCtor* as an; /// argument). In other words, if this routine returns true, TClass::New is; /// guarantee to succeed.; /// To know if the class described by this TClass has a default constructor; /// (public or not), use; /// \code{.cpp}; /// cl->GetProperty() & kClassHasDefaultCtor; /// \endcode; /// To know if the class described by this TClass has a public default; /// constructor use:; /// \code{.cpp}; /// gInterpreter->ClassInfo_HasDefaultConstructor(aClass->GetClassInfo());; /// \endcode",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:109,Security,access,access,109,"////////////////////////////////////////////////////////////////////////////////; /// Return true if we have access to a constructor usable for I/O. This is; /// typically the default constructor but can also be a constructor specifically; /// marked for I/O (for example a constructor taking a TRootIOCtor* as an; /// argument). In other words, if this routine returns true, TClass::New is; /// guarantee to succeed.; /// To know if the class described by this TClass has a default constructor; /// (public or not), use; /// \code{.cpp}; /// cl->GetProperty() & kClassHasDefaultCtor; /// \endcode; /// To know if the class described by this TClass has a public default; /// constructor use:; /// \code{.cpp}; /// gInterpreter->ClassInfo_HasDefaultConstructor(aClass->GetClassInfo());; /// \endcode",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:133,Usability,usab,usable,133,"////////////////////////////////////////////////////////////////////////////////; /// Return true if we have access to a constructor usable for I/O. This is; /// typically the default constructor but can also be a constructor specifically; /// marked for I/O (for example a constructor taking a TRootIOCtor* as an; /// argument). In other words, if this routine returns true, TClass::New is; /// guarantee to succeed.; /// To know if the class described by this TClass has a default constructor; /// (public or not), use; /// \code{.cpp}; /// cl->GetProperty() & kClassHasDefaultCtor; /// \endcode; /// To know if the class described by this TClass has a public default; /// constructor use:; /// \code{.cpp}; /// gInterpreter->ClassInfo_HasDefaultConstructor(aClass->GetClassInfo());; /// \endcode",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:175,Security,Hash,Hash,175,"////////////////////////////////////////////////////////////////////////////////; /// Returns true if this class has an definition and/or overload of the; /// member function Hash.; ///; /// For example to test if the class overload TObject::Hash use; /// ~~~ {.cpp}; /// if (cl->IsTObject() && cl->HasLocalHashMember()); /// ~~~",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:242,Security,Hash,Hash,242,"////////////////////////////////////////////////////////////////////////////////; /// Returns true if this class has an definition and/or overload of the; /// member function Hash.; ///; /// For example to test if the class overload TObject::Hash use; /// ~~~ {.cpp}; /// if (cl->IsTObject() && cl->HasLocalHashMember()); /// ~~~",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:206,Testability,test,test,206,"////////////////////////////////////////////////////////////////////////////////; /// Returns true if this class has an definition and/or overload of the; /// member function Hash.; ///; /// For example to test if the class overload TObject::Hash use; /// ~~~ {.cpp}; /// if (cl->IsTObject() && cl->HasLocalHashMember()); /// ~~~",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:97,Integrability,wrap,wrapper,97,"////////////////////////////////////////////////////////////////////////////////; /// Return the wrapper around Merge.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:97,Integrability,wrap,wrapper,97,"////////////////////////////////////////////////////////////////////////////////; /// Return the wrapper around Merge.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:97,Integrability,wrap,wrapper,97,"////////////////////////////////////////////////////////////////////////////////; /// Return the wrapper around new ThisClass().",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:97,Integrability,wrap,wrapper,97,"////////////////////////////////////////////////////////////////////////////////; /// Return the wrapper around new ThisClass[].",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:97,Integrability,wrap,wrapper,97,"////////////////////////////////////////////////////////////////////////////////; /// Return the wrapper around delete ThiObject.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:97,Integrability,wrap,wrapper,97,"////////////////////////////////////////////////////////////////////////////////; /// Return the wrapper around delete [] ThiObject.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:97,Integrability,wrap,wrapper,97,"////////////////////////////////////////////////////////////////////////////////; /// Return the wrapper around the destructor",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:97,Integrability,wrap,wrapper,97,"////////////////////////////////////////////////////////////////////////////////; /// Return the wrapper around the directory auto add function.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClassGenerator.cxx:470,Integrability,interface,interface,470,"// @(#)root/base:$Id$; // Author: Philippe Canal 24/06/2003; /*************************************************************************; * Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClassGenerator; Objects following this interface can be passed onto the TROOT object; to implement a user customized way to create the TClass objects. Use TROOT::AddClassGenerator to register a concrete instance.; */",MatchSource.CODE_COMMENT,core/meta/src/TClassGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClassGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClassRef.cxx:687,Performance,load,loaded,687,"// @(#)root/meta:$Id$; // Author: Philippe Canal 15/03/2005; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClassRef; TClassRef is used to implement a permanent reference to a TClass; object. In particular this reference will change if and when the; TClass object is regenerated. This regeneration usually happens; when a library containing the described class is loaded after a; file containing an instance of this class has been opened. The references kept track of using an intrusive double linked list.; The intrusive list is maintained by TClass::AddRef and; TClass::RemoveRef. The 'start' of the list is held in; TClass::fRefStart.; */",MatchSource.CODE_COMMENT,core/meta/src/TClassRef.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClassRef.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClassRef.cxx:184,Integrability,rout,routines,184,"////////////////////////////////////////////////////////////////////////////////; /// Assignment operator implementation, increases reference count to original class object.; /// This routines assumes that the copy actually need to be done.",MatchSource.CODE_COMMENT,core/meta/src/TClassRef.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClassRef.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClassRef.cxx:169,Integrability,rout,routines,169,"////////////////////////////////////////////////////////////////////////////////; /// Assignment operator, increases reference count to original class object.; /// This routines assumes that the copy actually need to be done.",MatchSource.CODE_COMMENT,core/meta/src/TClassRef.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClassRef.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx:3025,Integrability,rout,routines,3025,"that names that are automatically recognized may be also:; for data fields: either fXXX or fIsXXX; and for getter function; GetXXX() or IsXXX() [where XXX is base name]. As an example of using it let's analyse a few lines which get and set; a fEditable field in TCanvas:; ~~~ {.cpp}; TCanvas *c = new TCanvas(""c""); // create a canvas; TClass *cl = c->IsA(); // get its class description object. TDataMember *dm = cl->GetDataMember(""fEditable""); //This is our data member. TMethodCall *getter = dm->GetterMethod(c); //find a method that gets value!; Long_t l; // declare a storage for this value;. getter->Execute(c,"""",l); // Get this Value !!!! It will appear in l !!!. TMethodCall *setter = dm->SetterMethod(c);; setter->Execute(c,""0"",); // Set Value 0 !!!; ~~~. This trick is widely used in ROOT TContextMenu and dialogs for obtaining; current values and put them as initial values in dialog fields. If you don't want to follow the convention of naming used by ROOT; you still could benefit from Getter/Setter method support: the solution; is to instruct ROOT what the names of these routines are.; The way to do it is putting this information in a comment string to a data; field in your class declaration:. ~~~ {.cpp}; class MyClass{; Int_t mydata; // *OPTIONS={GetMethod=""Get"";SetMethod=""Set""}; ...; Int_t Get() const { return mydata;};; void Set(Int_t i) {mydata=i;};; }; ~~~. However, this getting/setting functions are not the only feature of; this class. The next point is providing lists of possible settings; for the concerned data member. The idea is to have a list of possible; options for this data member, with strings identifying them. This; is used in dialogs with parameters to set - for details see; TMethodArg, TRootContextMenu, TContextMenu. This list not only specifies; the allowed value, but also provides strings naming the options.; Options are managed via TList of TOptionListItem objects. This list; is also created automatically: if a data type is an enum type,; the list",MatchSource.CODE_COMMENT,core/meta/src/TDataMember.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx:1118,Security,access,access,1118,"ight (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TDataMember. All ROOT classes may have RTTI (run time type identification) support; added. The data is stored in so called DICTIONARY (look at TDictionary).; Information about a class is stored in TClass.; This information may be obtained via the cling api - see class TCling.; TClass has a list of TDataMember objects providing information about all; data members of described class. \image html base_classinfo.png. TDataMember provides information about name of data member, its type,; and comment field string. It also tries to find the TMethodCall objects; responsible for getting/setting a value of it, and gives you pointers; to these methods. This gives you a unique possibility to access; protected and private (!) data members if only methods for doing that; are defined. These methods could either be specified in a comment field, or found; out automatically by ROOT: here's an example:; suppose you have a class definition:; ~~~ {.cpp}; class MyClass{; private:; Float_t fX1;; ...; public:; void SetX1(Float_t x) {fX1 = x;};; Float_t GetX1() {return fX1;};; ...; }; ~~~; Look at the data member name and method names: a data member name has; a prefix letter (f) and has a base name X1 . The methods for getting and; setting this value have names which consist of string Get/Set and the; same base name. This convention of naming data fields and methods which; access them allows TDataMember find this methods by itself completely; automatically. To make this description complete, one should know,; that names that are automatically recognized may be also:; for data fields: either fXXX or fIsXXX; and for getter function; GetXXX() or IsXXX() [where XXX is base name]. As an example of using it let's ana",MatchSource.CODE_COMMENT,core/meta/src/TDataMember.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx:1800,Security,access,access,1800," \image html base_classinfo.png. TDataMember provides information about name of data member, its type,; and comment field string. It also tries to find the TMethodCall objects; responsible for getting/setting a value of it, and gives you pointers; to these methods. This gives you a unique possibility to access; protected and private (!) data members if only methods for doing that; are defined. These methods could either be specified in a comment field, or found; out automatically by ROOT: here's an example:; suppose you have a class definition:; ~~~ {.cpp}; class MyClass{; private:; Float_t fX1;; ...; public:; void SetX1(Float_t x) {fX1 = x;};; Float_t GetX1() {return fX1;};; ...; }; ~~~; Look at the data member name and method names: a data member name has; a prefix letter (f) and has a base name X1 . The methods for getting and; setting this value have names which consist of string Get/Set and the; same base name. This convention of naming data fields and methods which; access them allows TDataMember find this methods by itself completely; automatically. To make this description complete, one should know,; that names that are automatically recognized may be also:; for data fields: either fXXX or fIsXXX; and for getter function; GetXXX() or IsXXX() [where XXX is base name]. As an example of using it let's analyse a few lines which get and set; a fEditable field in TCanvas:; ~~~ {.cpp}; TCanvas *c = new TCanvas(""c""); // create a canvas; TClass *cl = c->IsA(); // get its class description object. TDataMember *dm = cl->GetDataMember(""fEditable""); //This is our data member. TMethodCall *getter = dm->GetterMethod(c); //find a method that gets value!; Long_t l; // declare a storage for this value;. getter->Execute(c,"""",l); // Get this Value !!!! It will appear in l !!!. TMethodCall *setter = dm->SetterMethod(c);; setter->Execute(c,""0"",); // Set Value 0 !!!; ~~~. This trick is widely used in ROOT TContextMenu and dialogs for obtaining; current values and put them as initia",MatchSource.CODE_COMMENT,core/meta/src/TDataMember.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx:125,Deployability,Update,Update,125,"////////////////////////////////////////////////////////////////////////////////; /// Routines called by the constructor and Update to reset the member's; /// information.; /// afterReading is set when initializing after reading through Streamer().",MatchSource.CODE_COMMENT,core/meta/src/TDataMember.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx:86,Integrability,Rout,Routines,86,"////////////////////////////////////////////////////////////////////////////////; /// Routines called by the constructor and Update to reset the member's; /// information.; /// afterReading is set when initializing after reading through Streamer().",MatchSource.CODE_COMMENT,core/meta/src/TDataMember.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx:70,Performance,load,loaded,70,"// humm we did not find it ... maybe it's a typedef that has not been loaded yet.; // (this can happen if the executable does not have a TApplication object).",MatchSource.CODE_COMMENT,core/meta/src/TDataMember.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx:23,Availability,Error,Error,23,"// if (!fDataType); // Error(""TDataMember"", ""basic data type %s not found in list of basic types"",; // GetTypeName());",MatchSource.CODE_COMMENT,core/meta/src/TDataMember.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx:157,Performance,load,loaded,157,"////////////////////////////////////////////////////////////////////////////////; /// Return true if this data member object is pointing to a currently; /// loaded data member. If a function is unloaded after the TDataMember; /// is created, the TDataMember will be set to be invalid.",MatchSource.CODE_COMMENT,core/meta/src/TDataMember.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx:82,Deployability,update,updated,82,"// We need to make sure that the list of data member is properly; // informed and updated.",MatchSource.CODE_COMMENT,core/meta/src/TDataMember.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx:24,Security,access,access,24,"// Set to the strictest access of the member and the type",MatchSource.CODE_COMMENT,core/meta/src/TDataMember.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx:89,Modifiability,inherit,inheritance,89,"// check whether such method exists; // FIXME: wrong in case called derives via multiple inheritance from this class",MatchSource.CODE_COMMENT,core/meta/src/TDataMember.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx:52,Modifiability,inherit,inheritance,52,"// FIXME: wrong in case called derives via multiple inheritance from this class",MatchSource.CODE_COMMENT,core/meta/src/TDataMember.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx:289,Modifiability,inherit,inheritance,289,"////////////////////////////////////////////////////////////////////////////////; /// Return a TMethodCall method responsible for getting the value; /// of data member. The cl argument specifies the class of the object; /// which will be used to call this method (in case of multiple; /// inheritance TMethodCall needs to know this to calculate the proper; /// offset).",MatchSource.CODE_COMMENT,core/meta/src/TDataMember.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx:289,Modifiability,inherit,inheritance,289,"////////////////////////////////////////////////////////////////////////////////; /// Return a TMethodCall method responsible for setting the value; /// of data member. The cl argument specifies the class of the object; /// which will be used to call this method (in case of multiple; /// inheritance TMethodCall needs to know this to calculate the proper; /// offset).",MatchSource.CODE_COMMENT,core/meta/src/TDataMember.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update the TFunction to reflect the new info.; ///; /// This can be used to implement unloading (info == 0) and then reloading; /// (info being the 'new' decl address).",MatchSource.CODE_COMMENT,core/meta/src/TDataMember.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx:145,Performance,cache,cached,145,"////////////////////////////////////////////////////////////////////////////////; /// Stream an object of TDataMember. Forces calculation of all cached; /// (and persistent) values.",MatchSource.CODE_COMMENT,core/meta/src/TDataMember.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataType.cxx:633,Security,access,accessible,633,"// @(#)root/meta:$Id$; // Author: Rene Brun 04/02/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons . *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TDataType; Basic data type descriptor (datatype information is obtained from; CINT). This class describes the attributes of type definitions; (typedef's). The TROOT class contains a list of all currently; defined types (accessible via TROOT::GetListOfTypes()).; */",MatchSource.CODE_COMMENT,core/meta/src/TDataType.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataType.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataType.cxx:173,Deployability,Update,UpdateListOfTypes,173,"////////////////////////////////////////////////////////////////////////////////; /// Default TDataType ctor. TDataTypes are constructed in TROOT via; /// a call to TCling::UpdateListOfTypes().",MatchSource.CODE_COMMENT,core/meta/src/TDataType.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataType.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataType.cxx:98,Integrability,depend,depending,98,"////////////////////////////////////////////////////////////////////////////////; /// Set type id depending on name.",MatchSource.CODE_COMMENT,core/meta/src/TDataType.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataType.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataType.cxx:98,Integrability,depend,depending,98,"////////////////////////////////////////////////////////////////////////////////; /// Set type id depending on name.",MatchSource.CODE_COMMENT,core/meta/src/TDataType.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataType.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataType.cxx:63,Performance,load,loaded,63,"// This can be needed if the library defining this typedef was loaded after; // another library and that this other library is unloaded (in which case; // things can get renumbered inside CINT).",MatchSource.CODE_COMMENT,core/meta/src/TDataType.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataType.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDictAttributeMap.cxx:48,Security,hash,hash,48,"//Add the property pair name - Int value to the hash table.",MatchSource.CODE_COMMENT,core/meta/src/TDictAttributeMap.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDictAttributeMap.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDictAttributeMap.cxx:85,Security,Access,Access,85,"////////////////////////////////////////////////////////////////////////////////; ///Access the value of a String property using the key.",MatchSource.CODE_COMMENT,core/meta/src/TDictAttributeMap.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDictAttributeMap.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDictAttributeMap.cxx:28,Safety,avoid,avoid,28,"//Copy object into found to avoid calling the function two times.",MatchSource.CODE_COMMENT,core/meta/src/TDictAttributeMap.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDictAttributeMap.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDictAttributeMap.cxx:10,Availability,error,error,10,"//Show an error message if the key is not found.",MatchSource.CODE_COMMENT,core/meta/src/TDictAttributeMap.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDictAttributeMap.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDictAttributeMap.cxx:16,Integrability,message,message,16,"//Show an error message if the key is not found.",MatchSource.CODE_COMMENT,core/meta/src/TDictAttributeMap.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDictAttributeMap.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDictionary.cxx:473,Integrability,interface,interface,473,"// @(#)root/meta:$Id$; // Author: Fons Rademakers 20/06/96; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TDictionary. This class defines an abstract interface that must be implemented; by all classes that contain dictionary information. The dictionary is defined by the following classes:; ~~~ {.cpp}; TDataType (typedef definitions); TGlobal (global variables); TGlobalFunc (global functions); TClass (classes); TBaseClass (base classes); TDataMember (class datamembers); TMethod (class methods); TMethodArg (method arguments); ~~~; All the above classes implement the TDictionary abstract interface.; Note: the indentation shows aggregation not inheritance.; ~~~ {.cpp}; TMethodCall (method call environment); ~~~; \image html base_tdictionary.png; */",MatchSource.CODE_COMMENT,core/meta/src/TDictionary.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDictionary.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDictionary.cxx:915,Integrability,interface,interface,915,"// @(#)root/meta:$Id$; // Author: Fons Rademakers 20/06/96; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TDictionary. This class defines an abstract interface that must be implemented; by all classes that contain dictionary information. The dictionary is defined by the following classes:; ~~~ {.cpp}; TDataType (typedef definitions); TGlobal (global variables); TGlobalFunc (global functions); TClass (classes); TBaseClass (base classes); TDataMember (class datamembers); TMethod (class methods); TMethodArg (method arguments); ~~~; All the above classes implement the TDictionary abstract interface.; Note: the indentation shows aggregation not inheritance.; ~~~ {.cpp}; TMethodCall (method call environment); ~~~; \image html base_tdictionary.png; */",MatchSource.CODE_COMMENT,core/meta/src/TDictionary.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDictionary.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDictionary.cxx:675,Modifiability,variab,variables,675,"// @(#)root/meta:$Id$; // Author: Fons Rademakers 20/06/96; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TDictionary. This class defines an abstract interface that must be implemented; by all classes that contain dictionary information. The dictionary is defined by the following classes:; ~~~ {.cpp}; TDataType (typedef definitions); TGlobal (global variables); TGlobalFunc (global functions); TClass (classes); TBaseClass (base classes); TDataMember (class datamembers); TMethod (class methods); TMethodArg (method arguments); ~~~; All the above classes implement the TDictionary abstract interface.; Note: the indentation shows aggregation not inheritance.; ~~~ {.cpp}; TMethodCall (method call environment); ~~~; \image html base_tdictionary.png; */",MatchSource.CODE_COMMENT,core/meta/src/TDictionary.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDictionary.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDictionary.cxx:971,Modifiability,inherit,inheritance,971,"// @(#)root/meta:$Id$; // Author: Fons Rademakers 20/06/96; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TDictionary. This class defines an abstract interface that must be implemented; by all classes that contain dictionary information. The dictionary is defined by the following classes:; ~~~ {.cpp}; TDataType (typedef definitions); TGlobal (global variables); TGlobalFunc (global functions); TClass (classes); TBaseClass (base classes); TDataMember (class datamembers); TMethod (class methods); TMethodArg (method arguments); ~~~; All the above classes implement the TDictionary abstract interface.; Note: the indentation shows aggregation not inheritance.; ~~~ {.cpp}; TMethodCall (method call environment); ~~~; \image html base_tdictionary.png; */",MatchSource.CODE_COMMENT,core/meta/src/TDictionary.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDictionary.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx:150,Performance,load,loaded,150,"////////////////////////////////////////////////////////////////////////////////; /// Return true if this enum object is pointing to a currently; /// loaded enum. If a enum is unloaded after the TEnum; /// is created, the TEnum will be set to be invalid.",MatchSource.CODE_COMMENT,core/meta/src/TEnum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx:197,Performance,load,load,197,"////////////////////////////////////////////////////////////////////////////////; /// Static function to retrieve enumerator from the ROOT's typesystem.; /// It has no side effect, except when the load flag is true. In this case,; /// the load of the library containing the scope of the enumerator is attempted.; /// There are two top level code paths: the enumerator is scoped or isn't.; /// If it is not, a lookup in the list of global enums is performed.; /// If it is, two lookups are carried out for its scope: one in the list of; /// classes and one in the list of protoclasses. If a scope with the desired name; /// is found, the enum is searched. If the scope is not found, and the load flag is; /// true, the aforementioned two steps are performed again after an autoload attempt; /// with the name of the scope as key is tried out.; /// If the interpreter lookup flag is false, the ListOfEnums objects are not treated; /// as such, but rather as THashList objects. This prevents any flow of information; /// from the interpreter into the ROOT's typesystem: a snapshot of the typesystem; /// status is taken.",MatchSource.CODE_COMMENT,core/meta/src/TEnum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx:239,Performance,load,load,239,"////////////////////////////////////////////////////////////////////////////////; /// Static function to retrieve enumerator from the ROOT's typesystem.; /// It has no side effect, except when the load flag is true. In this case,; /// the load of the library containing the scope of the enumerator is attempted.; /// There are two top level code paths: the enumerator is scoped or isn't.; /// If it is not, a lookup in the list of global enums is performed.; /// If it is, two lookups are carried out for its scope: one in the list of; /// classes and one in the list of protoclasses. If a scope with the desired name; /// is found, the enum is searched. If the scope is not found, and the load flag is; /// true, the aforementioned two steps are performed again after an autoload attempt; /// with the name of the scope as key is tried out.; /// If the interpreter lookup flag is false, the ListOfEnums objects are not treated; /// as such, but rather as THashList objects. This prevents any flow of information; /// from the interpreter into the ROOT's typesystem: a snapshot of the typesystem; /// status is taken.",MatchSource.CODE_COMMENT,core/meta/src/TEnum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx:447,Performance,perform,performed,447,"////////////////////////////////////////////////////////////////////////////////; /// Static function to retrieve enumerator from the ROOT's typesystem.; /// It has no side effect, except when the load flag is true. In this case,; /// the load of the library containing the scope of the enumerator is attempted.; /// There are two top level code paths: the enumerator is scoped or isn't.; /// If it is not, a lookup in the list of global enums is performed.; /// If it is, two lookups are carried out for its scope: one in the list of; /// classes and one in the list of protoclasses. If a scope with the desired name; /// is found, the enum is searched. If the scope is not found, and the load flag is; /// true, the aforementioned two steps are performed again after an autoload attempt; /// with the name of the scope as key is tried out.; /// If the interpreter lookup flag is false, the ListOfEnums objects are not treated; /// as such, but rather as THashList objects. This prevents any flow of information; /// from the interpreter into the ROOT's typesystem: a snapshot of the typesystem; /// status is taken.",MatchSource.CODE_COMMENT,core/meta/src/TEnum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx:690,Performance,load,load,690,"////////////////////////////////////////////////////////////////////////////////; /// Static function to retrieve enumerator from the ROOT's typesystem.; /// It has no side effect, except when the load flag is true. In this case,; /// the load of the library containing the scope of the enumerator is attempted.; /// There are two top level code paths: the enumerator is scoped or isn't.; /// If it is not, a lookup in the list of global enums is performed.; /// If it is, two lookups are carried out for its scope: one in the list of; /// classes and one in the list of protoclasses. If a scope with the desired name; /// is found, the enum is searched. If the scope is not found, and the load flag is; /// true, the aforementioned two steps are performed again after an autoload attempt; /// with the name of the scope as key is tried out.; /// If the interpreter lookup flag is false, the ListOfEnums objects are not treated; /// as such, but rather as THashList objects. This prevents any flow of information; /// from the interpreter into the ROOT's typesystem: a snapshot of the typesystem; /// status is taken.",MatchSource.CODE_COMMENT,core/meta/src/TEnum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx:747,Performance,perform,performed,747,"////////////////////////////////////////////////////////////////////////////////; /// Static function to retrieve enumerator from the ROOT's typesystem.; /// It has no side effect, except when the load flag is true. In this case,; /// the load of the library containing the scope of the enumerator is attempted.; /// There are two top level code paths: the enumerator is scoped or isn't.; /// If it is not, a lookup in the list of global enums is performed.; /// If it is, two lookups are carried out for its scope: one in the list of; /// classes and one in the list of protoclasses. If a scope with the desired name; /// is found, the enum is searched. If the scope is not found, and the load flag is; /// true, the aforementioned two steps are performed again after an autoload attempt; /// with the name of the scope as key is tried out.; /// If the interpreter lookup flag is false, the ListOfEnums objects are not treated; /// as such, but rather as THashList objects. This prevents any flow of information; /// from the interpreter into the ROOT's typesystem: a snapshot of the typesystem; /// status is taken.",MatchSource.CODE_COMMENT,core/meta/src/TEnum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx:27,Energy Efficiency,reduce,reduce,27,"// Potential optimisation: reduce number of branches using partial specialisation of; // helper functions.",MatchSource.CODE_COMMENT,core/meta/src/TEnum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx:3,Integrability,Wrap,Wrap,3,"// Wrap some gymnastic around the enum finding. The special treatment of the; // ListOfEnums objects is located in this routine.",MatchSource.CODE_COMMENT,core/meta/src/TEnum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx:120,Integrability,rout,routine,120,"// Wrap some gymnastic around the enum finding. The special treatment of the; // ListOfEnums objects is located in this routine.",MatchSource.CODE_COMMENT,core/meta/src/TEnum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx:10,Integrability,rout,routine,10,"// Helper routine to look fo the scope::enum in the typesystem.; // If autoload and interpreter lookup is allowed, TClass::GetClass is called.; // If not, the list of classes and the list of protoclasses is inspected.",MatchSource.CODE_COMMENT,core/meta/src/TEnum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx:23,Performance,load,load,23,"// If this is a class, load only if the user allowed interpreter lookup; // If this is a namespace and the user did not allow for interpreter lookup, load but before disable; // autoparsing if enabled.",MatchSource.CODE_COMMENT,core/meta/src/TEnum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx:150,Performance,load,load,150,"// If this is a class, load only if the user allowed interpreter lookup; // If this is a namespace and the user did not allow for interpreter lookup, load but before disable; // autoparsing if enabled.",MatchSource.CODE_COMMENT,core/meta/src/TEnum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx:165,Deployability,update,update,165,"// Keep the state consistent. In particular prevent change in the state of; // AutoLoading and AutoParsing allowance and gROOT->GetListOfClasses(); // and the later update/modification to the autoparsing state.",MatchSource.CODE_COMMENT,core/meta/src/TEnum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx:633,Security,access,accessible,633,"// @(#)root/meta:$Id$; // Author: Fons Rademakers 07/02/97; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TFunction; Global functions class (global functions are obtained from CINT).; This class describes one single global function.; The TROOT class contains a list of all currently defined global; functions (accessible via TROOT::GetListOfGlobalFunctions()).; */",MatchSource.CODE_COMMENT,core/meta/src/TFunction.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx:173,Deployability,Update,UpdateListOfGlobalFunctions,173,"////////////////////////////////////////////////////////////////////////////////; /// Default TFunction ctor. TFunctions are constructed in TROOT via; /// a call to TCling::UpdateListOfGlobalFunctions().",MatchSource.CODE_COMMENT,core/meta/src/TFunction.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx:60,Performance,cache,cached,60,"// The next call locks the interpreter mutex. The result is cached in the; // fSignature data member.",MatchSource.CODE_COMMENT,core/meta/src/TFunction.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx:64,Performance,cache,cached,64,"// The next call locks the interpreter mutex.; // The result is cached in the fSignature data member.",MatchSource.CODE_COMMENT,core/meta/src/TFunction.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx:108,Integrability,interface,interface,108,"////////////////////////////////////////////////////////////////////////////////; /// Return pointer to the interface method. Using this pointer we; /// can find which TFunction belongs to a CINT MethodInfo object.; /// Both need to have the same InterfaceMethod pointer.",MatchSource.CODE_COMMENT,core/meta/src/TFunction.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx:247,Integrability,Interface,InterfaceMethod,247,"////////////////////////////////////////////////////////////////////////////////; /// Return pointer to the interface method. Using this pointer we; /// can find which TFunction belongs to a CINT MethodInfo object.; /// Both need to have the same InterfaceMethod pointer.",MatchSource.CODE_COMMENT,core/meta/src/TFunction.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx:154,Performance,load,loaded,154,"////////////////////////////////////////////////////////////////////////////////; /// Return true if this function object is pointing to a currently; /// loaded function. If a function is unloaded after the TFunction; /// is created, the TFunction will be set to be invalid.",MatchSource.CODE_COMMENT,core/meta/src/TFunction.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx:147,Availability,error,error,147,"////////////////////////////////////////////////////////////////////////////////; /// Returns the mangled name as defined by CINT, or 0 in case of error.",MatchSource.CODE_COMMENT,core/meta/src/TFunction.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx:163,Availability,error,error,163,"////////////////////////////////////////////////////////////////////////////////; /// Returns the prototype of a function as defined by CINT, or 0 in; /// case of error.",MatchSource.CODE_COMMENT,core/meta/src/TFunction.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update the TFunction to reflect the new info.; ///; /// This can be used to implement unloading (info == 0) and then reloading; /// (info being the 'new' decl address).",MatchSource.CODE_COMMENT,core/meta/src/TFunction.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx:31,Security,access,access,31,"// This function needs to lock access to the interpreter multiple times.; // Take the lock at the beginning of the function so that we don't incur; // in too much locking/unlocking.",MatchSource.CODE_COMMENT,core/meta/src/TFunction.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx:40,Safety,safe,safety,40,"// TODO: Check for MethodArgInfo thread-safety",MatchSource.CODE_COMMENT,core/meta/src/TFunction.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunctionTemplate.cxx:163,Performance,load,loaded,163,"////////////////////////////////////////////////////////////////////////////////; /// Return true if this function template object is pointing to a currently; /// loaded function. If a function is unloaded after the TFunction; /// is created, the TFunction will be set to be invalid.",MatchSource.CODE_COMMENT,core/meta/src/TFunctionTemplate.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunctionTemplate.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunctionTemplate.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update the TFunctionTemplate to reflect the new info.; ///; /// This can be used to implement unloading (info == 0) and then reloading; /// (info being the 'new' decl address).",MatchSource.CODE_COMMENT,core/meta/src/TFunctionTemplate.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunctionTemplate.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:17,Performance,load,loads,17,"// This function loads the default behavior for the; // loading of classes.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:56,Performance,load,loading,56,"// This function loads the default behavior for the; // loading of classes.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:17,Integrability,rout,routine,17,"// Initilization routine.; //TVirtualStreamerInfo::Class_Version MUST be the same as TStreamerInfo::Class_Version",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:36,Security,access,access,36,"// Return the list of rule give raw access to the TBuffer.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:65,Security,access,access,65,"// Set the list of Data Model Evolution read rules giving direct access to the TBuffer.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:9,Integrability,wrap,wrapper,9,"// Set a wrapper around the Streamer member function.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:9,Integrability,wrap,wrapper,9,"// Set a wrapper around the Streamer member function.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:3,Deployability,Install,Install,3,"// Install a new wrapper around 'new'.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:17,Integrability,wrap,wrapper,17,"// Install a new wrapper around 'new'.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:3,Deployability,Install,Install,3,"// Install a new wrapper around 'new []'.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:17,Integrability,wrap,wrapper,17,"// Install a new wrapper around 'new []'.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:3,Deployability,Install,Install,3,"// Install a new wrapper around 'delete'.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:17,Integrability,wrap,wrapper,17,"// Install a new wrapper around 'delete'.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:3,Deployability,Install,Install,3,"// Install a new wrapper around 'delete []'.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:17,Integrability,wrap,wrapper,17,"// Install a new wrapper around 'delete []'.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:3,Deployability,Install,Install,3,"// Install a new wrapper around the destructor.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:17,Integrability,wrap,wrapper,17,"// Install a new wrapper around the destructor.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:3,Deployability,Install,Install,3,"// Install a new wrapper around SetDirectoryAutoAdd.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:17,Integrability,wrap,wrapper,17,"// Install a new wrapper around SetDirectoryAutoAdd.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:3,Deployability,Install,Install,3,"// Install a new wrapper around the Merge function.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:17,Integrability,wrap,wrapper,17,"// Install a new wrapper around the Merge function.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:3,Deployability,Install,Install,3,"// Install a new wrapper around the Merge function.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:17,Integrability,wrap,wrapper,17,"// Install a new wrapper around the Merge function.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:11,Integrability,wrap,wrapper,11,"// Get the wrapper around 'new'.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:11,Integrability,wrap,wrapper,11,"// Get the wrapper around 'new []'.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:11,Integrability,wrap,wrapper,11,"// Get the wrapper around 'delete'.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:11,Integrability,wrap,wrapper,11,"// Get the wrapper around 'delete []'.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:11,Integrability,wrap,wrapper,11,"// Get the wrapper around the destructor.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:11,Integrability,wrap,wrapper,11,"// Get the wrapper around the directory-auto-add function .",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGlobal.cxx:439,Modifiability,variab,variables,439,"// @(#)root/meta:$Id$; // Author: Rene Brun 13/11/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGlobal; Global variables class (global variables are obtained from CINT).; This class describes the attributes of a global variable.; The TROOT class contains a list of all currently defined global; variables (accessible via TROOT::GetListOfGlobals()).; */",MatchSource.CODE_COMMENT,core/meta/src/TGlobal.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGlobal.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGlobal.cxx:463,Modifiability,variab,variables,463,"// @(#)root/meta:$Id$; // Author: Rene Brun 13/11/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGlobal; Global variables class (global variables are obtained from CINT).; This class describes the attributes of a global variable.; The TROOT class contains a list of all currently defined global; variables (accessible via TROOT::GetListOfGlobals()).; */",MatchSource.CODE_COMMENT,core/meta/src/TGlobal.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGlobal.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGlobal.cxx:547,Modifiability,variab,variable,547,"// @(#)root/meta:$Id$; // Author: Rene Brun 13/11/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGlobal; Global variables class (global variables are obtained from CINT).; This class describes the attributes of a global variable.; The TROOT class contains a list of all currently defined global; variables (accessible via TROOT::GetListOfGlobals()).; */",MatchSource.CODE_COMMENT,core/meta/src/TGlobal.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGlobal.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGlobal.cxx:623,Modifiability,variab,variables,623,"// @(#)root/meta:$Id$; // Author: Rene Brun 13/11/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGlobal; Global variables class (global variables are obtained from CINT).; This class describes the attributes of a global variable.; The TROOT class contains a list of all currently defined global; variables (accessible via TROOT::GetListOfGlobals()).; */",MatchSource.CODE_COMMENT,core/meta/src/TGlobal.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGlobal.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGlobal.cxx:634,Security,access,accessible,634,"// @(#)root/meta:$Id$; // Author: Rene Brun 13/11/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGlobal; Global variables class (global variables are obtained from CINT).; This class describes the attributes of a global variable.; The TROOT class contains a list of all currently defined global; variables (accessible via TROOT::GetListOfGlobals()).; */",MatchSource.CODE_COMMENT,core/meta/src/TGlobal.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGlobal.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGlobal.cxx:105,Modifiability,variab,variable,105,"////////////////////////////////////////////////////////////////////////////////; /// Get type of global variable, e,g.: ""class TDirectory*"" -> ""TDirectory"".; /// Result needs to be used or copied immediately.",MatchSource.CODE_COMMENT,core/meta/src/TGlobal.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGlobal.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGlobal.cxx:122,Modifiability,variab,variable,122,"////////////////////////////////////////////////////////////////////////////////; /// Get full type description of global variable, e,g.: ""class TDirectory*"".",MatchSource.CODE_COMMENT,core/meta/src/TGlobal.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGlobal.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGlobal.cxx:152,Performance,load,loaded,152,"////////////////////////////////////////////////////////////////////////////////; /// Return true if this global object is pointing to a currently; /// loaded global. If a global is unloaded after the TGlobal; /// is created, the TGlobal will be set to be invalid.",MatchSource.CODE_COMMENT,core/meta/src/TGlobal.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGlobal.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGlobal.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update the TFunction to reflect the new info.; ///; /// This can be used to implement unloading (info == 0) and then reloading; /// (info being the 'new' decl address).",MatchSource.CODE_COMMENT,core/meta/src/TGlobal.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGlobal.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGlobal.cxx:14,Safety,safe,safe,14,"// For thread-safe setting of SetOwner(kTRUE).",MatchSource.CODE_COMMENT,core/meta/src/TGlobal.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGlobal.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TInterpreter.cxx:474,Integrability,interface,interface,474,"// @(#)root/meta:$Id$; // Author: Fons Rademakers 01/03/96; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TInterpreter; This class defines an abstract interface to a generic command line; interpreter.; */",MatchSource.CODE_COMMENT,core/meta/src/TInterpreter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TInterpreter.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TInterpreter.cxx:63,Modifiability,variab,variable,63,"// use special functor to extract pointer on gInterpreterLocal variable",MatchSource.CODE_COMMENT,core/meta/src/TInterpreter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TInterpreter.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TIsAProxy.cxx:135,Safety,safe,safe,135,"////////////////////////////////////////////////////////////////////////////////; /// Set class pointer; /// This method is not thread safe",MatchSource.CODE_COMMENT,core/meta/src/TIsAProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TIsAProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TIsAProxy.cxx:3,Safety,Avoid,Avoid,3,"// Avoid the case that the first word is a virtual_base_offset_table instead of; // a virtual_function_table",MatchSource.CODE_COMMENT,core/meta/src/TIsAProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TIsAProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TIsAProxy.cxx:41,Performance,cache,cache,41,"// Check if type is already in sub-class cache",MatchSource.CODE_COMMENT,core/meta/src/TIsAProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TIsAProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TIsAProxy.cxx:52,Performance,load,loaded,52,"// Don't record failed searches (a library might be loaded between now and the next search).",MatchSource.CODE_COMMENT,core/meta/src/TIsAProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TIsAProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TIsAProxy.cxx:109,Performance,cache,cached,109,"////////////////////////////////////////////////////////////////////////////////; /// See if we have already cached the TClass that correspond to this std::type_info.",MatchSource.CODE_COMMENT,core/meta/src/TIsAProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TIsAProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TIsAProxy.cxx:51,Deployability,release,release,51,"//See if there is a writer, if there is we need to release; // our reader count so that the writer can proceed",MatchSource.CODE_COMMENT,core/meta/src/TIsAProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TIsAProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TIsAProxy.cxx:37,Deployability,update,update,37,"// type is already in the map, let's update it.",MatchSource.CODE_COMMENT,core/meta/src/TIsAProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TIsAProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx:497,Security,access,access,497,"// @(#)root/cont; // Author: Philippe Canal Aug 2013; /*************************************************************************; * Copyright (C) 1995-2013, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TListOfDataMembers; A collection of TDataMember objects designed for fast access given a; DeclId_t and for keep track of TDataMember that were described; unloaded data member.; */",MatchSource.CODE_COMMENT,core/meta/src/TListOfDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx:291,Safety,avoid,avoid,291,"// The interpreter does not know about this class yet (or a problem; // occurred that prevented the proper updating of fClassInfo).; // So this decl can not possibly be part of this class.; // [In addition calling GetClassInfo would trigger a late parsing; // of the header which we want to avoid].",MatchSource.CODE_COMMENT,core/meta/src/TListOfDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx:263,Performance,perform,performed,263,"////////////////////////////////////////////////////////////////////////////////; /// Return (after creating it if necessary) the TDataMember; /// describing the data member corresponding to the Decl 'id'.; /// The skipChecks flag controls the consistency checks performed inspecting; /// the AST. In some cases, we explicitly alter the datamembers in the; /// typesystem with respect to the AST and therefore we must not enforce; /// consistency.",MatchSource.CODE_COMMENT,core/meta/src/TListOfDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx:291,Safety,avoid,avoid,291,"// The interpreter does not know about this class yet (or a problem; // occurred that prevented the proper updating of fClassInfo).; // So this decl can not possibly be part of this class.; // [In addition calling GetClassInfo would trigger a late parsing; // of the header which we want to avoid].",MatchSource.CODE_COMMENT,core/meta/src/TListOfDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx:415,Availability,avail,available,415,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from this collection and recursively remove the object; /// from all other objects (and collections).; /// This function overrides TCollection::RecursiveRemove that calls; /// the Remove function. THashList::Remove cannot be called because; /// it uses the hash value of the hash table. This hash value; /// is not available anymore when RecursiveRemove is called from; /// the TObject destructor.",MatchSource.CODE_COMMENT,core/meta/src/TListOfDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx:357,Security,hash,hash,357,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from this collection and recursively remove the object; /// from all other objects (and collections).; /// This function overrides TCollection::RecursiveRemove that calls; /// the Remove function. THashList::Remove cannot be called because; /// it uses the hash value of the hash table. This hash value; /// is not available anymore when RecursiveRemove is called from; /// the TObject destructor.",MatchSource.CODE_COMMENT,core/meta/src/TListOfDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx:375,Security,hash,hash,375,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from this collection and recursively remove the object; /// from all other objects (and collections).; /// This function overrides TCollection::RecursiveRemove that calls; /// the Remove function. THashList::Remove cannot be called because; /// it uses the hash value of the hash table. This hash value; /// is not available anymore when RecursiveRemove is called from; /// the TObject destructor.",MatchSource.CODE_COMMENT,core/meta/src/TListOfDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx:392,Security,hash,hash,392,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from this collection and recursively remove the object; /// from all other objects (and collections).; /// This function overrides TCollection::RecursiveRemove that calls; /// the Remove function. THashList::Remove cannot be called because; /// it uses the hash value of the hash table. This hash value; /// is not available anymore when RecursiveRemove is called from; /// the TObject destructor.",MatchSource.CODE_COMMENT,core/meta/src/TListOfDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load all the DataMembers known to the interpreter for the scope 'fClass'; /// into this collection.",MatchSource.CODE_COMMENT,core/meta/src/TListOfDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx:27,Modifiability,extend,extendable,27,"// Class and union are not extendable, if we already; // loaded all the data member there is no need to recheck",MatchSource.CODE_COMMENT,core/meta/src/TListOfDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx:57,Performance,load,loaded,57,"// Class and union are not extendable, if we already; // loaded all the data member there is no need to recheck",MatchSource.CODE_COMMENT,core/meta/src/TListOfDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx:239,Modifiability,variab,variable,239,"// In the case of namespace, even if we have loaded before we need to; // load again in case there was new data member added.; // Mark the list as loaded to avoid an infinite recursion in the case; // where we have a data member that is a variable size array. In that; // case TDataMember::Init needs to get/load the list to find the data; // member used as the array size.",MatchSource.CODE_COMMENT,core/meta/src/TListOfDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx:45,Performance,load,loaded,45,"// In the case of namespace, even if we have loaded before we need to; // load again in case there was new data member added.; // Mark the list as loaded to avoid an infinite recursion in the case; // where we have a data member that is a variable size array. In that; // case TDataMember::Init needs to get/load the list to find the data; // member used as the array size.",MatchSource.CODE_COMMENT,core/meta/src/TListOfDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx:74,Performance,load,load,74,"// In the case of namespace, even if we have loaded before we need to; // load again in case there was new data member added.; // Mark the list as loaded to avoid an infinite recursion in the case; // where we have a data member that is a variable size array. In that; // case TDataMember::Init needs to get/load the list to find the data; // member used as the array size.",MatchSource.CODE_COMMENT,core/meta/src/TListOfDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx:147,Performance,load,loaded,147,"// In the case of namespace, even if we have loaded before we need to; // load again in case there was new data member added.; // Mark the list as loaded to avoid an infinite recursion in the case; // where we have a data member that is a variable size array. In that; // case TDataMember::Init needs to get/load the list to find the data; // member used as the array size.",MatchSource.CODE_COMMENT,core/meta/src/TListOfDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx:308,Performance,load,load,308,"// In the case of namespace, even if we have loaded before we need to; // load again in case there was new data member added.; // Mark the list as loaded to avoid an infinite recursion in the case; // where we have a data member that is a variable size array. In that; // case TDataMember::Init needs to get/load the list to find the data; // member used as the array size.",MatchSource.CODE_COMMENT,core/meta/src/TListOfDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx:157,Safety,avoid,avoid,157,"// In the case of namespace, even if we have loaded before we need to; // load again in case there was new data member added.; // Mark the list as loaded to avoid an infinite recursion in the case; // where we have a data member that is a variable size array. In that; // case TDataMember::Init needs to get/load the list to find the data; // member used as the array size.",MatchSource.CODE_COMMENT,core/meta/src/TListOfDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx:501,Security,access,access,501,"// @(#)root/cont; // Author: Bianca-Cristina Cristescu February 2014; /*************************************************************************; * Copyright (C) 1995-2013, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TListOfEnums; A collection of TEnum objects designed for fast access given a; DeclId_t and for keep track of TEnum that were described; unloaded enum.; */",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnums.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx:20,Deployability,update,update,20,"// In this case, we update the declId, update its constants and add the enum to the ids map and return.; // At this point it is like it came from the interpreter.",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnums.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx:39,Deployability,update,update,39,"// In this case, we update the declId, update its constants and add the enum to the ids map and return.; // At this point it is like it came from the interpreter.",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnums.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx:291,Safety,avoid,avoid,291,"// The interpreter does not know about this class yet (or a problem; // occurred that prevented the proper updating of fClassInfo).; // So this decl can not possibly be part of this class.; // [In addition calling GetClassInfo would trigger a late parsing; // of the header which we want to avoid].",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnums.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx:208,Integrability,rout,routine,208,"////////////////////////////////////////////////////////////////////////////////; /// Return an object from the list of enums *if and only if* is has already; /// been loaded in the list. This is an internal routine.",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnums.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx:168,Performance,load,loaded,168,"////////////////////////////////////////////////////////////////////////////////; /// Return an object from the list of enums *if and only if* is has already; /// been loaded in the list. This is an internal routine.",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnums.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx:415,Availability,avail,available,415,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from this collection and recursively remove the object; /// from all other objects (and collections).; /// This function overrides TCollection::RecursiveRemove that calls; /// the Remove function. THashList::Remove cannot be called because; /// it uses the hash value of the hash table. This hash value; /// is not available anymore when RecursiveRemove is called from; /// the TObject destructor.",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnums.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx:357,Security,hash,hash,357,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from this collection and recursively remove the object; /// from all other objects (and collections).; /// This function overrides TCollection::RecursiveRemove that calls; /// the Remove function. THashList::Remove cannot be called because; /// it uses the hash value of the hash table. This hash value; /// is not available anymore when RecursiveRemove is called from; /// the TObject destructor.",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnums.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx:375,Security,hash,hash,375,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from this collection and recursively remove the object; /// from all other objects (and collections).; /// This function overrides TCollection::RecursiveRemove that calls; /// the Remove function. THashList::Remove cannot be called because; /// it uses the hash value of the hash table. This hash value; /// is not available anymore when RecursiveRemove is called from; /// the TObject destructor.",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnums.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx:392,Security,hash,hash,392,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from this collection and recursively remove the object; /// from all other objects (and collections).; /// This function overrides TCollection::RecursiveRemove that calls; /// the Remove function. THashList::Remove cannot be called because; /// it uses the hash value of the hash table. This hash value; /// is not available anymore when RecursiveRemove is called from; /// the TObject destructor.",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnums.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load all the DataMembers known to the interpreter for the scope 'fClass'; /// into this collection.",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnums.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx:27,Modifiability,extend,extendable,27,"// Class and union are not extendable, if we already; // loaded all the data member there is no need to recheck",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnums.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx:57,Performance,load,loaded,57,"// Class and union are not extendable, if we already; // loaded all the data member there is no need to recheck",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnums.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx:239,Modifiability,variab,variable,239,"// In the case of namespace, even if we have loaded before we need to; // load again in case there was new data member added.; // Mark the list as loaded to avoid an infinite recursion in the case; // where we have a data member that is a variable size array. In that; // case TDataMember::Init needs to get/load the list to find the data; // member used as the array size.",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnums.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx:45,Performance,load,loaded,45,"// In the case of namespace, even if we have loaded before we need to; // load again in case there was new data member added.; // Mark the list as loaded to avoid an infinite recursion in the case; // where we have a data member that is a variable size array. In that; // case TDataMember::Init needs to get/load the list to find the data; // member used as the array size.",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnums.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx:74,Performance,load,load,74,"// In the case of namespace, even if we have loaded before we need to; // load again in case there was new data member added.; // Mark the list as loaded to avoid an infinite recursion in the case; // where we have a data member that is a variable size array. In that; // case TDataMember::Init needs to get/load the list to find the data; // member used as the array size.",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnums.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx:147,Performance,load,loaded,147,"// In the case of namespace, even if we have loaded before we need to; // load again in case there was new data member added.; // Mark the list as loaded to avoid an infinite recursion in the case; // where we have a data member that is a variable size array. In that; // case TDataMember::Init needs to get/load the list to find the data; // member used as the array size.",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnums.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx:308,Performance,load,load,308,"// In the case of namespace, even if we have loaded before we need to; // load again in case there was new data member added.; // Mark the list as loaded to avoid an infinite recursion in the case; // where we have a data member that is a variable size array. In that; // case TDataMember::Init needs to get/load the list to find the data; // member used as the array size.",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnums.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx:157,Safety,avoid,avoid,157,"// In the case of namespace, even if we have loaded before we need to; // load again in case there was new data member added.; // Mark the list as loaded to avoid an infinite recursion in the case; // where we have a data member that is a variable size array. In that; // case TDataMember::Init needs to get/load the list to find the data; // member used as the array size.",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnums.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx:13,Usability,clear,clear,13,"// We cannot clear the whole unloaded list. It is too much.; // fUnloaded->Clear();",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnums.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx:75,Usability,Clear,Clear,75,"// We cannot clear the whole unloaded list. It is too much.; // fUnloaded->Clear();",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnums.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnumsWithLock.cxx:509,Security,access,access,509,"// @(#)root/cont; // Author: Bianca-Cristina Cristescu February 2014; /*************************************************************************; * Copyright (C) 1995-2013, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TListOfEnumsWithLock; A collection of TEnum objects designed for fast access given a; DeclId_t and for keep track of TEnum that were described; unloaded enum.; */",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnumsWithLock.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnumsWithLock.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnumsWithLock.cxx:208,Integrability,rout,routine,208,"////////////////////////////////////////////////////////////////////////////////; /// Return an object from the list of enums *if and only if* is has already; /// been loaded in the list. This is an internal routine.",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnumsWithLock.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnumsWithLock.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnumsWithLock.cxx:168,Performance,load,loaded,168,"////////////////////////////////////////////////////////////////////////////////; /// Return an object from the list of enums *if and only if* is has already; /// been loaded in the list. This is an internal routine.",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnumsWithLock.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnumsWithLock.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnumsWithLock.cxx:415,Availability,avail,available,415,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from this collection and recursively remove the object; /// from all other objects (and collections).; /// This function overrides TCollection::RecursiveRemove that calls; /// the Remove function. THashList::Remove cannot be called because; /// it uses the hash value of the hash table. This hash value; /// is not available anymore when RecursiveRemove is called from; /// the TObject destructor.",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnumsWithLock.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnumsWithLock.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnumsWithLock.cxx:357,Security,hash,hash,357,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from this collection and recursively remove the object; /// from all other objects (and collections).; /// This function overrides TCollection::RecursiveRemove that calls; /// the Remove function. THashList::Remove cannot be called because; /// it uses the hash value of the hash table. This hash value; /// is not available anymore when RecursiveRemove is called from; /// the TObject destructor.",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnumsWithLock.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnumsWithLock.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnumsWithLock.cxx:375,Security,hash,hash,375,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from this collection and recursively remove the object; /// from all other objects (and collections).; /// This function overrides TCollection::RecursiveRemove that calls; /// the Remove function. THashList::Remove cannot be called because; /// it uses the hash value of the hash table. This hash value; /// is not available anymore when RecursiveRemove is called from; /// the TObject destructor.",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnumsWithLock.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnumsWithLock.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnumsWithLock.cxx:392,Security,hash,hash,392,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from this collection and recursively remove the object; /// from all other objects (and collections).; /// This function overrides TCollection::RecursiveRemove that calls; /// the Remove function. THashList::Remove cannot be called because; /// it uses the hash value of the hash table. This hash value; /// is not available anymore when RecursiveRemove is called from; /// the TObject destructor.",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnumsWithLock.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnumsWithLock.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctions.cxx:493,Security,access,access,493,"// @(#)root/cont; // Author: Philippe Canal Aug 2013; /*************************************************************************; * Copyright (C) 1995-2013, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TListOfFunctions; A collection of TFunction objects designed for fast access given a; DeclId_t and for keep track of TFunction that were described; unloaded function.; */",MatchSource.CODE_COMMENT,core/meta/src/TListOfFunctions.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctions.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctions.cxx:144,Availability,avail,available,144,"////////////////////////////////////////////////////////////////////////////////; /// Return the set of overloads for this name, collecting all available ones.; /// Can construct and insert new TFunction-s.",MatchSource.CODE_COMMENT,core/meta/src/TListOfFunctions.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctions.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctions.cxx:3,Deployability,Update,Update,3,"// Update if needed.",MatchSource.CODE_COMMENT,core/meta/src/TListOfFunctions.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctions.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctions.cxx:144,Availability,avail,available,144,"////////////////////////////////////////////////////////////////////////////////; /// Return the set of overloads for this name, collecting all available ones.; /// Can construct and insert new TFunction-s.",MatchSource.CODE_COMMENT,core/meta/src/TListOfFunctions.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctions.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctions.cxx:147,Availability,avail,available,147,"////////////////////////////////////////////////////////////////////////////////; /// Return the set of overloads for function obj, collecting all available ones.; /// Can construct and insert new TFunction-s.",MatchSource.CODE_COMMENT,core/meta/src/TListOfFunctions.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctions.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctions.cxx:415,Availability,avail,available,415,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from this collection and recursively remove the object; /// from all other objects (and collections).; /// This function overrides TCollection::RecursiveRemove that calls; /// the Remove function. THashList::Remove cannot be called because; /// it uses the hash value of the hash table. This hash value; /// is not available anymore when RecursiveRemove is called from; /// the TObject destructor.",MatchSource.CODE_COMMENT,core/meta/src/TListOfFunctions.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctions.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctions.cxx:357,Security,hash,hash,357,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from this collection and recursively remove the object; /// from all other objects (and collections).; /// This function overrides TCollection::RecursiveRemove that calls; /// the Remove function. THashList::Remove cannot be called because; /// it uses the hash value of the hash table. This hash value; /// is not available anymore when RecursiveRemove is called from; /// the TObject destructor.",MatchSource.CODE_COMMENT,core/meta/src/TListOfFunctions.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctions.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctions.cxx:375,Security,hash,hash,375,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from this collection and recursively remove the object; /// from all other objects (and collections).; /// This function overrides TCollection::RecursiveRemove that calls; /// the Remove function. THashList::Remove cannot be called because; /// it uses the hash value of the hash table. This hash value; /// is not available anymore when RecursiveRemove is called from; /// the TObject destructor.",MatchSource.CODE_COMMENT,core/meta/src/TListOfFunctions.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctions.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctions.cxx:392,Security,hash,hash,392,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from this collection and recursively remove the object; /// from all other objects (and collections).; /// This function overrides TCollection::RecursiveRemove that calls; /// the Remove function. THashList::Remove cannot be called because; /// it uses the hash value of the hash table. This hash value; /// is not available anymore when RecursiveRemove is called from; /// the TObject destructor.",MatchSource.CODE_COMMENT,core/meta/src/TListOfFunctions.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctions.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctions.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load all the functions known to the interpreter for the scope 'fClass'; /// into this collection.",MatchSource.CODE_COMMENT,core/meta/src/TListOfFunctions.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctions.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctionTemplates.cxx:514,Security,access,access,514,"// @(#)root/cont; // Author: Bianca-Cristina Cristescu March 2014; /*************************************************************************; * Copyright (C) 1995-2013, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TListOfFunctionTemplates; A collection of TFunction objects designed for fast access given a; DeclId_t and for keep track of TFunction that were described; unloaded function.; */",MatchSource.CODE_COMMENT,core/meta/src/TListOfFunctionTemplates.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctionTemplates.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctionTemplates.cxx:144,Availability,avail,available,144,"////////////////////////////////////////////////////////////////////////////////; /// Return the set of overloads for this name, collecting all available ones.; /// Can construct and insert new TFunction-s.",MatchSource.CODE_COMMENT,core/meta/src/TListOfFunctionTemplates.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctionTemplates.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctionTemplates.cxx:3,Deployability,Update,Update,3,"// Update if needed.",MatchSource.CODE_COMMENT,core/meta/src/TListOfFunctionTemplates.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctionTemplates.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctionTemplates.cxx:144,Availability,avail,available,144,"////////////////////////////////////////////////////////////////////////////////; /// Return the set of overloads for this name, collecting all available ones.; /// Can construct and insert new TFunction-s.",MatchSource.CODE_COMMENT,core/meta/src/TListOfFunctionTemplates.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctionTemplates.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctionTemplates.cxx:147,Availability,avail,available,147,"////////////////////////////////////////////////////////////////////////////////; /// Return the set of overloads for function obj, collecting all available ones.; /// Can construct and insert new TFunction-s.",MatchSource.CODE_COMMENT,core/meta/src/TListOfFunctionTemplates.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctionTemplates.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctionTemplates.cxx:415,Availability,avail,available,415,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from this collection and recursively remove the object; /// from all other objects (and collections).; /// This function overrides TCollection::RecursiveRemove that calls; /// the Remove function. THashList::Remove cannot be called because; /// it uses the hash value of the hash table. This hash value; /// is not available anymore when RecursiveRemove is called from; /// the TObject destructor.",MatchSource.CODE_COMMENT,core/meta/src/TListOfFunctionTemplates.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctionTemplates.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctionTemplates.cxx:357,Security,hash,hash,357,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from this collection and recursively remove the object; /// from all other objects (and collections).; /// This function overrides TCollection::RecursiveRemove that calls; /// the Remove function. THashList::Remove cannot be called because; /// it uses the hash value of the hash table. This hash value; /// is not available anymore when RecursiveRemove is called from; /// the TObject destructor.",MatchSource.CODE_COMMENT,core/meta/src/TListOfFunctionTemplates.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctionTemplates.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctionTemplates.cxx:375,Security,hash,hash,375,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from this collection and recursively remove the object; /// from all other objects (and collections).; /// This function overrides TCollection::RecursiveRemove that calls; /// the Remove function. THashList::Remove cannot be called because; /// it uses the hash value of the hash table. This hash value; /// is not available anymore when RecursiveRemove is called from; /// the TObject destructor.",MatchSource.CODE_COMMENT,core/meta/src/TListOfFunctionTemplates.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctionTemplates.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctionTemplates.cxx:392,Security,hash,hash,392,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from this collection and recursively remove the object; /// from all other objects (and collections).; /// This function overrides TCollection::RecursiveRemove that calls; /// the Remove function. THashList::Remove cannot be called because; /// it uses the hash value of the hash table. This hash value; /// is not available anymore when RecursiveRemove is called from; /// the TObject destructor.",MatchSource.CODE_COMMENT,core/meta/src/TListOfFunctionTemplates.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctionTemplates.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctionTemplates.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load all the functions known to the interpreter for the scope 'fClass'; /// into this collection.",MatchSource.CODE_COMMENT,core/meta/src/TListOfFunctionTemplates.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctionTemplates.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethod.cxx:156,Deployability,TOGGLE,TOGGLE,156,"////////////////////////////////////////////////////////////////////////////////; /// Return call environment for the getter method in case this is a; /// *TOGGLE method (for the context menu).",MatchSource.CODE_COMMENT,core/meta/src/TMethod.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethod.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethod.cxx:154,Performance,load,loaded,154,"////////////////////////////////////////////////////////////////////////////////; /// Return true if this function object is pointing to a currently; /// loaded function. If a function is unloaded after the TMethod; /// is created, the TMethod will be set to be invalid.",MatchSource.CODE_COMMENT,core/meta/src/TMethod.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethod.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethod.cxx:150,Deployability,TOGGLE,TOGGLE,150,"////////////////////////////////////////////////////////////////////////////////; /// Return call environment for this method in case this is a; /// *TOGGLE method which takes a single boolean or integer argument.",MatchSource.CODE_COMMENT,core/meta/src/TMethod.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethod.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethod.cxx:126,Deployability,update,updates,126,"////////////////////////////////////////////////////////////////////////////////; /// Returns methodarg list and additionally updates fDataMember in TMethod by; /// calling FindDataMember();",MatchSource.CODE_COMMENT,core/meta/src/TMethod.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethod.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethod.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update the TMethod to reflect the new info.; ///; /// This can be used to implement unloading (info == 0) and then reloading; /// (info being the 'new' decl address).",MatchSource.CODE_COMMENT,core/meta/src/TMethod.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethod.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodArg.cxx:545,Usability,learn,learn,545,"////////////////////////////////////////////////////////////////////////////////; /// Returns TDataMember pointed by this methodarg.; /// If you want to specify list of options or current value for your; /// MethodArg (i.e. it is used as initial values in argument-asking dialogs; /// popped up from context-meny),you can get this value from one of data; /// members of the class.; ///; /// The only restriction is, that this DataMember object must have its; /// Getter/Setter methods set-up correctly - for details look at TDataMember.; /// To learn how to specify the data member to which the argument should; /// ""point"", look at TMethod. This is TMethod which sets up fDataMember,; /// so it could work correctly.",MatchSource.CODE_COMMENT,core/meta/src/TMethodArg.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodArg.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodArg.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update fInfo (to 0 for unloading and non-zero for reloading).; /// This takes ownership of 'info'",MatchSource.CODE_COMMENT,core/meta/src/TMethodArg.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodArg.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx:917,Availability,failure,failures,917,"// @(#)Root/meta:$Id$; // Author: Fons Rademakers 13/06/96; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TMethodCall; Method or function calling interface. Objects of this class contain; the (CINT) environment to call a global function or a method for an; object of a specific class with the desired arguments. This class is; especially useful when a method has to be called more times for; different objects and/or with different arguments. If a function or; method needs to be called only once one better uses; TInterpreter::Execute(). A limitation is known with the present implementation: failures can ; occur if parameters involve temporary object construction.; */",MatchSource.CODE_COMMENT,core/meta/src/TMethodCall.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx:469,Integrability,interface,interface,469,"// @(#)Root/meta:$Id$; // Author: Fons Rademakers 13/06/96; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TMethodCall; Method or function calling interface. Objects of this class contain; the (CINT) environment to call a global function or a method for an; object of a specific class with the desired arguments. This class is; especially useful when a method has to be called more times for; different objects and/or with different arguments. If a function or; method needs to be called only once one better uses; TInterpreter::Execute(). A limitation is known with the present implementation: failures can ; occur if parameters involve temporary object construction.; */",MatchSource.CODE_COMMENT,core/meta/src/TMethodCall.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx:335,Energy Efficiency,efficient,efficient,335,"////////////////////////////////////////////////////////////////////////////////; /// Create a method invocation environment for a specific class, method and; /// parameters. The parameter string has the form: ""\""aap\"", 3, 4.35"".; /// To execute the method call TMethodCall::Execute(object,...).; /// This two step method is much more efficient than calling for; /// every invocation TInterpreter::Execute(...).",MatchSource.CODE_COMMENT,core/meta/src/TMethodCall.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx:295,Energy Efficiency,efficient,efficient,295,"////////////////////////////////////////////////////////////////////////////////; /// Create a global function invocation environment. The parameter; /// string has the form: ""\""aap\"", 3, 4,35"". To execute the; /// function call TMethodCall::Execute(...).; /// This two step method is much more efficient than calling for; /// every invocation TInterpreter::Execute(...).",MatchSource.CODE_COMMENT,core/meta/src/TMethodCall.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx:262,Energy Efficiency,efficient,efficient,262,"////////////////////////////////////////////////////////////////////////////////; /// Create a global function invocation environment base on a TFunction object.; /// To execute the function call TMethodCall::Execute(...).; /// This two step method is much more efficient than calling for; /// every invocation TInterpreter::Execute(...).",MatchSource.CODE_COMMENT,core/meta/src/TMethodCall.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx:361,Energy Efficiency,efficient,efficient,361,"////////////////////////////////////////////////////////////////////////////////; /// Initialize the method invocation environment. Necessary input; /// information: the class, method name and the parameter string; /// of the form ""\""aap\"", 3, 4.35"".; ///; /// To execute the method call TMethodCall::Execute(object,...).; /// This two step method is much more efficient than calling for; /// every invocation TInterpreter::Execute(...).",MatchSource.CODE_COMMENT,core/meta/src/TMethodCall.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx:351,Energy Efficiency,efficient,efficient,351,"////////////////////////////////////////////////////////////////////////////////; /// Initialize the function invocation environment. Necessary input; /// information: the function name and the parameter string of; /// the form ""\""aap\"", 3, 4.35"".; ///; /// To execute the method call TMethodCall::Execute(...).; /// This two step method is much more efficient than calling for; /// every invocation TInterpreter::Execute(...).",MatchSource.CODE_COMMENT,core/meta/src/TMethodCall.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx:361,Energy Efficiency,efficient,efficient,361,"////////////////////////////////////////////////////////////////////////////////; /// Initialize the method invocation environment. Necessary input; /// information: the class, method name and the prototype string of; /// the form: ""char*,int,float"".; ///; /// To execute the method call TMethodCall::Execute(object,...).; /// This two step method is much more efficient than calling for; /// every invocation TInterpreter::Execute(...).",MatchSource.CODE_COMMENT,core/meta/src/TMethodCall.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx:351,Energy Efficiency,efficient,efficient,351,"////////////////////////////////////////////////////////////////////////////////; /// Initialize the function invocation environment. Necessary input; /// information: the function name and the prototype string of; /// the form: ""char*,int,float"".; ///; /// To execute the method call TMethodCall::Execute(...).; /// This two step method is much more efficient than calling for; /// every invocation TInterpreter::Execute(...).",MatchSource.CODE_COMMENT,core/meta/src/TMethodCall.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx:159,Usability,usab,usable,159,"////////////////////////////////////////////////////////////////////////////////; /// Return true if the method call has been properly initialized and is; /// usable.",MatchSource.CODE_COMMENT,core/meta/src/TMethodCall.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx:289,Performance,cache,cached,289,"////////////////////////////////////////////////////////////////////////////////; /// Returns the TMethod describing the method to be executed. This takes; /// all overriding and overloading into account (call TClass::GetMethod()).; /// Since finding the method is expensive the result is cached.",MatchSource.CODE_COMMENT,core/meta/src/TMethodCall.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx:275,Performance,cache,cached,275,"////////////////////////////////////////////////////////////////////////////////; /// Returns the return type of the method. Either (unsigned) long,; /// int, short and char, or float and double or anything else.; /// Since finding the return type is expensive the result is cached.",MatchSource.CODE_COMMENT,core/meta/src/TMethodCall.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx:41,Performance,load,loaded,41,"// Make sure all the enum information is loaded",MatchSource.CODE_COMMENT,core/meta/src/TProtoClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx:40,Security,access,access,40,"// Build the list of RealData before we access it:",MatchSource.CODE_COMMENT,core/meta/src/TProtoClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx:584,Testability,Test,TestBit,584,"// if (gDebug > 2) {; // for (const auto &data : fPRealData) {; // const auto classType = dataPtr->IsA();; // const auto dataName = data.fName;; // const auto dataClass = data.fClass;; // Info(""TProtoClass"",""Data is a protorealdata: %s - class %s - transient %d"", dataName.Data(),dataClass.Data(),data.fIsTransient);; //if (!dataClass.IsNull(); // if (classType == TProtoRealData::Class()); // Info(""TProtoClass"",""Data is a protorealdata: %s"", dataPtrName);; // if (classType == TObjString::Class()); // Info(""TProtoClass"",""Data is a objectstring: %s"", dataPtrName);; // if (dataPtr->TestBit(TRealData::kTransient)); // Info(""TProtoClass"",""And is transient"");; // }; // }",MatchSource.CODE_COMMENT,core/meta/src/TProtoClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx:403,Availability,error,error,403,"// The class has dictionary, has gone through some initialization and is now being requested; // to be filled by a TProtoClass.; // This can be due to:; // (a) A duplicate dictionary for a class (with or without a rootpcm associated with); // (b) The TClass was created before the registration of the rootpcm ** and ** it was; // attempted to be used before this registration; // This is technically an error; // but we either already warned that there is a 2nd dictionary for the class (in TClassTable::Add); // or this is the same (but now emptied) TProtoClass instance as before.; // We return false, since we are doing no actual change to the TClass instance and thus; // if a caller was hoping for 'improvement' in the state of the TClass instance, it did not; // happen.",MatchSource.CODE_COMMENT,core/meta/src/TProtoClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx:122,Safety,avoid,avoid,122,"// A first loop to retrieve the mother classes before starting to; // fill this TClass instance. This is done in order to avoid recursions; // for example in presence of daughter and mother class present in two; // dictionaries compiled in two different libraries which are not linked; // one with each other.",MatchSource.CODE_COMMENT,core/meta/src/TProtoClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx:181,Performance,load,loaded,181,"// for (auto * dataMember : fData) {; // //printf(""add data member for class %s - member %s \n"",GetName(), dataMember->GetName() );; // cl->fData->Add(dataMember);; // }; // // set loaded bit to true to avoid re-loading the data members; // cl->fData->SetIsLoaded();*; //cl->fData = (TListOfDataMembers*)fData;; // The TDataMember were passed along.",MatchSource.CODE_COMMENT,core/meta/src/TProtoClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx:212,Performance,load,loading,212,"// for (auto * dataMember : fData) {; // //printf(""add data member for class %s - member %s \n"",GetName(), dataMember->GetName() );; // cl->fData->Add(dataMember);; // }; // // set loaded bit to true to avoid re-loading the data members; // cl->fData->SetIsLoaded();*; //cl->fData = (TListOfDataMembers*)fData;; // The TDataMember were passed along.",MatchSource.CODE_COMMENT,core/meta/src/TProtoClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx:203,Safety,avoid,avoid,203,"// for (auto * dataMember : fData) {; // //printf(""add data member for class %s - member %s \n"",GetName(), dataMember->GetName() );; // cl->fData->Add(dataMember);; // }; // // set loaded bit to true to avoid re-loading the data members; // cl->fData->SetIsLoaded();*; //cl->fData = (TListOfDataMembers*)fData;; // The TDataMember were passed along.",MatchSource.CODE_COMMENT,core/meta/src/TProtoClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx:3,Deployability,Update,Update,3,"// Update pointers to TClass",MatchSource.CODE_COMMENT,core/meta/src/TProtoClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx:42,Performance,load,loading,42,"// We now check for the TClass entry, w/o loading. Indeed we did that above.; // If the class is not found, it means that really it was not selected and we; // replace it with an empty placeholder with the status of kForwardDeclared.; // Interactivity will be of course possible but if IO is attempted, a warning; // will be issued.",MatchSource.CODE_COMMENT,core/meta/src/TProtoClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx:3,Performance,Load,Load,3,/* Load */,MatchSource.CODE_COMMENT,core/meta/src/TProtoClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx:27,Energy Efficiency,allocate,allocate,27,"// to reset the underlying allocate space; // if (fPRealData) fPRealData->Delete();; // delete fPRealData;; // fPRealData = 0;",MatchSource.CODE_COMMENT,core/meta/src/TProtoClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx:14,Availability,down,down,14,"// I am going down 1 level",MatchSource.CODE_COMMENT,core/meta/src/TProtoClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TRealData.cxx:155,Modifiability,inherit,inherits,155,"/** \class TRealData; The TRealData class manages the effective list of all data members; for a given class. For example for an object of class TLine that inherits; from TObject and TAttLine, the TRealData object for a line contains the; complete list of all data members of the 3 classes. The list of TRealData members in TClass is built when functions like; object.Inspect or object.DrawClass are called.; */; ////////////////////////////////////////////////////////////////////////////////; /// RealData default constructor.",MatchSource.CODE_COMMENT,core/meta/src/TRealData.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TRealData.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRule.cxx:94,Security,checksum,checksum,94,"////////////////////////////////////////////////////////////////////////////////; /// Set the checksum string - returns kFALSE if the format is incorrect",MatchSource.CODE_COMMENT,core/meta/src/TSchemaRule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRule.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRule.cxx:101,Security,checksum,checksum,101,"////////////////////////////////////////////////////////////////////////////////; /// Check if given checksum is defined in this rule",MatchSource.CODE_COMMENT,core/meta/src/TSchemaRule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRule.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRule.cxx:21,Security,checksum,checksum,21,"// At this point the checksum string should always be correct",MatchSource.CODE_COMMENT,core/meta/src/TSchemaRule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRule.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRule.cxx:132,Usability,simpl,simple,132,"////////////////////////////////////////////////////////////////////////////////; /// Get the target data members of this rule as a simple string (i.e. the in memory data member).",MatchSource.CODE_COMMENT,core/meta/src/TSchemaRule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRule.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRule.cxx:113,Security,checksum,checksums,113,"//---------------------------------------------------------------------------; // Check if there are conflicting checksums; /////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/src/TSchemaRule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRule.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRule.cxx:105,Security,checksum,checksum,105,"////////////////////////////////////////////////////////////////////////////////; /// Check if specified checksum string is correct and build checksum vector.",MatchSource.CODE_COMMENT,core/meta/src/TSchemaRule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRule.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRule.cxx:142,Security,checksum,checksum,142,"////////////////////////////////////////////////////////////////////////////////; /// Check if specified checksum string is correct and build checksum vector.",MatchSource.CODE_COMMENT,core/meta/src/TSchemaRule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRule.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRule.cxx:96,Security,checksum,checksum,96,"////////////////////////////////////////////////////////////////////////////////; /// Parse the checksum in the given string. Returns either the checksum or zero; /// if the string is not a hex or decimal number.",MatchSource.CODE_COMMENT,core/meta/src/TSchemaRule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRule.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRule.cxx:145,Security,checksum,checksum,145,"////////////////////////////////////////////////////////////////////////////////; /// Parse the checksum in the given string. Returns either the checksum or zero; /// if the string is not a hex or decimal number.",MatchSource.CODE_COMMENT,core/meta/src/TSchemaRule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRule.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRuleSet.cxx:556,Testability,test,test,556,"////////////////////////////////////////////////////////////////////////////////; /// The consistency check always fails if the TClass object was not set!; /// if checkConsistency is:; /// kNoCheck: no check is done, register the rule as is; /// kCheckConflict: check only for conflicting rules; /// kCheckAll: check for conflict and check for rule about members that are not in the current class layout.; /// return kTRUE if the layout is accepted, in which case we take ownership of; /// the rule object.; /// return kFALSE if the rule failed one of the test, the rule now needs to be deleted by the caller.",MatchSource.CODE_COMMENT,core/meta/src/TSchemaRuleSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRuleSet.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRuleSet.cxx:137,Security,checksum,checksum,137,"////////////////////////////////////////////////////////////////////////////////; /// Return all the rules that applies to the specified checksum of the given 'source' class.; /// User has to delete the returned array",MatchSource.CODE_COMMENT,core/meta/src/TSchemaRuleSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRuleSet.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRuleSet.cxx:148,Security,checksum,checksum,148,"////////////////////////////////////////////////////////////////////////////////; /// Return all the rules that applies to the specified version OR checksum of the given 'source' class.; /// User has to delete the returned array",MatchSource.CODE_COMMENT,core/meta/src/TSchemaRuleSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRuleSet.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRuleSet.cxx:281,Performance,cache,cached,281,"////////////////////////////////////////////////////////////////////////////////; /// Return true if the set of rules has at least one rule that has the data; /// member named 'name' as a source.; /// If needingAlloc is true, only the rule that requires the data member to; /// be cached will be taken in consideration.",MatchSource.CODE_COMMENT,core/meta/src/TSchemaRuleSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRuleSet.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx:1851,Availability,Error,Error,1851," contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TStatusBitsChecker. TStatusBitsChecker::Check and TStatusBitsChecker::CheckAllClasses will; determine if the set of ""status bit"" declared in the class and its; base classes presents any overlap. The status bit are declared in; a given class by declaring an enum type named EStatusBits.; If some of the duplication is intentional, those duplication can; be registered in an enum type named EStatusBitsDupExceptions. ~~~ {.cpp}; // TStreamerElement status bits; enum EStatusBits {; kHasRange = BIT(6),; kCache = BIT(9),; kRepeat = BIT(10),; kRead = BIT(11),; kWrite = BIT(12),; kDoNotDelete = BIT(13),; kWholeObject = BIT(14); };. enum class EStatusBitsDupExceptions {; // This bit duplicates TObject::kInvalidObject. As the semantic of kDoNotDelete is a persistent,; // we can not change its value without breaking forward compatibility.; // Furthermore, TObject::kInvalidObject and its semantic is not (and should not be); // used in TStreamerElement; kDoNotDelete = TStreamerElement::kDoNotDelete,. // This bit duplicates TObject::kCannotPick. As the semantic of kHasRange is a persistent,; // we can not change its value without breaking forward compatibility.; // Furthermore, TObject::kCannotPick and its semantic is not (and should not be); // used in TStreamerElement; kHasRange = TStreamerElement::kHasRange; };; ~~~ {.cpp}. Without the EStatusBitsDupExceptions enum you would see. ~~~ {.cpp}; TStatusBitsChecker::Check(""TStreamerElement"");. Error in `<TStatusBitsChecker>`: In TStreamerElement class hierarchy, there are duplicates bits:; Error in `<TStatusBitsChecker>`: Bit 6 used in TStreamerElement as kHasRange; Error in `<TStatusBitsChecker>`: Bit 6 used in TObject as kCannotPick; Error in `<TStatusBitsChecker>`: Bit 13 used in TStreamerElement as kDoNotDelete; Error in `<TStatusBitsChecker>`: Bit 13 used in TObject as kInvalidObject; ~~~ {.cpp}. */",MatchSource.CODE_COMMENT,core/meta/src/TStatusBitsChecker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx:1949,Availability,Error,Error,1949," contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TStatusBitsChecker. TStatusBitsChecker::Check and TStatusBitsChecker::CheckAllClasses will; determine if the set of ""status bit"" declared in the class and its; base classes presents any overlap. The status bit are declared in; a given class by declaring an enum type named EStatusBits.; If some of the duplication is intentional, those duplication can; be registered in an enum type named EStatusBitsDupExceptions. ~~~ {.cpp}; // TStreamerElement status bits; enum EStatusBits {; kHasRange = BIT(6),; kCache = BIT(9),; kRepeat = BIT(10),; kRead = BIT(11),; kWrite = BIT(12),; kDoNotDelete = BIT(13),; kWholeObject = BIT(14); };. enum class EStatusBitsDupExceptions {; // This bit duplicates TObject::kInvalidObject. As the semantic of kDoNotDelete is a persistent,; // we can not change its value without breaking forward compatibility.; // Furthermore, TObject::kInvalidObject and its semantic is not (and should not be); // used in TStreamerElement; kDoNotDelete = TStreamerElement::kDoNotDelete,. // This bit duplicates TObject::kCannotPick. As the semantic of kHasRange is a persistent,; // we can not change its value without breaking forward compatibility.; // Furthermore, TObject::kCannotPick and its semantic is not (and should not be); // used in TStreamerElement; kHasRange = TStreamerElement::kHasRange; };; ~~~ {.cpp}. Without the EStatusBitsDupExceptions enum you would see. ~~~ {.cpp}; TStatusBitsChecker::Check(""TStreamerElement"");. Error in `<TStatusBitsChecker>`: In TStreamerElement class hierarchy, there are duplicates bits:; Error in `<TStatusBitsChecker>`: Bit 6 used in TStreamerElement as kHasRange; Error in `<TStatusBitsChecker>`: Bit 6 used in TObject as kCannotPick; Error in `<TStatusBitsChecker>`: Bit 13 used in TStreamerElement as kDoNotDelete; Error in `<TStatusBitsChecker>`: Bit 13 used in TObject as kInvalidObject; ~~~ {.cpp}. */",MatchSource.CODE_COMMENT,core/meta/src/TStatusBitsChecker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx:2027,Availability,Error,Error,2027," contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TStatusBitsChecker. TStatusBitsChecker::Check and TStatusBitsChecker::CheckAllClasses will; determine if the set of ""status bit"" declared in the class and its; base classes presents any overlap. The status bit are declared in; a given class by declaring an enum type named EStatusBits.; If some of the duplication is intentional, those duplication can; be registered in an enum type named EStatusBitsDupExceptions. ~~~ {.cpp}; // TStreamerElement status bits; enum EStatusBits {; kHasRange = BIT(6),; kCache = BIT(9),; kRepeat = BIT(10),; kRead = BIT(11),; kWrite = BIT(12),; kDoNotDelete = BIT(13),; kWholeObject = BIT(14); };. enum class EStatusBitsDupExceptions {; // This bit duplicates TObject::kInvalidObject. As the semantic of kDoNotDelete is a persistent,; // we can not change its value without breaking forward compatibility.; // Furthermore, TObject::kInvalidObject and its semantic is not (and should not be); // used in TStreamerElement; kDoNotDelete = TStreamerElement::kDoNotDelete,. // This bit duplicates TObject::kCannotPick. As the semantic of kHasRange is a persistent,; // we can not change its value without breaking forward compatibility.; // Furthermore, TObject::kCannotPick and its semantic is not (and should not be); // used in TStreamerElement; kHasRange = TStreamerElement::kHasRange; };; ~~~ {.cpp}. Without the EStatusBitsDupExceptions enum you would see. ~~~ {.cpp}; TStatusBitsChecker::Check(""TStreamerElement"");. Error in `<TStatusBitsChecker>`: In TStreamerElement class hierarchy, there are duplicates bits:; Error in `<TStatusBitsChecker>`: Bit 6 used in TStreamerElement as kHasRange; Error in `<TStatusBitsChecker>`: Bit 6 used in TObject as kCannotPick; Error in `<TStatusBitsChecker>`: Bit 13 used in TStreamerElement as kDoNotDelete; Error in `<TStatusBitsChecker>`: Bit 13 used in TObject as kInvalidObject; ~~~ {.cpp}. */",MatchSource.CODE_COMMENT,core/meta/src/TStatusBitsChecker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx:2098,Availability,Error,Error,2098," contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TStatusBitsChecker. TStatusBitsChecker::Check and TStatusBitsChecker::CheckAllClasses will; determine if the set of ""status bit"" declared in the class and its; base classes presents any overlap. The status bit are declared in; a given class by declaring an enum type named EStatusBits.; If some of the duplication is intentional, those duplication can; be registered in an enum type named EStatusBitsDupExceptions. ~~~ {.cpp}; // TStreamerElement status bits; enum EStatusBits {; kHasRange = BIT(6),; kCache = BIT(9),; kRepeat = BIT(10),; kRead = BIT(11),; kWrite = BIT(12),; kDoNotDelete = BIT(13),; kWholeObject = BIT(14); };. enum class EStatusBitsDupExceptions {; // This bit duplicates TObject::kInvalidObject. As the semantic of kDoNotDelete is a persistent,; // we can not change its value without breaking forward compatibility.; // Furthermore, TObject::kInvalidObject and its semantic is not (and should not be); // used in TStreamerElement; kDoNotDelete = TStreamerElement::kDoNotDelete,. // This bit duplicates TObject::kCannotPick. As the semantic of kHasRange is a persistent,; // we can not change its value without breaking forward compatibility.; // Furthermore, TObject::kCannotPick and its semantic is not (and should not be); // used in TStreamerElement; kHasRange = TStreamerElement::kHasRange; };; ~~~ {.cpp}. Without the EStatusBitsDupExceptions enum you would see. ~~~ {.cpp}; TStatusBitsChecker::Check(""TStreamerElement"");. Error in `<TStatusBitsChecker>`: In TStreamerElement class hierarchy, there are duplicates bits:; Error in `<TStatusBitsChecker>`: Bit 6 used in TStreamerElement as kHasRange; Error in `<TStatusBitsChecker>`: Bit 6 used in TObject as kCannotPick; Error in `<TStatusBitsChecker>`: Bit 13 used in TStreamerElement as kDoNotDelete; Error in `<TStatusBitsChecker>`: Bit 13 used in TObject as kInvalidObject; ~~~ {.cpp}. */",MatchSource.CODE_COMMENT,core/meta/src/TStatusBitsChecker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx:2180,Availability,Error,Error,2180," contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TStatusBitsChecker. TStatusBitsChecker::Check and TStatusBitsChecker::CheckAllClasses will; determine if the set of ""status bit"" declared in the class and its; base classes presents any overlap. The status bit are declared in; a given class by declaring an enum type named EStatusBits.; If some of the duplication is intentional, those duplication can; be registered in an enum type named EStatusBitsDupExceptions. ~~~ {.cpp}; // TStreamerElement status bits; enum EStatusBits {; kHasRange = BIT(6),; kCache = BIT(9),; kRepeat = BIT(10),; kRead = BIT(11),; kWrite = BIT(12),; kDoNotDelete = BIT(13),; kWholeObject = BIT(14); };. enum class EStatusBitsDupExceptions {; // This bit duplicates TObject::kInvalidObject. As the semantic of kDoNotDelete is a persistent,; // we can not change its value without breaking forward compatibility.; // Furthermore, TObject::kInvalidObject and its semantic is not (and should not be); // used in TStreamerElement; kDoNotDelete = TStreamerElement::kDoNotDelete,. // This bit duplicates TObject::kCannotPick. As the semantic of kHasRange is a persistent,; // we can not change its value without breaking forward compatibility.; // Furthermore, TObject::kCannotPick and its semantic is not (and should not be); // used in TStreamerElement; kHasRange = TStreamerElement::kHasRange; };; ~~~ {.cpp}. Without the EStatusBitsDupExceptions enum you would see. ~~~ {.cpp}; TStatusBitsChecker::Check(""TStreamerElement"");. Error in `<TStatusBitsChecker>`: In TStreamerElement class hierarchy, there are duplicates bits:; Error in `<TStatusBitsChecker>`: Bit 6 used in TStreamerElement as kHasRange; Error in `<TStatusBitsChecker>`: Bit 6 used in TObject as kCannotPick; Error in `<TStatusBitsChecker>`: Bit 13 used in TStreamerElement as kDoNotDelete; Error in `<TStatusBitsChecker>`: Bit 13 used in TObject as kInvalidObject; ~~~ {.cpp}. */",MatchSource.CODE_COMMENT,core/meta/src/TStatusBitsChecker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx:27,Availability,error,errors,27,"// frexp doc is:; // if no errors occur,; // returns the value x in the range (-1;-0.5], [0.5; 1); // and stores an integer value in *exp such that x×2^(*exp) = arg",MatchSource.CODE_COMMENT,core/meta/src/TStatusBitsChecker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx:34,Availability,error,error,34,"/// @brief Return false and print error messages if there is any unexpected; /// duplicates BIT constant in the class hierarchy or any of the bits; /// already registered.; /// If verbose is true, also print all the bit declare in this class; /// and all its bases.",MatchSource.CODE_COMMENT,core/meta/src/TStatusBitsChecker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx:40,Integrability,message,messages,40,"/// @brief Return false and print error messages if there is any unexpected; /// duplicates BIT constant in the class hierarchy or any of the bits; /// already registered.; /// If verbose is true, also print all the bit declare in this class; /// and all its bases.",MatchSource.CODE_COMMENT,core/meta/src/TStatusBitsChecker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx:27,Availability,error,error,27,"/// Return false and print error messages if there is any unexpected; /// duplicates BIT constant in the class hierarchy.; /// If verbose is true, also print all the bit declare in this class; /// and all its bases.",MatchSource.CODE_COMMENT,core/meta/src/TStatusBitsChecker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx:33,Integrability,message,messages,33,"/// Return false and print error messages if there is any unexpected; /// duplicates BIT constant in the class hierarchy.; /// If verbose is true, also print all the bit declare in this class; /// and all its bases.",MatchSource.CODE_COMMENT,core/meta/src/TStatusBitsChecker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx:27,Availability,error,error,27,"/// Return false and print error messages if there is any unexpected; /// duplicates BIT constant in the class hierarchy.; /// If verbose is true, also print all the bit declare in this class; /// and all its bases.",MatchSource.CODE_COMMENT,core/meta/src/TStatusBitsChecker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx:33,Integrability,message,messages,33,"/// Return false and print error messages if there is any unexpected; /// duplicates BIT constant in the class hierarchy.; /// If verbose is true, also print all the bit declare in this class; /// and all its bases.",MatchSource.CODE_COMMENT,core/meta/src/TStatusBitsChecker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx:27,Availability,error,error,27,"/// Return false and print error messages if there is any unexpected; /// duplicates BIT constant in any of the class hierarchy knows; /// to TClassTable.; /// If verbose is true, also print all the bit declare in eacho of the classes; /// and all their bases.",MatchSource.CODE_COMMENT,core/meta/src/TStatusBitsChecker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx:33,Integrability,message,messages,33,"/// Return false and print error messages if there is any unexpected; /// duplicates BIT constant in any of the class hierarchy knows; /// to TClassTable.; /// If verbose is true, also print all the bit declare in eacho of the classes; /// and all their bases.",MatchSource.CODE_COMMENT,core/meta/src/TStatusBitsChecker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx:167,Performance,cache,cached,167,"////////////////////////////////////////////////////////////////////////////////; /// Fill type with the string representation of sequence; /// information including 'cached','repeat','write' or; /// 'nodelete'.",MatchSource.CODE_COMMENT,core/meta/src/TStreamerElement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx:212,Safety,detect,detected,212,"////////////////////////////////////////////////////////////////////////////////; /// The early 3.00/00 and 3.01/01 versions used to store; /// dm->GetTypeName instead of dm->GetFullTypename; /// if this case is detected, the element type name is modified.",MatchSource.CODE_COMMENT,core/meta/src/TStreamerElement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx:191,Performance,cache,cache,191,"////////////////////////////////////////////////////////////////////////////////; /// Return kTRUE if the element represent an entity that is not written; /// to the disk (transient members, cache allocator/deallocator, etc.)",MatchSource.CODE_COMMENT,core/meta/src/TStreamerElement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx:104,Performance,load,loaded,104,"// Well since some emulated class is replaced by a real class, we can; // assume a new library has been loaded. If this is the case, we should; // check whether the class now exist (this would be the case for example; // for reading STL containers).",MatchSource.CODE_COMMENT,core/meta/src/TStreamerElement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx:75,Performance,load,loaded,75,"// If the class owning the TStreamerElement and the base class are not; // loaded, on the file their streamer info might be in the following; // order (derived class,base class) and hence the base class is not; // yet emulated.",MatchSource.CODE_COMMENT,core/meta/src/TStreamerElement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx:35,Modifiability,inherit,inheritance,35,"// FIXME: does not suport multiple inheritance for counter in base class.; // This is wrong in case counter is not in the same class or one of; // the left most (non virtual) base classes. For the other we would; // really need to use the object coming from the list of real data.; // (and even that need analysis for virtual base class).",MatchSource.CODE_COMMENT,core/meta/src/TStreamerElement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx:243,Modifiability,inherit,inherits,243,"//______________________________________________________________________________; //////////////////////////////////////////////////////////////////////////; // //; // TStreamerObject implements streaming of embedded objects whose type //; // inherits from TObject. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/src/TStreamerElement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx:237,Modifiability,inherit,inheriting,237,"//______________________________________________________________________________; //////////////////////////////////////////////////////////////////////////; // //; // TStreamerObjectAny implement streaming of embedded object not //; // inheriting from TObject. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/src/TStreamerElement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx:240,Modifiability,inherit,inheriting,240,"//______________________________________________________________________________; //////////////////////////////////////////////////////////////////////////; // //; // TStreamerObjectPointer implements streaming of pointer to object //; // inheriting from TObject. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/src/TStreamerElement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx:247,Modifiability,inherit,inheriting,247,"//______________________________________________________________________________; //////////////////////////////////////////////////////////////////////////; // //; // TStreamerObjectPointerAny implements streaming of pointer to object //; // not inheriting from TObject. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/src/TStreamerElement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx:128,Modifiability,variab,variable,128,"////////////////////////////////////////////////////////////////////////////////; /// We can not split STL's which are inside a variable size array.; /// At least for now.",MatchSource.CODE_COMMENT,core/meta/src/TStreamerElement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx:17,Modifiability,variab,variable,17,"// can not split variable size array",MatchSource.CODE_COMMENT,core/meta/src/TStreamerElement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx:94,Integrability,depend,depends,94,"// Since the STL collection might or might not be emulated and that the; // sizeof the object depends on this, let's just always retrieve the; // current size!",MatchSource.CODE_COMMENT,core/meta/src/TStreamerElement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx:3,Safety,Avoid,Avoid,3,"// Avoid resetting during a cloning.",MatchSource.CODE_COMMENT,core/meta/src/TStreamerElement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx:220,Integrability,inject,injected,220,"//______________________________________________________________________________; ///////////////////////////////////////////////////////////////////////////////; // //; // TStreamerArtificial implements StreamerElement injected by a TSchemaRule. //; // //; ///////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/src/TStreamerElement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx:220,Security,inject,injected,220,"//______________________________________________________________________________; ///////////////////////////////////////////////////////////////////////////////; // //; // TStreamerArtificial implements StreamerElement injected by a TSchemaRule. //; // //; ///////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/src/TStreamerElement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx:3,Safety,Avoid,Avoid,3,"// Avoid streaming the synthetic/artificial streamer elements.; // Intentionally, nothing to do at all.",MatchSource.CODE_COMMENT,core/meta/src/TStreamerElement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubDataMembers.cxx:481,Integrability,interface,interface,481,"// @(#)root/cont:$Id$; // Author: Philippe Canal October 2013; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TViewPubDataMembers; View implementing the TList interface and giving access all the; TDictionary describing public data members in a class and all its; base classes without caching any of the TDictionary pointers. Adding to this collection directly is prohibited.; Iteration can only be done via the TIterator interfaces.; */",MatchSource.CODE_COMMENT,core/meta/src/TViewPubDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubDataMembers.cxx:743,Integrability,interface,interfaces,743,"// @(#)root/cont:$Id$; // Author: Philippe Canal October 2013; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TViewPubDataMembers; View implementing the TList interface and giving access all the; TDictionary describing public data members in a class and all its; base classes without caching any of the TDictionary pointers. Adding to this collection directly is prohibited.; Iteration can only be done via the TIterator interfaces.; */",MatchSource.CODE_COMMENT,core/meta/src/TViewPubDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubDataMembers.cxx:502,Security,access,access,502,"// @(#)root/cont:$Id$; // Author: Philippe Canal October 2013; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TViewPubDataMembers; View implementing the TList interface and giving access all the; TDictionary describing public data members in a class and all its; base classes without caching any of the TDictionary pointers. Adding to this collection directly is prohibited.; Iteration can only be done via the TIterator interfaces.; */",MatchSource.CODE_COMMENT,core/meta/src/TViewPubDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubDataMembers.cxx:86,Usability,Clear,Clear,86,"////////////////////////////////////////////////////////////////////////////////; /// Clear is not allowed in this class.; /// See TList::Clear for the intended behavior.",MatchSource.CODE_COMMENT,core/meta/src/TViewPubDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubDataMembers.cxx:138,Usability,Clear,Clear,138,"////////////////////////////////////////////////////////////////////////////////; /// Clear is not allowed in this class.; /// See TList::Clear for the intended behavior.",MatchSource.CODE_COMMENT,core/meta/src/TViewPubDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubDataMembers.cxx:37,Security,hash,hash,37,"// The 'ListForObject' is actually a hash table bucket that can also; // contain other element/name.",MatchSource.CODE_COMMENT,core/meta/src/TViewPubDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubDataMembers.cxx:143,Performance,load,loaded,143,"////////////////////////////////////////////////////////////////////////////////; /// Return the total number of public data members(currently loaded in the list; /// of DataMembers) in this class and all its base classes.",MatchSource.CODE_COMMENT,core/meta/src/TViewPubDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubDataMembers.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load all the DataMembers known to the interpreter for the scope 'fClass'; /// and all its bases classes.",MatchSource.CODE_COMMENT,core/meta/src/TViewPubDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubDataMembers.h:21,Integrability,rout,routines,21,"// All the following routines are explicitly disallow/unsupported for; // a view",MatchSource.CODE_COMMENT,core/meta/src/TViewPubDataMembers.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubDataMembers.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubFunctions.cxx:479,Integrability,interface,interface,479,"// @(#)root/cont:$Id$; // Author: Philippe Canal October 2013; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TViewPubFunctions; View implementing the TList interface and giving access all the; TFunction describing public methods in a class and all its base; classes without caching any of the TFunction pointers. Adding to this collection directly is prohibited.; Iteration can only be done via the TIterator interfaces.; */",MatchSource.CODE_COMMENT,core/meta/src/TViewPubFunctions.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubFunctions.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubFunctions.cxx:732,Integrability,interface,interfaces,732,"// @(#)root/cont:$Id$; // Author: Philippe Canal October 2013; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TViewPubFunctions; View implementing the TList interface and giving access all the; TFunction describing public methods in a class and all its base; classes without caching any of the TFunction pointers. Adding to this collection directly is prohibited.; Iteration can only be done via the TIterator interfaces.; */",MatchSource.CODE_COMMENT,core/meta/src/TViewPubFunctions.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubFunctions.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubFunctions.cxx:500,Security,access,access,500,"// @(#)root/cont:$Id$; // Author: Philippe Canal October 2013; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TViewPubFunctions; View implementing the TList interface and giving access all the; TFunction describing public methods in a class and all its base; classes without caching any of the TFunction pointers. Adding to this collection directly is prohibited.; Iteration can only be done via the TIterator interfaces.; */",MatchSource.CODE_COMMENT,core/meta/src/TViewPubFunctions.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubFunctions.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubFunctions.cxx:86,Usability,Clear,Clear,86,"////////////////////////////////////////////////////////////////////////////////; /// Clear is not allowed in this class.; /// See TList::Clear for the intended behavior.",MatchSource.CODE_COMMENT,core/meta/src/TViewPubFunctions.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubFunctions.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubFunctions.cxx:138,Usability,Clear,Clear,138,"////////////////////////////////////////////////////////////////////////////////; /// Clear is not allowed in this class.; /// See TList::Clear for the intended behavior.",MatchSource.CODE_COMMENT,core/meta/src/TViewPubFunctions.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubFunctions.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubFunctions.cxx:139,Performance,load,loaded,139,"////////////////////////////////////////////////////////////////////////////////; /// Return the total number of public methods (currently loaded in the list; /// of functions) in this class and all its base classes.",MatchSource.CODE_COMMENT,core/meta/src/TViewPubFunctions.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubFunctions.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubFunctions.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load all the functions known to the interpreter for the scope 'fClass'; /// and all its bases classes.",MatchSource.CODE_COMMENT,core/meta/src/TViewPubFunctions.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubFunctions.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubFunctions.h:21,Integrability,rout,routines,21,"// All the following routines are explicitly disallow/unsupported for; // a view",MatchSource.CODE_COMMENT,core/meta/src/TViewPubFunctions.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubFunctions.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubFunctions.h:27,Security,hash,hashtable,27,"// Doubly linked list with hashtable for lookup",MatchSource.CODE_COMMENT,core/meta/src/TViewPubFunctions.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubFunctions.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TVirtualStreamerInfo.cxx:456,Integrability,Interface,Interface,456,"// @(#)root/base:$Id$; // Author: Rene Brun 05/02/2007; /*************************************************************************; * Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TVirtualStreamerInfo; Abstract Interface class describing Streamer information for one class.; */",MatchSource.CODE_COMMENT,core/meta/src/TVirtualStreamerInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TVirtualStreamerInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TVirtualStreamerInfo.cxx:120,Performance,optimiz,optimization,120,"////////////////////////////////////////////////////////////////////////////////; /// static function returning true if optimization can be on",MatchSource.CODE_COMMENT,core/meta/src/TVirtualStreamerInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TVirtualStreamerInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TVirtualStreamerInfo.cxx:484,Testability,test,testing,484,"// Even if the streamerInfo exist, it could still need to be 'build'; // It is important to figure this out, because; // a) if it is not build, we need to build; // b) if is build, we should not build it (or we could end up in an; // infinite loop, if the element and its counter are in the same; // class!; // Checking IsCompiled is sufficient here even-though it is set only at; // the end of the call to Build as this function has an; // internal recursion prevention (setting and testing kBuildRunning).",MatchSource.CODE_COMMENT,core/meta/src/TVirtualStreamerInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TVirtualStreamerInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TVirtualStreamerInfo.cxx:532,Modifiability,polymorphi,polymorphism,532,"////////////////////////////////////////////////////////////////////////////////; /// Return whether the TStreamerInfos will save the collections in; /// ""member-wise"" order whenever possible. The default is to store member-wise.; /// - kTRUE indicates member-wise storing; /// - kFALSE inddicates object-wise storing; ///; /// A collection can be saved member wise when it contain is guaranteed to be; /// homogeneous. For example std::vector<THit> can be stored member wise,; /// while std::vector<THit*> can not (possible use of polymorphism).",MatchSource.CODE_COMMENT,core/meta/src/TVirtualStreamerInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TVirtualStreamerInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TVirtualStreamerInfo.cxx:122,Performance,optimiz,optimization,122,"////////////////////////////////////////////////////////////////////////////////; /// This is a static function.; /// Set optimization option.; /// When this option is activated (default), consecutive data members; /// of the same type are merged into an array (faster).; /// Optimization must be off in TTree split mode.",MatchSource.CODE_COMMENT,core/meta/src/TVirtualStreamerInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TVirtualStreamerInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TVirtualStreamerInfo.cxx:276,Performance,Optimiz,Optimization,276,"////////////////////////////////////////////////////////////////////////////////; /// This is a static function.; /// Set optimization option.; /// When this option is activated (default), consecutive data members; /// of the same type are merged into an array (faster).; /// Optimization must be off in TTree split mode.",MatchSource.CODE_COMMENT,core/meta/src/TVirtualStreamerInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TVirtualStreamerInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TVirtualStreamerInfo.cxx:223,Modifiability,plugin,plugin,223,"////////////////////////////////////////////////////////////////////////////////; /// Static function returning a pointer to a new TVirtualStreamerInfo object.; /// If the Info factory does not exist, it is created via the plugin manager.; /// In reality the factory is an empty TStreamerInfo object.",MatchSource.CODE_COMMENT,core/meta/src/TVirtualStreamerInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TVirtualStreamerInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TVirtualStreamerInfo.cxx:205,Modifiability,polymorphi,polymorphism,205,"// A collection can be saved member wise when it contain is guaranteed to be; // homogeneous. For example std::vector<THit> can be stored member wise,; // while std::vector<THit*> can not (possible use of polymorphism).",MatchSource.CODE_COMMENT,core/meta/src/TVirtualStreamerInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TVirtualStreamerInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx:2465,Energy Efficiency,energy,energy,2465,"{; public:; virtual int Get() = 0;. ClassDef(SecondAbstract, 2);; };. class Third : public SecondAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(Third, 2);; };. class FirstOverloadCorrect : public TObject; {; public:; ~FirstOverloadCorrect() {; ROOT::CallRecursiveRemoveIfNeeded(*this);; }; virtual ULong_t Hash() const { return 3; }. ClassDefInline(FirstOverloadCorrect, 2);; };. class SecondCorrectAbstract : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; virtual int Get() = 0;. ClassDef(SecondCorrectAbstract, 2);; };. class SecondCorrectAbstractHash : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; ~SecondCorrectAbstractHash() {; ROOT::CallRecursiveRemoveIfNeeded(*this);; }. virtual ULong_t Hash() const { return 4; }; virtual int Get() = 0;. ClassDef(SecondCorrectAbstractHash, 2);; };. class ThirdCorrect : public SecondCorrectAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(ThirdCorrect, 2);; };. class SecondInCorrectAbstract : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; virtual ULong_t Hash() const { return 5; }; virtual int Get() = 0;. ClassDef(SecondInCorrectAbstract, 2);; };. class ThirdInCorrect : public SecondInCorrectAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(ThirdInCorrect, 2);; };. // Just declare this one so Cling will know it, but; // do not use it to avoid the TClass being stuck in; // kInterpreted state.; class WrongSetup : public TObject; {; public:; virtual ULong_t Hash() const { return 6; }. ClassDefInline(WrongSetup, 2);; };. // This example is valid according to C++11, 9.2/16: In addition, if class T has a user-declared constructor (12.1),; // every non-static data member of class T shall have a name different from T.; //; class Rho: public TObject; {; public:; Float_t Rho; // rho energy density; Float_t Edges[2]; // pseudorapidity range edges. ClassDef(Rho, 1); };; )CODE""",MatchSource.CODE_COMMENT,core/meta/test/testHashRecursiveRemove.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx:2020,Safety,avoid,avoid,2020,"{; public:; virtual int Get() = 0;. ClassDef(SecondAbstract, 2);; };. class Third : public SecondAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(Third, 2);; };. class FirstOverloadCorrect : public TObject; {; public:; ~FirstOverloadCorrect() {; ROOT::CallRecursiveRemoveIfNeeded(*this);; }; virtual ULong_t Hash() const { return 3; }. ClassDefInline(FirstOverloadCorrect, 2);; };. class SecondCorrectAbstract : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; virtual int Get() = 0;. ClassDef(SecondCorrectAbstract, 2);; };. class SecondCorrectAbstractHash : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; ~SecondCorrectAbstractHash() {; ROOT::CallRecursiveRemoveIfNeeded(*this);; }. virtual ULong_t Hash() const { return 4; }; virtual int Get() = 0;. ClassDef(SecondCorrectAbstractHash, 2);; };. class ThirdCorrect : public SecondCorrectAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(ThirdCorrect, 2);; };. class SecondInCorrectAbstract : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; virtual ULong_t Hash() const { return 5; }; virtual int Get() = 0;. ClassDef(SecondInCorrectAbstract, 2);; };. class ThirdInCorrect : public SecondInCorrectAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(ThirdInCorrect, 2);; };. // Just declare this one so Cling will know it, but; // do not use it to avoid the TClass being stuck in; // kInterpreted state.; class WrongSetup : public TObject; {; public:; virtual ULong_t Hash() const { return 6; }. ClassDefInline(WrongSetup, 2);; };. // This example is valid according to C++11, 9.2/16: In addition, if class T has a user-declared constructor (12.1),; // every non-static data member of class T shall have a name different from T.; //; class Rho: public TObject; {; public:; Float_t Rho; // rho energy density; Float_t Edges[2]; // pseudorapidity range edges. ClassDef(Rho, 1); };; )CODE""",MatchSource.CODE_COMMENT,core/meta/test/testHashRecursiveRemove.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx:116,Security,Hash,Hash,116,"R""CODE(. #include ""TROOT.h""; #include <iostream>. class FirstOverload : public TObject; {; public:; virtual ULong_t Hash() const { return 1; }. ClassDefInline(FirstOverload, 2);; };. class SecondOverload : public FirstOverload // Could also have used TNamed.; {; public:; virtual ULong_t Hash() const { return 2; }. ClassDefInline(SecondOverload, 2);; };. class SecondNoHash : public FirstOverload // Could also have used TNamed.; {; public:. ClassDefInline(SecondNoHash, 2);; };. class SecondAbstract : public FirstOverload // Could also have used TNamed.; {; public:; virtual int Get() = 0;. ClassDef(SecondAbstract, 2);; };. class Third : public SecondAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(Third, 2);; };. class FirstOverloadCorrect : public TObject; {; public:; ~FirstOverloadCorrect() {; ROOT::CallRecursiveRemoveIfNeeded(*this);; }; virtual ULong_t Hash() const { return 3; }. ClassDefInline(FirstOverloadCorrect, 2);; };. class SecondCorrectAbstract : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; virtual int Get() = 0;. ClassDef(SecondCorrectAbstract, 2);; };. class SecondCorrectAbstractHash : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; ~SecondCorrectAbstractHash() {; ROOT::CallRecursiveRemoveIfNeeded(*this);; }. virtual ULong_t Hash() const { return 4; }; virtual int Get() = 0;. ClassDef(SecondCorrectAbstractHash, 2);; };. class ThirdCorrect : public SecondCorrectAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(ThirdCorrect, 2);; };. class SecondInCorrectAbstract : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; virtual ULong_t Hash() const { return 5; }; virtual int Get() = 0;. ClassDef(SecondInCorrectAbstract, 2);; };. class ThirdInCorrect : public SecondInCorrectAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(ThirdInCorrect, 2);; };. // Just declare this one so Cling will know it, but; /",MatchSource.CODE_COMMENT,core/meta/test/testHashRecursiveRemove.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx:288,Security,Hash,Hash,288,"R""CODE(. #include ""TROOT.h""; #include <iostream>. class FirstOverload : public TObject; {; public:; virtual ULong_t Hash() const { return 1; }. ClassDefInline(FirstOverload, 2);; };. class SecondOverload : public FirstOverload // Could also have used TNamed.; {; public:; virtual ULong_t Hash() const { return 2; }. ClassDefInline(SecondOverload, 2);; };. class SecondNoHash : public FirstOverload // Could also have used TNamed.; {; public:. ClassDefInline(SecondNoHash, 2);; };. class SecondAbstract : public FirstOverload // Could also have used TNamed.; {; public:; virtual int Get() = 0;. ClassDef(SecondAbstract, 2);; };. class Third : public SecondAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(Third, 2);; };. class FirstOverloadCorrect : public TObject; {; public:; ~FirstOverloadCorrect() {; ROOT::CallRecursiveRemoveIfNeeded(*this);; }; virtual ULong_t Hash() const { return 3; }. ClassDefInline(FirstOverloadCorrect, 2);; };. class SecondCorrectAbstract : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; virtual int Get() = 0;. ClassDef(SecondCorrectAbstract, 2);; };. class SecondCorrectAbstractHash : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; ~SecondCorrectAbstractHash() {; ROOT::CallRecursiveRemoveIfNeeded(*this);; }. virtual ULong_t Hash() const { return 4; }; virtual int Get() = 0;. ClassDef(SecondCorrectAbstractHash, 2);; };. class ThirdCorrect : public SecondCorrectAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(ThirdCorrect, 2);; };. class SecondInCorrectAbstract : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; virtual ULong_t Hash() const { return 5; }; virtual int Get() = 0;. ClassDef(SecondInCorrectAbstract, 2);; };. class ThirdInCorrect : public SecondInCorrectAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(ThirdInCorrect, 2);; };. // Just declare this one so Cling will know it, but; /",MatchSource.CODE_COMMENT,core/meta/test/testHashRecursiveRemove.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx:897,Security,Hash,Hash,897,"R""CODE(. #include ""TROOT.h""; #include <iostream>. class FirstOverload : public TObject; {; public:; virtual ULong_t Hash() const { return 1; }. ClassDefInline(FirstOverload, 2);; };. class SecondOverload : public FirstOverload // Could also have used TNamed.; {; public:; virtual ULong_t Hash() const { return 2; }. ClassDefInline(SecondOverload, 2);; };. class SecondNoHash : public FirstOverload // Could also have used TNamed.; {; public:. ClassDefInline(SecondNoHash, 2);; };. class SecondAbstract : public FirstOverload // Could also have used TNamed.; {; public:; virtual int Get() = 0;. ClassDef(SecondAbstract, 2);; };. class Third : public SecondAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(Third, 2);; };. class FirstOverloadCorrect : public TObject; {; public:; ~FirstOverloadCorrect() {; ROOT::CallRecursiveRemoveIfNeeded(*this);; }; virtual ULong_t Hash() const { return 3; }. ClassDefInline(FirstOverloadCorrect, 2);; };. class SecondCorrectAbstract : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; virtual int Get() = 0;. ClassDef(SecondCorrectAbstract, 2);; };. class SecondCorrectAbstractHash : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; ~SecondCorrectAbstractHash() {; ROOT::CallRecursiveRemoveIfNeeded(*this);; }. virtual ULong_t Hash() const { return 4; }; virtual int Get() = 0;. ClassDef(SecondCorrectAbstractHash, 2);; };. class ThirdCorrect : public SecondCorrectAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(ThirdCorrect, 2);; };. class SecondInCorrectAbstract : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; virtual ULong_t Hash() const { return 5; }; virtual int Get() = 0;. ClassDef(SecondInCorrectAbstract, 2);; };. class ThirdInCorrect : public SecondInCorrectAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(ThirdInCorrect, 2);; };. // Just declare this one so Cling will know it, but; /",MatchSource.CODE_COMMENT,core/meta/test/testHashRecursiveRemove.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx:1340,Security,Hash,Hash,1340,"lass SecondNoHash : public FirstOverload // Could also have used TNamed.; {; public:. ClassDefInline(SecondNoHash, 2);; };. class SecondAbstract : public FirstOverload // Could also have used TNamed.; {; public:; virtual int Get() = 0;. ClassDef(SecondAbstract, 2);; };. class Third : public SecondAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(Third, 2);; };. class FirstOverloadCorrect : public TObject; {; public:; ~FirstOverloadCorrect() {; ROOT::CallRecursiveRemoveIfNeeded(*this);; }; virtual ULong_t Hash() const { return 3; }. ClassDefInline(FirstOverloadCorrect, 2);; };. class SecondCorrectAbstract : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; virtual int Get() = 0;. ClassDef(SecondCorrectAbstract, 2);; };. class SecondCorrectAbstractHash : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; ~SecondCorrectAbstractHash() {; ROOT::CallRecursiveRemoveIfNeeded(*this);; }. virtual ULong_t Hash() const { return 4; }; virtual int Get() = 0;. ClassDef(SecondCorrectAbstractHash, 2);; };. class ThirdCorrect : public SecondCorrectAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(ThirdCorrect, 2);; };. class SecondInCorrectAbstract : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; virtual ULong_t Hash() const { return 5; }; virtual int Get() = 0;. ClassDef(SecondInCorrectAbstract, 2);; };. class ThirdInCorrect : public SecondInCorrectAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(ThirdInCorrect, 2);; };. // Just declare this one so Cling will know it, but; // do not use it to avoid the TClass being stuck in; // kInterpreted state.; class WrongSetup : public TObject; {; public:; virtual ULong_t Hash() const { return 6; }. ClassDefInline(WrongSetup, 2);; };. // This example is valid according to C++11, 9.2/16: In addition, if class T has a user-declared constructor (12.1),; // every non-static data member of ",MatchSource.CODE_COMMENT,core/meta/test/testHashRecursiveRemove.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx:1702,Security,Hash,Hash,1702,"{; public:; virtual int Get() = 0;. ClassDef(SecondAbstract, 2);; };. class Third : public SecondAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(Third, 2);; };. class FirstOverloadCorrect : public TObject; {; public:; ~FirstOverloadCorrect() {; ROOT::CallRecursiveRemoveIfNeeded(*this);; }; virtual ULong_t Hash() const { return 3; }. ClassDefInline(FirstOverloadCorrect, 2);; };. class SecondCorrectAbstract : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; virtual int Get() = 0;. ClassDef(SecondCorrectAbstract, 2);; };. class SecondCorrectAbstractHash : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; ~SecondCorrectAbstractHash() {; ROOT::CallRecursiveRemoveIfNeeded(*this);; }. virtual ULong_t Hash() const { return 4; }; virtual int Get() = 0;. ClassDef(SecondCorrectAbstractHash, 2);; };. class ThirdCorrect : public SecondCorrectAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(ThirdCorrect, 2);; };. class SecondInCorrectAbstract : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; virtual ULong_t Hash() const { return 5; }; virtual int Get() = 0;. ClassDef(SecondInCorrectAbstract, 2);; };. class ThirdInCorrect : public SecondInCorrectAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(ThirdInCorrect, 2);; };. // Just declare this one so Cling will know it, but; // do not use it to avoid the TClass being stuck in; // kInterpreted state.; class WrongSetup : public TObject; {; public:; virtual ULong_t Hash() const { return 6; }. ClassDefInline(WrongSetup, 2);; };. // This example is valid according to C++11, 9.2/16: In addition, if class T has a user-declared constructor (12.1),; // every non-static data member of class T shall have a name different from T.; //; class Rho: public TObject; {; public:; Float_t Rho; // rho energy density; Float_t Edges[2]; // pseudorapidity range edges. ClassDef(Rho, 1); };; )CODE""",MatchSource.CODE_COMMENT,core/meta/test/testHashRecursiveRemove.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx:2140,Security,Hash,Hash,2140,"{; public:; virtual int Get() = 0;. ClassDef(SecondAbstract, 2);; };. class Third : public SecondAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(Third, 2);; };. class FirstOverloadCorrect : public TObject; {; public:; ~FirstOverloadCorrect() {; ROOT::CallRecursiveRemoveIfNeeded(*this);; }; virtual ULong_t Hash() const { return 3; }. ClassDefInline(FirstOverloadCorrect, 2);; };. class SecondCorrectAbstract : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; virtual int Get() = 0;. ClassDef(SecondCorrectAbstract, 2);; };. class SecondCorrectAbstractHash : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; ~SecondCorrectAbstractHash() {; ROOT::CallRecursiveRemoveIfNeeded(*this);; }. virtual ULong_t Hash() const { return 4; }; virtual int Get() = 0;. ClassDef(SecondCorrectAbstractHash, 2);; };. class ThirdCorrect : public SecondCorrectAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(ThirdCorrect, 2);; };. class SecondInCorrectAbstract : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; virtual ULong_t Hash() const { return 5; }; virtual int Get() = 0;. ClassDef(SecondInCorrectAbstract, 2);; };. class ThirdInCorrect : public SecondInCorrectAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(ThirdInCorrect, 2);; };. // Just declare this one so Cling will know it, but; // do not use it to avoid the TClass being stuck in; // kInterpreted state.; class WrongSetup : public TObject; {; public:; virtual ULong_t Hash() const { return 6; }. ClassDefInline(WrongSetup, 2);; };. // This example is valid according to C++11, 9.2/16: In addition, if class T has a user-declared constructor (12.1),; // every non-static data member of class T shall have a name different from T.; //; class Rho: public TObject; {; public:; Float_t Rho; // rho energy density; Float_t Edges[2]; // pseudorapidity range edges. ClassDef(Rho, 1); };; )CODE""",MatchSource.CODE_COMMENT,core/meta/test/testHashRecursiveRemove.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx:3,Testability,test,testing,3,"// testing::internal::CaptureStderr();",MatchSource.CODE_COMMENT,core/meta/test/testHashRecursiveRemove.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx:24,Testability,test,testing,24,"// std::string output = testing::internal::GetCapturedStderr();; // EXPECT_EQ(gErrorOutput,output);",MatchSource.CODE_COMMENT,core/meta/test/testHashRecursiveRemove.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx:19,Availability,redundant,redundant,19,"// Avoid spurrious/redundant error messages in case of failure.",MatchSource.CODE_COMMENT,core/meta/test/testHashRecursiveRemove.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx:29,Availability,error,error,29,"// Avoid spurrious/redundant error messages in case of failure.",MatchSource.CODE_COMMENT,core/meta/test/testHashRecursiveRemove.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx:55,Availability,failure,failure,55,"// Avoid spurrious/redundant error messages in case of failure.",MatchSource.CODE_COMMENT,core/meta/test/testHashRecursiveRemove.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx:35,Integrability,message,messages,35,"// Avoid spurrious/redundant error messages in case of failure.",MatchSource.CODE_COMMENT,core/meta/test/testHashRecursiveRemove.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx:3,Safety,Avoid,Avoid,3,"// Avoid spurrious/redundant error messages in case of failure.",MatchSource.CODE_COMMENT,core/meta/test/testHashRecursiveRemove.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx:19,Safety,redund,redundant,19,"// Avoid spurrious/redundant error messages in case of failure.",MatchSource.CODE_COMMENT,core/meta/test/testHashRecursiveRemove.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/ClingRAII.h:114,Availability,down,down,114,"// We can't PushDeclContext, because we go up and the routine that pops; // the DeclContext assumes that we drill down always.; // We have to be on the global context. At that point we are in a; // wrapper function so the parent context must be the global.",MatchSource.CODE_COMMENT,core/metacling/src/ClingRAII.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/ClingRAII.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/ClingRAII.h:54,Integrability,rout,routine,54,"// We can't PushDeclContext, because we go up and the routine that pops; // the DeclContext assumes that we drill down always.; // We have to be on the global context. At that point we are in a; // wrapper function so the parent context must be the global.",MatchSource.CODE_COMMENT,core/metacling/src/ClingRAII.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/ClingRAII.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/ClingRAII.h:198,Integrability,wrap,wrapper,198,"// We can't PushDeclContext, because we go up and the routine that pops; // the DeclContext assumes that we drill down always.; // We have to be on the global context. At that point we are in a; // wrapper function so the parent context must be the global.",MatchSource.CODE_COMMENT,core/metacling/src/ClingRAII.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/ClingRAII.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/ClingRAII.h:81,Safety,safe,safe,81,"// After we have saved the token reset the current one to something which; // is safe (semi colon usually means empty decl)",MatchSource.CODE_COMMENT,core/metacling/src/ClingRAII.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/ClingRAII.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:469,Integrability,interface,interface,469,"// @(#)root/meta:$Id$; // vim: sw=3 ts=3 expandtab foldmethod=indent; /*************************************************************************; * Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TCling. This class defines an interface to the cling C++ interpreter. Cling is a full ANSI compliant C++-11 interpreter based on; clang/LLVM technology.; */",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:36,Modifiability,plugin,plugin,36,"// This is here to avoid to use the plugin manager",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:19,Safety,avoid,avoid,19,"// This is here to avoid to use the plugin manager",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:117,Testability,test,testing,117,"//______________________________________________________________________________; // These functions are helpers for testing issues directly rather than; // relying on side effects.; // This is used for the test for ROOT-7462/ROOT-6070",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:207,Testability,test,test,207,"//______________________________________________________________________________; // These functions are helpers for testing issues directly rather than; // relying on side effects.; // This is used for the test for ROOT-7462/ROOT-6070",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:26,Availability,Error,Error,26,"// The macros below use ::Error, so let's ensure it is included",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:712,Availability,Error,Error,712,"R""ICF(; #include ""TError.h"". #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \; private: \; public: \; static TClass *Class() { static TClass* sIsA = 0; if (!sIsA) sIsA = TClass::GetClass(#name); return sIsA; } \; static const char *Class_Name() { return #name; } \; virtual_keyword Bool_t CheckTObjectHashConsistency() const overrd { return true; } \; static Version_t Class_Version() { return id; } \; static TClass *Dictionary() { return 0; } \; virtual_keyword TClass *IsA() const overrd { return name::Class(); } \; virtual_keyword void ShowMembers(TMemberInspector&insp) const overrd { ::ROOT::Class_ShowMembers(name::Class(), this, insp); } \; virtual_keyword void Streamer(TBuffer&) overrd { ::Error(""Streamer"", ""Cannot stream interpreted class.""); } \; void StreamerNVirtual(TBuffer&ClassDef_StreamerNVirtual_b) { name::Streamer(ClassDef_StreamerNVirtual_b); } \; static const char *DeclFileName() { return __FILE__; } \; static int ImplFileLine() { return 0; } \; static const char *ImplFileName() { return __FILE__; }; )ICF""",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:29,Integrability,bridg,bridge,29,"// The functions are used to bridge cling/clang/llvm compiled with no-rtti and; // ROOT (which uses rtti); ////////////////////////////////////////////////////////////////////////////////; /// Print a StackTrace!",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load a library.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:190,Availability,error,error,190,"////////////////////////////////////////////////////////////////////////////////; /// Lookup libraries in LD_LIBRARY_PATH and DYLD_LIBRARY_PATH with mangled_name,; /// which is extracted by error messages we get from callback from cling. Return true; /// when the missing library was autoloaded.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:196,Integrability,message,messages,196,"////////////////////////////////////////////////////////////////////////////////; /// Lookup libraries in LD_LIBRARY_PATH and DYLD_LIBRARY_PATH with mangled_name,; /// which is extracted by error messages we get from callback from cling. Return true; /// when the missing library was autoloaded.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update TClingClassInfo for a class (e.g. upon seeing a definition).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:71,Deployability,Update,UpdateClassInfo,71,"// If we are called indirectly from within another call to; // TCling::UpdateClassInfo, we delay the update until the dictionary loading; // is finished (i.e. when we return to the top level TCling::UpdateClassInfo).; // This allows for the dictionary to be fully populated when we actually; // update the TClass object. The updating of the TClass sometimes; // (STL containers and when there is an emulated class) forces the building; // of the TClass object's real data (which needs the dictionary info).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:101,Deployability,update,update,101,"// If we are called indirectly from within another call to; // TCling::UpdateClassInfo, we delay the update until the dictionary loading; // is finished (i.e. when we return to the top level TCling::UpdateClassInfo).; // This allows for the dictionary to be fully populated when we actually; // update the TClass object. The updating of the TClass sometimes; // (STL containers and when there is an emulated class) forces the building; // of the TClass object's real data (which needs the dictionary info).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:199,Deployability,Update,UpdateClassInfo,199,"// If we are called indirectly from within another call to; // TCling::UpdateClassInfo, we delay the update until the dictionary loading; // is finished (i.e. when we return to the top level TCling::UpdateClassInfo).; // This allows for the dictionary to be fully populated when we actually; // update the TClass object. The updating of the TClass sometimes; // (STL containers and when there is an emulated class) forces the building; // of the TClass object's real data (which needs the dictionary info).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:295,Deployability,update,update,295,"// If we are called indirectly from within another call to; // TCling::UpdateClassInfo, we delay the update until the dictionary loading; // is finished (i.e. when we return to the top level TCling::UpdateClassInfo).; // This allows for the dictionary to be fully populated when we actually; // update the TClass object. The updating of the TClass sometimes; // (STL containers and when there is an emulated class) forces the building; // of the TClass object's real data (which needs the dictionary info).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:129,Performance,load,loading,129,"// If we are called indirectly from within another call to; // TCling::UpdateClassInfo, we delay the update until the dictionary loading; // is finished (i.e. when we return to the top level TCling::UpdateClassInfo).; // This allows for the dictionary to be fully populated when we actually; // update the TClass object. The updating of the TClass sometimes; // (STL containers and when there is an emulated class) forces the building; // of the TClass object's real data (which needs the dictionary info).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:31,Deployability,update,update,31,"// Create the TEnumConstant or update it if existing",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:65,Availability,error,error,65,"// Load library containing specified class. Returns 0 in case of error; // and 1 in case if success.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:3,Performance,Load,Load,3,"// Load library containing specified class. Returns 0 in case of error; // and 1 in case if success.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:17,Availability,failure,failure,17,"// Returns 0 for failure 1 for success",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:319,Availability,error,error,319,"////////////////////////////////////////////////////////////////////////////////; /// Find a template decl within N nested namespaces, 0<=N<inf; /// Assumes 1 and only 1 template present and 1 and only 1 entity contained; /// by the namespace. Example: `ns1::ns2::..::%nsN::%myTemplate`; /// Returns nullptr in case of error",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:142,Integrability,depend,depends,142,"//This function automatically creates the ""LinkDef.h"" file for templated; //classes then executes CompileMacro on it.; //The name of the file depends on the class name, and it's not generated again; //if the file exist.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:142,Integrability,depend,depends,142,"//This function automatically creates the ""LinkDef.h"" file for templated; //classes then executes CompileMacro on it.; //The name of the file depends on the class name, and it's not generated again; //if the file exist.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:124,Integrability,synchroniz,synchronize,124,"//______________________________________________________________________________; //; //; //; // It is a ""fantom"" method to synchronize user keyboard input; // and ROOT prompt line (for WIN32)",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:94,Availability,error,error,94,"//______________________________________________________________________________; //; // llvm error handler through exceptions; see also cling/UserInterface; //",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:21,Availability,error,errors,21,"// Handle fatal llvm errors by throwing an exception.; // Yes, throwing exceptions in error handlers is bad.; // Doing nothing is pretty terrible, too.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Availability,error,error,86,"// Handle fatal llvm errors by throwing an exception.; // Yes, throwing exceptions in error handlers is bad.; // Doing nothing is pretty terrible, too.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:98,Safety,avoid,avoid,98,"////////////////////////////////////////////////////////////////////////////////; /// Try hard to avoid looking up in the Cling database as this could enduce; /// an unwanted autoparsing.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:37,Performance,load,loaded,37,"// This is a raw type and an already loaded typedef.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:33,Performance,load,loaded,33,"// It may still be in one of the loaded protoclasses",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:117,Performance,load,loaded,117,"////////////////////////////////////////////////////////////////////////////////; ///\returns true if the module was loaded.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:38,Performance,load,load,38,"// When starting up ROOT, cling would load all modulemap files on the include; // paths. However, in a ROOT session, it is very common to run aclic which; // will invoke rootcling and possibly produce a modulemap and a module in; // the current folder.; //; // Before failing, try loading the modulemap in the current folder and try; // loading the requested module from it.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:281,Performance,load,loading,281,"// When starting up ROOT, cling would load all modulemap files on the include; // paths. However, in a ROOT session, it is very common to run aclic which; // will invoke rootcling and possibly produce a modulemap and a module in; // the current folder.; //; // Before failing, try loading the modulemap in the current folder and try; // loading the requested module from it.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:337,Performance,load,loading,337,"// When starting up ROOT, cling would load all modulemap files on the include; // paths. However, in a ROOT session, it is very common to run aclic which; // will invoke rootcling and possibly produce a modulemap and a module in; // the current folder.; //; // Before failing, try loading the modulemap in the current folder and try; // loading the requested module from it.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:214,Availability,avail,available,214,"////////////////////////////////////////////////////////////////////////////////; /// Loads the C++ modules that we require to run any ROOT program. This is just; /// supposed to make a C++ module from a modulemap available to the interpreter.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Performance,Load,Loads,86,"////////////////////////////////////////////////////////////////////////////////; /// Loads the C++ modules that we require to run any ROOT program. This is just; /// supposed to make a C++ module from a modulemap available to the interpreter.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:3,Performance,Load,Load,3,"// Load the module from *only* in the prebuilt module path.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:38,Performance,load,loads,38,"// Get an existing global index. This loads it if not already loaded.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:62,Performance,load,loaded,62,"// Get an existing global index. This loads it if not already loaded.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:56,Integrability,message,messages,56,"// For finding modules needing to be imported for fixit messages,; // we need to make the global index cover all modules, so we do that here.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:68,Deployability,update,updates,68,"// FIXME: All decls should have an owning module once rootcling; // updates its generated decls from within the LookupHelper & co.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:3,Performance,Load,Loading,3,"// Loading of a module might deserialize.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:55,Performance,Load,Load,55,"// Setup core C++ modules if we have any to setup.; // Load libc and stl first.; // Load vcruntime module for windows",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:84,Performance,Load,Load,84,"// Setup core C++ modules if we have any to setup.; // Load libc and stl first.; // Load vcruntime module for windows",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:3,Performance,Load,Load,3,"// Load core modules; // This should be vector in order to be able to pass it to LoadModules",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:81,Performance,Load,LoadModules,81,"// Load core modules; // This should be vector in order to be able to pass it to LoadModules",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:36,Performance,load,loadGlobalIndex,36,"// FIXME: The ASTReader still calls loadGlobalIndex and loads the file; // We should investigate how to suppress it completely.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:56,Performance,load,loads,56,"// FIXME: The ASTReader still calls loadGlobalIndex and loads the file; // We should investigate how to suppress it completely.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:14,Performance,load,load,14,"// We want to load only already created modules.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:58,Performance,load,loadModule,58,"// FIXME: We may be able to remove those checks as cling::loadModule; // checks if a module was alredy loaded.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:103,Performance,load,loaded,103,"// FIXME: We may be able to remove those checks as cling::loadModule; // checks if a module was alredy loaded.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:43,Performance,load,loaded,43,"// This is a core module which was already loaded.; // Load system modules now and delay the other modules after we have; // loaded all system ones.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:55,Performance,Load,Load,55,"// This is a core module which was already loaded.; // Load system modules now and delay the other modules after we have; // loaded all system ones.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:125,Performance,load,loaded,125,"// This is a core module which was already loaded.; // Load system modules now and delay the other modules after we have; // loaded all system ones.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:4,Availability,ERROR,ERROR,4,"// `ERROR` and `PI` are from loading R related modules, which conflict with; // user's code.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:29,Performance,load,loading,29,"// `ERROR` and `PI` are from loading R related modules, which conflict with; // user's code.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:47,Availability,ERROR,ERROR,47,"R""CODE(; #ifdef PI; # undef PI; #endif; #ifdef ERROR; # undef ERROR; #endif; )CODE""",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:62,Availability,ERROR,ERROR,62,"R""CODE(; #ifdef PI; # undef PI; #endif; #ifdef ERROR; # undef ERROR; #endif; )CODE""",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:126,Testability,assert,assert,126,"// We must include it even when we have modules because it is marked as; // textual in the modulemap due to the nature of the assert header.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:119,Integrability,interface,interface,119,"////////////////////////////////////////////////////////////////////////////////; /// Initialize the cling interpreter interface.; /// \param name name for TInterpreter; /// \param title title for TInterpreter; /// \param argv - array of arguments passed to the cling::Interpreter constructor; /// e.g. `-DFOO=bar`. The last element of the array must be `nullptr`.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:156,Deployability,upgrade,upgrade,156,"// The -O1 optimization flag has nasty side effects on Windows (32 and 64 bit); // See the GitHub issues #9809 and #9944; // TODO: to be reviewed after the upgrade of LLVM & Clang",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:11,Performance,optimiz,optimization,11,"// The -O1 optimization flag has nasty side effects on Windows (32 and 64 bit); // See the GitHub issues #9809 and #9944; // TODO: to be reviewed after the upgrade of LLVM & Clang",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:11,Performance,optimiz,optimized,11,"// Disable optimized register allocation which is turned on automatically; // by -O1, but seems to require -O2 to not explode in run time.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:111,Integrability,depend,depending,111,"// Activate C++ modules support. If we are running within rootcling, it's up; // to rootcling to set this flag depending on whether it wants to produce; // C++ modules.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:195,Performance,load,load,195,"// ROOT implements its AutoLoading upon module's link directives. We; // generate module A { header ""A.h"" link ""A.so"" export * } where ROOT's; // facilities use the link directive to dynamically load the relevant; // library. So, we need to suppress clang's default autolink behavior.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:18,Integrability,inject,injected,18,"// Add statically injected extra arguments, usually coming from rootcling.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:18,Security,inject,injected,18,"// Add statically injected extra arguments, usually coming from rootcling.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:31,Performance,load,loaded,31,"// We are now ready (enough is loaded) to init the list of opaque typedefs.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:110,Integrability,interface,interface,110,"////////////////////////////////////////////////////////////////////////////////; /// Destroy the interpreter interface.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:58,Availability,avail,available,58,"// ROOT's atexit functions require the interepreter to be available.; // Run them before shutting down.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:98,Availability,down,down,98,"// ROOT's atexit functions require the interepreter to be available.; // Run them before shutting down.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:43,Performance,load,loading,43,"// Read the rules before enabling the auto loading to not inadvertently; // load the libraries for the classes concerned even-though the user is; // *not* using them.; // Note this call must happen before the first call to LoadLibraryMap.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:76,Performance,load,load,76,"// Read the rules before enabling the auto loading to not inadvertently; // load the libraries for the classes concerned even-though the user is; // *not* using them.; // Note this call must happen before the first call to LoadLibraryMap.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:223,Performance,Load,LoadLibraryMap,223,"// Read the rules before enabling the auto loading to not inadvertently; // load the libraries for the classes concerned even-though the user is; // *not* using them.; // Note this call must happen before the first call to LoadLibraryMap.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:16,Modifiability,variab,variable,16,"// avoid unused variable warning.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:3,Safety,avoid,avoid,3,"// avoid unused variable warning.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:117,Performance,load,loading,117,"////////////////////////////////////////////////////////////////////////////////; /// Register Rdict data for future loading by LoadPCM;",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:128,Performance,Load,LoadPCM,128,"////////////////////////////////////////////////////////////////////////////////; /// Register Rdict data for future loading by LoadPCM;",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:95,Performance,load,load,95,"////////////////////////////////////////////////////////////////////////////////; /// Tries to load a PCM from TFile; returns true on success.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:3,Performance,Cache,Cache,3,"// Cache the pointers",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:105,Integrability,rout,routine,105,"// For this case, the list will be immutable once constructed; // (i.e. in this case, by the end of this routine).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:57,Deployability,update,update,57,"// Now that all TClass-es know how to set them up we can update; // existing TClasses, which might cause the creation of e.g. TBaseClass; // objects which in turn requires the creation of TClasses, that could; // come from the PCH, but maybe later in the loop. Instead of resolving; // a dependency graph the addition to the TClassTable above allows us; // to create these dependent TClasses as needed below.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:288,Integrability,depend,dependency,288,"// Now that all TClass-es know how to set them up we can update; // existing TClasses, which might cause the creation of e.g. TBaseClass; // objects which in turn requires the creation of TClasses, that could; // come from the PCH, but maybe later in the loop. Instead of resolving; // a dependency graph the addition to the TClassTable above allows us; // to create these dependent TClasses as needed below.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:373,Integrability,depend,dependent,373,"// Now that all TClass-es know how to set them up we can update; // existing TClasses, which might cause the creation of e.g. TBaseClass; // objects which in turn requires the creation of TClasses, that could; // come from the PCH, but maybe later in the loop. Instead of resolving; // a dependency graph the addition to the TClassTable above allows us; // to create these dependent TClasses as needed below.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:108,Availability,avail,available,108,"// We have an existing TClass object. It might be emulated; // or interpreted; we now have more information available.; // Make that available.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:133,Availability,avail,available,133,"// We have an existing TClass object. It might be emulated; // or interpreted; we now have more information available.; // Make that available.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:95,Performance,load,load,95,"////////////////////////////////////////////////////////////////////////////////; /// Tries to load a rdict PCM, issues diagnostics if it fails.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:32,Integrability,interface,interfaces,32,"// Easier to work with the ROOT interfaces.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:138,Modifiability,plugin,plugin,138,"// Prevent the ROOT-PCMs hitting this during auto-load during; // JITting - which will cause recursive compilation.; // Avoid to call the plugin manager at all.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:50,Performance,load,load,50,"// Prevent the ROOT-PCMs hitting this during auto-load during; // JITting - which will cause recursive compilation.; // Avoid to call the plugin manager at all.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:120,Safety,Avoid,Avoid,120,"// Prevent the ROOT-PCMs hitting this during auto-load during; // JITting - which will cause recursive compilation.; // Avoid to call the plugin manager at all.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:291,Deployability,update,update,291,"// Currently the module file are never unloaded (even if the library is; // unloaded) and, of course, never reloaded.; // Consequently, we must NOT remove the `pendingRdict` from the list; // of pending dictionary, otherwise if a library is unloaded and then; // reload we will be unable to update properly the TClass object; // (because we wont be able to load the rootpcm file by executing the; // above lines)",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:357,Performance,load,load,357,"// Currently the module file are never unloaded (even if the library is; // unloaded) and, of course, never reloaded.; // Consequently, we must NOT remove the `pendingRdict` from the list; // of pending dictionary, otherwise if a library is unloaded and then; // reload we will be unable to update properly the TClass object; // (because we wont be able to load the rootpcm file by executing the; // above lines)",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:138,Availability,error,error,138,"////////////////////////////////////////////////////////////////////////////////; ///\returns true if the module map was loaded, false on error or if the map was; /// already loaded.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:121,Performance,load,loaded,121,"////////////////////////////////////////////////////////////////////////////////; ///\returns true if the module map was loaded, false on error or if the map was; /// already loaded.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:175,Performance,load,loaded,175,"////////////////////////////////////////////////////////////////////////////////; ///\returns true if the module map was loaded, false on error or if the map was; /// already loaded.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:113,Performance,Cache,CacheFailure,113,"// We cannot use HS.lookupModuleMapFile(DE, /*IsFramework*/ false);; // because its internal call to getFile has CacheFailure set to true.; // In our case, modulemaps can appear any time due to ACLiC.; // Code copied from HS.lookupModuleMapFile.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:2,Performance,Cache,CacheFailure,2,/*CacheFailure*/,MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:85,Deployability,Update,Update,85,"////////////////////////////////////////////////////////////////////////////////; // Update all the TClass registered in fClassesToUpdate",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:42,Performance,load,loaded,42,"// If somehow the TClass has already been loaded (maybe it was registered several time),; // we skip it. Otherwise, the existing TClass is in mode kInterpreted, kEmulated or; // maybe even kForwardDeclared and needs to replaced.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Integrability,Inject,Inject,86,"////////////////////////////////////////////////////////////////////////////////; /// Inject the module named ""modulename"" into cling; load all headers.; /// headers is a 0-terminated array of header files to `#include` after; /// loading the module. The module is searched for in all $LD_LIBRARY_PATH; /// entries (or %PATH% on Windows).; /// This function gets called by the static initialization of dictionary; /// libraries.; /// The payload code is injected ""as is"" in the interpreter.; /// The value of 'triggerFunc' is used to find the shared library location.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:454,Integrability,inject,injected,454,"////////////////////////////////////////////////////////////////////////////////; /// Inject the module named ""modulename"" into cling; load all headers.; /// headers is a 0-terminated array of header files to `#include` after; /// loading the module. The module is searched for in all $LD_LIBRARY_PATH; /// entries (or %PATH% on Windows).; /// This function gets called by the static initialization of dictionary; /// libraries.; /// The payload code is injected ""as is"" in the interpreter.; /// The value of 'triggerFunc' is used to find the shared library location.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:135,Performance,load,load,135,"////////////////////////////////////////////////////////////////////////////////; /// Inject the module named ""modulename"" into cling; load all headers.; /// headers is a 0-terminated array of header files to `#include` after; /// loading the module. The module is searched for in all $LD_LIBRARY_PATH; /// entries (or %PATH% on Windows).; /// This function gets called by the static initialization of dictionary; /// libraries.; /// The payload code is injected ""as is"" in the interpreter.; /// The value of 'triggerFunc' is used to find the shared library location.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:231,Performance,load,loading,231,"////////////////////////////////////////////////////////////////////////////////; /// Inject the module named ""modulename"" into cling; load all headers.; /// headers is a 0-terminated array of header files to `#include` after; /// loading the module. The module is searched for in all $LD_LIBRARY_PATH; /// entries (or %PATH% on Windows).; /// This function gets called by the static initialization of dictionary; /// libraries.; /// The payload code is injected ""as is"" in the interpreter.; /// The value of 'triggerFunc' is used to find the shared library location.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Security,Inject,Inject,86,"////////////////////////////////////////////////////////////////////////////////; /// Inject the module named ""modulename"" into cling; load all headers.; /// headers is a 0-terminated array of header files to `#include` after; /// loading the module. The module is searched for in all $LD_LIBRARY_PATH; /// entries (or %PATH% on Windows).; /// This function gets called by the static initialization of dictionary; /// libraries.; /// The payload code is injected ""as is"" in the interpreter.; /// The value of 'triggerFunc' is used to find the shared library location.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:454,Security,inject,injected,454,"////////////////////////////////////////////////////////////////////////////////; /// Inject the module named ""modulename"" into cling; load all headers.; /// headers is a 0-terminated array of header files to `#include` after; /// loading the module. The module is searched for in all $LD_LIBRARY_PATH; /// entries (or %PATH% on Windows).; /// This function gets called by the static initialization of dictionary; /// libraries.; /// The payload code is injected ""as is"" in the interpreter.; /// The value of 'triggerFunc' is used to find the shared library location.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:62,Integrability,inject,inject,62,"// We need the dictionary initialization but we don't want to inject the; // declarations into the interpreter, except for those we really need for; // I/O; see rootcling.cxx after the call to TCling__GetInterpreter().",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:62,Security,inject,inject,62,"// We need the dictionary initialization but we don't want to inject the; // declarations into the interpreter, except for those we really need for; // I/O; see rootcling.cxx after the call to TCling__GetInterpreter().",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:64,Performance,load,loaded,64,"// Make sure we relookup symbols that were search for before we loaded; // their autoparse information. We could be more subtil and remove only; // the failed one or only the one in this module, but for now this is; // better than nothing.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:6,Usability,clear,clear,6,"// We clear the scopes which we may have carried from a previous iteration",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:3,Safety,Avoid,Avoid,3,"// Avoid the overhead if nothing is to be declared",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:27,Performance,load,loading,27,"// In case we are directly loading the library via gSystem->Load() without; // specifying the relevant include paths we should try loading the; // modulemap next to the library location.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:60,Performance,Load,Load,60,"// In case we are directly loading the library via gSystem->Load() without; // specifying the relevant include paths we should try loading the; // modulemap next to the library location.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:131,Performance,load,loading,131,"// In case we are directly loading the library via gSystem->Load() without; // specifying the relevant include paths we should try loading the; // modulemap next to the library location.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:181,Availability,avail,available,181,"// Now that all the header have been registered/compiled, let's; // make sure to 'reset' the TClass that have a class init in this module; // but already had their type information available (using information/header; // loaded from other modules or from class rules or from opening a TFile; // or from loading header in a way that did not provoke the loading of; // the library we just loaded).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:221,Performance,load,loaded,221,"// Now that all the header have been registered/compiled, let's; // make sure to 'reset' the TClass that have a class init in this module; // but already had their type information available (using information/header; // loaded from other modules or from class rules or from opening a TFile; // or from loading header in a way that did not provoke the loading of; // the library we just loaded).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:303,Performance,load,loading,303,"// Now that all the header have been registered/compiled, let's; // make sure to 'reset' the TClass that have a class init in this module; // but already had their type information available (using information/header; // loaded from other modules or from class rules or from opening a TFile; // or from loading header in a way that did not provoke the loading of; // the library we just loaded).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:352,Performance,load,loading,352,"// Now that all the header have been registered/compiled, let's; // make sure to 'reset' the TClass that have a class init in this module; // but already had their type information available (using information/header; // loaded from other modules or from class rules or from opening a TFile; // or from loading header in a way that did not provoke the loading of; // the library we just loaded).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:387,Performance,load,loaded,387,"// Now that all the header have been registered/compiled, let's; // make sure to 'reset' the TClass that have a class init in this module; // but already had their type information available (using information/header; // loaded from other modules or from class rules or from opening a TFile; // or from loading header in a way that did not provoke the loading of; // the library we just loaded).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:131,Integrability,interface,interface,131,"// Do not do anything if we have no global module index.; // FIXME: This is mostly to real with false positives in the TTabCom; // interface for non-modules.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:236,Deployability,Update,UpdateClassInfo,236,"////////////////////////////////////////////////////////////////////////////////; /// Register classes that already existed prior to their dictionary loading; /// and that already had a ClassInfo (and thus would not be refresh via; /// UpdateClassInfo.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:150,Performance,load,loading,150,"////////////////////////////////////////////////////////////////////////////////; /// Register classes that already existed prior to their dictionary loading; /// and that already had a ClassInfo (and thus would not be refresh via; /// UpdateClassInfo.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:107,Performance,load,loaded,107,"////////////////////////////////////////////////////////////////////////////////; /// If the dictionary is loaded, we can remove the class from the list; /// (otherwise the class might be loaded twice).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:188,Performance,load,loaded,188,"////////////////////////////////////////////////////////////////////////////////; /// If the dictionary is loaded, we can remove the class from the list; /// (otherwise the class might be loaded twice).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:165,Availability,error,error,165,"////////////////////////////////////////////////////////////////////////////////; /// Let cling process a command line.; ///; /// If the command is executed and the error is 0, then the return value; /// is the int value corresponding to the result of the executed command; /// (float and double return values will be truncated).; ///; // Method for handling the interpreter exceptions.; // the MetaProcessor is passing in as argument to teh function, because; // cling::Interpreter::CompilationResult is a nested class and it cannot be; // forward declared, thus this method cannot be a static member function; // of TCling.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:127,Integrability,rout,routines,127,"// Copy the passed line, it comes from a static buffer in TApplication; // which can be reentered through the Cling evaluation routines,; // which would overwrite the static buffer and we would forget what we; // were doing.; //",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:94,Integrability,synchroniz,synchronize,94,"// End-Of-Line action; // See the comment (copied from above):; // It is a ""fantom"" method to synchronize user keyboard input; // and ROOT prompt line (for WIN32); // and is implemented by",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:3,Performance,Load,Loading,3,"// Loading failed.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:10,Availability,error,error,10,"// Ignore error caused by the inside of std::unique_ptr; // This is needed solely because of rootclingIO's IsUnsupportedUniquePointer; // which checks the number of elements in the GetListOfRealData.; // If this usage is removed, this can be replaced with a return statement.; // See https://github.com/root-project/root/issues/13574",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:212,Usability,simpl,simple,212,"// for ptr arithmetics; // Treat the case of std::complex in a special manner. We want to enforce; // the layout of a stl implementation independent class, which is the; // complex as implemented in ROOT5.; // A simple lambda to simplify the code",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:229,Usability,simpl,simplify,229,"// for ptr arithmetics; // Treat the case of std::complex in a special manner. We want to enforce; // the layout of a stl implementation independent class, which is the; // complex as implemented in ROOT5.; // A simple lambda to simplify the code",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:153,Availability,Error,Error,153,"// TVirtualCollectionProxy *proxy = cl->GetCollectionProxy();; // if (proxy && ( proxy->GetProperties() & TVirtualCollectionProxy::kIsEmulated ) ) {; // Error(""InspectMembers"",""The TClass for %s has an emulated proxy but we are looking at a compiled version of the collection!\n"",; // cl->GetName());; // }",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:7,Performance,load,loaded,7,"// For loaded class, CallShowMember will (especially for TObject); // call the virtual ShowMember rather than the class specific version; // resulting in an infinite recursion.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:46,Usability,clear,cleared,46,"// No-op there is not equivalent state (to be cleared) in Cling.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:440,Availability,failure,failure,440,"////////////////////////////////////////////////////////////////////////////////; /// Declare code to the interpreter, without any of the interpreter actions; /// that could trigger a re-interpretation of the code. I.e. make cling; /// behave like a compiler: no dynamic lookup, no input wrapping for; /// subsequent execution, no automatic provision of declarations but just a; /// plain `#include`.; /// Returns true on success, false on failure.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:288,Integrability,wrap,wrapping,288,"////////////////////////////////////////////////////////////////////////////////; /// Declare code to the interpreter, without any of the interpreter actions; /// that could trigger a re-interpretation of the code. I.e. make cling; /// behave like a compiler: no dynamic lookup, no input wrapping for; /// subsequent execution, no automatic provision of declarations but just a; /// plain `#include`.; /// Returns true on success, false on failure.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:116,Integrability,synchroniz,synchronize,116,"////////////////////////////////////////////////////////////////////////////////; /// It calls a ""fantom"" method to synchronize user keyboard input; /// and ROOT prompt line.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:149,Safety,avoid,avoid,149,"// This static function is a hop of TCling::IsLibraryLoaded, which is taking a lock and calling; // into this function. This is because we wanted to avoid a duplication in TCling::IsLoaded, which; // was already taking a lock.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:197,Performance,load,loading,197,"////////////////////////////////////////////////////////////////////////////////; /// Return true if ROOT has cxxmodules pcm for a given library name.; // FIXME: We need to be able to support lazy loading of pcm generated by ACLiC.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:266,Integrability,interface,interface,266,"// FIXME: In case when the modulemap is not yet loaded we will return the; // wrong result. Consider a call to HasPCMForLibrary(../test/libEvent.so); // We will only load the modulemap for libEvent.so after we dlopen libEvent; // which may happen after calling this interface. Maybe we should also check; // if there is a Event.pcm file and a module.modulemap, load it and return; // true.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:48,Performance,load,loaded,48,"// FIXME: In case when the modulemap is not yet loaded we will return the; // wrong result. Consider a call to HasPCMForLibrary(../test/libEvent.so); // We will only load the modulemap for libEvent.so after we dlopen libEvent; // which may happen after calling this interface. Maybe we should also check; // if there is a Event.pcm file and a module.modulemap, load it and return; // true.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:166,Performance,load,load,166,"// FIXME: In case when the modulemap is not yet loaded we will return the; // wrong result. Consider a call to HasPCMForLibrary(../test/libEvent.so); // We will only load the modulemap for libEvent.so after we dlopen libEvent; // which may happen after calling this interface. Maybe we should also check; // if there is a Event.pcm file and a module.modulemap, load it and return; // true.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:361,Performance,load,load,361,"// FIXME: In case when the modulemap is not yet loaded we will return the; // wrong result. Consider a call to HasPCMForLibrary(../test/libEvent.so); // We will only load the modulemap for libEvent.so after we dlopen libEvent; // which may happen after calling this interface. Maybe we should also check; // if there is a Event.pcm file and a module.modulemap, load it and return; // true.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:131,Testability,test,test,131,"// FIXME: In case when the modulemap is not yet loaded we will return the; // wrong result. Consider a call to HasPCMForLibrary(../test/libEvent.so); // We will only load the modulemap for libEvent.so after we dlopen libEvent; // which may happen after calling this interface. Maybe we should also check; // if there is a Event.pcm file and a module.modulemap, load it and return; // true.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:127,Performance,load,loaded,127,"////////////////////////////////////////////////////////////////////////////////; /// Return true if the file has already been loaded by cint.; /// We will try in this order:; /// actual filename; /// filename as a path relative to; /// the include path; /// the shared library path",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:2,Performance,Cache,CacheFail,2,/*CacheFail*/,MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:55,Performance,load,loaded,55,"// check in the source manager if the file is actually loaded",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:124,Performance,cache,cache,124,"////////////////////////////////////////////////////////////////////////////////; /// Check if lib is in the dynamic linker cache, returns true if it is, and if so,; /// modifies the library file name parameter `lib` from `/usr/lib/libFOO.dylib`; /// to `-lFOO` such that it can be passed to the linker.; /// This is a unique feature of macOS 11.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:35,Deployability,Update,UpdateListOfLoadedSharedLibraries,35,"// This function is called through UpdateListOfLoadedSharedLibraries() which is locked.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:115,Availability,error,error,115,"//the linker does not like to be mmapped; //causes a crash in cling::DynamicLibraryManager::loadLibrary()); //with error message ""mmap of entire address space failed: Cannot allocate memory""",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:174,Energy Efficiency,allocate,allocate,174,"//the linker does not like to be mmapped; //causes a crash in cling::DynamicLibraryManager::loadLibrary()); //with error message ""mmap of entire address space failed: Cannot allocate memory""",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:121,Integrability,message,message,121,"//the linker does not like to be mmapped; //causes a crash in cling::DynamicLibraryManager::loadLibrary()); //with error message ""mmap of entire address space failed: Cannot allocate memory""",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:92,Performance,load,loadLibrary,92,"//the linker does not like to be mmapped; //causes a crash in cling::DynamicLibraryManager::loadLibrary()); //with error message ""mmap of entire address space failed: Cannot allocate memory""",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:45,Availability,avail,available,45,"// Tell the interpreter that this library is available; all libraries can be; // used to resolve symbols.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:20,Availability,avail,available,20,"// Update string of available libraries.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:3,Deployability,Update,Update,3,"// Update string of available libraries.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:214,Availability,failure,failure,214,"////////////////////////////////////////////////////////////////////////////////; /// Load a library file in cling's memory.; /// if 'system' is true, the library is never unloaded.; /// Return 0 on success, -1 on failure.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load a library file in cling's memory.; /// if 'system' is true, the library is never unloaded.; /// Return 0 on success, -1 on failure.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:54,Availability,failure,failure,54,"// Used to return 0 on success, 1 on duplicate, -1 on failure, -2 on ""fatal"".",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load a macro file in cling's memory.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:3,Testability,Test,Test,3,"// Test on ApplicationImp not being 0 is needed because only at end of; // TApplication ctor the IsLineProcessing flag is set to 0, so before; // we can not use it.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:3,Availability,Failure,Failure,3,"// Failure in compilation.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:3,Availability,Failure,Failure,3,"// Failure at runtime.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:253,Performance,perform,performance,253,"// NOTE: When replacing the mutex by a ReadWrite mutex, we **must**; // put in place the Read/Write part here. Keeping the write lock; // here is 'catasptrophic' for scaling as it means that ALL calls; // to RecursiveRemove will take the write lock and performance; // of many threads trying to access the write lock at the same; // time is relatively bad.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:295,Security,access,access,295,"// NOTE: When replacing the mutex by a ReadWrite mutex, we **must**; // put in place the Read/Write part here. Keeping the write lock; // here is 'catasptrophic' for scaling as it means that ALL calls; // to RecursiveRemove will take the write lock and performance; // of many threads trying to access the write lock at the same; // time is relatively bad.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:47,Deployability,update,updated,47,"// Note that fgSetOfSpecials is supposed to be updated by TClingCallbacks::tryFindROOTSpecialInternal; // (but isn't at the moment).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:120,Modifiability,variab,variables,120,"////////////////////////////////////////////////////////////////////////////////; /// Reset in Cling the list of global variables to the state saved by the last; /// call to TCling::SaveGlobalsContext().; ///; /// Note: Right now, all we do is run the global destructors.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:124,Modifiability,variab,variables,124,"////////////////////////////////////////////////////////////////////////////////; /// Reset the Cling 'user' global objects/variables state to the state saved by the last; /// call to TCling::SaveGlobalsContext().",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:137,Security,access,accessed,137,"////////////////////////////////////////////////////////////////////////////////; /// Delete obj from Cling symbol table so it cannot be accessed anymore.; /// Returns 1 in case of success and 0 in case object was not in table.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:154,Availability,failure,failure,154,"////////////////////////////////////////////////////////////////////////////////; /// Undeclare obj called name.; /// Returns 1 in case of success, 0 for failure.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:122,Deployability,update,update,122,"////////////////////////////////////////////////////////////////////////////////; /// No op: see TClingCallbacks (used to update the list of globals)",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:122,Deployability,update,update,122,"////////////////////////////////////////////////////////////////////////////////; /// No op: see TClingCallbacks (used to update the list of global functions)",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:122,Deployability,update,update,122,"////////////////////////////////////////////////////////////////////////////////; /// No op: see TClingCallbacks (used to update the list of types)",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:52,Availability,error,error,52,"// Declare is not silent (yet?), so add an explicit error message; // to indicate the consequence of the syntax errors.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:112,Availability,error,errors,112,"// Declare is not silent (yet?), so add an explicit error message; // to indicate the consequence of the syntax errors.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:58,Integrability,message,message,58,"// Declare is not silent (yet?), so add an explicit error message; // to indicate the consequence of the syntax errors.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:19,Availability,down,down,19,"// We are shutting down, there is no point in reloading, it only triggers; // redundant deserializations.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:78,Availability,redundant,redundant,78,"// We are shutting down, there is no point in reloading, it only triggers; // redundant deserializations.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:78,Safety,redund,redundant,78,"// We are shutting down, there is no point in reloading, it only triggers; // redundant deserializations.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:3,Testability,Test,Test,3,"// Test again as another thread may have set fClassInfo to nullptr.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:110,Usability,simpl,simpler,110,"// Handle the special case of 'tuple' where we ignore the real implementation; // details and just overlay a 'simpler'/'simplistic' version that is easy; // for the I/O to understand and handle.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:120,Usability,simpl,simplistic,120,"// Handle the special case of 'tuple' where we ignore the real implementation; // details and just overlay a 'simpler'/'simplistic' version that is easy; // for the I/O to understand and handle.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:138,Safety,detect,detect,138,"// Note: We are transferring ownership here.; // In case a class contains an external enum, the enum will be seen as a; // class. We must detect this special case and make the class a Zombie.; // Here we assume that a class has at least one method.; // We can NOT call TClass::Property from here, because this method; // assumes that the TClass is well formed to do a lot of information; // caching. The method SetClassInfo (i.e. here) is usually called during; // the building phase of the TClass, hence it is NOT well formed yet.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:38,Availability,avail,available,38,"// this happens when no dictionary is available",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:764,Availability,error,error,764,"////////////////////////////////////////////////////////////////////////////////; /// Checks if an entity with the specified name is defined in Cling.; /// Returns kUnknown if the entity is not defined.; /// Returns kWithClassDefInline if the entity exists and has a ClassDefInline; /// Returns kKnown if the entity is defined.; ///; /// By default, structs, namespaces, classes, enums and unions are looked for.; /// If the flag isClassOrNamespaceOnly is true, classes, structs and; /// namespaces only are considered. I.e. if the name is an enum or a union,; /// the returned value is false.; ///; /// In the case where the class is not loaded and belongs to a namespace; /// or is nested, looking for the full class name is outputting a lots of; /// (expected) error messages. Currently the only way to avoid this is to; /// specifically check that each level of nesting is already loaded.; /// In case of templates the idea is that everything between the outer; /// '<' and '>' has to be skipped, e.g.: `aap<pippo<noot>::klaas>::a_class`",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:770,Integrability,message,messages,770,"////////////////////////////////////////////////////////////////////////////////; /// Checks if an entity with the specified name is defined in Cling.; /// Returns kUnknown if the entity is not defined.; /// Returns kWithClassDefInline if the entity exists and has a ClassDefInline; /// Returns kKnown if the entity is defined.; ///; /// By default, structs, namespaces, classes, enums and unions are looked for.; /// If the flag isClassOrNamespaceOnly is true, classes, structs and; /// namespaces only are considered. I.e. if the name is an enum or a union,; /// the returned value is false.; ///; /// In the case where the class is not loaded and belongs to a namespace; /// or is nested, looking for the full class name is outputting a lots of; /// (expected) error messages. Currently the only way to avoid this is to; /// specifically check that each level of nesting is already loaded.; /// In case of templates the idea is that everything between the outer; /// '<' and '>' has to be skipped, e.g.: `aap<pippo<noot>::klaas>::a_class`",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:639,Performance,load,loaded,639,"////////////////////////////////////////////////////////////////////////////////; /// Checks if an entity with the specified name is defined in Cling.; /// Returns kUnknown if the entity is not defined.; /// Returns kWithClassDefInline if the entity exists and has a ClassDefInline; /// Returns kKnown if the entity is defined.; ///; /// By default, structs, namespaces, classes, enums and unions are looked for.; /// If the flag isClassOrNamespaceOnly is true, classes, structs and; /// namespaces only are considered. I.e. if the name is an enum or a union,; /// the returned value is false.; ///; /// In the case where the class is not loaded and belongs to a namespace; /// or is nested, looking for the full class name is outputting a lots of; /// (expected) error messages. Currently the only way to avoid this is to; /// specifically check that each level of nesting is already loaded.; /// In case of templates the idea is that everything between the outer; /// '<' and '>' has to be skipped, e.g.: `aap<pippo<noot>::klaas>::a_class`",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:885,Performance,load,loaded,885,"////////////////////////////////////////////////////////////////////////////////; /// Checks if an entity with the specified name is defined in Cling.; /// Returns kUnknown if the entity is not defined.; /// Returns kWithClassDefInline if the entity exists and has a ClassDefInline; /// Returns kKnown if the entity is defined.; ///; /// By default, structs, namespaces, classes, enums and unions are looked for.; /// If the flag isClassOrNamespaceOnly is true, classes, structs and; /// namespaces only are considered. I.e. if the name is an enum or a union,; /// the returned value is false.; ///; /// In the case where the class is not loaded and belongs to a namespace; /// or is nested, looking for the full class name is outputting a lots of; /// (expected) error messages. Currently the only way to avoid this is to; /// specifically check that each level of nesting is already loaded.; /// In case of templates the idea is that everything between the outer; /// '<' and '>' has to be skipped, e.g.: `aap<pippo<noot>::klaas>::a_class`",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:806,Safety,avoid,avoid,806,"////////////////////////////////////////////////////////////////////////////////; /// Checks if an entity with the specified name is defined in Cling.; /// Returns kUnknown if the entity is not defined.; /// Returns kWithClassDefInline if the entity exists and has a ClassDefInline; /// Returns kKnown if the entity is defined.; ///; /// By default, structs, namespaces, classes, enums and unions are looked for.; /// If the flag isClassOrNamespaceOnly is true, classes, structs and; /// namespaces only are considered. I.e. if the name is an enum or a union,; /// the returned value is false.; ///; /// In the case where the class is not loaded and belongs to a namespace; /// or is nested, looking for the full class name is outputting a lots of; /// (expected) error messages. Currently the only way to avoid this is to; /// specifically check that each level of nesting is already loaded.; /// In case of templates the idea is that everything between the outer; /// '<' and '>' has to be skipped, e.g.: `aap<pippo<noot>::klaas>::a_class`",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:3,Safety,Avoid,Avoid,3,"// Avoid the double search below in case the name is a fundamental type; // or typedef to a fundamental type.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:191,Performance,load,loading,191,"// Migrated from within TClass::GetClass; // If we want to know if a class or a namespace with this name exists in the; // interpreter and this is an enum in the type system, before or after loading; // according to the autoload function argument, return kUnknown.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:36,Performance,load,loading,36,"// RAII to suspend and restore auto-loading and auto-parsing based on some external conditions.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:369,Energy Efficiency,reduce,reduce,369,"// If we have a forward declaration for a class template instantiation,; // we want to ignore it if it was produced/induced by the call to; // findScope, however we can not distinguish those from the; // instantiation induce by 'soft' use (and thus also induce by the; // same underlying code paths); // ['soft' use = use not requiring a complete definition]; // So to reduce the amount of disruption to the existing code we; // would just ignore those for STL collection, for which we really; // need to have the compiled collection proxy (and thus the TClass; // bootstrap).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:31,Performance,load,loaded,31,"// Add the enum to the list of loaded enums.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update the list of pointers to method for TClass cl; /// This is now a nop. The creation and updating is handled in; /// TListOfFunctions.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update the list of pointers to data members for TClass cl; /// This is now a nop. The creation and updating is handled in; /// TListOfDataMembers.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:416,Integrability,interface,interfaces,416,"// For now the following line would lead to the (unwanted) instantiation; // of class template. This could/would need to be resurrected only if; // we re-introduce so sort of automatic instantiation. However this would; // have to include carefull look at the template parameter to avoid; // creating instance we can not really use (if the parameter are only forward; // declaration or do not have all the necessary interfaces).; // TClingClassInfo tci(fInterpreter, classname);; // if (1 || !tci.IsValid()) {",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:282,Safety,avoid,avoid,282,"// For now the following line would lead to the (unwanted) instantiation; // of class template. This could/would need to be resurrected only if; // we re-introduce so sort of automatic instantiation. However this would; // have to include carefull look at the template parameter to avoid; // creating instance we can not really use (if the parameter are only forward; // declaration or do not have all the necessary interfaces).; // TClingClassInfo tci(fInterpreter, classname);; // if (1 || !tci.IsValid()) {",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:42,Deployability,update,update,42,"// We have a version and it might need an update.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:132,Modifiability,variab,variable,132,"////////////////////////////////////////////////////////////////////////////////; /// Return pointer to cling Decl of global/static variable that is located; /// at the address given by addr.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:133,Availability,redundant,redundant,133,"// We are looking up for something on the TU scope.; // FIXME: We do not want to go through TClingClassInfo(fInterpreter) because of redundant deserializations. That; // interface will actually construct iterators and walk over the decls on the global scope. In would return the first; // occurrence of a decl with the looked up name. However, that's not what C++ lookup would do: if we want to switch; // to a more complete C++ lookup interface we need sift through the found names and pick up the declarations which; // are only fulfilling ROOT's understanding for a Data Member.; // FIXME: We should probably deprecate the TClingClassInfo(fInterpreter) interface and replace it withe something; // similar as below.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:170,Integrability,interface,interface,170,"// We are looking up for something on the TU scope.; // FIXME: We do not want to go through TClingClassInfo(fInterpreter) because of redundant deserializations. That; // interface will actually construct iterators and walk over the decls on the global scope. In would return the first; // occurrence of a decl with the looked up name. However, that's not what C++ lookup would do: if we want to switch; // to a more complete C++ lookup interface we need sift through the found names and pick up the declarations which; // are only fulfilling ROOT's understanding for a Data Member.; // FIXME: We should probably deprecate the TClingClassInfo(fInterpreter) interface and replace it withe something; // similar as below.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:436,Integrability,interface,interface,436,"// We are looking up for something on the TU scope.; // FIXME: We do not want to go through TClingClassInfo(fInterpreter) because of redundant deserializations. That; // interface will actually construct iterators and walk over the decls on the global scope. In would return the first; // occurrence of a decl with the looked up name. However, that's not what C++ lookup would do: if we want to switch; // to a more complete C++ lookup interface we need sift through the found names and pick up the declarations which; // are only fulfilling ROOT's understanding for a Data Member.; // FIXME: We should probably deprecate the TClingClassInfo(fInterpreter) interface and replace it withe something; // similar as below.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:656,Integrability,interface,interface,656,"// We are looking up for something on the TU scope.; // FIXME: We do not want to go through TClingClassInfo(fInterpreter) because of redundant deserializations. That; // interface will actually construct iterators and walk over the decls on the global scope. In would return the first; // occurrence of a decl with the looked up name. However, that's not what C++ lookup would do: if we want to switch; // to a more complete C++ lookup interface we need sift through the found names and pick up the declarations which; // are only fulfilling ROOT's understanding for a Data Member.; // FIXME: We should probably deprecate the TClingClassInfo(fInterpreter) interface and replace it withe something; // similar as below.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:133,Safety,redund,redundant,133,"// We are looking up for something on the TU scope.; // FIXME: We do not want to go through TClingClassInfo(fInterpreter) because of redundant deserializations. That; // interface will actually construct iterators and walk over the decls on the global scope. In would return the first; // occurrence of a decl with the looked up name. However, that's not what C++ lookup would do: if we want to switch; // to a more complete C++ lookup interface we need sift through the found names and pick up the declarations which; // are only fulfilling ROOT's understanding for a Data Member.; // FIXME: We should probably deprecate the TClingClassInfo(fInterpreter) interface and replace it withe something; // similar as below.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:132,Modifiability,variab,variable,132,"////////////////////////////////////////////////////////////////////////////////; /// Return pointer to cling Decl of global/static variable that is located; /// at the address given by addr.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:12,Usability,simpl,simply,12,"// It might simply be an unmangled global name.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:110,Integrability,interface,interface,110,"////////////////////////////////////////////////////////////////////////////////; /// Return pointer to cling interface function for a method of a class with; /// parameters params (params is a string of actual arguments, not formal; /// ones). If the class is 0 the global function list will be searched.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:110,Integrability,interface,interface,110,"////////////////////////////////////////////////////////////////////////////////; /// Return pointer to cling interface function for a method of a class with; /// a certain name.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:51,Security,access,access,51,"// else lookup with NotForRedeclaration will check access etc",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:110,Integrability,interface,interface,110,"////////////////////////////////////////////////////////////////////////////////; /// Return pointer to cling interface function for a method of a class with; /// a certain prototype, i.e. ""char*,int,float"". If the class is 0 the global; /// function list will be searched.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:110,Integrability,interface,interface,110,"////////////////////////////////////////////////////////////////////////////////; /// Return pointer to cling interface function for a method of a class with; /// a certain prototype, i.e. ""char*,int,float"". If the class is 0 the global; /// function list will be searched.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:110,Integrability,interface,interface,110,"////////////////////////////////////////////////////////////////////////////////; /// Return pointer to cling interface function for a method of a class with; /// a certain name.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:256,Integrability,synchroniz,synchronize,256,"////////////////////////////////////////////////////////////////////////////////; /// The 'name' is known to the interpreter, this function returns; /// the internal version of this name (usually just resolving typedefs); /// This is used in particular to synchronize between the name used; /// by rootcling and by the run-time environment (TClass); /// Return 0 if the name is not known.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:280,Availability,error,errors,280,"////////////////////////////////////////////////////////////////////////////////; /// Execute a global function with arguments params.; ///; /// FIXME: The cint-based version of this code does not check if the; /// SetFunc() call works, and does not do any real checking; /// for errors from the Exec() call. It did fetch the most; /// recent cint security error and return that in error, but; /// this does not really translate well to cling/clang. We; /// should enhance these interfaces so that we can report; /// compilation and runtime errors properly.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:357,Availability,error,error,357,"////////////////////////////////////////////////////////////////////////////////; /// Execute a global function with arguments params.; ///; /// FIXME: The cint-based version of this code does not check if the; /// SetFunc() call works, and does not do any real checking; /// for errors from the Exec() call. It did fetch the most; /// recent cint security error and return that in error, but; /// this does not really translate well to cling/clang. We; /// should enhance these interfaces so that we can report; /// compilation and runtime errors properly.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:382,Availability,error,error,382,"////////////////////////////////////////////////////////////////////////////////; /// Execute a global function with arguments params.; ///; /// FIXME: The cint-based version of this code does not check if the; /// SetFunc() call works, and does not do any real checking; /// for errors from the Exec() call. It did fetch the most; /// recent cint security error and return that in error, but; /// this does not really translate well to cling/clang. We; /// should enhance these interfaces so that we can report; /// compilation and runtime errors properly.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:541,Availability,error,errors,541,"////////////////////////////////////////////////////////////////////////////////; /// Execute a global function with arguments params.; ///; /// FIXME: The cint-based version of this code does not check if the; /// SetFunc() call works, and does not do any real checking; /// for errors from the Exec() call. It did fetch the most; /// recent cint security error and return that in error, but; /// this does not really translate well to cling/clang. We; /// should enhance these interfaces so that we can report; /// compilation and runtime errors properly.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:479,Integrability,interface,interfaces,479,"////////////////////////////////////////////////////////////////////////////////; /// Execute a global function with arguments params.; ///; /// FIXME: The cint-based version of this code does not check if the; /// SetFunc() call works, and does not do any real checking; /// for errors from the Exec() call. It did fetch the most; /// recent cint security error and return that in error, but; /// this does not really translate well to cling/clang. We; /// should enhance these interfaces so that we can report; /// compilation and runtime errors properly.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:465,Modifiability,enhance,enhance,465,"////////////////////////////////////////////////////////////////////////////////; /// Execute a global function with arguments params.; ///; /// FIXME: The cint-based version of this code does not check if the; /// SetFunc() call works, and does not do any real checking; /// for errors from the Exec() call. It did fetch the most; /// recent cint security error and return that in error, but; /// this does not really translate well to cling/clang. We; /// should enhance these interfaces so that we can report; /// compilation and runtime errors properly.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:348,Security,secur,security,348,"////////////////////////////////////////////////////////////////////////////////; /// Execute a global function with arguments params.; ///; /// FIXME: The cint-based version of this code does not check if the; /// SetFunc() call works, and does not do any real checking; /// for errors from the Exec() call. It did fetch the most; /// recent cint security error and return that in error, but; /// this does not really translate well to cling/clang. We; /// should enhance these interfaces so that we can report; /// compilation and runtime errors properly.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:285,Availability,error,errors,285,"////////////////////////////////////////////////////////////////////////////////; /// Execute a method from class cl with arguments params.; ///; /// FIXME: The cint-based version of this code does not check if the; /// SetFunc() call works, and does not do any real checking; /// for errors from the Exec() call. It did fetch the most; /// recent cint security error and return that in error, but; /// this does not really translate well to cling/clang. We; /// should enhance these interfaces so that we can report; /// compilation and runtime errors properly.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:362,Availability,error,error,362,"////////////////////////////////////////////////////////////////////////////////; /// Execute a method from class cl with arguments params.; ///; /// FIXME: The cint-based version of this code does not check if the; /// SetFunc() call works, and does not do any real checking; /// for errors from the Exec() call. It did fetch the most; /// recent cint security error and return that in error, but; /// this does not really translate well to cling/clang. We; /// should enhance these interfaces so that we can report; /// compilation and runtime errors properly.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:387,Availability,error,error,387,"////////////////////////////////////////////////////////////////////////////////; /// Execute a method from class cl with arguments params.; ///; /// FIXME: The cint-based version of this code does not check if the; /// SetFunc() call works, and does not do any real checking; /// for errors from the Exec() call. It did fetch the most; /// recent cint security error and return that in error, but; /// this does not really translate well to cling/clang. We; /// should enhance these interfaces so that we can report; /// compilation and runtime errors properly.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:546,Availability,error,errors,546,"////////////////////////////////////////////////////////////////////////////////; /// Execute a method from class cl with arguments params.; ///; /// FIXME: The cint-based version of this code does not check if the; /// SetFunc() call works, and does not do any real checking; /// for errors from the Exec() call. It did fetch the most; /// recent cint security error and return that in error, but; /// this does not really translate well to cling/clang. We; /// should enhance these interfaces so that we can report; /// compilation and runtime errors properly.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:484,Integrability,interface,interfaces,484,"////////////////////////////////////////////////////////////////////////////////; /// Execute a method from class cl with arguments params.; ///; /// FIXME: The cint-based version of this code does not check if the; /// SetFunc() call works, and does not do any real checking; /// for errors from the Exec() call. It did fetch the most; /// recent cint security error and return that in error, but; /// this does not really translate well to cling/clang. We; /// should enhance these interfaces so that we can report; /// compilation and runtime errors properly.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:470,Modifiability,enhance,enhance,470,"////////////////////////////////////////////////////////////////////////////////; /// Execute a method from class cl with arguments params.; ///; /// FIXME: The cint-based version of this code does not check if the; /// SetFunc() call works, and does not do any real checking; /// for errors from the Exec() call. It did fetch the most; /// recent cint security error and return that in error, but; /// this does not really translate well to cling/clang. We; /// should enhance these interfaces so that we can report; /// compilation and runtime errors properly.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:353,Security,secur,security,353,"////////////////////////////////////////////////////////////////////////////////; /// Execute a method from class cl with arguments params.; ///; /// FIXME: The cint-based version of this code does not check if the; /// SetFunc() call works, and does not do any real checking; /// for errors from the Exec() call. It did fetch the most; /// recent cint security error and return that in error, but; /// this does not really translate well to cling/clang. We; /// should enhance these interfaces so that we can report; /// compilation and runtime errors properly.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:38,Modifiability,inherit,inherits,38,"// If the actual class of this object inherits 2nd (or more) from TObject,; // 'obj' is unlikely to be the start of the object (as described by IsA()),; // hence gInterpreter->Execute will improperly correct the offset.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:38,Modifiability,inherit,inherits,38,"// If the actual class of this object inherits 2nd (or more) from TObject,; // 'obj' is unlikely to be the start of the object (as described by IsA()),; // hence gInterpreter->Execute will improperly correct the offset.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:321,Availability,error,error,321,"////////////////////////////////////////////////////////////////////////////////; /// Read and parse a rootmapfile in its new format, and return 0 in case of; /// success, -1 if the file has already been read, and -3 in case its format; /// is the old one (e.g. containing ""Library.ClassName""), -4 in case of syntax; /// error.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:61,Performance,load,loaded,61,"// it is a header: add the libname to the list of libs to be loaded.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:439,Modifiability,variab,variable,439,"////////////////////////////////////////////////////////////////////////////////; /// Create a resource table and read the (possibly) three resource files,; /// i.e. `$ROOTSYS/etc/system<name>` (or `ROOTETCDIR/system<name>`), `$HOME/<name>`; /// and `$PWD/<name>`. ROOT always reads "".rootrc"" (in TROOT::InitSystem()). You; /// can read additional user defined resource files by creating additional TEnv; /// objects. By setting the shell variable ROOTENV_NO_HOME=1 the reading of; /// the `$HOME/<name>` resource file will be skipped. This might be useful in; /// case the home directory resides on an automounted remote file system; /// and one wants to avoid the file system from being mounted.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:656,Safety,avoid,avoid,656,"////////////////////////////////////////////////////////////////////////////////; /// Create a resource table and read the (possibly) three resource files,; /// i.e. `$ROOTSYS/etc/system<name>` (or `ROOTETCDIR/system<name>`), `$HOME/<name>`; /// and `$PWD/<name>`. ROOT always reads "".rootrc"" (in TROOT::InitSystem()). You; /// can read additional user defined resource files by creating additional TEnv; /// objects. By setting the shell variable ROOTENV_NO_HOME=1 the reading of; /// the `$HOME/<name>` resource file will be skipped. This might be useful in; /// case the home directory resides on an automounted remote file system; /// and one wants to avoid the file system from being mounted.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:138,Performance,load,loading,138,"// No need to recurse. On the contrary, recursing is actively harmful:; // NOTE: must not recurse to prevent this visitor from triggering loading from; // the external AST source (i.e. autoloading). This would be triggered right here,; // before autoloading is even set up, as rootmap file parsing happens before that.; // Even if autoloading is off and has no effect, triggering loading from external; // AST source resets the flag setHasExternalLexicalStorage(), hiding this specialization; // from subsequent autoloads!",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:380,Performance,load,loading,380,"// No need to recurse. On the contrary, recursing is actively harmful:; // NOTE: must not recurse to prevent this visitor from triggering loading from; // the external AST source (i.e. autoloading). This would be triggered right here,; // before autoloading is even set up, as rootmap file parsing happens before that.; // Even if autoloading is off and has no effect, triggering loading from external; // AST source resets the flag setHasExternalLexicalStorage(), hiding this specialization; // from subsequent autoloads!",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:235,Availability,error,error,235,"////////////////////////////////////////////////////////////////////////////////; /// Load map between class and library. If rootmapfile is specified a; /// specific rootmap file can be added (typically used by ACLiC).; /// In case of error -1 is returned, 0 otherwise.; /// The interpreter uses this information to automatically load the shared; /// library for a class (autoload mechanism), see the AutoLoad() methods below.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load map between class and library. If rootmapfile is specified a; /// specific rootmap file can be added (typically used by ACLiC).; /// In case of error -1 is returned, 0 otherwise.; /// The interpreter uses this information to automatically load the shared; /// library for a class (autoload mechanism), see the AutoLoad() methods below.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:330,Performance,load,load,330,"////////////////////////////////////////////////////////////////////////////////; /// Load map between class and library. If rootmapfile is specified a; /// specific rootmap file can be added (typically used by ACLiC).; /// In case of error -1 is returned, 0 otherwise.; /// The interpreter uses this information to automatically load the shared; /// library for a class (autoload mechanism), see the AutoLoad() methods below.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:138,Safety,safe,safe,138,"// Prepare a list of all forward declarations for cling; // For some experiments it is easily as big as 500k characters. To be on the; // safe side, we go for 1M.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:3,Performance,Load,Load,3,"// Load all rootmap files in the dynamic load path ((DY)LD_LIBRARY_PATH, etc.).; // A rootmap file must end with the string "".rootmap"".",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:41,Performance,load,load,41,"// Load all rootmap files in the dynamic load path ((DY)LD_LIBRARY_PATH, etc.).; // A rootmap file must end with the string "".rootmap"".",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:46,Integrability,depend,dependent,46,"// get the first lib from the list of lib and dependent libs",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:3,Usability,clear,clear,3,"// clear duplicates",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:309,Availability,error,error,309,"////////////////////////////////////////////////////////////////////////////////; /// Scan again along the dynamic path for library maps. Entries for the loaded; /// shared libraries are unloaded first. This can be useful after reseting; /// the dynamic path through TSystem::SetDynamicPath(); /// In case of error -1 is returned, 0 otherwise.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:154,Performance,load,loaded,154,"////////////////////////////////////////////////////////////////////////////////; /// Scan again along the dynamic path for library maps. Entries for the loaded; /// shared libraries are unloaded first. This can be useful after reseting; /// the dynamic path through TSystem::SetDynamicPath(); /// In case of error -1 is returned, 0 otherwise.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:223,Availability,error,error,223,"////////////////////////////////////////////////////////////////////////////////; /// Reload the library map entries coming from all the loaded shared libraries,; /// after first unloading the current ones.; /// In case of error -1 is returned, 0 otherwise.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:137,Performance,load,loaded,137,"////////////////////////////////////////////////////////////////////////////////; /// Reload the library map entries coming from all the loaded shared libraries,; /// after first unloading the current ones.; /// In case of error -1 is returned, 0 otherwise.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:137,Performance,load,loaded,137,"////////////////////////////////////////////////////////////////////////////////; /// Unload the library map entries coming from all the loaded shared libraries.; /// Returns 0 if succesful",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:46,Integrability,depend,dependent,46,"// get the first lib from the list of lib and dependent libs",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:181,Integrability,interface,interface,181,"////////////////////////////////////////////////////////////////////////////////; /// Demangle the name (from the typeinfo) and then request the class; /// via the usual name based interface (TClass::GetClass).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:152,Availability,error,error,152,"////////////////////////////////////////////////////////////////////////////////; /// Load library containing the specified class. Returns 0 in case of error; /// and 1 in case if success.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load library containing the specified class. Returns 0 in case of error; /// and 1 in case if success.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:147,Performance,load,load,147,"////////////////////////////////////////////////////////////////////////////////; // Get the list of 'published'/'known' library for the class and load them.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:32,Integrability,depend,dependent,32,"// lookup class to find list of dependent libraries",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:214,Performance,load,loading,214,"////////////////////////////////////////////////////////////////////////////////; // Iterate through the data member of the class (either through the TProtoClass; // or through Cling) and trigger, recursively, the loading the necessary libraries.; // \note `cls` is expected to be already normalized!; // \returns 1 on success.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:151,Performance,load,load,151,"// Try to insert; if insertion failed because the entry existed, DeepAutoLoadImpl(); // has previously (within the same call to `AutoLoad()`) tried to load this class; // and we are done, whether success or not, as it won't work better now than before,; // because there is no additional information now compared to before.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:35,Availability,error,error,35,"// If ShallowAutoLoadImpl() has an error, we have an error.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:53,Availability,error,error,53,"// If ShallowAutoLoadImpl() has an error, we have an error.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:39,Performance,load,load,39,"// Now look through the TProtoClass to load the required library/dictionary",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:3,Availability,Failure,Failure,3,"// Failure to load a dictionary is not (quite) a failure load; // the top-level library. If we return false here, then; // we would end up in a situation where the library and thus; // the dictionary is loaded for ""cls"" but the TClass is; // not created and/or marked as unavailable (in case where; // AutoLoad is called from TClass::GetClass).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:49,Availability,failure,failure,49,"// Failure to load a dictionary is not (quite) a failure load; // the top-level library. If we return false here, then; // we would end up in a situation where the library and thus; // the dictionary is loaded for ""cls"" but the TClass is; // not created and/or marked as unavailable (in case where; // AutoLoad is called from TClass::GetClass).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:14,Performance,load,load,14,"// Failure to load a dictionary is not (quite) a failure load; // the top-level library. If we return false here, then; // we would end up in a situation where the library and thus; // the dictionary is loaded for ""cls"" but the TClass is; // not created and/or marked as unavailable (in case where; // AutoLoad is called from TClass::GetClass).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:57,Performance,load,load,57,"// Failure to load a dictionary is not (quite) a failure load; // the top-level library. If we return false here, then; // we would end up in a situation where the library and thus; // the dictionary is loaded for ""cls"" but the TClass is; // not created and/or marked as unavailable (in case where; // AutoLoad is called from TClass::GetClass).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:203,Performance,load,loaded,203,"// Failure to load a dictionary is not (quite) a failure load; // the top-level library. If we return false here, then; // we would end up in a situation where the library and thus; // the dictionary is loaded for ""cls"" but the TClass is; // not created and/or marked as unavailable (in case where; // AutoLoad is called from TClass::GetClass).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:3,Availability,Failure,Failure,3,"// Failure to load a dictionary is not (quite) a failure load; // the top-level library. See detailed comment in the TProtoClass; // branch (above).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:49,Availability,failure,failure,49,"// Failure to load a dictionary is not (quite) a failure load; // the top-level library. See detailed comment in the TProtoClass; // branch (above).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:14,Performance,load,load,14,"// Failure to load a dictionary is not (quite) a failure load; // the top-level library. See detailed comment in the TProtoClass; // branch (above).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:57,Performance,load,load,57,"// Failure to load a dictionary is not (quite) a failure load; // the top-level library. See detailed comment in the TProtoClass; // branch (above).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:152,Availability,error,error,152,"////////////////////////////////////////////////////////////////////////////////; /// Load library containing the specified class. Returns 0 in case of error; /// and 1 in case if success.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load library containing the specified class. Returns 0 in case of error; /// and 1 in case if success.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:11,Deployability,update,update,11,"// Prevent update to IsClassAutoloading between our check and our actions.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:161,Safety,avoid,avoid,161,"// TClass::GetClass explicitly calls gInterpreter->AutoLoad. When called from; // rootcling (in *_rdict.pcm file generation) it is a no op.; // FIXME: We should avoid calling autoload when we know we are not supposed; // to and transform this check into an assert.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:257,Testability,assert,assert,257,"// TClass::GetClass explicitly calls gInterpreter->AutoLoad. When called from; // rootcling (in *_rdict.pcm file generation) it is a no op.; // FIXME: We should avoid calling autoload when we know we are not supposed; // to and transform this check into an assert.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:9,Performance,load,load,9,"// Never load any library from rootcling/genreflex.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:26,Performance,load,loaded,26,"// The library is already loaded as the class's dictionary is known.; // Return success.; // Note: the name (cls) is expected to be normalized as it comes either; // from a callbacks (that can/should calculate the normalized name from the; // decl) or from TClass::GetClass (which does also calculate the normalized; // name).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:57,Performance,load,loaded,57,"// Prevent the recursion when the library dictionary are loaded.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:272,Availability,avail,available,272,"// During the 'Deep' part of the search we will call GetClassSharedLibsForModule; // (when module are enabled) which might end up calling AutoParsing but; // that should only be for the cases where the library has no generated pcm; // and in that case a rootmap should be available.; // This avoids a very costly operation (for generally no gain) but reduce the; // quality of the search (i.e. bad in case of library with no pcm and no rootmap; // file).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:351,Energy Efficiency,reduce,reduce,351,"// During the 'Deep' part of the search we will call GetClassSharedLibsForModule; // (when module are enabled) which might end up calling AutoParsing but; // that should only be for the cases where the library has no generated pcm; // and in that case a rootmap should be available.; // This avoids a very costly operation (for generally no gain) but reduce the; // quality of the search (i.e. bad in case of library with no pcm and no rootmap; // file).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:292,Safety,avoid,avoids,292,"// During the 'Deep' part of the search we will call GetClassSharedLibsForModule; // (when module are enabled) which might end up calling AutoParsing but; // that should only be for the cases where the library has no generated pcm; // and in that case a rootmap should be available.; // This avoids a very costly operation (for generally no gain) but reduce the; // quality of the search (i.e. bad in case of library with no pcm and no rootmap; // file).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:93,Integrability,rout,routine,93,"////////////////////////////////////////////////////////////////////////////////; /// Helper routine for TCling::AutoParse implementing the actual call to the; /// parser and looping over template parameters (if; /// any) and when they don't have a registered header to autoparse,; /// recurse over their template parameters.; ///; /// Returns the number of header parsed.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:3,Safety,Avoid,Avoid,3,"// Avoid unused var warning",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:141,Performance,load,load,141,"// There is no header registered for this class, if this a; // template, it will be instantiated if/when it is requested; // and if we do no load/parse its components we might end up; // not using an eventual specialization.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:174,Availability,failure,failure,174,"////////////////////////////////////////////////////////////////////////////////; /// Parse the headers relative to the class; /// Returns 1 in case of success, 0 in case of failure",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:57,Performance,load,loaded,57,"// Prevent the recursion when the library dictionary are loaded.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:81,Performance,load,loadLibrary,81,"// This is a function which gets callback from cling when DynamicLibraryManager->loadLibrary failed for some reason.; // Try to solve the problem by AutoLoading. Return true when AutoLoading success, return; // false if not.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:74,Performance,load,loadLibrary,74,"// This branch is taken when the callback was from DynamicLibraryManager::loadLibrary",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:19,Performance,load,loaded,19,"// We have already loaded the library.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:121,Deployability,update,update,121,"////////////////////////////////////////////////////////////////////////////////; /// Internal function. Actually do the update of the ClassInfo when seeing; // new TagDecl or NamespaceDecl.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:45,Deployability,update,update,45,"// If we only had a forward declaration then update the; // TClingClassInfo with the definition if we have it now.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:18,Deployability,update,update,18,"// We now need to update the state and bits.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:175,Safety,avoid,avoid,175,"// Check if we have registered the unqualified name into the list; // of TClass that are in kNoInfo, kEmulated or kFwdDeclaredState.; // Since this is used as heureutistic to avoid spurrious calls to GetNormalizedName; // the unqualified name is sufficient (and the fully qualified name might be; // 'wrong' if there is difference in spelling in the template paramters (for example)",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:63,Performance,load,loaded,63,"// Supposedly we are being called while something is being; // loaded ... let's now tell the autoloader to do the work; // yet another time.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:80,Deployability,update,update,80,"// And here we should find the other 'aliases' (eg. vector<Double32_t>); // and update them too:; // foreach(aliascl in gROOT->GetListOfClasses()->FindAliasesOf(name.c_str())); // RefreshClassInfo(cl, tdDef, true);",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:55,Deployability,Update,UpdateClassInfoWithDecl,55,"// This is a no-op as part of the API.; // TCling uses UpdateClassInfoWithDecl() instead.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update all canvases at end the terminal input command.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:25,Deployability,update,update,25,"// TClasses that require update after this transaction; // If the transaction does not contain anything we can return earlier.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:44,Security,expose,expose,44,"// The is the first transaction, we have to expose to meta; // what's already in the AST.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:406,Deployability,update,update,406,"// When fully building the reflection info in TClass, a deserialization; // could be triggered, which may result in request for building the; // reflection info for the same TClass. This in turn will clear the caches; // for the TClass in-flight and cause null ptr derefs.; // FIXME: This is a quick fix, solving most of the issues. The actual; // question is: Shouldn't TClass provide a lock mechanism on update or lock; // itself until the update is done.; //",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:442,Deployability,update,update,442,"// When fully building the reflection info in TClass, a deserialization; // could be triggered, which may result in request for building the; // reflection info for the same TClass. This in turn will clear the caches; // for the TClass in-flight and cause null ptr derefs.; // FIXME: This is a quick fix, solving most of the issues. The actual; // question is: Shouldn't TClass provide a lock mechanism on update or lock; // itself until the update is done.; //",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:210,Performance,cache,caches,210,"// When fully building the reflection info in TClass, a deserialization; // could be triggered, which may result in request for building the; // reflection info for the same TClass. This in turn will clear the caches; // for the TClass in-flight and cause null ptr derefs.; // FIXME: This is a quick fix, solving most of the issues. The actual; // question is: Shouldn't TClass provide a lock mechanism on update or lock; // itself until the update is done.; //",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:200,Usability,clear,clear,200,"// When fully building the reflection info in TClass, a deserialization; // could be triggered, which may result in request for building the; // reflection info for the same TClass. This in turn will clear the caches; // for the TClass in-flight and cause null ptr derefs.; // FIXME: This is a quick fix, solving most of the issues. The actual; // question is: Shouldn't TClass provide a lock mechanism on update or lock; // itself until the update is done.; //",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:23,Deployability,update,updates,23,"// Lock the TClass for updates",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:25,Deployability,update,updates,25,"// Unlock the TClass for updates",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:21,Performance,cache,cached,21,"///\brief Invalidate cached TCling information for the given global declaration.; ///",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:21,Performance,cache,cached,21,"///\brief Invalidate cached TCling information for the given declaration, and; /// removed it from the appropriate object list.; ///\param[in] Lists - std::tuple<TListOfDataMembers&, TListOfFunctions&,; /// TListOfFunctionTemplates&, TListOfEnums&>; /// of pointers to the (global/class) object lists.; ///\param[in] D - Decl to discard.; ///",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:46,Deployability,Update,UpdateListOfLoadedSharedLibraries,46,"// R__LOCKGUARD_CLING(gInterpreterMutex);; // UpdateListOfLoadedSharedLibraries();",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:122,Performance,load,loaded,122,"////////////////////////////////////////////////////////////////////////////////; /// Return the list of shared libraries loaded into the process.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:241,Testability,log,logic,241,"// FIXME: Such case is described ROOT-7765 where; // ROOT_GENERATE_DICTIONARY does not contain the list of headers.; // They are specified as #includes in the LinkDef file. This leads to; // generation of incomplete modulemap files and this logic fails to; // compute the corresponding module of D.; // FIXME: If we want to support such a case, we should not rely on; // the contents of the modulemap but mangle D and look it up in the; // .so files.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:270,Integrability,depend,depends,270,"////////////////////////////////////////////////////////////////////////////////; /// Get the list of shared libraries containing the code for class cls.; /// The first library in the list is the one containing the class, the; /// others are the libraries the first one depends on. Returns 0; /// in case the library is not found.; /// \param cls the name of the class; /// \param skipCore if true (default), remove ""Core"" from the returned list",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:241,Testability,test,tests,241,"// If we get a class name containing lambda, we cannot parse it and we; // can exit early.; // FIXME: This works around a bug when we are instantiating a template; // make_unique and the substitution fails. Seen in most of the dataframe; // tests.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:9,Integrability,interface,interface,9,"/// This interface returns a list of dependent libraries in the form:; /// lib libA.so libB.so libC.so. The first library is the library we are; /// searching dependencies for.; /// Note: In order to speed up the search, we display the dependencies of the; /// libraries which are not yet loaded. For instance, if libB.so was already; /// loaded the list would contain: lib libA.so libC.so.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:37,Integrability,depend,dependent,37,"/// This interface returns a list of dependent libraries in the form:; /// lib libA.so libB.so libC.so. The first library is the library we are; /// searching dependencies for.; /// Note: In order to speed up the search, we display the dependencies of the; /// libraries which are not yet loaded. For instance, if libB.so was already; /// loaded the list would contain: lib libA.so libC.so.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:159,Integrability,depend,dependencies,159,"/// This interface returns a list of dependent libraries in the form:; /// lib libA.so libB.so libC.so. The first library is the library we are; /// searching dependencies for.; /// Note: In order to speed up the search, we display the dependencies of the; /// libraries which are not yet loaded. For instance, if libB.so was already; /// loaded the list would contain: lib libA.so libC.so.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:236,Integrability,depend,dependencies,236,"/// This interface returns a list of dependent libraries in the form:; /// lib libA.so libB.so libC.so. The first library is the library we are; /// searching dependencies for.; /// Note: In order to speed up the search, we display the dependencies of the; /// libraries which are not yet loaded. For instance, if libB.so was already; /// loaded the list would contain: lib libA.so libC.so.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:289,Performance,load,loaded,289,"/// This interface returns a list of dependent libraries in the form:; /// lib libA.so libB.so libC.so. The first library is the library we are; /// searching dependencies for.; /// Note: In order to speed up the search, we display the dependencies of the; /// libraries which are not yet loaded. For instance, if libB.so was already; /// loaded the list would contain: lib libA.so libC.so.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:339,Performance,load,loaded,339,"/// This interface returns a list of dependent libraries in the form:; /// lib libA.so libB.so libC.so. The first library is the library we are; /// searching dependencies for.; /// Note: In order to speed up the search, we display the dependencies of the; /// libraries which are not yet loaded. For instance, if libB.so was already; /// loaded the list would contain: lib libA.so libC.so.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:168,Safety,avoid,avoid,168,"// Skip the symbols which are part of the C/C++ runtime and have a; // fixed library version. See binutils ld VERSION. Those reside in; // 'system' libraries, which we avoid in FindLibraryForSymbol.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:53,Performance,load,loaded,53,"// If we can find the address of the symbol, we have loaded it. Skip.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:162,Deployability,a/b,a/b,162,"// The expected output is just filename without the full path, which; // is not very accurate, because our Dyld implementation might find; // a match in location a/b/c.so and if we return just c.so ROOT might; // resolve it to y/z/c.so and there we might not be ABI compatible.; // FIXME: Teach the users of GetSharedLibDeps to work with full paths.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:3,Performance,Perform,Perform,3,"// Perform a last resort by dropping the lib prefix.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:343,Availability,avail,available,343,"////////////////////////////////////////////////////////////////////////////////; /// Get the list a libraries on which the specified lib depends. The; /// returned string contains as first element the lib itself.; /// Returns 0 in case the lib does not exist or does not have; /// any dependencies. If useDyld is true, we iterate through all available; /// libraries and try to construct the dependency chain by resolving each; /// symbol.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:138,Integrability,depend,depends,138,"////////////////////////////////////////////////////////////////////////////////; /// Get the list a libraries on which the specified lib depends. The; /// returned string contains as first element the lib itself.; /// Returns 0 in case the lib does not exist or does not have; /// any dependencies. If useDyld is true, we iterate through all available; /// libraries and try to construct the dependency chain by resolving each; /// symbol.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:286,Integrability,depend,dependencies,286,"////////////////////////////////////////////////////////////////////////////////; /// Get the list a libraries on which the specified lib depends. The; /// returned string contains as first element the lib itself.; /// Returns 0 in case the lib does not exist or does not have; /// any dependencies. If useDyld is true, we iterate through all available; /// libraries and try to construct the dependency chain by resolving each; /// symbol.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:393,Integrability,depend,dependency,393,"////////////////////////////////////////////////////////////////////////////////; /// Get the list a libraries on which the specified lib depends. The; /// returned string contains as first element the lib itself.; /// Returns 0 in case the lib does not exist or does not have; /// any dependencies. If useDyld is true, we iterate through all available; /// libraries and try to construct the dependency chain by resolving each; /// symbol.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:89,Availability,error,error,89,"////////////////////////////////////////////////////////////////////////////////; /// If error messages are disabled, the interpreter should suppress its; /// failures and warning messages from stdout.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:159,Availability,failure,failures,159,"////////////////////////////////////////////////////////////////////////////////; /// If error messages are disabled, the interpreter should suppress its; /// failures and warning messages from stdout.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:95,Integrability,message,messages,95,"////////////////////////////////////////////////////////////////////////////////; /// If error messages are disabled, the interpreter should suppress its; /// failures and warning messages from stdout.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:180,Integrability,message,messages,180,"////////////////////////////////////////////////////////////////////////////////; /// If error messages are disabled, the interpreter should suppress its; /// failures and warning messages from stdout.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:89,Availability,error,error,89,"////////////////////////////////////////////////////////////////////////////////; /// If error messages are disabled, the interpreter should suppress its; /// failures and warning messages from stdout. Return the previous state.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:159,Availability,failure,failures,159,"////////////////////////////////////////////////////////////////////////////////; /// If error messages are disabled, the interpreter should suppress its; /// failures and warning messages from stdout. Return the previous state.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:95,Integrability,message,messages,95,"////////////////////////////////////////////////////////////////////////////////; /// If error messages are disabled, the interpreter should suppress its; /// failures and warning messages from stdout. Return the previous state.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:180,Integrability,message,messages,180,"////////////////////////////////////////////////////////////////////////////////; /// If error messages are disabled, the interpreter should suppress its; /// failures and warning messages from stdout. Return the previous state.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:3,Integrability,Interface,Interface,3,"// Interface to cling function",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Integrability,Interface,Interface,86,"////////////////////////////////////////////////////////////////////////////////; /// Interface to cling function",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Integrability,Interface,Interface,86,"////////////////////////////////////////////////////////////////////////////////; /// Interface to cling function",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:122,Availability,error,error,122,"////////////////////////////////////////////////////////////////////////////////; /// Let the interpreter issue a generic error, and set its error state.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:141,Availability,error,error,141,"////////////////////////////////////////////////////////////////////////////////; /// Let the interpreter issue a generic error, and set its error state.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:601,Availability,avail,available,601,"////////////////////////////////////////////////////////////////////////////////; /// This routines used to return the address of the internal wrapper; /// function (of the interpreter) that was used to call *all* the; /// interpreted functions that were bytecode compiled (no longer; /// interpreted line by line). In Cling, there is no such; /// wrapper function.; /// In practice this routines was use to decipher whether the; /// pointer returns by InterfaceMethod could be used to uniquely; /// represent the function. In Cling if the function is in a; /// useable state (its compiled version is available), this is; /// always the case.; /// See TClass::GetMethod.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:91,Integrability,rout,routines,91,"////////////////////////////////////////////////////////////////////////////////; /// This routines used to return the address of the internal wrapper; /// function (of the interpreter) that was used to call *all* the; /// interpreted functions that were bytecode compiled (no longer; /// interpreted line by line). In Cling, there is no such; /// wrapper function.; /// In practice this routines was use to decipher whether the; /// pointer returns by InterfaceMethod could be used to uniquely; /// represent the function. In Cling if the function is in a; /// useable state (its compiled version is available), this is; /// always the case.; /// See TClass::GetMethod.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:143,Integrability,wrap,wrapper,143,"////////////////////////////////////////////////////////////////////////////////; /// This routines used to return the address of the internal wrapper; /// function (of the interpreter) that was used to call *all* the; /// interpreted functions that were bytecode compiled (no longer; /// interpreted line by line). In Cling, there is no such; /// wrapper function.; /// In practice this routines was use to decipher whether the; /// pointer returns by InterfaceMethod could be used to uniquely; /// represent the function. In Cling if the function is in a; /// useable state (its compiled version is available), this is; /// always the case.; /// See TClass::GetMethod.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:348,Integrability,wrap,wrapper,348,"////////////////////////////////////////////////////////////////////////////////; /// This routines used to return the address of the internal wrapper; /// function (of the interpreter) that was used to call *all* the; /// interpreted functions that were bytecode compiled (no longer; /// interpreted line by line). In Cling, there is no such; /// wrapper function.; /// In practice this routines was use to decipher whether the; /// pointer returns by InterfaceMethod could be used to uniquely; /// represent the function. In Cling if the function is in a; /// useable state (its compiled version is available), this is; /// always the case.; /// See TClass::GetMethod.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:388,Integrability,rout,routines,388,"////////////////////////////////////////////////////////////////////////////////; /// This routines used to return the address of the internal wrapper; /// function (of the interpreter) that was used to call *all* the; /// interpreted functions that were bytecode compiled (no longer; /// interpreted line by line). In Cling, there is no such; /// wrapper function.; /// In practice this routines was use to decipher whether the; /// pointer returns by InterfaceMethod could be used to uniquely; /// represent the function. In Cling if the function is in a; /// useable state (its compiled version is available), this is; /// always the case.; /// See TClass::GetMethod.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:453,Integrability,Interface,InterfaceMethod,453,"////////////////////////////////////////////////////////////////////////////////; /// This routines used to return the address of the internal wrapper; /// function (of the interpreter) that was used to call *all* the; /// interpreted functions that were bytecode compiled (no longer; /// interpreted line by line). In Cling, there is no such; /// wrapper function.; /// In practice this routines was use to decipher whether the; /// pointer returns by InterfaceMethod could be used to uniquely; /// represent the function. In Cling if the function is in a; /// useable state (its compiled version is available), this is; /// always the case.; /// See TClass::GetMethod.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Integrability,Interface,Interface,86,"////////////////////////////////////////////////////////////////////////////////; /// Interface to cling function",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load a source file or library called path into the interpreter.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:280,Availability,failure,failure,280,"////////////////////////////////////////////////////////////////////////////////; /// Load the declarations from text into the interpreter.; /// Note that this cannot be (top level) statements; text must contain; /// top level declarations.; /// Returns true on success, false on failure.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load the declarations from text into the interpreter.; /// Note that this cannot be (top level) statements; text must contain; /// top level declarations.; /// Returns true on success, false on failure.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Integrability,Interface,Interface,86,"////////////////////////////////////////////////////////////////////////////////; /// Interface to cling function",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:241,Safety,safe,safe,241,"////////////////////////////////////////////////////////////////////////////////; /// [Place holder for Mutex Lock]; /// Provide the interpreter with a way to; /// acquire a lock used to protect critical section; /// of its code (non-thread safe parts).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:161,Deployability,release,release,161,"////////////////////////////////////////////////////////////////////////////////; /// [Place holder for Mutex Unlock] Provide the interpreter with a way to; /// release a lock used to protect critical section; /// of its code (non-thread safe parts).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:238,Safety,safe,safe,238,"////////////////////////////////////////////////////////////////////////////////; /// [Place holder for Mutex Unlock] Provide the interpreter with a way to; /// release a lock used to protect critical section; /// of its code (non-thread safe parts).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:192,Availability,error,errors,192,"// If no state change is required, exit early.; // FIXME: In future we probably want to complain if we made a request which; // was with the same state as before in order to catch programming errors.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:112,Availability,error,error,112,"////////////////////////////////////////////////////////////////////////////////; /// Set a callback to receive error messages.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:118,Integrability,message,messages,118,"////////////////////////////////////////////////////////////////////////////////; /// Set a callback to receive error messages.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:215,Integrability,interface,interfaces,215,"////////////////////////////////////////////////////////////////////////////////; /// Register value as a temporary, extending its lifetime to that of the; /// interpreter. This is needed for TCling's compatibility interfaces; /// returning long - the address of the temporary objects.; /// As such, ""simple"" types don't need to be stored; they are returned by; /// value; only pointers / references / objects need to be stored.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:117,Modifiability,extend,extending,117,"////////////////////////////////////////////////////////////////////////////////; /// Register value as a temporary, extending its lifetime to that of the; /// interpreter. This is needed for TCling's compatibility interfaces; /// returning long - the address of the temporary objects.; /// As such, ""simple"" types don't need to be stored; they are returned by; /// value; only pointers / references / objects need to be stored.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:301,Usability,simpl,simple,301,"////////////////////////////////////////////////////////////////////////////////; /// Register value as a temporary, extending its lifetime to that of the; /// interpreter. This is needed for TCling's compatibility interfaces; /// returning long - the address of the temporary objects.; /// As such, ""simple"" types don't need to be stored; they are returned by; /// value; only pointers / references / objects need to be stored.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:214,Performance,cache,cache,214,"////////////////////////////////////////////////////////////////////////////////; /// If the interpreter encounters Name, check whether that is an object ROOT; /// could retrieve. To not re-read objects from disk, cache the name/object; /// pair for a given LookupCtx.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:99,Performance,load,loading,99,"// The call to FindSpecialObject might induces any kind of use; // of the interpreter ... (library loading, function calling, etc.); // ... and we _know_ we are in the middle of parsing, so let's make; // sure to save the state and then restore it.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:81,Safety,safe,safe,81,"// After we have saved the token reset the current one to something which; // is safe (semi colon usually means empty decl)",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:114,Availability,down,down,114,"// We can't PushDeclContext, because we go up and the routine that pops; // the DeclContext assumes that we drill down always.; // We have to be on the global context. At that point we are in a; // wrapper function so the parent context must be the global.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:54,Integrability,rout,routine,54,"// We can't PushDeclContext, because we go up and the routine that pops; // the DeclContext assumes that we drill down always.; // We have to be on the global context. At that point we are in a; // wrapper function so the parent context must be the global.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:198,Integrability,wrap,wrapper,198,"// We can't PushDeclContext, because we go up and the routine that pops; // the DeclContext assumes that we drill down always.; // We have to be on the global context. At that point we are in a; // wrapper function so the parent context must be the global.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Integrability,Inject,Inject,86,"////////////////////////////////////////////////////////////////////////////////; /// Inject function as a friend into klass.; /// With function being f in void f() {new N::PrivKlass(); } this enables; /// I/O of non-public classes.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Security,Inject,Inject,86,"////////////////////////////////////////////////////////////////////////////////; /// Inject function as a friend into klass.; /// With function being f in void f() {new N::PrivKlass(); } this enables; /// I/O of non-public classes.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:98,Integrability,interface,interface,98,"//______________________________________________________________________________; //; // CallFunc interface; //; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Integrability,Interface,Interface,86,"////////////////////////////////////////////////////////////////////////////////; /// Interface to cling function",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Integrability,Interface,Interface,86,"////////////////////////////////////////////////////////////////////////////////; /// Interface to cling function",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Integrability,Interface,Interface,86,"////////////////////////////////////////////////////////////////////////////////; /// Interface to cling function",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Integrability,Interface,Interface,86,"////////////////////////////////////////////////////////////////////////////////; /// Interface to cling function",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:99,Integrability,interface,interface,99,"//______________________________________________________________________________; //; // ClassInfo interface; //; ////////////////////////////////////////////////////////////////////////////////; /// Return true if the entity pointed to by 'declid' is declared in; /// the context described by 'info'. If info is null, look into the; /// global scope (translation unit scope).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:103,Integrability,interface,interface,103,"//______________________________________________________________________________; //; // BaseClassInfo interface; //; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:104,Integrability,interface,interface,104,"//______________________________________________________________________________; //; // DataMemberInfo interface; //; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:107,Integrability,interface,interface,107,"//______________________________________________________________________________; //; // Function Template interface; //; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:100,Integrability,interface,interface,100,"//______________________________________________________________________________; //; // MethodInfo interface; //; ////////////////////////////////////////////////////////////////////////////////; /// Interface to cling function",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:201,Integrability,Interface,Interface,201,"//______________________________________________________________________________; //; // MethodInfo interface; //; ////////////////////////////////////////////////////////////////////////////////; /// Interface to cling function",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:255,Deployability,upgrade,upgrade,255,"// Support only up to long long ... but; // FIXME the TMethodCall::Execute only; // return long (4 bytes) ...; // The v5 implementation of TMethodCall::ReturnType; // was not making the distinction so we let it go; // as is for now, but we really need to upgrade; // TMethodCall::Execute ...",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:103,Integrability,interface,interface,103,"//______________________________________________________________________________; //; // MethodArgInfo interface; //; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:98,Integrability,interface,interface,98,"//______________________________________________________________________________; //; // TypeInfo interface; //; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:101,Integrability,interface,interface,101,"//______________________________________________________________________________; //; // TypedefInfo interface; //; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:30,Deployability,update,update,30,"// Now that we have the lock, update the global",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:398,Deployability,release,release,398,"// This case happens when EnableThreadSafety is first called from; // the interpreter function we just handled.; // Since thread safety was not enabled at the time we rewound, there was; // no lock taken and even-though we should be locking the rest of this; // interpreter handling/modifying code (since there might be threads in; // flight), we can't because there would not be any lock guard to release the; // locks",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:129,Safety,safe,safety,129,"// This case happens when EnableThreadSafety is first called from; // the interpreter function we just handled.; // Since thread safety was not enabled at the time we rewound, there was; // no lock taken and even-though we should be locking the rest of this; // interpreter handling/modifying code (since there might be threads in; // flight), we can't because there would not be any lock guard to release the; // locks",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h:129,Integrability,interface,interface,129,"//////////////////////////////////////////////////////////////////////////; // //; // TCling //; // //; // This class defines an interface to the cling C++ interpreter. //; // //; // Cling is a full ANSI compliant C++ interpreter based on //; // clang/LLVM technology. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TCling.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h:32,Modifiability,variab,variables,32,"// set of TObjects used in CINT variables",MatchSource.CODE_COMMENT,core/metacling/src/TCling.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h:20,Performance,load,loaded,20,"// Shared libraries loaded by G__loadfile().",MatchSource.CODE_COMMENT,core/metacling/src/TCling.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h:11,Performance,load,load,11,"// Dynamic load path for rootmap files.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h:18,Security,hash,hashes,18,"// Map of classes hashes and headers associated",MatchSource.CODE_COMMENT,core/metacling/src/TCling.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h:12,Security,hash,hashing,12,"// A simple hashing function",MatchSource.CODE_COMMENT,core/metacling/src/TCling.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h:5,Usability,simpl,simple,5,"// A simple hashing function",MatchSource.CODE_COMMENT,core/metacling/src/TCling.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h:3,Performance,Load,Loaded,3,"// Loaded rootmap files.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h:20,Safety,avoid,avoid,20,"// Which typedef to avoid stripping.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h:34,Performance,load,loaded,34,"// Internal info to mark the last loaded libray.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h:10,Integrability,Interface,Interface,10,"// Public Interface",MatchSource.CODE_COMMENT,core/metacling/src/TCling.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h:12,Integrability,interface,interface,12,"// CallFunc interface",MatchSource.CODE_COMMENT,core/metacling/src/TCling.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h:13,Integrability,interface,interface,13,"// ClassInfo interface",MatchSource.CODE_COMMENT,core/metacling/src/TCling.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h:17,Integrability,interface,interface,17,"// BaseClassInfo interface",MatchSource.CODE_COMMENT,core/metacling/src/TCling.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h:18,Integrability,interface,interface,18,"// DataMemberInfo interface",MatchSource.CODE_COMMENT,core/metacling/src/TCling.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h:21,Integrability,interface,interface,21,"// Function Template interface",MatchSource.CODE_COMMENT,core/metacling/src/TCling.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h:14,Integrability,interface,interface,14,"// MethodInfo interface",MatchSource.CODE_COMMENT,core/metacling/src/TCling.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h:17,Integrability,interface,interface,17,"// MethodArgInfo interface",MatchSource.CODE_COMMENT,core/metacling/src/TCling.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h:12,Integrability,interface,interface,12,"// TypeInfo interface",MatchSource.CODE_COMMENT,core/metacling/src/TCling.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h:15,Integrability,interface,interface,15,"// TypedefInfo interface",MatchSource.CODE_COMMENT,core/metacling/src/TCling.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h:23,Integrability,interface,interface,23,"// QualType Opaque Ptr interface",MatchSource.CODE_COMMENT,core/metacling/src/TCling.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h:16,Integrability,interface,interface,16,"// FunctionDecl interface ",MatchSource.CODE_COMMENT,core/metacling/src/TCling.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h:2,Availability,error,error,2,/*error*/,MatchSource.CODE_COMMENT,core/metacling/src/TCling.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx:532,Integrability,interface,interface,532,"// @(#)root/core/meta:$Id$; // Author: Paul Russo 30/07/2012; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClingBaseClassInfo. Emulation of the CINT BaseClassInfo class. The CINT C++ interpreter provides an interface to metadata about; the base classes of a class through the BaseClassInfo class. This; class provides the same functionality, using an interface as close; as possible to BaseClassInfo but the base class metadata comes from; the Clang C++ compiler, not CINT.; */",MatchSource.CODE_COMMENT,core/metacling/src/TClingBaseClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx:676,Integrability,interface,interface,676,"// @(#)root/core/meta:$Id$; // Author: Paul Russo 30/07/2012; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClingBaseClassInfo. Emulation of the CINT BaseClassInfo class. The CINT C++ interpreter provides an interface to metadata about; the base classes of a class through the BaseClassInfo class. This; class provides the same functionality, using an interface as close; as possible to BaseClassInfo but the base class metadata comes from; the Clang C++ compiler, not CINT.; */",MatchSource.CODE_COMMENT,core/metacling/src/TClingBaseClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx:12,Integrability,wrap,wrapper,12,"// Make the wrapper name.",MatchSource.CODE_COMMENT,core/metacling/src/TClingBaseClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx:13,Integrability,wrap,wrapper,13,"// Write the wrapper code.",MatchSource.CODE_COMMENT,core/metacling/src/TClingBaseClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx:38,Availability,down,downcast,38,"// If the object is not derived, will downcast to toBase first.",MatchSource.CODE_COMMENT,core/metacling/src/TClingBaseClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx:3,Usability,Simpl,Simple,3,"// Simple case, move on to the next base class specifier.",MatchSource.CODE_COMMENT,core/metacling/src/TClingBaseClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx:36,Integrability,depend,dependent,36,"// Check if current base class is a dependent type, that is, an; // uninstantiated template class.",MatchSource.CODE_COMMENT,core/metacling/src/TClingBaseClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx:5,Integrability,depend,dependent,5,"// A dependent type (uninstantiated template), skip it.",MatchSource.CODE_COMMENT,core/metacling/src/TClingBaseClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx:3,Deployability,Update,Update,3,"// Update info for this base class.",MatchSource.CODE_COMMENT,core/metacling/src/TClingBaseClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx:2,Safety,Detect,DetectVirtual,2,/*DetectVirtual=*/,MatchSource.CODE_COMMENT,core/metacling/src/TClingBaseClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx:138,Modifiability,inherit,inheritance,138,"// If Dst is not derived from Src we can skip the whole computation below and; // return that Src is not a public base of Dst. Record all inheritance paths.",MatchSource.CODE_COMMENT,core/metacling/src/TClingBaseClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx:25,Modifiability,inherit,inheritance,25,"// Now walk all possible inheritance paths.",MatchSource.CODE_COMMENT,core/metacling/src/TClingBaseClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx:36,Modifiability,inherit,inheritance,36,"// If the base class has no virtual inheritance.",MatchSource.CODE_COMMENT,core/metacling/src/TClingBaseClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx:77,Integrability,message,message,77,"// Need TNormalizedCtxt otherwise...; // Note: should we really be issuing a message here? Shouldn't; // the caller check and issue the message?",MatchSource.CODE_COMMENT,core/metacling/src/TClingBaseClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx:136,Integrability,message,message,136,"// Need TNormalizedCtxt otherwise...; // Note: should we really be issuing a message here? Shouldn't; // the caller check and issue the message?",MatchSource.CODE_COMMENT,core/metacling/src/TClingBaseClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx:11,Modifiability,inherit,inheritance,11,"// Virtual inheritance case",MatchSource.CODE_COMMENT,core/metacling/src/TClingBaseClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx:2,Safety,Detect,DetectVirtual,2,/*DetectVirtual=*/,MatchSource.CODE_COMMENT,core/metacling/src/TClingBaseClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx:3,Availability,Error,Error,3,"// Error really unexpected here, because construction / iteration guarantees; //inheritance;",MatchSource.CODE_COMMENT,core/metacling/src/TClingBaseClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx:80,Modifiability,inherit,inheritance,80,"// Error really unexpected here, because construction / iteration guarantees; //inheritance;",MatchSource.CODE_COMMENT,core/metacling/src/TClingBaseClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx:54,Modifiability,inherit,inherits,54,"// Derived: public Mid; Mid : protected Base: Derived inherits protected Base?",MatchSource.CODE_COMMENT,core/metacling/src/TClingBaseClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.h:214,Integrability,interface,interface,214,"//////////////////////////////////////////////////////////////////////////; // //; // TClingBaseClassInfo //; // //; // Emulation of the CINT BaseClassInfo class. //; // //; // The CINT C++ interpreter provides an interface to metadata about //; // the base classes of a class through the BaseClassInfo class. This //; // class provides the same functionality, using an interface as close //; // as possible to BaseClassInfo but the base class metadata comes from //; // the Clang C++ compiler, not CINT. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TClingBaseClassInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.h:370,Integrability,interface,interface,370,"//////////////////////////////////////////////////////////////////////////; // //; // TClingBaseClassInfo //; // //; // Emulation of the CINT BaseClassInfo class. //; // //; // The CINT C++ interpreter provides an interface to metadata about //; // the base classes of a class through the BaseClassInfo class. This //; // class provides the same functionality, using an interface as close //; // as possible to BaseClassInfo but the base class metadata comes from //; // the Clang C++ compiler, not CINT. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TClingBaseClassInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:26,Availability,avail,available,26,"// Check if the symbol is available without loading the library.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:44,Performance,load,loading,44,"// Check if the symbol is available without loading the library.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:93,Integrability,interface,interface,93,"// Try to load the library which should provide the symbol definition.; // TODO: Should this interface with the DynamicLibraryManager directly?",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:10,Performance,load,load,10,"// Try to load the library which should provide the symbol definition.; // TODO: Should this interface with the DynamicLibraryManager directly?",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:12,Performance,load,loading,12,"// Only try loading the library once.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:234,Performance,load,load,234,"// If we get here, the symbols have not been found in the current process,; // so no need to check that again. Instead search for the library that; // provides the symbol and create one MaterializationUnit per library to; // actually load it if needed.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:285,Availability,avail,available,285,"// libCling symbols are intentionally hidden from the process, and libCling must not be; // dlopened. Instead, symbols must be resolved by specifically querying the dynlib handle of; // libCling, which by definition is loaded - else we could not call this code. The handle; // is made available as argument to `CreateInterpreter`.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:219,Performance,load,loaded,219,"// libCling symbols are intentionally hidden from the process, and libCling must not be; // dlopened. Instead, symbols must be resolved by specifically querying the dynlib handle of; // libCling, which by definition is loaded - else we could not call this code. The handle; // is made available as argument to `CreateInterpreter`.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:2,Security,Hash,HashLoc,2,/*HashLoc*/,MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:274,Availability,error,error,274,"// Method called via Callbacks->FileNotFound(Filename); // in Preprocessor::HandleIncludeDirective(), initially allowing to; // change the include path, and allowing us to compile code via ACLiC; // when specifying #include ""myfile.C+"", and suppressing the preprocessor; // error message:; // input_line_23:1:10: fatal error: 'myfile.C+' file not found",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:319,Availability,error,error,319,"// Method called via Callbacks->FileNotFound(Filename); // in Preprocessor::HandleIncludeDirective(), initially allowing to; // change the include path, and allowing us to compile code via ACLiC; // when specifying #include ""myfile.C+"", and suppressing the preprocessor; // error message:; // input_line_23:1:10: fatal error: 'myfile.C+' file not found",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:280,Integrability,message,message,280,"// Method called via Callbacks->FileNotFound(Filename); // in Preprocessor::HandleIncludeDirective(), initially allowing to; // change the include path, and allowing us to compile code via ACLiC; // when specifying #include ""myfile.C+"", and suppressing the preprocessor; // error message:; // input_line_23:1:10: fatal error: 'myfile.C+' file not found",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:150,Safety,safe,safe,150,"// We provide our own way of handling the entire #include ""file.c+""; // After we have saved the token reset the current one to; // something which is safe (semi colon usually means empty decl)",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:114,Availability,down,down,114,"// We can't PushDeclContext, because we go up and the routine that pops; // the DeclContext assumes that we drill down always.; // We have to be on the global context. At that point we are in a; // wrapper function so the parent context must be the global.; // This is needed to solve potential issues when using #include ""myFile.C+""; // after a scope declaration like:; // void Check(TObject* obj) {; // if (obj) cout << ""Found the referenced object\n"";; // else cout << ""Error: Could not find the referenced object\n"";; // }; // #include ""A.C+""",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:473,Availability,Error,Error,473,"// We can't PushDeclContext, because we go up and the routine that pops; // the DeclContext assumes that we drill down always.; // We have to be on the global context. At that point we are in a; // wrapper function so the parent context must be the global.; // This is needed to solve potential issues when using #include ""myFile.C+""; // after a scope declaration like:; // void Check(TObject* obj) {; // if (obj) cout << ""Found the referenced object\n"";; // else cout << ""Error: Could not find the referenced object\n"";; // }; // #include ""A.C+""",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:54,Integrability,rout,routine,54,"// We can't PushDeclContext, because we go up and the routine that pops; // the DeclContext assumes that we drill down always.; // We have to be on the global context. At that point we are in a; // wrapper function so the parent context must be the global.; // This is needed to solve potential issues when using #include ""myFile.C+""; // after a scope declaration like:; // void Check(TObject* obj) {; // if (obj) cout << ""Found the referenced object\n"";; // else cout << ""Error: Could not find the referenced object\n"";; // }; // #include ""A.C+""",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:198,Integrability,wrap,wrapper,198,"// We can't PushDeclContext, because we go up and the routine that pops; // the DeclContext assumes that we drill down always.; // We have to be on the global context. At that point we are in a; // wrapper function so the parent context must be the global.; // This is needed to solve potential issues when using #include ""myFile.C+""; // after a scope declaration like:; // void Check(TObject* obj) {; // if (obj) cout << ""Found the referenced object\n"";; // else cout << ""Error: Could not find the referenced object\n"";; // }; // #include ""A.C+""",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:70,Availability,error,error,70,"// On a failed lookup we have to try to more things before issuing an error.; // The symbol might need to be loaded by ROOT's AutoLoading mechanism or; // it might be a ROOT special object.; //; // Try those first and if still failing issue the diagnostics.; //; // returns true when a declaration is found and no error should be emitted.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:314,Availability,error,error,314,"// On a failed lookup we have to try to more things before issuing an error.; // The symbol might need to be loaded by ROOT's AutoLoading mechanism or; // it might be a ROOT special object.; //; // Try those first and if still failing issue the diagnostics.; //; // returns true when a declaration is found and no error should be emitted.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:109,Performance,load,loaded,109,"// On a failed lookup we have to try to more things before issuing an error.; // The symbol might need to be loaded by ROOT's AutoLoading mechanism or; // it might be a ROOT special object.; //; // Try those first and if still failing issue the diagnostics.; //; // returns true when a declaration is found and no error should be emitted.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:8,Availability,error,error,8,"// init error or rootcling",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:33,Availability,error,error,33,"// Don't do any extra work if an error that is not still recovered occurred.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:57,Availability,recover,recovered,57,"// Don't do any extra work if an error that is not still recovered occurred.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:57,Safety,recover,recovered,57,"// Don't do any extra work if an error that is not still recovered occurred.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:39,Integrability,rout,routines,39,"// happiness.; // The remaining lookup routines only work on global scope functions; // (""macros""), not in classes, namespaces etc - anything that looks like; // it has seen any trace of software development.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:117,Integrability,inject,inject,117,"// For backward-compatibility with CINT we must support stmts like:; // x = 4; y = new MyClass();; // I.e we should ""inject"" a C++11 auto keyword in front of ""x"" and ""y""; // This has to have higher precedence than the dynamic scopes. It is claimed; // that if one assigns to a name and the lookup of that name fails if *must*; // auto keyword must be injected and the stmt evaluation must not be delayed; // until runtime.; // For now supported only at the prompt.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:351,Integrability,inject,injected,351,"// For backward-compatibility with CINT we must support stmts like:; // x = 4; y = new MyClass();; // I.e we should ""inject"" a C++11 auto keyword in front of ""x"" and ""y""; // This has to have higher precedence than the dynamic scopes. It is claimed; // that if one assigns to a name and the lookup of that name fails if *must*; // auto keyword must be injected and the stmt evaluation must not be delayed; // until runtime.; // For now supported only at the prompt.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:117,Security,inject,inject,117,"// For backward-compatibility with CINT we must support stmts like:; // x = 4; y = new MyClass();; // I.e we should ""inject"" a C++11 auto keyword in front of ""x"" and ""y""; // This has to have higher precedence than the dynamic scopes. It is claimed; // that if one assigns to a name and the lookup of that name fails if *must*; // auto keyword must be injected and the stmt evaluation must not be delayed; // until runtime.; // For now supported only at the prompt.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:351,Security,inject,injected,351,"// For backward-compatibility with CINT we must support stmts like:; // x = 4; y = new MyClass();; // I.e we should ""inject"" a C++11 auto keyword in front of ""x"" and ""y""; // This has to have higher precedence than the dynamic scopes. It is claimed; // that if one assigns to a name and the lookup of that name fails if *must*; // auto keyword must be injected and the stmt evaluation must not be delayed; // until runtime.; // For now supported only at the prompt.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:174,Performance,load,load,174,"// We are currently instantiating one (or more) templates. At that point,; // all Decls are present in the AST (with possibly deserialization pending),; // and we should not load more modules which could find an implicit template; // instantiation that is lazily loaded.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:263,Performance,load,loaded,263,"// We are currently instantiating one (or more) templates. At that point,; // all Decls are present in the AST (with possibly deserialization pending),; // and we should not load more modules which could find an implicit template; // instantiation that is lazily loaded.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:40,Availability,avail,available,40,"// FIXME: We should load only the first available and rely on other callbacks; // such as RequireCompleteType and LookupUnqualified to load all.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:20,Performance,load,load,20,"// FIXME: We should load only the first available and rely on other callbacks; // such as RequireCompleteType and LookupUnqualified to load all.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:135,Performance,load,load,135,"// FIXME: We should load only the first available and rely on other callbacks; // such as RequireCompleteType and LookupUnqualified to load all.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:29,Performance,load,loaded,29,"// Skip to the first not-yet-loaded module.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:8,Availability,error,error,8,"// init error or rootcling",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:34,Deployability,update,update,34,"// After loading modules, we must update the redeclaration chains.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:9,Performance,load,loading,9,"// After loading modules, we must update the redeclaration chains.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:2,Performance,load,loadFirstMatchOnly,2,/*loadFirstMatchOnly*/,MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:14,Safety,avoid,avoid,14,"// We want to avoid qualified lookups, because they are expensive and; // difficult to construct. This is why we *artificially* push a scope and; // a decl context, where Sema should do the lookup.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:8,Availability,error,error,8,"// init error or rootcling",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:53,Performance,load,loadFirstMatchOnly,53,"// if (findInGlobalModuleIndex(Tag->getDeclName(), /*loadFirstMatchOnly*/false)); // return true;",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:207,Availability,error,error,207,"// The symbol might be defined in the ROOT class AutoLoading map so we have to; // try to autoload it first and do secondary lookup to try to find it.; //; // returns true when a declaration is found and no error should be emitted.; // If FileEntry, this is a reacting on a #include and Name is the included; // filename.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:8,Availability,error,error,8,"// init error or rootcling",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:3,Safety,Avoid,Avoid,3,"// Avoid tail chasing.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:50,Availability,failure,failures,50,"// We should try autoload only for special lookup failures.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:111,Performance,load,load,111,"// Good enough; RequireCompleteType() will tell us if we; // need to auto parse.; // But we might need to auto-load.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:70,Availability,error,error,70,"// If cling cannot find a name it should ask ROOT before it issues an error.; // If ROOT knows the name then it has to create a new variable with that name; // and type in dedicated for that namespace (eg. __ROOT_SpecialObjects).; // For example if the interpreter is looking for h in h-Draw(), this routine; // will create; // namespace __ROOT_SpecialObjects {; // THist* h = (THist*) the_address;; // }; //; // Later if h is called again it again won't be found by the standart lookup; // because it is in our hidden namespace (nobody should do using namespace; // __ROOT_SpecialObjects). It caches the variable declarations and their; // last address. If the newly found decl with the same name (h) has different; // address than the cached one it goes directly at the address and updates it.; //; // returns true when declaration is found and no error should be emitted.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:850,Availability,error,error,850,"// If cling cannot find a name it should ask ROOT before it issues an error.; // If ROOT knows the name then it has to create a new variable with that name; // and type in dedicated for that namespace (eg. __ROOT_SpecialObjects).; // For example if the interpreter is looking for h in h-Draw(), this routine; // will create; // namespace __ROOT_SpecialObjects {; // THist* h = (THist*) the_address;; // }; //; // Later if h is called again it again won't be found by the standart lookup; // because it is in our hidden namespace (nobody should do using namespace; // __ROOT_SpecialObjects). It caches the variable declarations and their; // last address. If the newly found decl with the same name (h) has different; // address than the cached one it goes directly at the address and updates it.; //; // returns true when declaration is found and no error should be emitted.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:784,Deployability,update,updates,784,"// If cling cannot find a name it should ask ROOT before it issues an error.; // If ROOT knows the name then it has to create a new variable with that name; // and type in dedicated for that namespace (eg. __ROOT_SpecialObjects).; // For example if the interpreter is looking for h in h-Draw(), this routine; // will create; // namespace __ROOT_SpecialObjects {; // THist* h = (THist*) the_address;; // }; //; // Later if h is called again it again won't be found by the standart lookup; // because it is in our hidden namespace (nobody should do using namespace; // __ROOT_SpecialObjects). It caches the variable declarations and their; // last address. If the newly found decl with the same name (h) has different; // address than the cached one it goes directly at the address and updates it.; //; // returns true when declaration is found and no error should be emitted.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:300,Integrability,rout,routine,300,"// If cling cannot find a name it should ask ROOT before it issues an error.; // If ROOT knows the name then it has to create a new variable with that name; // and type in dedicated for that namespace (eg. __ROOT_SpecialObjects).; // For example if the interpreter is looking for h in h-Draw(), this routine; // will create; // namespace __ROOT_SpecialObjects {; // THist* h = (THist*) the_address;; // }; //; // Later if h is called again it again won't be found by the standart lookup; // because it is in our hidden namespace (nobody should do using namespace; // __ROOT_SpecialObjects). It caches the variable declarations and their; // last address. If the newly found decl with the same name (h) has different; // address than the cached one it goes directly at the address and updates it.; //; // returns true when declaration is found and no error should be emitted.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:132,Modifiability,variab,variable,132,"// If cling cannot find a name it should ask ROOT before it issues an error.; // If ROOT knows the name then it has to create a new variable with that name; // and type in dedicated for that namespace (eg. __ROOT_SpecialObjects).; // For example if the interpreter is looking for h in h-Draw(), this routine; // will create; // namespace __ROOT_SpecialObjects {; // THist* h = (THist*) the_address;; // }; //; // Later if h is called again it again won't be found by the standart lookup; // because it is in our hidden namespace (nobody should do using namespace; // __ROOT_SpecialObjects). It caches the variable declarations and their; // last address. If the newly found decl with the same name (h) has different; // address than the cached one it goes directly at the address and updates it.; //; // returns true when declaration is found and no error should be emitted.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:605,Modifiability,variab,variable,605,"// If cling cannot find a name it should ask ROOT before it issues an error.; // If ROOT knows the name then it has to create a new variable with that name; // and type in dedicated for that namespace (eg. __ROOT_SpecialObjects).; // For example if the interpreter is looking for h in h-Draw(), this routine; // will create; // namespace __ROOT_SpecialObjects {; // THist* h = (THist*) the_address;; // }; //; // Later if h is called again it again won't be found by the standart lookup; // because it is in our hidden namespace (nobody should do using namespace; // __ROOT_SpecialObjects). It caches the variable declarations and their; // last address. If the newly found decl with the same name (h) has different; // address than the cached one it goes directly at the address and updates it.; //; // returns true when declaration is found and no error should be emitted.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:594,Performance,cache,caches,594,"// If cling cannot find a name it should ask ROOT before it issues an error.; // If ROOT knows the name then it has to create a new variable with that name; // and type in dedicated for that namespace (eg. __ROOT_SpecialObjects).; // For example if the interpreter is looking for h in h-Draw(), this routine; // will create; // namespace __ROOT_SpecialObjects {; // THist* h = (THist*) the_address;; // }; //; // Later if h is called again it again won't be found by the standart lookup; // because it is in our hidden namespace (nobody should do using namespace; // __ROOT_SpecialObjects). It caches the variable declarations and their; // last address. If the newly found decl with the same name (h) has different; // address than the cached one it goes directly at the address and updates it.; //; // returns true when declaration is found and no error should be emitted.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:737,Performance,cache,cached,737,"// If cling cannot find a name it should ask ROOT before it issues an error.; // If ROOT knows the name then it has to create a new variable with that name; // and type in dedicated for that namespace (eg. __ROOT_SpecialObjects).; // For example if the interpreter is looking for h in h-Draw(), this routine; // will create; // namespace __ROOT_SpecialObjects {; // THist* h = (THist*) the_address;; // }; //; // Later if h is called again it again won't be found by the standart lookup; // because it is in our hidden namespace (nobody should do using namespace; // __ROOT_SpecialObjects). It caches the variable declarations and their; // last address. If the newly found decl with the same name (h) has different; // address than the cached one it goes directly at the address and updates it.; //; // returns true when declaration is found and no error should be emitted.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:8,Availability,error,error,8,"// init error or rootcling",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:24,Safety,abort,abort,24,"// If there is a result abort.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:23,Performance,cache,cache,23,"// force restoring the cache",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:216,Testability,log,log,216,"// Register the address in TCling::fgSetOfSpecials; // to speed-up the execution of TCling::RecursiveRemove when; // the object is not a special.; // See http://root.cern.ch/viewvc/trunk/core/meta/src/TCint.cxx?view=log#rev18109",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:114,Deployability,update,update,114,"// Since code was generated already we cannot rely on the initializer; // of the decl in the AST, however we will update that init so that it; // will be easier while debugging.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:14,Deployability,update,update,14,"// The actual update happens here, directly in memory.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:23,Modifiability,variab,variable,23,"// We will declare the variable as pointer.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:8,Availability,error,error,8,"// init error or rootcling",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:37,Integrability,wrap,wrapper,37,"// DynamicLookup only happens inside wrapper functions:",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:36,Integrability,wrap,wrapper,36,"// Can't have a function inside the wrapper:",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:11,Availability,redundant,redundant,11,"// Prevent redundant declarations for control statements (e.g., for, if, while); // that have already been annotated.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:11,Safety,redund,redundant,11,"// Prevent redundant declarations for control statements (e.g., for, if, while); // that have already been annotated.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:136,Availability,recover,recover,136,"//SemaRef.PushOnScopeChains(Result, SemaRef.TUScope, /*Add to ctx*/true);; // Say that we can handle the situation. Clang should try to recover",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:136,Safety,recover,recover,136,"//SemaRef.PushOnScopeChains(Result, SemaRef.TUScope, /*Add to ctx*/true);; // Say that we can handle the situation. Clang should try to recover",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:739,Performance,cache,cached,739,"// FIXME: Figure out better way to handle:; // C++ [basic.lookup.classref]p1:; // In a class member access expression (5.2.5), if the . or -> token is; // immediately followed by an identifier followed by a <, the; // identifier must be looked up to determine whether the < is the; // beginning of a template argument list (14.2) or a less-than operator.; // The identifier is first looked up in the class of the object; // expression. If the identifier is not found, it is then looked up in; // the context of the entire postfix-expression and shall name a class; // or function template.; //; // We want to ignore object(.|->)member<template>; //if (R.getSema().PP.LookAhead(0).getKind() == tok::less); // TODO: check for . or -> in the cached token stream; // return false;",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:100,Security,access,access,100,"// FIXME: Figure out better way to handle:; // C++ [basic.lookup.classref]p1:; // In a class member access expression (5.2.5), if the . or -> token is; // immediately followed by an identifier followed by a <, the; // identifier must be looked up to determine whether the < is the; // beginning of a template argument list (14.2) or a less-than operator.; // The identifier is first looked up in the class of the object; // expression. If the identifier is not found, it is then looked up in; // the context of the entire postfix-expression and shall name a class; // or function template.; //; // We want to ignore object(.|->)member<template>; //if (R.getSema().PP.LookAhead(0).getKind() == tok::less); // TODO: check for . or -> in the cached token stream; // return false;",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:8,Availability,error,error,8,"// init error or rootcling",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:52,Integrability,inject,injection,52,"// Raise a warning when trying to use implicit auto injection feature.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:52,Security,inject,injection,52,"// Raise a warning when trying to use implicit auto injection feature.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:61,Availability,recover,recover,61,"// Say that we can handle the situation. Clang should try to recover",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:61,Safety,recover,recover,61,"// Say that we can handle the situation. Clang should try to recover",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:27,Deployability,update,update,27,"// The callback is used to update the list of globals in ROOT.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:27,Deployability,update,update,27,"// The callback is used to update the list of globals in ROOT.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:49,Performance,cache,caches,49,"// The callback is used to clear the autoparsing caches.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:27,Usability,clear,clear,27,"// The callback is used to clear the autoparsing caches.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:10,Safety,safe,safely,10,"// We can safely assume that if the lock exist already when we are in Cling code,; // then the lock has (or should been taken) already. Any action (that caused callers; // to take the lock) is halted during ProcessLine. So it is fair to unlock it.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.h:29,Deployability,update,update,29,"// The callbacks are used to update the list of globals in ROOT.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.h:2,Security,Hash,HashLoc,2,/*HashLoc*/,MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.h:27,Deployability,update,update,27,"// The callback is used to update the list of globals in ROOT.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.h:27,Deployability,update,update,27,"// The callback is used to update the list of globals in ROOT.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.h:49,Performance,cache,caches,49,"// The callback is used to clear the autoparsing caches.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.h:27,Usability,clear,clear,27,"// The callback is used to clear the autoparsing caches.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:565,Integrability,interface,interface,565,"// root/core/meta; // vim: sw=3; // Author: Paul Russo 30/07/2012; // Author: Vassil Vassilev 9/02/2013; /*************************************************************************; * Copyright (C) 1995-2023, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClingCallFunc; Emulation of the CINT CallFunc class. The CINT C++ interpreter provides an interface for calling; functions through the generated wrappers in dictionaries with; the CallFunc class. This class provides the same functionality,; using an interface as close as possible to CallFunc but the; function metadata and calling service comes from the Cling; C++ interpreter and the Clang C++ compiler, not CINT.; */",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:620,Integrability,wrap,wrappers,620,"// root/core/meta; // vim: sw=3; // Author: Paul Russo 30/07/2012; // Author: Vassil Vassilev 9/02/2013; /*************************************************************************; * Copyright (C) 1995-2023, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClingCallFunc; Emulation of the CINT CallFunc class. The CINT C++ interpreter provides an interface for calling; functions through the generated wrappers in dictionaries with; the CallFunc class. This class provides the same functionality,; using an interface as close as possible to CallFunc but the; function metadata and calling service comes from the Cling; C++ interpreter and the Clang C++ compiler, not CINT.; */",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:725,Integrability,interface,interface,725,"// root/core/meta; // vim: sw=3; // Author: Paul Russo 30/07/2012; // Author: Vassil Vassilev 9/02/2013; /*************************************************************************; * Copyright (C) 1995-2023, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClingCallFunc; Emulation of the CINT CallFunc class. The CINT C++ interpreter provides an interface for calling; functions through the generated wrappers in dictionaries with; the CallFunc class. This class provides the same functionality,; using an interface as close as possible to CallFunc but the; function metadata and calling service comes from the Cling; C++ interpreter and the Clang C++ compiler, not CINT.; */",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:67,Deployability,update,update,67,"// FIXME: Find the right type or make sure we have an interface to update; // the clang::Type in the cling::Value",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:54,Integrability,interface,interface,54,"// FIXME: Find the right type or make sure we have an interface to update; // the clang::Type in the cling::Value",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:17,Integrability,wrap,wrapper,17,"// TODO: Build a wrapper around the expression to avoid decompilation and; // compilation and other string operations.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:50,Safety,avoid,avoid,50,"// TODO: Build a wrapper around the expression to avoid decompilation and; // compilation and other string operations.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:186,Testability,test,test,186,"// FIXME: Take the code here https://github.com/root-project/root/blob/550fb2644f3c07d1db72b9b4ddc4eba5a99ddc12/interpreter/cling/lib/Utils/AST.cpp#L316-L350; // to make hist/histdrawv7/test/histhistdrawv7testUnit work into; // QualTypeNames.h in clang; //type_name = clang::TypeName::getFullyQualifiedName(QT, C, Policy);",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:95,Integrability,wrap,wrapper,95,"//; // Collect information about type type of a function parameter; // needed for building the wrapper function.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:576,Availability,failure,failures,576,"// Sometimes it's necessary that we cast the function we want to call first; // to its explicit function type before calling it. This is supposed to prevent; // that we accidentially ending up in a function that is not the one we're; // supposed to call here (e.g. because the C++ function lookup decides to take; // another function that better fits).; // This method has some problems, e.g. when we call a function with default; // arguments and we don't provide all arguments, we would fail with this pattern.; // Same applies with member methods which seem to cause parse failures even when; // we supply the object parameter.; // Therefore we only use it in cases where we know it works and set this variable; // to true when we do.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:705,Modifiability,variab,variable,705,"// Sometimes it's necessary that we cast the function we want to call first; // to its explicit function type before calling it. This is supposed to prevent; // that we accidentially ending up in a function that is not the one we're; // supposed to call here (e.g. because the C++ function lookup decides to take; // another function that better fits).; // This method has some problems, e.g. when we call a function with default; // arguments and we don't provide all arguments, we would fail with this pattern.; // Same applies with member methods which seem to cause parse failures even when; // we supply the object parameter.; // Therefore we only use it in cases where we know it works and set this variable; // to true when we do.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:340,Availability,avail,available,340,"///////////////////////////////////////////////////////////////////////////////; // Returns the DeclContext corresponding to fMethod's Decl.; // \Note that this might be a FunctionDecl or a UsingShadowDecl; we use the; // DeclContext of the UsingShadowDecl e.g. for constructing a derived class; // object, even if invoking a function made available by a using declaration; // of a constructor of a base class (ROOT-11010).",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:175,Availability,Error,Error,175,"// Ordinary function, not a template specialization.; // Note: This might be ok, the body might be defined; // in a library, and all we have seen is the; // header file.; //::Error(""TClingCallFunc::make_wrapper"",; // ""Cannot make wrapper for a function which is ""; // ""declared but not defined!"");; // return 0;",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:230,Integrability,wrap,wrapper,230,"// Ordinary function, not a template specialization.; // Note: This might be ok, the body might be defined; // in a library, and all we have seen is the; // header file.; //::Error(""TClingCallFunc::make_wrapper"",; // ""Cannot make wrapper for a function which is ""; // ""declared but not defined!"");; // return 0;",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:189,Availability,Error,Error,189,"// We are either TSK_Undeclared or; // TSK_ExplicitSpecialization.; // Note: This might be ok, the body might be defined; // in a library, and all we have seen is the; // header file.; //::Error(""TClingCallFunc::make_wrapper"",; // ""Cannot make wrapper for a function template ""; // ""explicit specialization which is declared ""; // ""but not defined!"");; // return 0;",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:244,Integrability,wrap,wrapper,244,"// We are either TSK_Undeclared or; // TSK_ExplicitSpecialization.; // Note: This might be ok, the body might be defined; // in a library, and all we have seen is the; // header file.; //::Error(""TClingCallFunc::make_wrapper"",; // ""Cannot make wrapper for a function template ""; // ""explicit specialization which is declared ""; // ""but not defined!"");; // return 0;",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:189,Availability,Error,Error,189,"// We are either TSK_Undeclared or; // TSK_ExplicitSpecialization.; // Note: This might be ok, the body might be defined; // in a library, and all we have seen is the; // header file.; //::Error(""TClingCallFunc::make_wrapper"",; // ""Cannot make wrapper for a function template ""; // ""explicit specialization which is declared ""; // ""but not defined!"");; // return 0;",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:244,Integrability,wrap,wrapper,244,"// We are either TSK_Undeclared or; // TSK_ExplicitSpecialization.; // Note: This might be ok, the body might be defined; // in a library, and all we have seen is the; // header file.; //::Error(""TClingCallFunc::make_wrapper"",; // ""Cannot make wrapper for a function template ""; // ""explicit specialization which is declared ""; // ""but not defined!"");; // return 0;",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:350,Integrability,depend,dependent,350,"// This function is the result of instantiating or; // specializing a member function of a class template,; // or a member function of a class member of a class template,; // or a member function template of a class template, or a; // member function template of a class member of a class; // template where at least some part of the function is; // dependent on a template argument.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:189,Availability,Error,Error,189,"// We are either TSK_Undeclared or; // TSK_ExplicitSpecialization.; // Note: This might be ok, the body might be defined; // in a library, and all we have seen is the; // header file.; //::Error(""TClingCallFunc::make_wrapper"",; // ""Cannot make wrapper for a dependent function ""; // ""template explicit specialization which is declared ""; // ""but not defined!"");; // return 0;",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:244,Integrability,wrap,wrapper,244,"// We are either TSK_Undeclared or; // TSK_ExplicitSpecialization.; // Note: This might be ok, the body might be defined; // in a library, and all we have seen is the; // header file.; //::Error(""TClingCallFunc::make_wrapper"",; // ""Cannot make wrapper for a dependent function ""; // ""template explicit specialization which is declared ""; // ""but not defined!"");; // return 0;",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:258,Integrability,depend,dependent,258,"// We are either TSK_Undeclared or; // TSK_ExplicitSpecialization.; // Note: This might be ok, the body might be defined; // in a library, and all we have seen is the; // header file.; //::Error(""TClingCallFunc::make_wrapper"",; // ""Cannot make wrapper for a dependent function ""; // ""template explicit specialization which is declared ""; // ""but not defined!"");; // return 0;",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:350,Integrability,depend,dependent,350,"// This function is the result of instantiating or; // specializing a member function of a class template,; // or a member function of a class member of a class template,; // or a member function template of a class template, or a; // member function template of a class member of a class; // template where at least some part of the function is; // dependent on a template argument.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:16,Integrability,wrap,wrapper,16,"//; // Make the wrapper name.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:17,Integrability,wrap,wrapper,17,"//; // Write the wrapper code.; // FIXME: this should be synthesized into the AST!; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:29,Integrability,inject,inject,29,"// Using declarations cannot inject special members; do not call them; // as such. This might happen by using `Base(Base&, int = 12)`, which; // is fine to be called as `Derived d(someBase, 42)` but not as; // copy constructor of `Derived`.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:29,Security,inject,inject,29,"// Using declarations cannot inject special members; do not call them; // as such. This might happen by using `Base(Base&, int = 12)`, which; // is fine to be called as `Derived d(someBase, 42)` but not as; // copy constructor of `Derived`.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:26,Integrability,wrap,wrapper,26,"//fprintf(stderr, ""%s\n"", wrapper.c_str());; //; // Compile the wrapper code.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:64,Integrability,wrap,wrapper,64,"//fprintf(stderr, ""%s\n"", wrapper.c_str());; //; // Compile the wrapper code.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:16,Integrability,wrap,wrapper,16,"//; // Make the wrapper name.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:17,Integrability,wrap,wrapper,17,"//; // Write the wrapper code.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:7,Integrability,wrap,wrapper,7,"// End wrapper.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:26,Integrability,wrap,wrapper,26,"//fprintf(stderr, ""%s\n"", wrapper.c_str());; //; // Compile the wrapper code.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:64,Integrability,wrap,wrapper,64,"//fprintf(stderr, ""%s\n"", wrapper.c_str());; //; // Compile the wrapper code.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:16,Integrability,wrap,wrapper,16,"//; // Make the wrapper name.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:17,Integrability,wrap,wrapper,17,"//; // Write the wrapper code.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:7,Integrability,wrap,wrapper,7,"// End wrapper.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:26,Integrability,wrap,wrapper,26,"//fprintf(stderr, ""%s\n"", wrapper.c_str());; //; // Compile the wrapper code.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:64,Integrability,wrap,wrapper,64,"//fprintf(stderr, ""%s\n"", wrapper.c_str());; //; // Compile the wrapper code.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:162,Integrability,wrap,wrapper,162,"// Check if we provided a this parameter.; // FIXME: Currently we do not provide consistently the this pointer at; // index 0 of the call arguments passed to the wrapper.; // In C++ we can still call member functions which do not use it. Eg:; // struct S {int Print() { return printf(""a"");} }; auto r1 = ((S*)0)->Print();; // This works just fine even though it might be UB...",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:134,Availability,Error,Error,134,"//if (!info->HasDefaultConstructor()) {; // // FIXME: We might have a ROOT ioctor, we might; // // have to check for that here.; // ::Error(""TClingCallFunc::ExecDefaultConstructor"",; // ""Class has no default constructor: %s"",; // info->Name());; // return 0;; //}",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:4,Availability,Error,Error,4,"//::Error(""TClingCallFunc::SetFunc"", ""Could not find method %s(%s)"", method,; // arglist);",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:70,Modifiability,enhance,enhance,70,"// FIXME: The arglist was already parsed by the lookup, we should; // enhance the lookup to return the resulting expression; // list so we do not need to parse it again here.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:4,Availability,Error,Error,4,"//::Error(""TClingCallFunc::SetFuncProto"", ""Could not find method %s(%s)"",; // method, proto);",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:4,Availability,Error,Error,4,"//::Error(""TClingCallFunc::SetFuncProto"", ""Could not find method %s(%s)"",; // method, proto);",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.h:204,Integrability,interface,interface,204,"//////////////////////////////////////////////////////////////////////////; // //; // TClingCallFunc //; // //; // Emulation of the CINT CallFunc class. //; // //; // The CINT C++ interpreter provides an interface for calling //; // functions through the generated wrappers in dictionaries with //; // the CallFunc class. This class provides the same functionality, //; // using an interface as close as possible to CallFunc but the //; // function metadata and calling service comes from the Cling //; // C++ interpreter and the Clang C++ compiler, not CINT. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.h:265,Integrability,wrap,wrappers,265,"//////////////////////////////////////////////////////////////////////////; // //; // TClingCallFunc //; // //; // Emulation of the CINT CallFunc class. //; // //; // The CINT C++ interpreter provides an interface for calling //; // functions through the generated wrappers in dictionaries with //; // the CallFunc class. This class provides the same functionality, //; // using an interface as close as possible to CallFunc but the //; // function metadata and calling service comes from the Cling //; // C++ interpreter and the Clang C++ compiler, not CINT. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.h:382,Integrability,interface,interface,382,"//////////////////////////////////////////////////////////////////////////; // //; // TClingCallFunc //; // //; // Emulation of the CINT CallFunc class. //; // //; // The CINT C++ interpreter provides an interface for calling //; // functions through the generated wrappers in dictionaries with //; // the CallFunc class. This class provides the same functionality, //; // using an interface as close as possible to CallFunc but the //; // function metadata and calling service comes from the Cling //; // C++ interpreter and the Clang C++ compiler, not CINT. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.h:24,Integrability,wrap,wrapper,24,"/// Pointer to compiled wrapper, we do *not* own.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.h:20,Integrability,interface,interface,20,/*FIXME Remove that interface */,MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.h:207,Safety,avoid,avoid,207,"// T can be different from the actual parameter of the underlying function.; // If we know already the function signature, make sure we create the; // cling::Value with the proper type and representation to avoid; // re-adjusting at the time we execute.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx:524,Integrability,interface,interface,524,"// @(#)root/core/meta:$Id$; // Author: Paul Russo 30/07/2012; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClingClassInfo. Emulation of the CINT ClassInfo class. The CINT C++ interpreter provides an interface to metadata about; a class through the ClassInfo class. This class provides the same; functionality, using an interface as close as possible to ClassInfo; but the class metadata comes from the Clang C++ compiler, not CINT.; */",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx:644,Integrability,interface,interface,644,"// @(#)root/core/meta:$Id$; // Author: Paul Russo 30/07/2012; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClingClassInfo. Emulation of the CINT ClassInfo class. The CINT C++ interpreter provides an interface to metadata about; a class through the ClassInfo class. This class provides the same; functionality, using an interface as close as possible to ClassInfo; but the class metadata comes from the Clang C++ compiler, not CINT.; */",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx:45,Integrability,interface,interface,45,"// We are an enum or namespace.; // The cint interface always returns 0L for these guys.",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx:12,Integrability,interface,interface,12,"// The cint interface always returns 0L for these guys.",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx:28,Security,access,accessible,28,"// This function may not be accessible using a pointer; // to the declaring class, get the adjustment necessary; // to convert that to a pointer to the defining class.",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx:31,Performance,cache,cache,31,"// Check for the offset in the cache.",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx:253,Modifiability,enhance,enhanced,253,"// Return true if there a constructor taking no arguments (including; // a constructor that has defaults for all of its arguments) which; // is callable. Either it has a body, or it is trivial and the; // compiler elides it.; //; // Note: This is could enhanced to also know about the ROOT ioctor; // but this was not the case in CINT.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx:36,Performance,load,loaded,36,"// All clang classes are considered loaded.",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx:18,Performance,cache,cache,18,"// invalidate the cache.",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx:19,Usability,usab,usable,19,"// Advance to next usable decl, or return if there is no next usable decl.",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx:62,Usability,usab,usable,62,"// Advance to next usable decl, or return if there is no next usable decl.",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx:75,Availability,Error,Error,75,"// FIXME: We fail roottest root/io/newdelete if we issue this message!; // Error(""TClingClassInfo::New()"", ""Class has no default constructor: %s"",; // FullyQualifiedName(GetDecl()).c_str());",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx:62,Integrability,message,message,62,"// FIXME: We fail roottest root/io/newdelete if we issue this message!; // Error(""TClingClassInfo::New()"", ""Class has no default constructor: %s"",; // FullyQualifiedName(GetDecl()).c_str());",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx:74,Availability,Error,Error,74,"// FIXME: We fail roottest root/io/newdelete if we issue this message!; //Error(""TClingClassInfo::New(n)"",; // ""Class has no default constructor: %s"",; // FullyQualifiedName(GetDecl()).c_str());",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx:62,Integrability,message,message,62,"// FIXME: We fail roottest root/io/newdelete if we issue this message!; //Error(""TClingClassInfo::New(n)"",; // ""Class has no default constructor: %s"",; // FullyQualifiedName(GetDecl()).c_str());",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx:74,Availability,Error,Error,74,"// FIXME: We fail roottest root/io/newdelete if we issue this message!; //Error(""TClingClassInfo::New(n, arena)"",; // ""Class has no default constructor: %s"",; // FullyQualifiedName(GetDecl()).c_str());",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx:62,Integrability,message,message,62,"// FIXME: We fail roottest root/io/newdelete if we issue this message!; //Error(""TClingClassInfo::New(n, arena)"",; // ""Class has no default constructor: %s"",; // FullyQualifiedName(GetDecl()).c_str());",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx:74,Availability,Error,Error,74,"// FIXME: We fail roottest root/io/newdelete if we issue this message!; //Error(""TClingClassInfo::New(arena)"",; // ""Class has no default constructor: %s"",; // FullyQualifiedName(GetDecl()).c_str());",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx:62,Integrability,message,message,62,"// FIXME: We fail roottest root/io/newdelete if we issue this message!; //Error(""TClingClassInfo::New(arena)"",; // ""Class has no default constructor: %s"",; // FullyQualifiedName(GetDecl()).c_str());",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx:19,Performance,cache,cache,19,"// NOTE: We cannot cache the result, since we are really an iterator.; // Try to get the comment either from the annotation or the header; // file, if present.; // Iterate over the redeclarations, we can have multiple definitions in the; // redecl chain (came from merging of pcms).",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.h:206,Integrability,interface,interface,206,"//////////////////////////////////////////////////////////////////////////; // //; // TClingClassInfo //; // //; // Emulation of the CINT ClassInfo class. //; // //; // The CINT C++ interpreter provides an interface to metadata about //; // a class through the ClassInfo class. This class provides the same //; // functionality, using an interface as close as possible to ClassInfo //; // but the class metadata comes from the Clang C++ compiler, not CINT. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.h:338,Integrability,interface,interface,338,"//////////////////////////////////////////////////////////////////////////; // //; // TClingClassInfo //; // //; // Emulation of the CINT ClassInfo class. //; // //; // The CINT C++ interpreter provides an interface to metadata about //; // a class through the ClassInfo class. This class provides the same //; // functionality, using an interface as close as possible to ClassInfo //; // but the class metadata comes from the Clang C++ compiler, not CINT. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.h:26,Availability,down,down,26,"// FIXME: We should track down all sets and potentially avoid them.",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.h:56,Safety,avoid,avoid,56,"// FIXME: We should track down all sets and potentially avoid them.",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.h:18,Performance,cache,cache,18,"// invalidate the cache.",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx:534,Integrability,interface,interface,534,"// @(#)root/core/meta:$Id$; // Author: Paul Russo 30/07/2012; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClingDataMemberInfo. Emulation of the CINT DataMemberInfo class. The CINT C++ interpreter provides an interface to metadata about; the data members of a class through the DataMemberInfo class. This; class provides the same functionality, using an interface as close; as possible to DataMemberInfo but the data member metadata comes; from the Clang C++ compiler, not CINT.; */",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx:679,Integrability,interface,interface,679,"// @(#)root/core/meta:$Id$; // Author: Paul Russo 30/07/2012; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClingDataMemberInfo. Emulation of the CINT DataMemberInfo class. The CINT C++ interpreter provides an interface to metadata about; the data members of a class through the DataMemberInfo class. This; class provides the same functionality, using an interface as close; as possible to DataMemberInfo but the data member metadata comes; from the Clang C++ compiler, not CINT.; */",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx:136,Modifiability,variab,variable,136,"// Skip unnamed declarations, e.g. in; // struct S {; // struct { int i; }; // };; // the inner struct corresponds to an unnamed member variable,; // where only `S::i` should be exposed.",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx:178,Security,expose,exposed,178,"// Skip unnamed declarations, e.g. in; // struct S {; // struct { int i; }; // };; // the inner struct corresponds to an unnamed member variable,; // where only `S::i` should be exposed.",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx:3,Safety,Sanity check,Sanity check,3,"// Sanity check the current data member.",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx:3,Availability,Error,Error,3,"// Error, was not a data member, variable, or enumerator.",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx:33,Modifiability,variab,variable,33,"// Error, was not a data member, variable, or enumerator.",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx:3,Safety,Sanity check,Sanity check,3,"// Sanity check the current data member.",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx:3,Availability,Error,Error,3,"// Error, was not a data member, variable, or enumerator.",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx:33,Modifiability,variab,variable,33,"// Error, was not a data member, variable, or enumerator.",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx:40,Modifiability,variab,variables,40,"// We can't reassign constexpr or const variables. We can compute the; // initializer.",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx:121,Security,access,access,121,"// If the declaration is public in a private nested struct, make the declaration; // private nonetheless, as for outside access (e.g. ROOT I/O) it's private:; // NOTE: this uses `GetDecl()`, to capture the access of the UsingShadowDecl,; // which is defined in the derived class and might differ from the access of the decl; // in the base class.; // TODO: move this somewhere such that TClingMethodInfo can use this, too.",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx:206,Security,access,access,206,"// If the declaration is public in a private nested struct, make the declaration; // private nonetheless, as for outside access (e.g. ROOT I/O) it's private:; // NOTE: this uses `GetDecl()`, to capture the access of the UsingShadowDecl,; // which is defined in the derived class and might differ from the access of the decl; // in the base class.; // TODO: move this somewhere such that TClingMethodInfo can use this, too.",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx:305,Security,access,access,305,"// If the declaration is public in a private nested struct, make the declaration; // private nonetheless, as for outside access (e.g. ROOT I/O) it's private:; // NOTE: this uses `GetDecl()`, to capture the access of the UsingShadowDecl,; // which is defined in the derived class and might differ from the access of the decl; // in the base class.; // TODO: move this somewhere such that TClingMethodInfo can use this, too.",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx:42,Modifiability,variab,variable,42,"// Data members of a namespace are global variable which were; // considered to be 'static' in the CINT (and thus ROOT) scheme.",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx:3,Safety,Sanity check,Sanity check,3,"// Sanity check the current data member.",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx:3,Availability,Error,Error,3,"// Error, was not a data member, variable, or enumerator.",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx:33,Modifiability,variab,variable,33,"// Error, was not a data member, variable, or enumerator.",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx:32,Integrability,interface,interface,32,"// Truncate cast to fit to cint interface.",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx:110,Integrability,depend,depends,110,"// In CINT's version, the type name returns did *not* include any array; // information, ROOT's existing code depends on it.",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx:110,Integrability,depend,depends,110,"// In CINT's version, the type name returns did *not* include any array; // information, ROOT's existing code depends on it.; // This might become part of the implementation of GetNormalizedName.",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx:29,Performance,cache,cache,29,"//NOTE: We can't use it as a cache due to the ""thoughtful"" self iterator; //if (fTitle.size()); // return fTitle.c_str();",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.h:216,Integrability,interface,interface,216,"//////////////////////////////////////////////////////////////////////////; // //; // TClingDataMemberInfo //; // //; // Emulation of the CINT DataMemberInfo class. //; // //; // The CINT C++ interpreter provides an interface to metadata about //; // the data members of a class through the DataMemberInfo class. This //; // class provides the same functionality, using an interface as close //; // as possible to DataMemberInfo but the data member metadata comes //; // from the Clang C++ compiler, not CINT. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.h:373,Integrability,interface,interface,373,"//////////////////////////////////////////////////////////////////////////; // //; // TClingDataMemberInfo //; // //; // Emulation of the CINT DataMemberInfo class. //; // //; // The CINT C++ interpreter provides an interface to metadata about //; // the data members of a class through the DataMemberInfo class. This //; // class provides the same functionality, using an interface as close //; // as possible to DataMemberInfo but the data member metadata comes //; // from the Clang C++ compiler, not CINT. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.h:23,Performance,cache,caches,23,"// Invalidate the name caches.",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMemberIter.h:25,Modifiability,variab,variable,25,"// TODO: add support for variable templates.",MatchSource.CODE_COMMENT,core/metacling/src/TClingMemberIter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMemberIter.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodArgInfo.cxx:529,Integrability,interface,interface,529,"// @(#)root/core/meta:$Id$; // Author: Paul Russo 30/07/2012; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClingMethodArgInfo; Emulation of the CINT MethodInfo class. The CINT C++ interpreter provides an interface to metadata about; the arguments to a function through the MethodArgInfo class. This; class provides the same functionality, using an interface as close; as possible to MethodArgInfo but the typedef metadata comes from; the Clang C++ compiler, not CINT.; */",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodArgInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodArgInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodArgInfo.cxx:673,Integrability,interface,interface,673,"// @(#)root/core/meta:$Id$; // Author: Paul Russo 30/07/2012; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClingMethodArgInfo; Emulation of the CINT MethodInfo class. The CINT C++ interpreter provides an interface to metadata about; the arguments to a function through the MethodArgInfo class. This; class provides the same functionality, using an interface as close; as possible to MethodArgInfo but the typedef metadata comes from; the Clang C++ compiler, not CINT.; */",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodArgInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodArgInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodArgInfo.cxx:128,Integrability,depend,depends,128,"// Calling the base class implementation is unsafe because we override the; // GetDecl which it forwads to. That implementation depends on fIdx which is; // used to determine validity.",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodArgInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodArgInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodArgInfo.cxx:44,Safety,unsafe,unsafe,44,"// Calling the base class implementation is unsafe because we override the; // GetDecl which it forwads to. That implementation depends on fIdx which is; // used to determine validity.",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodArgInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodArgInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodArgInfo.cxx:18,Performance,cache,cache,18,"// invalidate the cache.",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodArgInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodArgInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodArgInfo.h:211,Integrability,interface,interface,211,"//////////////////////////////////////////////////////////////////////////; // //; // TClingMethodArgInfo //; // //; // Emulation of the CINT MethodInfo class. //; // //; // The CINT C++ interpreter provides an interface to metadata about //; // the arguments to a function through the MethodArgInfo class. This //; // class provides the same functionality, using an interface as close //; // as possible to MethodArgInfo but the typedef metadata comes from //; // the Clang C++ compiler, not CINT. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodArgInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodArgInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodArgInfo.h:367,Integrability,interface,interface,367,"//////////////////////////////////////////////////////////////////////////; // //; // TClingMethodArgInfo //; // //; // Emulation of the CINT MethodInfo class. //; // //; // The CINT C++ interpreter provides an interface to metadata about //; // the arguments to a function through the MethodArgInfo class. This //; // class provides the same functionality, using an interface as close //; // as possible to MethodArgInfo but the typedef metadata comes from //; // the Clang C++ compiler, not CINT. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodArgInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodArgInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx:526,Integrability,interface,interface,526,"// @(#)root/core/meta:$Id$; // Author: Paul Russo 30/07/2012; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClingMethodInfo; Emulation of the CINT MethodInfo class. The CINT C++ interpreter provides an interface to metadata about; a function through the MethodInfo class. This class provides the; same functionality, using an interface as close as possible to; MethodInfo but the typedef metadata comes from the Clang C++; compiler, not CINT.; */",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx:650,Integrability,interface,interface,650,"// @(#)root/core/meta:$Id$; // Author: Paul Russo 30/07/2012; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClingMethodInfo; Emulation of the CINT MethodInfo class. The CINT C++ interpreter provides an interface to metadata about; a function through the MethodInfo class. This class provides the; same functionality, using an interface as close as possible to; MethodInfo but the typedef metadata comes from the Clang C++; compiler, not CINT.; */",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx:364,Security,expose,exposed,364,"// This is a special member pulled in through a using decl. Special; // members of derived classes cannot be replaced; ignore this using decl,; // and keep only the (still possibly compiler-generated) special member of the; // derived class.; // NOTE that e.g. `Klass(int = 0)` has SpecMemKind == clang::Sema::CXXDefaultConstructor,; // yet this signature must be exposed, so check the argument count.",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx:333,Integrability,depend,dependent,333,"// We have a function template; // template <class X = int, int i = 7> void func(int a0, X a1[i], X::type a2[i]); // which has defaults for all its template parameters `X` and `i`. To; // instantiate it we have to do a lookup, which in turn needs the function; // argument types, e.g. `int[12]`.; // If the function argument type is dependent (a1 and a2) we need to; // substitute the types first, using the template arguments derived from the; // template parameters' defaults.",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx:14,Integrability,inject,inject,14,"// This would inject an emprt parameter pack, which is a good default.; // But for cases where instantiation fails, this hits bug in unloading; // of the failed instantiation, causing a missing symbol in subsequent; // transactions where a Decl instantiated by the failed instatiation; // is not re-emitted. So for now just give up default-instantiating; // templates with parameter packs, even if this is simply a work-around.; //defaultTemplateArgs.emplace_back(ArrayRef<TemplateArgument>{}); // empty pack.",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx:14,Security,inject,inject,14,"// This would inject an emprt parameter pack, which is a good default.; // But for cases where instantiation fails, this hits bug in unloading; // of the failed instantiation, causing a missing symbol in subsequent; // transactions where a Decl instantiated by the failed instatiation; // is not re-emitted. So for now just give up default-instantiating; // templates with parameter packs, even if this is simply a work-around.; //defaultTemplateArgs.emplace_back(ArrayRef<TemplateArgument>{}); // empty pack.",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx:406,Usability,simpl,simply,406,"// This would inject an emprt parameter pack, which is a good default.; // But for cases where instantiation fails, this hits bug in unloading; // of the failed instantiation, causing a missing symbol in subsequent; // transactions where a Decl instantiated by the failed instatiation; // is not re-emitted. So for now just give up default-instantiating; // templates with parameter packs, even if this is simply a work-around.; //defaultTemplateArgs.emplace_back(ArrayRef<TemplateArgument>{}); // empty pack.",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx:22,Integrability,depend,dependent,22,"// Now substitute the dependent function parameter types given defaultTemplateArgs.",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx:52,Availability,error,errors,52,"// Provide an instantiation context that suppresses errors:; // DeducedTemplateArgumentSubstitution! (ROOT-8422)",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx:78,Integrability,depend,dependent,78,"// Collect the function arguments of the templated function, substituting; // dependent types as possible.",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx:27,Integrability,depend,dependent,27,"// If the function type is dependent, try to resolve it through the class's; // template arguments. If that fails, skip this function.",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx:99,Integrability,depend,dependent,99,"// Even after resolving the types through the surrounding template; // this argument type is still dependent: do not look it up.",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx:29,Integrability,interface,interface,29,"// Truncate cast to fit cint interface.",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx:29,Integrability,interface,interface,29,"// Truncate cast to fit cint interface.",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx:18,Performance,cache,cache,18,"// invalidate the cache.",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx:47,Security,access,access,47,"// NOTE: this uses `GetDecl()`, to capture the access of the UsingShadowDecl,; // which is defined in the derived class and might differ from the access of fd; // in the base class.",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx:146,Security,access,access,146,"// NOTE: this uses `GetDecl()`, to capture the access of the UsingShadowDecl,; // which is defined in the derived class and might differ from the access of fd; // in the base class.",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx:44,Modifiability,inherit,inheritance,44,"// Access of the ctor is access of the base inheritance, and; // cannot be overruled by the access of the using decl.",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx:3,Security,Access,Access,3,"// Access of the ctor is access of the base inheritance, and; // cannot be overruled by the access of the using decl.",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx:25,Security,access,access,25,"// Access of the ctor is access of the base inheritance, and; // cannot be overruled by the access of the using decl.",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx:92,Security,access,access,92,"// Access of the ctor is access of the base inheritance, and; // cannot be overruled by the access of the using decl.",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx:29,Performance,cache,cache,29,"//NOTE: We can't use it as a cache due to the ""thoughtful"" self iterator; //if (fTitle.size()); // return fTitle.c_str();; // Try to get the comment either from the annotation or the header file if present; // Iterate over the redeclarations, we can have multiple definitions in the; // redecl chain (came from merging of pcms).",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.h:208,Integrability,interface,interface,208,"//////////////////////////////////////////////////////////////////////////; // //; // TClingMethodInfo //; // //; // Emulation of the CINT MethodInfo class. //; // //; // The CINT C++ interpreter provides an interface to metadata about //; // a function through the MethodInfo class. This class provides the //; // same functionality, using an interface as close as possible to //; // MethodInfo but the typedef metadata comes from the Clang C++ //; // compiler, not CINT. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.h:344,Integrability,interface,interface,344,"//////////////////////////////////////////////////////////////////////////; // //; // TClingMethodInfo //; // //; // Emulation of the CINT MethodInfo class. //; // //; // The CINT C++ interpreter provides an interface to metadata about //; // a function through the MethodInfo class. This class provides the //; // same functionality, using an interface as close as possible to //; // MethodInfo but the typedef metadata comes from the Clang C++ //; // compiler, not CINT. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingRdictModuleFileExtension.h:37,Testability,test,testing,37,"/// A module file extension used for testing purposes.",MatchSource.CODE_COMMENT,core/metacling/src/TClingRdictModuleFileExtension.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingRdictModuleFileExtension.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.cxx:528,Integrability,interface,interface,528,"// @(#)root/core/meta:$Id$; // Author: Paul Russo 30/07/2012; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClingTypedefInfo; Emulation of the CINT TypedefInfo class. The CINT C++ interpreter provides an interface to metadata about; a typedef through the TypedefInfo class. This class provides the; same functionality, using an interface as close as possible to; TypedefInfo but the typedef metadata comes from the Clang C++; compiler, not CINT.; */",MatchSource.CODE_COMMENT,core/metacling/src/TClingTypedefInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.cxx:652,Integrability,interface,interface,652,"// @(#)root/core/meta:$Id$; // Author: Paul Russo 30/07/2012; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClingTypedefInfo; Emulation of the CINT TypedefInfo class. The CINT C++ interpreter provides an interface to metadata about; a typedef through the TypedefInfo class. This class provides the; same functionality, using an interface as close as possible to; TypedefInfo but the typedef metadata comes from the Clang C++; compiler, not CINT.; */",MatchSource.CODE_COMMENT,core/metacling/src/TClingTypedefInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.cxx:18,Performance,cache,cache,18,"// invalidate the cache.",MatchSource.CODE_COMMENT,core/metacling/src/TClingTypedefInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.cxx:19,Usability,usab,usable,19,"// Advance to next usable decl, or return if; // there is no next usable decl.",MatchSource.CODE_COMMENT,core/metacling/src/TClingTypedefInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.cxx:66,Usability,usab,usable,66,"// Advance to next usable decl, or return if; // there is no next usable decl.",MatchSource.CODE_COMMENT,core/metacling/src/TClingTypedefInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.cxx:99,Availability,mask,mask,99,"////////////////////////////////////////////////////////////////////////////////; /// Return a bit mask of metadata about the current typedef.",MatchSource.CODE_COMMENT,core/metacling/src/TClingTypedefInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.cxx:26,Integrability,depend,dependent,26,"// The underlying type is dependent on a template parameter,; // we have no idea what it is yet.",MatchSource.CODE_COMMENT,core/metacling/src/TClingTypedefInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.cxx:33,Integrability,interface,interface,33,"// Truncate cast to fit the CINT interface.",MatchSource.CODE_COMMENT,core/metacling/src/TClingTypedefInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.cxx:29,Performance,cache,cache,29,"//NOTE: We can't use it as a cache due to the ""thoughtful"" self iterator; //if (fTitle.size()); // return fTitle.c_str();; // Try to get the comment either from the annotation or the header file if present; // Iterate over the redeclarations, we can have multiple definitions in the; // redecl chain (came from merging of pcms).",MatchSource.CODE_COMMENT,core/metacling/src/TClingTypedefInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.h:210,Integrability,interface,interface,210,"//////////////////////////////////////////////////////////////////////////; // //; // TClingTypedefInfo //; // //; // Emulation of the CINT TypedefInfo class. //; // //; // The CINT C++ interpreter provides an interface to metadata about //; // a typedef through the TypedefInfo class. This class provides the //; // same functionality, using an interface as close as possible to //; // TypedefInfo but the typedef metadata comes from the Clang C++ //; // compiler, not CINT. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TClingTypedefInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.h:346,Integrability,interface,interface,346,"//////////////////////////////////////////////////////////////////////////; // //; // TClingTypedefInfo //; // //; // Emulation of the CINT TypedefInfo class. //; // //; // The CINT C++ interpreter provides an interface to metadata about //; // a typedef through the TypedefInfo class. This class provides the //; // same functionality, using an interface as close as possible to //; // TypedefInfo but the typedef metadata comes from the Clang C++ //; // compiler, not CINT. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TClingTypedefInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypeInfo.cxx:522,Integrability,interface,interface,522,"// @(#)root/core/meta:$Id$; // Author: Paul Russo 30/07/2012; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClingTypeInfo; Emulation of the CINT TypeInfo class. The CINT C++ interpreter provides an interface to metadata about; a type through the TypeInfo class. This class provides the same; functionality, using an interface as close as possible to TypeInfo; but the type metadata comes from the Clang C++ compiler, not CINT.; */",MatchSource.CODE_COMMENT,core/metacling/src/TClingTypeInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypeInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypeInfo.cxx:640,Integrability,interface,interface,640,"// @(#)root/core/meta:$Id$; // Author: Paul Russo 30/07/2012; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClingTypeInfo; Emulation of the CINT TypeInfo class. The CINT C++ interpreter provides an interface to metadata about; a type through the TypeInfo class. This class provides the same; functionality, using an interface as close as possible to TypeInfo; but the type metadata comes from the Clang C++ compiler, not CINT.; */",MatchSource.CODE_COMMENT,core/metacling/src/TClingTypeInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypeInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypeInfo.cxx:96,Integrability,depend,depend,96,"// TODO: This needs to be locked, but the lock cannot be placed in TClingUtils.cxx as it cannot depend from; // TInterpreter.h for the declaration of gInterpreterMutex. Or can it?",MatchSource.CODE_COMMENT,core/metacling/src/TClingTypeInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypeInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypeInfo.cxx:3,Integrability,Depend,Dependent,3,"// Dependent on a template parameter, we do not know what it is yet.",MatchSource.CODE_COMMENT,core/metacling/src/TClingTypeInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypeInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypeInfo.cxx:96,Integrability,depend,depend,96,"// TODO: This needs to be locked, but the lock cannot be placed in TClingUtils.cxx as it cannot depend from; // TInterpreter.h for the declaration of gInterpreterMutex. Or can it?",MatchSource.CODE_COMMENT,core/metacling/src/TClingTypeInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypeInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypeInfo.cxx:96,Integrability,depend,depend,96,"// TODO: This needs to be locked, but the lock cannot be placed in TClingUtils.cxx as it cannot depend from; // TInterpreter.h for the declaration of gInterpreterMutex. Or can it?",MatchSource.CODE_COMMENT,core/metacling/src/TClingTypeInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypeInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypeInfo.cxx:25,Energy Efficiency,efficient,efficient,25,"// in C++11 this will be efficient thanks to the move constructor.",MatchSource.CODE_COMMENT,core/metacling/src/TClingTypeInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypeInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypeInfo.h:204,Integrability,interface,interface,204,"//////////////////////////////////////////////////////////////////////////; // //; // TClingTypeInfo //; // //; // Emulation of the CINT TypeInfo class. //; // //; // The CINT C++ interpreter provides an interface to metadata about //; // a type through the TypeInfo class. This class provides the same //; // functionality, using an interface as close as possible to TypeInfo //; // but the type metadata comes from the Clang C++ compiler, not CINT. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TClingTypeInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypeInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypeInfo.h:334,Integrability,interface,interface,334,"//////////////////////////////////////////////////////////////////////////; // //; // TClingTypeInfo //; // //; // Emulation of the CINT TypeInfo class. //; // //; // The CINT C++ interpreter provides an interface to metadata about //; // a type through the TypeInfo class. This class provides the same //; // functionality, using an interface as close as possible to TypeInfo //; // but the type metadata comes from the Clang C++ compiler, not CINT. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TClingTypeInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypeInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingValue.cxx:460,Integrability,Bridg,Bridge,460,"// @(#)root/core/meta:$Id$; // Author: Vassil Vassilev 14/03/2013; /*******************************************************************************; * Copyright (C) 1995-2013, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; ******************************************************************************/; /** \class TClingValue; Bridge between cling::Value and ROOT.; */",MatchSource.CODE_COMMENT,core/metacling/src/TClingValue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingValue.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingValue.h:674,Modifiability,variab,variable,674,"// @(#)root/core/meta:$Id$e; // Author: Vassil Vassilev 13/03/2013; /*******************************************************************************; * Copyright (C) 1995-2013, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; ******************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; // //; // Class representing a value coming from cling. Its main use case //; // is to TCallFunc. When TCallFunc returns by-value, i.e. a temporary //; // variable, its lifetime has to be extended. TClingValue provides a //; // way to extend the temporaries lifetime and gives the user to control it. //; // //; // The class is used to hide the implementation details of //; // cling::Value. //; // //; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TClingValue.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingValue.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingValue.h:707,Modifiability,extend,extended,707,"// @(#)root/core/meta:$Id$e; // Author: Vassil Vassilev 13/03/2013; /*******************************************************************************; * Copyright (C) 1995-2013, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; ******************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; // //; // Class representing a value coming from cling. Its main use case //; // is to TCallFunc. When TCallFunc returns by-value, i.e. a temporary //; // variable, its lifetime has to be extended. TClingValue provides a //; // way to extend the temporaries lifetime and gives the user to control it. //; // //; // The class is used to hide the implementation details of //; // cling::Value. //; // //; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TClingValue.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingValue.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingValue.h:754,Modifiability,extend,extend,754,"// @(#)root/core/meta:$Id$e; // Author: Vassil Vassilev 13/03/2013; /*******************************************************************************; * Copyright (C) 1995-2013, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; ******************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; // //; // Class representing a value coming from cling. Its main use case //; // is to TCallFunc. When TCallFunc returns by-value, i.e. a temporary //; // variable, its lifetime has to be extended. TClingValue provides a //; // way to extend the temporaries lifetime and gives the user to control it. //; // //; // The class is used to hide the implementation details of //; // cling::Value. //; // //; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TClingValue.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingValue.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:35,Integrability,wrap,wrapper,35,"// These tests check the generated wrapper functions that allow calling C++ functions.; // via C interface.; // Usually we only test that a wrapper function compiles correctly, but sometimes; // we also do some further checks on the wrapper here. See the specific assertions for more; // explanation on this.; // NOTE: This wrapper interface should be replaced in the future with a proper; // way of calling these functions that doesn't require parsing generated strings; // of C++ code, so if these tests fail because this interface was replaced by another; // system, feel free to delete them as these tests here don't represent things the user; // should do in his code.; // A class that creates a CallFunc and deletes it at the end of its scope.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:97,Integrability,interface,interface,97,"// These tests check the generated wrapper functions that allow calling C++ functions.; // via C interface.; // Usually we only test that a wrapper function compiles correctly, but sometimes; // we also do some further checks on the wrapper here. See the specific assertions for more; // explanation on this.; // NOTE: This wrapper interface should be replaced in the future with a proper; // way of calling these functions that doesn't require parsing generated strings; // of C++ code, so if these tests fail because this interface was replaced by another; // system, feel free to delete them as these tests here don't represent things the user; // should do in his code.; // A class that creates a CallFunc and deletes it at the end of its scope.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:140,Integrability,wrap,wrapper,140,"// These tests check the generated wrapper functions that allow calling C++ functions.; // via C interface.; // Usually we only test that a wrapper function compiles correctly, but sometimes; // we also do some further checks on the wrapper here. See the specific assertions for more; // explanation on this.; // NOTE: This wrapper interface should be replaced in the future with a proper; // way of calling these functions that doesn't require parsing generated strings; // of C++ code, so if these tests fail because this interface was replaced by another; // system, feel free to delete them as these tests here don't represent things the user; // should do in his code.; // A class that creates a CallFunc and deletes it at the end of its scope.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:233,Integrability,wrap,wrapper,233,"// These tests check the generated wrapper functions that allow calling C++ functions.; // via C interface.; // Usually we only test that a wrapper function compiles correctly, but sometimes; // we also do some further checks on the wrapper here. See the specific assertions for more; // explanation on this.; // NOTE: This wrapper interface should be replaced in the future with a proper; // way of calling these functions that doesn't require parsing generated strings; // of C++ code, so if these tests fail because this interface was replaced by another; // system, feel free to delete them as these tests here don't represent things the user; // should do in his code.; // A class that creates a CallFunc and deletes it at the end of its scope.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:324,Integrability,wrap,wrapper,324,"// These tests check the generated wrapper functions that allow calling C++ functions.; // via C interface.; // Usually we only test that a wrapper function compiles correctly, but sometimes; // we also do some further checks on the wrapper here. See the specific assertions for more; // explanation on this.; // NOTE: This wrapper interface should be replaced in the future with a proper; // way of calling these functions that doesn't require parsing generated strings; // of C++ code, so if these tests fail because this interface was replaced by another; // system, feel free to delete them as these tests here don't represent things the user; // should do in his code.; // A class that creates a CallFunc and deletes it at the end of its scope.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:332,Integrability,interface,interface,332,"// These tests check the generated wrapper functions that allow calling C++ functions.; // via C interface.; // Usually we only test that a wrapper function compiles correctly, but sometimes; // we also do some further checks on the wrapper here. See the specific assertions for more; // explanation on this.; // NOTE: This wrapper interface should be replaced in the future with a proper; // way of calling these functions that doesn't require parsing generated strings; // of C++ code, so if these tests fail because this interface was replaced by another; // system, feel free to delete them as these tests here don't represent things the user; // should do in his code.; // A class that creates a CallFunc and deletes it at the end of its scope.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:524,Integrability,interface,interface,524,"// These tests check the generated wrapper functions that allow calling C++ functions.; // via C interface.; // Usually we only test that a wrapper function compiles correctly, but sometimes; // we also do some further checks on the wrapper here. See the specific assertions for more; // explanation on this.; // NOTE: This wrapper interface should be replaced in the future with a proper; // way of calling these functions that doesn't require parsing generated strings; // of C++ code, so if these tests fail because this interface was replaced by another; // system, feel free to delete them as these tests here don't represent things the user; // should do in his code.; // A class that creates a CallFunc and deletes it at the end of its scope.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:9,Testability,test,tests,9,"// These tests check the generated wrapper functions that allow calling C++ functions.; // via C interface.; // Usually we only test that a wrapper function compiles correctly, but sometimes; // we also do some further checks on the wrapper here. See the specific assertions for more; // explanation on this.; // NOTE: This wrapper interface should be replaced in the future with a proper; // way of calling these functions that doesn't require parsing generated strings; // of C++ code, so if these tests fail because this interface was replaced by another; // system, feel free to delete them as these tests here don't represent things the user; // should do in his code.; // A class that creates a CallFunc and deletes it at the end of its scope.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:128,Testability,test,test,128,"// These tests check the generated wrapper functions that allow calling C++ functions.; // via C interface.; // Usually we only test that a wrapper function compiles correctly, but sometimes; // we also do some further checks on the wrapper here. See the specific assertions for more; // explanation on this.; // NOTE: This wrapper interface should be replaced in the future with a proper; // way of calling these functions that doesn't require parsing generated strings; // of C++ code, so if these tests fail because this interface was replaced by another; // system, feel free to delete them as these tests here don't represent things the user; // should do in his code.; // A class that creates a CallFunc and deletes it at the end of its scope.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:264,Testability,assert,assertions,264,"// These tests check the generated wrapper functions that allow calling C++ functions.; // via C interface.; // Usually we only test that a wrapper function compiles correctly, but sometimes; // we also do some further checks on the wrapper here. See the specific assertions for more; // explanation on this.; // NOTE: This wrapper interface should be replaced in the future with a proper; // way of calling these functions that doesn't require parsing generated strings; // of C++ code, so if these tests fail because this interface was replaced by another; // system, feel free to delete them as these tests here don't represent things the user; // should do in his code.; // A class that creates a CallFunc and deletes it at the end of its scope.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:500,Testability,test,tests,500,"// These tests check the generated wrapper functions that allow calling C++ functions.; // via C interface.; // Usually we only test that a wrapper function compiles correctly, but sometimes; // we also do some further checks on the wrapper here. See the specific assertions for more; // explanation on this.; // NOTE: This wrapper interface should be replaced in the future with a proper; // way of calling these functions that doesn't require parsing generated strings; // of C++ code, so if these tests fail because this interface was replaced by another; // system, feel free to delete them as these tests here don't represent things the user; // should do in his code.; // A class that creates a CallFunc and deletes it at the end of its scope.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:604,Testability,test,tests,604,"// These tests check the generated wrapper functions that allow calling C++ functions.; // via C interface.; // Usually we only test that a wrapper function compiles correctly, but sometimes; // we also do some further checks on the wrapper here. See the specific assertions for more; // explanation on this.; // NOTE: This wrapper interface should be replaced in the future with a proper; // way of calling these functions that doesn't require parsing generated strings; // of C++ code, so if these tests fail because this interface was replaced by another; // system, feel free to delete them as these tests here don't represent things the user; // should do in his code.; // A class that creates a CallFunc and deletes it at the end of its scope.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:3,Testability,Test,Test,3,"// Test that we cast this function to the right function type.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:3,Testability,Test,Test,3,"// Test that we cast this function to the right function type.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:3,Testability,Test,Test,3,"// Test that we cast this function to the right function type.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:3,Testability,Test,Test,3,"// Test that we don't cast the function because otherwise we lose the information; // about the default call.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:3,Testability,Test,Test,3,"// Test that we cast this template function to the right function type.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:25,Integrability,wrap,wrapper,25,"// We just test that the wrapper compiles. This is a regression test to make sure; // we never try to cast a member function as we do above.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:11,Testability,test,test,11,"// We just test that the wrapper compiles. This is a regression test to make sure; // we never try to cast a member function as we do above.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:64,Testability,test,test,64,"// We just test that the wrapper compiles. This is a regression test to make sure; // we never try to cast a member function as we do above.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:53,Integrability,wrap,wrapper,53,"// FIXME: It's currently possible that we generate a wrapper that is similar to the; // call we use to initialize k2. In this case we generate a wrapper that doesn't; // compile and we crash. As it seems to be impossible/difficult to call template; // operators through the interface we use in the other tests, we just demonstrate; // the failing declaration of the wrapper here.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:145,Integrability,wrap,wrapper,145,"// FIXME: It's currently possible that we generate a wrapper that is similar to the; // call we use to initialize k2. In this case we generate a wrapper that doesn't; // compile and we crash. As it seems to be impossible/difficult to call template; // operators through the interface we use in the other tests, we just demonstrate; // the failing declaration of the wrapper here.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:274,Integrability,interface,interface,274,"// FIXME: It's currently possible that we generate a wrapper that is similar to the; // call we use to initialize k2. In this case we generate a wrapper that doesn't; // compile and we crash. As it seems to be impossible/difficult to call template; // operators through the interface we use in the other tests, we just demonstrate; // the failing declaration of the wrapper here.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:366,Integrability,wrap,wrapper,366,"// FIXME: It's currently possible that we generate a wrapper that is similar to the; // call we use to initialize k2. In this case we generate a wrapper that doesn't; // compile and we crash. As it seems to be impossible/difficult to call template; // operators through the interface we use in the other tests, we just demonstrate; // the failing declaration of the wrapper here.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:304,Testability,test,tests,304,"// FIXME: It's currently possible that we generate a wrapper that is similar to the; // call we use to initialize k2. In this case we generate a wrapper that doesn't; // compile and we crash. As it seems to be impossible/difficult to call template; // operators through the interface we use in the other tests, we just demonstrate; // the failing declaration of the wrapper here.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:2,Safety,abort,abort,2,/*abort*/,MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:14,Testability,test,testfunc,14,"R""cpp(; float testfunc(int a, int b, float c) {; return a + b * c;; }; )cpp""",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingDataMemberInfoTests.cxx:284,Availability,redundant,redundant,284,"// gGeoManager is defined in the Geom libraries and we want to make sure we; // do not load it when autoloading is off. We can only test this in modules; // mode because gGeoManager is not part of the PCH and non-modular ROOT has; // header parsing and autoloading coupled leading to redundant load of; // libGeom at gROOT->GetGlobal time.",MatchSource.CODE_COMMENT,core/metacling/test/TClingDataMemberInfoTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingDataMemberInfoTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingDataMemberInfoTests.cxx:87,Performance,load,load,87,"// gGeoManager is defined in the Geom libraries and we want to make sure we; // do not load it when autoloading is off. We can only test this in modules; // mode because gGeoManager is not part of the PCH and non-modular ROOT has; // header parsing and autoloading coupled leading to redundant load of; // libGeom at gROOT->GetGlobal time.",MatchSource.CODE_COMMENT,core/metacling/test/TClingDataMemberInfoTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingDataMemberInfoTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingDataMemberInfoTests.cxx:294,Performance,load,load,294,"// gGeoManager is defined in the Geom libraries and we want to make sure we; // do not load it when autoloading is off. We can only test this in modules; // mode because gGeoManager is not part of the PCH and non-modular ROOT has; // header parsing and autoloading coupled leading to redundant load of; // libGeom at gROOT->GetGlobal time.",MatchSource.CODE_COMMENT,core/metacling/test/TClingDataMemberInfoTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingDataMemberInfoTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingDataMemberInfoTests.cxx:284,Safety,redund,redundant,284,"// gGeoManager is defined in the Geom libraries and we want to make sure we; // do not load it when autoloading is off. We can only test this in modules; // mode because gGeoManager is not part of the PCH and non-modular ROOT has; // header parsing and autoloading coupled leading to redundant load of; // libGeom at gROOT->GetGlobal time.",MatchSource.CODE_COMMENT,core/metacling/test/TClingDataMemberInfoTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingDataMemberInfoTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingDataMemberInfoTests.cxx:132,Testability,test,test,132,"// gGeoManager is defined in the Geom libraries and we want to make sure we; // do not load it when autoloading is off. We can only test this in modules; // mode because gGeoManager is not part of the PCH and non-modular ROOT has; // header parsing and autoloading coupled leading to redundant load of; // libGeom at gROOT->GetGlobal time.",MatchSource.CODE_COMMENT,core/metacling/test/TClingDataMemberInfoTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingDataMemberInfoTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingLoadUnloadFileTests.cxx:20,Performance,load,load,20,"// All threads will load/unload the same library",MatchSource.CODE_COMMENT,core/metacling/test/TClingLoadUnloadFileTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingLoadUnloadFileTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingLoadUnloadFileTests.cxx:16,Performance,load,loads,16,"// Every thread loads/unloads a different library",MatchSource.CODE_COMMENT,core/metacling/test/TClingLoadUnloadFileTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingLoadUnloadFileTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingMethodInfoTests.cxx:24,Testability,assert,assert,24,"// On Windows we get an assert, CodeGen-ing the callfunc for the construction:; // CGClass.cpp:488's CallBaseDtor::Emit fails to cast CFG.CurCodeDecl (the callfunc; // __cf2 function) into the expected destructor (i.e. CXXMethodDecl). I.e. something; // is wrong in the exception emission stack.",MatchSource.CODE_COMMENT,core/metacling/test/TClingMethodInfoTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingMethodInfoTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingMethodInfoTests.cxx:255,Testability,test,test,255,"// PyROOT needs to know whether a ctor is a template, see clingwrapper.cxx:; // > // don't give in just yet, but rather get the full name through the symbol name,; // > // as eg. constructors do not receive their proper/full name from GetName().; // Also test ""can we instantiate this function without extra type info""; // (see `Templates::MyMethods`).",MatchSource.CODE_COMMENT,core/metacling/test/TClingMethodInfoTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingMethodInfoTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingMethodInfoTests.cxx:127,Modifiability,Inherit,InheritTemplateFun,127,"R""CODE(; struct TemplateFun {; template <class T>; TemplateFun(int, T);. template <class T>; int NonCtor(float, T);; };; class InheritTemplateFun: TemplateFun {; public:; using TemplateFun::TemplateFun;; };. namespace Templates {; class TypeArg;; template <class T> class TemplateArg;; template <class OUTER>; struct MyMethods {; template <class X> int Na();; template <class X> int Nb(X); // can be deduced but not enough for MethodInfo.; template <class A, class B = int> int Nc();; template <class X = OUTER, class... ARGS, class Y> int Nd();. template <class X = int> int Ya();; template <class...> int Yb();; template <int X = 12> int Yc();; template <typename X = TypeArg> int Yd1();; template <template <class T> class X = TemplateArg> int Yd2();; template <class X = OUTER> int Ye();; template <class X = OUTER> int Yf();; template <class X = OUTER, class... ARGS> int Yg();; template <class X = OUTER, class... ARGS, class Y = int> int Yh();; };; }. )CODE""",MatchSource.CODE_COMMENT,core/metacling/test/TClingMethodInfoTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingMethodInfoTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingMethodInfoTests.cxx:137,Availability,avail,available,137,"// Fails because LookupHelper doesn't know how to instantiate function templates,; // even though at least the function template is made available to the derived; // class as per using decl. This is issue #6481.; //TFunction *funInhCtor = clInhTemplateFun->GetMethodWithPrototype(""InheritTemplateFun"", ""int, int"");; //ASSERT_NE(funInhCtor, nullptr);; //EXPECT_EQ(funInhCtor->ExtraProperty() & kIsTemplateSpec, kIsTemplateSpec);; //EXPECT_EQ(funInhCtor->Property() & kIsPrivate, kIsPrivate);; // Doesn't work either, as GetListOfFunctionTemplates() ignores using decls.; // Issue #6482; // clInhTemplateFun->GetListOfFunctionTemplates(true)->ls(); // FindObject(""InheritTemplateFun"")-",MatchSource.CODE_COMMENT,core/metacling/test/TClingMethodInfoTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingMethodInfoTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingMethodInfoTests.cxx:281,Modifiability,Inherit,InheritTemplateFun,281,"// Fails because LookupHelper doesn't know how to instantiate function templates,; // even though at least the function template is made available to the derived; // class as per using decl. This is issue #6481.; //TFunction *funInhCtor = clInhTemplateFun->GetMethodWithPrototype(""InheritTemplateFun"", ""int, int"");; //ASSERT_NE(funInhCtor, nullptr);; //EXPECT_EQ(funInhCtor->ExtraProperty() & kIsTemplateSpec, kIsTemplateSpec);; //EXPECT_EQ(funInhCtor->Property() & kIsPrivate, kIsPrivate);; // Doesn't work either, as GetListOfFunctionTemplates() ignores using decls.; // Issue #6482; // clInhTemplateFun->GetListOfFunctionTemplates(true)->ls(); // FindObject(""InheritTemplateFun"")-",MatchSource.CODE_COMMENT,core/metacling/test/TClingMethodInfoTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingMethodInfoTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingMethodInfoTests.cxx:662,Modifiability,Inherit,InheritTemplateFun,662,"// Fails because LookupHelper doesn't know how to instantiate function templates,; // even though at least the function template is made available to the derived; // class as per using decl. This is issue #6481.; //TFunction *funInhCtor = clInhTemplateFun->GetMethodWithPrototype(""InheritTemplateFun"", ""int, int"");; //ASSERT_NE(funInhCtor, nullptr);; //EXPECT_EQ(funInhCtor->ExtraProperty() & kIsTemplateSpec, kIsTemplateSpec);; //EXPECT_EQ(funInhCtor->Property() & kIsPrivate, kIsPrivate);; // Doesn't work either, as GetListOfFunctionTemplates() ignores using decls.; // Issue #6482; // clInhTemplateFun->GetListOfFunctionTemplates(true)->ls(); // FindObject(""InheritTemplateFun"")-",MatchSource.CODE_COMMENT,core/metacling/test/TClingMethodInfoTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingMethodInfoTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingMethodInfoTests.cxx:284,Security,access,access,284,"R""CODE(; namespace BUG6578 {; struct Base1 {; Base1(int = 42) {}; protected:; Base1(const Base1&, std::string = ""abc"") {}; };. struct Base2 {; Base2() {}; Base2(const Base2&) {}; Base2(int, int) {}; };. class Derived: public Base1, protected Base2 {; private: // This is irrelevant - access of used ctors is defined by access of base class!; using Base1::Base1; // Base1(int), Base1(Base1&, string); public: // This is irrelevant - access of used ctors is defined by access of base class!; using Base2::Base2; // Base2(int, int); Derived() = delete;; Derived(const Derived&) = delete;; };; }; )CODE""",MatchSource.CODE_COMMENT,core/metacling/test/TClingMethodInfoTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingMethodInfoTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingMethodInfoTests.cxx:319,Security,access,access,319,"R""CODE(; namespace BUG6578 {; struct Base1 {; Base1(int = 42) {}; protected:; Base1(const Base1&, std::string = ""abc"") {}; };. struct Base2 {; Base2() {}; Base2(const Base2&) {}; Base2(int, int) {}; };. class Derived: public Base1, protected Base2 {; private: // This is irrelevant - access of used ctors is defined by access of base class!; using Base1::Base1; // Base1(int), Base1(Base1&, string); public: // This is irrelevant - access of used ctors is defined by access of base class!; using Base2::Base2; // Base2(int, int); Derived() = delete;; Derived(const Derived&) = delete;; };; }; )CODE""",MatchSource.CODE_COMMENT,core/metacling/test/TClingMethodInfoTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingMethodInfoTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingMethodInfoTests.cxx:432,Security,access,access,432,"R""CODE(; namespace BUG6578 {; struct Base1 {; Base1(int = 42) {}; protected:; Base1(const Base1&, std::string = ""abc"") {}; };. struct Base2 {; Base2() {}; Base2(const Base2&) {}; Base2(int, int) {}; };. class Derived: public Base1, protected Base2 {; private: // This is irrelevant - access of used ctors is defined by access of base class!; using Base1::Base1; // Base1(int), Base1(Base1&, string); public: // This is irrelevant - access of used ctors is defined by access of base class!; using Base2::Base2; // Base2(int, int); Derived() = delete;; Derived(const Derived&) = delete;; };; }; )CODE""",MatchSource.CODE_COMMENT,core/metacling/test/TClingMethodInfoTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingMethodInfoTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingMethodInfoTests.cxx:467,Security,access,access,467,"R""CODE(; namespace BUG6578 {; struct Base1 {; Base1(int = 42) {}; protected:; Base1(const Base1&, std::string = ""abc"") {}; };. struct Base2 {; Base2() {}; Base2(const Base2&) {}; Base2(int, int) {}; };. class Derived: public Base1, protected Base2 {; private: // This is irrelevant - access of used ctors is defined by access of base class!; using Base1::Base1; // Base1(int), Base1(Base1&, string); public: // This is irrelevant - access of used ctors is defined by access of base class!; using Base2::Base2; // Base2(int, int); Derived() = delete;; Derived(const Derived&) = delete;; };; }; )CODE""",MatchSource.CODE_COMMENT,core/metacling/test/TClingMethodInfoTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingMethodInfoTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx:282,Availability,failure,failures,282,"// virtual void SetUp() { }; // FIXME: We cannot rely on TearDown because it is executed at the end of; // every test. This triggers another bug in the dictionary generation phase,; // possibly due to concurrent file system operations.; //virtual void TearDown() {; // If there are failures we want to keep the created files.; //if (!::testing::Test::HasFatalFailure()); // cleanup();; //}",MatchSource.CODE_COMMENT,core/metacling/test/TClingTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx:201,Performance,concurren,concurrent,201,"// virtual void SetUp() { }; // FIXME: We cannot rely on TearDown because it is executed at the end of; // every test. This triggers another bug in the dictionary generation phase,; // possibly due to concurrent file system operations.; //virtual void TearDown() {; // If there are failures we want to keep the created files.; //if (!::testing::Test::HasFatalFailure()); // cleanup();; //}",MatchSource.CODE_COMMENT,core/metacling/test/TClingTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx:113,Testability,test,test,113,"// virtual void SetUp() { }; // FIXME: We cannot rely on TearDown because it is executed at the end of; // every test. This triggers another bug in the dictionary generation phase,; // possibly due to concurrent file system operations.; //virtual void TearDown() {; // If there are failures we want to keep the created files.; //if (!::testing::Test::HasFatalFailure()); // cleanup();; //}",MatchSource.CODE_COMMENT,core/metacling/test/TClingTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx:336,Testability,test,testing,336,"// virtual void SetUp() { }; // FIXME: We cannot rely on TearDown because it is executed at the end of; // every test. This triggers another bug in the dictionary generation phase,; // possibly due to concurrent file system operations.; //virtual void TearDown() {; // If there are failures we want to keep the created files.; //if (!::testing::Test::HasFatalFailure()); // cleanup();; //}",MatchSource.CODE_COMMENT,core/metacling/test/TClingTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx:345,Testability,Test,Test,345,"// virtual void SetUp() { }; // FIXME: We cannot rely on TearDown because it is executed at the end of; // every test. This triggers another bug in the dictionary generation phase,; // possibly due to concurrent file system operations.; //virtual void TearDown() {; // If there are failures we want to keep the created files.; //if (!::testing::Test::HasFatalFailure()); // cleanup();; //}",MatchSource.CODE_COMMENT,core/metacling/test/TClingTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx:9,Availability,error,error,9,"// Check error reporting and handling.",MatchSource.CODE_COMMENT,core/metacling/test/TClingTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx:3,Testability,Test,Test,3,"// Test ROOT-6967",MatchSource.CODE_COMMENT,core/metacling/test/TClingTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx:131,Testability,test,test,131,"// Return an empty string if input is not a library name.; // Sometimes, libName can be the binary name (i.e. TClingTest, for this test)",MatchSource.CODE_COMMENT,core/metacling/test/TClingTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx:29,Integrability,interface,interface,29,"// Check if the heavily used interface in TCling::AutoLoad returns consistent; // results.",MatchSource.CODE_COMMENT,core/metacling/test/TClingTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx:13,Integrability,interface,interface,13,"// Check the interface computing the dependencies of a given library.",MatchSource.CODE_COMMENT,core/metacling/test/TClingTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx:37,Integrability,depend,dependencies,37,"// Check the interface computing the dependencies of a given library.",MatchSource.CODE_COMMENT,core/metacling/test/TClingTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx:10,Integrability,depend,depend,10,"// It may depend on tbb",MatchSource.CODE_COMMENT,core/metacling/test/TClingTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx:3,Integrability,Depend,Depends,3,"// Depends only on libCore.so but libCore.so is loaded and thus missing.",MatchSource.CODE_COMMENT,core/metacling/test/TClingTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx:48,Performance,load,loaded,48,"// Depends only on libCore.so but libCore.so is loaded and thus missing.",MatchSource.CODE_COMMENT,core/metacling/test/TClingTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx:20,Deployability,configurat,configuration,20,"// Depending on the configuration we expect:; // TreePlayer Gpad Graf Graf3d Hist [Imt] [MathCore] MultiProc Net Tree [tbb]..; // FIXME: We should add a generic gtest regex matcher and use a regex here.",MatchSource.CODE_COMMENT,core/metacling/test/TClingTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx:3,Integrability,Depend,Depending,3,"// Depending on the configuration we expect:; // TreePlayer Gpad Graf Graf3d Hist [Imt] [MathCore] MultiProc Net Tree [tbb]..; // FIXME: We should add a generic gtest regex matcher and use a regex here.",MatchSource.CODE_COMMENT,core/metacling/test/TClingTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx:20,Modifiability,config,configuration,20,"// Depending on the configuration we expect:; // TreePlayer Gpad Graf Graf3d Hist [Imt] [MathCore] MultiProc Net Tree [tbb]..; // FIXME: We should add a generic gtest regex matcher and use a regex here.",MatchSource.CODE_COMMENT,core/metacling/test/TClingTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx:24,Integrability,message,message,24,"// Check that a warning message is generated when using auto-injection.",MatchSource.CODE_COMMENT,core/metacling/test/TClingTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx:61,Integrability,inject,injection,61,"// Check that a warning message is generated when using auto-injection.",MatchSource.CODE_COMMENT,core/metacling/test/TClingTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx:61,Security,inject,injection,61,"// Check that a warning message is generated when using auto-injection.",MatchSource.CODE_COMMENT,core/metacling/test/TClingTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx:13,Integrability,interface,interface,13,"// Check the interface which interacts with the cling::LookupHelper.",MatchSource.CODE_COMMENT,core/metacling/test/TClingTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx:71,Testability,test,test,71,"// strangely enough, this works on the command prompt, but not in this test...",MatchSource.CODE_COMMENT,core/metacling/test/TClingTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx:87,Availability,failure,failure,87,"// These two lines would make the test fail because of two reasons:; // - An assertion failure ""Assertion failed: (detail::isPresent(Val) && ""dyn_cast on a non-existent value""), function dyn_cast, file Casting.h, line 662.""; // - An error ""Error in <TInterpreter::RefreshClassInfo>: Should not need to update the classInfo a non type decl: Detail""; // This is why there is no check performed.",MatchSource.CODE_COMMENT,core/metacling/test/TClingTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx:233,Availability,error,error,233,"// These two lines would make the test fail because of two reasons:; // - An assertion failure ""Assertion failed: (detail::isPresent(Val) && ""dyn_cast on a non-existent value""), function dyn_cast, file Casting.h, line 662.""; // - An error ""Error in <TInterpreter::RefreshClassInfo>: Should not need to update the classInfo a non type decl: Detail""; // This is why there is no check performed.",MatchSource.CODE_COMMENT,core/metacling/test/TClingTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx:240,Availability,Error,Error,240,"// These two lines would make the test fail because of two reasons:; // - An assertion failure ""Assertion failed: (detail::isPresent(Val) && ""dyn_cast on a non-existent value""), function dyn_cast, file Casting.h, line 662.""; // - An error ""Error in <TInterpreter::RefreshClassInfo>: Should not need to update the classInfo a non type decl: Detail""; // This is why there is no check performed.",MatchSource.CODE_COMMENT,core/metacling/test/TClingTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx:302,Deployability,update,update,302,"// These two lines would make the test fail because of two reasons:; // - An assertion failure ""Assertion failed: (detail::isPresent(Val) && ""dyn_cast on a non-existent value""), function dyn_cast, file Casting.h, line 662.""; // - An error ""Error in <TInterpreter::RefreshClassInfo>: Should not need to update the classInfo a non type decl: Detail""; // This is why there is no check performed.",MatchSource.CODE_COMMENT,core/metacling/test/TClingTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx:382,Performance,perform,performed,382,"// These two lines would make the test fail because of two reasons:; // - An assertion failure ""Assertion failed: (detail::isPresent(Val) && ""dyn_cast on a non-existent value""), function dyn_cast, file Casting.h, line 662.""; // - An error ""Error in <TInterpreter::RefreshClassInfo>: Should not need to update the classInfo a non type decl: Detail""; // This is why there is no check performed.",MatchSource.CODE_COMMENT,core/metacling/test/TClingTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx:34,Testability,test,test,34,"// These two lines would make the test fail because of two reasons:; // - An assertion failure ""Assertion failed: (detail::isPresent(Val) && ""dyn_cast on a non-existent value""), function dyn_cast, file Casting.h, line 662.""; // - An error ""Error in <TInterpreter::RefreshClassInfo>: Should not need to update the classInfo a non type decl: Detail""; // This is why there is no check performed.",MatchSource.CODE_COMMENT,core/metacling/test/TClingTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx:77,Testability,assert,assertion,77,"// These two lines would make the test fail because of two reasons:; // - An assertion failure ""Assertion failed: (detail::isPresent(Val) && ""dyn_cast on a non-existent value""), function dyn_cast, file Casting.h, line 662.""; // - An error ""Error in <TInterpreter::RefreshClassInfo>: Should not need to update the classInfo a non type decl: Detail""; // This is why there is no check performed.",MatchSource.CODE_COMMENT,core/metacling/test/TClingTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx:96,Testability,Assert,Assertion,96,"// These two lines would make the test fail because of two reasons:; // - An assertion failure ""Assertion failed: (detail::isPresent(Val) && ""dyn_cast on a non-existent value""), function dyn_cast, file Casting.h, line 662.""; // - An error ""Error in <TInterpreter::RefreshClassInfo>: Should not need to update the classInfo a non type decl: Detail""; // This is why there is no check performed.",MatchSource.CODE_COMMENT,core/metacling/test/TClingTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx:3,Availability,error,error,3,"R""(error: use of undeclared identifier 'i'; for(i=0; i < 0;); // the second usage of `i` was enough to get a segfault; ^; )""",MatchSource.CODE_COMMENT,core/metacling/test/TClingTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h:107,Integrability,message,message,107,"//////////////////////////////////////////////////////////////////////////; ///; /// An enumeration of the message codes handled by TProcessExecutor,; /// TTreeProcessorMP, TMPWorker, TMPWorkerTree and by the low level; /// classes TMPClient and TMPWorker.; ///; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/multiproc/inc/MPCode.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h:57,Integrability,message,message,57,"///< Execute function with the argument contained in the message",MatchSource.CODE_COMMENT,core/multiproc/inc/MPCode.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h:9,Integrability,message,message,9,///< The message contains the result of a function execution; /* TProcessExecutor::MapReduce */,MatchSource.CODE_COMMENT,core/multiproc/inc/MPCode.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h:9,Integrability,message,message,9,"///< The message contains the result of the processing of a TTree",MatchSource.CODE_COMMENT,core/multiproc/inc/MPCode.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h:34,Availability,error,error,34,"///< Tell the client there was an error while processing; /* Generic messages, including errors */",MatchSource.CODE_COMMENT,core/multiproc/inc/MPCode.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h:89,Availability,error,errors,89,"///< Tell the client there was an error while processing; /* Generic messages, including errors */",MatchSource.CODE_COMMENT,core/multiproc/inc/MPCode.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h:69,Integrability,message,messages,69,"///< Tell the client there was an error while processing; /* Generic messages, including errors */",MatchSource.CODE_COMMENT,core/multiproc/inc/MPCode.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h:13,Integrability,message,message,13,"///< Generic message",MatchSource.CODE_COMMENT,core/multiproc/inc/MPCode.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h:5,Availability,Error,Error,5,"///< Error message",MatchSource.CODE_COMMENT,core/multiproc/inc/MPCode.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h:11,Integrability,message,message,11,"///< Error message",MatchSource.CODE_COMMENT,core/multiproc/inc/MPCode.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h:11,Availability,error,error,11,"///< Fatal error: whoever sends this message is terminating execution",MatchSource.CODE_COMMENT,core/multiproc/inc/MPCode.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h:37,Integrability,message,message,37,"///< Fatal error: whoever sends this message is terminating execution",MatchSource.CODE_COMMENT,core/multiproc/inc/MPCode.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h:5,Availability,Error,Error,5,"///< Error while reading from the socket",MatchSource.CODE_COMMENT,core/multiproc/inc/MPCode.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPSendRecv.h:98,Integrability,wrap,wraps,98,"//////////////////////////////////////////////////////////////////////////; /// An std::pair that wraps the code and optional object contained in a message.; /// \param first message code; /// \param second a smart pointer to a TBufferFile that contains the message object\n; /// The smart pointer is null if the message does not contain an object; /// but only consists of a code. See MPRecv() description on how to; /// retrieve the object from the TBufferFile.",MatchSource.CODE_COMMENT,core/multiproc/inc/MPSendRecv.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPSendRecv.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPSendRecv.h:148,Integrability,message,message,148,"//////////////////////////////////////////////////////////////////////////; /// An std::pair that wraps the code and optional object contained in a message.; /// \param first message code; /// \param second a smart pointer to a TBufferFile that contains the message object\n; /// The smart pointer is null if the message does not contain an object; /// but only consists of a code. See MPRecv() description on how to; /// retrieve the object from the TBufferFile.",MatchSource.CODE_COMMENT,core/multiproc/inc/MPSendRecv.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPSendRecv.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPSendRecv.h:175,Integrability,message,message,175,"//////////////////////////////////////////////////////////////////////////; /// An std::pair that wraps the code and optional object contained in a message.; /// \param first message code; /// \param second a smart pointer to a TBufferFile that contains the message object\n; /// The smart pointer is null if the message does not contain an object; /// but only consists of a code. See MPRecv() description on how to; /// retrieve the object from the TBufferFile.",MatchSource.CODE_COMMENT,core/multiproc/inc/MPSendRecv.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPSendRecv.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPSendRecv.h:258,Integrability,message,message,258,"//////////////////////////////////////////////////////////////////////////; /// An std::pair that wraps the code and optional object contained in a message.; /// \param first message code; /// \param second a smart pointer to a TBufferFile that contains the message object\n; /// The smart pointer is null if the message does not contain an object; /// but only consists of a code. See MPRecv() description on how to; /// retrieve the object from the TBufferFile.",MatchSource.CODE_COMMENT,core/multiproc/inc/MPSendRecv.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPSendRecv.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPSendRecv.h:313,Integrability,message,message,313,"//////////////////////////////////////////////////////////////////////////; /// An std::pair that wraps the code and optional object contained in a message.; /// \param first message code; /// \param second a smart pointer to a TBufferFile that contains the message object\n; /// The smart pointer is null if the message does not contain an object; /// but only consists of a code. See MPRecv() description on how to; /// retrieve the object from the TBufferFile.",MatchSource.CODE_COMMENT,core/multiproc/inc/MPSendRecv.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPSendRecv.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPSendRecv.h:126,Integrability,message,message,126,"/************ FUNCTIONS' DECLARATIONS *************/; // There are several versions of this function: this is one sends a; // message with a code and no object. The templated versions are used; // to send a code and an object of any non-pointer type.",MatchSource.CODE_COMMENT,core/multiproc/inc/MPSendRecv.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPSendRecv.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPSendRecv.h:38,Integrability,message,message,38,"//this version reads classes from the message",MatchSource.CODE_COMMENT,core/multiproc/inc/MPSendRecv.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPSendRecv.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPSendRecv.h:45,Integrability,message,message,45,"//this version reads built-in types from the message",MatchSource.CODE_COMMENT,core/multiproc/inc/MPSendRecv.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPSendRecv.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPSendRecv.h:56,Integrability,message,message,56,"//this version reads std::string and c-strings from the message",MatchSource.CODE_COMMENT,core/multiproc/inc/MPSendRecv.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPSendRecv.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPSendRecv.h:41,Integrability,message,message,41,"//this version reads a TObject* from the message",MatchSource.CODE_COMMENT,core/multiproc/inc/MPSendRecv.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPSendRecv.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPSendRecv.h:672,Availability,avail,available,672,"/************ TEMPLATE FUNCTIONS' IMPLEMENTATIONS *******************/; //////////////////////////////////////////////////////////////////////////; /// Send a message with a code and an object to socket s.; /// The number of bytes sent is returned, as per TSocket::SendRaw.; /// This standalone function can be used to send a code and possibly; /// an object on a given socket. This function does not check whether the; /// socket connection is in a valid state. MPRecv() must be used to; /// retrieve the contents of the message.\n; /// **Note:** only objects the headers of which have been parsed by; /// cling can be sent using MPSend(). User-defined types can be made available to; /// cling via a call like `gSystem->ProcessLine(""#include \""header.h\"""")`.; /// Pointer types cannot be sent via MPSend() (with the exception of const char*).; /// \param s a pointer to a valid TSocket. No validity checks are performed\n; /// \param code the code to be sent; /// \param obj the object to be sent; /// \return the number of bytes sent, as per TSocket::SendRaw",MatchSource.CODE_COMMENT,core/multiproc/inc/MPSendRecv.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPSendRecv.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPSendRecv.h:159,Integrability,message,message,159,"/************ TEMPLATE FUNCTIONS' IMPLEMENTATIONS *******************/; //////////////////////////////////////////////////////////////////////////; /// Send a message with a code and an object to socket s.; /// The number of bytes sent is returned, as per TSocket::SendRaw.; /// This standalone function can be used to send a code and possibly; /// an object on a given socket. This function does not check whether the; /// socket connection is in a valid state. MPRecv() must be used to; /// retrieve the contents of the message.\n; /// **Note:** only objects the headers of which have been parsed by; /// cling can be sent using MPSend(). User-defined types can be made available to; /// cling via a call like `gSystem->ProcessLine(""#include \""header.h\"""")`.; /// Pointer types cannot be sent via MPSend() (with the exception of const char*).; /// \param s a pointer to a valid TSocket. No validity checks are performed\n; /// \param code the code to be sent; /// \param obj the object to be sent; /// \return the number of bytes sent, as per TSocket::SendRaw",MatchSource.CODE_COMMENT,core/multiproc/inc/MPSendRecv.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPSendRecv.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPSendRecv.h:522,Integrability,message,message,522,"/************ TEMPLATE FUNCTIONS' IMPLEMENTATIONS *******************/; //////////////////////////////////////////////////////////////////////////; /// Send a message with a code and an object to socket s.; /// The number of bytes sent is returned, as per TSocket::SendRaw.; /// This standalone function can be used to send a code and possibly; /// an object on a given socket. This function does not check whether the; /// socket connection is in a valid state. MPRecv() must be used to; /// retrieve the contents of the message.\n; /// **Note:** only objects the headers of which have been parsed by; /// cling can be sent using MPSend(). User-defined types can be made available to; /// cling via a call like `gSystem->ProcessLine(""#include \""header.h\"""")`.; /// Pointer types cannot be sent via MPSend() (with the exception of const char*).; /// \param s a pointer to a valid TSocket. No validity checks are performed\n; /// \param code the code to be sent; /// \param obj the object to be sent; /// \return the number of bytes sent, as per TSocket::SendRaw",MatchSource.CODE_COMMENT,core/multiproc/inc/MPSendRecv.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPSendRecv.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPSendRecv.h:912,Performance,perform,performed,912,"/************ TEMPLATE FUNCTIONS' IMPLEMENTATIONS *******************/; //////////////////////////////////////////////////////////////////////////; /// Send a message with a code and an object to socket s.; /// The number of bytes sent is returned, as per TSocket::SendRaw.; /// This standalone function can be used to send a code and possibly; /// an object on a given socket. This function does not check whether the; /// socket connection is in a valid state. MPRecv() must be used to; /// retrieve the contents of the message.\n; /// **Note:** only objects the headers of which have been parsed by; /// cling can be sent using MPSend(). User-defined types can be made available to; /// cling via a call like `gSystem->ProcessLine(""#include \""header.h\"""")`.; /// Pointer types cannot be sent via MPSend() (with the exception of const char*).; /// \param s a pointer to a valid TSocket. No validity checks are performed\n; /// \param code the code to be sent; /// \param obj the object to be sent; /// \return the number of bytes sent, as per TSocket::SendRaw",MatchSource.CODE_COMMENT,core/multiproc/inc/MPSendRecv.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPSendRecv.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPSendRecv.h:27,Modifiability,polymorphi,polymorphic,27,"// send a TObject*. Allows polymorphic behaviour and pters to derived classes",MatchSource.CODE_COMMENT,core/multiproc/inc/MPSendRecv.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPSendRecv.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPSendRecv.h:150,Integrability,message,messages,150,"/// \endcond; //////////////////////////////////////////////////////////////////////////; /// One of the template functions used to read objects from messages.; /// Different implementations are provided for different types of objects:; /// classes, non-pointer built-ins and const char*. Reading pointers is; /// not implemented (at the time of writing, sending pointers is not either).",MatchSource.CODE_COMMENT,core/multiproc/inc/MPSendRecv.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPSendRecv.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPClient.h:51,Modifiability,inherit,inheriting,51,"// we expect application to pass a reference to an inheriting class and take advantage of polymorphism",MatchSource.CODE_COMMENT,core/multiproc/inc/TMPClient.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPClient.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPClient.h:90,Modifiability,polymorphi,polymorphism,90,"// we expect application to pass a reference to an inheriting class and take advantage of polymorphism",MatchSource.CODE_COMMENT,core/multiproc/inc/TMPClient.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPClient.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPClient.h:41,Safety,detect,detect,41,"///< This object manages the sockets and detect socket events via TMonitor::Select",MatchSource.CODE_COMMENT,core/multiproc/inc/TMPClient.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPClient.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPClient.h:87,Integrability,message,message,87,"//////////////////////////////////////////////////////////////////////////; /// Send a message with a different object to each server.; /// Sockets can either be in an ""active"" or ""non-active"" state. This method; /// activates all the sockets through which the client is connected to the; /// workers, and deactivates them when a message is sent to the corresponding; /// worker. This way the sockets pertaining to workers who have been left; /// idle will be the only ones in the active list; /// (TSocket::GetMonitor()->GetListOfActives()) after execution.; /// \param code the code of the message to send (e.g. EMPCode); /// \param args; /// \parblock; /// a vector containing the different messages to be sent. If the size of; /// the vector is smaller than the number of workers, a message will be; /// sent only to the first args.size() workers. If the size of the args vector; /// is bigger than the number of workers, only the first fNWorkers arguments; /// will be sent.; /// \endparblock; /// \return the number of messages successfully sent",MatchSource.CODE_COMMENT,core/multiproc/inc/TMPClient.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPClient.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPClient.h:330,Integrability,message,message,330,"//////////////////////////////////////////////////////////////////////////; /// Send a message with a different object to each server.; /// Sockets can either be in an ""active"" or ""non-active"" state. This method; /// activates all the sockets through which the client is connected to the; /// workers, and deactivates them when a message is sent to the corresponding; /// worker. This way the sockets pertaining to workers who have been left; /// idle will be the only ones in the active list; /// (TSocket::GetMonitor()->GetListOfActives()) after execution.; /// \param code the code of the message to send (e.g. EMPCode); /// \param args; /// \parblock; /// a vector containing the different messages to be sent. If the size of; /// the vector is smaller than the number of workers, a message will be; /// sent only to the first args.size() workers. If the size of the args vector; /// is bigger than the number of workers, only the first fNWorkers arguments; /// will be sent.; /// \endparblock; /// \return the number of messages successfully sent",MatchSource.CODE_COMMENT,core/multiproc/inc/TMPClient.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPClient.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPClient.h:592,Integrability,message,message,592,"//////////////////////////////////////////////////////////////////////////; /// Send a message with a different object to each server.; /// Sockets can either be in an ""active"" or ""non-active"" state. This method; /// activates all the sockets through which the client is connected to the; /// workers, and deactivates them when a message is sent to the corresponding; /// worker. This way the sockets pertaining to workers who have been left; /// idle will be the only ones in the active list; /// (TSocket::GetMonitor()->GetListOfActives()) after execution.; /// \param code the code of the message to send (e.g. EMPCode); /// \param args; /// \parblock; /// a vector containing the different messages to be sent. If the size of; /// the vector is smaller than the number of workers, a message will be; /// sent only to the first args.size() workers. If the size of the args vector; /// is bigger than the number of workers, only the first fNWorkers arguments; /// will be sent.; /// \endparblock; /// \return the number of messages successfully sent",MatchSource.CODE_COMMENT,core/multiproc/inc/TMPClient.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPClient.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPClient.h:694,Integrability,message,messages,694,"//////////////////////////////////////////////////////////////////////////; /// Send a message with a different object to each server.; /// Sockets can either be in an ""active"" or ""non-active"" state. This method; /// activates all the sockets through which the client is connected to the; /// workers, and deactivates them when a message is sent to the corresponding; /// worker. This way the sockets pertaining to workers who have been left; /// idle will be the only ones in the active list; /// (TSocket::GetMonitor()->GetListOfActives()) after execution.; /// \param code the code of the message to send (e.g. EMPCode); /// \param args; /// \parblock; /// a vector containing the different messages to be sent. If the size of; /// the vector is smaller than the number of workers, a message will be; /// sent only to the first args.size() workers. If the size of the args vector; /// is bigger than the number of workers, only the first fNWorkers arguments; /// will be sent.; /// \endparblock; /// \return the number of messages successfully sent",MatchSource.CODE_COMMENT,core/multiproc/inc/TMPClient.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPClient.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPClient.h:787,Integrability,message,message,787,"//////////////////////////////////////////////////////////////////////////; /// Send a message with a different object to each server.; /// Sockets can either be in an ""active"" or ""non-active"" state. This method; /// activates all the sockets through which the client is connected to the; /// workers, and deactivates them when a message is sent to the corresponding; /// worker. This way the sockets pertaining to workers who have been left; /// idle will be the only ones in the active list; /// (TSocket::GetMonitor()->GetListOfActives()) after execution.; /// \param code the code of the message to send (e.g. EMPCode); /// \param args; /// \parblock; /// a vector containing the different messages to be sent. If the size of; /// the vector is smaller than the number of workers, a message will be; /// sent only to the first args.size() workers. If the size of the args vector; /// is bigger than the number of workers, only the first fNWorkers arguments; /// will be sent.; /// \endparblock; /// \return the number of messages successfully sent",MatchSource.CODE_COMMENT,core/multiproc/inc/TMPClient.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPClient.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPClient.h:1025,Integrability,message,messages,1025,"//////////////////////////////////////////////////////////////////////////; /// Send a message with a different object to each server.; /// Sockets can either be in an ""active"" or ""non-active"" state. This method; /// activates all the sockets through which the client is connected to the; /// workers, and deactivates them when a message is sent to the corresponding; /// worker. This way the sockets pertaining to workers who have been left; /// idle will be the only ones in the active list; /// (TSocket::GetMonitor()->GetListOfActives()) after execution.; /// \param code the code of the message to send (e.g. EMPCode); /// \param args; /// \parblock; /// a vector containing the different messages to be sent. If the size of; /// the vector is smaller than the number of workers, a message will be; /// sent only to the first args.size() workers. If the size of the args vector; /// is bigger than the number of workers, only the first fNWorkers arguments; /// will be sent.; /// \endparblock; /// \return the number of messages successfully sent",MatchSource.CODE_COMMENT,core/multiproc/inc/TMPClient.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPClient.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPClient.h:87,Integrability,message,message,87,"//////////////////////////////////////////////////////////////////////////; /// Send a message with a different object to each server.; /// See TMPClient::Broadcast(unsigned code, const std::vector<T> &args); /// for more informations.",MatchSource.CODE_COMMENT,core/multiproc/inc/TMPClient.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPClient.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPClient.h:87,Integrability,message,message,87,"//////////////////////////////////////////////////////////////////////////; /// Send a message containing code and obj to each worker, up to a; /// maximum number of nMessages workers. See; /// Broadcast(unsigned code, unsigned nMessages) for more informations.; /// \param code the code of the message to send (e.g. EMPCode); /// \param obj the object to send; /// \param nMessages; /// \parblock; /// the maximum number of messages to send.; /// If nMessages == 0, send a message to every worker.; /// \endparblock; /// \return the number of messages successfully sent",MatchSource.CODE_COMMENT,core/multiproc/inc/TMPClient.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPClient.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPClient.h:295,Integrability,message,message,295,"//////////////////////////////////////////////////////////////////////////; /// Send a message containing code and obj to each worker, up to a; /// maximum number of nMessages workers. See; /// Broadcast(unsigned code, unsigned nMessages) for more informations.; /// \param code the code of the message to send (e.g. EMPCode); /// \param obj the object to send; /// \param nMessages; /// \parblock; /// the maximum number of messages to send.; /// If nMessages == 0, send a message to every worker.; /// \endparblock; /// \return the number of messages successfully sent",MatchSource.CODE_COMMENT,core/multiproc/inc/TMPClient.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPClient.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPClient.h:425,Integrability,message,messages,425,"//////////////////////////////////////////////////////////////////////////; /// Send a message containing code and obj to each worker, up to a; /// maximum number of nMessages workers. See; /// Broadcast(unsigned code, unsigned nMessages) for more informations.; /// \param code the code of the message to send (e.g. EMPCode); /// \param obj the object to send; /// \param nMessages; /// \parblock; /// the maximum number of messages to send.; /// If nMessages == 0, send a message to every worker.; /// \endparblock; /// \return the number of messages successfully sent",MatchSource.CODE_COMMENT,core/multiproc/inc/TMPClient.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPClient.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPClient.h:474,Integrability,message,message,474,"//////////////////////////////////////////////////////////////////////////; /// Send a message containing code and obj to each worker, up to a; /// maximum number of nMessages workers. See; /// Broadcast(unsigned code, unsigned nMessages) for more informations.; /// \param code the code of the message to send (e.g. EMPCode); /// \param obj the object to send; /// \param nMessages; /// \parblock; /// the maximum number of messages to send.; /// If nMessages == 0, send a message to every worker.; /// \endparblock; /// \return the number of messages successfully sent",MatchSource.CODE_COMMENT,core/multiproc/inc/TMPClient.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPClient.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPClient.h:544,Integrability,message,messages,544,"//////////////////////////////////////////////////////////////////////////; /// Send a message containing code and obj to each worker, up to a; /// maximum number of nMessages workers. See; /// Broadcast(unsigned code, unsigned nMessages) for more informations.; /// \param code the code of the message to send (e.g. EMPCode); /// \param obj the object to send; /// \param nMessages; /// \parblock; /// the maximum number of messages to send.; /// If nMessages == 0, send a message to every worker.; /// \endparblock; /// \return the number of messages successfully sent",MatchSource.CODE_COMMENT,core/multiproc/inc/TMPClient.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPClient.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPClient.h:7,Integrability,message,message,7,"//send message to all sockets",MatchSource.CODE_COMMENT,core/multiproc/inc/TMPClient.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPClient.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPWorker.h:67,Deployability,release,released,67,"///< This worker's socket. The unique_ptr makes sure resources are released.",MatchSource.CODE_COMMENT,core/multiproc/inc/TMPWorker.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPWorker.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPWorkerExecutor.h:668,Energy Efficiency,reduce,reduce,668,"//////////////////////////////////////////////////////////////////////////; ///; /// \class TMPWorkerExecutor; ///; /// This class works together with TProcessExecutor to allow the execution of; /// functions in server processes. Depending on the exact task that the; /// worker is required to execute, a different version of the class; /// can be called.; ///; /// ### TMPWorkerExecutor<F, T, R>; /// The most general case, used by; /// TProcessExecutor::MapReduce(F func, T& args, R redfunc).; /// This worker is build with:; /// * a function of signature F (the one to be executed); /// * a collection of arguments of type T on which to apply the function; /// * a reduce function with signature R to be used to squash many; /// returned values together.; ///; /// ### Partial specializations; /// A few partial specializations are provided for less general cases:; /// * TMPWorkerExecutor<F, T, void> handles the case of a function that takes; /// one argument and does not perform reduce operations; /// (TProcessExecutor::Map(F func, T& args)).; /// * TMPWorkerExecutor<F, void, R> handles the case of a function that takes; /// no arguments, to be executed a specified amount of times, which; /// returned values are squashed together (reduced); /// (TProcessExecutor::Map(F func, unsigned nTimes, R redfunc)); /// * TMPWorkerExecutor<F, void, void> handles the case of a function that takes; /// no arguments and whose arguments are not ""reduced""; /// (TProcessExecutor::Map(F func, unsigned nTimes)); ///; /// Since all the important data are passed to TMPWorkerExecutor at construction; /// time, the kind of messages that client and workers have to exchange; /// are usually very simple.; ///; //////////////////////////////////////////////////////////////////////////; // Quick guide to TMPWorkerExecutor:; // For each TProcessExecutor::Map and TProcessExecutor::MapReduce signature; // there's a corresponding; // specialization of TMPWorkerExecutor:; // * Map(func, nTimes) --> TMPWorker",MatchSource.CODE_COMMENT,core/multiproc/inc/TMPWorkerExecutor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPWorkerExecutor.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPWorkerExecutor.h:986,Energy Efficiency,reduce,reduce,986,"//////////////////////////////////////////////////////////////////////////; ///; /// \class TMPWorkerExecutor; ///; /// This class works together with TProcessExecutor to allow the execution of; /// functions in server processes. Depending on the exact task that the; /// worker is required to execute, a different version of the class; /// can be called.; ///; /// ### TMPWorkerExecutor<F, T, R>; /// The most general case, used by; /// TProcessExecutor::MapReduce(F func, T& args, R redfunc).; /// This worker is build with:; /// * a function of signature F (the one to be executed); /// * a collection of arguments of type T on which to apply the function; /// * a reduce function with signature R to be used to squash many; /// returned values together.; ///; /// ### Partial specializations; /// A few partial specializations are provided for less general cases:; /// * TMPWorkerExecutor<F, T, void> handles the case of a function that takes; /// one argument and does not perform reduce operations; /// (TProcessExecutor::Map(F func, T& args)).; /// * TMPWorkerExecutor<F, void, R> handles the case of a function that takes; /// no arguments, to be executed a specified amount of times, which; /// returned values are squashed together (reduced); /// (TProcessExecutor::Map(F func, unsigned nTimes, R redfunc)); /// * TMPWorkerExecutor<F, void, void> handles the case of a function that takes; /// no arguments and whose arguments are not ""reduced""; /// (TProcessExecutor::Map(F func, unsigned nTimes)); ///; /// Since all the important data are passed to TMPWorkerExecutor at construction; /// time, the kind of messages that client and workers have to exchange; /// are usually very simple.; ///; //////////////////////////////////////////////////////////////////////////; // Quick guide to TMPWorkerExecutor:; // For each TProcessExecutor::Map and TProcessExecutor::MapReduce signature; // there's a corresponding; // specialization of TMPWorkerExecutor:; // * Map(func, nTimes) --> TMPWorker",MatchSource.CODE_COMMENT,core/multiproc/inc/TMPWorkerExecutor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPWorkerExecutor.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPWorkerExecutor.h:1243,Energy Efficiency,reduce,reduced,1243,"orkerExecutor<F, T, R>; /// The most general case, used by; /// TProcessExecutor::MapReduce(F func, T& args, R redfunc).; /// This worker is build with:; /// * a function of signature F (the one to be executed); /// * a collection of arguments of type T on which to apply the function; /// * a reduce function with signature R to be used to squash many; /// returned values together.; ///; /// ### Partial specializations; /// A few partial specializations are provided for less general cases:; /// * TMPWorkerExecutor<F, T, void> handles the case of a function that takes; /// one argument and does not perform reduce operations; /// (TProcessExecutor::Map(F func, T& args)).; /// * TMPWorkerExecutor<F, void, R> handles the case of a function that takes; /// no arguments, to be executed a specified amount of times, which; /// returned values are squashed together (reduced); /// (TProcessExecutor::Map(F func, unsigned nTimes, R redfunc)); /// * TMPWorkerExecutor<F, void, void> handles the case of a function that takes; /// no arguments and whose arguments are not ""reduced""; /// (TProcessExecutor::Map(F func, unsigned nTimes)); ///; /// Since all the important data are passed to TMPWorkerExecutor at construction; /// time, the kind of messages that client and workers have to exchange; /// are usually very simple.; ///; //////////////////////////////////////////////////////////////////////////; // Quick guide to TMPWorkerExecutor:; // For each TProcessExecutor::Map and TProcessExecutor::MapReduce signature; // there's a corresponding; // specialization of TMPWorkerExecutor:; // * Map(func, nTimes) --> TMPWorkerExecutor<F, void, void>; // * Map(func, args) --> TMPWorkerExecutor<F, T, void>; // * MapReduce(func, nTimes, redfunc) --> TMPWorkerExecutor<F, void, R>; // * MapReduce(func, args, redfunc) --> TMPWorkerExecutor<F, T, R>; // I thought about having four different classes (with different names); // instead of four specializations of the same class template, but it really; ",MatchSource.CODE_COMMENT,core/multiproc/inc/TMPWorkerExecutor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPWorkerExecutor.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPWorkerExecutor.h:1446,Energy Efficiency,reduce,reduced,1446,"orkerExecutor<F, T, R>; /// The most general case, used by; /// TProcessExecutor::MapReduce(F func, T& args, R redfunc).; /// This worker is build with:; /// * a function of signature F (the one to be executed); /// * a collection of arguments of type T on which to apply the function; /// * a reduce function with signature R to be used to squash many; /// returned values together.; ///; /// ### Partial specializations; /// A few partial specializations are provided for less general cases:; /// * TMPWorkerExecutor<F, T, void> handles the case of a function that takes; /// one argument and does not perform reduce operations; /// (TProcessExecutor::Map(F func, T& args)).; /// * TMPWorkerExecutor<F, void, R> handles the case of a function that takes; /// no arguments, to be executed a specified amount of times, which; /// returned values are squashed together (reduced); /// (TProcessExecutor::Map(F func, unsigned nTimes, R redfunc)); /// * TMPWorkerExecutor<F, void, void> handles the case of a function that takes; /// no arguments and whose arguments are not ""reduced""; /// (TProcessExecutor::Map(F func, unsigned nTimes)); ///; /// Since all the important data are passed to TMPWorkerExecutor at construction; /// time, the kind of messages that client and workers have to exchange; /// are usually very simple.; ///; //////////////////////////////////////////////////////////////////////////; // Quick guide to TMPWorkerExecutor:; // For each TProcessExecutor::Map and TProcessExecutor::MapReduce signature; // there's a corresponding; // specialization of TMPWorkerExecutor:; // * Map(func, nTimes) --> TMPWorkerExecutor<F, void, void>; // * Map(func, args) --> TMPWorkerExecutor<F, T, void>; // * MapReduce(func, nTimes, redfunc) --> TMPWorkerExecutor<F, void, R>; // * MapReduce(func, args, redfunc) --> TMPWorkerExecutor<F, T, R>; // I thought about having four different classes (with different names); // instead of four specializations of the same class template, but it really; ",MatchSource.CODE_COMMENT,core/multiproc/inc/TMPWorkerExecutor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPWorkerExecutor.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPWorkerExecutor.h:230,Integrability,Depend,Depending,230,"//////////////////////////////////////////////////////////////////////////; ///; /// \class TMPWorkerExecutor; ///; /// This class works together with TProcessExecutor to allow the execution of; /// functions in server processes. Depending on the exact task that the; /// worker is required to execute, a different version of the class; /// can be called.; ///; /// ### TMPWorkerExecutor<F, T, R>; /// The most general case, used by; /// TProcessExecutor::MapReduce(F func, T& args, R redfunc).; /// This worker is build with:; /// * a function of signature F (the one to be executed); /// * a collection of arguments of type T on which to apply the function; /// * a reduce function with signature R to be used to squash many; /// returned values together.; ///; /// ### Partial specializations; /// A few partial specializations are provided for less general cases:; /// * TMPWorkerExecutor<F, T, void> handles the case of a function that takes; /// one argument and does not perform reduce operations; /// (TProcessExecutor::Map(F func, T& args)).; /// * TMPWorkerExecutor<F, void, R> handles the case of a function that takes; /// no arguments, to be executed a specified amount of times, which; /// returned values are squashed together (reduced); /// (TProcessExecutor::Map(F func, unsigned nTimes, R redfunc)); /// * TMPWorkerExecutor<F, void, void> handles the case of a function that takes; /// no arguments and whose arguments are not ""reduced""; /// (TProcessExecutor::Map(F func, unsigned nTimes)); ///; /// Since all the important data are passed to TMPWorkerExecutor at construction; /// time, the kind of messages that client and workers have to exchange; /// are usually very simple.; ///; //////////////////////////////////////////////////////////////////////////; // Quick guide to TMPWorkerExecutor:; // For each TProcessExecutor::Map and TProcessExecutor::MapReduce signature; // there's a corresponding; // specialization of TMPWorkerExecutor:; // * Map(func, nTimes) --> TMPWorker",MatchSource.CODE_COMMENT,core/multiproc/inc/TMPWorkerExecutor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPWorkerExecutor.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPWorkerExecutor.h:1619,Integrability,message,messages,1619,"orkerExecutor<F, T, R>; /// The most general case, used by; /// TProcessExecutor::MapReduce(F func, T& args, R redfunc).; /// This worker is build with:; /// * a function of signature F (the one to be executed); /// * a collection of arguments of type T on which to apply the function; /// * a reduce function with signature R to be used to squash many; /// returned values together.; ///; /// ### Partial specializations; /// A few partial specializations are provided for less general cases:; /// * TMPWorkerExecutor<F, T, void> handles the case of a function that takes; /// one argument and does not perform reduce operations; /// (TProcessExecutor::Map(F func, T& args)).; /// * TMPWorkerExecutor<F, void, R> handles the case of a function that takes; /// no arguments, to be executed a specified amount of times, which; /// returned values are squashed together (reduced); /// (TProcessExecutor::Map(F func, unsigned nTimes, R redfunc)); /// * TMPWorkerExecutor<F, void, void> handles the case of a function that takes; /// no arguments and whose arguments are not ""reduced""; /// (TProcessExecutor::Map(F func, unsigned nTimes)); ///; /// Since all the important data are passed to TMPWorkerExecutor at construction; /// time, the kind of messages that client and workers have to exchange; /// are usually very simple.; ///; //////////////////////////////////////////////////////////////////////////; // Quick guide to TMPWorkerExecutor:; // For each TProcessExecutor::Map and TProcessExecutor::MapReduce signature; // there's a corresponding; // specialization of TMPWorkerExecutor:; // * Map(func, nTimes) --> TMPWorkerExecutor<F, void, void>; // * Map(func, args) --> TMPWorkerExecutor<F, T, void>; // * MapReduce(func, nTimes, redfunc) --> TMPWorkerExecutor<F, void, R>; // * MapReduce(func, args, redfunc) --> TMPWorkerExecutor<F, T, R>; // I thought about having four different classes (with different names); // instead of four specializations of the same class template, but it really; ",MatchSource.CODE_COMMENT,core/multiproc/inc/TMPWorkerExecutor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPWorkerExecutor.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPWorkerExecutor.h:978,Performance,perform,perform,978,"//////////////////////////////////////////////////////////////////////////; ///; /// \class TMPWorkerExecutor; ///; /// This class works together with TProcessExecutor to allow the execution of; /// functions in server processes. Depending on the exact task that the; /// worker is required to execute, a different version of the class; /// can be called.; ///; /// ### TMPWorkerExecutor<F, T, R>; /// The most general case, used by; /// TProcessExecutor::MapReduce(F func, T& args, R redfunc).; /// This worker is build with:; /// * a function of signature F (the one to be executed); /// * a collection of arguments of type T on which to apply the function; /// * a reduce function with signature R to be used to squash many; /// returned values together.; ///; /// ### Partial specializations; /// A few partial specializations are provided for less general cases:; /// * TMPWorkerExecutor<F, T, void> handles the case of a function that takes; /// one argument and does not perform reduce operations; /// (TProcessExecutor::Map(F func, T& args)).; /// * TMPWorkerExecutor<F, void, R> handles the case of a function that takes; /// no arguments, to be executed a specified amount of times, which; /// returned values are squashed together (reduced); /// (TProcessExecutor::Map(F func, unsigned nTimes, R redfunc)); /// * TMPWorkerExecutor<F, void, void> handles the case of a function that takes; /// no arguments and whose arguments are not ""reduced""; /// (TProcessExecutor::Map(F func, unsigned nTimes)); ///; /// Since all the important data are passed to TMPWorkerExecutor at construction; /// time, the kind of messages that client and workers have to exchange; /// are usually very simple.; ///; //////////////////////////////////////////////////////////////////////////; // Quick guide to TMPWorkerExecutor:; // For each TProcessExecutor::Map and TProcessExecutor::MapReduce signature; // there's a corresponding; // specialization of TMPWorkerExecutor:; // * Map(func, nTimes) --> TMPWorker",MatchSource.CODE_COMMENT,core/multiproc/inc/TMPWorkerExecutor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPWorkerExecutor.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPWorkerExecutor.h:1691,Usability,simpl,simple,1691,"orkerExecutor<F, T, R>; /// The most general case, used by; /// TProcessExecutor::MapReduce(F func, T& args, R redfunc).; /// This worker is build with:; /// * a function of signature F (the one to be executed); /// * a collection of arguments of type T on which to apply the function; /// * a reduce function with signature R to be used to squash many; /// returned values together.; ///; /// ### Partial specializations; /// A few partial specializations are provided for less general cases:; /// * TMPWorkerExecutor<F, T, void> handles the case of a function that takes; /// one argument and does not perform reduce operations; /// (TProcessExecutor::Map(F func, T& args)).; /// * TMPWorkerExecutor<F, void, R> handles the case of a function that takes; /// no arguments, to be executed a specified amount of times, which; /// returned values are squashed together (reduced); /// (TProcessExecutor::Map(F func, unsigned nTimes, R redfunc)); /// * TMPWorkerExecutor<F, void, void> handles the case of a function that takes; /// no arguments and whose arguments are not ""reduced""; /// (TProcessExecutor::Map(F func, unsigned nTimes)); ///; /// Since all the important data are passed to TMPWorkerExecutor at construction; /// time, the kind of messages that client and workers have to exchange; /// are usually very simple.; ///; //////////////////////////////////////////////////////////////////////////; // Quick guide to TMPWorkerExecutor:; // For each TProcessExecutor::Map and TProcessExecutor::MapReduce signature; // there's a corresponding; // specialization of TMPWorkerExecutor:; // * Map(func, nTimes) --> TMPWorkerExecutor<F, void, void>; // * Map(func, args) --> TMPWorkerExecutor<F, T, void>; // * MapReduce(func, nTimes, redfunc) --> TMPWorkerExecutor<F, void, R>; // * MapReduce(func, args, redfunc) --> TMPWorkerExecutor<F, T, R>; // I thought about having four different classes (with different names); // instead of four specializations of the same class template, but it really; ",MatchSource.CODE_COMMENT,core/multiproc/inc/TMPWorkerExecutor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPWorkerExecutor.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPWorkerExecutor.h:1790,Usability,guid,guide,1790,"or less general cases:; /// * TMPWorkerExecutor<F, T, void> handles the case of a function that takes; /// one argument and does not perform reduce operations; /// (TProcessExecutor::Map(F func, T& args)).; /// * TMPWorkerExecutor<F, void, R> handles the case of a function that takes; /// no arguments, to be executed a specified amount of times, which; /// returned values are squashed together (reduced); /// (TProcessExecutor::Map(F func, unsigned nTimes, R redfunc)); /// * TMPWorkerExecutor<F, void, void> handles the case of a function that takes; /// no arguments and whose arguments are not ""reduced""; /// (TProcessExecutor::Map(F func, unsigned nTimes)); ///; /// Since all the important data are passed to TMPWorkerExecutor at construction; /// time, the kind of messages that client and workers have to exchange; /// are usually very simple.; ///; //////////////////////////////////////////////////////////////////////////; // Quick guide to TMPWorkerExecutor:; // For each TProcessExecutor::Map and TProcessExecutor::MapReduce signature; // there's a corresponding; // specialization of TMPWorkerExecutor:; // * Map(func, nTimes) --> TMPWorkerExecutor<F, void, void>; // * Map(func, args) --> TMPWorkerExecutor<F, T, void>; // * MapReduce(func, nTimes, redfunc) --> TMPWorkerExecutor<F, void, R>; // * MapReduce(func, args, redfunc) --> TMPWorkerExecutor<F, T, R>; // I thought about having four different classes (with different names); // instead of four specializations of the same class template, but it really; // makes no difference in the end since the different classes would be class; // templates anyway, and I would have to find a meaningful name for each one.; // About code replication: looking carefully, it can be noticed that there's; // very little code replication since the different versions of TMPWorkerExecutor; // all behave slightly differently, in incompatible ways (e.g. they all need; // different data members, different signatures for the ctors, and so on).",MatchSource.CODE_COMMENT,core/multiproc/inc/TMPWorkerExecutor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPWorkerExecutor.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPWorkerExecutor.h:26,Energy Efficiency,charge,charge,26,"// TProcessExecutor is in charge of checking the signatures for incompatibilities:; // we trust that decltype(redfunc(std::vector<decltype(func(args[0]))>)) == decltype(args[0]); // TODO document somewhere that fReducedResult must have a default ctor",MatchSource.CODE_COMMENT,core/multiproc/inc/TMPWorkerExecutor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPWorkerExecutor.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPWorkerExecutor.h:3,Energy Efficiency,reduce,reduce,3,"// reduce arguments if possible",MatchSource.CODE_COMMENT,core/multiproc/inc/TMPWorkerExecutor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPWorkerExecutor.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPWorkerExecutor.h:9,Energy Efficiency,reduce,reduce,9,"///< the reduce function",MatchSource.CODE_COMMENT,core/multiproc/inc/TMPWorkerExecutor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPWorkerExecutor.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPWorkerExecutor.h:35,Energy Efficiency,reduce,reduced,35,"///< true if fReducedResult can be reduced with a new result, false until we have produced one result",MatchSource.CODE_COMMENT,core/multiproc/inc/TMPWorkerExecutor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPWorkerExecutor.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPWorkerExecutor.h:3,Energy Efficiency,reduce,reduce,3,"// reduce arguments if possible",MatchSource.CODE_COMMENT,core/multiproc/inc/TMPWorkerExecutor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPWorkerExecutor.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPWorkerExecutor.h:9,Energy Efficiency,reduce,reduce,9,"///< the reduce function",MatchSource.CODE_COMMENT,core/multiproc/inc/TMPWorkerExecutor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPWorkerExecutor.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPWorkerExecutor.h:35,Energy Efficiency,reduce,reduced,35,"///< true if fReducedResult can be reduced with a new result, false until we have produced one result",MatchSource.CODE_COMMENT,core/multiproc/inc/TMPWorkerExecutor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPWorkerExecutor.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TProcPool.h:90,Security,access,accessing,90,"/* @(#)root/multiproc:$Id$ */; // Author: Pere Mato; // Placeholder header file for users accessing TProcPool.h and the class TProcPool",MatchSource.CODE_COMMENT,core/multiproc/inc/TProcPool.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TProcPool.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TProcPool.h:11,Integrability,message,message,11,"// #pragma message(""class 'TProcPool' is deprecated, replace it by 'ROOT::TProcessExecutor' (for TTree processing see 'ROOT:TTreeProcessorMP')"")",MatchSource.CODE_COMMENT,core/multiproc/inc/TProcPool.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TProcPool.h
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/ROOT/TProcessExecutor.hxx:77,Energy Efficiency,adapt,adapt,77,"// MapReduce; // Redefinition of the MapReduce classes of the base class, to adapt them to; // TProcessExecutor's logic",MatchSource.CODE_COMMENT,core/multiproc/inc/ROOT/TProcessExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/ROOT/TProcessExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/ROOT/TProcessExecutor.hxx:77,Modifiability,adapt,adapt,77,"// MapReduce; // Redefinition of the MapReduce classes of the base class, to adapt them to; // TProcessExecutor's logic",MatchSource.CODE_COMMENT,core/multiproc/inc/ROOT/TProcessExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/ROOT/TProcessExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/ROOT/TProcessExecutor.hxx:114,Testability,log,logic,114,"// MapReduce; // Redefinition of the MapReduce classes of the base class, to adapt them to; // TProcessExecutor's logic",MatchSource.CODE_COMMENT,core/multiproc/inc/ROOT/TProcessExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/ROOT/TProcessExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/ROOT/TProcessExecutor.hxx:3,Energy Efficiency,Reduce,Reduce,3,"// Reduce; //",MatchSource.CODE_COMMENT,core/multiproc/inc/ROOT/TProcessExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/ROOT/TProcessExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/ROOT/TProcessExecutor.hxx:206,Integrability,message,messages,206,"///< total number of arguments to pass to the workers; /// A collection of the types of tasks that TProcessExecutor can execute.; /// It is used to interpret in the right way and properly reply to the; /// messages received (see, for example, TProcessExecutor::HandleInput)",MatchSource.CODE_COMMENT,core/multiproc/inc/ROOT/TProcessExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/ROOT/TProcessExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/ROOT/TProcessExecutor.hxx:181,Energy Efficiency,Reduce,Reduce,181,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function `nTimes` in parallel (Map) and accumulate the results into a single value (Reduce).; /// \copydetails ROOT::Internal::TExecutor::MapReduce(F func,unsigned nTimes,R redfunc)",MatchSource.CODE_COMMENT,core/multiproc/inc/ROOT/TProcessExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/ROOT/TProcessExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/ROOT/TProcessExecutor.hxx:202,Energy Efficiency,Reduce,Reduce,202,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function in parallel over the elements of a vector (Map) and accumulate the results into a single value (Reduce).; /// Benefits from partial reduction into `nChunks` intermediate results.; ///; /// \copydetails ROOT::Internal::TExecutor::MapReduce(F func,std::vector<T> &args,R redfunc,unsigned nChunks).",MatchSource.CODE_COMMENT,core/multiproc/inc/ROOT/TProcessExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/ROOT/TProcessExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/ROOT/TProcessExecutor.hxx:213,Energy Efficiency,Reduce,Reduce,213,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function in parallel over the elements of an immutable vector (Map) and accumulate the results into a single value (Reduce).; /// Benefits from partial reduction into `nChunks` intermediate results.; ///; /// \copydetails ROOT::Internal::TExecutor::MapReduce(F func,const std::vector<T> &args,R redfunc,unsigned nChunks).",MatchSource.CODE_COMMENT,core/multiproc/inc/ROOT/TProcessExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/ROOT/TProcessExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/ROOT/TProcessExecutor.hxx:87,Integrability,message,message,87,"//////////////////////////////////////////////////////////////////////////; /// Handle message and reply to the worker",MatchSource.CODE_COMMENT,core/multiproc/inc/ROOT/TProcessExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/ROOT/TProcessExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/ROOT/TProcessExecutor.hxx:91,Integrability,message,messages,91,"//////////////////////////////////////////////////////////////////////////; /// Listen for messages sent by the workers and call the appropriate handler function.; /// TProcessExecutor::HandlePoolCode is called on messages with a code < 1000 and; /// TMPClient::HandleMPCode is called on messages with a code >= 1000.",MatchSource.CODE_COMMENT,core/multiproc/inc/ROOT/TProcessExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/ROOT/TProcessExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/ROOT/TProcessExecutor.hxx:214,Integrability,message,messages,214,"//////////////////////////////////////////////////////////////////////////; /// Listen for messages sent by the workers and call the appropriate handler function.; /// TProcessExecutor::HandlePoolCode is called on messages with a code < 1000 and; /// TMPClient::HandleMPCode is called on messages with a code >= 1000.",MatchSource.CODE_COMMENT,core/multiproc/inc/ROOT/TProcessExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/ROOT/TProcessExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/ROOT/TProcessExecutor.hxx:288,Integrability,message,messages,288,"//////////////////////////////////////////////////////////////////////////; /// Listen for messages sent by the workers and call the appropriate handler function.; /// TProcessExecutor::HandlePoolCode is called on messages with a code < 1000 and; /// TMPClient::HandleMPCode is called on messages with a code >= 1000.",MatchSource.CODE_COMMENT,core/multiproc/inc/ROOT/TProcessExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/ROOT/TProcessExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/MPSendRecv.cxx:490,Availability,avail,available,490,"//////////////////////////////////////////////////////////////////////////; /// Send a message with the specified code on the specified socket.; /// This standalone function can be used to send a code; /// on a given socket. It does not check whether the socket connection is; /// in a valid state. The message code can then be retrieved via MPRecv().\n; /// **Note:** only objects the headers of which have been parsed by; /// cling can be sent by MPSend(). User-defined types can be made available to; /// cling via a call like `gSystem->ProcessLine(""#include \""header.h\"""")`.; /// Pointer types are not supported (with the exception of const char*),; /// but the user can simply dereference the pointer and send the; /// pointed object instead.\n; /// **Note:** for readability, codes should be enumerated as in EMPCode.\n; /// \param s a pointer to a valid TSocket. No validity checks are performed\n; /// \param code the code to be sent; /// \return the number of bytes sent, as per TSocket::SendRaw",MatchSource.CODE_COMMENT,core/multiproc/src/MPSendRecv.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/MPSendRecv.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/MPSendRecv.cxx:87,Integrability,message,message,87,"//////////////////////////////////////////////////////////////////////////; /// Send a message with the specified code on the specified socket.; /// This standalone function can be used to send a code; /// on a given socket. It does not check whether the socket connection is; /// in a valid state. The message code can then be retrieved via MPRecv().\n; /// **Note:** only objects the headers of which have been parsed by; /// cling can be sent by MPSend(). User-defined types can be made available to; /// cling via a call like `gSystem->ProcessLine(""#include \""header.h\"""")`.; /// Pointer types are not supported (with the exception of const char*),; /// but the user can simply dereference the pointer and send the; /// pointed object instead.\n; /// **Note:** for readability, codes should be enumerated as in EMPCode.\n; /// \param s a pointer to a valid TSocket. No validity checks are performed\n; /// \param code the code to be sent; /// \return the number of bytes sent, as per TSocket::SendRaw",MatchSource.CODE_COMMENT,core/multiproc/src/MPSendRecv.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/MPSendRecv.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/MPSendRecv.cxx:303,Integrability,message,message,303,"//////////////////////////////////////////////////////////////////////////; /// Send a message with the specified code on the specified socket.; /// This standalone function can be used to send a code; /// on a given socket. It does not check whether the socket connection is; /// in a valid state. The message code can then be retrieved via MPRecv().\n; /// **Note:** only objects the headers of which have been parsed by; /// cling can be sent by MPSend(). User-defined types can be made available to; /// cling via a call like `gSystem->ProcessLine(""#include \""header.h\"""")`.; /// Pointer types are not supported (with the exception of const char*),; /// but the user can simply dereference the pointer and send the; /// pointed object instead.\n; /// **Note:** for readability, codes should be enumerated as in EMPCode.\n; /// \param s a pointer to a valid TSocket. No validity checks are performed\n; /// \param code the code to be sent; /// \return the number of bytes sent, as per TSocket::SendRaw",MatchSource.CODE_COMMENT,core/multiproc/src/MPSendRecv.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/MPSendRecv.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/MPSendRecv.cxx:893,Performance,perform,performed,893,"//////////////////////////////////////////////////////////////////////////; /// Send a message with the specified code on the specified socket.; /// This standalone function can be used to send a code; /// on a given socket. It does not check whether the socket connection is; /// in a valid state. The message code can then be retrieved via MPRecv().\n; /// **Note:** only objects the headers of which have been parsed by; /// cling can be sent by MPSend(). User-defined types can be made available to; /// cling via a call like `gSystem->ProcessLine(""#include \""header.h\"""")`.; /// Pointer types are not supported (with the exception of const char*),; /// but the user can simply dereference the pointer and send the; /// pointed object instead.\n; /// **Note:** for readability, codes should be enumerated as in EMPCode.\n; /// \param s a pointer to a valid TSocket. No validity checks are performed\n; /// \param code the code to be sent; /// \return the number of bytes sent, as per TSocket::SendRaw",MatchSource.CODE_COMMENT,core/multiproc/src/MPSendRecv.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/MPSendRecv.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/MPSendRecv.cxx:675,Usability,simpl,simply,675,"//////////////////////////////////////////////////////////////////////////; /// Send a message with the specified code on the specified socket.; /// This standalone function can be used to send a code; /// on a given socket. It does not check whether the socket connection is; /// in a valid state. The message code can then be retrieved via MPRecv().\n; /// **Note:** only objects the headers of which have been parsed by; /// cling can be sent by MPSend(). User-defined types can be made available to; /// cling via a call like `gSystem->ProcessLine(""#include \""header.h\"""")`.; /// Pointer types are not supported (with the exception of const char*),; /// but the user can simply dereference the pointer and send the; /// pointed object instead.\n; /// **Note:** for readability, codes should be enumerated as in EMPCode.\n; /// \param s a pointer to a valid TSocket. No validity checks are performed\n; /// \param code the code to be sent; /// \return the number of bytes sent, as per TSocket::SendRaw",MatchSource.CODE_COMMENT,core/multiproc/src/MPSendRecv.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/MPSendRecv.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/MPSendRecv.cxx:88,Integrability,message,message,88,"//////////////////////////////////////////////////////////////////////////; /// Receive message from a socket.; /// This standalone function can be used to read a message that; /// has been sent via MPSend(). The smart pointer contained in the returned; /// ::MPCodeBufPair is null if the message does not contain an object,; /// otherwise it points to a TBufferFile.; /// To retrieve the object from the buffer different methods must be used; /// depending on the type of the object to be read:\n; /// * non-pointer built-in types: TBufferFile::operator>> must be used\n; /// * c-strings: TBufferFile::ReadString must be used\n; /// * class types: TBufferFile::ReadObjectAny must be used\n; /// \param s a pointer to a valid TSocket. No validity checks are performed\n; /// \return ::MPCodeBufPair, i.e. an std::pair containing message code and (possibly) object",MatchSource.CODE_COMMENT,core/multiproc/src/MPSendRecv.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/MPSendRecv.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/MPSendRecv.cxx:163,Integrability,message,message,163,"//////////////////////////////////////////////////////////////////////////; /// Receive message from a socket.; /// This standalone function can be used to read a message that; /// has been sent via MPSend(). The smart pointer contained in the returned; /// ::MPCodeBufPair is null if the message does not contain an object,; /// otherwise it points to a TBufferFile.; /// To retrieve the object from the buffer different methods must be used; /// depending on the type of the object to be read:\n; /// * non-pointer built-in types: TBufferFile::operator>> must be used\n; /// * c-strings: TBufferFile::ReadString must be used\n; /// * class types: TBufferFile::ReadObjectAny must be used\n; /// \param s a pointer to a valid TSocket. No validity checks are performed\n; /// \return ::MPCodeBufPair, i.e. an std::pair containing message code and (possibly) object",MatchSource.CODE_COMMENT,core/multiproc/src/MPSendRecv.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/MPSendRecv.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/MPSendRecv.cxx:289,Integrability,message,message,289,"//////////////////////////////////////////////////////////////////////////; /// Receive message from a socket.; /// This standalone function can be used to read a message that; /// has been sent via MPSend(). The smart pointer contained in the returned; /// ::MPCodeBufPair is null if the message does not contain an object,; /// otherwise it points to a TBufferFile.; /// To retrieve the object from the buffer different methods must be used; /// depending on the type of the object to be read:\n; /// * non-pointer built-in types: TBufferFile::operator>> must be used\n; /// * c-strings: TBufferFile::ReadString must be used\n; /// * class types: TBufferFile::ReadObjectAny must be used\n; /// \param s a pointer to a valid TSocket. No validity checks are performed\n; /// \return ::MPCodeBufPair, i.e. an std::pair containing message code and (possibly) object",MatchSource.CODE_COMMENT,core/multiproc/src/MPSendRecv.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/MPSendRecv.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/MPSendRecv.cxx:448,Integrability,depend,depending,448,"//////////////////////////////////////////////////////////////////////////; /// Receive message from a socket.; /// This standalone function can be used to read a message that; /// has been sent via MPSend(). The smart pointer contained in the returned; /// ::MPCodeBufPair is null if the message does not contain an object,; /// otherwise it points to a TBufferFile.; /// To retrieve the object from the buffer different methods must be used; /// depending on the type of the object to be read:\n; /// * non-pointer built-in types: TBufferFile::operator>> must be used\n; /// * c-strings: TBufferFile::ReadString must be used\n; /// * class types: TBufferFile::ReadObjectAny must be used\n; /// \param s a pointer to a valid TSocket. No validity checks are performed\n; /// \return ::MPCodeBufPair, i.e. an std::pair containing message code and (possibly) object",MatchSource.CODE_COMMENT,core/multiproc/src/MPSendRecv.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/MPSendRecv.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/MPSendRecv.cxx:829,Integrability,message,message,829,"//////////////////////////////////////////////////////////////////////////; /// Receive message from a socket.; /// This standalone function can be used to read a message that; /// has been sent via MPSend(). The smart pointer contained in the returned; /// ::MPCodeBufPair is null if the message does not contain an object,; /// otherwise it points to a TBufferFile.; /// To retrieve the object from the buffer different methods must be used; /// depending on the type of the object to be read:\n; /// * non-pointer built-in types: TBufferFile::operator>> must be used\n; /// * c-strings: TBufferFile::ReadString must be used\n; /// * class types: TBufferFile::ReadObjectAny must be used\n; /// \param s a pointer to a valid TSocket. No validity checks are performed\n; /// \return ::MPCodeBufPair, i.e. an std::pair containing message code and (possibly) object",MatchSource.CODE_COMMENT,core/multiproc/src/MPSendRecv.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/MPSendRecv.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/MPSendRecv.cxx:758,Performance,perform,performed,758,"//////////////////////////////////////////////////////////////////////////; /// Receive message from a socket.; /// This standalone function can be used to read a message that; /// has been sent via MPSend(). The smart pointer contained in the returned; /// ::MPCodeBufPair is null if the message does not contain an object,; /// otherwise it points to a TBufferFile.; /// To retrieve the object from the buffer different methods must be used; /// depending on the type of the object to be read:\n; /// * non-pointer built-in types: TBufferFile::operator>> must be used\n; /// * c-strings: TBufferFile::ReadString must be used\n; /// * class types: TBufferFile::ReadObjectAny must be used\n; /// \param s a pointer to a valid TSocket. No validity checks are performed\n; /// \return ::MPCodeBufPair, i.e. an std::pair containing message code and (possibly) object",MatchSource.CODE_COMMENT,core/multiproc/src/MPSendRecv.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/MPSendRecv.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/MPSendRecv.cxx:10,Integrability,message,message,10,"//receive message code",MatchSource.CODE_COMMENT,core/multiproc/src/MPSendRecv.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/MPSendRecv.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/MPSendRecv.cxx:7,Integrability,message,message,7,"//read message code",MatchSource.CODE_COMMENT,core/multiproc/src/MPSendRecv.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/MPSendRecv.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx:873,Availability,avail,available,873,"//////////////////////////////////////////////////////////////////////////; ///; /// \class TMPClient; ///; /// Base class for multiprocess applications' clients. It provides a; /// simple interface to fork a ROOT session into server/worker sessions; /// and exchange messages with them. Multiprocessing applications can build; /// on TMPClient and TMPWorker: the class providing multiprocess; /// functionalities to users should inherit (possibly privately) from; /// TMPClient, and the workers executing tasks should inherit from TMPWorker.; ///; //////////////////////////////////////////////////////////////////////////; //////////////////////////////////////////////////////////////////////////; /// Class constructor.; /// \param nWorkers; /// \parblock; /// the number of children processes that will be created by; /// Fork, i.e. the number of workers that will be available after this call.; /// The default value (0) means that a number of workers equal to the number; /// of cores of the machine is going to be spawned. If that information is; /// not available, 2 workers are created instead.; /// \endparblock",MatchSource.CODE_COMMENT,core/multiproc/src/TMPClient.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx:1063,Availability,avail,available,1063,"//////////////////////////////////////////////////////////////////////////; ///; /// \class TMPClient; ///; /// Base class for multiprocess applications' clients. It provides a; /// simple interface to fork a ROOT session into server/worker sessions; /// and exchange messages with them. Multiprocessing applications can build; /// on TMPClient and TMPWorker: the class providing multiprocess; /// functionalities to users should inherit (possibly privately) from; /// TMPClient, and the workers executing tasks should inherit from TMPWorker.; ///; //////////////////////////////////////////////////////////////////////////; //////////////////////////////////////////////////////////////////////////; /// Class constructor.; /// \param nWorkers; /// \parblock; /// the number of children processes that will be created by; /// Fork, i.e. the number of workers that will be available after this call.; /// The default value (0) means that a number of workers equal to the number; /// of cores of the machine is going to be spawned. If that information is; /// not available, 2 workers are created instead.; /// \endparblock",MatchSource.CODE_COMMENT,core/multiproc/src/TMPClient.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx:189,Integrability,interface,interface,189,"//////////////////////////////////////////////////////////////////////////; ///; /// \class TMPClient; ///; /// Base class for multiprocess applications' clients. It provides a; /// simple interface to fork a ROOT session into server/worker sessions; /// and exchange messages with them. Multiprocessing applications can build; /// on TMPClient and TMPWorker: the class providing multiprocess; /// functionalities to users should inherit (possibly privately) from; /// TMPClient, and the workers executing tasks should inherit from TMPWorker.; ///; //////////////////////////////////////////////////////////////////////////; //////////////////////////////////////////////////////////////////////////; /// Class constructor.; /// \param nWorkers; /// \parblock; /// the number of children processes that will be created by; /// Fork, i.e. the number of workers that will be available after this call.; /// The default value (0) means that a number of workers equal to the number; /// of cores of the machine is going to be spawned. If that information is; /// not available, 2 workers are created instead.; /// \endparblock",MatchSource.CODE_COMMENT,core/multiproc/src/TMPClient.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx:268,Integrability,message,messages,268,"//////////////////////////////////////////////////////////////////////////; ///; /// \class TMPClient; ///; /// Base class for multiprocess applications' clients. It provides a; /// simple interface to fork a ROOT session into server/worker sessions; /// and exchange messages with them. Multiprocessing applications can build; /// on TMPClient and TMPWorker: the class providing multiprocess; /// functionalities to users should inherit (possibly privately) from; /// TMPClient, and the workers executing tasks should inherit from TMPWorker.; ///; //////////////////////////////////////////////////////////////////////////; //////////////////////////////////////////////////////////////////////////; /// Class constructor.; /// \param nWorkers; /// \parblock; /// the number of children processes that will be created by; /// Fork, i.e. the number of workers that will be available after this call.; /// The default value (0) means that a number of workers equal to the number; /// of cores of the machine is going to be spawned. If that information is; /// not available, 2 workers are created instead.; /// \endparblock",MatchSource.CODE_COMMENT,core/multiproc/src/TMPClient.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx:430,Modifiability,inherit,inherit,430,"//////////////////////////////////////////////////////////////////////////; ///; /// \class TMPClient; ///; /// Base class for multiprocess applications' clients. It provides a; /// simple interface to fork a ROOT session into server/worker sessions; /// and exchange messages with them. Multiprocessing applications can build; /// on TMPClient and TMPWorker: the class providing multiprocess; /// functionalities to users should inherit (possibly privately) from; /// TMPClient, and the workers executing tasks should inherit from TMPWorker.; ///; //////////////////////////////////////////////////////////////////////////; //////////////////////////////////////////////////////////////////////////; /// Class constructor.; /// \param nWorkers; /// \parblock; /// the number of children processes that will be created by; /// Fork, i.e. the number of workers that will be available after this call.; /// The default value (0) means that a number of workers equal to the number; /// of cores of the machine is going to be spawned. If that information is; /// not available, 2 workers are created instead.; /// \endparblock",MatchSource.CODE_COMMENT,core/multiproc/src/TMPClient.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx:519,Modifiability,inherit,inherit,519,"//////////////////////////////////////////////////////////////////////////; ///; /// \class TMPClient; ///; /// Base class for multiprocess applications' clients. It provides a; /// simple interface to fork a ROOT session into server/worker sessions; /// and exchange messages with them. Multiprocessing applications can build; /// on TMPClient and TMPWorker: the class providing multiprocess; /// functionalities to users should inherit (possibly privately) from; /// TMPClient, and the workers executing tasks should inherit from TMPWorker.; ///; //////////////////////////////////////////////////////////////////////////; //////////////////////////////////////////////////////////////////////////; /// Class constructor.; /// \param nWorkers; /// \parblock; /// the number of children processes that will be created by; /// Fork, i.e. the number of workers that will be available after this call.; /// The default value (0) means that a number of workers equal to the number; /// of cores of the machine is going to be spawned. If that information is; /// not available, 2 workers are created instead.; /// \endparblock",MatchSource.CODE_COMMENT,core/multiproc/src/TMPClient.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx:182,Usability,simpl,simple,182,"//////////////////////////////////////////////////////////////////////////; ///; /// \class TMPClient; ///; /// Base class for multiprocess applications' clients. It provides a; /// simple interface to fork a ROOT session into server/worker sessions; /// and exchange messages with them. Multiprocessing applications can build; /// on TMPClient and TMPWorker: the class providing multiprocess; /// functionalities to users should inherit (possibly privately) from; /// TMPClient, and the workers executing tasks should inherit from TMPWorker.; ///; //////////////////////////////////////////////////////////////////////////; //////////////////////////////////////////////////////////////////////////; /// Class constructor.; /// \param nWorkers; /// \parblock; /// the number of children processes that will be created by; /// Fork, i.e. the number of workers that will be available after this call.; /// The default value (0) means that a number of workers equal to the number; /// of cores of the machine is going to be spawned. If that information is; /// not available, 2 workers are created instead.; /// \endparblock",MatchSource.CODE_COMMENT,core/multiproc/src/TMPClient.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx:140,Availability,down,down,140,"//////////////////////////////////////////////////////////////////////////; /// Class destructor.; /// This method is in charge of shutting down any remaining worker,; /// closing off connections and reap the terminated children processes.",MatchSource.CODE_COMMENT,core/multiproc/src/TMPClient.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx:121,Energy Efficiency,charge,charge,121,"//////////////////////////////////////////////////////////////////////////; /// Class destructor.; /// This method is in charge of shutting down any remaining worker,; /// closing off connections and reap the terminated children processes.",MatchSource.CODE_COMMENT,core/multiproc/src/TMPClient.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx:25,Deployability,release,release,25,"/// Class to acquire and release the Python GIL where it applies, i.e.; /// if libPython is loaded and the interpreter is initialized.",MatchSource.CODE_COMMENT,core/multiproc/src/TMPClient.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx:92,Performance,load,loaded,92,"/// Class to acquire and release the Python GIL where it applies, i.e.; /// if libPython is loaded and the interpreter is initialized.",MatchSource.CODE_COMMENT,core/multiproc/src/TMPClient.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx:548,Integrability,message,messages,548,"//////////////////////////////////////////////////////////////////////////; /// This method forks the ROOT session into fNWorkers children processes.; /// The ROOT sessions spawned in this way will not have graphical; /// capabilities and will not read from standard input, but will be; /// connected to the original (interactive) session through TSockets.; /// The children processes' PIDs are added to the fWorkerPids vector.; /// The parent session can then communicate with the children using the; /// Broadcast and MPSend methods, and receive messages through MPRecv.\n; /// \param server; /// \parblock; /// A pointer to an instance of the class that will take control; /// of the subprocesses after forking. Applications should implement their; /// own class inheriting from TMPWorker. Behaviour can be customized; /// overriding TMPWorker::HandleInput.; /// \endparblock; /// \return true if Fork succeeded, false otherwise",MatchSource.CODE_COMMENT,core/multiproc/src/TMPClient.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx:766,Modifiability,inherit,inheriting,766,"//////////////////////////////////////////////////////////////////////////; /// This method forks the ROOT session into fNWorkers children processes.; /// The ROOT sessions spawned in this way will not have graphical; /// capabilities and will not read from standard input, but will be; /// connected to the original (interactive) session through TSockets.; /// The children processes' PIDs are added to the fWorkerPids vector.; /// The parent session can then communicate with the children using the; /// Broadcast and MPSend methods, and receive messages through MPRecv.\n; /// \param server; /// \parblock; /// A pointer to an instance of the class that will take control; /// of the subprocesses after forking. Applications should implement their; /// own class inheriting from TMPWorker. Behaviour can be customized; /// overriding TMPWorker::HandleInput.; /// \endparblock; /// \return true if Fork succeeded, false otherwise",MatchSource.CODE_COMMENT,core/multiproc/src/TMPClient.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx:87,Integrability,message,message,87,"//////////////////////////////////////////////////////////////////////////; /// Send a message with the specified code to at most nMessages workers.; /// Sockets can either be in an ""active"" or ""non-active"" state. This method; /// activates all the sockets through which the client is connected to the; /// workers, and deactivates them when a message is sent to the corresponding; /// worker. This way the sockets pertaining to workers who have been left; /// idle will be the only ones in the active list; /// (TSocket::GetMonitor()->GetListOfActives()) after execution.; /// \param code the code to send (e.g. EMPCode); /// \param nMessages; /// \parblock; /// the maximum number of messages to send.; /// If `nMessages == 0 || nMessage > fNWorkers`, send a message to every worker.; /// \endparblock; /// \return the number of messages successfully sent",MatchSource.CODE_COMMENT,core/multiproc/src/TMPClient.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx:344,Integrability,message,message,344,"//////////////////////////////////////////////////////////////////////////; /// Send a message with the specified code to at most nMessages workers.; /// Sockets can either be in an ""active"" or ""non-active"" state. This method; /// activates all the sockets through which the client is connected to the; /// workers, and deactivates them when a message is sent to the corresponding; /// worker. This way the sockets pertaining to workers who have been left; /// idle will be the only ones in the active list; /// (TSocket::GetMonitor()->GetListOfActives()) after execution.; /// \param code the code to send (e.g. EMPCode); /// \param nMessages; /// \parblock; /// the maximum number of messages to send.; /// If `nMessages == 0 || nMessage > fNWorkers`, send a message to every worker.; /// \endparblock; /// \return the number of messages successfully sent",MatchSource.CODE_COMMENT,core/multiproc/src/TMPClient.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx:686,Integrability,message,messages,686,"//////////////////////////////////////////////////////////////////////////; /// Send a message with the specified code to at most nMessages workers.; /// Sockets can either be in an ""active"" or ""non-active"" state. This method; /// activates all the sockets through which the client is connected to the; /// workers, and deactivates them when a message is sent to the corresponding; /// worker. This way the sockets pertaining to workers who have been left; /// idle will be the only ones in the active list; /// (TSocket::GetMonitor()->GetListOfActives()) after execution.; /// \param code the code to send (e.g. EMPCode); /// \param nMessages; /// \parblock; /// the maximum number of messages to send.; /// If `nMessages == 0 || nMessage > fNWorkers`, send a message to every worker.; /// \endparblock; /// \return the number of messages successfully sent",MatchSource.CODE_COMMENT,core/multiproc/src/TMPClient.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx:761,Integrability,message,message,761,"//////////////////////////////////////////////////////////////////////////; /// Send a message with the specified code to at most nMessages workers.; /// Sockets can either be in an ""active"" or ""non-active"" state. This method; /// activates all the sockets through which the client is connected to the; /// workers, and deactivates them when a message is sent to the corresponding; /// worker. This way the sockets pertaining to workers who have been left; /// idle will be the only ones in the active list; /// (TSocket::GetMonitor()->GetListOfActives()) after execution.; /// \param code the code to send (e.g. EMPCode); /// \param nMessages; /// \parblock; /// the maximum number of messages to send.; /// If `nMessages == 0 || nMessage > fNWorkers`, send a message to every worker.; /// \endparblock; /// \return the number of messages successfully sent",MatchSource.CODE_COMMENT,core/multiproc/src/TMPClient.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx:831,Integrability,message,messages,831,"//////////////////////////////////////////////////////////////////////////; /// Send a message with the specified code to at most nMessages workers.; /// Sockets can either be in an ""active"" or ""non-active"" state. This method; /// activates all the sockets through which the client is connected to the; /// workers, and deactivates them when a message is sent to the corresponding; /// worker. This way the sockets pertaining to workers who have been left; /// idle will be the only ones in the active list; /// (TSocket::GetMonitor()->GetListOfActives()) after execution.; /// \param code the code to send (e.g. EMPCode); /// \param nMessages; /// \parblock; /// the maximum number of messages to send.; /// If `nMessages == 0 || nMessage > fNWorkers`, send a message to every worker.; /// \endparblock; /// \return the number of messages successfully sent",MatchSource.CODE_COMMENT,core/multiproc/src/TMPClient.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx:7,Integrability,message,message,7,"//send message to all sockets",MatchSource.CODE_COMMENT,core/multiproc/src/TMPClient.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx:147,Energy Efficiency,monitor,monitor,147,"//////////////////////////////////////////////////////////////////////////; /// DeActivate a certain socket.; /// This does not remove it from the monitor: it will be reactivated by; /// the next call to Broadcast() (or possibly other methods that are; /// specified to do so).\n; /// A socket should be DeActivated when the corresponding; /// worker is done *for now* and we want to stop listening to this worker's; /// socket. If the worker is done *forever*, Remove() should be used instead.; /// \param s the socket to be deactivated",MatchSource.CODE_COMMENT,core/multiproc/src/TMPClient.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx:113,Energy Efficiency,monitor,monitor,113,"//////////////////////////////////////////////////////////////////////////; /// Remove a certain socket from the monitor.; /// A socket should be Removed from the monitor when the; /// corresponding worker is done *forever*. For example HandleMPCode(); /// calls this method on sockets pertaining to workers which sent an; /// MPCode::kShutdownNotice.\n; /// If the worker is done *for now*, DeActivate should be used instead.; /// \param s the socket to be removed from the monitor fMon",MatchSource.CODE_COMMENT,core/multiproc/src/TMPClient.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx:163,Energy Efficiency,monitor,monitor,163,"//////////////////////////////////////////////////////////////////////////; /// Remove a certain socket from the monitor.; /// A socket should be Removed from the monitor when the; /// corresponding worker is done *forever*. For example HandleMPCode(); /// calls this method on sockets pertaining to workers which sent an; /// MPCode::kShutdownNotice.\n; /// If the worker is done *for now*, DeActivate should be used instead.; /// \param s the socket to be removed from the monitor fMon",MatchSource.CODE_COMMENT,core/multiproc/src/TMPClient.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx:475,Energy Efficiency,monitor,monitor,475,"//////////////////////////////////////////////////////////////////////////; /// Remove a certain socket from the monitor.; /// A socket should be Removed from the monitor when the; /// corresponding worker is done *forever*. For example HandleMPCode(); /// calls this method on sockets pertaining to workers which sent an; /// MPCode::kShutdownNotice.\n; /// If the worker is done *for now*, DeActivate should be used instead.; /// \param s the socket to be removed from the monitor fMon",MatchSource.CODE_COMMENT,core/multiproc/src/TMPClient.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx:87,Integrability,message,messages,87,"//////////////////////////////////////////////////////////////////////////; /// Handle messages containing an EMPCode.; /// This method should be called upon receiving a message with a code >= 1000; /// (i.e. EMPCode). It handles the most generic types of messages.\n; /// Classes inheriting from TMPClient should implement a similar method; /// to handle message codes specific to the application they're part of.\n; /// \param msg the MPCodeBufPair returned by a MPRecv call; /// \param s; /// \parblock; /// a pointer to the socket from which the message has been received is passed.; /// This way HandleMPCode knows which socket to reply on.; /// \endparblock",MatchSource.CODE_COMMENT,core/multiproc/src/TMPClient.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx:170,Integrability,message,message,170,"//////////////////////////////////////////////////////////////////////////; /// Handle messages containing an EMPCode.; /// This method should be called upon receiving a message with a code >= 1000; /// (i.e. EMPCode). It handles the most generic types of messages.\n; /// Classes inheriting from TMPClient should implement a similar method; /// to handle message codes specific to the application they're part of.\n; /// \param msg the MPCodeBufPair returned by a MPRecv call; /// \param s; /// \parblock; /// a pointer to the socket from which the message has been received is passed.; /// This way HandleMPCode knows which socket to reply on.; /// \endparblock",MatchSource.CODE_COMMENT,core/multiproc/src/TMPClient.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx:256,Integrability,message,messages,256,"//////////////////////////////////////////////////////////////////////////; /// Handle messages containing an EMPCode.; /// This method should be called upon receiving a message with a code >= 1000; /// (i.e. EMPCode). It handles the most generic types of messages.\n; /// Classes inheriting from TMPClient should implement a similar method; /// to handle message codes specific to the application they're part of.\n; /// \param msg the MPCodeBufPair returned by a MPRecv call; /// \param s; /// \parblock; /// a pointer to the socket from which the message has been received is passed.; /// This way HandleMPCode knows which socket to reply on.; /// \endparblock",MatchSource.CODE_COMMENT,core/multiproc/src/TMPClient.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx:356,Integrability,message,message,356,"//////////////////////////////////////////////////////////////////////////; /// Handle messages containing an EMPCode.; /// This method should be called upon receiving a message with a code >= 1000; /// (i.e. EMPCode). It handles the most generic types of messages.\n; /// Classes inheriting from TMPClient should implement a similar method; /// to handle message codes specific to the application they're part of.\n; /// \param msg the MPCodeBufPair returned by a MPRecv call; /// \param s; /// \parblock; /// a pointer to the socket from which the message has been received is passed.; /// This way HandleMPCode knows which socket to reply on.; /// \endparblock",MatchSource.CODE_COMMENT,core/multiproc/src/TMPClient.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx:550,Integrability,message,message,550,"//////////////////////////////////////////////////////////////////////////; /// Handle messages containing an EMPCode.; /// This method should be called upon receiving a message with a code >= 1000; /// (i.e. EMPCode). It handles the most generic types of messages.\n; /// Classes inheriting from TMPClient should implement a similar method; /// to handle message codes specific to the application they're part of.\n; /// \param msg the MPCodeBufPair returned by a MPRecv call; /// \param s; /// \parblock; /// a pointer to the socket from which the message has been received is passed.; /// This way HandleMPCode knows which socket to reply on.; /// \endparblock",MatchSource.CODE_COMMENT,core/multiproc/src/TMPClient.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx:281,Modifiability,inherit,inheriting,281,"//////////////////////////////////////////////////////////////////////////; /// Handle messages containing an EMPCode.; /// This method should be called upon receiving a message with a code >= 1000; /// (i.e. EMPCode). It handles the most generic types of messages.\n; /// Classes inheriting from TMPClient should implement a similar method; /// to handle message codes specific to the application they're part of.\n; /// \param msg the MPCodeBufPair returned by a MPRecv call; /// \param s; /// \parblock; /// a pointer to the socket from which the message has been received is passed.; /// This way HandleMPCode knows which socket to reply on.; /// \endparblock",MatchSource.CODE_COMMENT,core/multiproc/src/TMPClient.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx:2,Integrability,message,message,2,"//message contains server's pid. retrieve it",MatchSource.CODE_COMMENT,core/multiproc/src/TMPClient.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx:171,Integrability,message,messages,171,"//////////////////////////////////////////////////////////////////////////; ///; /// \class TMPWorker; ///; /// This class works in conjuction with TMPClient, reacting to messages; /// received from it as specified by the Notify and HandleInput methods.; /// When TMPClient::Fork is called, a TMPWorker instance is passed to it; /// which will take control of the ROOT session in the children processes.; ///; /// After forking, every time a message is sent or broadcast to the workers,; /// TMPWorker::Notify is called and the message is retrieved.; /// Messages exchanged between TMPClient and TMPWorker should be sent with; /// the MPSend() standalone function.\n; /// If the code of the message received is above 1000 (i.e. it is an MPCode); /// the qualified TMPWorker::HandleInput method is called, that takes care; /// of handling the most generic type of messages. Otherwise the unqualified; /// (possibly overridden) version of HandleInput is called, allowing classes; /// that inherit from TMPWorker to manage their own protocol.\n; /// An application's worker class should inherit from TMPWorker and implement; /// a HandleInput method that overrides TMPWorker's.\n; ///; //////////////////////////////////////////////////////////////////////////; //////////////////////////////////////////////////////////////////////////; /// This method is called by children processes right after forking.; /// Initialization of worker properties that must be delayed until after; /// forking must be done here.\n; /// For example, Init saves the pid into fPid, and adds the TMPWorker to; /// the main eventloop (as a TFileHandler).\n; /// Make sure this operations are performed also by overriding implementations,; /// e.g. by calling TMPWorker::Init explicitly.",MatchSource.CODE_COMMENT,core/multiproc/src/TMPWorker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx:442,Integrability,message,message,442,"//////////////////////////////////////////////////////////////////////////; ///; /// \class TMPWorker; ///; /// This class works in conjuction with TMPClient, reacting to messages; /// received from it as specified by the Notify and HandleInput methods.; /// When TMPClient::Fork is called, a TMPWorker instance is passed to it; /// which will take control of the ROOT session in the children processes.; ///; /// After forking, every time a message is sent or broadcast to the workers,; /// TMPWorker::Notify is called and the message is retrieved.; /// Messages exchanged between TMPClient and TMPWorker should be sent with; /// the MPSend() standalone function.\n; /// If the code of the message received is above 1000 (i.e. it is an MPCode); /// the qualified TMPWorker::HandleInput method is called, that takes care; /// of handling the most generic type of messages. Otherwise the unqualified; /// (possibly overridden) version of HandleInput is called, allowing classes; /// that inherit from TMPWorker to manage their own protocol.\n; /// An application's worker class should inherit from TMPWorker and implement; /// a HandleInput method that overrides TMPWorker's.\n; ///; //////////////////////////////////////////////////////////////////////////; //////////////////////////////////////////////////////////////////////////; /// This method is called by children processes right after forking.; /// Initialization of worker properties that must be delayed until after; /// forking must be done here.\n; /// For example, Init saves the pid into fPid, and adds the TMPWorker to; /// the main eventloop (as a TFileHandler).\n; /// Make sure this operations are performed also by overriding implementations,; /// e.g. by calling TMPWorker::Init explicitly.",MatchSource.CODE_COMMENT,core/multiproc/src/TMPWorker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx:528,Integrability,message,message,528,"//////////////////////////////////////////////////////////////////////////; ///; /// \class TMPWorker; ///; /// This class works in conjuction with TMPClient, reacting to messages; /// received from it as specified by the Notify and HandleInput methods.; /// When TMPClient::Fork is called, a TMPWorker instance is passed to it; /// which will take control of the ROOT session in the children processes.; ///; /// After forking, every time a message is sent or broadcast to the workers,; /// TMPWorker::Notify is called and the message is retrieved.; /// Messages exchanged between TMPClient and TMPWorker should be sent with; /// the MPSend() standalone function.\n; /// If the code of the message received is above 1000 (i.e. it is an MPCode); /// the qualified TMPWorker::HandleInput method is called, that takes care; /// of handling the most generic type of messages. Otherwise the unqualified; /// (possibly overridden) version of HandleInput is called, allowing classes; /// that inherit from TMPWorker to manage their own protocol.\n; /// An application's worker class should inherit from TMPWorker and implement; /// a HandleInput method that overrides TMPWorker's.\n; ///; //////////////////////////////////////////////////////////////////////////; //////////////////////////////////////////////////////////////////////////; /// This method is called by children processes right after forking.; /// Initialization of worker properties that must be delayed until after; /// forking must be done here.\n; /// For example, Init saves the pid into fPid, and adds the TMPWorker to; /// the main eventloop (as a TFileHandler).\n; /// Make sure this operations are performed also by overriding implementations,; /// e.g. by calling TMPWorker::Init explicitly.",MatchSource.CODE_COMMENT,core/multiproc/src/TMPWorker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx:555,Integrability,Message,Messages,555,"//////////////////////////////////////////////////////////////////////////; ///; /// \class TMPWorker; ///; /// This class works in conjuction with TMPClient, reacting to messages; /// received from it as specified by the Notify and HandleInput methods.; /// When TMPClient::Fork is called, a TMPWorker instance is passed to it; /// which will take control of the ROOT session in the children processes.; ///; /// After forking, every time a message is sent or broadcast to the workers,; /// TMPWorker::Notify is called and the message is retrieved.; /// Messages exchanged between TMPClient and TMPWorker should be sent with; /// the MPSend() standalone function.\n; /// If the code of the message received is above 1000 (i.e. it is an MPCode); /// the qualified TMPWorker::HandleInput method is called, that takes care; /// of handling the most generic type of messages. Otherwise the unqualified; /// (possibly overridden) version of HandleInput is called, allowing classes; /// that inherit from TMPWorker to manage their own protocol.\n; /// An application's worker class should inherit from TMPWorker and implement; /// a HandleInput method that overrides TMPWorker's.\n; ///; //////////////////////////////////////////////////////////////////////////; //////////////////////////////////////////////////////////////////////////; /// This method is called by children processes right after forking.; /// Initialization of worker properties that must be delayed until after; /// forking must be done here.\n; /// For example, Init saves the pid into fPid, and adds the TMPWorker to; /// the main eventloop (as a TFileHandler).\n; /// Make sure this operations are performed also by overriding implementations,; /// e.g. by calling TMPWorker::Init explicitly.",MatchSource.CODE_COMMENT,core/multiproc/src/TMPWorker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx:691,Integrability,message,message,691,"//////////////////////////////////////////////////////////////////////////; ///; /// \class TMPWorker; ///; /// This class works in conjuction with TMPClient, reacting to messages; /// received from it as specified by the Notify and HandleInput methods.; /// When TMPClient::Fork is called, a TMPWorker instance is passed to it; /// which will take control of the ROOT session in the children processes.; ///; /// After forking, every time a message is sent or broadcast to the workers,; /// TMPWorker::Notify is called and the message is retrieved.; /// Messages exchanged between TMPClient and TMPWorker should be sent with; /// the MPSend() standalone function.\n; /// If the code of the message received is above 1000 (i.e. it is an MPCode); /// the qualified TMPWorker::HandleInput method is called, that takes care; /// of handling the most generic type of messages. Otherwise the unqualified; /// (possibly overridden) version of HandleInput is called, allowing classes; /// that inherit from TMPWorker to manage their own protocol.\n; /// An application's worker class should inherit from TMPWorker and implement; /// a HandleInput method that overrides TMPWorker's.\n; ///; //////////////////////////////////////////////////////////////////////////; //////////////////////////////////////////////////////////////////////////; /// This method is called by children processes right after forking.; /// Initialization of worker properties that must be delayed until after; /// forking must be done here.\n; /// For example, Init saves the pid into fPid, and adds the TMPWorker to; /// the main eventloop (as a TFileHandler).\n; /// Make sure this operations are performed also by overriding implementations,; /// e.g. by calling TMPWorker::Init explicitly.",MatchSource.CODE_COMMENT,core/multiproc/src/TMPWorker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx:863,Integrability,message,messages,863,"//////////////////////////////////////////////////////////////////////////; ///; /// \class TMPWorker; ///; /// This class works in conjuction with TMPClient, reacting to messages; /// received from it as specified by the Notify and HandleInput methods.; /// When TMPClient::Fork is called, a TMPWorker instance is passed to it; /// which will take control of the ROOT session in the children processes.; ///; /// After forking, every time a message is sent or broadcast to the workers,; /// TMPWorker::Notify is called and the message is retrieved.; /// Messages exchanged between TMPClient and TMPWorker should be sent with; /// the MPSend() standalone function.\n; /// If the code of the message received is above 1000 (i.e. it is an MPCode); /// the qualified TMPWorker::HandleInput method is called, that takes care; /// of handling the most generic type of messages. Otherwise the unqualified; /// (possibly overridden) version of HandleInput is called, allowing classes; /// that inherit from TMPWorker to manage their own protocol.\n; /// An application's worker class should inherit from TMPWorker and implement; /// a HandleInput method that overrides TMPWorker's.\n; ///; //////////////////////////////////////////////////////////////////////////; //////////////////////////////////////////////////////////////////////////; /// This method is called by children processes right after forking.; /// Initialization of worker properties that must be delayed until after; /// forking must be done here.\n; /// For example, Init saves the pid into fPid, and adds the TMPWorker to; /// the main eventloop (as a TFileHandler).\n; /// Make sure this operations are performed also by overriding implementations,; /// e.g. by calling TMPWorker::Init explicitly.",MatchSource.CODE_COMMENT,core/multiproc/src/TMPWorker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx:1030,Integrability,protocol,protocol,1030,"//////////////////////////////////////////////////////////////////////////; ///; /// \class TMPWorker; ///; /// This class works in conjuction with TMPClient, reacting to messages; /// received from it as specified by the Notify and HandleInput methods.; /// When TMPClient::Fork is called, a TMPWorker instance is passed to it; /// which will take control of the ROOT session in the children processes.; ///; /// After forking, every time a message is sent or broadcast to the workers,; /// TMPWorker::Notify is called and the message is retrieved.; /// Messages exchanged between TMPClient and TMPWorker should be sent with; /// the MPSend() standalone function.\n; /// If the code of the message received is above 1000 (i.e. it is an MPCode); /// the qualified TMPWorker::HandleInput method is called, that takes care; /// of handling the most generic type of messages. Otherwise the unqualified; /// (possibly overridden) version of HandleInput is called, allowing classes; /// that inherit from TMPWorker to manage their own protocol.\n; /// An application's worker class should inherit from TMPWorker and implement; /// a HandleInput method that overrides TMPWorker's.\n; ///; //////////////////////////////////////////////////////////////////////////; //////////////////////////////////////////////////////////////////////////; /// This method is called by children processes right after forking.; /// Initialization of worker properties that must be delayed until after; /// forking must be done here.\n; /// For example, Init saves the pid into fPid, and adds the TMPWorker to; /// the main eventloop (as a TFileHandler).\n; /// Make sure this operations are performed also by overriding implementations,; /// e.g. by calling TMPWorker::Init explicitly.",MatchSource.CODE_COMMENT,core/multiproc/src/TMPWorker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx:987,Modifiability,inherit,inherit,987,"//////////////////////////////////////////////////////////////////////////; ///; /// \class TMPWorker; ///; /// This class works in conjuction with TMPClient, reacting to messages; /// received from it as specified by the Notify and HandleInput methods.; /// When TMPClient::Fork is called, a TMPWorker instance is passed to it; /// which will take control of the ROOT session in the children processes.; ///; /// After forking, every time a message is sent or broadcast to the workers,; /// TMPWorker::Notify is called and the message is retrieved.; /// Messages exchanged between TMPClient and TMPWorker should be sent with; /// the MPSend() standalone function.\n; /// If the code of the message received is above 1000 (i.e. it is an MPCode); /// the qualified TMPWorker::HandleInput method is called, that takes care; /// of handling the most generic type of messages. Otherwise the unqualified; /// (possibly overridden) version of HandleInput is called, allowing classes; /// that inherit from TMPWorker to manage their own protocol.\n; /// An application's worker class should inherit from TMPWorker and implement; /// a HandleInput method that overrides TMPWorker's.\n; ///; //////////////////////////////////////////////////////////////////////////; //////////////////////////////////////////////////////////////////////////; /// This method is called by children processes right after forking.; /// Initialization of worker properties that must be delayed until after; /// forking must be done here.\n; /// For example, Init saves the pid into fPid, and adds the TMPWorker to; /// the main eventloop (as a TFileHandler).\n; /// Make sure this operations are performed also by overriding implementations,; /// e.g. by calling TMPWorker::Init explicitly.",MatchSource.CODE_COMMENT,core/multiproc/src/TMPWorker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx:1084,Modifiability,inherit,inherit,1084,"//////////////////////////////////////////////////////////////////////////; ///; /// \class TMPWorker; ///; /// This class works in conjuction with TMPClient, reacting to messages; /// received from it as specified by the Notify and HandleInput methods.; /// When TMPClient::Fork is called, a TMPWorker instance is passed to it; /// which will take control of the ROOT session in the children processes.; ///; /// After forking, every time a message is sent or broadcast to the workers,; /// TMPWorker::Notify is called and the message is retrieved.; /// Messages exchanged between TMPClient and TMPWorker should be sent with; /// the MPSend() standalone function.\n; /// If the code of the message received is above 1000 (i.e. it is an MPCode); /// the qualified TMPWorker::HandleInput method is called, that takes care; /// of handling the most generic type of messages. Otherwise the unqualified; /// (possibly overridden) version of HandleInput is called, allowing classes; /// that inherit from TMPWorker to manage their own protocol.\n; /// An application's worker class should inherit from TMPWorker and implement; /// a HandleInput method that overrides TMPWorker's.\n; ///; //////////////////////////////////////////////////////////////////////////; //////////////////////////////////////////////////////////////////////////; /// This method is called by children processes right after forking.; /// Initialization of worker properties that must be delayed until after; /// forking must be done here.\n; /// For example, Init saves the pid into fPid, and adds the TMPWorker to; /// the main eventloop (as a TFileHandler).\n; /// Make sure this operations are performed also by overriding implementations,; /// e.g. by calling TMPWorker::Init explicitly.",MatchSource.CODE_COMMENT,core/multiproc/src/TMPWorker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx:1668,Performance,perform,performed,1668,"//////////////////////////////////////////////////////////////////////////; ///; /// \class TMPWorker; ///; /// This class works in conjuction with TMPClient, reacting to messages; /// received from it as specified by the Notify and HandleInput methods.; /// When TMPClient::Fork is called, a TMPWorker instance is passed to it; /// which will take control of the ROOT session in the children processes.; ///; /// After forking, every time a message is sent or broadcast to the workers,; /// TMPWorker::Notify is called and the message is retrieved.; /// Messages exchanged between TMPClient and TMPWorker should be sent with; /// the MPSend() standalone function.\n; /// If the code of the message received is above 1000 (i.e. it is an MPCode); /// the qualified TMPWorker::HandleInput method is called, that takes care; /// of handling the most generic type of messages. Otherwise the unqualified; /// (possibly overridden) version of HandleInput is called, allowing classes; /// that inherit from TMPWorker to manage their own protocol.\n; /// An application's worker class should inherit from TMPWorker and implement; /// a HandleInput method that overrides TMPWorker's.\n; ///; //////////////////////////////////////////////////////////////////////////; //////////////////////////////////////////////////////////////////////////; /// This method is called by children processes right after forking.; /// Initialization of worker properties that must be delayed until after; /// forking must be done here.\n; /// For example, Init saves the pid into fPid, and adds the TMPWorker to; /// the main eventloop (as a TFileHandler).\n; /// Make sure this operations are performed also by overriding implementations,; /// e.g. by calling TMPWorker::Init explicitly.",MatchSource.CODE_COMMENT,core/multiproc/src/TMPWorker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx:89,Integrability,message,message,89,"//////////////////////////////////////////////////////////////////////////; /// Handle a message with an EMPCode.; /// This method is called upon receiving a message with a code >= 1000 (i.e.; /// EMPCode). It handles the most generic types of messages.\n; /// Classes inheriting from TMPWorker should implement their own HandleInput; /// function, that should be able to handle codes specific to that application.\n; /// The appropriate version of the HandleInput method (TMPWorker's or the; /// overriding version) is automatically called depending on the message code.",MatchSource.CODE_COMMENT,core/multiproc/src/TMPWorker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx:158,Integrability,message,message,158,"//////////////////////////////////////////////////////////////////////////; /// Handle a message with an EMPCode.; /// This method is called upon receiving a message with a code >= 1000 (i.e.; /// EMPCode). It handles the most generic types of messages.\n; /// Classes inheriting from TMPWorker should implement their own HandleInput; /// function, that should be able to handle codes specific to that application.\n; /// The appropriate version of the HandleInput method (TMPWorker's or the; /// overriding version) is automatically called depending on the message code.",MatchSource.CODE_COMMENT,core/multiproc/src/TMPWorker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx:244,Integrability,message,messages,244,"//////////////////////////////////////////////////////////////////////////; /// Handle a message with an EMPCode.; /// This method is called upon receiving a message with a code >= 1000 (i.e.; /// EMPCode). It handles the most generic types of messages.\n; /// Classes inheriting from TMPWorker should implement their own HandleInput; /// function, that should be able to handle codes specific to that application.\n; /// The appropriate version of the HandleInput method (TMPWorker's or the; /// overriding version) is automatically called depending on the message code.",MatchSource.CODE_COMMENT,core/multiproc/src/TMPWorker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx:541,Integrability,depend,depending,541,"//////////////////////////////////////////////////////////////////////////; /// Handle a message with an EMPCode.; /// This method is called upon receiving a message with a code >= 1000 (i.e.; /// EMPCode). It handles the most generic types of messages.\n; /// Classes inheriting from TMPWorker should implement their own HandleInput; /// function, that should be able to handle codes specific to that application.\n; /// The appropriate version of the HandleInput method (TMPWorker's or the; /// overriding version) is automatically called depending on the message code.",MatchSource.CODE_COMMENT,core/multiproc/src/TMPWorker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx:558,Integrability,message,message,558,"//////////////////////////////////////////////////////////////////////////; /// Handle a message with an EMPCode.; /// This method is called upon receiving a message with a code >= 1000 (i.e.; /// EMPCode). It handles the most generic types of messages.\n; /// Classes inheriting from TMPWorker should implement their own HandleInput; /// function, that should be able to handle codes specific to that application.\n; /// The appropriate version of the HandleInput method (TMPWorker's or the; /// overriding version) is automatically called depending on the message code.",MatchSource.CODE_COMMENT,core/multiproc/src/TMPWorker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx:269,Modifiability,inherit,inheriting,269,"//////////////////////////////////////////////////////////////////////////; /// Handle a message with an EMPCode.; /// This method is called upon receiving a message with a code >= 1000 (i.e.; /// EMPCode). It handles the most generic types of messages.\n; /// Classes inheriting from TMPWorker should implement their own HandleInput; /// function, that should be able to handle codes specific to that application.\n; /// The appropriate version of the HandleInput method (TMPWorker's or the; /// overriding version) is automatically called depending on the message code.",MatchSource.CODE_COMMENT,core/multiproc/src/TMPWorker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx:10,Integrability,message,message,10,"//general message, ignore it",MatchSource.CODE_COMMENT,core/multiproc/src/TMPWorker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx:10,Availability,error,error,10,"//general error, ignore it",MatchSource.CODE_COMMENT,core/multiproc/src/TMPWorker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx:80,Availability,Error,Error,80,"//////////////////////////////////////////////////////////////////////////; /// Error sender",MatchSource.CODE_COMMENT,core/multiproc/src/TMPWorker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TProcessExecutor.cxx:3334,Energy Efficiency,Reduce,ReduceObjects,3334,"//; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.; /// \endparblock; /// **Note:** in cases where the function to be executed takes more than; /// zero/one argument but all are fixed except zero/one, the function can be wrapped; /// in a lambda or via std::bind to give it the right signature.\n; /// **Note:** the user should take care of initializing random seeds differently in each; /// process (e.g. using the process id in the seed). Otherwise several parallel executions; /// might generate the same sequence of pseudo-random numbers.; ///; /// #### Return value:; /// An std::vector. The elements in the container; /// will be the objects returned by func.; ///; ///; /// #### Examples:; ///; /// ~~~{.cpp}; /// root[] ROOT::TProcessExecutor pool; auto hists = pool.Map(CreateHisto, 10);; /// root[] ROOT::TProcessExecutor pool(2); auto squares = pool.Map([](int a) { return a*a; }, {1,2,3});; /// ~~~; ///; /// ###ROOT::TProcessExecutor::MapReduce; /// This set of methods behaves exactly like Map, but takes an additional; /// function as a third argument. This function is applied to the set of; /// objects returned by the corresponding Map execution to ""squash"" them; /// into a single object.; ///; /// ####Examples:; /// ~~~{.cpp}; /// root[] ROOT::TProcessExecutor pool; auto ten = pool.MapReduce([]() { return 1; }, 10, [](const std::vector<int> &v) { return std::accumulate(v.begin(), v.end(), 0); }); /// root[] ROOT::TProcessExecutor pool; auto hist = pool.MapReduce(CreateAndFillHists, 10, PoolUtils::ReduceObjects);; /// ~~~; ///; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/multiproc/src/TProcessExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TProcessExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TProcessExecutor.cxx:182,Integrability,interface,interface,182,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::TProcessExecutor; /// \ingroup Parallelism; /// \brief This class provides a simple interface to execute the same task; /// multiple times in parallel, possibly with different arguments every; /// time.; ///; /// ###ROOT::TProcessExecutor::Map; /// This class inherits its interfaces from ROOT::TExecutor\n.; /// The two possible usages of the Map method are:\n; /// * Map(F func, unsigned nTimes): func is executed nTimes with no arguments; /// * Map(F func, T& args): func is executed on each element of the collection of arguments args; ///; /// For either signature, func is executed as many times as needed by a pool of; /// fNWorkers workers; the number of workers can be passed to the constructor; /// or set via SetNWorkers. It typically defaults to the number of cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included: ROOT::TProcessExecutor never; /// deletes what it returns, it simply forgets it.\n; /// **Note:** that the usage of ROOT::TProcessExecutor::Map is indicated only when the task to be; /// executed takes more than a few seconds, otherwise the overhead introduced; /// by Map will outrun the benefits of parallel execution on most machines.; ///; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.; /// \endparblock; /// **Note:** in cases where the function to be executed takes more than; /// zero/one argument but all are fixed except",MatchSource.CODE_COMMENT,core/multiproc/src/TProcessExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TProcessExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TProcessExecutor.cxx:371,Integrability,interface,interfaces,371,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::TProcessExecutor; /// \ingroup Parallelism; /// \brief This class provides a simple interface to execute the same task; /// multiple times in parallel, possibly with different arguments every; /// time.; ///; /// ###ROOT::TProcessExecutor::Map; /// This class inherits its interfaces from ROOT::TExecutor\n.; /// The two possible usages of the Map method are:\n; /// * Map(F func, unsigned nTimes): func is executed nTimes with no arguments; /// * Map(F func, T& args): func is executed on each element of the collection of arguments args; ///; /// For either signature, func is executed as many times as needed by a pool of; /// fNWorkers workers; the number of workers can be passed to the constructor; /// or set via SetNWorkers. It typically defaults to the number of cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included: ROOT::TProcessExecutor never; /// deletes what it returns, it simply forgets it.\n; /// **Note:** that the usage of ROOT::TProcessExecutor::Map is indicated only when the task to be; /// executed takes more than a few seconds, otherwise the overhead introduced; /// by Map will outrun the benefits of parallel execution on most machines.; ///; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.; /// \endparblock; /// **Note:** in cases where the function to be executed takes more than; /// zero/one argument but all are fixed except",MatchSource.CODE_COMMENT,core/multiproc/src/TProcessExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TProcessExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TProcessExecutor.cxx:2032,Integrability,wrap,wrapped,2032,"onsible for the deletion of any object that might; /// be created upon execution of func, returned objects included: ROOT::TProcessExecutor never; /// deletes what it returns, it simply forgets it.\n; /// **Note:** that the usage of ROOT::TProcessExecutor::Map is indicated only when the task to be; /// executed takes more than a few seconds, otherwise the overhead introduced; /// by Map will outrun the benefits of parallel execution on most machines.; ///; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.; /// \endparblock; /// **Note:** in cases where the function to be executed takes more than; /// zero/one argument but all are fixed except zero/one, the function can be wrapped; /// in a lambda or via std::bind to give it the right signature.\n; /// **Note:** the user should take care of initializing random seeds differently in each; /// process (e.g. using the process id in the seed). Otherwise several parallel executions; /// might generate the same sequence of pseudo-random numbers.; ///; /// #### Return value:; /// An std::vector. The elements in the container; /// will be the objects returned by func.; ///; ///; /// #### Examples:; ///; /// ~~~{.cpp}; /// root[] ROOT::TProcessExecutor pool; auto hists = pool.Map(CreateHisto, 10);; /// root[] ROOT::TProcessExecutor pool(2); auto squares = pool.Map([](int a) { return a*a; }, {1,2,3});; /// ~~~; ///; /// ###ROOT::TProcessExecutor::MapReduce; /// This set of methods behaves exactly like Map, but takes an additional; /// function as a third argument. This function is applied to the set of; /// objects returned by the corresponding Map execution to ""squa",MatchSource.CODE_COMMENT,core/multiproc/src/TProcessExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TProcessExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TProcessExecutor.cxx:358,Modifiability,inherit,inherits,358,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::TProcessExecutor; /// \ingroup Parallelism; /// \brief This class provides a simple interface to execute the same task; /// multiple times in parallel, possibly with different arguments every; /// time.; ///; /// ###ROOT::TProcessExecutor::Map; /// This class inherits its interfaces from ROOT::TExecutor\n.; /// The two possible usages of the Map method are:\n; /// * Map(F func, unsigned nTimes): func is executed nTimes with no arguments; /// * Map(F func, T& args): func is executed on each element of the collection of arguments args; ///; /// For either signature, func is executed as many times as needed by a pool of; /// fNWorkers workers; the number of workers can be passed to the constructor; /// or set via SetNWorkers. It typically defaults to the number of cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included: ROOT::TProcessExecutor never; /// deletes what it returns, it simply forgets it.\n; /// **Note:** that the usage of ROOT::TProcessExecutor::Map is indicated only when the task to be; /// executed takes more than a few seconds, otherwise the overhead introduced; /// by Map will outrun the benefits of parallel execution on most machines.; ///; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.; /// \endparblock; /// **Note:** in cases where the function to be executed takes more than; /// zero/one argument but all are fixed except",MatchSource.CODE_COMMENT,core/multiproc/src/TProcessExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TProcessExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TProcessExecutor.cxx:175,Usability,simpl,simple,175,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::TProcessExecutor; /// \ingroup Parallelism; /// \brief This class provides a simple interface to execute the same task; /// multiple times in parallel, possibly with different arguments every; /// time.; ///; /// ###ROOT::TProcessExecutor::Map; /// This class inherits its interfaces from ROOT::TExecutor\n.; /// The two possible usages of the Map method are:\n; /// * Map(F func, unsigned nTimes): func is executed nTimes with no arguments; /// * Map(F func, T& args): func is executed on each element of the collection of arguments args; ///; /// For either signature, func is executed as many times as needed by a pool of; /// fNWorkers workers; the number of workers can be passed to the constructor; /// or set via SetNWorkers. It typically defaults to the number of cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included: ROOT::TProcessExecutor never; /// deletes what it returns, it simply forgets it.\n; /// **Note:** that the usage of ROOT::TProcessExecutor::Map is indicated only when the task to be; /// executed takes more than a few seconds, otherwise the overhead introduced; /// by Map will outrun the benefits of parallel execution on most machines.; ///; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.; /// \endparblock; /// **Note:** in cases where the function to be executed takes more than; /// zero/one argument but all are fixed except",MatchSource.CODE_COMMENT,core/multiproc/src/TProcessExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TProcessExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TProcessExecutor.cxx:1162,Usability,simpl,simply,1162,"//////////; ///; /// \class ROOT::TProcessExecutor; /// \ingroup Parallelism; /// \brief This class provides a simple interface to execute the same task; /// multiple times in parallel, possibly with different arguments every; /// time.; ///; /// ###ROOT::TProcessExecutor::Map; /// This class inherits its interfaces from ROOT::TExecutor\n.; /// The two possible usages of the Map method are:\n; /// * Map(F func, unsigned nTimes): func is executed nTimes with no arguments; /// * Map(F func, T& args): func is executed on each element of the collection of arguments args; ///; /// For either signature, func is executed as many times as needed by a pool of; /// fNWorkers workers; the number of workers can be passed to the constructor; /// or set via SetNWorkers. It typically defaults to the number of cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included: ROOT::TProcessExecutor never; /// deletes what it returns, it simply forgets it.\n; /// **Note:** that the usage of ROOT::TProcessExecutor::Map is indicated only when the task to be; /// executed takes more than a few seconds, otherwise the overhead introduced; /// by Map will outrun the benefits of parallel execution on most machines.; ///; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.; /// \endparblock; /// **Note:** in cases where the function to be executed takes more than; /// zero/one argument but all are fixed except zero/one, the function can be wrapped; /// in a lambda or via s",MatchSource.CODE_COMMENT,core/multiproc/src/TProcessExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TProcessExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/newdelete/src/NewDelete.cxx:2098,Availability,error,error,2098,"e statistics //; // gathering and an easy way to access shared memory segments. //; // Memory checking is by default enabled and usage statistics is //; // gathered. Using the resource (in .rootrc): Root.MemStat one can //; // toggle statistics gathering on or off. More specifically on can trap //; // the allocation of a block of memory of a certain size. This can be //; // specified using the resource: Root.MemStat.size, using the resource //; // Root.MemStat.cnt one can specify after how many allocations of //; // this size the trap should occur. //; // Set the compile option R__NOSTATS to de-activate all memory checking //; // statistics gathering in the system. //; // //; // When memory checking is enabled the following happens during //; // allocation: //; // - each allocation results in the allocation of 9 extra bytes: //; // 2 words in front and 1 byte at the end of the memory chunck //; // returned to the caller. //; // - the allocated memory is set to 0. //; // - the size of the chunck is stored in the first word. The second //; // word is left empty (for alignment). //; // - the last byte is initialized to MEM_MAGIC. //; // //; // And during de-allocation this happens: //; // - first the size if the block is checked. It should be >0 and //; // <= than any block allocated up to that moment. If not a Fatal //; // error is generated. //; // - the MEM_MAGIC byte at the end of the block is checked. When not //; // there, the memory has been overwritten and a Fatal error is //; // generated. //; // - memory block is reset to 0. //; // //; // Although this does not replace powerful tools like Purify, it is a //; // good first line of protection. //; // //; // Independent of any compile option settings the new, and ReAlloc //; // functions always set the memory to 0. //; // //; // The powerful MEM_DEBUG and MEM_STAT macros were originally borrowed //; // from the ET++ framework. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/newdelete/src/NewDelete.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/newdelete/src/NewDelete.cxx
https://github.com/root-project/root/tree/v6-32-06/core/newdelete/src/NewDelete.cxx:2249,Availability,error,error,2249,"e statistics //; // gathering and an easy way to access shared memory segments. //; // Memory checking is by default enabled and usage statistics is //; // gathered. Using the resource (in .rootrc): Root.MemStat one can //; // toggle statistics gathering on or off. More specifically on can trap //; // the allocation of a block of memory of a certain size. This can be //; // specified using the resource: Root.MemStat.size, using the resource //; // Root.MemStat.cnt one can specify after how many allocations of //; // this size the trap should occur. //; // Set the compile option R__NOSTATS to de-activate all memory checking //; // statistics gathering in the system. //; // //; // When memory checking is enabled the following happens during //; // allocation: //; // - each allocation results in the allocation of 9 extra bytes: //; // 2 words in front and 1 byte at the end of the memory chunck //; // returned to the caller. //; // - the allocated memory is set to 0. //; // - the size of the chunck is stored in the first word. The second //; // word is left empty (for alignment). //; // - the last byte is initialized to MEM_MAGIC. //; // //; // And during de-allocation this happens: //; // - first the size if the block is checked. It should be >0 and //; // <= than any block allocated up to that moment. If not a Fatal //; // error is generated. //; // - the MEM_MAGIC byte at the end of the block is checked. When not //; // there, the memory has been overwritten and a Fatal error is //; // generated. //; // - memory block is reset to 0. //; // //; // Although this does not replace powerful tools like Purify, it is a //; // good first line of protection. //; // //; // Independent of any compile option settings the new, and ReAlloc //; // functions always set the memory to 0. //; // //; // The powerful MEM_DEBUG and MEM_STAT macros were originally borrowed //; // from the ET++ framework. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/newdelete/src/NewDelete.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/newdelete/src/NewDelete.cxx
https://github.com/root-project/root/tree/v6-32-06/core/newdelete/src/NewDelete.cxx:982,Deployability,toggle,toggle,982,"// @(#)root/new:$Id$; // Author: Fons Rademakers 29/07/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // Custom operators new and delete and ReAlloc functions. //; // //; // All new and delete operations in the ROOT system pass //; // via the custom new and delete operators defined in this file. //; // This scheme allows extensive memory checking and usage statistics //; // gathering and an easy way to access shared memory segments. //; // Memory checking is by default enabled and usage statistics is //; // gathered. Using the resource (in .rootrc): Root.MemStat one can //; // toggle statistics gathering on or off. More specifically on can trap //; // the allocation of a block of memory of a certain size. This can be //; // specified using the resource: Root.MemStat.size, using the resource //; // Root.MemStat.cnt one can specify after how many allocations of //; // this size the trap should occur. //; // Set the compile option R__NOSTATS to de-activate all memory checking //; // statistics gathering in the system. //; // //; // When memory checking is enabled the following happens during //; // allocation: //; // - each allocation results in the allocation of 9 extra bytes: //; // 2 words in front and 1 byte at the end of the memory chunck //; // returned to the caller. //; // - the allocated memory is set to 0. //; // - the size of the chunck is stored in the first word. The second //; // word is left empty (for alignment). //; // - the last byte is initialized to MEM_MAGIC. //; // //; // And during de-allocation this happens: //; // - first the size if the block is checked.",MatchSource.CODE_COMMENT,core/newdelete/src/NewDelete.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/newdelete/src/NewDelete.cxx
https://github.com/root-project/root/tree/v6-32-06/core/newdelete/src/NewDelete.cxx:1703,Energy Efficiency,allocate,allocated,1703,"eme allows extensive memory checking and usage statistics //; // gathering and an easy way to access shared memory segments. //; // Memory checking is by default enabled and usage statistics is //; // gathered. Using the resource (in .rootrc): Root.MemStat one can //; // toggle statistics gathering on or off. More specifically on can trap //; // the allocation of a block of memory of a certain size. This can be //; // specified using the resource: Root.MemStat.size, using the resource //; // Root.MemStat.cnt one can specify after how many allocations of //; // this size the trap should occur. //; // Set the compile option R__NOSTATS to de-activate all memory checking //; // statistics gathering in the system. //; // //; // When memory checking is enabled the following happens during //; // allocation: //; // - each allocation results in the allocation of 9 extra bytes: //; // 2 words in front and 1 byte at the end of the memory chunck //; // returned to the caller. //; // - the allocated memory is set to 0. //; // - the size of the chunck is stored in the first word. The second //; // word is left empty (for alignment). //; // - the last byte is initialized to MEM_MAGIC. //; // //; // And during de-allocation this happens: //; // - first the size if the block is checked. It should be >0 and //; // <= than any block allocated up to that moment. If not a Fatal //; // error is generated. //; // - the MEM_MAGIC byte at the end of the block is checked. When not //; // there, the memory has been overwritten and a Fatal error is //; // generated. //; // - memory block is reset to 0. //; // //; // Although this does not replace powerful tools like Purify, it is a //; // good first line of protection. //; // //; // Independent of any compile option settings the new, and ReAlloc //; // functions always set the memory to 0. //; // //; // The powerful MEM_DEBUG and MEM_STAT macros were originally borrowed //; // from the ET++ framework. //; // //; ///////////////////////////////",MatchSource.CODE_COMMENT,core/newdelete/src/NewDelete.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/newdelete/src/NewDelete.cxx
https://github.com/root-project/root/tree/v6-32-06/core/newdelete/src/NewDelete.cxx:2047,Energy Efficiency,allocate,allocated,2047,"e statistics //; // gathering and an easy way to access shared memory segments. //; // Memory checking is by default enabled and usage statistics is //; // gathered. Using the resource (in .rootrc): Root.MemStat one can //; // toggle statistics gathering on or off. More specifically on can trap //; // the allocation of a block of memory of a certain size. This can be //; // specified using the resource: Root.MemStat.size, using the resource //; // Root.MemStat.cnt one can specify after how many allocations of //; // this size the trap should occur. //; // Set the compile option R__NOSTATS to de-activate all memory checking //; // statistics gathering in the system. //; // //; // When memory checking is enabled the following happens during //; // allocation: //; // - each allocation results in the allocation of 9 extra bytes: //; // 2 words in front and 1 byte at the end of the memory chunck //; // returned to the caller. //; // - the allocated memory is set to 0. //; // - the size of the chunck is stored in the first word. The second //; // word is left empty (for alignment). //; // - the last byte is initialized to MEM_MAGIC. //; // //; // And during de-allocation this happens: //; // - first the size if the block is checked. It should be >0 and //; // <= than any block allocated up to that moment. If not a Fatal //; // error is generated. //; // - the MEM_MAGIC byte at the end of the block is checked. When not //; // there, the memory has been overwritten and a Fatal error is //; // generated. //; // - memory block is reset to 0. //; // //; // Although this does not replace powerful tools like Purify, it is a //; // good first line of protection. //; // //; // Independent of any compile option settings the new, and ReAlloc //; // functions always set the memory to 0. //; // //; // The powerful MEM_DEBUG and MEM_STAT macros were originally borrowed //; // from the ET++ framework. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/newdelete/src/NewDelete.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/newdelete/src/NewDelete.cxx
https://github.com/root-project/root/tree/v6-32-06/core/newdelete/src/NewDelete.cxx:2358,Energy Efficiency,power,powerful,2358,"e statistics //; // gathering and an easy way to access shared memory segments. //; // Memory checking is by default enabled and usage statistics is //; // gathered. Using the resource (in .rootrc): Root.MemStat one can //; // toggle statistics gathering on or off. More specifically on can trap //; // the allocation of a block of memory of a certain size. This can be //; // specified using the resource: Root.MemStat.size, using the resource //; // Root.MemStat.cnt one can specify after how many allocations of //; // this size the trap should occur. //; // Set the compile option R__NOSTATS to de-activate all memory checking //; // statistics gathering in the system. //; // //; // When memory checking is enabled the following happens during //; // allocation: //; // - each allocation results in the allocation of 9 extra bytes: //; // 2 words in front and 1 byte at the end of the memory chunck //; // returned to the caller. //; // - the allocated memory is set to 0. //; // - the size of the chunck is stored in the first word. The second //; // word is left empty (for alignment). //; // - the last byte is initialized to MEM_MAGIC. //; // //; // And during de-allocation this happens: //; // - first the size if the block is checked. It should be >0 and //; // <= than any block allocated up to that moment. If not a Fatal //; // error is generated. //; // - the MEM_MAGIC byte at the end of the block is checked. When not //; // there, the memory has been overwritten and a Fatal error is //; // generated. //; // - memory block is reset to 0. //; // //; // Although this does not replace powerful tools like Purify, it is a //; // good first line of protection. //; // //; // Independent of any compile option settings the new, and ReAlloc //; // functions always set the memory to 0. //; // //; // The powerful MEM_DEBUG and MEM_STAT macros were originally borrowed //; // from the ET++ framework. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/newdelete/src/NewDelete.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/newdelete/src/NewDelete.cxx
https://github.com/root-project/root/tree/v6-32-06/core/newdelete/src/NewDelete.cxx:2573,Energy Efficiency,power,powerful,2573,"e statistics //; // gathering and an easy way to access shared memory segments. //; // Memory checking is by default enabled and usage statistics is //; // gathered. Using the resource (in .rootrc): Root.MemStat one can //; // toggle statistics gathering on or off. More specifically on can trap //; // the allocation of a block of memory of a certain size. This can be //; // specified using the resource: Root.MemStat.size, using the resource //; // Root.MemStat.cnt one can specify after how many allocations of //; // this size the trap should occur. //; // Set the compile option R__NOSTATS to de-activate all memory checking //; // statistics gathering in the system. //; // //; // When memory checking is enabled the following happens during //; // allocation: //; // - each allocation results in the allocation of 9 extra bytes: //; // 2 words in front and 1 byte at the end of the memory chunck //; // returned to the caller. //; // - the allocated memory is set to 0. //; // - the size of the chunck is stored in the first word. The second //; // word is left empty (for alignment). //; // - the last byte is initialized to MEM_MAGIC. //; // //; // And during de-allocation this happens: //; // - first the size if the block is checked. It should be >0 and //; // <= than any block allocated up to that moment. If not a Fatal //; // error is generated. //; // - the MEM_MAGIC byte at the end of the block is checked. When not //; // there, the memory has been overwritten and a Fatal error is //; // generated. //; // - memory block is reset to 0. //; // //; // Although this does not replace powerful tools like Purify, it is a //; // good first line of protection. //; // //; // Independent of any compile option settings the new, and ReAlloc //; // functions always set the memory to 0. //; // //; // The powerful MEM_DEBUG and MEM_STAT macros were originally borrowed //; // from the ET++ framework. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/newdelete/src/NewDelete.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/newdelete/src/NewDelete.cxx
https://github.com/root-project/root/tree/v6-32-06/core/newdelete/src/NewDelete.cxx:804,Security,access,access,804,"// @(#)root/new:$Id$; // Author: Fons Rademakers 29/07/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // Custom operators new and delete and ReAlloc functions. //; // //; // All new and delete operations in the ROOT system pass //; // via the custom new and delete operators defined in this file. //; // This scheme allows extensive memory checking and usage statistics //; // gathering and an easy way to access shared memory segments. //; // Memory checking is by default enabled and usage statistics is //; // gathered. Using the resource (in .rootrc): Root.MemStat one can //; // toggle statistics gathering on or off. More specifically on can trap //; // the allocation of a block of memory of a certain size. This can be //; // specified using the resource: Root.MemStat.size, using the resource //; // Root.MemStat.cnt one can specify after how many allocations of //; // this size the trap should occur. //; // Set the compile option R__NOSTATS to de-activate all memory checking //; // statistics gathering in the system. //; // //; // When memory checking is enabled the following happens during //; // allocation: //; // - each allocation results in the allocation of 9 extra bytes: //; // 2 words in front and 1 byte at the end of the memory chunck //; // returned to the caller. //; // - the allocated memory is set to 0. //; // - the size of the chunck is stored in the first word. The second //; // word is left empty (for alignment). //; // - the last byte is initialized to MEM_MAGIC. //; // //; // And during de-allocation this happens: //; // - first the size if the block is checked.",MatchSource.CODE_COMMENT,core/newdelete/src/NewDelete.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/newdelete/src/NewDelete.cxx
https://github.com/root-project/root/tree/v6-32-06/core/newdelete/src/NewDelete.cxx:379,Security,Integrity,Integrity,379,"// Old Notes:; // The return of calloc is aligned with std::max_align_t.; // If/whe al > std::max_align_t we need to adjust.; // The layout for the Magic, Stat and Size is:; // [0 : sizeof(std::max_align_t) [ -> Record `size`; // [sizeof(std::max_align_t) : same + size ] -> Real data; lower bound id return value; // [sizeof(std::max_align_t) + size : same + 1 [ -> MEM_MAGIC / Integrity marker; // We need sizeof(size_t) <= sizeof(std::max_align_t); //; // New Notes:; // The return of calloc is aligned with std::max_align_t.; // If/whe al > std::max_align_t we need to adjust.; // The layout for the Offset, Magic, Stat and Size is:; // [0 : returned ptr value - sizeof(size_t) * 3 [ -> Unused; Usually of size 0.",MatchSource.CODE_COMMENT,core/newdelete/src/NewDelete.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/newdelete/src/NewDelete.cxx
https://github.com/root-project/root/tree/v6-32-06/core/newdelete/src/NewDelete.cxx:207,Energy Efficiency,allocate,allocated,207,"// [returned ptr value - sizeof(size_t) * 2 : same + sizeof(size_t) [ -> Requested alignment; // [returned ptr value - sizeof(size_t) : same + sizeof(size_t) [ -> Offset between the return ptr value and the allocated start; // [returned ptr value : same + size [ -> Real data start; // [returned ptr value + size : same + 1 [ -> MEM_MAGIC / Integrity marker; //; // Per C++ standard 3.11 Alignment [basic.align]:; // Every alignment value shall be a non-negative integral power of two.",MatchSource.CODE_COMMENT,core/newdelete/src/NewDelete.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/newdelete/src/NewDelete.cxx
https://github.com/root-project/root/tree/v6-32-06/core/newdelete/src/NewDelete.cxx:472,Energy Efficiency,power,power,472,"// [returned ptr value - sizeof(size_t) * 2 : same + sizeof(size_t) [ -> Requested alignment; // [returned ptr value - sizeof(size_t) : same + sizeof(size_t) [ -> Offset between the return ptr value and the allocated start; // [returned ptr value : same + size [ -> Real data start; // [returned ptr value + size : same + 1 [ -> MEM_MAGIC / Integrity marker; //; // Per C++ standard 3.11 Alignment [basic.align]:; // Every alignment value shall be a non-negative integral power of two.",MatchSource.CODE_COMMENT,core/newdelete/src/NewDelete.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/newdelete/src/NewDelete.cxx
https://github.com/root-project/root/tree/v6-32-06/core/newdelete/src/NewDelete.cxx:341,Security,Integrity,Integrity,341,"// [returned ptr value - sizeof(size_t) * 2 : same + sizeof(size_t) [ -> Requested alignment; // [returned ptr value - sizeof(size_t) : same + sizeof(size_t) [ -> Offset between the return ptr value and the allocated start; // [returned ptr value : same + size [ -> Real data start; // [returned ptr value + size : same + 1 [ -> MEM_MAGIC / Integrity marker; //; // Per C++ standard 3.11 Alignment [basic.align]:; // Every alignment value shall be a non-negative integral power of two.",MatchSource.CODE_COMMENT,core/newdelete/src/NewDelete.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/newdelete/src/NewDelete.cxx
https://github.com/root-project/root/tree/v6-32-06/core/newdelete/src/NewDelete.cxx:36,Usability,clear,cleared,36,"// After this the meta-data is also cleared.",MatchSource.CODE_COMMENT,core/newdelete/src/NewDelete.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/newdelete/src/NewDelete.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/inc/TRint.h:134,Integrability,Interface,Interface,134,"//////////////////////////////////////////////////////////////////////////; // //; // Rint //; // //; // Rint is the ROOT Interactive Interface. It allows interactive access //; // to the ROOT system via a C++ interpreter. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/rint/inc/TRint.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/inc/TRint.h
https://github.com/root-project/root/tree/v6-32-06/core/rint/inc/TRint.h:167,Security,access,access,167,"//////////////////////////////////////////////////////////////////////////; // //; // Rint //; // //; // Rint is the ROOT Interactive Interface. It allows interactive access //; // to the ROOT system via a C++ interpreter. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/rint/inc/TRint.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/inc/TRint.h
https://github.com/root-project/root/tree/v6-32-06/core/rint/inc/TRint.h:31,Integrability,Interface,Interface,31,"//ROOT Interactive Application Interface",MatchSource.CODE_COMMENT,core/rint/inc/TRint.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/inc/TRint.h
https://github.com/root-project/root/tree/v6-32-06/core/rint/inc/TTabCom.h:264,Modifiability,variab,variable,264,"////////////////////////////////////////////////////////////////////////////; // //; // TTabCom //; // //; // This class performs basic tab completion. //; // You should be able to hit [TAB] to complete a partially typed: //; // //; // username //; // environment variable //; // preprocessor directive //; // pragma //; // filename (with a context-sensitive path) //; // public member function or data member //; // global variable, function, or class name //; // //; // Also, something like gWhatever->Func([TAB] will print the appropriate //; // list of prototypes. For a list of some limitations see the source. //; // //; ////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/rint/inc/TTabCom.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/inc/TTabCom.h
https://github.com/root-project/root/tree/v6-32-06/core/rint/inc/TTabCom.h:424,Modifiability,variab,variable,424,"////////////////////////////////////////////////////////////////////////////; // //; // TTabCom //; // //; // This class performs basic tab completion. //; // You should be able to hit [TAB] to complete a partially typed: //; // //; // username //; // environment variable //; // preprocessor directive //; // pragma //; // filename (with a context-sensitive path) //; // public member function or data member //; // global variable, function, or class name //; // //; // Also, something like gWhatever->Func([TAB] will print the appropriate //; // list of prototypes. For a list of some limitations see the source. //; // //; ////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/rint/inc/TTabCom.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/inc/TTabCom.h
https://github.com/root-project/root/tree/v6-32-06/core/rint/inc/TTabCom.h:121,Performance,perform,performs,121,"////////////////////////////////////////////////////////////////////////////; // //; // TTabCom //; // //; // This class performs basic tab completion. //; // You should be able to hit [TAB] to complete a partially typed: //; // //; // username //; // environment variable //; // preprocessor directive //; // pragma //; // filename (with a context-sensitive path) //; // public member function or data member //; // global variable, function, or class name //; // //; // Also, something like gWhatever->Func([TAB] will print the appropriate //; // list of prototypes. For a list of some limitations see the source. //; // //; ////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/rint/inc/TTabCom.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/inc/TTabCom.h
https://github.com/root-project/root/tree/v6-32-06/core/rint/inc/TTabCom.h:193,Modifiability,variab,variables,193,"// first enum (not counting ""kUNKNOWN_CONTEXT"") must; // cast to zero because these enums will be used to; // index arrays of size ""kNUM_PAT""; // ---------------; // user names and environment variables should come first",MatchSource.CODE_COMMENT,core/rint/inc/TTabCom.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/inc/TTabCom.h
https://github.com/root-project/root/tree/v6-32-06/core/rint/inc/TTabCom.h:15,Modifiability,variab,variables,15,"// environment variables; // file descriptor redirection should almost come first",MatchSource.CODE_COMMENT,core/rint/inc/TTabCom.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/inc/TTabCom.h
https://github.com/root-project/root/tree/v6-32-06/core/rint/inc/TTabCom.h:19,Security,access,accessing,19,"// specific member accessing; // should come before general member accessing",MatchSource.CODE_COMMENT,core/rint/inc/TTabCom.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/inc/TTabCom.h
https://github.com/root-project/root/tree/v6-32-06/core/rint/inc/TTabCom.h:67,Security,access,accessing,67,"// specific member accessing; // should come before general member accessing",MatchSource.CODE_COMMENT,core/rint/inc/TTabCom.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/inc/TTabCom.h
https://github.com/root-project/root/tree/v6-32-06/core/rint/inc/TTabCom.h:134,Security,access,accessing,134,"// random files; /******************************************************************/; /* */; /* file names should come before member accessing */; /* */; /* (because otherwise ""/tmp/a.cc"" might look like you're trying */; /* to access member ""cc"" of some object ""a"") */; /* */; /* but after anything that requires a specific path. */; /* */; /******************************************************************/",MatchSource.CODE_COMMENT,core/rint/inc/TTabCom.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/inc/TTabCom.h
https://github.com/root-project/root/tree/v6-32-06/core/rint/inc/TTabCom.h:229,Security,access,access,229,"// random files; /******************************************************************/; /* */; /* file names should come before member accessing */; /* */; /* (because otherwise ""/tmp/a.cc"" might look like you're trying */; /* to access member ""cc"" of some object ""a"") */; /* */; /* but after anything that requires a specific path. */; /* */; /******************************************************************/",MatchSource.CODE_COMMENT,core/rint/inc/TTabCom.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/inc/TTabCom.h
https://github.com/root-project/root/tree/v6-32-06/core/rint/inc/TTabCom.h:18,Security,access,access,18,"// general member access; // should come after specific member access",MatchSource.CODE_COMMENT,core/rint/inc/TTabCom.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/inc/TTabCom.h
https://github.com/root-project/root/tree/v6-32-06/core/rint/inc/TTabCom.h:63,Security,access,access,63,"// general member access; // should come after specific member access",MatchSource.CODE_COMMENT,core/rint/inc/TTabCom.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/inc/TTabCom.h
https://github.com/root-project/root/tree/v6-32-06/core/rint/inc/TTabCom.h:2,Performance,Perform,Perform,2,"//Perform command line completion when hitting <TAB>",MatchSource.CODE_COMMENT,core/rint/inc/TTabCom.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/inc/TTabCom.h
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:546,Integrability,Interface,Interface,546,"// @(#)root/rint:$Id$; // Author: Rene Brun 17/02/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // Rint //; // //; // Rint is the ROOT Interactive Interface. It allows interactive access //; // to the ROOT system via the Cling C/C++ interpreter. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/rint/src/TRint.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:579,Security,access,access,579,"// @(#)root/rint:$Id$; // Author: Rene Brun 17/02/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // Rint //; // //; // Rint is the ROOT Interactive Interface. It allows interactive access //; // to the ROOT system via the Cling C/C++ interpreter. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/rint/src/TRint.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:43,Availability,down,down,43,"// Hide this, by moving all other args one down...",MatchSource.CODE_COMMENT,core/rint/src/TRint.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:160,Integrability,interface,interface,160,"////////////////////////////////////////////////////////////////////////////////; /// Create an application environment. The TRint environment provides an; /// interface to the WM manager functionality and eventloop via inheritance; /// of TApplication and in addition provides interactive access to; /// the Cling C++ interpreter via the command line.",MatchSource.CODE_COMMENT,core/rint/src/TRint.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:220,Modifiability,inherit,inheritance,220,"////////////////////////////////////////////////////////////////////////////////; /// Create an application environment. The TRint environment provides an; /// interface to the WM manager functionality and eventloop via inheritance; /// of TApplication and in addition provides interactive access to; /// the Cling C++ interpreter via the command line.",MatchSource.CODE_COMMENT,core/rint/src/TRint.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:290,Security,access,access,290,"////////////////////////////////////////////////////////////////////////////////; /// Create an application environment. The TRint environment provides an; /// interface to the WM manager functionality and eventloop via inheritance; /// of TApplication and in addition provides interactive access to; /// the Cling C++ interpreter via the command line.",MatchSource.CODE_COMMENT,core/rint/src/TRint.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:14,Performance,load,load,14,"// Explicitly load libMathCore it cannot be auto-loaded it when using one; // of its freestanding functions. Once functions can trigger autoloading we; // can get rid of this.",MatchSource.CODE_COMMENT,core/rint/src/TRint.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:49,Performance,load,loaded,49,"// Explicitly load libMathCore it cannot be auto-loaded it when using one; // of its freestanding functions. Once functions can trigger autoloading we; // can get rid of this.",MatchSource.CODE_COMMENT,core/rint/src/TRint.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:3,Performance,Load,Load,3,"// Load some frequently used includes",MatchSource.CODE_COMMENT,core/rint/src/TRint.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:277,Modifiability,variab,variable,277,"// When the interactive ROOT starts, it can automatically load some frequently; // used includes. However, this introduces several overheads; // -The initialisation takes more time; // -Memory overhead when including <vector>; // In $ROOTSYS/etc/system.rootrc, you can set the variable Rint.Includes to 0; // to disable the loading of these includes at startup.; // You can set the variable to 1 (default) to load only <iostream>, <string> and <DllImport.h>; // You can set it to 2 to load in addition <vector> and <utility>; // We strongly recommend setting the variable to 2 if your scripts include <vector>; // and you execute your scripts multiple times.",MatchSource.CODE_COMMENT,core/rint/src/TRint.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:382,Modifiability,variab,variable,382,"// When the interactive ROOT starts, it can automatically load some frequently; // used includes. However, this introduces several overheads; // -The initialisation takes more time; // -Memory overhead when including <vector>; // In $ROOTSYS/etc/system.rootrc, you can set the variable Rint.Includes to 0; // to disable the loading of these includes at startup.; // You can set the variable to 1 (default) to load only <iostream>, <string> and <DllImport.h>; // You can set it to 2 to load in addition <vector> and <utility>; // We strongly recommend setting the variable to 2 if your scripts include <vector>; // and you execute your scripts multiple times.",MatchSource.CODE_COMMENT,core/rint/src/TRint.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:563,Modifiability,variab,variable,563,"// When the interactive ROOT starts, it can automatically load some frequently; // used includes. However, this introduces several overheads; // -The initialisation takes more time; // -Memory overhead when including <vector>; // In $ROOTSYS/etc/system.rootrc, you can set the variable Rint.Includes to 0; // to disable the loading of these includes at startup.; // You can set the variable to 1 (default) to load only <iostream>, <string> and <DllImport.h>; // You can set it to 2 to load in addition <vector> and <utility>; // We strongly recommend setting the variable to 2 if your scripts include <vector>; // and you execute your scripts multiple times.",MatchSource.CODE_COMMENT,core/rint/src/TRint.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:58,Performance,load,load,58,"// When the interactive ROOT starts, it can automatically load some frequently; // used includes. However, this introduces several overheads; // -The initialisation takes more time; // -Memory overhead when including <vector>; // In $ROOTSYS/etc/system.rootrc, you can set the variable Rint.Includes to 0; // to disable the loading of these includes at startup.; // You can set the variable to 1 (default) to load only <iostream>, <string> and <DllImport.h>; // You can set it to 2 to load in addition <vector> and <utility>; // We strongly recommend setting the variable to 2 if your scripts include <vector>; // and you execute your scripts multiple times.",MatchSource.CODE_COMMENT,core/rint/src/TRint.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:324,Performance,load,loading,324,"// When the interactive ROOT starts, it can automatically load some frequently; // used includes. However, this introduces several overheads; // -The initialisation takes more time; // -Memory overhead when including <vector>; // In $ROOTSYS/etc/system.rootrc, you can set the variable Rint.Includes to 0; // to disable the loading of these includes at startup.; // You can set the variable to 1 (default) to load only <iostream>, <string> and <DllImport.h>; // You can set it to 2 to load in addition <vector> and <utility>; // We strongly recommend setting the variable to 2 if your scripts include <vector>; // and you execute your scripts multiple times.",MatchSource.CODE_COMMENT,core/rint/src/TRint.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:409,Performance,load,load,409,"// When the interactive ROOT starts, it can automatically load some frequently; // used includes. However, this introduces several overheads; // -The initialisation takes more time; // -Memory overhead when including <vector>; // In $ROOTSYS/etc/system.rootrc, you can set the variable Rint.Includes to 0; // to disable the loading of these includes at startup.; // You can set the variable to 1 (default) to load only <iostream>, <string> and <DllImport.h>; // You can set it to 2 to load in addition <vector> and <utility>; // We strongly recommend setting the variable to 2 if your scripts include <vector>; // and you execute your scripts multiple times.",MatchSource.CODE_COMMENT,core/rint/src/TRint.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:485,Performance,load,load,485,"// When the interactive ROOT starts, it can automatically load some frequently; // used includes. However, this introduces several overheads; // -The initialisation takes more time; // -Memory overhead when including <vector>; // In $ROOTSYS/etc/system.rootrc, you can set the variable Rint.Includes to 0; // to disable the loading of these includes at startup.; // You can set the variable to 1 (default) to load only <iostream>, <string> and <DllImport.h>; // You can set it to 2 to load in addition <vector> and <utility>; // We strongly recommend setting the variable to 2 if your scripts include <vector>; // and you execute your scripts multiple times.",MatchSource.CODE_COMMENT,core/rint/src/TRint.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:3,Performance,Load,Load,3,"// Load user functions",MatchSource.CODE_COMMENT,core/rint/src/TRint.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:11,Testability,log,logon,11,"// Execute logon macro",MatchSource.CODE_COMMENT,core/rint/src/TRint.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:3,Deployability,Install,Install,3,"// Install interrupt and terminal input handlers",MatchSource.CODE_COMMENT,core/rint/src/TRint.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:94,Testability,log,logon,94,"////////////////////////////////////////////////////////////////////////////////; /// Execute logon macro's. There are three levels of logon macros that; /// will be executed: the system logon etc/system.rootlogon.C, the global; /// user logon ~/.rootlogon.C and the local ./.rootlogon.C. For backward; /// compatibility also the logon macro as specified by the Rint.Logon; /// environment setting, by default ./rootlogon.C, will be executed.; /// No logon macros will be executed when the system is started with; /// the -n option.",MatchSource.CODE_COMMENT,core/rint/src/TRint.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:135,Testability,log,logon,135,"////////////////////////////////////////////////////////////////////////////////; /// Execute logon macro's. There are three levels of logon macros that; /// will be executed: the system logon etc/system.rootlogon.C, the global; /// user logon ~/.rootlogon.C and the local ./.rootlogon.C. For backward; /// compatibility also the logon macro as specified by the Rint.Logon; /// environment setting, by default ./rootlogon.C, will be executed.; /// No logon macros will be executed when the system is started with; /// the -n option.",MatchSource.CODE_COMMENT,core/rint/src/TRint.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:187,Testability,log,logon,187,"////////////////////////////////////////////////////////////////////////////////; /// Execute logon macro's. There are three levels of logon macros that; /// will be executed: the system logon etc/system.rootlogon.C, the global; /// user logon ~/.rootlogon.C and the local ./.rootlogon.C. For backward; /// compatibility also the logon macro as specified by the Rint.Logon; /// environment setting, by default ./rootlogon.C, will be executed.; /// No logon macros will be executed when the system is started with; /// the -n option.",MatchSource.CODE_COMMENT,core/rint/src/TRint.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:238,Testability,log,logon,238,"////////////////////////////////////////////////////////////////////////////////; /// Execute logon macro's. There are three levels of logon macros that; /// will be executed: the system logon etc/system.rootlogon.C, the global; /// user logon ~/.rootlogon.C and the local ./.rootlogon.C. For backward; /// compatibility also the logon macro as specified by the Rint.Logon; /// environment setting, by default ./rootlogon.C, will be executed.; /// No logon macros will be executed when the system is started with; /// the -n option.",MatchSource.CODE_COMMENT,core/rint/src/TRint.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:330,Testability,log,logon,330,"////////////////////////////////////////////////////////////////////////////////; /// Execute logon macro's. There are three levels of logon macros that; /// will be executed: the system logon etc/system.rootlogon.C, the global; /// user logon ~/.rootlogon.C and the local ./.rootlogon.C. For backward; /// compatibility also the logon macro as specified by the Rint.Logon; /// environment setting, by default ./rootlogon.C, will be executed.; /// No logon macros will be executed when the system is started with; /// the -n option.",MatchSource.CODE_COMMENT,core/rint/src/TRint.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:367,Testability,Log,Logon,367,"////////////////////////////////////////////////////////////////////////////////; /// Execute logon macro's. There are three levels of logon macros that; /// will be executed: the system logon etc/system.rootlogon.C, the global; /// user logon ~/.rootlogon.C and the local ./.rootlogon.C. For backward; /// compatibility also the logon macro as specified by the Rint.Logon; /// environment setting, by default ./rootlogon.C, will be executed.; /// No logon macros will be executed when the system is started with; /// the -n option.",MatchSource.CODE_COMMENT,core/rint/src/TRint.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:451,Testability,log,logon,451,"////////////////////////////////////////////////////////////////////////////////; /// Execute logon macro's. There are three levels of logon macros that; /// will be executed: the system logon etc/system.rootlogon.C, the global; /// user logon ~/.rootlogon.C and the local ./.rootlogon.C. For backward; /// compatibility also the logon macro as specified by the Rint.Logon; /// environment setting, by default ./rootlogon.C, will be executed.; /// No logon macros will be executed when the system is started with; /// the -n option.",MatchSource.CODE_COMMENT,core/rint/src/TRint.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:3,Safety,avoid,avoid,3,"// avoid executing ~/.rootlogon.C twice",MatchSource.CODE_COMMENT,core/rint/src/TRint.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:20,Testability,log,logon,20,"// execute also the logon macro specified by ""Rint.Logon""",MatchSource.CODE_COMMENT,core/rint/src/TRint.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:51,Testability,Log,Logon,51,"// execute also the logon macro specified by ""Rint.Logon""",MatchSource.CODE_COMMENT,core/rint/src/TRint.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:470,Availability,error,error,470,"////////////////////////////////////////////////////////////////////////////////; /// Main application eventloop. First process files given on the command; /// line and then go into the main application event loop, unless the -q; /// command line option was specified in which case the program terminates.; /// When return is true this method returns even when -q was specified.; ///; /// When QuitOpt is true and return is false, terminate the application with; /// an error code equal to either the ProcessLine error (if any) or the; /// return value of the command casted to a long.",MatchSource.CODE_COMMENT,core/rint/src/TRint.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:513,Availability,error,error,513,"////////////////////////////////////////////////////////////////////////////////; /// Main application eventloop. First process files given on the command; /// line and then go into the main application event loop, unless the -q; /// command line option was specified in which case the program terminates.; /// When return is true this method returns even when -q was specified.; ///; /// When QuitOpt is true and return is false, terminate the application with; /// an error code equal to either the ProcessLine error (if any) or the; /// return value of the command casted to a long.",MatchSource.CODE_COMMENT,core/rint/src/TRint.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:51,Availability,error,error,51,"// A file that TApplication did not find. Note the error.",MatchSource.CODE_COMMENT,core/rint/src/TRint.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:153,Safety,avoid,avoid,153,"// The ProcessLine might throw an 'exception'. In this case,; // GetLinem(kInit,""Root >"") is called and we are jump back; // to RETRY ... and we have to avoid the Getlinem(kInit, GetPrompt());",MatchSource.CODE_COMMENT,core/rint/src/TRint.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:101,Testability,log,logo,101,"////////////////////////////////////////////////////////////////////////////////; /// Print the ROOT logo on standard output.",MatchSource.CODE_COMMENT,core/rint/src/TRint.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:77,Deployability,release,release,77,"// If branch and commit are identical - e.g. ""v5-34-18"" - then we have; // a release build. Else specify the git hash this build was made from.",MatchSource.CODE_COMMENT,core/rint/src/TRint.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:113,Security,hash,hash,113,"// If branch and commit are identical - e.g. ""v5-34-18"" - then we have; // a release build. Else specify the git hash this build was made from.",MatchSource.CODE_COMMENT,core/rint/src/TRint.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:13,Testability,log,logo,13,"// Popdown X logo, only if started with -splash option",MatchSource.CODE_COMMENT,core/rint/src/TRint.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:212,Modifiability,variab,variable,212,"////////////////////////////////////////////////////////////////////////////////; /// Terminate the application. Reset the terminal to sane mode and call; /// the logoff macro defined via Rint.Logoff environment variable.; /// @note The function does not return, unless the class has; /// been told to return from Run(), by a call to SetReturnFromRun().",MatchSource.CODE_COMMENT,core/rint/src/TRint.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:163,Testability,log,logoff,163,"////////////////////////////////////////////////////////////////////////////////; /// Terminate the application. Reset the terminal to sane mode and call; /// the logoff macro defined via Rint.Logoff environment variable.; /// @note The function does not return, unless the class has; /// been told to return from Run(), by a call to SetReturnFromRun().",MatchSource.CODE_COMMENT,core/rint/src/TRint.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:193,Testability,Log,Logoff,193,"////////////////////////////////////////////////////////////////////////////////; /// Terminate the application. Reset the terminal to sane mode and call; /// the logoff macro defined via Rint.Logoff environment variable.; /// @note The function does not return, unless the class has; /// been told to return from Run(), by a call to SetReturnFromRun().",MatchSource.CODE_COMMENT,core/rint/src/TRint.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:10,Testability,log,logoff,10,"//Execute logoff macro",MatchSource.CODE_COMMENT,core/rint/src/TRint.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:129,Availability,echo,echo,129,"////////////////////////////////////////////////////////////////////////////////; /// Set console mode:; ///; /// mode = kTRUE - echo input symbols; /// mode = kFALSE - noecho input symbols",MatchSource.CODE_COMMENT,core/rint/src/TRint.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:237,Modifiability,variab,variable,237,"////////////////////////////////////////////////////////////////////////////////; /// Process the content of a line starting with "".R"" (already stripped-off); /// The format is; /// [user@]host[:dir] [-l user] [-d dbg] [script]; /// The variable 'dir' is the remote directory to be used as working dir.; /// The username can be specified in two ways, ""-l"" having the priority; /// (as in ssh).; /// A 'dbg' value > 0 gives increasing verbosity.; /// The last argument 'script' allows to specify an alternative script to; /// be executed remotely to startup the session.",MatchSource.CODE_COMMENT,core/rint/src/TRint.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:3536,Availability,error,error,3536,"mplete //; // the name of a global object. (it is supported when trying to //; // complete a member of a global object) //; // //; // 7. the list of #pragma's is hardcoded //; // (ie not obtained from the interpreter at runtime) //; // ==> user-defined #pragma's will not be recognized //; // //; // 8. the system include directories are also hardcoded //; // because i don't know how to get them from the interpreter. //; // fons, maybe they should be #ifdef'd for the different sytems? //; // //; // 9. the TabCom.FileIgnore resource is always applied, even if you //; // are not trying to complete a filename. //; // //; // 10. anything in quotes is assumed to be a filename //; // so (among other things) you can't complete a quoted class name: //; // eg, TClass class1( ""TDict[TAB] //; // this won't work... looks for a file in pwd starting with TDict //; // //; // 11. the prototypes tend to omit the word ""const"" a lot. //; // this is a problem with ROOT or CINT. //; // //; // 12. when listing ambiguous matches, only one column is used, //; // even if there are many completions. //; // //; // 13. anonymous objects are not currently identified //; // so, for example, //; // //; // root> printf( TString([TAB //; // //; // gives an error message instead of listing TString's constructors. //; // (this could be fixed) //; // //; // 14. the routine that adds the ""appendage"" isn't smart enough to know //; // if it's already there: //; // //; // root> TCanvas::Update() //; // press [TAB] here ^ //; // root> TCanvas::Update()() //; // (this could be fixed) //; // //; // 15. the appendage is only applied if there is exactly 1 match. //; // eg, this //; // //; // root> G__at[TAB] //; // root> G__ateval //; // //; // happens instead of this //; // //; // root> G__at[TAB] //; // root> G__ateval( //; // //; // because there are several overloaded versions of G__ateval(). //; // (this could be fixed) //; // //; ////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:3764,Deployability,Update,Update,3764,"mplete //; // the name of a global object. (it is supported when trying to //; // complete a member of a global object) //; // //; // 7. the list of #pragma's is hardcoded //; // (ie not obtained from the interpreter at runtime) //; // ==> user-defined #pragma's will not be recognized //; // //; // 8. the system include directories are also hardcoded //; // because i don't know how to get them from the interpreter. //; // fons, maybe they should be #ifdef'd for the different sytems? //; // //; // 9. the TabCom.FileIgnore resource is always applied, even if you //; // are not trying to complete a filename. //; // //; // 10. anything in quotes is assumed to be a filename //; // so (among other things) you can't complete a quoted class name: //; // eg, TClass class1( ""TDict[TAB] //; // this won't work... looks for a file in pwd starting with TDict //; // //; // 11. the prototypes tend to omit the word ""const"" a lot. //; // this is a problem with ROOT or CINT. //; // //; // 12. when listing ambiguous matches, only one column is used, //; // even if there are many completions. //; // //; // 13. anonymous objects are not currently identified //; // so, for example, //; // //; // root> printf( TString([TAB //; // //; // gives an error message instead of listing TString's constructors. //; // (this could be fixed) //; // //; // 14. the routine that adds the ""appendage"" isn't smart enough to know //; // if it's already there: //; // //; // root> TCanvas::Update() //; // press [TAB] here ^ //; // root> TCanvas::Update()() //; // (this could be fixed) //; // //; // 15. the appendage is only applied if there is exactly 1 match. //; // eg, this //; // //; // root> G__at[TAB] //; // root> G__ateval //; // //; // happens instead of this //; // //; // root> G__at[TAB] //; // root> G__ateval( //; // //; // because there are several overloaded versions of G__ateval(). //; // (this could be fixed) //; // //; ////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:3821,Deployability,Update,Update,3821,"mplete //; // the name of a global object. (it is supported when trying to //; // complete a member of a global object) //; // //; // 7. the list of #pragma's is hardcoded //; // (ie not obtained from the interpreter at runtime) //; // ==> user-defined #pragma's will not be recognized //; // //; // 8. the system include directories are also hardcoded //; // because i don't know how to get them from the interpreter. //; // fons, maybe they should be #ifdef'd for the different sytems? //; // //; // 9. the TabCom.FileIgnore resource is always applied, even if you //; // are not trying to complete a filename. //; // //; // 10. anything in quotes is assumed to be a filename //; // so (among other things) you can't complete a quoted class name: //; // eg, TClass class1( ""TDict[TAB] //; // this won't work... looks for a file in pwd starting with TDict //; // //; // 11. the prototypes tend to omit the word ""const"" a lot. //; // this is a problem with ROOT or CINT. //; // //; // 12. when listing ambiguous matches, only one column is used, //; // even if there are many completions. //; // //; // 13. anonymous objects are not currently identified //; // so, for example, //; // //; // root> printf( TString([TAB //; // //; // gives an error message instead of listing TString's constructors. //; // (this could be fixed) //; // //; // 14. the routine that adds the ""appendage"" isn't smart enough to know //; // if it's already there: //; // //; // root> TCanvas::Update() //; // press [TAB] here ^ //; // root> TCanvas::Update()() //; // (this could be fixed) //; // //; // 15. the appendage is only applied if there is exactly 1 match. //; // eg, this //; // //; // root> G__at[TAB] //; // root> G__ateval //; // //; // happens instead of this //; // //; // root> G__at[TAB] //; // root> G__ateval( //; // //; // because there are several overloaded versions of G__ateval(). //; // (this could be fixed) //; // //; ////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:3542,Integrability,message,message,3542,"mplete //; // the name of a global object. (it is supported when trying to //; // complete a member of a global object) //; // //; // 7. the list of #pragma's is hardcoded //; // (ie not obtained from the interpreter at runtime) //; // ==> user-defined #pragma's will not be recognized //; // //; // 8. the system include directories are also hardcoded //; // because i don't know how to get them from the interpreter. //; // fons, maybe they should be #ifdef'd for the different sytems? //; // //; // 9. the TabCom.FileIgnore resource is always applied, even if you //; // are not trying to complete a filename. //; // //; // 10. anything in quotes is assumed to be a filename //; // so (among other things) you can't complete a quoted class name: //; // eg, TClass class1( ""TDict[TAB] //; // this won't work... looks for a file in pwd starting with TDict //; // //; // 11. the prototypes tend to omit the word ""const"" a lot. //; // this is a problem with ROOT or CINT. //; // //; // 12. when listing ambiguous matches, only one column is used, //; // even if there are many completions. //; // //; // 13. anonymous objects are not currently identified //; // so, for example, //; // //; // root> printf( TString([TAB //; // //; // gives an error message instead of listing TString's constructors. //; // (this could be fixed) //; // //; // 14. the routine that adds the ""appendage"" isn't smart enough to know //; // if it's already there: //; // //; // root> TCanvas::Update() //; // press [TAB] here ^ //; // root> TCanvas::Update()() //; // (this could be fixed) //; // //; // 15. the appendage is only applied if there is exactly 1 match. //; // eg, this //; // //; // root> G__at[TAB] //; // root> G__ateval //; // //; // happens instead of this //; // //; // root> G__at[TAB] //; // root> G__ateval( //; // //; // because there are several overloaded versions of G__ateval(). //; // (this could be fixed) //; // //; ////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:3644,Integrability,rout,routine,3644,"mplete //; // the name of a global object. (it is supported when trying to //; // complete a member of a global object) //; // //; // 7. the list of #pragma's is hardcoded //; // (ie not obtained from the interpreter at runtime) //; // ==> user-defined #pragma's will not be recognized //; // //; // 8. the system include directories are also hardcoded //; // because i don't know how to get them from the interpreter. //; // fons, maybe they should be #ifdef'd for the different sytems? //; // //; // 9. the TabCom.FileIgnore resource is always applied, even if you //; // are not trying to complete a filename. //; // //; // 10. anything in quotes is assumed to be a filename //; // so (among other things) you can't complete a quoted class name: //; // eg, TClass class1( ""TDict[TAB] //; // this won't work... looks for a file in pwd starting with TDict //; // //; // 11. the prototypes tend to omit the word ""const"" a lot. //; // this is a problem with ROOT or CINT. //; // //; // 12. when listing ambiguous matches, only one column is used, //; // even if there are many completions. //; // //; // 13. anonymous objects are not currently identified //; // so, for example, //; // //; // root> printf( TString([TAB //; // //; // gives an error message instead of listing TString's constructors. //; // (this could be fixed) //; // //; // 14. the routine that adds the ""appendage"" isn't smart enough to know //; // if it's already there: //; // //; // root> TCanvas::Update() //; // press [TAB] here ^ //; // root> TCanvas::Update()() //; // (this could be fixed) //; // //; // 15. the appendage is only applied if there is exactly 1 match. //; // eg, this //; // //; // root> G__at[TAB] //; // root> G__ateval //; // //; // happens instead of this //; // //; // root> G__at[TAB] //; // root> G__ateval( //; // //; // because there are several overloaded versions of G__ateval(). //; // (this could be fixed) //; // //; ////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:815,Modifiability,variab,variable,815,"// @(#)root/rint:$Id$; // Author: Christian Lacunza <lacunza@cdfsg6.lbl.gov> 27/04/99; // Modified by Artur Szostak <artur@alice.phy.uct.ac.za> : 1 June 2003; // Added support for namespaces.; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; ////////////////////////////////////////////////////////////////////////////; // //; // TTabCom //; // //; // This class performs basic tab completion. //; // You should be able to hit [TAB] to complete a partially typed: //; // //; // username //; // environment variable //; // preprocessor directive //; // pragma //; // filename (with a context-sensitive path) //; // public member function or data member (including base classes) //; // global variable, function, or class name //; // //; // Also, something like //; // //; // someObject->Func([TAB] //; // someObject.Func([TAB] //; // someClass::Func([TAB] //; // someClass var([TAB] //; // new someClass([TAB] //; // //; // will print a list of prototypes for the indicated //; // method or constructor. //; // //; // Current limitations and bugs: //; // //; // 1. you can only use one member access operator at a time. //; // eg, this will work: gROOT->GetListOfG[TAB] //; // but this will not: gROOT->GetListOfGlobals()->Conta[TAB] //; // //; // 2. nothing is guaranteed to work on windows //; // (for one thing, /bin/env and /etc/passwd are hardcoded) //; // //; // 3. CINT shortcut #2 is deliberately not supported. //; // (using ""operator.()"" instead of ""operator->()"") //; // //; // 4. most identifiers (including C++ identifiers, usernames, //; // environment variables, etc) //; // are restriceted to this character set: [_a-zA-Z0-9] //; // therefore, you won't be able to complete thi",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:1000,Modifiability,variab,variable,1000,"// @(#)root/rint:$Id$; // Author: Christian Lacunza <lacunza@cdfsg6.lbl.gov> 27/04/99; // Modified by Artur Szostak <artur@alice.phy.uct.ac.za> : 1 June 2003; // Added support for namespaces.; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; ////////////////////////////////////////////////////////////////////////////; // //; // TTabCom //; // //; // This class performs basic tab completion. //; // You should be able to hit [TAB] to complete a partially typed: //; // //; // username //; // environment variable //; // preprocessor directive //; // pragma //; // filename (with a context-sensitive path) //; // public member function or data member (including base classes) //; // global variable, function, or class name //; // //; // Also, something like //; // //; // someObject->Func([TAB] //; // someObject.Func([TAB] //; // someClass::Func([TAB] //; // someClass var([TAB] //; // new someClass([TAB] //; // //; // will print a list of prototypes for the indicated //; // method or constructor. //; // //; // Current limitations and bugs: //; // //; // 1. you can only use one member access operator at a time. //; // eg, this will work: gROOT->GetListOfG[TAB] //; // but this will not: gROOT->GetListOfGlobals()->Conta[TAB] //; // //; // 2. nothing is guaranteed to work on windows //; // (for one thing, /bin/env and /etc/passwd are hardcoded) //; // //; // 3. CINT shortcut #2 is deliberately not supported. //; // (using ""operator.()"" instead of ""operator->()"") //; // //; // 4. most identifiers (including C++ identifiers, usernames, //; // environment variables, etc) //; // are restriceted to this character set: [_a-zA-Z0-9] //; // therefore, you won't be able to complete thi",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:1875,Modifiability,variab,variables,1875,"ction or data member (including base classes) //; // global variable, function, or class name //; // //; // Also, something like //; // //; // someObject->Func([TAB] //; // someObject.Func([TAB] //; // someClass::Func([TAB] //; // someClass var([TAB] //; // new someClass([TAB] //; // //; // will print a list of prototypes for the indicated //; // method or constructor. //; // //; // Current limitations and bugs: //; // //; // 1. you can only use one member access operator at a time. //; // eg, this will work: gROOT->GetListOfG[TAB] //; // but this will not: gROOT->GetListOfGlobals()->Conta[TAB] //; // //; // 2. nothing is guaranteed to work on windows //; // (for one thing, /bin/env and /etc/passwd are hardcoded) //; // //; // 3. CINT shortcut #2 is deliberately not supported. //; // (using ""operator.()"" instead of ""operator->()"") //; // //; // 4. most identifiers (including C++ identifiers, usernames, //; // environment variables, etc) //; // are restriceted to this character set: [_a-zA-Z0-9] //; // therefore, you won't be able to complete things like //; // //; // operator new //; // operator+ //; // etc //; // //; // 5. ~whatever[TAB] always tries to complete a username. //; // use whitespace (~ whatever[TAB]) if you want to complete a global //; // identifier. //; // //; // 6. CINT shortcut #3 is not supported when trying to complete //; // the name of a global object. (it is supported when trying to //; // complete a member of a global object) //; // //; // 7. the list of #pragma's is hardcoded //; // (ie not obtained from the interpreter at runtime) //; // ==> user-defined #pragma's will not be recognized //; // //; // 8. the system include directories are also hardcoded //; // because i don't know how to get them from the interpreter. //; // fons, maybe they should be #ifdef'd for the different sytems? //; // //; // 9. the TabCom.FileIgnore resource is always applied, even if you //; // are not trying to complete a filename. //; // //; // 10. anything in quo",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:672,Performance,perform,performs,672,"// @(#)root/rint:$Id$; // Author: Christian Lacunza <lacunza@cdfsg6.lbl.gov> 27/04/99; // Modified by Artur Szostak <artur@alice.phy.uct.ac.za> : 1 June 2003; // Added support for namespaces.; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; ////////////////////////////////////////////////////////////////////////////; // //; // TTabCom //; // //; // This class performs basic tab completion. //; // You should be able to hit [TAB] to complete a partially typed: //; // //; // username //; // environment variable //; // preprocessor directive //; // pragma //; // filename (with a context-sensitive path) //; // public member function or data member (including base classes) //; // global variable, function, or class name //; // //; // Also, something like //; // //; // someObject->Func([TAB] //; // someObject.Func([TAB] //; // someClass::Func([TAB] //; // someClass var([TAB] //; // new someClass([TAB] //; // //; // will print a list of prototypes for the indicated //; // method or constructor. //; // //; // Current limitations and bugs: //; // //; // 1. you can only use one member access operator at a time. //; // eg, this will work: gROOT->GetListOfG[TAB] //; // but this will not: gROOT->GetListOfGlobals()->Conta[TAB] //; // //; // 2. nothing is guaranteed to work on windows //; // (for one thing, /bin/env and /etc/passwd are hardcoded) //; // //; // 3. CINT shortcut #2 is deliberately not supported. //; // (using ""operator.()"" instead of ""operator->()"") //; // //; // 4. most identifiers (including C++ identifiers, usernames, //; // environment variables, etc) //; // are restriceted to this character set: [_a-zA-Z0-9] //; // therefore, you won't be able to complete thi",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:1401,Security,access,access,1401,"/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; ////////////////////////////////////////////////////////////////////////////; // //; // TTabCom //; // //; // This class performs basic tab completion. //; // You should be able to hit [TAB] to complete a partially typed: //; // //; // username //; // environment variable //; // preprocessor directive //; // pragma //; // filename (with a context-sensitive path) //; // public member function or data member (including base classes) //; // global variable, function, or class name //; // //; // Also, something like //; // //; // someObject->Func([TAB] //; // someObject.Func([TAB] //; // someClass::Func([TAB] //; // someClass var([TAB] //; // new someClass([TAB] //; // //; // will print a list of prototypes for the indicated //; // method or constructor. //; // //; // Current limitations and bugs: //; // //; // 1. you can only use one member access operator at a time. //; // eg, this will work: gROOT->GetListOfG[TAB] //; // but this will not: gROOT->GetListOfGlobals()->Conta[TAB] //; // //; // 2. nothing is guaranteed to work on windows //; // (for one thing, /bin/env and /etc/passwd are hardcoded) //; // //; // 3. CINT shortcut #2 is deliberately not supported. //; // (using ""operator.()"" instead of ""operator->()"") //; // //; // 4. most identifiers (including C++ identifiers, usernames, //; // environment variables, etc) //; // are restriceted to this character set: [_a-zA-Z0-9] //; // therefore, you won't be able to complete things like //; // //; // operator new //; // operator+ //; // etc //; // //; // 5. ~whatever[TAB] always tries to complete a username. //; // use whitespace (~ whatever[TAB]) if you want to complete a global //; // identifier. //; // //; // 6. CINT shortcut #3 is not supported when trying to complete //; // the name of a global object. (it is supported when trying to //; // complete a member of a g",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:106,Modifiability,variab,variables,106,"// ----------------------------------------------------------------------------; //; // global/file scope variables; //",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:18,Performance,cache,cached,18,"// this one stays cached",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:18,Performance,cache,cached,18,"// this one stays cached",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:203,Usability,Clear,Clear,203,"// ----------------------------------------------------------------------------; //; // public member functions; //; ////////////////////////////////////////////////////////////////////////////////; /// Clear classes and namespace collections.",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:109,Modifiability,variab,variables,109,"////////////////////////////////////////////////////////////////////////////////; /// Forget all environment variables seen so far.",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:104,Modifiability,variab,variables,104,"////////////////////////////////////////////////////////////////////////////////; /// Forget all global variables seen so far.; /// With teh new implamentation the list is gROOT->GetListOfGlobals(true).",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:86,Usability,clear,clears,86,"////////////////////////////////////////////////////////////////////////////////; /// clears all lists; /// except for user names and system include files.",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:42,Performance,cache,cached,42,"// ClearSysIncFiles(); <-- this one stays cached; // ClearUsers(); <-- this one stays cached",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:86,Performance,cache,cached,86,"// ClearSysIncFiles(); <-- this one stays cached; // ClearUsers(); <-- this one stays cached",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:3,Usability,Clear,ClearSysIncFiles,3,"// ClearSysIncFiles(); <-- this one stays cached; // ClearUsers(); <-- this one stays cached",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:53,Usability,Clear,ClearUsers,53,"// ClearSysIncFiles(); <-- this one stays cached; // ClearUsers(); <-- this one stays cached",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:98,Modifiability,variab,variables,98,"////////////////////////////////////////////////////////////////////////////////; /// Environemnt variables rehashing.",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:86,Usability,clear,clears,86,"////////////////////////////////////////////////////////////////////////////////; /// clears and then rebuilds all lists; /// except for user names and system include files.",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:43,Performance,cache,cached,43,"// RehashSysIncFiles(); <-- this one stays cached; // RehashUsers(); <-- this one stays cached",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:88,Performance,cache,cached,88,"// RehashSysIncFiles(); <-- this one stays cached; // RehashUsers(); <-- this one stays cached",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:113,Performance,load,loaded,113,"// We might have autoload entries that don't have a rootmap entry; // (libCore) and no interpreter info (not yet loaded).",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:150,Modifiability,variab,variables,150,"////////////////////////////////////////////////////////////////////////////////; /// Uses ""env"" (Unix) or ""set"" (Windows) to get list of environment variables.",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:212,Testability,stub,stub,212,"// ""setertti "" omitted. Ordinary user should not use this statement; // ""setstdio "" omitted. Ordinary user should not use this statement; // ""setstream "" omitted. Ordinary user should not use this statement; // ""stub"" omitted. Ordinary user should not use this statement",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:140,Availability,error,error,140,"// it is normal for this function to receive names of directories that do not exist.; // they should be ignored and should not generate any error messages.",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:146,Integrability,message,messages,146,"// it is normal for this function to receive names of directories that do not exist.; // they should be ignored and should not generate any error messages.",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:250,Availability,failure,failure,250,"// -----\/-------- homemade RTTI ---------------\/------------------------; ////////////////////////////////////////////////////////////////////////////////; ///[static utility function]/////////////////////////////; ///; /// returns empty string on failure.; /// otherwise returns something like this: ""TROOT*"".; /// fails for non-class types (ie, int, char, etc).; /// fails for pointers to functions.; ///; ////////////////////////////////////",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:130,Availability,Error,Error,130,"///////////////////////////////////; //; // note that because of the strange way this function works,; // CINT will print; //; // Error: No symbol asdf in current scope FILE:/var/tmp/gaaa001HR LINE:1; //; // if ""varName"" is not defined. (in this case, varName==""asdf""); // i don't know how to suppress this.; //; ///////////////////////////////////",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:19,Modifiability,variab,variable,19,"// the type of the variable whose name is ""varName""; // should now be stored on disk in the file ""tmpfile""",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:289,Availability,failure,failure,289,"////////////////////////////////////////////////////////////////////////////////; ///[static utility function]/////////////////////////////; ///; /// returns a colon-separated string of directories; /// that CINT will search when you call `#include<...>`; ///; /// returns empty string on failure.; ///; ////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:788,Usability,UX,UX,788,"// >i noticed that .include doesn't list the standard directories like; // >/usr/include or /usr/include/CC.; // >; // >how can i get a list of all the directories the interpreter will; // >search through when the user does a #include<...> ?; //; // Right now, there is no easy command to tell you about it. Instead, I can; // describe it here.; //; // 1) CINT first searches current working directory for #include ""xxx""; // (#include <xxx> does not); //; // 2) CINT searches include path directories given by -I option; //; // 3) CINT searches following standard include directories.; // $CINTSYSDIR/include; // $CINTSYSDIR/stl; // $CINTSYSDIR/msdev/include if VC++4.0; // $CINTSYSDIR/sc/include if Symantec C++; // /usr/include; // /usr/include/g++ if gcc,g++; // /usr/include/CC if HP-UX; // /usr/include/codelibs if HP-UX; //; // .include command only displays 2).; //; // Thank you; // Masaharu Goto; // 1) current dir; // ----------------------------------------------; // N/A; // 2) -I option (and #pragma includepath); // ----------------------------------------------; // get this part of the include path from the interpreter; // and stick it in a tmp file.",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:823,Usability,UX,UX,823,"// >i noticed that .include doesn't list the standard directories like; // >/usr/include or /usr/include/CC.; // >; // >how can i get a list of all the directories the interpreter will; // >search through when the user does a #include<...> ?; //; // Right now, there is no easy command to tell you about it. Instead, I can; // describe it here.; //; // 1) CINT first searches current working directory for #include ""xxx""; // (#include <xxx> does not); //; // 2) CINT searches include path directories given by -I option; //; // 3) CINT searches following standard include directories.; // $CINTSYSDIR/include; // $CINTSYSDIR/stl; // $CINTSYSDIR/msdev/include if VC++4.0; // $CINTSYSDIR/sc/include if Symantec C++; // /usr/include; // /usr/include/g++ if gcc,g++; // /usr/include/CC if HP-UX; // /usr/include/codelibs if HP-UX; //; // .include command only displays 2).; //; // Thank you; // Masaharu Goto; // 1) current dir; // ----------------------------------------------; // N/A; // 2) -I option (and #pragma includepath); // ----------------------------------------------; // get this part of the include path from the interpreter; // and stick it in a tmp file.",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:3,Availability,error,error,3,"// error",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:274,Energy Efficiency,allocate,allocated,274,"////////////////////////////////////////////////////////////////////////////////; ///[static utility function]/////////////////////////////; ///; /// creates a list containing the full path name for each file; /// in the (colon separated) string ""path1""; ///; /// memory is allocated with ""new"", so; /// whoever calls this function takes responsibility for deleting it.; ///; ///////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:337,Modifiability,variab,variable,337,"////////////////////////////////////////////////////////////////////////////////; ///[static utility function]/////////////////////////////; ///; /// true if ""fileName""; /// 1. is an absolute path (""/tmp/a""); /// 2. is a relative path (""../whatever"", ""./test""); /// 3. starts with user name (""~/mail""); /// 4. starts with an environment variable (""$ROOTSYS/bin""); ///; ///////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:254,Testability,test,test,254,"////////////////////////////////////////////////////////////////////////////////; ///[static utility function]/////////////////////////////; ///; /// true if ""fileName""; /// 1. is an absolute path (""/tmp/a""); /// 2. is a relative path (""../whatever"", ""./test""); /// 3. starts with user name (""~/mail""); /// 4. starts with an environment variable (""$ROOTSYS/bin""); ///; ///////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:166,Availability,error,errorLevel,166,"////////////////////////////////////////////////////////////////////////////////; ///[static utility function]/////////////////////////////; ///; /// calling ""NoMsg( errorLevel )"",; /// sets ""gErrorIgnoreLevel"" to ""errorLevel+1"" so that; /// all errors with ""level < errorLevel"" will be ignored.; ///; /// calling the function with a negative argument; /// (e.g., ""NoMsg( -1 )""); /// resets gErrorIgnoreLevel to its previous value.; ///; ///////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:215,Availability,error,errorLevel,215,"////////////////////////////////////////////////////////////////////////////////; ///[static utility function]/////////////////////////////; ///; /// calling ""NoMsg( errorLevel )"",; /// sets ""gErrorIgnoreLevel"" to ""errorLevel+1"" so that; /// all errors with ""level < errorLevel"" will be ignored.; ///; /// calling the function with a negative argument; /// (e.g., ""NoMsg( -1 )""); /// resets gErrorIgnoreLevel to its previous value.; ///; ///////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:246,Availability,error,errors,246,"////////////////////////////////////////////////////////////////////////////////; ///[static utility function]/////////////////////////////; ///; /// calling ""NoMsg( errorLevel )"",; /// sets ""gErrorIgnoreLevel"" to ""errorLevel+1"" so that; /// all errors with ""level < errorLevel"" will be ignored.; ///; /// calling the function with a negative argument; /// (e.g., ""NoMsg( -1 )""); /// resets gErrorIgnoreLevel to its previous value.; ///; ///////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:267,Availability,error,errorLevel,267,"////////////////////////////////////////////////////////////////////////////////; ///[static utility function]/////////////////////////////; ///; /// calling ""NoMsg( errorLevel )"",; /// sets ""gErrorIgnoreLevel"" to ""errorLevel+1"" so that; /// all errors with ""level < errorLevel"" will be ignored.; ///; /// calling the function with a negative argument; /// (e.g., ""NoMsg( -1 )""); /// resets gErrorIgnoreLevel to its previous value.; ///; ///////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:247,Availability,error,error,247,"////////////////////////////////////////////////////////////////; //; // if you call the function twice with a non-negative argument; // (without an intervening call with a negative argument); // it will complain because it is almost certainly an error; // that will cause the function to loose track of the previous; // value of gErrorIgnoreLevel.; //; // most common causes: 1. suspiciously placed ""return;"" statement; // 2. calling a function that calls ""NoMsg()""; //; //////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:80,Integrability,depend,depending,80,"// -----------------------------------------; // 3. beep, list, or complete; // depending on how many matches were found; // -----------------------------------------; // 3a. no matches ==> bell",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:13,Deployability,update,update,13,"// else:; // update the matching part, will have changed; // capitalization because only cmp == TString::kIgnoreCase; // matches.",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:85,Deployability,update,update,85,"// the ""get""->""Get"" case of TString::kIgnore sets pos to -2; // and falls through to update the buffer; we need to return; // -2 in that case, so check here:",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:3,Safety,Avoid,Avoid,3,"// Avoid warning about uninitialized pClass.",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:3,Safety,Avoid,Avoid,3,"// Avoid warning about uninitialized pClass.",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:3,Safety,Avoid,Avoid,3,"// Avoid warning about uninitialized pClass.",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:3,Safety,Avoid,Avoid,3,"// Avoid warning about uninitialized pClass.",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:121,Availability,error,error,121,"////////////////////////////////////////////////////////////////////////////////; /// [private]; /// (does some specific error handling that makes the function unsuitable for general use.); /// returns a new'd TClass given the name of a class.; /// user must delete.; /// returns 0 in case of error.",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:293,Availability,error,error,293,"////////////////////////////////////////////////////////////////////////////////; /// [private]; /// (does some specific error handling that makes the function unsuitable for general use.); /// returns a new'd TClass given the name of a class.; /// user must delete.; /// returns 0 in case of error.",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:47,Integrability,message,message,47,"// the TClass constructor will print a Warning message for classes that don't exist; // so, ignore warnings temporarily.",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:48,Availability,error,error,48,"// i'm assuming this happens iff there was some error.; // (misspelled the class name, for example)",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:123,Availability,error,error,123,"////////////////////////////////////////////////////////////////////////////////; /// Same as above but does not print the error message.",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:129,Integrability,message,message,129,"////////////////////////////////////////////////////////////////////////////////; /// Same as above but does not print the error message.",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:47,Integrability,message,message,47,"// the TClass constructor will print a Warning message for classes that don't exist; // so, ignore warnings temporarily.",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:121,Availability,error,error,121,"////////////////////////////////////////////////////////////////////////////////; /// [private]; /// (does some specific error handling that makes the function unsuitable for general use.); /// returns a new'd TClass given the name of a variable.; /// user must delete.; /// returns 0 in case of error.; /// if user has operator.() or operator->() backwards, will modify: context, *fpLoc and fBuf.; /// context sensitive behavior.",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:296,Availability,error,error,296,"////////////////////////////////////////////////////////////////////////////////; /// [private]; /// (does some specific error handling that makes the function unsuitable for general use.); /// returns a new'd TClass given the name of a variable.; /// user must delete.; /// returns 0 in case of error.; /// if user has operator.() or operator->() backwards, will modify: context, *fpLoc and fBuf.; /// context sensitive behavior.",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:237,Modifiability,variab,variable,237,"////////////////////////////////////////////////////////////////////////////////; /// [private]; /// (does some specific error handling that makes the function unsuitable for general use.); /// returns a new'd TClass given the name of a variable.; /// user must delete.; /// returns 0 in case of error.; /// if user has operator.() or operator->() backwards, will modify: context, *fpLoc and fBuf.; /// context sensitive behavior.",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:543,Availability,error,error,543,"// frodo:; // Because of the Member and Proto recursion, this has become a bit; // complicated, so here is how it works:; //; // root [1] var.a.b.c[TAB]; //; // will generate the sucessive calls:; // MakeClassFromVarName(""var.a.b.c"", context, 0) returns the class of ""c""; // MakeClassFromVarName(""var.a.b"", context, 1) returns the class of ""b""; // MakeClassFromVarName(""var.a"", context, 2) returns the class of ""a""; // MakeClassFromVarName(""var"", context, 3); // need to make sure ""varName"" exists; // because ""DetermineClass()"" prints clumsy error message otherwise.",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:549,Integrability,message,message,549,"// frodo:; // Because of the Member and Proto recursion, this has become a bit; // complicated, so here is how it works:; //; // root [1] var.a.b.c[TAB]; //; // will generate the sucessive calls:; // MakeClassFromVarName(""var.a.b.c"", context, 0) returns the class of ""c""; // MakeClassFromVarName(""var.a.b"", context, 1) returns the class of ""b""; // MakeClassFromVarName(""var.a"", context, 2) returns the class of ""a""; // MakeClassFromVarName(""var"", context, 3); // need to make sure ""varName"" exists; // because ""DetermineClass()"" prints clumsy error message otherwise.",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:26,Modifiability,variab,variable,26,"// If it's not a ""simple"" variable and if there is at least one ""."" or ""->""",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:18,Usability,simpl,simple,18,"// If it's not a ""simple"" variable and if there is at least one ""."" or ""->""",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:65,Safety,safe,safe,65,"// Check if it's a proto: must have (); // This might not be too safe to use :(",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:246,Modifiability,variab,variable,246,/*****************************************************************************************/; /* */; /* this section is really ugly. */; /* and slow. */; /* it could be made a lot better if there was some way to tell whether or not a given */; /* variable is a pointer or a pointer to a pointer. */; /* */; /*****************************************************************************************/,MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:3,Safety,Avoid,Avoid,3,"// Avoid warning about uninitialized pClass.",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:3,Safety,Avoid,Avoid,3,"// Avoid warning about uninitialized pClass.",MatchSource.CODE_COMMENT,core/rint/src/TTabCom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/test/TTabComTests.cxx:66,Testability,test,tests,66,"/// \file TTabComTests.cxx; ///; /// \brief The file contain unit tests which test the TTabCom class.; ///; /// \author Vassil Vassilev <vvasilev@cern.ch>; ///; /// \date Jul, 2020; ///; /*************************************************************************; * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,core/rint/test/TTabComTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/test/TTabComTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rint/test/TTabComTests.cxx:78,Testability,test,test,78,"/// \file TTabComTests.cxx; ///; /// \brief The file contain unit tests which test the TTabCom class.; ///; /// \author Vassil Vassilev <vvasilev@cern.ch>; ///; /// \date Jul, 2020; ///; /*************************************************************************; * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,core/rint/test/TTabComTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/test/TTabComTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rootcling_stage1/src/rootcling_stage1.cxx:16,Modifiability,variab,variable,16,"// avoid unused variable warning",MatchSource.CODE_COMMENT,core/rootcling_stage1/src/rootcling_stage1.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rootcling_stage1/src/rootcling_stage1.cxx
https://github.com/root-project/root/tree/v6-32-06/core/rootcling_stage1/src/rootcling_stage1.cxx:3,Safety,avoid,avoid,3,"// avoid unused variable warning",MatchSource.CODE_COMMENT,core/rootcling_stage1/src/rootcling_stage1.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rootcling_stage1/src/rootcling_stage1.cxx
https://github.com/root-project/root/tree/v6-32-06/core/sanitizer/SanitizerSetup.cxx:295,Availability,avail,available,295,"/// Default options when address sanitizer starts up in ROOT executables.; /// This is relevant when ROOT's build option `asan` is on.; /// These can be overridden / augmented by the ASAN_OPTIONS environment variable.; /// Using ASAN_OPTIONS=help=1 and starting an instrumented ROOT exectuable, available options will be printed.",MatchSource.CODE_COMMENT,core/sanitizer/SanitizerSetup.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/sanitizer/SanitizerSetup.cxx
https://github.com/root-project/root/tree/v6-32-06/core/sanitizer/SanitizerSetup.cxx:208,Modifiability,variab,variable,208,"/// Default options when address sanitizer starts up in ROOT executables.; /// This is relevant when ROOT's build option `asan` is on.; /// These can be overridden / augmented by the ASAN_OPTIONS environment variable.; /// Using ASAN_OPTIONS=help=1 and starting an instrumented ROOT exectuable, available options will be printed.",MatchSource.CODE_COMMENT,core/sanitizer/SanitizerSetup.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/sanitizer/SanitizerSetup.cxx
https://github.com/root-project/root/tree/v6-32-06/core/sanitizer/SanitizerSetup.cxx:33,Security,sanitiz,sanitizer,33,"/// Default options when address sanitizer starts up in ROOT executables.; /// This is relevant when ROOT's build option `asan` is on.; /// These can be overridden / augmented by the ASAN_OPTIONS environment variable.; /// Using ASAN_OPTIONS=help=1 and starting an instrumented ROOT exectuable, available options will be printed.",MatchSource.CODE_COMMENT,core/sanitizer/SanitizerSetup.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/sanitizer/SanitizerSetup.cxx
https://github.com/root-project/root/tree/v6-32-06/core/sanitizer/SanitizerSetup.cxx:151,Performance,load,loading,151,"// TODO: Re-enable check_initialization_order=1, currently finds a false; // positive in llvm::DataLayout::reset accessing DefaultAlignments while; // loading the Net library.",MatchSource.CODE_COMMENT,core/sanitizer/SanitizerSetup.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/sanitizer/SanitizerSetup.cxx
https://github.com/root-project/root/tree/v6-32-06/core/sanitizer/SanitizerSetup.cxx:113,Security,access,accessing,113,"// TODO: Re-enable check_initialization_order=1, currently finds a false; // positive in llvm::DataLayout::reset accessing DefaultAlignments while; // loading the Net library.",MatchSource.CODE_COMMENT,core/sanitizer/SanitizerSetup.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/sanitizer/SanitizerSetup.cxx
https://github.com/root-project/root/tree/v6-32-06/core/sanitizer/SanitizerSetup.cxx:293,Availability,avail,available,293,"/// Default options when leak sanitizer starts up in ROOT exectuables.; /// This is relevant when ROOT's build options `asan` is on.; /// These can be overridden / augmented by the LSAN_OPTIONS environment variable.; /// Using LSAN_OPTIONS=help=1 and starting an instrumented ROOT exectuable, available options will be printed.",MatchSource.CODE_COMMENT,core/sanitizer/SanitizerSetup.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/sanitizer/SanitizerSetup.cxx
https://github.com/root-project/root/tree/v6-32-06/core/sanitizer/SanitizerSetup.cxx:206,Modifiability,variab,variable,206,"/// Default options when leak sanitizer starts up in ROOT exectuables.; /// This is relevant when ROOT's build options `asan` is on.; /// These can be overridden / augmented by the LSAN_OPTIONS environment variable.; /// Using LSAN_OPTIONS=help=1 and starting an instrumented ROOT exectuable, available options will be printed.",MatchSource.CODE_COMMENT,core/sanitizer/SanitizerSetup.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/sanitizer/SanitizerSetup.cxx
https://github.com/root-project/root/tree/v6-32-06/core/sanitizer/SanitizerSetup.cxx:30,Security,sanitiz,sanitizer,30,"/// Default options when leak sanitizer starts up in ROOT exectuables.; /// This is relevant when ROOT's build options `asan` is on.; /// These can be overridden / augmented by the LSAN_OPTIONS environment variable.; /// Using LSAN_OPTIONS=help=1 and starting an instrumented ROOT exectuable, available options will be printed.",MatchSource.CODE_COMMENT,core/sanitizer/SanitizerSetup.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/sanitizer/SanitizerSetup.cxx
https://github.com/root-project/root/tree/v6-32-06/core/sanitizer/SanitizerSetup.cxx:34,Security,sanitiz,sanitizer,34,"/// Default suppressions for leak sanitizer in ROOT.; /// Since llvm uses allocators that do not give back memory, many leaks would show up.; /// A customisable version can be found in `$ROOTSYS/build/`.",MatchSource.CODE_COMMENT,core/sanitizer/SanitizerSetup.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/sanitizer/SanitizerSetup.cxx
https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx:10,Testability,Test,TestSupport,10,"/// \file TestSupport.hxx; ///; /// \brief The file contains facilities allowing easier writing of in-tree unit tests; ///; /// \author Pratyush Das <reikdas@gmail.com>; /// \author Vassil Vassilev <vvasilev@cern.ch>; /// \author Stephan Hageboeck <stephan.hageboeck@cern.ch>; ///; /// \date April, 2020; /*************************************************************************; * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,core/testsupport/inc/ROOT/TestSupport.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx
https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx:112,Testability,test,tests,112,"/// \file TestSupport.hxx; ///; /// \brief The file contains facilities allowing easier writing of in-tree unit tests; ///; /// \author Pratyush Das <reikdas@gmail.com>; /// \author Vassil Vassilev <vvasilev@cern.ch>; /// \author Stephan Hageboeck <stephan.hageboeck@cern.ch>; ///; /// \date April, 2020; /*************************************************************************; * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,core/testsupport/inc/ROOT/TestSupport.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx
https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx:155,Safety,abort,abort,155,"/// \brief Allows a user function to catch and filter/analyse ROOT and cling diagnostics, e.g.; /// ```c++; /// FilterDiagsRAII RAII([] (int level, Bool_t abort,; /// const char *location, const char *msg) {; /// EXPECT_THAT(msg, Not(HasSubstr(""-Wunused-result"")));; /// });; /// ```",MatchSource.CODE_COMMENT,core/testsupport/inc/ROOT/TestSupport.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx
https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx:310,Availability,failure,failures,310,"/// Install a ROOT diagnostic handler to analyse diagnostics.; /// It will record all diagnostics during its lifetime, and analyse them at destruction.; /// Required and/or optional diagnostics need to be predefined with expected location and message.; /// Unexpected or missing diagnostics will lead to gtest failures.; ///; /// Example:; /// ```c++; /// CheckDiagsRAII diagRAII{CheckDiagsRAII::EDK_Error, ""TFile::TFile"", ""<Expected message>""};; /// diagRAII.optionalDiag(kInfo, ""TFile::TFile"", ""Message that is issued only sometimes"");; /// <test code>; ///; /// ```",MatchSource.CODE_COMMENT,core/testsupport/inc/ROOT/TestSupport.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx
https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx:4,Deployability,Install,Install,4,"/// Install a ROOT diagnostic handler to analyse diagnostics.; /// It will record all diagnostics during its lifetime, and analyse them at destruction.; /// Required and/or optional diagnostics need to be predefined with expected location and message.; /// Unexpected or missing diagnostics will lead to gtest failures.; ///; /// Example:; /// ```c++; /// CheckDiagsRAII diagRAII{CheckDiagsRAII::EDK_Error, ""TFile::TFile"", ""<Expected message>""};; /// diagRAII.optionalDiag(kInfo, ""TFile::TFile"", ""Message that is issued only sometimes"");; /// <test code>; ///; /// ```",MatchSource.CODE_COMMENT,core/testsupport/inc/ROOT/TestSupport.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx
https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx:243,Integrability,message,message,243,"/// Install a ROOT diagnostic handler to analyse diagnostics.; /// It will record all diagnostics during its lifetime, and analyse them at destruction.; /// Required and/or optional diagnostics need to be predefined with expected location and message.; /// Unexpected or missing diagnostics will lead to gtest failures.; ///; /// Example:; /// ```c++; /// CheckDiagsRAII diagRAII{CheckDiagsRAII::EDK_Error, ""TFile::TFile"", ""<Expected message>""};; /// diagRAII.optionalDiag(kInfo, ""TFile::TFile"", ""Message that is issued only sometimes"");; /// <test code>; ///; /// ```",MatchSource.CODE_COMMENT,core/testsupport/inc/ROOT/TestSupport.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx
https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx:434,Integrability,message,message,434,"/// Install a ROOT diagnostic handler to analyse diagnostics.; /// It will record all diagnostics during its lifetime, and analyse them at destruction.; /// Required and/or optional diagnostics need to be predefined with expected location and message.; /// Unexpected or missing diagnostics will lead to gtest failures.; ///; /// Example:; /// ```c++; /// CheckDiagsRAII diagRAII{CheckDiagsRAII::EDK_Error, ""TFile::TFile"", ""<Expected message>""};; /// diagRAII.optionalDiag(kInfo, ""TFile::TFile"", ""Message that is issued only sometimes"");; /// <test code>; ///; /// ```",MatchSource.CODE_COMMENT,core/testsupport/inc/ROOT/TestSupport.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx
https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx:497,Integrability,Message,Message,497,"/// Install a ROOT diagnostic handler to analyse diagnostics.; /// It will record all diagnostics during its lifetime, and analyse them at destruction.; /// Required and/or optional diagnostics need to be predefined with expected location and message.; /// Unexpected or missing diagnostics will lead to gtest failures.; ///; /// Example:; /// ```c++; /// CheckDiagsRAII diagRAII{CheckDiagsRAII::EDK_Error, ""TFile::TFile"", ""<Expected message>""};; /// diagRAII.optionalDiag(kInfo, ""TFile::TFile"", ""Message that is issued only sometimes"");; /// <test code>; ///; /// ```",MatchSource.CODE_COMMENT,core/testsupport/inc/ROOT/TestSupport.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx
https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx:544,Testability,test,test,544,"/// Install a ROOT diagnostic handler to analyse diagnostics.; /// It will record all diagnostics during its lifetime, and analyse them at destruction.; /// Required and/or optional diagnostics need to be predefined with expected location and message.; /// Unexpected or missing diagnostics will lead to gtest failures.; ///; /// Example:; /// ```c++; /// CheckDiagsRAII diagRAII{CheckDiagsRAII::EDK_Error, ""TFile::TFile"", ""<Expected message>""};; /// diagRAII.optionalDiag(kInfo, ""TFile::TFile"", ""Message that is issued only sometimes"");; /// <test code>; ///; /// ```",MatchSource.CODE_COMMENT,core/testsupport/inc/ROOT/TestSupport.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx
https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx:114,Availability,failure,failure,114,"/// Register this instance as diagnostic handler.; /// With no further action, any diagnostic will lead to a test failure.",MatchSource.CODE_COMMENT,core/testsupport/inc/ROOT/TestSupport.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx
https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx:109,Testability,test,test,109,"/// Register this instance as diagnostic handler.; /// With no further action, any diagnostic will lead to a test failure.",MatchSource.CODE_COMMENT,core/testsupport/inc/ROOT/TestSupport.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx
https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx:86,Integrability,message,message,86,"/// Construct from ROOT's `kWarning, kError, ...` and strings specifying location and message.",MatchSource.CODE_COMMENT,core/testsupport/inc/ROOT/TestSupport.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx
https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx:191,Integrability,message,message,191,"/// Register a new diagnostic to check for.; /// \param severity One of kInfo kWarning kError kSysError.; /// \param location Function name where the diagnostic should be issued.; /// \param message Diagnostic message.; /// \param matchFullMessage If true, the message must be exactly identical.; /// If false, it's sufficient that `message` is a substring of the diagnostic message.",MatchSource.CODE_COMMENT,core/testsupport/inc/ROOT/TestSupport.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx
https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx:210,Integrability,message,message,210,"/// Register a new diagnostic to check for.; /// \param severity One of kInfo kWarning kError kSysError.; /// \param location Function name where the diagnostic should be issued.; /// \param message Diagnostic message.; /// \param matchFullMessage If true, the message must be exactly identical.; /// If false, it's sufficient that `message` is a substring of the diagnostic message.",MatchSource.CODE_COMMENT,core/testsupport/inc/ROOT/TestSupport.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx
https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx:261,Integrability,message,message,261,"/// Register a new diagnostic to check for.; /// \param severity One of kInfo kWarning kError kSysError.; /// \param location Function name where the diagnostic should be issued.; /// \param message Diagnostic message.; /// \param matchFullMessage If true, the message must be exactly identical.; /// If false, it's sufficient that `message` is a substring of the diagnostic message.",MatchSource.CODE_COMMENT,core/testsupport/inc/ROOT/TestSupport.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx
https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx:333,Integrability,message,message,333,"/// Register a new diagnostic to check for.; /// \param severity One of kInfo kWarning kError kSysError.; /// \param location Function name where the diagnostic should be issued.; /// \param message Diagnostic message.; /// \param matchFullMessage If true, the message must be exactly identical.; /// If false, it's sufficient that `message` is a substring of the diagnostic message.",MatchSource.CODE_COMMENT,core/testsupport/inc/ROOT/TestSupport.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx
https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx:375,Integrability,message,message,375,"/// Register a new diagnostic to check for.; /// \param severity One of kInfo kWarning kError kSysError.; /// \param location Function name where the diagnostic should be issued.; /// \param message Diagnostic message.; /// \param matchFullMessage If true, the message must be exactly identical.; /// If false, it's sufficient that `message` is a substring of the diagnostic message.",MatchSource.CODE_COMMENT,core/testsupport/inc/ROOT/TestSupport.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx
https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx:219,Integrability,message,message,219,"/// Register a diagnostic that can, but need not necessarily be issued.; /// \param severity One of kInfo kWarning kError kSysError.; /// \param location Function name where the diagnostic should be issued.; /// \param message Diagnostic message.; /// \param matchFullMessage If true, the message must be exactly identical.; /// If false, it's sufficient that `message` is a substring of the diagnostic message.",MatchSource.CODE_COMMENT,core/testsupport/inc/ROOT/TestSupport.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx
https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx:238,Integrability,message,message,238,"/// Register a diagnostic that can, but need not necessarily be issued.; /// \param severity One of kInfo kWarning kError kSysError.; /// \param location Function name where the diagnostic should be issued.; /// \param message Diagnostic message.; /// \param matchFullMessage If true, the message must be exactly identical.; /// If false, it's sufficient that `message` is a substring of the diagnostic message.",MatchSource.CODE_COMMENT,core/testsupport/inc/ROOT/TestSupport.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx
https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx:289,Integrability,message,message,289,"/// Register a diagnostic that can, but need not necessarily be issued.; /// \param severity One of kInfo kWarning kError kSysError.; /// \param location Function name where the diagnostic should be issued.; /// \param message Diagnostic message.; /// \param matchFullMessage If true, the message must be exactly identical.; /// If false, it's sufficient that `message` is a substring of the diagnostic message.",MatchSource.CODE_COMMENT,core/testsupport/inc/ROOT/TestSupport.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx
https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx:361,Integrability,message,message,361,"/// Register a diagnostic that can, but need not necessarily be issued.; /// \param severity One of kInfo kWarning kError kSysError.; /// \param location Function name where the diagnostic should be issued.; /// \param message Diagnostic message.; /// \param matchFullMessage If true, the message must be exactly identical.; /// If false, it's sufficient that `message` is a substring of the diagnostic message.",MatchSource.CODE_COMMENT,core/testsupport/inc/ROOT/TestSupport.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx
https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx:403,Integrability,message,message,403,"/// Register a diagnostic that can, but need not necessarily be issued.; /// \param severity One of kInfo kWarning kError kSysError.; /// \param location Function name where the diagnostic should be issued.; /// \param message Diagnostic message.; /// \param matchFullMessage If true, the message must be exactly identical.; /// If false, it's sufficient that `message` is a substring of the diagnostic message.",MatchSource.CODE_COMMENT,core/testsupport/inc/ROOT/TestSupport.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx
https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx:4,Integrability,Message,Message,4,"/// Message handler that hands over all diagnostics to the currently active instance.",MatchSource.CODE_COMMENT,core/testsupport/inc/ROOT/TestSupport.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx
https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx:16,Availability,error,error,16,"/// Last active error handler function.",MatchSource.CODE_COMMENT,core/testsupport/inc/ROOT/TestSupport.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx
https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx:19,Testability,Test,TestSupport,19,"// namespace ROOT::TestSupport",MatchSource.CODE_COMMENT,core/testsupport/inc/ROOT/TestSupport.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx
https://github.com/root-project/root/tree/v6-32-06/core/testsupport/src/TestSupport.cxx:60,Integrability,message,message,60,"/// \file; /// \brief This file contains a specialised ROOT message handler to test for diagnostic in unit tests.; ///; /// \author Stephan Hageboeck <stephan.hageboeck@cern.ch>; /*************************************************************************; * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,core/testsupport/src/TestSupport.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/testsupport/src/TestSupport.cxx
https://github.com/root-project/root/tree/v6-32-06/core/testsupport/src/TestSupport.cxx:79,Testability,test,test,79,"/// \file; /// \brief This file contains a specialised ROOT message handler to test for diagnostic in unit tests.; ///; /// \author Stephan Hageboeck <stephan.hageboeck@cern.ch>; /*************************************************************************; * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,core/testsupport/src/TestSupport.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/testsupport/src/TestSupport.cxx
https://github.com/root-project/root/tree/v6-32-06/core/testsupport/src/TestSupport.cxx:107,Testability,test,tests,107,"/// \file; /// \brief This file contains a specialised ROOT message handler to test for diagnostic in unit tests.; ///; /// \author Stephan Hageboeck <stephan.hageboeck@cern.ch>; /*************************************************************************; * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,core/testsupport/src/TestSupport.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/testsupport/src/TestSupport.cxx
https://github.com/root-project/root/tree/v6-32-06/core/testsupport/src/TestSupport.cxx:4,Availability,Error,Error,4,"/// Error handler for gtests that generates failures for every received diagnostic > kInfo when this file is linked to.",MatchSource.CODE_COMMENT,core/testsupport/src/TestSupport.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/testsupport/src/TestSupport.cxx
https://github.com/root-project/root/tree/v6-32-06/core/testsupport/src/TestSupport.cxx:44,Availability,failure,failures,44,"/// Error handler for gtests that generates failures for every received diagnostic > kInfo when this file is linked to.",MatchSource.CODE_COMMENT,core/testsupport/src/TestSupport.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/testsupport/src/TestSupport.cxx
https://github.com/root-project/root/tree/v6-32-06/core/testsupport/src/TestSupport.cxx:91,Availability,failure,failure,91,"/// Diagnostic handler that's installed for all google tests.; /// It will generate a test failure when a diagnostic message is issued.",MatchSource.CODE_COMMENT,core/testsupport/src/TestSupport.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/testsupport/src/TestSupport.cxx
https://github.com/root-project/root/tree/v6-32-06/core/testsupport/src/TestSupport.cxx:30,Deployability,install,installed,30,"/// Diagnostic handler that's installed for all google tests.; /// It will generate a test failure when a diagnostic message is issued.",MatchSource.CODE_COMMENT,core/testsupport/src/TestSupport.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/testsupport/src/TestSupport.cxx
https://github.com/root-project/root/tree/v6-32-06/core/testsupport/src/TestSupport.cxx:117,Integrability,message,message,117,"/// Diagnostic handler that's installed for all google tests.; /// It will generate a test failure when a diagnostic message is issued.",MatchSource.CODE_COMMENT,core/testsupport/src/TestSupport.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/testsupport/src/TestSupport.cxx
https://github.com/root-project/root/tree/v6-32-06/core/testsupport/src/TestSupport.cxx:55,Testability,test,tests,55,"/// Diagnostic handler that's installed for all google tests.; /// It will generate a test failure when a diagnostic message is issued.",MatchSource.CODE_COMMENT,core/testsupport/src/TestSupport.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/testsupport/src/TestSupport.cxx
https://github.com/root-project/root/tree/v6-32-06/core/testsupport/src/TestSupport.cxx:86,Testability,test,test,86,"/// Diagnostic handler that's installed for all google tests.; /// It will generate a test failure when a diagnostic message is issued.",MatchSource.CODE_COMMENT,core/testsupport/src/TestSupport.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/testsupport/src/TestSupport.cxx
https://github.com/root-project/root/tree/v6-32-06/core/testsupport/src/TestSupport.cxx:188,Availability,error,error,188,"/// Search list of expected diagnostics for given arguments, and increase the receivedCount.; /// If no matching predefined diagnostic is found, this will trigger an unexpected diagnostic error on exit.",MatchSource.CODE_COMMENT,core/testsupport/src/TestSupport.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/testsupport/src/TestSupport.cxx
https://github.com/root-project/root/tree/v6-32-06/core/testsupport/src/TestSupport.cxx:8,Testability,Test,TestSupport,8,"//ROOT::TestSupport",MatchSource.CODE_COMMENT,core/testsupport/src/TestSupport.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/testsupport/src/TestSupport.cxx
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline.cxx:11,Energy Efficiency,adapt,adapter,11,"// TTabCom adapter.",MatchSource.CODE_COMMENT,core/textinput/src/Getline.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline.cxx
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline.cxx:11,Integrability,adapter,adapter,11,"// TTabCom adapter.",MatchSource.CODE_COMMENT,core/textinput/src/Getline.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline.cxx
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline.cxx:11,Modifiability,adapt,adapter,11,"// TTabCom adapter.",MatchSource.CODE_COMMENT,core/textinput/src/Getline.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline.cxx
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline.cxx:20,Availability,error,error,20,"// Returns false on error",MatchSource.CODE_COMMENT,core/textinput/src/Getline.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline.cxx
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline.cxx:20,Availability,error,error,20,"// Returns false on error",MatchSource.CODE_COMMENT,core/textinput/src/Getline.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline.cxx
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline.cxx:78,Deployability,update,update,78,"// FIXME: handle single completion by completing ""line""; // FIXME: adjust r's update range, for now:; // redraw whole line, incl prompt",MatchSource.CODE_COMMENT,core/textinput/src/Getline.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline.cxx
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline.cxx:10,Energy Efficiency,allocate,allocated,10,"// Delete allocated objects.",MatchSource.CODE_COMMENT,core/textinput/src/Getline.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline.cxx
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline.cxx:36,Energy Efficiency,adapt,adapter,36,"// Tab completion handler / TTabCom adapter; // Config values:",MatchSource.CODE_COMMENT,core/textinput/src/Getline.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline.cxx
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline.cxx:36,Integrability,adapter,adapter,36,"// Tab completion handler / TTabCom adapter; // Config values:",MatchSource.CODE_COMMENT,core/textinput/src/Getline.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline.cxx
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline.cxx:36,Modifiability,adapt,adapter,36,"// Tab completion handler / TTabCom adapter; // Config values:",MatchSource.CODE_COMMENT,core/textinput/src/Getline.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline.cxx
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline.cxx:48,Modifiability,Config,Config,48,"// Tab completion handler / TTabCom adapter; // Config values:",MatchSource.CODE_COMMENT,core/textinput/src/Getline.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline.cxx
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline.cxx:167,Modifiability,variab,variable,167,"// # History file size, once HistSize is reached remove all but HistSave entries,; // # set to 0 to turn off command recording.; // # Can be overridden by environment variable ROOT_HIST=size[:save],; // # the "":save"" part is optional.; // # Rint.HistSize: 500; // # Set to -1 for sensible default (80% of HistSize), set to 0 to disable history.; // # Rint.HistSave: 400",MatchSource.CODE_COMMENT,core/textinput/src/Getline.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline.cxx
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline.cxx:3,Integrability,Wrap,Wrapper,3,"/* Wrapper around textinput.; * Modes: -1 = init, 0 = line mode, 1 = one char at a time mode, 2 = cleanup, 3 = clear input line; */",MatchSource.CODE_COMMENT,core/textinput/src/Getline.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline.cxx
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline.cxx:111,Usability,clear,clear,111,"/* Wrapper around textinput.; * Modes: -1 = init, 0 = line mode, 1 = one char at a time mode, 2 = cleanup, 3 = clear input line; */",MatchSource.CODE_COMMENT,core/textinput/src/Getline.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline.cxx
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline.cxx:21,Usability,Simpl,Simple,21,/******************* Simple C -> C++ forwards *********************************/,MatchSource.CODE_COMMENT,core/textinput/src/Getline.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline.cxx
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline.cxx:11,Modifiability,enhance,enhance,11,"// call to enhance.cxx to set colours",MatchSource.CODE_COMMENT,core/textinput/src/Getline.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline.cxx
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline.cxx:33,Integrability,interface,interface,33,/******************** Superseded interface *********************************/,MatchSource.CODE_COMMENT,core/textinput/src/Getline.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline.cxx
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline_color.cxx:25,Deployability,update,updates,25,"// Utility function that updates the display modification range if the; // color at index idx is different from what it was before.",MatchSource.CODE_COMMENT,core/textinput/src/Getline_color.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline_color.cxx
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline_color.cxx:107,Energy Efficiency,green,green,107,"// Check each char to see if it is an opening bracket,; // if so, check for its closing one and color them green.",MatchSource.CODE_COMMENT,core/textinput/src/Getline_color.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline_color.cxx
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline_color.cxx:2,Safety,avoid,avoid,2,"/*avoid ""unsigned >= 0"" condition*/",MatchSource.CODE_COMMENT,core/textinput/src/Getline_color.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline_color.cxx
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline_color.h:16,Integrability,interface,interface,16,"// Colorization interface.",MatchSource.CODE_COMMENT,core/textinput/src/Getline_color.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline_color.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Callbacks.h:358,Integrability,interface,interface,358,"//===--- Callbacks.h - Hook Registration ------------------------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the interface for acting on certain input.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,core/textinput/src/textinput/Callbacks.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Callbacks.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Callbacks.h:20,Availability,error,error,20,"// Returns false on error",MatchSource.CODE_COMMENT,core/textinput/src/textinput/Callbacks.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Callbacks.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Callbacks.h:20,Availability,error,error,20,"// Returns false on error",MatchSource.CODE_COMMENT,core/textinput/src/textinput/Callbacks.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Callbacks.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Color.h:398,Integrability,interface,interface,398,"//===--- Color.h - Color and Text Attributes --------------------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the color / text attribute structure and an interface; // that can set it.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,core/textinput/src/textinput/Color.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Color.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Color.h:12,Testability,test,test,12,"// Equality test.",MatchSource.CODE_COMMENT,core/textinput/src/textinput/Color.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Color.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Color.h:14,Testability,test,test,14,"// Inequality test.",MatchSource.CODE_COMMENT,core/textinput/src/textinput/Color.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Color.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Color.h:11,Integrability,interface,interface,11,"// Abtract interface for setting the color of text.",MatchSource.CODE_COMMENT,core/textinput/src/textinput/Color.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Color.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Display.h:12,Integrability,interface,interface,12,"// Abstract interface for displaying text.",MatchSource.CODE_COMMENT,core/textinput/src/textinput/Display.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Display.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Display.h:17,Usability,clear,clear,17,"/// If is a TTY, clear the terminal screen",MatchSource.CODE_COMMENT,core/textinput/src/textinput/Display.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Display.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Display.h:3,Deployability,Update,Update,3,"// Update the displayed text",MatchSource.CODE_COMMENT,core/textinput/src/textinput/Display.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Display.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Display.h:6,Availability,error,error,6,"// An error occurred",MatchSource.CODE_COMMENT,core/textinput/src/textinput/Display.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Display.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Editor.cpp:388,Integrability,interface,interface,388,"//===--- Editor.cpp - Output Of Text ----------------------------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the text manipulation (""editing"") interface.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,core/textinput/src/textinput/Editor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Editor.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Editor.cpp:73,Deployability,update,updates,73,"// No, even if they are unchanged: we might have; // subsequent ^R or ^S updates triggered by faking a different; // fCurHistEntry.; // if (NewHistEntry != fCurHistEntry) {",MatchSource.CODE_COMMENT,core/textinput/src/textinput/Editor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Editor.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Editor.cpp:34,Usability,undo,undo,34,"// Original line should be top of undo buffer.",MatchSource.CODE_COMMENT,core/textinput/src/textinput/Editor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Editor.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Editor.cpp:46,Deployability,update,update,46,"// changed from fwd to bkw or viceversa, just update label",MatchSource.CODE_COMMENT,core/textinput/src/textinput/Editor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Editor.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Editor.h:388,Integrability,interface,interface,388,"//===--- Editor.h - Output Of Text ------------------------------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the text manipulation (""editing"") interface.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,core/textinput/src/textinput/Editor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Editor.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Editor.h:40,Usability,clear,clears,40,"// cutting forward or wackward - change clears pastbuf",MatchSource.CODE_COMMENT,core/textinput/src/textinput/Editor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Editor.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Editor.h:3,Usability,undo,undos,3,"// undos",MatchSource.CODE_COMMENT,core/textinput/src/textinput/Editor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Editor.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/History.cpp:358,Integrability,interface,interface,358,"//===--- History.cpp - Previously Entered Lines -----------------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the interface for setting and retrieving previously; // entered input, with a persistent backend (i.e. a history file).; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,core/textinput/src/textinput/History.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/History.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/History.cpp:3,Integrability,Inject,Inject,3,"// Inject all lines of FileName.; // Intentionally ignore fMaxDepth",MatchSource.CODE_COMMENT,core/textinput/src/textinput/History.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/History.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/History.cpp:3,Security,Inject,Inject,3,"// Inject all lines of FileName.; // Intentionally ignore fMaxDepth",MatchSource.CODE_COMMENT,core/textinput/src/textinput/History.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/History.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/History.cpp:20,Usability,simpl,simply,20,"// Prune! But don't simply write our lines - other processes might have; // added their own.",MatchSource.CODE_COMMENT,core/textinput/src/textinput/History.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/History.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/History.h:358,Integrability,interface,interface,358,"//===--- History.h - Previously Entered Lines -------------------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the interface for setting and retrieving previously; // entered input, with a persistent backend (i.e. a history file).; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,core/textinput/src/textinput/History.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/History.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/History.h:43,Security,access,access,43,"// Hist file's number of lines at previous access",MatchSource.CODE_COMMENT,core/textinput/src/textinput/History.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/History.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/KeyBinding.cpp:11,Modifiability,extend,extended,11,"// Convert extended input into the corresponding Command.",MatchSource.CODE_COMMENT,core/textinput/src/textinput/KeyBinding.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/KeyBinding.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Range.h:37,Deployability,update,update,37,"// From and length; with whatever to update the prompt",MatchSource.CODE_COMMENT,core/textinput/src/textinput/Range.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Range.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Range.h:33,Modifiability,extend,extended,33,"// Prompt is ""$ ""; // Sometimes (extended input modes) followed by EditorPrompt, e.g.; // ""[bkwd''] """,MatchSource.CODE_COMMENT,core/textinput/src/textinput/Range.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Range.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Range.h:31,Deployability,update,update,31,"// Which part of the prompt to update",MatchSource.CODE_COMMENT,core/textinput/src/textinput/Range.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Range.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Reader.h:373,Integrability,interface,interface,373,"//===--- Reader.h - Input ---------------------------------------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the abstract input interface.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,core/textinput/src/textinput/Reader.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Reader.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Reader.h:18,Integrability,interface,interface,18,"// Abstract input interface.",MatchSource.CODE_COMMENT,core/textinput/src/textinput/Reader.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Reader.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/SignalHandler.cpp:358,Integrability,interface,interface,358,"//===--- SignalHandler.cpp - Signal Emission --------------------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the interface for emitting signals.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,core/textinput/src/textinput/SignalHandler.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/SignalHandler.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/SignalHandler.h:358,Integrability,interface,interface,358,"//===--- SignalHandler.h - Signal Emission ----------------------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the interface for emitting signals.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,core/textinput/src/textinput/SignalHandler.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/SignalHandler.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/SignalHandler.h:14,Integrability,interface,interface,14,"// Signalling interface.",MatchSource.CODE_COMMENT,core/textinput/src/textinput/SignalHandler.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/SignalHandler.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReader.cpp:358,Integrability,interface,interface,358,"//===--- TerminalReader.cpp - Input From Terminal ---------------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the interface reading from a terminal.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,core/textinput/src/textinput/StreamReader.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReader.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReader.h:358,Integrability,interface,interface,358,"//===--- TerminalReader.h - Input From Terminal -----------------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the interface reading from a terminal.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,core/textinput/src/textinput/StreamReader.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReader.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderUnix.cpp:358,Integrability,interface,interface,358,"//===--- TerminalReaderUnix.cpp - Input From UNIX Terminal ------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the interface reading from a UNIX terminal. It tries to; // support all common terminal types.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,core/textinput/src/textinput/StreamReaderUnix.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderUnix.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderUnix.cpp:90,Performance,queue,queue,90,"// ~ISTRIP - do not strip 8th char bit; // ~IXOFF - software flow ctrl disabled for input queue",MatchSource.CODE_COMMENT,core/textinput/src/textinput/StreamReaderUnix.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderUnix.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderUnix.cpp:35,Availability,avail,available,35,"// ~ICANON - non-canonical = input available immediately, no EOL needed, no processing, line editing disabled; // ~ISIG - don't sent signals on input chars; // ~TOSTOP - don't send SIGTTOU; // ~IEXTEN - disable implementation-defined input processing, don't process spec chars (EOL2, LNEXT...)",MatchSource.CODE_COMMENT,core/textinput/src/textinput/StreamReaderUnix.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderUnix.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderUnix.cpp:121,Deployability,configurat,configuration,121,"////////////////////////////////////////////////////////////////////////////////; /// Attach to terminal, set the proper configuration.",MatchSource.CODE_COMMENT,core/textinput/src/textinput/StreamReaderUnix.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderUnix.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderUnix.cpp:121,Modifiability,config,configuration,121,"////////////////////////////////////////////////////////////////////////////////; /// Attach to terminal, set the proper configuration.",MatchSource.CODE_COMMENT,core/textinput/src/textinput/StreamReaderUnix.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderUnix.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderUnix.cpp:120,Deployability,configurat,configuration,120,"////////////////////////////////////////////////////////////////////////////////; /// Detach from terminal, set the old configuration.",MatchSource.CODE_COMMENT,core/textinput/src/textinput/StreamReaderUnix.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderUnix.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderUnix.cpp:120,Modifiability,config,configuration,120,"////////////////////////////////////////////////////////////////////////////////; /// Detach from terminal, set the old configuration.",MatchSource.CODE_COMMENT,core/textinput/src/textinput/StreamReaderUnix.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderUnix.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderUnix.cpp:103,Availability,avail,available,103,"////////////////////////////////////////////////////////////////////////////////; /// Test or wait for available input; ///; /// \param[in] wait blocking wait on input; ///; /// Wait true - block, wait false - poll",MatchSource.CODE_COMMENT,core/textinput/src/textinput/StreamReaderUnix.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderUnix.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderUnix.cpp:86,Testability,Test,Test,86,"////////////////////////////////////////////////////////////////////////////////; /// Test or wait for available input; ///; /// \param[in] wait blocking wait on input; ///; /// Wait true - block, wait false - poll",MatchSource.CODE_COMMENT,core/textinput/src/textinput/StreamReaderUnix.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderUnix.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderUnix.cpp:130,Availability,avail,available,130,"////////////////////////////////////////////////////////////////////////////////; /// Read one character from stdin. Block if not available.",MatchSource.CODE_COMMENT,core/textinput/src/textinput/StreamReaderUnix.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderUnix.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderUnix.h:358,Integrability,interface,interface,358,"//===--- TerminalReaderUnix.h - Input From UNIX Terminal --------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the interface reading from a UNIX terminal. It tries to; // support all common terminal types.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,core/textinput/src/textinput/StreamReaderUnix.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderUnix.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderUnix.h:14,Modifiability,config,configured,14,"// whether we configured the tty",MatchSource.CODE_COMMENT,core/textinput/src/textinput/StreamReaderUnix.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderUnix.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderWin.cpp:358,Integrability,interface,interface,358,"//===--- TerminalReaderWin.cpp - Input From Windows Console -----*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the interface for reading from Window's cmd.exe console.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,core/textinput/src/textinput/StreamReaderWin.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderWin.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderWin.cpp:3,Energy Efficiency,Allocate,Allocate,3,"// Allocate our own console handle, to prevent redirection from; // stealing it.",MatchSource.CODE_COMMENT,core/textinput/src/textinput/StreamReaderWin.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderWin.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderWin.cpp:6,Energy Efficiency,allocate,allocated,6,"// We allocated CONIN$:",MatchSource.CODE_COMMENT,core/textinput/src/textinput/StreamReaderWin.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderWin.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderWin.cpp:3,Testability,Test,Testing,3,"// Testing for the End of a File; // https://msdn.microsoft.com/en-us/library/windows/desktop/aa365690(v=vs.85).aspx",MatchSource.CODE_COMMENT,core/textinput/src/textinput/StreamReaderWin.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderWin.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderWin.h:358,Integrability,interface,interface,358,"//===--- TerminalReaderWin.h - Input From Windows Console -------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the interface for reading from Window's cmd.exe console.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,core/textinput/src/textinput/StreamReaderWin.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderWin.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderWin.h:26,Modifiability,config,configured,26,"// whether the console is configured",MatchSource.CODE_COMMENT,core/textinput/src/textinput/StreamReaderWin.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderWin.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderWin.h:3,Deployability,configurat,configuration,3,"// configuration before grabbing input device",MatchSource.CODE_COMMENT,core/textinput/src/textinput/StreamReaderWin.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderWin.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderWin.h:3,Modifiability,config,configuration,3,"// configuration before grabbing input device",MatchSource.CODE_COMMENT,core/textinput/src/textinput/StreamReaderWin.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderWin.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderWin.h:3,Deployability,configurat,configuration,3,"// configuration while active",MatchSource.CODE_COMMENT,core/textinput/src/textinput/StreamReaderWin.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderWin.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderWin.h:3,Modifiability,config,configuration,3,"// configuration while active",MatchSource.CODE_COMMENT,core/textinput/src/textinput/StreamReaderWin.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderWin.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalConfigUnix.cpp:396,Deployability,configurat,configuration,396,"//===--- TerminalConfigUnix.cpp - termios storage -------------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // TerminalReader and TerminalDisplay need to reset the terminal configuration; // upon destruction, to leave the terminal as before. To avoid a possible; // misunderstanding of what ""before"" means, centralize their storage of the; // previous termios and have them share it.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TerminalConfigUnix.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalConfigUnix.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalConfigUnix.cpp:396,Modifiability,config,configuration,396,"//===--- TerminalConfigUnix.cpp - termios storage -------------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // TerminalReader and TerminalDisplay need to reset the terminal configuration; // upon destruction, to leave the terminal as before. To avoid a possible; // misunderstanding of what ""before"" means, centralize their storage of the; // previous termios and have them share it.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TerminalConfigUnix.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalConfigUnix.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalConfigUnix.cpp:468,Safety,avoid,avoid,468,"//===--- TerminalConfigUnix.cpp - termios storage -------------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // TerminalReader and TerminalDisplay need to reset the terminal configuration; // upon destruction, to leave the terminal as before. To avoid a possible; // misunderstanding of what ""before"" means, centralize their storage of the; // previous termios and have them share it.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TerminalConfigUnix.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalConfigUnix.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalConfigUnix.cpp:52,Availability,recover,recover,52,"// terminate through default handler; // No need to recover our state; there will be no ""next time"":; // the signal raised above will cause the program to quit.; //signal(signum, TerminalConfigUnix__handleSignal);; //sSignalHandlerActive = false;",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TerminalConfigUnix.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalConfigUnix.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalConfigUnix.cpp:52,Safety,recover,recover,52,"// terminate through default handler; // No need to recover our state; there will be no ""next time"":; // the signal raised above will cause the program to quit.; //signal(signum, TerminalConfigUnix__handleSignal);; //sSignalHandlerActive = false;",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TerminalConfigUnix.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalConfigUnix.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalConfigUnix.cpp:22,Deployability,configurat,configuration,22,"// Reset the terminal configuration.",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TerminalConfigUnix.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalConfigUnix.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalConfigUnix.cpp:22,Modifiability,config,configuration,22,"// Reset the terminal configuration.",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TerminalConfigUnix.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalConfigUnix.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalConfigUnix.h:398,Deployability,configurat,configuration,398,"//===--- TerminalConfigUnix.cpp - termios storage ---------------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // TerminalReader and TerminalDisplay need to reset the terminal configuration; // upon destruction, to leave the terminal as before. To avoid a possible; // misunderstanding of what ""before"" means, centralize their storage of the; // previous termios and have them share it.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TerminalConfigUnix.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalConfigUnix.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalConfigUnix.h:398,Modifiability,config,configuration,398,"//===--- TerminalConfigUnix.cpp - termios storage ---------------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // TerminalReader and TerminalDisplay need to reset the terminal configuration; // upon destruction, to leave the terminal as before. To avoid a possible; // misunderstanding of what ""before"" means, centralize their storage of the; // previous termios and have them share it.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TerminalConfigUnix.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalConfigUnix.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalConfigUnix.h:470,Safety,avoid,avoid,470,"//===--- TerminalConfigUnix.cpp - termios storage ---------------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // TerminalReader and TerminalDisplay need to reset the terminal configuration; // upon destruction, to leave the terminal as before. To avoid a possible; // misunderstanding of what ""before"" means, centralize their storage of the; // previous termios and have them share it.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TerminalConfigUnix.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalConfigUnix.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalConfigUnix.h:7,Deployability,configurat,configuration,7,"// tty configuration before grabbing",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TerminalConfigUnix.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalConfigUnix.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalConfigUnix.h:7,Modifiability,config,configuration,7,"// tty configuration before grabbing",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TerminalConfigUnix.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalConfigUnix.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalConfigUnix.h:7,Deployability,configurat,configuration,7,"// tty configuration while active",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TerminalConfigUnix.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalConfigUnix.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalConfigUnix.h:7,Modifiability,config,configuration,7,"// tty configuration while active",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TerminalConfigUnix.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalConfigUnix.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplay.cpp:367,Integrability,interface,interface,367,"//===--- TerminalDisplay.cpp - Output To Terminal ---------------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the abstract interface for writing to a terminal.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TerminalDisplay.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplay.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplay.cpp:153,Modifiability,Rewrite,Rewrite,153,"////////////////////////////////////////////////////////////////////////////////; /// Notify the display that the text has been changed in range r.; /// Rewrite the display in range r and move back to the cursor.; ///; /// \param[in] r Range to write out the text for.",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TerminalDisplay.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplay.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplay.cpp:128,Availability,error,error,128,"////////////////////////////////////////////////////////////////////////////////; /// Notify the display that there has been an error.; /// Write out the BEL character.",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TerminalDisplay.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplay.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplay.cpp:111,Integrability,message,message,111,"////////////////////////////////////////////////////////////////////////////////; /// Display an informational message at the prompt.; /// Acts like a pop-up. Used e.g. for tab-completion.; ///; /// \param[in] Options options to write out",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TerminalDisplay.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplay.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplay.cpp:96,Integrability,wrap,wrapped,96,"////////////////////////////////////////////////////////////////////////////////; /// Write out wrapped text to the display. Used in WriteWrapped and DisplayInfo; ///; /// \param[in] text text to write out; /// \param[in] TextOffset where to begin writing out text from; /// \param[in] WriteOffset where to begin writing out text at the display; /// \param[in] NumRequested number of text characters requested for output",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TerminalDisplay.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplay.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplay.cpp:17,Availability,avail,available,17,"// requested max available",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TerminalDisplay.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplay.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplay.cpp:24,Availability,avail,available,24,"// If we have some text available for output",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TerminalDisplay.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplay.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplay.cpp:70,Availability,avail,available,70,"// If we don't have enough to output NumRemaining, output only what's available",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TerminalDisplay.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplay.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplay.cpp:23,Availability,down,down,23,"// we are at EOL, move down",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TerminalDisplay.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplay.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplay.cpp:26,Deployability,update,update,26,"// Write out the line and update the write position",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TerminalDisplay.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplay.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplay.cpp:18,Integrability,wrap,wrap,18,"// If we hit EOL, wrap around",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TerminalDisplay.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplay.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplay.cpp:14,Deployability,update,update,14,"// Any prompt update means we'll have to re-write the editor prompt",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TerminalDisplay.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplay.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplay.cpp:14,Deployability,update,update,14,"// Any prompt update means we'll have to re-write the text",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TerminalDisplay.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplay.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplay.h:367,Integrability,interface,interface,367,"//===--- TerminalDisplay.h - Output To Terminal -----------------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the abstract interface for writing to a terminal.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TerminalDisplay.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplay.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplay.h:13,Modifiability,config,configured,13,"// currently configured color",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TerminalDisplay.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplay.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplayUnix.cpp:358,Integrability,interface,interface,358,"//===--- TerminalDisplayUnix.cpp - Output To UNIX Terminal ------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the interface for writing to a UNIX terminal. It tries to; // support all ""common"" terminal types.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TerminalDisplayUnix.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplayUnix.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplayUnix.cpp:255,Safety,safe,safe,255,"// initialize the array with the expected standard colors:; // (from http://frexx.de/xterm-256-notes); // this is not what I see, though it's supposedly the default:; // rgb[0][0] = 0; rgb[0][1] = 0; rgb[0][1] = 0;; // use this instead, just to be on the safe side:",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TerminalDisplayUnix.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplayUnix.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplayUnix.cpp:170,Safety,safe,safe,170,"// this is not what I see, though it's supposedly the default:; // rgb256[ 8][0] = 127; rgb256[ 8][1] = 127; rgb256[ 8][1] = 127;; // use this instead, just to be on the safe side:",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TerminalDisplayUnix.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplayUnix.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplayUnix.cpp:137,Integrability,wrap,wrap,137,"////////////////////////////////////////////////////////////////////////////////; /// Invoke this on EOL. Writes out space backspace, to wrap to the next line.; /// Otherwise, we stay on the same line and the input gets pushed upwards.",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TerminalDisplayUnix.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplayUnix.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplayUnix.h:358,Integrability,interface,interface,358,"//===--- TerminalDisplayUnix.h - Output To UNIX Terminal --------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the interface for writing to a UNIX terminal. It tries to; // support all ""common"" terminal types.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TerminalDisplayUnix.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplayUnix.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplayUnix.h:18,Modifiability,config,configured,18,"// whether tty is configured",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TerminalDisplayUnix.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplayUnix.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplayWin.cpp:358,Integrability,interface,interface,358,"//===--- TerminalDisplayWin.h - Output To Windows Console -------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the interface for writing to a Windows console; // i.e. cmd.exe.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TerminalDisplayWin.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplayWin.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplayWin.cpp:61,Usability,simpl,simply,61,"// Prevent redirection from stealing our console handle,; // simply open our own.",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TerminalDisplayWin.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplayWin.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplayWin.cpp:6,Energy Efficiency,allocate,allocated,6,"// We allocated CONOUT$:",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TerminalDisplayWin.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplayWin.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplayWin.cpp:6,Integrability,wrap,wraps,6,"// It wraps, so move up and reset WritePos:; //MoveUp();; //++WritePos.Line;",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TerminalDisplayWin.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplayWin.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplayWin.h:358,Integrability,interface,interface,358,"//===--- TerminalDisplayWin.h - Output To Windows Console -------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the interface for writing to a Windows console; // i.e. cmd.exe.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TerminalDisplayWin.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplayWin.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplayWin.h:22,Modifiability,config,configured,22,"// whether console is configured",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TerminalDisplayWin.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplayWin.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplayWin.h:11,Deployability,configurat,configuration,11,"// console configuration before grabbing",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TerminalDisplayWin.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplayWin.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplayWin.h:11,Modifiability,config,configuration,11,"// console configuration before grabbing",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TerminalDisplayWin.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplayWin.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplayWin.h:11,Deployability,configurat,configuration,11,"// console configuration when active",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TerminalDisplayWin.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplayWin.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplayWin.h:11,Modifiability,config,configuration,11,"// console configuration when active",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TerminalDisplayWin.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplayWin.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Text.h:358,Integrability,interface,interface,358,"//===--- Text.h - Colored Text ----------------------------------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the interface for a string plus its characters' color; // indexes.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,core/textinput/src/textinput/Text.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Text.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TextInput.cpp:30,Integrability,Interface,Interface,30,"//===--- TextInput.cpp - Main Interface -------------------------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the main interface for the TextInput library.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TextInput.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TextInput.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TextInput.cpp:363,Integrability,interface,interface,363,"//===--- TextInput.cpp - Main Interface -------------------------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the main interface for the TextInput library.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TextInput.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TextInput.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TextInput.cpp:37,Performance,queue,queue,37,"// If there are modifications in the queue, process them now.",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TextInput.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TextInput.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TextInput.cpp:27,Availability,error,error,27,"// Signal displays that an error has occurred.",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TextInput.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TextInput.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TextInput.cpp:3,Deployability,Update,Update,3,"// Update changed ranges if attached.",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TextInput.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TextInput.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TextInput.cpp:28,Integrability,message,message,28,"// Display an informational message at the prompt. Acts like; // a pop-up. Used e.g. for tab-completion.; // foreach fails to build the reference in GCC 4.1.; // Iterate manually instead.",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TextInput.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TextInput.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TextInput.h:28,Integrability,Interface,Interface,28,"//===--- TextInput.h - Main Interface ---------------------------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the main interface for the TextInput library.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TextInput.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TextInput.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TextInput.h:363,Integrability,interface,interface,363,"//===--- TextInput.h - Main Interface ---------------------------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the main interface for the TextInput library.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TextInput.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TextInput.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TextInput.h:8,Integrability,interface,interface,8,"// Main interface to textinput library.",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TextInput.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TextInput.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TextInput.h:12,Availability,avail,available,12,"// no input available",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TextInput.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TextInput.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TextInput.h:8,Integrability,interface,interface,8,"// Read interface",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TextInput.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TextInput.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TextInput.h:11,Integrability,interface,interface,11,"// Display interface",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TextInput.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TextInput.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TextInput.h:11,Integrability,interface,interface,11,"// History interface",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TextInput.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TextInput.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TextInput.h:49,Availability,avail,available,49,"// Num chars to read; 0 for blocking, -1 for all available",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TextInput.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TextInput.h
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TextInputContext.cpp:367,Integrability,interface,interface,367,"//===--- TextInputContext.cpp - Object Holder -------------------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the internal interface for TextInput's auxiliary; // objects.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TextInputContext.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TextInputContext.cpp
https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TextInputContext.h:368,Integrability,interface,interface,368,"//===--- TextInputContext.h - Object Holder ----------------------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the internal interface for TextInput's auxiliary; // objects.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,core/textinput/src/textinput/TextInputContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TextInputContext.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TAtomicCount.h:232,Safety,safe,safe,232,"//////////////////////////////////////////////////////////////////////////; // //; // TAtomicCount //; // //; // Class providing atomic operations on a long. Setting, getting, //; // incrementing and decrementing are atomic, thread safe, operations. //; // //; // TAtomicCount a(n); //; // //; // (n is convertible to long) //; // //; // Effects: Constructs an TAtomicCount with an initial value of n. //; // //; // long(a); //; // //; // Returns: (long) the current value of a. //; // //; // ++a; //; // //; // Effects: Atomically increments the value of a. //; // Returns: nothing. //; // //; // --a; //; // //; // Effects: Atomically decrements the value of a. //; // Returns: (long) zero if the new value of a is zero, //; // unspecified non-zero value otherwise //; // (usually the new value). //; // //; // a.Set(n); //; // //; // Effects: Set a to the value n. //; // Returns: nothing. //; // //; // a.Get(); //; // //; // Returns: (long) the current value of a. //; // //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/inc/TAtomicCount.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TAtomicCount.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TAtomicCountGcc.h:235,Safety,safe,safe,235,"//////////////////////////////////////////////////////////////////////////; // //; // TAtomicCountGcc //; // //; // Class providing atomic operations on a long. Setting, getting, //; // incrementing and decrementing are atomic, thread safe, operations. //; // //; // This implementation uses GNU libstdc++ v3 atomic primitives, see //; // http://gcc.gnu.org/onlinedocs/porting/Thread-safety.html. //; // //; // ATTENTION: Don't use this file directly, it is included by //; // TAtomicCount.h. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/inc/TAtomicCountGcc.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TAtomicCountGcc.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TAtomicCountGcc.h:384,Safety,safe,safety,384,"//////////////////////////////////////////////////////////////////////////; // //; // TAtomicCountGcc //; // //; // Class providing atomic operations on a long. Setting, getting, //; // incrementing and decrementing are atomic, thread safe, operations. //; // //; // This implementation uses GNU libstdc++ v3 atomic primitives, see //; // http://gcc.gnu.org/onlinedocs/porting/Thread-safety.html. //; // //; // ATTENTION: Don't use this file directly, it is included by //; // TAtomicCount.h. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/inc/TAtomicCountGcc.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TAtomicCountGcc.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TAtomicCountPthread.h:374,Energy Efficiency,efficient,efficient,374,"//ROOT_TAtomicCount; //////////////////////////////////////////////////////////////////////////; // //; // TAtomicCountPthread //; // //; // Class providing atomic operations on a long. Setting, getting, //; // incrementing and decrementing are atomic, thread safe, operations. //; // //; // This implementation uses pthread mutexes for locking. This clearly //; // is less efficient than the version using asm locking instructions //; // as in TAtomicCountGcc.h, but better than nothing. //; // //; // ATTENTION: Don't use this file directly, it is included by //; // TAtomicCount.h. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/inc/TAtomicCountPthread.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TAtomicCountPthread.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TAtomicCountPthread.h:260,Safety,safe,safe,260,"//ROOT_TAtomicCount; //////////////////////////////////////////////////////////////////////////; // //; // TAtomicCountPthread //; // //; // Class providing atomic operations on a long. Setting, getting, //; // incrementing and decrementing are atomic, thread safe, operations. //; // //; // This implementation uses pthread mutexes for locking. This clearly //; // is less efficient than the version using asm locking instructions //; // as in TAtomicCountGcc.h, but better than nothing. //; // //; // ATTENTION: Don't use this file directly, it is included by //; // TAtomicCount.h. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/inc/TAtomicCountPthread.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TAtomicCountPthread.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TAtomicCountPthread.h:351,Usability,clear,clearly,351,"//ROOT_TAtomicCount; //////////////////////////////////////////////////////////////////////////; // //; // TAtomicCountPthread //; // //; // Class providing atomic operations on a long. Setting, getting, //; // incrementing and decrementing are atomic, thread safe, operations. //; // //; // This implementation uses pthread mutexes for locking. This clearly //; // is less efficient than the version using asm locking instructions //; // as in TAtomicCountGcc.h, but better than nothing. //; // //; // ATTENTION: Don't use this file directly, it is included by //; // TAtomicCount.h. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/inc/TAtomicCountPthread.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TAtomicCountPthread.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TCondition.h:145,Modifiability,variab,variable,145,"//////////////////////////////////////////////////////////////////////////; // //; // TCondition //; // //; // This class implements a condition variable. Use a condition variable //; // to signal threads. The actual work is done via the TConditionImp //; // class (either TPosixCondition or TWin32Condition). //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/inc/TCondition.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TCondition.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TCondition.h:171,Modifiability,variab,variable,171,"//////////////////////////////////////////////////////////////////////////; // //; // TCondition //; // //; // This class implements a condition variable. Use a condition variable //; // to signal threads. The actual work is done via the TConditionImp //; // class (either TPosixCondition or TWin32Condition). //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/inc/TCondition.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TCondition.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TCondition.h:24,Modifiability,variab,variable,24,"// pointer to condition variable implementation",MatchSource.CODE_COMMENT,core/thread/inc/TCondition.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TCondition.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TCondition.h:13,Modifiability,variab,variable,13,"// Condition variable class",MatchSource.CODE_COMMENT,core/thread/inc/TCondition.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TCondition.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TConditionImp.h:146,Integrability,interface,interface,146,"//////////////////////////////////////////////////////////////////////////; // //; // TConditionImp //; // //; // This class provides an abstract interface to the OS dependent //; // condition classes (TPosixCondition and TWin32Condition). //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/inc/TConditionImp.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TConditionImp.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TConditionImp.h:166,Integrability,depend,dependent,166,"//////////////////////////////////////////////////////////////////////////; // //; // TConditionImp //; // //; // This class provides an abstract interface to the OS dependent //; // condition classes (TPosixCondition and TWin32Condition). //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/inc/TConditionImp.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TConditionImp.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TConditionImp.h:13,Modifiability,variab,variable,13,"// Condition variable implementation ABC",MatchSource.CODE_COMMENT,core/thread/inc/TConditionImp.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TConditionImp.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TMutexImp.h:142,Integrability,interface,interface,142,"//////////////////////////////////////////////////////////////////////////; // //; // TMutexImp //; // //; // This class provides an abstract interface to the OS dependent mutex //; // classes (TPosixMutex and TWin32Mutex). //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/inc/TMutexImp.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TMutexImp.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TMutexImp.h:162,Integrability,depend,dependent,162,"//////////////////////////////////////////////////////////////////////////; // //; // TMutexImp //; // //; // This class provides an abstract interface to the OS dependent mutex //; // classes (TPosixMutex and TWin32Mutex). //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/inc/TMutexImp.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TMutexImp.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TPosixCondition.h:139,Integrability,interface,interface,139,"//////////////////////////////////////////////////////////////////////////; // //; // TPosixCondition //; // //; // This class provides an interface to the posix condition variable //; // routines. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/inc/TPosixCondition.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TPosixCondition.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TPosixCondition.h:188,Integrability,rout,routines,188,"//////////////////////////////////////////////////////////////////////////; // //; // TPosixCondition //; // //; // This class provides an interface to the posix condition variable //; // routines. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/inc/TPosixCondition.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TPosixCondition.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TPosixCondition.h:172,Modifiability,variab,variable,172,"//////////////////////////////////////////////////////////////////////////; // //; // TPosixCondition //; // //; // This class provides an interface to the posix condition variable //; // routines. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/inc/TPosixCondition.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TPosixCondition.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TPosixCondition.h:25,Modifiability,variab,variable,25,"// the pthread condition variable",MatchSource.CODE_COMMENT,core/thread/inc/TPosixCondition.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TPosixCondition.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TPosixCondition.h:19,Modifiability,variab,variable,19,"// Posix condition variable",MatchSource.CODE_COMMENT,core/thread/inc/TPosixCondition.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TPosixCondition.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TPosixMutex.h:135,Integrability,interface,interface,135,"//////////////////////////////////////////////////////////////////////////; // //; // TPosixMutex //; // //; // This class provides an interface to the posix mutex routines. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/inc/TPosixMutex.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TPosixMutex.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TPosixMutex.h:164,Integrability,rout,routines,164,"//////////////////////////////////////////////////////////////////////////; // //; // TPosixMutex //; // //; // This class provides an interface to the posix mutex routines. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/inc/TPosixMutex.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TPosixMutex.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TRWLock.h:192,Security,access,accessed,192,"//////////////////////////////////////////////////////////////////////////; // //; // TRWLock //; // //; // This class implements a reader/writer lock. A rwlock allows //; // a resource to be accessed by multiple reader threads but only //; // one writer thread. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/inc/TRWLock.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TRWLock.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TRWLock.h:20,Modifiability,variab,variable,20,"// rwlock condition variable",MatchSource.CODE_COMMENT,core/thread/inc/TRWLock.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TRWLock.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TSemaphore.h:181,Integrability,synchroniz,synchronize,181,"//////////////////////////////////////////////////////////////////////////; // //; // TSemaphore //; // //; // This class implements a counting semaphore. Use a semaphore //; // to synchronize threads. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/inc/TSemaphore.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TSemaphore.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TSemaphore.h:23,Modifiability,variab,variable,23,"// semaphore condition variable",MatchSource.CODE_COMMENT,core/thread/inc/TSemaphore.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TSemaphore.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TThread.h:182,Safety,safe,safe,182,"// Cancellation; // there are two types of TThread cancellation:; // DEFERRED - Cancellation only in user provided cancel-points; // ASYNCHRONOUS - In any point; // DEFERRED is more safe, it is DEFAULT.",MatchSource.CODE_COMMENT,core/thread/inc/TThread.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TThread.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TThreadPool.h:159,Modifiability,inherit,inherit,159,"//////////////////////////////////////////////////////////////////////////; // //; // TThreadPoolTaskImp //; // A base class for thread pool tasks. Users must inherit their //; // tasks classes from it. //; // Example: //; // class TTestTask: public TThreadPoolTaskImp<TTestTask, int> //; // //; // in this example, //; // TTestTask - is a user class, which implements //; // thread pool task object. //; // int - is a type of argument to TTestTask::run method. //; // //; // Please see the tutorial ""tutorials/thread/threadPool.C"" for //; // more details on how to use TThreadPool. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/inc/TThreadPool.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TThreadPool.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TThreadPool.h:163,Integrability,wrap,wraps,163,"//////////////////////////////////////////////////////////////////////////; // //; // TThreadPoolTask //; // This is a supporting class for TThreadPool. //; // It wraps users task objects in order to pass tasks arguments in //; // type-safe way. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/inc/TThreadPool.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TThreadPool.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TThreadPool.h:236,Safety,safe,safe,236,"//////////////////////////////////////////////////////////////////////////; // //; // TThreadPoolTask //; // This is a supporting class for TThreadPool. //; // It wraps users task objects in order to pass tasks arguments in //; // type-safe way. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/inc/TThreadPool.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TThreadPool.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TThreadPool.h:199,Performance,queue,queue,199,"//////////////////////////////////////////////////////////////////////////; // //; // TThreadPool //; // This class implement a simple Thread Pool pattern. //; // So far it supports only one type of queue - FIFO //; // //; // Please see the tutorial ""tutorials/thread/threadPool.C"" for //; // more details on how to use TThreadPool. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/inc/TThreadPool.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TThreadPool.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TThreadPool.h:128,Usability,simpl,simple,128,"//////////////////////////////////////////////////////////////////////////; // //; // TThreadPool //; // This class implement a simple Thread Pool pattern. //; // So far it supports only one type of queue - FIFO //; // //; // Please see the tutorial ""tutorials/thread/threadPool.C"" for //; // more details on how to use TThreadPool. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/inc/TThreadPool.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TThreadPool.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TThreadPool.h:45,Performance,queue,queue,45,"// prevent more jobs from being added to the queue",MatchSource.CODE_COMMENT,core/thread/inc/TThreadPool.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TThreadPool.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TThreadPool.h:21,Energy Efficiency,drain,drain,21,"// wait for queue to drain",MatchSource.CODE_COMMENT,core/thread/inc/TThreadPool.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TThreadPool.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TThreadPool.h:12,Performance,queue,queue,12,"// wait for queue to drain",MatchSource.CODE_COMMENT,core/thread/inc/TThreadPool.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TThreadPool.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TThreadPool.h:55,Performance,queue,queue,55,"// This method stops the calling thread until the task queue is empty",MatchSource.CODE_COMMENT,core/thread/inc/TThreadPool.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TThreadPool.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TThreadPool.h:18,Performance,perform,perform,18,"// Find a task to perform",MatchSource.CODE_COMMENT,core/thread/inc/TThreadPool.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TThreadPool.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TThreadPool.h:10,Integrability,message,messages,10,"// No DBG messages",MatchSource.CODE_COMMENT,core/thread/inc/TThreadPool.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TThreadPool.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TWin32AtomicCount.h:237,Safety,safe,safe,237,"//////////////////////////////////////////////////////////////////////////; // //; // TWin32AtomicCount //; // //; // Class providing atomic operations on a long. Setting, getting, //; // incrementing and decrementing are atomic, thread safe, operations. //; // //; // This implementation uses the Win32 InterLocked API for locking. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/inc/TWin32AtomicCount.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TWin32AtomicCount.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TWin32AtomicCount.h:304,Safety,InterLock,InterLocked,304,"//////////////////////////////////////////////////////////////////////////; // //; // TWin32AtomicCount //; // //; // Class providing atomic operations on a long. Setting, getting, //; // incrementing and decrementing are atomic, thread safe, operations. //; // //; // This implementation uses the Win32 InterLocked API for locking. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/inc/TWin32AtomicCount.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TWin32AtomicCount.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TWin32AtomicCount.h:304,Security,InterLock,InterLocked,304,"//////////////////////////////////////////////////////////////////////////; // //; // TWin32AtomicCount //; // //; // Class providing atomic operations on a long. Setting, getting, //; // incrementing and decrementing are atomic, thread safe, operations. //; // //; // This implementation uses the Win32 InterLocked API for locking. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/inc/TWin32AtomicCount.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TWin32AtomicCount.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TWin32Condition.h:139,Integrability,interface,interface,139,"//////////////////////////////////////////////////////////////////////////; // //; // TWin32Condition //; // //; // This class provides an interface to the win32 condition variable //; // routines. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/inc/TWin32Condition.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TWin32Condition.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TWin32Condition.h:188,Integrability,rout,routines,188,"//////////////////////////////////////////////////////////////////////////; // //; // TWin32Condition //; // //; // This class provides an interface to the win32 condition variable //; // routines. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/inc/TWin32Condition.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TWin32Condition.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TWin32Condition.h:172,Modifiability,variab,variable,172,"//////////////////////////////////////////////////////////////////////////; // //; // TWin32Condition //; // //; // This class provides an interface to the win32 condition variable //; // routines. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/inc/TWin32Condition.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TWin32Condition.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TWin32Condition.h:13,Security,access,access,13,"// Serialize access to <waiters_count_>.",MatchSource.CODE_COMMENT,core/thread/inc/TWin32Condition.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TWin32Condition.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TWin32Condition.h:21,Performance,queue,queue,21,"// Semaphore used to queue up threads waiting for the condition to; // become signaled.",MatchSource.CODE_COMMENT,core/thread/inc/TWin32Condition.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TWin32Condition.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TWin32Condition.h:119,Deployability,release,released,119,"// An auto-reset event used by the broadcast/signal thread to wait; // for all the waiting thread(s) to wake up and be released from the; // semaphore.",MatchSource.CODE_COMMENT,core/thread/inc/TWin32Condition.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TWin32Condition.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TWin32Condition.h:83,Performance,optimiz,optimize,83,"// Keeps track of whether we were broadcasting or signaling. This; // allows us to optimize the code if we're just signaling.",MatchSource.CODE_COMMENT,core/thread/inc/TWin32Condition.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TWin32Condition.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TWin32Condition.h:25,Modifiability,variab,variable,25,"// the pthread condition variable",MatchSource.CODE_COMMENT,core/thread/inc/TWin32Condition.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TWin32Condition.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TWin32Condition.h:19,Modifiability,variab,variable,19,"// Posix condition variable",MatchSource.CODE_COMMENT,core/thread/inc/TWin32Condition.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TWin32Condition.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TWin32Mutex.h:135,Integrability,interface,interface,135,"//////////////////////////////////////////////////////////////////////////; // //; // TWin32Mutex //; // //; // This class provides an interface to the Win32 mutex routines. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/inc/TWin32Mutex.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TWin32Mutex.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TWin32Mutex.h:164,Integrability,rout,routines,164,"//////////////////////////////////////////////////////////////////////////; // //; // TWin32Mutex //; // //; // This class provides an interface to the Win32 mutex routines. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/inc/TWin32Mutex.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TWin32Mutex.h
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/RConcurrentHashColl.hxx:27,Safety,safe,safe,27,"/// This class is a thread-safe associative collection connecting; /// a 256 bits digest/hash to a collection of uid (integer); /// This is used in the handling of the StreamerInfo record in TFile.",MatchSource.CODE_COMMENT,core/thread/inc/ROOT/RConcurrentHashColl.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/RConcurrentHashColl.hxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/RConcurrentHashColl.hxx:89,Security,hash,hash,89,"/// This class is a thread-safe associative collection connecting; /// a 256 bits digest/hash to a collection of uid (integer); /// This is used in the handling of the StreamerInfo record in TFile.",MatchSource.CODE_COMMENT,core/thread/inc/ROOT/RConcurrentHashColl.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/RConcurrentHashColl.hxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/RConcurrentHashColl.hxx:15,Security,hash,hash,15,"/// Return the hash value for this object",MatchSource.CODE_COMMENT,core/thread/inc/ROOT/RConcurrentHashColl.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/RConcurrentHashColl.hxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/RConcurrentHashColl.hxx:54,Security,hash,hash,54,"/// Return the collection of UID corresponding to the hash if the hash has; /// already been seen or nullptr otherwise.",MatchSource.CODE_COMMENT,core/thread/inc/ROOT/RConcurrentHashColl.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/RConcurrentHashColl.hxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/RConcurrentHashColl.hxx:66,Security,hash,hash,66,"/// Return the collection of UID corresponding to the hash if the hash has; /// already been seen or nullptr otherwise.",MatchSource.CODE_COMMENT,core/thread/inc/ROOT/RConcurrentHashColl.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/RConcurrentHashColl.hxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/RConcurrentHashColl.hxx:11,Security,hash,hash,11,"/// If the hash is there, return false. Otherwise, insert the hash and UID; /// collection and return true.",MatchSource.CODE_COMMENT,core/thread/inc/ROOT/RConcurrentHashColl.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/RConcurrentHashColl.hxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/RConcurrentHashColl.hxx:62,Security,hash,hash,62,"/// If the hash is there, return false. Otherwise, insert the hash and UID; /// collection and return true.",MatchSource.CODE_COMMENT,core/thread/inc/ROOT/RConcurrentHashColl.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/RConcurrentHashColl.hxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/RConcurrentHashColl.hxx:15,Security,hash,hash,15,"/// Return the hash object corresponding to the buffer.",MatchSource.CODE_COMMENT,core/thread/inc/ROOT/RConcurrentHashColl.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/RConcurrentHashColl.hxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/RConcurrentHashColl.hxx:62,Security,hash,hash,62,"/// Check piece by piece the 4 64 bits ints which make up the hash.",MatchSource.CODE_COMMENT,core/thread/inc/ROOT/RConcurrentHashColl.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/RConcurrentHashColl.hxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TRWSpinLock.hxx:21,Security,access,access,21,"///<! A reader wants access",MatchSource.CODE_COMMENT,core/thread/inc/ROOT/TRWSpinLock.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TRWSpinLock.hxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TRWSpinLock.hxx:21,Security,access,access,21,"///<! A writer wants access",MatchSource.CODE_COMMENT,core/thread/inc/ROOT/TRWSpinLock.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TRWSpinLock.hxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TRWSpinLock.hxx:32,Modifiability,variab,variable,32,"///<! RWlock internal condition variable",MatchSource.CODE_COMMENT,core/thread/inc/ROOT/TRWSpinLock.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TRWSpinLock.hxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TSpinMutex.hxx:83,Integrability,interface,interface,83,"/**; * \class ROOT::TSpinMutex; * \brief A spin mutex class which respects the STL interface for mutexes.; * \ingroup Parallelism; * This class allows to acquire spin locks also in combination with templates in the STL such as; * <a href=""http://en.cppreference.com/w/cpp/thread/unique_lock"">std::unique_lock</a> or; * <a href=""http://en.cppreference.com/w/cpp/thread/condition_variable_any"">std::condition_variable_any</a>.; * For example:; * ; * ~~~ {.cpp}; * ROOT::TSpinMutex m;; * std::condition_variable cv;; * bool ready = false;; *; * void worker_thread(); * {; * // Wait until main() sends data; * std::unique_lock<ROOT::TSpinMutex> lk(m);; * cv.wait(lk, []{return ready;});; * [...]; * }; * ~~~ {.cpp}; */",MatchSource.CODE_COMMENT,core/thread/inc/ROOT/TSpinMutex.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TSpinMutex.hxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx:88,Integrability,interface,interfaces,88,/**; * \class ROOT::TNumSlots; * \brief Defines the number of threads in some of ROOT's interfaces.; */,MatchSource.CODE_COMMENT,core/thread/inc/ROOT/TThreadedObject.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx:90,Integrability,wrap,wrapper,90,"// end of namespace TThreadedObjectUtils; /**; * \class ROOT::TThreadedObject; * \brief A wrapper to make object instances thread private, lazily.; * \tparam T Class of the object to be made thread private (e.g. TH1F); * \ingroup Parallelism; *; * A wrapper which makes objects thread private. The methods of the underlying; * object can be invoked via the arrow operator. The object is created in; * a specific thread lazily, i.e. upon invocation of one of its methods.; * The correct object pointer from within a particular thread can be accessed; * with the overloaded arrow operator or with the Get method.; * In case an elaborate thread management is in place, e.g. in presence of; * stream of operations or ""processing slots"", it is also possible to; * manually select the correct object pointer explicitly.; */",MatchSource.CODE_COMMENT,core/thread/inc/ROOT/TThreadedObject.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx:250,Integrability,wrap,wrapper,250,"// end of namespace TThreadedObjectUtils; /**; * \class ROOT::TThreadedObject; * \brief A wrapper to make object instances thread private, lazily.; * \tparam T Class of the object to be made thread private (e.g. TH1F); * \ingroup Parallelism; *; * A wrapper which makes objects thread private. The methods of the underlying; * object can be invoked via the arrow operator. The object is created in; * a specific thread lazily, i.e. upon invocation of one of its methods.; * The correct object pointer from within a particular thread can be accessed; * with the overloaded arrow operator or with the Get method.; * In case an elaborate thread management is in place, e.g. in presence of; * stream of operations or ""processing slots"", it is also possible to; * manually select the correct object pointer explicitly.; */",MatchSource.CODE_COMMENT,core/thread/inc/ROOT/TThreadedObject.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx:540,Security,access,accessed,540,"// end of namespace TThreadedObjectUtils; /**; * \class ROOT::TThreadedObject; * \brief A wrapper to make object instances thread private, lazily.; * \tparam T Class of the object to be made thread private (e.g. TH1F); * \ingroup Parallelism; *; * A wrapper which makes objects thread private. The methods of the underlying; * object can be invoked via the arrow operator. The object is created in; * a specific thread lazily, i.e. upon invocation of one of its methods.; * The correct object pointer from within a particular thread can be accessed; * with the overloaded arrow operator or with the Get method.; * In case an elaborate thread management is in place, e.g. in presence of; * stream of operations or ""processing slots"", it is also possible to; * manually select the correct object pointer explicitly.; */",MatchSource.CODE_COMMENT,core/thread/inc/ROOT/TThreadedObject.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx:35,Availability,avail,available,35,"/// Return the number of currently available slot.; ///; /// The method is safe to call concurrently to other TThreadedObject methods.; /// Note that slots could be available but contain no data (i.e. a nullptr) if; /// they have not been used yet.",MatchSource.CODE_COMMENT,core/thread/inc/ROOT/TThreadedObject.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx:165,Availability,avail,available,165,"/// Return the number of currently available slot.; ///; /// The method is safe to call concurrently to other TThreadedObject methods.; /// Note that slots could be available but contain no data (i.e. a nullptr) if; /// they have not been used yet.",MatchSource.CODE_COMMENT,core/thread/inc/ROOT/TThreadedObject.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx:88,Performance,concurren,concurrently,88,"/// Return the number of currently available slot.; ///; /// The method is safe to call concurrently to other TThreadedObject methods.; /// Note that slots could be available but contain no data (i.e. a nullptr) if; /// they have not been used yet.",MatchSource.CODE_COMMENT,core/thread/inc/ROOT/TThreadedObject.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx:75,Safety,safe,safe,75,"/// Return the number of currently available slot.; ///; /// The method is safe to call concurrently to other TThreadedObject methods.; /// Note that slots could be available but contain no data (i.e. a nullptr) if; /// they have not been used yet.",MatchSource.CODE_COMMENT,core/thread/inc/ROOT/TThreadedObject.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx:89,Performance,concurren,concurrent,89,"/// Access a particular processing slot.; ///; /// This method is thread-safe as long as concurrent calls request different slots (i.e. pass a different; /// argument) and no thread accesses slot `i` via the arrow operator, so mixing usage of GetAtSlot; /// with usage of the arrow operator can be dangerous.",MatchSource.CODE_COMMENT,core/thread/inc/ROOT/TThreadedObject.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx:73,Safety,safe,safe,73,"/// Access a particular processing slot.; ///; /// This method is thread-safe as long as concurrent calls request different slots (i.e. pass a different; /// argument) and no thread accesses slot `i` via the arrow operator, so mixing usage of GetAtSlot; /// with usage of the arrow operator can be dangerous.",MatchSource.CODE_COMMENT,core/thread/inc/ROOT/TThreadedObject.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx:4,Security,Access,Access,4,"/// Access a particular processing slot.; ///; /// This method is thread-safe as long as concurrent calls request different slots (i.e. pass a different; /// argument) and no thread accesses slot `i` via the arrow operator, so mixing usage of GetAtSlot; /// with usage of the arrow operator can be dangerous.",MatchSource.CODE_COMMENT,core/thread/inc/ROOT/TThreadedObject.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx:182,Security,access,accesses,182,"/// Access a particular processing slot.; ///; /// This method is thread-safe as long as concurrent calls request different slots (i.e. pass a different; /// argument) and no thread accesses slot `i` via the arrow operator, so mixing usage of GetAtSlot; /// with usage of the arrow operator can be dangerous.",MatchSource.CODE_COMMENT,core/thread/inc/ROOT/TThreadedObject.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx:34,Performance,concurren,concurrent,34,"// fObjPointers can grow due to a concurrent operation on this TThreadedObject, need to lock",MatchSource.CODE_COMMENT,core/thread/inc/ROOT/TThreadedObject.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx:88,Performance,concurren,concurrent,88,"/// Set the value of a particular slot.; ///; /// This method is thread-safe as long as concurrent calls access different slots (i.e. pass a different; /// argument) and no thread accesses slot `i` via the arrow operator, so mixing usage of SetAtSlot; /// with usage of the arrow operator can be dangerous.",MatchSource.CODE_COMMENT,core/thread/inc/ROOT/TThreadedObject.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx:72,Safety,safe,safe,72,"/// Set the value of a particular slot.; ///; /// This method is thread-safe as long as concurrent calls access different slots (i.e. pass a different; /// argument) and no thread accesses slot `i` via the arrow operator, so mixing usage of SetAtSlot; /// with usage of the arrow operator can be dangerous.",MatchSource.CODE_COMMENT,core/thread/inc/ROOT/TThreadedObject.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx:105,Security,access,access,105,"/// Set the value of a particular slot.; ///; /// This method is thread-safe as long as concurrent calls access different slots (i.e. pass a different; /// argument) and no thread accesses slot `i` via the arrow operator, so mixing usage of SetAtSlot; /// with usage of the arrow operator can be dangerous.",MatchSource.CODE_COMMENT,core/thread/inc/ROOT/TThreadedObject.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx:180,Security,access,accesses,180,"/// Set the value of a particular slot.; ///; /// This method is thread-safe as long as concurrent calls access different slots (i.e. pass a different; /// argument) and no thread accesses slot `i` via the arrow operator, so mixing usage of SetAtSlot; /// with usage of the arrow operator can be dangerous.",MatchSource.CODE_COMMENT,core/thread/inc/ROOT/TThreadedObject.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx:34,Performance,concurren,concurrent,34,"// fObjPointers can grow due to a concurrent operation on this TThreadedObject, need to lock",MatchSource.CODE_COMMENT,core/thread/inc/ROOT/TThreadedObject.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx:4,Security,Access,Access,4,"/// Access a particular slot which corresponds to a single thread.; /// This is in general faster than the GetAtSlot method but it is; /// responsibility of the caller to make sure that the slot exists; /// and to check that the contained object is initialized (and not; /// a nullptr).",MatchSource.CODE_COMMENT,core/thread/inc/ROOT/TThreadedObject.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx:4,Security,Access,Access,4,"/// Access a particular slot which corresponds to a single thread.; /// This overload is faster than the GetAtSlotUnchecked method but; /// the caller is responsible to make sure that the slot exists, to; /// check that the contained object is initialized and that the returned; /// pointer will not outlive the TThreadedObject that returned it, which; /// maintains ownership of the actual object.",MatchSource.CODE_COMMENT,core/thread/inc/ROOT/TThreadedObject.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx:4,Security,Access,Access,4,"/// Access the pointer corresponding to the current slot. This method is; /// not adequate for being called inside tight loops as it implies a; /// lookup in a mapping between the threadIDs and the slot indices.; /// A good practice consists in copying the pointer onto the stack and; /// proceed with the loop as shown in this work item (psudo-code) which; /// will be sent to different threads:; /// ~~~{.cpp}; /// auto workItem = [](){; /// auto objPtr = tthreadedObject.Get();; /// for (auto i : ROOT::TSeqI(1000)) {; /// // tthreadedObject->FastMethod(i); // don't do this! Inefficient!; /// objPtr->FastMethod(i);; /// }; /// }; /// ~~~",MatchSource.CODE_COMMENT,core/thread/inc/ROOT/TThreadedObject.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx:15,Integrability,wrap,wrapped,15,"/// Access the wrapped object and allow to call its methods.",MatchSource.CODE_COMMENT,core/thread/inc/ROOT/TThreadedObject.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx:4,Security,Access,Access,4,"/// Access the wrapped object and allow to call its methods.",MatchSource.CODE_COMMENT,core/thread/inc/ROOT/TThreadedObject.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx:220,Integrability,depend,depend,220,"/// Merge all the thread private objects. Can be called many times. It; /// does create a new instance of class T to represent the ""Sum"" object.; /// This method is not thread safe: correct or acceptable behaviours; /// depend on the nature of T and of the merging function.",MatchSource.CODE_COMMENT,core/thread/inc/ROOT/TThreadedObject.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx:176,Safety,safe,safe,176,"/// Merge all the thread private objects. Can be called many times. It; /// does create a new instance of class T to represent the ""Sum"" object.; /// This method is not thread safe: correct or acceptable behaviours; /// depend on the nature of T and of the merging function.",MatchSource.CODE_COMMENT,core/thread/inc/ROOT/TThreadedObject.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx:14,Performance,concurren,concurrent,14,"///< Protects concurrent access to fThrIDSlotMap, fObjPointers",MatchSource.CODE_COMMENT,core/thread/inc/ROOT/TThreadedObject.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx:25,Security,access,access,25,"///< Protects concurrent access to fThrIDSlotMap, fObjPointers",MatchSource.CODE_COMMENT,core/thread/inc/ROOT/TThreadedObject.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TCondition.cxx:565,Modifiability,variab,variable,565,"// @(#)root/thread:$Id$; // Author: Fons Rademakers 01/07/97; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TCondition //; // //; // This class implements a condition variable. Use a condition variable //; // to signal threads. The actual work is done via the TConditionImp //; // class (either TPosixCondition or TWin32Condition). //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/src/TCondition.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TCondition.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TCondition.cxx:591,Modifiability,variab,variable,591,"// @(#)root/thread:$Id$; // Author: Fons Rademakers 01/07/97; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TCondition //; // //; // This class implements a condition variable. Use a condition variable //; // to signal threads. The actual work is done via the TConditionImp //; // class (either TPosixCondition or TWin32Condition). //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/src/TCondition.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TCondition.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TCondition.cxx:105,Modifiability,variab,variable,105,"////////////////////////////////////////////////////////////////////////////////; /// Create a condition variable. The actual condition implementation; /// will be provided via the TThreadFactory. If no external mutex is; /// provided one will be created. Use GetMutex() to get this mutex; /// and use it before calling Signal() or Broadcast().",MatchSource.CODE_COMMENT,core/thread/src/TCondition.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TCondition.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TCondition.cxx:105,Modifiability,variab,variable,105,"////////////////////////////////////////////////////////////////////////////////; /// Clean up condition variable.",MatchSource.CODE_COMMENT,core/thread/src/TCondition.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TCondition.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TCondition.cxx:446,Availability,error,error,446,"////////////////////////////////////////////////////////////////////////////////; /// Wait to be signaled or till the timer times out.; /// This method is given an absolute time since the beginning of; /// the EPOCH (use TThread::GetTime() to get this absolute time).; /// To wait for a relative time from now, use; /// TCondition::TimedWaitRelative(ULong_t ms).; /// Returns 0 if successfully signalled, 1 if time expired and -1 in; /// case of error.",MatchSource.CODE_COMMENT,core/thread/src/TCondition.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TCondition.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TCondition.cxx:401,Availability,error,error,401,"////////////////////////////////////////////////////////////////////////////////; /// Wait to be signaled or till the timer times out.; /// This method is given a relative time from now.; /// To wait for an absolute time since the beginning of the EPOCH, use; /// TCondition::TimedWait(ULong_t secs, ULong_t nanoSec).; /// Returns 0 if successfully signalled, 1 if time expired and -1 in; /// case of error.",MatchSource.CODE_COMMENT,core/thread/src/TCondition.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TCondition.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TConditionImp.cxx:566,Integrability,interface,interface,566,"// @(#)root/thread:$Id$; // Author: Fons Rademakers 01/07/97; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TConditionImp //; // //; // This class provides an abstract interface to the OS dependent //; // condition classes (TPosixCondition and TWin32Condition). //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/src/TConditionImp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TConditionImp.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TConditionImp.cxx:586,Integrability,depend,dependent,586,"// @(#)root/thread:$Id$; // Author: Fons Rademakers 01/07/97; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TConditionImp //; // //; // This class provides an abstract interface to the OS dependent //; // condition classes (TPosixCondition and TWin32Condition). //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/src/TConditionImp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TConditionImp.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TMutex.cxx:120,Availability,error,error,120,"////////////////////////////////////////////////////////////////////////////////; /// Lock the mutex. Returns 0 when no error, EDEADLK when mutex was already; /// locked by this thread and this mutex is not reentrant.",MatchSource.CODE_COMMENT,core/thread/src/TMutex.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TMutex.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TMutex.cxx:123,Availability,error,error,123,"////////////////////////////////////////////////////////////////////////////////; /// Try to lock mutex. Returns 0 when no error, EDEADLK when mutex was; /// already locked by this thread and this mutex is not reentrant.",MatchSource.CODE_COMMENT,core/thread/src/TMutex.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TMutex.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TMutex.cxx:122,Availability,error,error,122,"////////////////////////////////////////////////////////////////////////////////; /// Unlock the mutex. Returns 0 when no error, EPERM when mutex was already; /// unlocked by this thread.",MatchSource.CODE_COMMENT,core/thread/src/TMutex.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TMutex.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TMutexImp.cxx:562,Integrability,interface,interface,562,"// @(#)root/thread:$Id$; // Author: Fons Rademakers 01/07/97; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TMutexImp //; // //; // This class provides an abstract interface to the OS dependent mutex //; // classes (TPosixMutex and TWin32Mutex). //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/src/TMutexImp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TMutexImp.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TMutexImp.cxx:582,Integrability,depend,dependent,582,"// @(#)root/thread:$Id$; // Author: Fons Rademakers 01/07/97; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TMutexImp //; // //; // This class provides an abstract interface to the OS dependent mutex //; // classes (TPosixMutex and TWin32Mutex). //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/src/TMutexImp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TMutexImp.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixCondition.cxx:559,Integrability,interface,interface,559,"// @(#)root/thread:$Id$; // Author: Fons Rademakers 01/07/97; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TPosixCondition //; // //; // This class provides an interface to the posix condition variable //; // routines. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/src/TPosixCondition.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixCondition.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixCondition.cxx:608,Integrability,rout,routines,608,"// @(#)root/thread:$Id$; // Author: Fons Rademakers 01/07/97; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TPosixCondition //; // //; // This class provides an interface to the posix condition variable //; // routines. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/src/TPosixCondition.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixCondition.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixCondition.cxx:592,Modifiability,variab,variable,592,"// @(#)root/thread:$Id$; // Author: Fons Rademakers 01/07/97; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TPosixCondition //; // //; // This class provides an interface to the posix condition variable //; // routines. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/src/TPosixCondition.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixCondition.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixCondition.cxx:103,Modifiability,variab,variable,103,"////////////////////////////////////////////////////////////////////////////////; /// Create Condition variable. Ctor must be given a pointer to an; /// existing mutex. The condition variable is then linked to the mutex,; /// so that there is an implicit unlock and lock around Wait() and; /// TimedWait().",MatchSource.CODE_COMMENT,core/thread/src/TPosixCondition.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixCondition.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixCondition.cxx:183,Modifiability,variab,variable,183,"////////////////////////////////////////////////////////////////////////////////; /// Create Condition variable. Ctor must be given a pointer to an; /// existing mutex. The condition variable is then linked to the mutex,; /// so that there is an implicit unlock and lock around Wait() and; /// TimedWait().",MatchSource.CODE_COMMENT,core/thread/src/TPosixCondition.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixCondition.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixCondition.cxx:165,Deployability,release,released,165,"////////////////////////////////////////////////////////////////////////////////; /// Wait for the condition variable to be signalled. The mutex is; /// implicitely released before waiting and locked again after waking up.; /// If Wait() is called by multiple threads, a signal may wake up more; /// than one thread. See POSIX threads documentation for details.",MatchSource.CODE_COMMENT,core/thread/src/TPosixCondition.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixCondition.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixCondition.cxx:109,Modifiability,variab,variable,109,"////////////////////////////////////////////////////////////////////////////////; /// Wait for the condition variable to be signalled. The mutex is; /// implicitely released before waiting and locked again after waking up.; /// If Wait() is called by multiple threads, a signal may wake up more; /// than one thread. See POSIX threads documentation for details.",MatchSource.CODE_COMMENT,core/thread/src/TPosixCondition.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixCondition.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixMutex.cxx:555,Integrability,interface,interface,555,"// @(#)root/thread:$Id$; // Author: Fons Rademakers 25/06/97; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TPosixMutex //; // //; // This class provides an interface to the posix mutex routines. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/src/TPosixMutex.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixMutex.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixMutex.cxx:584,Integrability,rout,routines,584,"// @(#)root/thread:$Id$; // Author: Fons Rademakers 25/06/97; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TPosixMutex //; // //; // This class provides an interface to the posix mutex routines. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/src/TPosixMutex.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixMutex.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixThread.cxx:556,Integrability,interface,interface,556,"// @(#)root/thread:$Id$; // Author: Fons Rademakers 02/07/97; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TPosixThread //; // //; // This class provides an interface to the posix thread routines. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/src/TPosixThread.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixThread.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixThread.cxx:586,Integrability,rout,routines,586,"// @(#)root/thread:$Id$; // Author: Fons Rademakers 02/07/97; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TPosixThread //; // //; // This class provides an interface to the posix thread routines. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/src/TPosixThread.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixThread.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixThread.cxx:139,Availability,error,error,139,"////////////////////////////////////////////////////////////////////////////////; /// Create a pthread. Returns 0 on success, otherwise an error number will; /// be returned.",MatchSource.CODE_COMMENT,core/thread/src/TPosixThread.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixThread.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixThread.cxx:281,Availability,error,error,281,"////////////////////////////////////////////////////////////////////////////////; /// Join suspends the execution of the calling thread until the; /// thread identified by th terminates, either by calling pthread_exit; /// or by being cancelled. Returns 0 on success, otherwise an error number will; /// be returned.",MatchSource.CODE_COMMENT,core/thread/src/TPosixThread.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixThread.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixThread.cxx:221,Availability,error,error,221,"////////////////////////////////////////////////////////////////////////////////; /// Cancellation is the mechanism by which a thread can terminate the; /// execution of another thread. Returns 0 on success, otherwise an error; /// number will be returned.",MatchSource.CODE_COMMENT,core/thread/src/TPosixThread.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixThread.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixThread.cxx:181,Availability,error,error,181,"////////////////////////////////////////////////////////////////////////////////; /// Turn off the cancellation state of the calling thread. Returns 0 on; /// success, otherwise an error number will be returned.",MatchSource.CODE_COMMENT,core/thread/src/TPosixThread.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixThread.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixThread.cxx:180,Availability,error,error,180,"////////////////////////////////////////////////////////////////////////////////; /// Turn on the cancellation state of the calling thread. Returns 0 on; /// success, otherwise an error number will be returned.",MatchSource.CODE_COMMENT,core/thread/src/TPosixThread.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixThread.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixThread.cxx:246,Availability,error,error,246,"////////////////////////////////////////////////////////////////////////////////; /// Set the cancellation response type of the calling thread to; /// deferred, i.e. cancel only at next cancellation point.; /// Returns 0 on success, otherwise an error number will be returned.",MatchSource.CODE_COMMENT,core/thread/src/TPosixThread.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixThread.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixThread.cxx:109,Integrability,rout,routine,109,"////////////////////////////////////////////////////////////////////////////////; /// Default thread cleanup routine.",MatchSource.CODE_COMMENT,core/thread/src/TPosixThread.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixThread.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixThreadFactory.cxx:69,Performance,load,loaded,69,"// Force creation of TPosixThreadFactory when shared library will be loaded; // (don't explicitly create a TPosixThreadFactory).",MatchSource.CODE_COMMENT,core/thread/src/TPosixThreadFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixThreadFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixThreadFactory.cxx:111,Modifiability,variab,variable,111,"////////////////////////////////////////////////////////////////////////////////; /// Return a Posix condition variable.",MatchSource.CODE_COMMENT,core/thread/src/TPosixThreadFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixThreadFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.cxx:733,Integrability,synchroniz,synchronize,733,"// @(#)root/thread:$Id$; // Authors: Enric Tejedor CERN 12/09/2016; // Philippe Canal FNAL 12/09/2016; /*************************************************************************; * Copyright (C) 1995-2016, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TReentrantRWLock; \brief An implementation of a reentrant read-write lock with a; configurable internal mutex/lock (default Spin Lock). This class provides an implementation of a reentrant read-write lock; that uses an internal lock and a condition variable to synchronize; readers and writers when necessary. The implementation allows a single reader to take the write lock without; releasing the reader lock. It also allows the writer to take a read lock.; In other word, the lock is re-entrant for both reading and writing. The implementation tries to make faster the scenario when readers come; and go but there is no writer. In that case, readers will not pay the; price of taking the internal spin lock. Moreover, this RW lock tries to be fair with writers, giving them the; possibility to claim the lock and wait for only the remaining readers,; thus preventing starvation.; */",MatchSource.CODE_COMMENT,core/thread/src/TReentrantRWLock.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.cxx:554,Modifiability,config,configurable,554,"// @(#)root/thread:$Id$; // Authors: Enric Tejedor CERN 12/09/2016; // Philippe Canal FNAL 12/09/2016; /*************************************************************************; * Copyright (C) 1995-2016, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TReentrantRWLock; \brief An implementation of a reentrant read-write lock with a; configurable internal mutex/lock (default Spin Lock). This class provides an implementation of a reentrant read-write lock; that uses an internal lock and a condition variable to synchronize; readers and writers when necessary. The implementation allows a single reader to take the write lock without; releasing the reader lock. It also allows the writer to take a read lock.; In other word, the lock is re-entrant for both reading and writing. The implementation tries to make faster the scenario when readers come; and go but there is no writer. In that case, readers will not pay the; price of taking the internal spin lock. Moreover, this RW lock tries to be fair with writers, giving them the; possibility to claim the lock and wait for only the remaining readers,; thus preventing starvation.; */",MatchSource.CODE_COMMENT,core/thread/src/TReentrantRWLock.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.cxx:721,Modifiability,variab,variable,721,"// @(#)root/thread:$Id$; // Authors: Enric Tejedor CERN 12/09/2016; // Philippe Canal FNAL 12/09/2016; /*************************************************************************; * Copyright (C) 1995-2016, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TReentrantRWLock; \brief An implementation of a reentrant read-write lock with a; configurable internal mutex/lock (default Spin Lock). This class provides an implementation of a reentrant read-write lock; that uses an internal lock and a condition variable to synchronize; readers and writers when necessary. The implementation allows a single reader to take the write lock without; releasing the reader lock. It also allows the writer to take a read lock.; In other word, the lock is re-entrant for both reading and writing. The implementation tries to make faster the scenario when readers come; and go but there is no writer. In that case, readers will not pay the; price of taking the internal spin lock. Moreover, this RW lock tries to be fair with writers, giving them the; possibility to claim the lock and wait for only the remaining readers,; thus preventing starvation.; */",MatchSource.CODE_COMMENT,core/thread/src/TReentrantRWLock.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.cxx:16,Performance,concurren,concurrently,16,"// This can run concurrently with another thread trying to get; // the read lock and ending up in the next section (""Wait for writers, if any""); // which need to also get the local readers count and thus can; // modify the map.",MatchSource.CODE_COMMENT,core/thread/src/TReentrantRWLock.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.cxx:150,Deployability,release,release,150,"// else; // There is a writer **but** we have outstanding readers; // locks, this must mean that the writer is actually; // waiting on this thread to release its read locks.; // This can be done in only two ways:; // * request the writer lock; // * release the reader lock; // Either way, this thread needs to proceed to; // be able to reach a point whether it does one; // of the two.",MatchSource.CODE_COMMENT,core/thread/src/TReentrantRWLock.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.cxx:249,Deployability,release,release,249,"// else; // There is a writer **but** we have outstanding readers; // locks, this must mean that the writer is actually; // waiting on this thread to release its read locks.; // This can be done in only two ways:; // * request the writer lock; // * release the reader lock; // Either way, this thread needs to proceed to; // be able to reach a point whether it does one; // of the two.",MatchSource.CODE_COMMENT,core/thread/src/TReentrantRWLock.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.cxx:80,Deployability,Release,Release,80,"//////////////////////////////////////////////////////////////////////////; /// Release the lock in read mode.",MatchSource.CODE_COMMENT,core/thread/src/TReentrantRWLock.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.cxx:3,Deployability,Release,Release,3,"// Release this thread's reader lock(s)",MatchSource.CODE_COMMENT,core/thread/src/TReentrantRWLock.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.cxx:80,Deployability,Release,Release,80,"//////////////////////////////////////////////////////////////////////////; /// Release the lock in write mode.",MatchSource.CODE_COMMENT,core/thread/src/TReentrantRWLock.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.cxx:3,Deployability,Release,Release,3,"// Release this thread's write lock",MatchSource.CODE_COMMENT,core/thread/src/TReentrantRWLock.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.cxx:40,Deployability,update,updated,40,"// ReadersCount and Readers can be read/updated before actually holding the R/W lock.; // (See WriteLock and ReadLock methods) but fReaders is an atomic, so that should be fine; // but that's weird, that does not account to other change in fReaders during between; // the snapshot and the rewind ... humm unless the lock held is a WriteLock; // (the actual use case) in which case there is no other thread that can update fReaders; // and we also assume that the ""user code"" is balanced and release all read locks it takes.",MatchSource.CODE_COMMENT,core/thread/src/TReentrantRWLock.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.cxx:415,Deployability,update,update,415,"// ReadersCount and Readers can be read/updated before actually holding the R/W lock.; // (See WriteLock and ReadLock methods) but fReaders is an atomic, so that should be fine; // but that's weird, that does not account to other change in fReaders during between; // the snapshot and the rewind ... humm unless the lock held is a WriteLock; // (the actual use case) in which case there is no other thread that can update fReaders; // and we also assume that the ""user code"" is balanced and release all read locks it takes.",MatchSource.CODE_COMMENT,core/thread/src/TReentrantRWLock.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.cxx:491,Deployability,release,release,491,"// ReadersCount and Readers can be read/updated before actually holding the R/W lock.; // (See WriteLock and ReadLock methods) but fReaders is an atomic, so that should be fine; // but that's weird, that does not account to other change in fReaders during between; // the snapshot and the rewind ... humm unless the lock held is a WriteLock; // (the actual use case) in which case there is no other thread that can update fReaders; // and we also assume that the ""user code"" is balanced and release all read locks it takes.",MatchSource.CODE_COMMENT,core/thread/src/TReentrantRWLock.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.cxx:3,Deployability,Release,Release,3,"// Release this thread's reader lock(s)",MatchSource.CODE_COMMENT,core/thread/src/TReentrantRWLock.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.cxx:169,Availability,error,error,169,"//////////////////////////////////////////////////////////////////////////; /// Assert that presumedLocalReadersCount really matches the local read count.; /// Print an error message if not.",MatchSource.CODE_COMMENT,core/thread/src/TReentrantRWLock.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.cxx:175,Integrability,message,message,175,"//////////////////////////////////////////////////////////////////////////; /// Assert that presumedLocalReadersCount really matches the local read count.; /// Print an error message if not.",MatchSource.CODE_COMMENT,core/thread/src/TReentrantRWLock.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.cxx:80,Testability,Assert,Assert,80,"//////////////////////////////////////////////////////////////////////////; /// Assert that presumedLocalReadersCount really matches the local read count.; /// Print an error message if not.",MatchSource.CODE_COMMENT,core/thread/src/TReentrantRWLock.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.hxx:21,Security,access,access,21,"///<! A reader wants access",MatchSource.CODE_COMMENT,core/thread/src/TReentrantRWLock.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.hxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.hxx:21,Security,access,access,21,"///<! A writer wants access",MatchSource.CODE_COMMENT,core/thread/src/TReentrantRWLock.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.hxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.hxx:32,Modifiability,variab,variable,32,"///<! RWlock internal condition variable",MatchSource.CODE_COMMENT,core/thread/src/TReentrantRWLock.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.hxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TRWLock.cxx:614,Security,access,accessed,614,"// @(#)root/thread:$Id$; // Author: Fons Rademakers 04/01/2000; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TRWLock //; // //; // This class implements a reader/writer lock. A rwlock allows //; // a resource to be accessed by multiple reader threads but only //; // one writer thread. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/src/TRWLock.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TRWLock.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TRWMutexImp.cxx:574,Integrability,interface,interface,574,"// @(#)root/thread:$Id$; // Author: Fons Rademakers 26/06/97; /*************************************************************************; * Copyright (C) 1995-2017, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TRWMutexImp //; // //; // This class implements the TVirtualRWMutex interface, //; // based on TRWSpinLock. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/src/TRWMutexImp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TRWMutexImp.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TRWMutexImp.cxx:86,Deployability,Release,Release,86,"////////////////////////////////////////////////////////////////////////////////; /// Release the read lock of the mutex",MatchSource.CODE_COMMENT,core/thread/src/TRWMutexImp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TRWMutexImp.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TRWMutexImp.cxx:86,Deployability,Release,Release,86,"////////////////////////////////////////////////////////////////////////////////; /// Release the read lock of the mutex",MatchSource.CODE_COMMENT,core/thread/src/TRWMutexImp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TRWMutexImp.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TRWSpinLock.cxx:679,Integrability,synchroniz,synchronize,679,"// @(#)root/thread:$Id$; // Authors: Enric Tejedor CERN 12/09/2016; // Philippe Canal FNAL 12/09/2016; /*************************************************************************; * Copyright (C) 1995-2016, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TRWSpinLock; \brief An implementation of a read-write lock with an internal spin lock. This class provides an implementation of a read-write lock that uses an; internal spin lock and a condition variable to synchronize readers and; writers when necessary. The implementation tries to make faster the scenario when readers come; and go but there is no writer. In that case, readers will not pay the; price of taking the internal spin lock. Moreover, this RW lock tries to be fair with writers, giving them the; possibility to claim the lock and wait for only the remaining readers,; thus preventing starvation.; */",MatchSource.CODE_COMMENT,core/thread/src/TRWSpinLock.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TRWSpinLock.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TRWSpinLock.cxx:667,Modifiability,variab,variable,667,"// @(#)root/thread:$Id$; // Authors: Enric Tejedor CERN 12/09/2016; // Philippe Canal FNAL 12/09/2016; /*************************************************************************; * Copyright (C) 1995-2016, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TRWSpinLock; \brief An implementation of a read-write lock with an internal spin lock. This class provides an implementation of a read-write lock that uses an; internal spin lock and a condition variable to synchronize readers and; writers when necessary. The implementation tries to make faster the scenario when readers come; and go but there is no writer. In that case, readers will not pay the; price of taking the internal spin lock. Moreover, this RW lock tries to be fair with writers, giving them the; possibility to claim the lock and wait for only the remaining readers,; thus preventing starvation.; */",MatchSource.CODE_COMMENT,core/thread/src/TRWSpinLock.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TRWSpinLock.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TRWSpinLock.cxx:80,Deployability,Release,Release,80,"//////////////////////////////////////////////////////////////////////////; /// Release the lock in read mode.",MatchSource.CODE_COMMENT,core/thread/src/TRWSpinLock.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TRWSpinLock.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TRWSpinLock.cxx:80,Deployability,Release,Release,80,"//////////////////////////////////////////////////////////////////////////; /// Release the lock in write mode.",MatchSource.CODE_COMMENT,core/thread/src/TRWSpinLock.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TRWSpinLock.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TSemaphore.cxx:630,Integrability,synchroniz,synchronize,630,"// @(#)root/thread:$Id$; // Author: Fons Rademakers 02/07/97 (Revised: G Ganis, Nov 2015); /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TSemaphore //; // //; // This class implements a counting semaphore. Use a semaphore //; // to synchronize threads. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/src/TSemaphore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TSemaphore.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TSemaphore.cxx:197,Safety,timeout,timeout,197,"////////////////////////////////////////////////////////////////////////////////; /// If the semaphore value is > 0 then decrement it and carry on, else block.; /// If millisec > 0 then a relative timeout of millisec milliseconds is applied.; /// For backward compatibility with the first implementation, millisec == 0 means; /// no timeout.; /// Returns 1 if timed-out, 0 otherwise.",MatchSource.CODE_COMMENT,core/thread/src/TSemaphore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TSemaphore.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TSemaphore.cxx:333,Safety,timeout,timeout,333,"////////////////////////////////////////////////////////////////////////////////; /// If the semaphore value is > 0 then decrement it and carry on, else block.; /// If millisec > 0 then a relative timeout of millisec milliseconds is applied.; /// For backward compatibility with the first implementation, millisec == 0 means; /// no timeout.; /// Returns 1 if timed-out, 0 otherwise.",MatchSource.CODE_COMMENT,core/thread/src/TSemaphore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TSemaphore.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:148,Availability,error,error,148,"// Note: we could insert here a wait for all thread to be finished.; // this is questionable though as we need to balance between fixing a; // user error (the thread was let lose and the caller did not explicit wait); // and the risk that we can not terminate a failing process.",MatchSource.CODE_COMMENT,core/thread/src/TThread.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:229,Safety,risk,risk,229,"// Note: we could insert here a wait for all thread to be finished.; // this is questionable though as we need to balance between fixing a; // user error (the thread was let lose and the caller did not explicit wait); // and the risk that we can not terminate a failing process.",MatchSource.CODE_COMMENT,core/thread/src/TThread.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:26,Deployability,release,release,26,"// TimedWaitRelative will release the mutex (i.e. equivalent to fM->Unlock),; // then block on the condition variable. Upon return it will lock the mutex.",MatchSource.CODE_COMMENT,core/thread/src/TThread.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:109,Modifiability,variab,variable,109,"// TimedWaitRelative will release the mutex (i.e. equivalent to fM->Unlock),; // then block on the condition variable. Upon return it will lock the mutex.",MatchSource.CODE_COMMENT,core/thread/src/TThread.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:85,Modifiability,variab,variables,85,"// 100 ms; // From the man page from pthread_ond_timedwait:; // When using condition variables there is always a Boolean predicate; // involving shared variables associated with each condition wait that; // is true if the thread should proceed. Spurious wakeups from the; // pthread_cond_timedwait() or pthread_cond_wait() functions may occur.; // Since the return from pthread_cond_timedwait() or pthread_cond_wait(); // does not imply anything about the value of this predicate, the; // predicate should be re-evaluated upon such return.",MatchSource.CODE_COMMENT,core/thread/src/TThread.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:152,Modifiability,variab,variables,152,"// 100 ms; // From the man page from pthread_ond_timedwait:; // When using condition variables there is always a Boolean predicate; // involving shared variables associated with each condition wait that; // is true if the thread should proceed. Spurious wakeups from the; // pthread_cond_timedwait() or pthread_cond_wait() functions may occur.; // Since the return from pthread_cond_timedwait() or pthread_cond_wait(); // does not imply anything about the value of this predicate, the; // predicate should be re-evaluated upon such return.",MatchSource.CODE_COMMENT,core/thread/src/TThread.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:16,Availability,error,error,16,"// If any other error occurred, there is no point in trying again",MatchSource.CODE_COMMENT,core/thread/src/TThread.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:38,Safety,avoid,avoid,38,"// And wait for the help to finish to avoid the risk that it is still; // running when the main tread is finished (and the thread library unloaded!)",MatchSource.CODE_COMMENT,core/thread/src/TThread.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:48,Safety,risk,risk,48,"// And wait for the help to finish to avoid the risk that it is still; // running when the main tread is finished (and the thread library unloaded!)",MatchSource.CODE_COMMENT,core/thread/src/TThread.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:204,Safety,safe,safe,204,"////////////////////////////////////////////////////////////////////////////////; /// Initialize the Thread package. This initializes the TThread and ROOT; /// global mutexes to make parts of ROOT thread safe/aware. This call is; /// implicit in case a TThread is created.",MatchSource.CODE_COMMENT,core/thread/src/TThread.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:114,Modifiability,variab,variables,114,"////////////////////////////////////////////////////////////////////////////////; /// Initialize global state and variables once.",MatchSource.CODE_COMMENT,core/thread/src/TThread.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:60,Safety,safe,safe,60,"// 'Insure' gROOT is created before initializing the Thread safe behavior; // (to make sure we do not have two attempting to create it).",MatchSource.CODE_COMMENT,core/thread/src/TThread.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:6,Safety,avoid,avoid,6,"// To avoid deadlocks, gInterpreterMutex and gROOTMutex need; // to point at the same instance.; // Both are now deprecated in favor of ROOT::gCoreMutex",MatchSource.CODE_COMMENT,core/thread/src/TThread.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:6,Safety,avoid,avoid,6,"// To avoid dead locks, caused by shared library opening and/or static initialization; // taking the same lock as 'tls_get_addr_tail', we can not use UniqueLockRecurseCount.",MatchSource.CODE_COMMENT,core/thread/src/TThread.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:38,Integrability,rout,routine,38,"// thread is set up in initialisation routine or Run().",MatchSource.CODE_COMMENT,core/thread/src/TThread.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:388,Availability,error,error,388,"////////////////////////////////////////////////////////////////////////////////; /// Start the thread. This starts the static method TThread::Function(); /// which calls the user function specified in the TThread ctor with; /// the arg argument.; /// If affinity is specified (>=0), a CPU affinity will be associated; /// with the current thread.; /// Returns 0 on success, otherwise an error number will; /// be returned.",MatchSource.CODE_COMMENT,core/thread/src/TThread.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:139,Availability,error,error,139,"////////////////////////////////////////////////////////////////////////////////; /// Kill this thread. Returns 0 on success, otherwise an error number will; /// be returned.",MatchSource.CODE_COMMENT,core/thread/src/TThread.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:166,Availability,error,error,166,"////////////////////////////////////////////////////////////////////////////////; /// Static method to kill the thread by id. Returns 0 on success, otherwise; /// an error number will be returned.",MatchSource.CODE_COMMENT,core/thread/src/TThread.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:164,Availability,error,error,164,"////////////////////////////////////////////////////////////////////////////////; /// Static method to kill thread by name. Returns 0 on success, otherwise; /// an error number will be returned.",MatchSource.CODE_COMMENT,core/thread/src/TThread.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:173,Availability,error,error,173,"////////////////////////////////////////////////////////////////////////////////; /// Static method to turn off thread cancellation. Returns 0 on success,; /// otherwise an error number will be returned.",MatchSource.CODE_COMMENT,core/thread/src/TThread.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:172,Availability,error,error,172,"////////////////////////////////////////////////////////////////////////////////; /// Static method to turn on thread cancellation. Returns 0 on success,; /// otherwise an error number will be returned.",MatchSource.CODE_COMMENT,core/thread/src/TThread.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:263,Availability,error,error,263,"////////////////////////////////////////////////////////////////////////////////; /// Static method to set the cancellation response type of the calling thread; /// to deferred, i.e. cancel only at next cancellation point.; /// Returns 0 on success, otherwise an error number will be returned.",MatchSource.CODE_COMMENT,core/thread/src/TThread.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:169,Availability,error,error,169,"////////////////////////////////////////////////////////////////////////////////; /// Static method to set a cancellation point. Returns 0 on success, otherwise; /// an error number will be returned.",MatchSource.CODE_COMMENT,core/thread/src/TThread.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:197,Availability,error,error,197,"////////////////////////////////////////////////////////////////////////////////; /// Static method which pushes thread cleanup method on stack.; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,core/thread/src/TThread.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:196,Availability,error,error,196,"////////////////////////////////////////////////////////////////////////////////; /// Static method which pops thread cleanup method off stack.; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,core/thread/src/TThread.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:119,Safety,safe,safe,119,"////////////////////////////////////////////////////////////////////////////////; /// Static method providing a thread safe printf. Appends a newline.",MatchSource.CODE_COMMENT,core/thread/src/TThread.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:102,Availability,error,error,102,"////////////////////////////////////////////////////////////////////////////////; /// Thread specific error handler function.; /// It calls the user set error handler in the main thread.",MatchSource.CODE_COMMENT,core/thread/src/TThread.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:153,Availability,error,error,153,"////////////////////////////////////////////////////////////////////////////////; /// Thread specific error handler function.; /// It calls the user set error handler in the main thread.",MatchSource.CODE_COMMENT,core/thread/src/TThread.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:99,Availability,Error,ErrorHandler,99,"////////////////////////////////////////////////////////////////////////////////; /// Interface to ErrorHandler. User has to specify the class name as; /// part of the location, just like for the global Info(), Warning() and; /// Error() functions.",MatchSource.CODE_COMMENT,core/thread/src/TThread.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:230,Availability,Error,Error,230,"////////////////////////////////////////////////////////////////////////////////; /// Interface to ErrorHandler. User has to specify the class name as; /// part of the location, just like for the global Info(), Warning() and; /// Error() functions.",MatchSource.CODE_COMMENT,core/thread/src/TThread.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:86,Integrability,Interface,Interface,86,"////////////////////////////////////////////////////////////////////////////////; /// Interface to ErrorHandler. User has to specify the class name as; /// part of the location, just like for the global Info(), Warning() and; /// Error() functions.",MatchSource.CODE_COMMENT,core/thread/src/TThread.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:189,Safety,avoid,avoid,189,"////////////////////////////////////////////////////////////////////////////////; /// Static method called via the thread timer to execute in the main; /// thread certain commands. This to avoid sophisticated locking and; /// possible deadlocking.",MatchSource.CODE_COMMENT,core/thread/src/TThread.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:26,Deployability,Update,Update,26,"//((TCanvas *)fgXArr[1])->Update();",MatchSource.CODE_COMMENT,core/thread/src/TThread.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:16,Deployability,Update,Update,16,"// aka TCanvas::Update()",MatchSource.CODE_COMMENT,core/thread/src/TThread.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:293,Integrability,rout,routines,293,"//////////////////////////////////////////////////////////////////////////; // //; // TThreadCleaner //; // //; //////////////////////////////////////////////////////////////////////////; ////////////////////////////////////////////////////////////////////////////////; /// Call user clean up routines.",MatchSource.CODE_COMMENT,core/thread/src/TThread.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThreadFactory.cxx:580,Integrability,Depend,Depending,580,"// @(#)root/thread:$Id$; // Author: Fons Rademakers 01/07/97; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TThreadFactory //; // //; // This ABC is a factory for thread components. Depending on which //; // factory is active one gets either Posix or Win32 threads. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/src/TThreadFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThreadFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Condition.cxx:563,Integrability,interface,interface,563,"// @(#)root/thread:$Id$; // Author: Bertrand Bellenot 20/10/2004; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TWin32Condition //; // //; // This class provides an interface to the win32 condition variable //; // routines. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/src/TWin32Condition.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Condition.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Condition.cxx:612,Integrability,rout,routines,612,"// @(#)root/thread:$Id$; // Author: Bertrand Bellenot 20/10/2004; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TWin32Condition //; // //; // This class provides an interface to the win32 condition variable //; // routines. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/src/TWin32Condition.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Condition.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Condition.cxx:596,Modifiability,variab,variable,596,"// @(#)root/thread:$Id$; // Author: Bertrand Bellenot 20/10/2004; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TWin32Condition //; // //; // This class provides an interface to the win32 condition variable //; // routines. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/src/TWin32Condition.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Condition.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Condition.cxx:103,Modifiability,variab,variable,103,"////////////////////////////////////////////////////////////////////////////////; /// Create Condition variable. Ctor must be given a pointer to an; /// existing mutex. The condition variable is then linked to the mutex,; /// so that there is an implicit unlock and lock around Wait() and; /// TimedWait().",MatchSource.CODE_COMMENT,core/thread/src/TWin32Condition.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Condition.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Condition.cxx:183,Modifiability,variab,variable,183,"////////////////////////////////////////////////////////////////////////////////; /// Create Condition variable. Ctor must be given a pointer to an; /// existing mutex. The condition variable is then linked to the mutex,; /// so that there is an implicit unlock and lock around Wait() and; /// TimedWait().",MatchSource.CODE_COMMENT,core/thread/src/TWin32Condition.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Condition.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Condition.cxx:6,Security,secur,security,6,"// no security",MatchSource.CODE_COMMENT,core/thread/src/TWin32Condition.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Condition.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Condition.cxx:6,Security,secur,security,6,"// no security",MatchSource.CODE_COMMENT,core/thread/src/TWin32Condition.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Condition.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Condition.cxx:165,Deployability,release,released,165,"////////////////////////////////////////////////////////////////////////////////; /// Wait for the condition variable to be signalled. The mutex is; /// implicitely released before waiting and locked again after waking up.; /// If Wait() is called by multiple threads, a signal may wake up more; /// than one thread. See POSIX threads documentation for details.",MatchSource.CODE_COMMENT,core/thread/src/TWin32Condition.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Condition.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Condition.cxx:109,Modifiability,variab,variable,109,"////////////////////////////////////////////////////////////////////////////////; /// Wait for the condition variable to be signalled. The mutex is; /// implicitely released before waiting and locked again after waking up.; /// If Wait() is called by multiple threads, a signal may wake up more; /// than one thread. See POSIX threads documentation for details.",MatchSource.CODE_COMMENT,core/thread/src/TWin32Condition.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Condition.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Condition.cxx:9,Performance,race condition,race conditions,9,"// Avoid race conditions.",MatchSource.CODE_COMMENT,core/thread/src/TWin32Condition.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Condition.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Condition.cxx:3,Safety,Avoid,Avoid,3,"// Avoid race conditions.",MatchSource.CODE_COMMENT,core/thread/src/TWin32Condition.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Condition.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Condition.cxx:24,Deployability,release,releases,24,"// This call atomically releases the mutex and waits on the; // semaphore until <pthread_cond_signal> or <pthread_cond_broadcast>; // are called by another thread.; // SignalObjectAndWait(fMutex->fHMutex, fCond.sema_, INFINITE, FALSE);",MatchSource.CODE_COMMENT,core/thread/src/TWin32Condition.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Condition.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Condition.cxx:27,Performance,race condition,race conditions,27,"// Reacquire lock to avoid race conditions.",MatchSource.CODE_COMMENT,core/thread/src/TWin32Condition.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Condition.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Condition.cxx:21,Safety,avoid,avoid,21,"// Reacquire lock to avoid race conditions.",MatchSource.CODE_COMMENT,core/thread/src/TWin32Condition.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Condition.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Condition.cxx:9,Performance,race condition,race conditions,9,"// Avoid race conditions.",MatchSource.CODE_COMMENT,core/thread/src/TWin32Condition.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Condition.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Condition.cxx:3,Safety,Avoid,Avoid,3,"// Avoid race conditions.",MatchSource.CODE_COMMENT,core/thread/src/TWin32Condition.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Condition.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Condition.cxx:24,Deployability,release,releases,24,"// This call atomically releases the mutex and waits on the; // semaphore until <pthread_cond_signal> or <pthread_cond_broadcast>; // are called by another thread.; // ret = SignalObjectAndWait(fMutex->fHMutex, fCond.sema_, dwTimeWait, FALSE);",MatchSource.CODE_COMMENT,core/thread/src/TWin32Condition.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Condition.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Condition.cxx:27,Performance,race condition,race conditions,27,"// Reacquire lock to avoid race conditions.",MatchSource.CODE_COMMENT,core/thread/src/TWin32Condition.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Condition.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Condition.cxx:21,Safety,avoid,avoid,21,"// Reacquire lock to avoid race conditions.",MatchSource.CODE_COMMENT,core/thread/src/TWin32Condition.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Condition.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Condition.cxx:109,Performance,optimiz,optimize,109,"// We are broadcasting, even if there is just one waiter...; // Record that we are broadcasting, which helps optimize; // <pthread_cond_wait> for the non-broadcast case.",MatchSource.CODE_COMMENT,core/thread/src/TWin32Condition.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Condition.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Condition.cxx:123,Security,access,access,123,"// This assignment is okay, even without the <waiters_count_lock_> held; // because no other waiter threads can wake up to access it.",MatchSource.CODE_COMMENT,core/thread/src/TWin32Condition.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Condition.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Mutex.cxx:557,Integrability,interface,interface,557,"// @(#)root/thread:$Id$; // Author: Bertrand Bellenot 23/10/04; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TWin32Mutex //; // //; // This class provides an interface to the Win32 mutex routines. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/src/TWin32Mutex.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Mutex.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Mutex.cxx:586,Integrability,rout,routines,586,"// @(#)root/thread:$Id$; // Author: Bertrand Bellenot 23/10/04; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TWin32Mutex //; // //; // This class provides an interface to the Win32 mutex routines. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/src/TWin32Mutex.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Mutex.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Thread.cxx:560,Integrability,interface,interface,560,"// @(#)root/thread:$Id$; // Author: Bertrand Bellenot 20/10/2004; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TWin32Thread //; // //; // This class provides an interface to the win32 thread routines. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/src/TWin32Thread.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Thread.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Thread.cxx:590,Integrability,rout,routines,590,"// @(#)root/thread:$Id$; // Author: Bertrand Bellenot 20/10/2004; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TWin32Thread //; // //; // This class provides an interface to the win32 thread routines. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/thread/src/TWin32Thread.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Thread.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32ThreadFactory.cxx:69,Performance,load,loaded,69,"// Force creation of TWin32ThreadFactory when shared library will be loaded; // (don't explicitly create a TWin32ThreadFactory).",MatchSource.CODE_COMMENT,core/thread/src/TWin32ThreadFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32ThreadFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32ThreadFactory.cxx:111,Modifiability,variab,variable,111,"////////////////////////////////////////////////////////////////////////////////; /// Return a Win32 condition variable.",MatchSource.CODE_COMMENT,core/thread/src/TWin32ThreadFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32ThreadFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/test/testRWLock.cxx:34,Availability,error,error,34,"// Intentionally ignore the Fatal error due to the shread thread-local storage.; // In this test we need to be 'careful' to not use all those mutex at the same time.",MatchSource.CODE_COMMENT,core/thread/test/testRWLock.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/test/testRWLock.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/test/testRWLock.cxx:92,Testability,test,test,92,"// Intentionally ignore the Fatal error due to the shread thread-local storage.; // In this test we need to be 'careful' to not use all those mutex at the same time.",MatchSource.CODE_COMMENT,core/thread/test/testRWLock.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/test/testRWLock.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/test/testRWLock.cxx:59,Performance,concurren,concurrentResetRestore,59,"// TEST(RWLock, LargeconcurrentResetRestoreSpin); // {; // concurrentResetRestore(gRWMutexSpin,20,gRepetition / 1000);; // }",MatchSource.CODE_COMMENT,core/thread/test/testRWLock.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/test/testRWLock.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/test/testRWLock.cxx:3,Testability,TEST,TEST,3,"// TEST(RWLock, LargeconcurrentResetRestoreSpin); // {; // concurrentResetRestore(gRWMutexSpin,20,gRepetition / 1000);; // }",MatchSource.CODE_COMMENT,core/thread/test/testRWLock.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/test/testRWLock.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/test/testRWLock.cxx:39,Deployability,configurat,configurations,39,"// this can take a few minutes in some configurations; // TEST(RWLock, VeryLargeconcurrentReadsAndWritesSpin); // {; // concurrentReadsAndWrites(gRWMutexSpin,10,200,gRepetition / 100000);; // }",MatchSource.CODE_COMMENT,core/thread/test/testRWLock.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/test/testRWLock.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/test/testRWLock.cxx:39,Modifiability,config,configurations,39,"// this can take a few minutes in some configurations; // TEST(RWLock, VeryLargeconcurrentReadsAndWritesSpin); // {; // concurrentReadsAndWrites(gRWMutexSpin,10,200,gRepetition / 100000);; // }",MatchSource.CODE_COMMENT,core/thread/test/testRWLock.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/test/testRWLock.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/test/testRWLock.cxx:120,Performance,concurren,concurrentReadsAndWrites,120,"// this can take a few minutes in some configurations; // TEST(RWLock, VeryLargeconcurrentReadsAndWritesSpin); // {; // concurrentReadsAndWrites(gRWMutexSpin,10,200,gRepetition / 100000);; // }",MatchSource.CODE_COMMENT,core/thread/test/testRWLock.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/test/testRWLock.cxx
https://github.com/root-project/root/tree/v6-32-06/core/thread/test/testRWLock.cxx:58,Testability,TEST,TEST,58,"// this can take a few minutes in some configurations; // TEST(RWLock, VeryLargeconcurrentReadsAndWritesSpin); // {; // concurrentReadsAndWrites(gRWMutexSpin,10,200,gRepetition / 100000);; // }",MatchSource.CODE_COMMENT,core/thread/test/testRWLock.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/test/testRWLock.cxx
https://github.com/root-project/root/tree/v6-32-06/core/unix/inc/TUnixSystem.h:131,Integrability,interface,interface,131,"//////////////////////////////////////////////////////////////////////////; // //; // TUnixSystem //; // //; // Class providing an interface to the UNIX Operating System. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/unix/inc/TUnixSystem.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/inc/TUnixSystem.h
https://github.com/root-project/root/tree/v6-32-06/core/unix/inc/TUnixSystem.h:45,Integrability,interface,interface,45,"// static functions providing semi-low level interface to raw Unix",MatchSource.CODE_COMMENT,core/unix/inc/TUnixSystem.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/inc/TUnixSystem.h
https://github.com/root-project/root/tree/v6-32-06/core/unix/inc/TUnixSystem.h:14,Testability,Log,Logging,14,"//---- System Logging ---------------------------------------",MatchSource.CODE_COMMENT,core/unix/inc/TUnixSystem.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/inc/TUnixSystem.h
https://github.com/root-project/root/tree/v6-32-06/core/unix/inc/TUnixSystem.h:15,Performance,Load,Loading,15,"//---- Dynamic Loading --------------------------------------",MatchSource.CODE_COMMENT,core/unix/inc/TUnixSystem.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/inc/TUnixSystem.h
https://github.com/root-project/root/tree/v6-32-06/core/unix/inc/TUnixSystem.h:2,Integrability,Interface,Interface,2,"//Interface to Unix OS services",MatchSource.CODE_COMMENT,core/unix/inc/TUnixSystem.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/inc/TUnixSystem.h
https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:3,Integrability,Depend,Depending,3,"// Depending on the platform the struct utmp (or utmpx) has either ut_name or ut_user; // which are semantically equivalent. Instead of using preprocessor magic,; // which is bothersome for cxx modules use SFINAE.",MatchSource.CODE_COMMENT,core/unix/src/TUnixSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:29,Performance,load,loaded,29,"// when libSystem.B.dylib is loaded we have finished loading all dylibs; // explicitly linked against the executable. Additional dylibs; // come when they are explicitly linked against loaded so's, currently; // we are not interested in these",MatchSource.CODE_COMMENT,core/unix/src/TUnixSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:53,Performance,load,loading,53,"// when libSystem.B.dylib is loaded we have finished loading all dylibs; // explicitly linked against the executable. Additional dylibs; // come when they are explicitly linked against loaded so's, currently; // we are not interested in these",MatchSource.CODE_COMMENT,core/unix/src/TUnixSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:185,Performance,load,loaded,185,"// when libSystem.B.dylib is loaded we have finished loading all dylibs; // explicitly linked against the executable. Additional dylibs; // come when they are explicitly linked against loaded so's, currently; // we are not interested in these",MatchSource.CODE_COMMENT,core/unix/src/TUnixSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:80,Availability,failure,failure,80,"// TSystem::GetLibraries() assumes that an empty GetLinkedLibraries(); // means failure to extract the linked libraries. Signal ""we did; // manage, but it's empty"" by returning a single space.",MatchSource.CODE_COMMENT,core/unix/src/TUnixSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:16,Performance,load,loaded,16,"// add all libs loaded before libSystem.B.dylib",MatchSource.CODE_COMMENT,core/unix/src/TUnixSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:6,Deployability,install,install,6,"//--- install default handlers",MatchSource.CODE_COMMENT,core/unix/src/TUnixSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:8,Performance,load,loading,8,"// trap loading of all dylibs to register dylib name,; // sets also ROOTSYS if built without ROOTPREFIX",MatchSource.CODE_COMMENT,core/unix/src/TUnixSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:18,Testability,log,logged,18,"// device user is logged in on",MatchSource.CODE_COMMENT,core/unix/src/TUnixSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:7,Availability,mask,mask,7,"// use mask to avoid warning",MatchSource.CODE_COMMENT,core/unix/src/TUnixSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:15,Safety,avoid,avoid,15,"// use mask to avoid warning",MatchSource.CODE_COMMENT,core/unix/src/TUnixSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:3,Usability,clear,clear,3,"// clear pending exceptions so feenableexcept does not trigger them",MatchSource.CODE_COMMENT,core/unix/src/TUnixSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:48,Energy Efficiency,monitor,monitoring,48,"// prevent timers from blocking file descriptor monitoring",MatchSource.CODE_COMMENT,core/unix/src/TUnixSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:19,Performance,cache,cache,19,"// invalidate path cache",MatchSource.CODE_COMMENT,core/unix/src/TUnixSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:13,Performance,cache,cache,13,"// don't use cache as user can call chdir() directly somewhere else; //if (fWdpath != """"); // return fWdpath.Data();",MatchSource.CODE_COMMENT,core/unix/src/TUnixSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:405,Availability,error,error,405,"////////////////////////////////////////////////////////////////////////////////; /// Expand a pathname getting rid of special shell characters like ~.$, etc.; /// For Unix/Win32 compatibility use $(XXX) instead of $XXX when using; /// environment variables in a pathname. If compatibility is not an issue; /// you can use on Unix directly $XXX. Returns kFALSE in case of success; /// or kTRUE in case of error.",MatchSource.CODE_COMMENT,core/unix/src/TUnixSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:248,Modifiability,variab,variables,248,"////////////////////////////////////////////////////////////////////////////////; /// Expand a pathname getting rid of special shell characters like ~.$, etc.; /// For Unix/Win32 compatibility use $(XXX) instead of $XXX when using; /// environment variables in a pathname. If compatibility is not an issue; /// you can use on Unix directly $XXX. Returns kFALSE in case of success; /// or kTRUE in case of error.",MatchSource.CODE_COMMENT,core/unix/src/TUnixSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:405,Availability,error,error,405,"////////////////////////////////////////////////////////////////////////////////; /// Expand a pathname getting rid of special shell characters like ~.$, etc.; /// For Unix/Win32 compatibility use $(XXX) instead of $XXX when using; /// environment variables in a pathname. If compatibility is not an issue; /// you can use on Unix directly $XXX. Returns kFALSE in case of success; /// or kTRUE in case of error.",MatchSource.CODE_COMMENT,core/unix/src/TUnixSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:248,Modifiability,variab,variables,248,"////////////////////////////////////////////////////////////////////////////////; /// Expand a pathname getting rid of special shell characters like ~.$, etc.; /// For Unix/Win32 compatibility use $(XXX) instead of $XXX when using; /// environment variables in a pathname. If compatibility is not an issue; /// you can use on Unix directly $XXX. Returns kFALSE in case of success; /// or kTRUE in case of error.",MatchSource.CODE_COMMENT,core/unix/src/TUnixSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:3,Energy Efficiency,Adapt,Adapted,3,"// Adapted from https://github.com/mountainstorm/CoreSymbolication; // Under the hood the framework basically just calls through to a set of C++ libraries",MatchSource.CODE_COMMENT,core/unix/src/TUnixSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:3,Modifiability,Adapt,Adapted,3,"// Adapted from https://github.com/mountainstorm/CoreSymbolication; // Under the hood the framework basically just calls through to a set of C++ libraries",MatchSource.CODE_COMMENT,core/unix/src/TUnixSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:16,Integrability,message,message,16,"// write custom message file",MatchSource.CODE_COMMENT,core/unix/src/TUnixSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:66,Availability,avail,available,66,"// gdb-backtrace.sh uses gdb to produce a backtrace. See if it is available.; // If it is, use it. If not proceed as before.",MatchSource.CODE_COMMENT,core/unix/src/TUnixSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:123,Deployability,upgrade,upgrade-gdb-wont-attach-to-process,123,"// Declare the process that will be generating the stacktrace; // For more see: http://askubuntu.com/questions/41629/after-upgrade-gdb-wont-attach-to-process",MatchSource.CODE_COMMENT,core/unix/src/TUnixSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:16,Integrability,message,message,16,"// write custom message file",MatchSource.CODE_COMMENT,core/unix/src/TUnixSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:184,Deployability,update,update,184,"// Tru64 stack walk. Uses the exception handling library and the; // run-time linker's core functions (loader(5)). FIXME: Tru64; // should have _RLD_DLADDR like IRIX below. Verify and update.",MatchSource.CODE_COMMENT,core/unix/src/TUnixSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:103,Performance,load,loader,103,"// Tru64 stack walk. Uses the exception handling library and the; // run-time linker's core functions (loader(5)). FIXME: Tru64; // should have _RLD_DLADDR like IRIX below. Verify and update.",MatchSource.CODE_COMMENT,core/unix/src/TUnixSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:7,Integrability,protocol,protocol,7,"// any protocol",MatchSource.CODE_COMMENT,core/unix/src/TUnixSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:4,Availability,Error,Error,4,"//::Error(""GetServiceByPort"", ""no service \""%d\"" with protocol \""%s\"""",; // port, kProtocolName);",MatchSource.CODE_COMMENT,core/unix/src/TUnixSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:54,Integrability,protocol,protocol,54,"//::Error(""GetServiceByPort"", ""no service \""%d\"" with protocol \""%s\"""",; // port, kProtocolName);",MatchSource.CODE_COMMENT,core/unix/src/TUnixSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:307,Deployability,update,update,307,"// We do not (otherwise) record whether the path was set automatically or; // whether it was set explicitly by the user. If the user set the path; // explicitly, we should never automatically over-ride the value; if; // seenCling stayed false, it would tell this routine that at the next; // call it should update the value (to insert the Cling provided parts); // back to the default.",MatchSource.CODE_COMMENT,core/unix/src/TUnixSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:263,Integrability,rout,routine,263,"// We do not (otherwise) record whether the path was set automatically or; // whether it was set explicitly by the user. If the user set the path; // explicitly, we should never automatically over-ride the value; if; // seenCling stayed false, it would tell this routine that at the next; // call it should update the value (to insert the Cling provided parts); // back to the default.",MatchSource.CODE_COMMENT,core/unix/src/TUnixSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:29,Deployability,update,updated,29,"// Another thread might have updated this. Even-though this is executed at the; // start of the process, we might get there if the user is explicitly; // 'resetting' the value.",MatchSource.CODE_COMMENT,core/unix/src/TUnixSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:171,Integrability,rout,routine,171,"// force one time initialization of gROOT before we start; // (otherwise it might be done as a side effect of gEnv->GetValue and; // TROOT's initialization will call this routine).",MatchSource.CODE_COMMENT,core/unix/src/TUnixSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:27,Modifiability,extend,extended,27,"// in case DynamicPath was extended",MatchSource.CODE_COMMENT,core/unix/src/TUnixSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:95,Availability,error,error,95,"// it probably would be better to get this information from syscalls; // this is possibly less error prone",MatchSource.CODE_COMMENT,core/unix/src/TUnixSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:94,Performance,load,load,94,"////////////////////////////////////////////////////////////////////////////////; /// Get CPU load on Mac OS X.",MatchSource.CODE_COMMENT,core/unix/src/TUnixSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:172,Performance,load,load,172,"////////////////////////////////////////////////////////////////////////////////; /// Get CPU stat for Mac OS X. Use sampleTime to set the interval over which; /// the CPU load will be measured, in ms (default 1000).",MatchSource.CODE_COMMENT,core/unix/src/TUnixSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:11,Availability,avail,available,11,"// Swap is available at same time as mem, so grab values here.",MatchSource.CODE_COMMENT,core/unix/src/TUnixSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:94,Performance,load,load,94,"////////////////////////////////////////////////////////////////////////////////; /// Get CPU load on Linux.",MatchSource.CODE_COMMENT,core/unix/src/TUnixSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:169,Performance,load,load,169,"////////////////////////////////////////////////////////////////////////////////; /// Get CPU stat for Linux. Use sampleTime to set the interval over which; /// the CPU load will be measured, in ms (default 1000).",MatchSource.CODE_COMMENT,core/unix/src/TUnixSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:186,Deployability,patch,patchwork,186,"/*; * Compute memory partition like procps(free), see https://gitlab.com/procps-ng/procps/-/blob/master/proc/sysinfo.c; * ; * fMemShared is a part of Cached (see https://lore.kernel.org/patchwork/patch/648763/), does not subtract twice from used; */",MatchSource.CODE_COMMENT,core/unix/src/TUnixSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:196,Deployability,patch,patch,196,"/*; * Compute memory partition like procps(free), see https://gitlab.com/procps-ng/procps/-/blob/master/proc/sysinfo.c; * ; * fMemShared is a part of Cached (see https://lore.kernel.org/patchwork/patch/648763/), does not subtract twice from used; */",MatchSource.CODE_COMMENT,core/unix/src/TUnixSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:150,Performance,Cache,Cached,150,"/*; * Compute memory partition like procps(free), see https://gitlab.com/procps-ng/procps/-/blob/master/proc/sysinfo.c; * ; * fMemShared is a part of Cached (see https://lore.kernel.org/patchwork/patch/648763/), does not subtract twice from used; */",MatchSource.CODE_COMMENT,core/unix/src/TUnixSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/inc/TWinNTSystem.h:132,Integrability,interface,interface,132,"//////////////////////////////////////////////////////////////////////////; // //; // TWinNTSystem //; // //; // Class providing an interface to the Windows NT Operating System. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/winnt/inc/TWinNTSystem.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/inc/TWinNTSystem.h
https://github.com/root-project/root/tree/v6-32-06/core/winnt/inc/TWinNTSystem.h:8,Security,password,password,8,"// user password",MatchSource.CODE_COMMENT,core/winnt/inc/TWinNTSystem.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/inc/TWinNTSystem.h
https://github.com/root-project/root/tree/v6-32-06/core/winnt/inc/TWinNTSystem.h:9,Security,password,password,9,"// group password",MatchSource.CODE_COMMENT,core/winnt/inc/TWinNTSystem.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/inc/TWinNTSystem.h
https://github.com/root-project/root/tree/v6-32-06/core/winnt/inc/Win32Constants.h:50,Integrability,message,messages,50,"// #define IX11_ROOT_MSG WM_USER+10 // ID of ROOT messages; // +10 because WM_USER is used; // by WIN32 itself ! ! !",MatchSource.CODE_COMMENT,core/winnt/inc/Win32Constants.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/inc/Win32Constants.h
https://github.com/root-project/root/tree/v6-32-06/core/winnt/inc/Win32Constants.h:33,Integrability,rout,routines,33,/* Emulation of X11 control ROOT routines; **; ** ROOT_Control set; */,MatchSource.CODE_COMMENT,core/winnt/inc/Win32Constants.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/inc/Win32Constants.h
https://github.com/root-project/root/tree/v6-32-06/core/winnt/inc/Win32Constants.h:3,Usability,Clear,Clear,3,"// Clear an X11 window",MatchSource.CODE_COMMENT,core/winnt/inc/Win32Constants.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/inc/Win32Constants.h
https://github.com/root-project/root/tree/v6-32-06/core/winnt/inc/Win32Constants.h:7,Integrability,synchroniz,synchronization,7,"// X11 synchronization",MatchSource.CODE_COMMENT,core/winnt/inc/Win32Constants.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/inc/Win32Constants.h
https://github.com/root-project/root/tree/v6-32-06/core/winnt/inc/Win32Constants.h:15,Integrability,rout,routines,15,/* X11 inquiry routines; **; ** ROOT_Inquiry; */,MatchSource.CODE_COMMENT,core/winnt/inc/Win32Constants.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/inc/Win32Constants.h
https://github.com/root-project/root/tree/v6-32-06/core/winnt/inc/Win32Constants.h:3,Usability,Clear,Clear,3,"// Clear the pixmap",MatchSource.CODE_COMMENT,core/winnt/inc/Win32Constants.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/inc/Win32Constants.h
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:24,Security,access,access,24,"// protect out of bound access (64)",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:14,Integrability,message,message,14,"// GUI thread message handler func",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:165,Availability,Error,Error,165,"////// static functions providing interface to raw WinNT ////////////////////; //---- RPC -------------------------------------------------------------------; //*-* Error codes set by the Windows Sockets implementation are not made available; //*-* via the errno variable. Additionally, for the getXbyY class of functions,; //*-* error codes are NOT made available via the h_errno variable. Instead, error; //*-* codes are accessed by using the WSAGetLastError . This function is provided; //*-* in Windows Sockets as a precursor (and eventually an alias) for the Win32; //*-* function GetLastError. This is intended to provide a reliable way for a thread; //*-* in a multithreaded process to obtain per-thread error information.; /////////////////////////////////////////////////////////////////////////////; /// Receive exactly length bytes into buffer. Returns number of bytes; /// received. Returns -1 in case of error, -2 in case of MSG_OOB; /// and errno == EWOULDBLOCK, -3 in case of MSG_OOB and errno == EINVAL; /// and -4 in case of kNonBlock and errno == EWOULDBLOCK.; /// Returns -5 if pipe broken or reset by peer (EPIPE || ECONNRESET).",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:232,Availability,avail,available,232,"////// static functions providing interface to raw WinNT ////////////////////; //---- RPC -------------------------------------------------------------------; //*-* Error codes set by the Windows Sockets implementation are not made available; //*-* via the errno variable. Additionally, for the getXbyY class of functions,; //*-* error codes are NOT made available via the h_errno variable. Instead, error; //*-* codes are accessed by using the WSAGetLastError . This function is provided; //*-* in Windows Sockets as a precursor (and eventually an alias) for the Win32; //*-* function GetLastError. This is intended to provide a reliable way for a thread; //*-* in a multithreaded process to obtain per-thread error information.; /////////////////////////////////////////////////////////////////////////////; /// Receive exactly length bytes into buffer. Returns number of bytes; /// received. Returns -1 in case of error, -2 in case of MSG_OOB; /// and errno == EWOULDBLOCK, -3 in case of MSG_OOB and errno == EINVAL; /// and -4 in case of kNonBlock and errno == EWOULDBLOCK.; /// Returns -5 if pipe broken or reset by peer (EPIPE || ECONNRESET).",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:330,Availability,error,error,330,"////// static functions providing interface to raw WinNT ////////////////////; //---- RPC -------------------------------------------------------------------; //*-* Error codes set by the Windows Sockets implementation are not made available; //*-* via the errno variable. Additionally, for the getXbyY class of functions,; //*-* error codes are NOT made available via the h_errno variable. Instead, error; //*-* codes are accessed by using the WSAGetLastError . This function is provided; //*-* in Windows Sockets as a precursor (and eventually an alias) for the Win32; //*-* function GetLastError. This is intended to provide a reliable way for a thread; //*-* in a multithreaded process to obtain per-thread error information.; /////////////////////////////////////////////////////////////////////////////; /// Receive exactly length bytes into buffer. Returns number of bytes; /// received. Returns -1 in case of error, -2 in case of MSG_OOB; /// and errno == EWOULDBLOCK, -3 in case of MSG_OOB and errno == EINVAL; /// and -4 in case of kNonBlock and errno == EWOULDBLOCK.; /// Returns -5 if pipe broken or reset by peer (EPIPE || ECONNRESET).",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:355,Availability,avail,available,355,"////// static functions providing interface to raw WinNT ////////////////////; //---- RPC -------------------------------------------------------------------; //*-* Error codes set by the Windows Sockets implementation are not made available; //*-* via the errno variable. Additionally, for the getXbyY class of functions,; //*-* error codes are NOT made available via the h_errno variable. Instead, error; //*-* codes are accessed by using the WSAGetLastError . This function is provided; //*-* in Windows Sockets as a precursor (and eventually an alias) for the Win32; //*-* function GetLastError. This is intended to provide a reliable way for a thread; //*-* in a multithreaded process to obtain per-thread error information.; /////////////////////////////////////////////////////////////////////////////; /// Receive exactly length bytes into buffer. Returns number of bytes; /// received. Returns -1 in case of error, -2 in case of MSG_OOB; /// and errno == EWOULDBLOCK, -3 in case of MSG_OOB and errno == EINVAL; /// and -4 in case of kNonBlock and errno == EWOULDBLOCK.; /// Returns -5 if pipe broken or reset by peer (EPIPE || ECONNRESET).",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:400,Availability,error,error,400,"////// static functions providing interface to raw WinNT ////////////////////; //---- RPC -------------------------------------------------------------------; //*-* Error codes set by the Windows Sockets implementation are not made available; //*-* via the errno variable. Additionally, for the getXbyY class of functions,; //*-* error codes are NOT made available via the h_errno variable. Instead, error; //*-* codes are accessed by using the WSAGetLastError . This function is provided; //*-* in Windows Sockets as a precursor (and eventually an alias) for the Win32; //*-* function GetLastError. This is intended to provide a reliable way for a thread; //*-* in a multithreaded process to obtain per-thread error information.; /////////////////////////////////////////////////////////////////////////////; /// Receive exactly length bytes into buffer. Returns number of bytes; /// received. Returns -1 in case of error, -2 in case of MSG_OOB; /// and errno == EWOULDBLOCK, -3 in case of MSG_OOB and errno == EINVAL; /// and -4 in case of kNonBlock and errno == EWOULDBLOCK.; /// Returns -5 if pipe broken or reset by peer (EPIPE || ECONNRESET).",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:630,Availability,reliab,reliable,630,"////// static functions providing interface to raw WinNT ////////////////////; //---- RPC -------------------------------------------------------------------; //*-* Error codes set by the Windows Sockets implementation are not made available; //*-* via the errno variable. Additionally, for the getXbyY class of functions,; //*-* error codes are NOT made available via the h_errno variable. Instead, error; //*-* codes are accessed by using the WSAGetLastError . This function is provided; //*-* in Windows Sockets as a precursor (and eventually an alias) for the Win32; //*-* function GetLastError. This is intended to provide a reliable way for a thread; //*-* in a multithreaded process to obtain per-thread error information.; /////////////////////////////////////////////////////////////////////////////; /// Receive exactly length bytes into buffer. Returns number of bytes; /// received. Returns -1 in case of error, -2 in case of MSG_OOB; /// and errno == EWOULDBLOCK, -3 in case of MSG_OOB and errno == EINVAL; /// and -4 in case of kNonBlock and errno == EWOULDBLOCK.; /// Returns -5 if pipe broken or reset by peer (EPIPE || ECONNRESET).",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:711,Availability,error,error,711,"////// static functions providing interface to raw WinNT ////////////////////; //---- RPC -------------------------------------------------------------------; //*-* Error codes set by the Windows Sockets implementation are not made available; //*-* via the errno variable. Additionally, for the getXbyY class of functions,; //*-* error codes are NOT made available via the h_errno variable. Instead, error; //*-* codes are accessed by using the WSAGetLastError . This function is provided; //*-* in Windows Sockets as a precursor (and eventually an alias) for the Win32; //*-* function GetLastError. This is intended to provide a reliable way for a thread; //*-* in a multithreaded process to obtain per-thread error information.; /////////////////////////////////////////////////////////////////////////////; /// Receive exactly length bytes into buffer. Returns number of bytes; /// received. Returns -1 in case of error, -2 in case of MSG_OOB; /// and errno == EWOULDBLOCK, -3 in case of MSG_OOB and errno == EINVAL; /// and -4 in case of kNonBlock and errno == EWOULDBLOCK.; /// Returns -5 if pipe broken or reset by peer (EPIPE || ECONNRESET).",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:917,Availability,error,error,917,"////// static functions providing interface to raw WinNT ////////////////////; //---- RPC -------------------------------------------------------------------; //*-* Error codes set by the Windows Sockets implementation are not made available; //*-* via the errno variable. Additionally, for the getXbyY class of functions,; //*-* error codes are NOT made available via the h_errno variable. Instead, error; //*-* codes are accessed by using the WSAGetLastError . This function is provided; //*-* in Windows Sockets as a precursor (and eventually an alias) for the Win32; //*-* function GetLastError. This is intended to provide a reliable way for a thread; //*-* in a multithreaded process to obtain per-thread error information.; /////////////////////////////////////////////////////////////////////////////; /// Receive exactly length bytes into buffer. Returns number of bytes; /// received. Returns -1 in case of error, -2 in case of MSG_OOB; /// and errno == EWOULDBLOCK, -3 in case of MSG_OOB and errno == EINVAL; /// and -4 in case of kNonBlock and errno == EWOULDBLOCK.; /// Returns -5 if pipe broken or reset by peer (EPIPE || ECONNRESET).",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:34,Integrability,interface,interface,34,"////// static functions providing interface to raw WinNT ////////////////////; //---- RPC -------------------------------------------------------------------; //*-* Error codes set by the Windows Sockets implementation are not made available; //*-* via the errno variable. Additionally, for the getXbyY class of functions,; //*-* error codes are NOT made available via the h_errno variable. Instead, error; //*-* codes are accessed by using the WSAGetLastError . This function is provided; //*-* in Windows Sockets as a precursor (and eventually an alias) for the Win32; //*-* function GetLastError. This is intended to provide a reliable way for a thread; //*-* in a multithreaded process to obtain per-thread error information.; /////////////////////////////////////////////////////////////////////////////; /// Receive exactly length bytes into buffer. Returns number of bytes; /// received. Returns -1 in case of error, -2 in case of MSG_OOB; /// and errno == EWOULDBLOCK, -3 in case of MSG_OOB and errno == EINVAL; /// and -4 in case of kNonBlock and errno == EWOULDBLOCK.; /// Returns -5 if pipe broken or reset by peer (EPIPE || ECONNRESET).",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:263,Modifiability,variab,variable,263,"////// static functions providing interface to raw WinNT ////////////////////; //---- RPC -------------------------------------------------------------------; //*-* Error codes set by the Windows Sockets implementation are not made available; //*-* via the errno variable. Additionally, for the getXbyY class of functions,; //*-* error codes are NOT made available via the h_errno variable. Instead, error; //*-* codes are accessed by using the WSAGetLastError . This function is provided; //*-* in Windows Sockets as a precursor (and eventually an alias) for the Win32; //*-* function GetLastError. This is intended to provide a reliable way for a thread; //*-* in a multithreaded process to obtain per-thread error information.; /////////////////////////////////////////////////////////////////////////////; /// Receive exactly length bytes into buffer. Returns number of bytes; /// received. Returns -1 in case of error, -2 in case of MSG_OOB; /// and errno == EWOULDBLOCK, -3 in case of MSG_OOB and errno == EINVAL; /// and -4 in case of kNonBlock and errno == EWOULDBLOCK.; /// Returns -5 if pipe broken or reset by peer (EPIPE || ECONNRESET).",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:381,Modifiability,variab,variable,381,"////// static functions providing interface to raw WinNT ////////////////////; //---- RPC -------------------------------------------------------------------; //*-* Error codes set by the Windows Sockets implementation are not made available; //*-* via the errno variable. Additionally, for the getXbyY class of functions,; //*-* error codes are NOT made available via the h_errno variable. Instead, error; //*-* codes are accessed by using the WSAGetLastError . This function is provided; //*-* in Windows Sockets as a precursor (and eventually an alias) for the Win32; //*-* function GetLastError. This is intended to provide a reliable way for a thread; //*-* in a multithreaded process to obtain per-thread error information.; /////////////////////////////////////////////////////////////////////////////; /// Receive exactly length bytes into buffer. Returns number of bytes; /// received. Returns -1 in case of error, -2 in case of MSG_OOB; /// and errno == EWOULDBLOCK, -3 in case of MSG_OOB and errno == EINVAL; /// and -4 in case of kNonBlock and errno == EWOULDBLOCK.; /// Returns -5 if pipe broken or reset by peer (EPIPE || ECONNRESET).",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:423,Security,access,accessed,423,"////// static functions providing interface to raw WinNT ////////////////////; //---- RPC -------------------------------------------------------------------; //*-* Error codes set by the Windows Sockets implementation are not made available; //*-* via the errno variable. Additionally, for the getXbyY class of functions,; //*-* error codes are NOT made available via the h_errno variable. Instead, error; //*-* codes are accessed by using the WSAGetLastError . This function is provided; //*-* in Windows Sockets as a precursor (and eventually an alias) for the Win32; //*-* function GetLastError. This is intended to provide a reliable way for a thread; //*-* in a multithreaded process to obtain per-thread error information.; /////////////////////////////////////////////////////////////////////////////; /// Receive exactly length bytes into buffer. Returns number of bytes; /// received. Returns -1 in case of error, -2 in case of MSG_OOB; /// and errno == EWOULDBLOCK, -3 in case of MSG_OOB and errno == EINVAL; /// and -4 in case of kNonBlock and errno == EWOULDBLOCK.; /// Returns -5 if pipe broken or reset by peer (EPIPE || ECONNRESET).",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:144,Availability,error,error,144,"/////////////////////////////////////////////////////////////////////////////; /// Send exactly length bytes from buffer. Returns -1 in case of error,; /// otherwise number of sent bytes. Returns -4 in case of kNoBlock and; /// errno == EWOULDBLOCK. Returns -5 if pipe broken or reset by peer; /// (EPIPE || ECONNRESET).",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:170,Availability,mask,masks,170,"/////////////////////////////////////////////////////////////////////////////; /// Wait for events on the file descriptors specified in the readready and; /// writeready masks or for timeout (in milliseconds) to occur.",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:183,Safety,timeout,timeout,183,"/////////////////////////////////////////////////////////////////////////////; /// Wait for events on the file descriptors specified in the readready and; /// writeready masks or for timeout (in milliseconds) to occur.",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:27,Modifiability,extend,extended,27,"// in case DynamicPath was extended",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:257,Safety,abort,abort,257,"/////////////////////////////////////////////////////////////////////////////; /// Function that's called when an unhandled exception occurs.; /// Produces a stack trace, and lets the system deal with it; /// as if it was an unhandled excecption (usually ::abort)",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:83,Integrability,Message,Message,83,"/////////////////////////////////////////////////////////////////////////////; /// Message processing loop for the TGWin32 related GUI; /// thread for processing windows messages (aka Main/Server thread).; /// We need to start the thread outside the TGWin32 / GUI related; /// dll, because starting threads at DLL init time does not work.; /// Instead, we start an ideling thread at binary startup, and only; /// call the ""real"" message processing function; /// TGWin32::GUIThreadMessageFunc() once gVirtualX comes up.",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:170,Integrability,message,messages,170,"/////////////////////////////////////////////////////////////////////////////; /// Message processing loop for the TGWin32 related GUI; /// thread for processing windows messages (aka Main/Server thread).; /// We need to start the thread outside the TGWin32 / GUI related; /// dll, because starting threads at DLL init time does not work.; /// Instead, we start an ideling thread at binary startup, and only; /// call the ""real"" message processing function; /// TGWin32::GUIThreadMessageFunc() once gVirtualX comes up.",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:429,Integrability,message,message,429,"/////////////////////////////////////////////////////////////////////////////; /// Message processing loop for the TGWin32 related GUI; /// thread for processing windows messages (aka Main/Server thread).; /// We need to start the thread outside the TGWin32 / GUI related; /// dll, because starting threads at DLL init time does not work.; /// Instead, we start an ideling thread at binary startup, and only; /// call the ""real"" message processing function; /// TGWin32::GUIThreadMessageFunc() once gVirtualX comes up.",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:19,Integrability,message,message,19,"// force to create message queue",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:27,Performance,queue,queue,27,"// force to create message queue",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:80,Performance,Load,Load,80,"//=========================================================================; // Load IMAGEHLP.DLL and get the address of functions in it that we'll use; // by Microsoft, from http://www.microsoft.com/msj/0597/hoodtextfigs.htm#fig1; //=========================================================================; // Make typedefs for some IMAGEHLP.DLL functions so that we can use them; // with GetProcAddress",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:161,Security,Validat,Validates,161,"////// Shortcuts helper functions IsShortcut and ResolveShortCut ///////////; /////////////////////////////////////////////////////////////////////////////; /// Validates if a file name has extension '.lnk'. Returns true if file; /// name have extension same as Window's shortcut file (.lnk).",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:2,Security,Validat,Validate,2,"//Validate extension",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:10,Availability,failure,failure,10,"// assume failure; // Make typedefs for some ole32.dll functions so that we can use them; // with GetProcAddress",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:3,Availability,error,error,3,"// error opening key for writing:",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:3,Availability,error,error,3,"// error opening key for writing:",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:9,Availability,down,downloaded,9,"// trust downloaded files",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:3,Deployability,Update,UpdateRegistry,3,"// UpdateRegistry(); /////////////////////////////////////////////////////////////////////////////; /// return kFALSE if option ""-l"" was specified as main programm command arg",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:32,Deployability,update,updated,32,"// ensure window title has been updated",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:6,Deployability,install,install,6,"//--- install default handlers; // Actually: don't. If we want a stack trace we need a context for the; // signal. Signals don't have one. If we don't handle them, Windows will; // raise an exception, which has a context, and which is handled by; // ExceptionFilter.; //WinNTSignal(kSigChild, SigHandler);; //WinNTSignal(kSigBus, SigHandler);",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:227,Integrability,rout,routine,227,"// BB 28/10/05 : Removed (commented out) StrDup() :; // - To get same behaviour on Windows and on Linux; // - To avoid the need to use #ifdefs; // - Solve memory leaks (mainly in TTF::SetTextFont()); // No need for the calling routine to use free() anymore.",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:113,Safety,avoid,avoid,113,"// BB 28/10/05 : Removed (commented out) StrDup() :; // - To get same behaviour on Windows and on Linux; // - To avoid the need to use #ifdefs; // - Solve memory leaks (mainly in TTF::SetTextFont()); // No need for the calling routine to use free() anymore.",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:16,Integrability,message,message,16,"// send a dummy message to the GUI thread to kick it into life",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:11,Availability,error,error,11,"// serious error has happened -> reset all file descrptors",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:78,Safety,avoid,avoid,78,"// well we should not have to make the root of the file system!; // (and this avoid infinite recursions!)",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:19,Performance,cache,cache,19,"// invalidate path cache",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:13,Performance,cache,cache,13,"// don't use cache as user can call chdir() directly somewhere else; //if (fWdpath != """" ); // return fWdpath;",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:26,Safety,avoid,avoid,26,"// skip floppy drives, to avoid accessing them each time...",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:32,Security,access,accessing,32,"// skip floppy drives, to avoid accessing them each time...",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:20,Availability,error,error,20,"// restore previous error mode",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:3,Testability,Test,Test,3,"// Test UNC syntax",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:10,Testability,test,test,10,"// cannot test on exe - use read instead",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:20,Availability,error,error,20,"// restore previous error mode",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:20,Availability,error,error,20,"// restore previous error mode",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:3,Testability,Test,Test,3,"// Test whether the last symbol of the directory is a separator",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:20,Availability,error,error,20,"// restore previous error mode",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:20,Availability,error,error,20,"// restore previous error mode",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:20,Availability,error,error,20,"// restore previous error mode",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:25,Integrability,message,messages,25,"// Explicitly remove all messages",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:20,Integrability,protocol,protocol,20,"// skip the ""file:"" protocol, if any",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:110,Integrability,protocol,protocol,110,"// We are avoiding substitution in the case of; // ....;c:.... and of ...;root:/... where root can be any url protocol",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:10,Safety,avoid,avoiding,10,"// We are avoiding substitution in the case of; // ....;c:.... and of ...;root:/... where root can be any url protocol",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:93,Modifiability,extend,extended,93,"// Because (problably) we built with cygwin, the path name like:; // LOCALS~1\\Temp; // gets extended to; // LOCALSc:\\Devel; // The most likely cause is that '~' is used with Unix semantic of the; // home directory (and it also cuts the path short after ... who knows why!); // So we need to detect this case and prevents its expansion :(.",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:293,Safety,detect,detect,293,"// Because (problably) we built with cygwin, the path name like:; // LOCALS~1\\Temp; // gets extended to; // LOCALSc:\\Devel; // The most likely cause is that '~' is used with Unix semantic of the; // home directory (and it also cuts the path short after ... who knows why!); // So we need to detect this case and prevents its expansion :(.",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:38,Modifiability,variab,variables,38,"// pointer to string with environment variables",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:47,Modifiability,variab,variables,47,"// pointer to string with expanded environment variables",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:38,Modifiability,variab,variables,38,"// pointer to string with environment variables",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:47,Modifiability,variab,variables,47,"// pointer to string with expanded environment variables",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:9,Security,access,access,9,"// Check access",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:3,Performance,perform,performance,3,"// performance and mapping flags",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:99,Availability,down,down,99,"// address of flag set when default char used.; // Now lookup all members of this group and record down their names and; // SIDs into the output file.",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:14,Security,secur,security,14,"// address of security identifier",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:22,Security,secur,security,22,"// address of size of security identifier",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:34,Modifiability,variab,variable,34,"// Assign it to a more convenient variable.",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:14,Security,secur,security,14,"// address of security identifier to query",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:3,Performance,perform,performance,3,"// performance and mapping flags",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:16,Energy Efficiency,allocate,allocated,16,"//; // Free the allocated memory.; //",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:38,Modifiability,variab,variables,38,/* Set dir and shell from environment variables. */,MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:3,Performance,perform,performance,3,"// performance and mapping flags",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:51,Availability,down,down,51,"// Now lookup all members of this group and record down their names and; // SIDs into the output file.",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:63,Modifiability,variab,variable,63,"// if there is a string between %%, this is an environment; // variable (e.g. %ROOTSYS%), so let's try to resolve it; // and replace it with the real path",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:19,Modifiability,variab,variable,19,"// the environment variable exist and properly resolved; // so add the last part of the path and add it to the list",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:3,Testability,Test,Test,3,"// Test for the Windows NT product family.",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:3,Testability,Test,Test,3,"// Test for the specific product.",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:3,Testability,Test,Test,3,"// Test for specific product on Windows NT 4.0 SP6 and later.",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:3,Testability,Test,Test,3,"// Test for the workstation type.",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:3,Testability,Test,Test,3,"// Test for the server type.",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:3,Testability,Test,Test,3,"// Test for specific product on Windows NT 4.0 SP5 and earlier",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:3,Testability,Test,Test,3,"// Test for SP6 versus SP6a.",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:3,Testability,Test,Test,3,"// Test for the Windows Me/98/95.",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:7,Performance,cache,cache,7,"// Get cache size",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:7,Performance,load,load,7,"// cpu load average over 1 m",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:7,Performance,load,load,7,"// cpu load average over 5 m",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:7,Performance,load,load,7,"// cpu load average over 15 m",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:12,Performance,load,load,12,"// cpu user load in percentage",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:11,Performance,load,load,11,"// cpu sys load in percentage",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:16,Performance,load,load,16,"// cpu user+sys load in percentage",MatchSource.CODE_COMMENT,core/winnt/src/TWinNTSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx:91,Modifiability,Variab,Variables,91,"///////////////////////////////////////////////////////////////////////////////; // Global Variables:",MatchSource.CODE_COMMENT,core/winnt/src/Win32Splash.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx:16,Testability,log,logo,16,"// clip rect in logo",MatchSource.CODE_COMMENT,core/winnt/src/Win32Splash.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx:11,Availability,avail,available,11,"// WIC2 is available on Windows 8 and Windows 7 SP1 with KB 2670838 installed",MatchSource.CODE_COMMENT,core/winnt/src/Win32Splash.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx:68,Deployability,install,installed,68,"// WIC2 is available on Windows 8 and Windows 7 SP1 with KB 2670838 installed",MatchSource.CODE_COMMENT,core/winnt/src/Win32Splash.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx:86,Performance,Load,Loads,86,"////////////////////////////////////////////////////////////////////////////////; /// Loads a PNG image from the specified stream (using Windows Imaging; /// Component).",MatchSource.CODE_COMMENT,core/winnt/src/Win32Splash.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx:3,Performance,load,load,3,"// load WIC's PNG decoder",MatchSource.CODE_COMMENT,core/winnt/src/Win32Splash.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx:11,Availability,avail,available,11,"// WIC2 is available on Windows 8 and Windows 7 SP1 with KB 2670838 installed",MatchSource.CODE_COMMENT,core/winnt/src/Win32Splash.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx:68,Deployability,install,installed,68,"// WIC2 is available on Windows 8 and Windows 7 SP1 with KB 2670838 installed",MatchSource.CODE_COMMENT,core/winnt/src/Win32Splash.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx:3,Performance,load,load,3,"// load the PNG",MatchSource.CODE_COMMENT,core/winnt/src/Win32Splash.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx:3,Performance,load,load,3,"// load the first frame (i.e., the image)",MatchSource.CODE_COMMENT,core/winnt/src/Win32Splash.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx:80,Availability,down,down,80,"// prepare structure giving bitmap information (negative height indicates a top-down DIB)",MatchSource.CODE_COMMENT,core/winnt/src/Win32Splash.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx:86,Performance,Load,Loads,86,"////////////////////////////////////////////////////////////////////////////////; /// Loads the PNG containing the splash image into a HBITMAP.",MatchSource.CODE_COMMENT,core/winnt/src/Win32Splash.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx:3,Performance,load,load,3,"// load the PNG image data into a stream",MatchSource.CODE_COMMENT,core/winnt/src/Win32Splash.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx:3,Performance,load,load,3,"// load the bitmap with WIC",MatchSource.CODE_COMMENT,core/winnt/src/Win32Splash.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx:81,Integrability,Message,Message,81,"///////////////////////////////////////////////////////////////////////////; /// Message handler for the splash screen window.",MatchSource.CODE_COMMENT,core/winnt/src/Win32Splash.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx:13,Performance,Load,LoadIcon,13,"//wc.hIcon = LoadIcon(g_hInstance, MAKEINTRESOURCE(_T(""SPLASH"")));",MatchSource.CODE_COMMENT,core/winnt/src/Win32Splash.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx:86,Deployability,Update,UpdateLayeredWindow,86,"///////////////////////////////////////////////////////////////////////////; /// Call UpdateLayeredWindow to set a bitmap (with alpha) as the content of; /// the splash window.",MatchSource.CODE_COMMENT,core/winnt/src/Win32Splash.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx:19,Energy Efficiency,monitor,monitor,19,"// get the primary monitor's info",MatchSource.CODE_COMMENT,core/winnt/src/Win32Splash.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx:33,Integrability,message,message,33,"// If we get a keyboard or mouse message, hide the splash screen.",MatchSource.CODE_COMMENT,core/winnt/src/Win32Splash.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx:3,Integrability,message,message,3,"// message handled here",MatchSource.CODE_COMMENT,core/winnt/src/Win32Splash.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx:3,Integrability,message,message,3,"// message not handled",MatchSource.CODE_COMMENT,core/winnt/src/Win32Splash.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx
https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx:8,Integrability,message,message,8,"// Main message loop:",MatchSource.CODE_COMMENT,core/winnt/src/Win32Splash.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx
https://github.com/root-project/root/tree/v6-32-06/core/zip/inc/Compression.h:360,Availability,avail,available,360,"/// The global settings depend on a global variable named R__ZipMode which can be; /// modified by a global function named R__SetZipMode. Both are defined in Bits.h.; ///; /// - The default is to use the global setting and the default of the global; /// setting is to use the ZLIB compression algorithm.; /// - The LZMA algorithm (from the XZ package) is also available. The LZMA; /// compression usually results in greater compression factors, but takes; /// more CPU time and memory when compressing. LZMA memory usage is particularly; /// high for compression levels 8 and 9.; /// - Finally, the LZ4 package results in worse compression ratios; /// than ZLIB but achieves much faster decompression rates.; ///; /// The current algorithms support level 1 to 9. The higher the level the greater; /// the compression and more CPU time and memory resources used during compression.; /// Level 0 means no compression.; ///; /// Recommendation for the compression algorithm's levels:; /// - ZLIB is recommended to be used with compression level 1 [101]; /// - LZMA is recommended to be used with compression level 7-8 (higher is better,; /// since in the case of LZMA we don't care about compression/decompression speed); /// [207 - 208]; /// - LZ4 is recommended to be used with compression level 4 [404]; /// - ZSTD is recommended to be used with compression level 5 [505]",MatchSource.CODE_COMMENT,core/zip/inc/Compression.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/inc/Compression.h
https://github.com/root-project/root/tree/v6-32-06/core/zip/inc/Compression.h:24,Integrability,depend,depend,24,"/// The global settings depend on a global variable named R__ZipMode which can be; /// modified by a global function named R__SetZipMode. Both are defined in Bits.h.; ///; /// - The default is to use the global setting and the default of the global; /// setting is to use the ZLIB compression algorithm.; /// - The LZMA algorithm (from the XZ package) is also available. The LZMA; /// compression usually results in greater compression factors, but takes; /// more CPU time and memory when compressing. LZMA memory usage is particularly; /// high for compression levels 8 and 9.; /// - Finally, the LZ4 package results in worse compression ratios; /// than ZLIB but achieves much faster decompression rates.; ///; /// The current algorithms support level 1 to 9. The higher the level the greater; /// the compression and more CPU time and memory resources used during compression.; /// Level 0 means no compression.; ///; /// Recommendation for the compression algorithm's levels:; /// - ZLIB is recommended to be used with compression level 1 [101]; /// - LZMA is recommended to be used with compression level 7-8 (higher is better,; /// since in the case of LZMA we don't care about compression/decompression speed); /// [207 - 208]; /// - LZ4 is recommended to be used with compression level 4 [404]; /// - ZSTD is recommended to be used with compression level 5 [505]",MatchSource.CODE_COMMENT,core/zip/inc/Compression.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/inc/Compression.h
https://github.com/root-project/root/tree/v6-32-06/core/zip/inc/Compression.h:43,Modifiability,variab,variable,43,"/// The global settings depend on a global variable named R__ZipMode which can be; /// modified by a global function named R__SetZipMode. Both are defined in Bits.h.; ///; /// - The default is to use the global setting and the default of the global; /// setting is to use the ZLIB compression algorithm.; /// - The LZMA algorithm (from the XZ package) is also available. The LZMA; /// compression usually results in greater compression factors, but takes; /// more CPU time and memory when compressing. LZMA memory usage is particularly; /// high for compression levels 8 and 9.; /// - Finally, the LZ4 package results in worse compression ratios; /// than ZLIB but achieves much faster decompression rates.; ///; /// The current algorithms support level 1 to 9. The higher the level the greater; /// the compression and more CPU time and memory resources used during compression.; /// Level 0 means no compression.; ///; /// Recommendation for the compression algorithm's levels:; /// - ZLIB is recommended to be used with compression level 1 [101]; /// - LZMA is recommended to be used with compression level 7-8 (higher is better,; /// since in the case of LZMA we don't care about compression/decompression speed); /// [207 - 208]; /// - LZ4 is recommended to be used with compression level 4 [404]; /// - ZSTD is recommended to be used with compression level 5 [505]",MatchSource.CODE_COMMENT,core/zip/inc/Compression.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/inc/Compression.h
https://github.com/root-project/root/tree/v6-32-06/core/zip/inc/Compression.h:88,Modifiability,inherit,inherited,88,"/// Some objects use this value to denote that the compression algorithm; /// should be inherited from the parent object",MatchSource.CODE_COMMENT,core/zip/inc/Compression.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/inc/Compression.h
https://github.com/root-project/root/tree/v6-32-06/core/zip/inc/Compression.h:88,Modifiability,inherit,inherited,88,"/// Some objects use this value to denote that the compression algorithm; /// should be inherited from the parent object (e.g., TBranch should get the algorithm from the TTree)",MatchSource.CODE_COMMENT,core/zip/inc/Compression.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/inc/Compression.h
https://github.com/root-project/root/tree/v6-32-06/core/zip/inc/RZip.h:83,Integrability,rout,routines,83,/**; * These are definitions of various free functions for the C-style compression routines in ROOT.; */,MatchSource.CODE_COMMENT,core/zip/inc/RZip.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/inc/RZip.h
https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.h:93,Security,hash,hash,93,/* This following used to be declared (as globals) in ZDeflate.h */; /**; * Size of internal hash table.; *; * Previously controlled by various macros which no longer exist.; *; */,MatchSource.CODE_COMMENT,core/zip/src/Bits.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.h
https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.h:189,Integrability,rout,routines,189,"/* The following used to be declared (as globals) in ZDeflate.h */; /* ===========================================================================; * Local data used by the ""longest match"" routines.; */",MatchSource.CODE_COMMENT,core/zip/src/Bits.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.h
https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.h:498,Energy Efficiency,efficient,efficient,498,"/* Sliding window. Input bytes are read into the second half of the window,; * and move to the first half later to keep a dictionary of at least WSIZE; * bytes. With this organization, matches are limited to a distance of; * WSIZE-MAX_MATCH bytes, but this ensures that IO is always; * performed with a length multiple of the block size. Also, it limits; * the window size to 64K, which is quite useful on MSDOS.; * To do: limit the window size to WSIZE+BSZ if SMALL_MEM (the code would; * be less efficient since the data would have to be copied WSIZE/BSZ times); */",MatchSource.CODE_COMMENT,core/zip/src/Bits.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.h
https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.h:286,Performance,perform,performed,286,"/* Sliding window. Input bytes are read into the second half of the window,; * and move to the first half later to keep a dictionary of at least WSIZE; * bytes. With this organization, matches are limited to a distance of; * WSIZE-MAX_MATCH bytes, but this ensures that IO is always; * performed with a length multiple of the block size. Also, it limits; * the window size to 64K, which is quite useful on MSDOS.; * To do: limit the window size to WSIZE+BSZ if SMALL_MEM (the code would; * be less efficient since the data would have to be copied WSIZE/BSZ times); */",MatchSource.CODE_COMMENT,core/zip/src/Bits.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.h
https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.h:34,Security,hash,hash,34,"/* Link to older string with same hash index. To limit the size of this; * array to 64K, this link is maintained only for the last 32K strings.; * An index in this array is thus a window index modulo 32K.; */",MatchSource.CODE_COMMENT,core/zip/src/Bits.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.h
https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.h:16,Security,hash,hash,16,"/* Heads of the hash chains or NIL. If your compiler thinks that; * HASH_SIZE is a dynamic value, recompile with -DDYN_ALLOC.; */",MatchSource.CODE_COMMENT,core/zip/src/Bits.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.h
https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.h:3,Security,hash,hash,3,/* hash index of string to be inserted */,MatchSource.CODE_COMMENT,core/zip/src/Bits.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.h
https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.h:173,Security,hash,hash,173,"/* Number of bits by which ins_h and del_h must be shifted at each; * input step. It must be such that after MIN_MATCH steps, the oldest; * byte no longer takes part in the hash key, that is:; * H_SHIFT * MIN_MATCH >= HASH_BITS; */",MatchSource.CODE_COMMENT,core/zip/src/Bits.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.h
https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.h:26,Security,hash,hash,26,"/* To speed up deflation, hash chains are never searched beyond this length.; * A higher limit improves compression ratio but degrades the speed.; */; /* local */",MatchSource.CODE_COMMENT,core/zip/src/Bits.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.h
https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.h:29,Security,hash,hash,29,/* Insert new strings in the hash table only if the match length; * is not greater than this length. This saves time but degrades compression.; * max_insert_length is used only for compression levels <= 3.; */,MatchSource.CODE_COMMENT,core/zip/src/Bits.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.h
https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.h:108,Integrability,rout,routines,108,/* ===========================================================================; * Initialize the bit string routines.; */,MatchSource.CODE_COMMENT,core/zip/src/Bits.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.h
https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.h:128,Testability,assert,assertion,128,/* ===========================================================================; * Send a value on a given number of bits.; * IN assertion: length <= 16 and value fits in length bits.; */; /* int value; value to send */; /* int length; number of bits */,MatchSource.CODE_COMMENT,core/zip/src/Bits.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.h
https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.h:192,Testability,assert,assertion,192,"/* ===========================================================================; * Reverse the first len bits of a code, using straightforward code (a faster; * method would use a table); * IN assertion: 1 <= len <= 15; */; /* unsigned code; the value to invert */; /* int len; its bit length */",MatchSource.CODE_COMMENT,core/zip/src/Bits.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.h
https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.h:206,Deployability,update,update,206,"/* ===========================================================================; * In-memory read function. As opposed to file_read(), this function; * does not perform end-of-line translation, and does not update the; * crc and input size.; * Note that the size of the entire input buffer is an unsigned long,; * but the size used in R__mem_read() is only an unsigned int. This makes a; * difference on 16 bit machines. R__mem_read() may be called several; * times for an in-memory compression.; */",MatchSource.CODE_COMMENT,core/zip/src/Bits.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.h
https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.h:160,Performance,perform,perform,160,"/* ===========================================================================; * In-memory read function. As opposed to file_read(), this function; * does not perform end-of-line translation, and does not update the; * crc and input size.; * Note that the size of the entire input buffer is an unsigned long,; * but the size used in R__mem_read() is only an unsigned int. This makes a; * difference on 16 bit machines. R__mem_read() may be called several; * times for an in-memory compression.; */",MatchSource.CODE_COMMENT,core/zip/src/Bits.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.h
https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Compression.cxx:3,Safety,Avoid,Avoid,3,"// Avoid spitting warnings for the use of ECompressionAlgorithm, as this function is itself deprecated",MatchSource.CODE_COMMENT,core/zip/src/Compression.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Compression.cxx
https://github.com/root-project/root/tree/v6-32-06/core/zip/src/RZip.cxx:588,Deployability,install,installed,588,"/* ===========================================================================; R__ZipMode is used to select the compression algorithm when R__zip is called; and when R__zipMultipleAlgorithm is called with its last argument set to 0.; R__ZipMode = 1 : ZLIB compression algorithm is used (default); R__ZipMode = 2 : LZMA compression algorithm is used; R__ZipMode = 4 : LZ4 compression algorithm is used; R__ZipMode = 0 or 3 : a very old compression algorithm is used; (the very old algorithm is supported for backward compatibility); The LZMA algorithm requires the external XZ package be installed when linking; is done. LZMA typically has significantly higher compression factors, but takes; more CPU time and memory resources while compressing. The LZ4 algorithm requires the external LZ4 package to be installed when linking; is done. LZ4 typically has the worst compression ratios, but much faster decompression; speeds - sometimes by an order of magnitude.; */",MatchSource.CODE_COMMENT,core/zip/src/RZip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/RZip.cxx
https://github.com/root-project/root/tree/v6-32-06/core/zip/src/RZip.cxx:805,Deployability,install,installed,805,"/* ===========================================================================; R__ZipMode is used to select the compression algorithm when R__zip is called; and when R__zipMultipleAlgorithm is called with its last argument set to 0.; R__ZipMode = 1 : ZLIB compression algorithm is used (default); R__ZipMode = 2 : LZMA compression algorithm is used; R__ZipMode = 4 : LZ4 compression algorithm is used; R__ZipMode = 0 or 3 : a very old compression algorithm is used; (the very old algorithm is supported for backward compatibility); The LZMA algorithm requires the external XZ package be installed when linking; is done. LZMA typically has significantly higher compression factors, but takes; more CPU time and memory resources while compressing. The LZ4 algorithm requires the external LZ4 package to be installed when linking; is done. LZ4 typically has the worst compression ratios, but much faster decompression; speeds - sometimes by an order of magnitude.; */",MatchSource.CODE_COMMENT,core/zip/src/RZip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/RZip.cxx
https://github.com/root-project/root/tree/v6-32-06/core/zip/src/RZip.cxx:3,Performance,Perform,Performance,3,"// Performance optimization: avoid compressing tiny source buffers.",MatchSource.CODE_COMMENT,core/zip/src/RZip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/RZip.cxx
https://github.com/root-project/root/tree/v6-32-06/core/zip/src/RZip.cxx:15,Performance,optimiz,optimization,15,"// Performance optimization: avoid compressing tiny source buffers.",MatchSource.CODE_COMMENT,core/zip/src/RZip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/RZip.cxx
https://github.com/root-project/root/tree/v6-32-06/core/zip/src/RZip.cxx:29,Safety,avoid,avoid,29,"// Performance optimization: avoid compressing tiny source buffers.",MatchSource.CODE_COMMENT,core/zip/src/RZip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/RZip.cxx
https://github.com/root-project/root/tree/v6-32-06/core/zip/src/RZip.cxx:18,Integrability,rout,routines,18,/* initialize bit routines */,MatchSource.CODE_COMMENT,core/zip/src/RZip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/RZip.cxx
https://github.com/root-project/root/tree/v6-32-06/core/zip/src/RZip.cxx:19,Integrability,rout,routines,19,/* initialize tree routines */,MatchSource.CODE_COMMENT,core/zip/src/RZip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/RZip.cxx
https://github.com/root-project/root/tree/v6-32-06/core/zip/src/RZip.cxx:21,Integrability,rout,routines,21,/**; * Below are the routines for unzipping (inflating) buffers.; */,MatchSource.CODE_COMMENT,core/zip/src/RZip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/RZip.cxx
https://github.com/root-project/root/tree/v6-32-06/core/zip/src/RZip.cxx:495,Availability,error,error,495,"/***********************************************************************; * *; * Name: R__unzip Date: 20.01.95 *; * Author: E.Chernyaev (IHEP/Protvino) Revised: *; * *; * Function: In memory ZIP decompression. Can be issued from FORTRAN. *; * Written for DELPHI collaboration (CERN) *; * *; * Input: scrsize - size of input buffer *; * src - input buffer *; * tgtsize - size of target buffer *; * *; * Output: tgt - target buffer (decompressed) *; * irep - size of decompressed data *; * 0 - if error *; * *; ***********************************************************************/; // N.B. (Brian) - I have kept the original note out of complete awe of the; // age of the original code...",MatchSource.CODE_COMMENT,core/zip/src/RZip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/RZip.cxx
https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Tailor.h:466,Energy Efficiency,Power,Power,466,"/* @(#)root/zip:$Id$ */; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /* tailor.h -- Not copyrighted 1993 Mark Adler */; /* Define MSDOS for Turbo C and Power C */",MatchSource.CODE_COMMENT,core/zip/src/Tailor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Tailor.h
https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Tailor.h:3,Safety,avoid,avoid,3,/* avoid the MS-DOS specific includes */,MatchSource.CODE_COMMENT,core/zip/src/Tailor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Tailor.h
https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Tailor.h:17,Safety,Avoid,Avoid,17,/* ?PROTO */; /* Avoid using const if compiler does not support it */,MatchSource.CODE_COMMENT,core/zip/src/Tailor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Tailor.h
https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Tailor.h:3,Modifiability,inherit,inherit,3,/* inherit MS-DOS file system etc. stuff */,MatchSource.CODE_COMMENT,core/zip/src/Tailor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Tailor.h
https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Tailor.h:236,Deployability,PATCH,PATCHY,236,"/* case mapping functions. case_map is used to ignore case in comparisons,; * to_up is used to force upper case even on Unix (for dosify option).; */; /* || defined(AMIGA) is removed from the next line because the line; is too long for PATCHY */",MatchSource.CODE_COMMENT,core/zip/src/Tailor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Tailor.h
https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Tailor.h:70,Safety,avoid,avoid,70,/* VMS */; /* Open the old zip file in exclusive mode if possible (to avoid adding; * zip file to itself).; */,MatchSource.CODE_COMMENT,core/zip/src/Tailor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Tailor.h
https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Tailor.h:109,Performance,optimiz,optimization,109,"/* Define this symbol if your target allows access to unaligned data.; * This is not mandatory, just a speed optimization. The compressed; * output is strictly identical.; */",MatchSource.CODE_COMMENT,core/zip/src/Tailor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Tailor.h
https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Tailor.h:44,Security,access,access,44,"/* Define this symbol if your target allows access to unaligned data.; * This is not mandatory, just a speed optimization. The compressed; * output is strictly identical.; */",MatchSource.CODE_COMMENT,core/zip/src/Tailor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Tailor.h
https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Tailor.h:111,Energy Efficiency,reduce,reduce,111,/* Under MSDOS we may run out of memory when processing a large number; * of files. Compile with MEDIUM_MEM to reduce the memory requirements or; * with SMALL_MEM to use as little memory as possible.; */,MatchSource.CODE_COMMENT,core/zip/src/Tailor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Tailor.h
https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZIP.h:28,Security,password,password,28,"/* for crypt.c: include zip password functions, not unzip */",MatchSource.CODE_COMMENT,core/zip/src/ZIP.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZIP.h
https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZIP.h:10,Modifiability,portab,portability,10,"/* Set up portability */; /* #include ""tailor.h"" */",MatchSource.CODE_COMMENT,core/zip/src/ZIP.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZIP.h
https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZIP.h:106,Energy Efficiency,reduce,reduces,106,"/* Maximum window size = 32K. If you are really short of memory, compile; * with a smaller WSIZE but this reduces the compression ratio for files; * of size > WSIZE. WSIZE must be a power of two in the current implementation.; */",MatchSource.CODE_COMMENT,core/zip/src/ZIP.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZIP.h
https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZIP.h:182,Energy Efficiency,power,power,182,"/* Maximum window size = 32K. If you are really short of memory, compile; * with a smaller WSIZE but this reduces the compression ratio for files; * of size > WSIZE. WSIZE must be a power of two in the current implementation.; */",MatchSource.CODE_COMMENT,core/zip/src/ZIP.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZIP.h
https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZIP.h:15,Usability,simpl,simplify,15,"/* In order to simplify the code, particularly on 16 bit machines, match; * distances are limited to MAX_DIST instead of WSIZE.; */; /* Define fseek() commands */",MatchSource.CODE_COMMENT,core/zip/src/ZIP.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZIP.h
https://github.com/root-project/root/tree/v6-32-06/core/zip/test/ZipTest.cxx:23,Energy Efficiency,allocate,allocate,23,"// For extra ""safety"", allocate the buffers on the heap to avoid corrupting the stack should anything go wrong.",MatchSource.CODE_COMMENT,core/zip/test/ZipTest.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/test/ZipTest.cxx
https://github.com/root-project/root/tree/v6-32-06/core/zip/test/ZipTest.cxx:14,Safety,safe,safety,14,"// For extra ""safety"", allocate the buffers on the heap to avoid corrupting the stack should anything go wrong.",MatchSource.CODE_COMMENT,core/zip/test/ZipTest.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/test/ZipTest.cxx
https://github.com/root-project/root/tree/v6-32-06/core/zip/test/ZipTest.cxx:59,Safety,avoid,avoid,59,"// For extra ""safety"", allocate the buffers on the heap to avoid corrupting the stack should anything go wrong.",MatchSource.CODE_COMMENT,core/zip/test/ZipTest.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/test/ZipTest.cxx
https://github.com/root-project/root/tree/v6-32-06/core/zip/test/ZipTest.cxx:7,Testability,test,test,7,"// Now test all possible combinations of target and source sizes. The outer loop is for the target sizes because that; // allows us to check that nothing got overwritten.",MatchSource.CODE_COMMENT,core/zip/test/ZipTest.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/test/ZipTest.cxx
https://github.com/root-project/root/tree/v6-32-06/core/zstd/inc/ZipZSTD.h:102,Safety,avoid,avoid,102,"// NOTE: the ROOT compression libraries aren't consistently written in C++; hence the; // #ifdef's to avoid problems with C code.",MatchSource.CODE_COMMENT,core/zstd/inc/ZipZSTD.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zstd/inc/ZipZSTD.h
https://github.com/root-project/root/tree/v6-32-06/core/zstd/src/ZipZSTD.cxx:7,Availability,error,error,7,/* The error code 18446744073709551546 arises when the tgt buffer is too small; * However this error is already handled outside of the compression algorithm; */,MatchSource.CODE_COMMENT,core/zstd/src/ZipZSTD.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zstd/src/ZipZSTD.cxx
https://github.com/root-project/root/tree/v6-32-06/core/zstd/src/ZipZSTD.cxx:95,Availability,error,error,95,/* The error code 18446744073709551546 arises when the tgt buffer is too small; * However this error is already handled outside of the compression algorithm; */,MatchSource.CODE_COMMENT,core/zstd/src/ZipZSTD.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zstd/src/ZipZSTD.cxx
https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/converttonotebook.py:827,Deployability,install,installed,827,"#!/usr/bin/env python; # Author: Pau Miquel i Mir <pau.miquel.mir@cern.ch> <pmm1g15@soton.ac.uk>>; # Date: July, 2016; #; # DISCLAIMER: This script is a prototype and a work in progress. Indeed, it is possible that; # it may not work for certain tutorials, and that it, or the tutorial, might need to be; # tweaked slightly to ensure full functionality. Please do not hesitate to email the author; # with any questions or with examples that do not work.; #; # HELP IT DOESN'T WORK: Two possible solutions:; # 1. If the tutorial takes a long time to execute (more than 90 seconds), add the name of the; # tutorial to the list of long tutorials listLongTutorials, in the function findTimeout.; # 2. Check that helper functions are recognised correctly in split(text).; #; # REQUIREMENTS: This script needs jupyter to be properly installed, as it uses the python; # package nbformat and calls the shell commands `jupyter nbconvert` and `jupyter trust`. The; # rest of the packages used should be included in a standard installation of python. The script; # is intended to be run on a UNIX based system.; #; #; # FUNCTIONING:; # -----------; # The converttonotebook script creates Jupyter notebooks from raw C++ or python files.; # Particularly, it is indicated to convert the ROOT tutorials found in the ROOT; # repository.; #; # The script should be called from bash with the following format:; # python /path/to/script/converttonotebook.py /path/to/<macro>.C /path/to/outdir; #; # Indeed the script takes two arguments, the path to the macro and the path to the directory; # where the notebooks will be created; #; # The script's general functioning is as follows. The macro to be converted is imported as a string.; # A series of modifications are made to this string, for instance delimiting where markdown and; # code cells begin and end. Then, this string is converted into ipynb format using a function; # in the nbconvert package. Finally, the notebook is executed and output.; #; # For convertin",MatchSource.CODE_COMMENT,documentation/doxygen/converttonotebook.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/converttonotebook.py
https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/converttonotebook.py:1016,Deployability,install,installation,1016,"#!/usr/bin/env python; # Author: Pau Miquel i Mir <pau.miquel.mir@cern.ch> <pmm1g15@soton.ac.uk>>; # Date: July, 2016; #; # DISCLAIMER: This script is a prototype and a work in progress. Indeed, it is possible that; # it may not work for certain tutorials, and that it, or the tutorial, might need to be; # tweaked slightly to ensure full functionality. Please do not hesitate to email the author; # with any questions or with examples that do not work.; #; # HELP IT DOESN'T WORK: Two possible solutions:; # 1. If the tutorial takes a long time to execute (more than 90 seconds), add the name of the; # tutorial to the list of long tutorials listLongTutorials, in the function findTimeout.; # 2. Check that helper functions are recognised correctly in split(text).; #; # REQUIREMENTS: This script needs jupyter to be properly installed, as it uses the python; # package nbformat and calls the shell commands `jupyter nbconvert` and `jupyter trust`. The; # rest of the packages used should be included in a standard installation of python. The script; # is intended to be run on a UNIX based system.; #; #; # FUNCTIONING:; # -----------; # The converttonotebook script creates Jupyter notebooks from raw C++ or python files.; # Particularly, it is indicated to convert the ROOT tutorials found in the ROOT; # repository.; #; # The script should be called from bash with the following format:; # python /path/to/script/converttonotebook.py /path/to/<macro>.C /path/to/outdir; #; # Indeed the script takes two arguments, the path to the macro and the path to the directory; # where the notebooks will be created; #; # The script's general functioning is as follows. The macro to be converted is imported as a string.; # A series of modifications are made to this string, for instance delimiting where markdown and; # code cells begin and end. Then, this string is converted into ipynb format using a function; # in the nbconvert package. Finally, the notebook is executed and output.; #; # For convertin",MatchSource.CODE_COMMENT,documentation/doxygen/converttonotebook.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/converttonotebook.py
https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/converttonotebook.py:330,Modifiability,variab,variable,330,"""""""; Converts comments delimited by # or ## and on a new line into a markdown cell.; For python files only; >>> pythonComments('''## This is a; ... ## multiline comment; ... def function()'''); '# <markdowncell>\\n## This is a\\n## multiline comment\\n# <codecell>\\ndef function()\\n'; >>> pythonComments('''def function():; ... variable = 5 # Comment not in cell; ... # Comment also not in cell'''); 'def function():\\n variable = 5 # Comment not in cell\\n # Comment also not in cell\\n'; """"""",MatchSource.CODE_COMMENT,documentation/doxygen/converttonotebook.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/converttonotebook.py
https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/converttonotebook.py:422,Modifiability,variab,variable,422,"""""""; Converts comments delimited by # or ## and on a new line into a markdown cell.; For python files only; >>> pythonComments('''## This is a; ... ## multiline comment; ... def function()'''); '# <markdowncell>\\n## This is a\\n## multiline comment\\n# <codecell>\\ndef function()\\n'; >>> pythonComments('''def function():; ... variable = 5 # Comment not in cell; ... # Comment also not in cell'''); 'def function():\\n variable = 5 # Comment not in cell\\n # Comment also not in cell\\n'; """"""",MatchSource.CODE_COMMENT,documentation/doxygen/converttonotebook.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/converttonotebook.py
https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/converttonotebook.py:420,Modifiability,variab,variable,420,"""""""; Converts comments delimited by // and on a new line into a markdown cell. Skips comments inside; blocks and braces, though, since these would otherwise be ripped apart. For C++ files only.; >>> cppComments('''// This is a; ... // multiline comment; ... void function(){}'''); '# <markdowncell>\\n# This is a\\n# multiline comment\\n# <codecell>\\nvoid function(){}\\n'; >>> cppComments('''void function(){; ... int variable = 5 // Comment not in cell; ... // Comment also not in cell; ... }'''); 'void function(){\\n int variable = 5 // Comment not in cell\\n // Comment also not in cell\\n}\\n'; """"""",MatchSource.CODE_COMMENT,documentation/doxygen/converttonotebook.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/converttonotebook.py
https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/converttonotebook.py:526,Modifiability,variab,variable,526,"""""""; Converts comments delimited by // and on a new line into a markdown cell. Skips comments inside; blocks and braces, though, since these would otherwise be ripped apart. For C++ files only.; >>> cppComments('''// This is a; ... // multiline comment; ... void function(){}'''); '# <markdowncell>\\n# This is a\\n# multiline comment\\n# <codecell>\\nvoid function(){}\\n'; >>> cppComments('''void function(){; ... int variable = 5 // Comment not in cell; ... // Comment also not in cell; ... }'''); 'void function(){\\n int variable = 5 // Comment not in cell\\n // Comment also not in cell\\n}\\n'; """"""",MatchSource.CODE_COMMENT,documentation/doxygen/converttonotebook.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/converttonotebook.py
https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/converttonotebook.py:17,Testability,test,test,17,"""""""#include \""../test/Event.h\""""""""",MatchSource.CODE_COMMENT,documentation/doxygen/converttonotebook.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/converttonotebook.py
https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/converttonotebook.py:41,Testability,test,test,41,"""""""# <codecell>\nTString dir = ""$ROOTSYS/test/Event.h"";\ngSystem->ExpandPathName(dir);\nTString includeCommand = TString::Format(""#include \\\""%s\\\"""" , dir.Data());\ngROOT->ProcessLine(includeCommand);""""""",MatchSource.CODE_COMMENT,documentation/doxygen/converttonotebook.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/converttonotebook.py
https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/converttonotebook.py:266,Deployability,update,updated,266,"""""""; Main function. Calls all other functions, depending on whether the macro input is in python or c++.; It adds the header information. Also, it adds a cell that draws all canvases. The working text is; then converted to a version 3 jupyter notebook, subsequently updated to a version 4. Then, metadata; associated with the language the macro is written in is attatched to he notebook. Finally the; notebook is executed and output as a Jupyter notebook.; """"""",MatchSource.CODE_COMMENT,documentation/doxygen/converttonotebook.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/converttonotebook.py
https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/converttonotebook.py:47,Integrability,depend,depending,47,"""""""; Main function. Calls all other functions, depending on whether the macro input is in python or c++.; It adds the header information. Also, it adds a cell that draws all canvases. The working text is; then converted to a version 3 jupyter notebook, subsequently updated to a version 4. Then, metadata; associated with the language the macro is written in is attatched to he notebook. Finally the; notebook is executed and output as a Jupyter notebook.; """"""",MatchSource.CODE_COMMENT,documentation/doxygen/converttonotebook.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/converttonotebook.py
https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/converttonotebook.py:2,Performance,Perform,Perform,2,"# Perform last minute fixes to the notebook, used for specific fixes needed by some tutorials",MatchSource.CODE_COMMENT,documentation/doxygen/converttonotebook.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/converttonotebook.py
https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/converttonotebook.py:2,Deployability,Upgrade,Upgrade,2,"# Upgrade v3 to v4; # Load notebook string into json format, essentially creating a dictionary",MatchSource.CODE_COMMENT,documentation/doxygen/converttonotebook.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/converttonotebook.py
https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/converttonotebook.py:22,Performance,Load,Load,22,"# Upgrade v3 to v4; # Load notebook string into json format, essentially creating a dictionary",MatchSource.CODE_COMMENT,documentation/doxygen/converttonotebook.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/converttonotebook.py
https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/converttonotebook.py:170,Security,access,access,170,"# -------------------------------------; # -------------------------------------; # -------------------------------------; # Set DYLD_LIBRARY_PATH. When run without root access or as a different user, especially from Mac systems,; # it is possible for security reasons that the environment does not include this definition, so it is manually defined.",MatchSource.CODE_COMMENT,documentation/doxygen/converttonotebook.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/converttonotebook.py
https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/converttonotebook.py:252,Security,secur,security,252,"# -------------------------------------; # -------------------------------------; # -------------------------------------; # Set DYLD_LIBRARY_PATH. When run without root access or as a different user, especially from Mac systems,; # it is possible for security reasons that the environment does not include this definition, so it is manually defined.",MatchSource.CODE_COMMENT,documentation/doxygen/converttonotebook.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/converttonotebook.py
https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/filter.cxx:1161,Availability,down,down,1161,"d to generate; /// the ROOT reference guide.; ///; /// ## In the ROOT classes; ///; /// ### `Begin_Macro` and `End_Macro`; /// The two tags where used the THtml version to generate images from ROOT code.; /// The generated picture is inlined exactly at the place where the macro is; /// defined. The Macro can be defined in two way:; /// - by direct in-lining of the C++ code; /// - by a reference to a C++ file; /// The tag `Begin_Macro` can have the parameter `(source)`. The directive becomes:; /// `Begin_Macro(source)`. This parameter allows to show the macro's code in addition.; /// `Begin_Macro` also accept the image file type as option. ""png"" or ""svg"".; /// ""png"" is the default value. For example: `Begin_Macro(source, svg)` will show; /// the code of the macro and the image will be is svg format. The ""width"" keyword; /// can be added to define the width of the picture in pixel: ""width=400"" will; /// scale a picture to 400 pixel width. This allow to define large pictures which; /// can then be scaled down to have a better definition.; ///; /// ## In the ROOT tutorials; ///; /// ROOT tutorials are also included in the ROOT documentation. The tutorials'; /// macros headers should look like:; ///; /// ~~~ {.cpp}; /// \file; /// \ingroup tutorial_hist; /// \notebook; /// Getting Contours From TH2D.; ///; /// #### Image produced by `.x ContourList.C`; /// The contours values are drawn next to each contour.; /// \macro_image; ///; /// #### Output produced by `.x ContourList.C`; /// It shows that 6 contours and 12 graphs were found.; /// \macro_output; ///; /// #### `ContourList.C`; /// \macro_code; ///; /// \authors Josh de Bever, Olivier Couet; /// ~~~; ///; /// This example shows that four new directives have been implemented:; ///; /// 1. `\macro_image`; /// The images produced by this macro are shown. A caption can be added to document; /// the pictures: `\macro_image This is a picture`. When the option `(nobatch)`; /// is passed, the macro is executed without the ba",MatchSource.CODE_COMMENT,documentation/doxygen/filter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/filter.cxx
https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/filter.cxx:12,Testability,test,test,12,"// @(#)root/test:$name: $:$id: filter.cxx,v 1.0 exp $; // Author: O.Couet; /// The ROOT doxygen filter implements ROOT's specific directives used to generate; /// the ROOT reference guide.; ///; /// ## In the ROOT classes; ///; /// ### `Begin_Macro` and `End_Macro`; /// The two tags where used the THtml version to generate images from ROOT code.; /// The generated picture is inlined exactly at the place where the macro is; /// defined. The Macro can be defined in two way:; /// - by direct in-lining of the C++ code; /// - by a reference to a C++ file; /// The tag `Begin_Macro` can have the parameter `(source)`. The directive becomes:; /// `Begin_Macro(source)`. This parameter allows to show the macro's code in addition.; /// `Begin_Macro` also accept the image file type as option. ""png"" or ""svg"".; /// ""png"" is the default value. For example: `Begin_Macro(source, svg)` will show; /// the code of the macro and the image will be is svg format. The ""width"" keyword; /// can be added to define the width of the picture in pixel: ""width=400"" will; /// scale a picture to 400 pixel width. This allow to define large pictures which; /// can then be scaled down to have a better definition.; ///; /// ## In the ROOT tutorials; ///; /// ROOT tutorials are also included in the ROOT documentation. The tutorials'; /// macros headers should look like:; ///; /// ~~~ {.cpp}; /// \file; /// \ingroup tutorial_hist; /// \notebook; /// Getting Contours From TH2D.; ///; /// #### Image produced by `.x ContourList.C`; /// The contours values are drawn next to each contour.; /// \macro_image; ///; /// #### Output produced by `.x ContourList.C`; /// It shows that 6 contours and 12 graphs were found.; /// \macro_output; ///; /// #### `ContourList.C`; /// \macro_code; ///; /// \authors Josh de Bever, Olivier Couet; /// ~~~; ///; /// This example shows that four new directives have been implemented:; ///; /// 1. `\macro_image`; /// The images produced by this macro are shown. A caption can be added to",MatchSource.CODE_COMMENT,documentation/doxygen/filter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/filter.cxx
https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/filter.cxx:182,Usability,guid,guide,182,"// @(#)root/test:$name: $:$id: filter.cxx,v 1.0 exp $; // Author: O.Couet; /// The ROOT doxygen filter implements ROOT's specific directives used to generate; /// the ROOT reference guide.; ///; /// ## In the ROOT classes; ///; /// ### `Begin_Macro` and `End_Macro`; /// The two tags where used the THtml version to generate images from ROOT code.; /// The generated picture is inlined exactly at the place where the macro is; /// defined. The Macro can be defined in two way:; /// - by direct in-lining of the C++ code; /// - by a reference to a C++ file; /// The tag `Begin_Macro` can have the parameter `(source)`. The directive becomes:; /// `Begin_Macro(source)`. This parameter allows to show the macro's code in addition.; /// `Begin_Macro` also accept the image file type as option. ""png"" or ""svg"".; /// ""png"" is the default value. For example: `Begin_Macro(source, svg)` will show; /// the code of the macro and the image will be is svg format. The ""width"" keyword; /// can be added to define the width of the picture in pixel: ""width=400"" will; /// scale a picture to 400 pixel width. This allow to define large pictures which; /// can then be scaled down to have a better definition.; ///; /// ## In the ROOT tutorials; ///; /// ROOT tutorials are also included in the ROOT documentation. The tutorials'; /// macros headers should look like:; ///; /// ~~~ {.cpp}; /// \file; /// \ingroup tutorial_hist; /// \notebook; /// Getting Contours From TH2D.; ///; /// #### Image produced by `.x ContourList.C`; /// The contours values are drawn next to each contour.; /// \macro_image; ///; /// #### Output produced by `.x ContourList.C`; /// It shows that 6 contours and 12 graphs were found.; /// \macro_output; ///; /// #### `ContourList.C`; /// \macro_code; ///; /// \authors Josh de Bever, Olivier Couet; /// ~~~; ///; /// This example shows that four new directives have been implemented:; ///; /// 1. `\macro_image`; /// The images produced by this macro are shown. A caption can be added to",MatchSource.CODE_COMMENT,documentation/doxygen/filter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/filter.cxx
https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/filter.cxx:10,Modifiability,variab,variables,10,"// Global variables.",MatchSource.CODE_COMMENT,documentation/doxygen/filter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/filter.cxx
https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/filter.cxx:3,Integrability,Wrap,Wrap,3,/* Wrap the plain char array into the unique_ptr */,MatchSource.CODE_COMMENT,documentation/doxygen/filter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/filter.cxx
https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/filter.cxx:3,Energy Efficiency,allocate,allocate,3,"// allocate the output string",MatchSource.CODE_COMMENT,documentation/doxygen/filter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/filter.cxx
https://github.com/root-project/root/tree/v6-32-06/documentation/primer/macros/MySelector.h:265,Integrability,rout,routine,265,"// The Init() function is called when the selector needs to initialize; // a new tree or chain. Typically here the branch addresses and branch; // pointers of the tree will be set.; // It is normally not necessary to make changes to the generated; // code, but the routine can be extended by the user if needed.; // Init() will be called many times when running on PROOF; // (once per file to be processed).; // Set branch addresses and branch pointers",MatchSource.CODE_COMMENT,documentation/primer/macros/MySelector.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/primer/macros/MySelector.h
https://github.com/root-project/root/tree/v6-32-06/documentation/primer/macros/MySelector.h:280,Modifiability,extend,extended,280,"// The Init() function is called when the selector needs to initialize; // a new tree or chain. Typically here the branch addresses and branch; // pointers of the tree will be set.; // It is normally not necessary to make changes to the generated; // code, but the routine can be extended by the user if needed.; // Init() will be called many times when running on PROOF; // (once per file to be processed).; // Set branch addresses and branch pointers",MatchSource.CODE_COMMENT,documentation/primer/macros/MySelector.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/primer/macros/MySelector.h
https://github.com/root-project/root/tree/v6-32-06/documentation/primer/macros/MySelector.h:251,Integrability,rout,routine,251,"// The Notify() function is called when a new file is opened. This; // can be either for a new TTree in a TChain or when when a new TTree; // is started when using PROOF. It is normally not necessary to make changes; // to the generated code, but the routine can be extended by the; // user if needed. The return value is currently not used.",MatchSource.CODE_COMMENT,documentation/primer/macros/MySelector.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/primer/macros/MySelector.h
https://github.com/root-project/root/tree/v6-32-06/documentation/primer/macros/MySelector.h:266,Modifiability,extend,extended,266,"// The Notify() function is called when a new file is opened. This; // can be either for a new TTree in a TChain or when when a new TTree; // is started when using PROOF. It is normally not necessary to make changes; // to the generated code, but the routine can be extended by the; // user if needed. The return value is currently not used.",MatchSource.CODE_COMMENT,documentation/primer/macros/MySelector.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/primer/macros/MySelector.h
https://github.com/root-project/root/tree/v6-32-06/documentation/primer/macros/TGraphFit.py:23,Availability,error,error,23,"#; # Draw a graph with error bars and fit a function to it; #",MatchSource.CODE_COMMENT,documentation/primer/macros/TGraphFit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/primer/macros/TGraphFit.py
https://github.com/root-project/root/tree/v6-32-06/etc/pdg_table_update.py:38,Deployability,update,updated,38,"# Formatting the output line with the updated mass and width",MatchSource.CODE_COMMENT,etc/pdg_table_update.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/pdg_table_update.py
https://github.com/root-project/root/tree/v6-32-06/etc/pdg_table_update.py:39,Energy Efficiency,charge,charge,39,"# Extract only the name, excluding the charge; # Storing the data in the dictionary",MatchSource.CODE_COMMENT,etc/pdg_table_update.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/pdg_table_update.py
https://github.com/root-project/root/tree/v6-32-06/etc/pdg_table_update.py:42,Deployability,update,updated,42,"#------------------------------; # Create updated pdg_table.txt; #------------------------------",MatchSource.CODE_COMMENT,etc/pdg_table_update.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/pdg_table_update.py
https://github.com/root-project/root/tree/v6-32-06/etc/dictpch/makepch.py:395,Availability,error,errors,395,"#! /usr/bin/env python; #; # Build a pch for the headers and linkdefs in root-build-dir/etc/dictpch/.; # root-build-dir is first tried as ./ - if that doesn't exist, $ROOTSYS; # is taken as root-build-dir.; #; # $1: PCH output file name; # $2: cxxflags (optional; required if extra headers are supplied); # $3: extra headers to be included in the PCH (optional); #; # exit code 1 for invocation errors; else exit code of rootcling invocation.; #; # Copyright (c) 2014 Rene Brun and Fons Rademakers; # Author: Axel Naumann <axel@cern.ch>, 2014-10-16; # Translated to python by Danilo Piparo, 2015-4-23",MatchSource.CODE_COMMENT,etc/dictpch/makepch.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/dictpch/makepch.py
https://github.com/root-project/root/tree/v6-32-06/etc/notebook/html/sample_config.py:18,Deployability,configurat,configuration,18,"# JupyROOT sample configuration file for nbconvert",MatchSource.CODE_COMMENT,etc/notebook/html/sample_config.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/notebook/html/sample_config.py
https://github.com/root-project/root/tree/v6-32-06/etc/notebook/html/sample_config.py:18,Modifiability,config,configuration,18,"# JupyROOT sample configuration file for nbconvert",MatchSource.CODE_COMMENT,etc/notebook/html/sample_config.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/notebook/html/sample_config.py
https://github.com/root-project/root/tree/v6-32-06/etc/notebook/JsMVA/js/DecisionTree.js:464,Energy Efficiency,green,green,464,"/**; * This is submodule produces visualizations for decision trees. The visualization is interactive, and it is made; * with d3js.; * Interactions supported:; * - Mouseover (node, weight): showing decision path; * - Zooming and grab and move supported; * - Reset zoomed tree: double click; * - Expand all closed subtrees, turn off zoom: button in the bottom of the picture; * - Click on node:; * * hiding subtree, if node children are hidden the node will have a green border; * * rescaling: bigger nodes, bigger texts; * * click again to show the subtree; * Author: Attila Bagoly <battila93@gmail.com>; * Created: 6/11/16; */",MatchSource.CODE_COMMENT,etc/notebook/JsMVA/js/DecisionTree.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/notebook/JsMVA/js/DecisionTree.js
https://github.com/root-project/root/tree/v6-32-06/etc/notebook/JsMVA/js/JsMVA.js:87,Integrability,bridg,bridge,87,"/**; * This is the JsMVA object, the JavaScript part of JPyInterface module. This is a bridge,; * python code always produce an output, where one of this module's function will be called. These function calls; * will redirect the date for specific visualization scripts.; * It uses the following libraries:; * - JsROOT; * - d3js; * - jquery; * It uses the following submodules:; * - NeuralNetwork; * - DecisionTree; * - NetworkDesigner; * Author: Attila Bagoly <battila93@gmail.com>; * Created: 5/14/16; */",MatchSource.CODE_COMMENT,etc/notebook/JsMVA/js/JsMVA.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/notebook/JsMVA/js/JsMVA.js
https://github.com/root-project/root/tree/v6-32-06/etc/notebook/JsMVA/js/NetworkDesigner.js:76,Integrability,interface,interface,76,"/**; * This is the Deep Neural Network Designer: it produces an interactive interface, where we can build easily the; * deep network. This script can transform the graphical representation of the network to an option string.; * By using IPython JavaScript API, this script is able to communicate with the python kernel and book the method,; * and print out the kernel response.; * Used libraries/plugins:; * - jquery; * - jquery-ui; * - jquery.connections; * - jquery-timing; * Author: Attila Bagoly <battila93@gmail.com>; * Created: 8/3/2016; */",MatchSource.CODE_COMMENT,etc/notebook/JsMVA/js/NetworkDesigner.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/notebook/JsMVA/js/NetworkDesigner.js
https://github.com/root-project/root/tree/v6-32-06/etc/notebook/JsMVA/js/NetworkDesigner.js:396,Modifiability,plugin,plugins,396,"/**; * This is the Deep Neural Network Designer: it produces an interactive interface, where we can build easily the; * deep network. This script can transform the graphical representation of the network to an option string.; * By using IPython JavaScript API, this script is able to communicate with the python kernel and book the method,; * and print out the kernel response.; * Used libraries/plugins:; * - jquery; * - jquery-ui; * - jquery.connections; * - jquery-timing; * Author: Attila Bagoly <battila93@gmail.com>; * Created: 8/3/2016; */",MatchSource.CODE_COMMENT,etc/notebook/JsMVA/js/NetworkDesigner.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/notebook/JsMVA/js/NetworkDesigner.js
https://github.com/root-project/root/tree/v6-32-06/etc/notebook/JsMVA/js/NeuralNetwork.js:68,Usability,simpl,simple,68,"/**; * This submodule is responsible for creating visualization for simple neural networks and deep neural networks.; * Simple neural networks are created with d3js, and HTML5 canvas element is used for visualization of deep neural networks.; * Interactions supported (non deep networks):; * - Mouseover (node, weight): focusing; * - Zooming and grab and move supported; * - Reset: double click; * Interactions supported (deep networks):; * - Zooming and grab and move supported; * Author: Attila Bagoly <battila93@gmail.com>; * Created: 6/9/16; */",MatchSource.CODE_COMMENT,etc/notebook/JsMVA/js/NeuralNetwork.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/notebook/JsMVA/js/NeuralNetwork.js
https://github.com/root-project/root/tree/v6-32-06/etc/notebook/JsMVA/js/NeuralNetwork.js:120,Usability,Simpl,Simple,120,"/**; * This submodule is responsible for creating visualization for simple neural networks and deep neural networks.; * Simple neural networks are created with d3js, and HTML5 canvas element is used for visualization of deep neural networks.; * Interactions supported (non deep networks):; * - Mouseover (node, weight): focusing; * - Zooming and grab and move supported; * - Reset: double click; * Interactions supported (deep networks):; * - Zooming and grab and move supported; * Author: Attila Bagoly <battila93@gmail.com>; * Created: 6/9/16; */",MatchSource.CODE_COMMENT,etc/notebook/JsMVA/js/NeuralNetwork.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/notebook/JsMVA/js/NeuralNetwork.js
https://github.com/root-project/root/tree/v6-32-06/etc/notebook/JsMVA/js/NeuralNetwork.js:30,Modifiability,extend,extended,30,// https://github.com/wbkd/d3-extended,MatchSource.CODE_COMMENT,etc/notebook/JsMVA/js/NeuralNetwork.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/notebook/JsMVA/js/NeuralNetwork.js
https://github.com/root-project/root/tree/v6-32-06/geom/gdml/inc/TGDMLParse.h:47,Safety,avoid,avoid,47,"// map's [] operator returns reference.; // to avoid ugly UB casts like static_cast<SomeType * &>(voidPtrLValue); // I have this helper class.",MatchSource.CODE_COMMENT,geom/gdml/inc/TGDMLParse.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/inc/TGDMLParse.h
https://github.com/root-project/root/tree/v6-32-06/geom/gdml/inc/TGDMLWrite.h:271,Security,secur,secured,271,"// static function -; // options:; // g - set by default - geant4 compatibility; // f,n - if none of this two is set then naming convention is; // with incremental suffix, if ""f"" then suffix is pointer; // if ""n"" then there is no suffix, but uniqness of names; // is not secured.",MatchSource.CODE_COMMENT,geom/gdml/inc/TGDMLWrite.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/inc/TGDMLWrite.h
https://github.com/root-project/root/tree/v6-32-06/geom/gdml/inc/TGDMLWrite.h:3,Integrability,wrap,wrapper,3,"// wrapper of all main methods for extraction",MatchSource.CODE_COMMENT,geom/gdml/inc/TGDMLWrite.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/inc/TGDMLWrite.h
https://github.com/root-project/root/tree/v6-32-06/geom/gdml/inc/TGDMLWrite.h:3,Integrability,Wrap,Wrapper,3,"// Wrapper to only selectively write one branch of the volume hierarchy to file",MatchSource.CODE_COMMENT,geom/gdml/inc/TGDMLWrite.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/inc/TGDMLWrite.h
https://github.com/root-project/root/tree/v6-32-06/geom/gdml/inc/TGDMLWrite.h:27,Integrability,depend,depends,27,"// Default unit of length (depends on ROOT unit system)",MatchSource.CODE_COMMENT,geom/gdml/inc/TGDMLWrite.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/inc/TGDMLWrite.h
https://github.com/root-project/root/tree/v6-32-06/geom/gdml/inc/TGDMLWrite.h:17,Availability,error,errors,17,"// count of name errors",MatchSource.CODE_COMMENT,geom/gdml/inc/TGDMLWrite.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/inc/TGDMLWrite.h
https://github.com/root-project/root/tree/v6-32-06/geom/gdml/inc/TGDMLWrite.h:21,Availability,error,errors,21,"// maximum number of errors for naming; // I. Methods processing the gGeoManager geometry object structure; // 1. Main methods to extract everything from ROOT gGeoManager",MatchSource.CODE_COMMENT,geom/gdml/inc/TGDMLWrite.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/inc/TGDMLWrite.h
https://github.com/root-project/root/tree/v6-32-06/geom/gdml/inc/TGDMLWrite.h:58,Integrability,Wrap,Wrapper,58,"// Backwards compatibility (to be removed in the future): Wrapper to only selectively write one branch",MatchSource.CODE_COMMENT,geom/gdml/inc/TGDMLWrite.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/inc/TGDMLWrite.h
https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLParse.cxx:1001,Integrability,depend,dependent,1001,")root/gdml:$Id$ */; // Author: Ben Lloyd 09/11/06; /*************************************************************************; * Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGDMLParse; \ingroup Geometry_gdml. This class contains the implementation of the GDML parser associated to; all the supported GDML elements. User should never need to explicitly; instaciate this class. It is internally used by the TGeoManager. Each element process has a 'Binding' to ROOT. The 'binding' is specific; mapping of GDML elements (materials, solids, etc) to specific objects which; should be instanciated by the converted. In the present case (ROOT) the; binding is implemented at the near the end of each process function. Most; bindings follow similar format, dependent on what is being added to the; geometry. This file also contains the implementation of the TGDMLRefl class. This is; just a small helper class used internally by the 'reflection' method (for; reflected solids). The presently supported list of TGeo classes is the following:. #### Materials:; - TGeoElement; - TGeoMaterial; - TGeoMixture. #### Solids:; - TGeoBBox; - TGeoArb8; - TGeoTubeSeg; - TGeoConeSeg; - TGeoCtub; - TGeoPcon; - TGeoTrap; - TGeoGtra; - TGeoTrd2; - TGeoSphere; - TGeoPara; - TGeoTorus; - TGeoHype; - TGeoPgon; - TGeoXtru; - TGeoEltu; - TGeoParaboloid; - TGeoCompositeShape (subtraction, union, intersection). #### Approximated Solids:; - Ellipsoid (approximated to a TGeoBBox); - Elliptical cone (approximated to a TGeoCone). #### Geometry:; - TGeoVolume; - TGeoVolumeAssembly; - divisions; - reflection. When most solids or volumes are added to the geometry they. Whenever a new element is added to GDML schema, this class needs to be extended.; The appropriate method (proces",MatchSource.CODE_COMMENT,geom/gdml/src/TGDMLParse.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLParse.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLParse.cxx:1966,Modifiability,extend,extended,1966," *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGDMLParse; \ingroup Geometry_gdml. This class contains the implementation of the GDML parser associated to; all the supported GDML elements. User should never need to explicitly; instaciate this class. It is internally used by the TGeoManager. Each element process has a 'Binding' to ROOT. The 'binding' is specific; mapping of GDML elements (materials, solids, etc) to specific objects which; should be instanciated by the converted. In the present case (ROOT) the; binding is implemented at the near the end of each process function. Most; bindings follow similar format, dependent on what is being added to the; geometry. This file also contains the implementation of the TGDMLRefl class. This is; just a small helper class used internally by the 'reflection' method (for; reflected solids). The presently supported list of TGeo classes is the following:. #### Materials:; - TGeoElement; - TGeoMaterial; - TGeoMixture. #### Solids:; - TGeoBBox; - TGeoArb8; - TGeoTubeSeg; - TGeoConeSeg; - TGeoCtub; - TGeoPcon; - TGeoTrap; - TGeoGtra; - TGeoTrd2; - TGeoSphere; - TGeoPara; - TGeoTorus; - TGeoHype; - TGeoPgon; - TGeoXtru; - TGeoEltu; - TGeoParaboloid; - TGeoCompositeShape (subtraction, union, intersection). #### Approximated Solids:; - Ellipsoid (approximated to a TGeoBBox); - Elliptical cone (approximated to a TGeoCone). #### Geometry:; - TGeoVolume; - TGeoVolumeAssembly; - divisions; - reflection. When most solids or volumes are added to the geometry they. Whenever a new element is added to GDML schema, this class needs to be extended.; The appropriate method (process) needs to be implemented, as well as the new; element process then needs to be linked thru the function TGDMLParse. For any question or remarks concerning this code, please send an email to; ben.lloyd@cern.ch. */",MatchSource.CODE_COMMENT,geom/gdml/src/TGDMLParse.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLParse.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLParse.cxx:8,Security,access,access,8,"// take access to main node",MatchSource.CODE_COMMENT,geom/gdml/src/TGDMLParse.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLParse.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLParse.cxx:3,Deployability,Release,Release,3,"// Release memory before exit",MatchSource.CODE_COMMENT,geom/gdml/src/TGDMLParse.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLParse.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLParse.cxx:178,Integrability,depend,depending,178,"////////////////////////////////////////////////////////////////////////////////; /// When using the 'divide' process in the geometry this function; /// sets the variable 'axis' depending on what is specified.",MatchSource.CODE_COMMENT,geom/gdml/src/TGDMLParse.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLParse.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLParse.cxx:162,Modifiability,variab,variable,162,"////////////////////////////////////////////////////////////////////////////////; /// When using the 'divide' process in the geometry this function; /// sets the variable 'axis' depending on what is specified.",MatchSource.CODE_COMMENT,geom/gdml/src/TGDMLParse.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLParse.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLParse.cxx:85,Usability,simpl,simple,85,"// Successfully parsed all the characters up to the ending NULL, so svalue; // was a simple number.",MatchSource.CODE_COMMENT,geom/gdml/src/TGDMLParse.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLParse.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLParse.cxx:92,Modifiability,variab,variable,92,"// Otherwise we'll use TFormula to evaluate the string, having first found; // all the GDML variable names in it and marked them with [] so that; // TFormula will recognize them as parameters.",MatchSource.CODE_COMMENT,geom/gdml/src/TGDMLParse.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLParse.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLParse.cxx:8,Security,access,access,8,"// take access to main node",MatchSource.CODE_COMMENT,geom/gdml/src/TGDMLParse.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLParse.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLParse.cxx:24,Deployability,Release,Release,24,"// File tree complete - Release memory before exit",MatchSource.CODE_COMMENT,geom/gdml/src/TGDMLParse.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLParse.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLParse.cxx:312,Usability,simpl,simple,312,"////////////////////////////////////////////////////////////////////////////////; /// In the solids section of the GDML file, an ellipsoid may be declared.; /// Unfortunately, the ellipsoid is not supported under ROOT so,; /// when the ellipsoid keyword is found, this function is called; /// to convert it to a simple box with similar dimensions, and the; /// dimensions required are taken and stored, these are then bound and; /// converted to type TGeoBBox and stored in fsolmap map using the name; /// as its key.",MatchSource.CODE_COMMENT,geom/gdml/src/TGDMLParse.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLParse.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLParse.cxx:321,Usability,simpl,simple,321,"////////////////////////////////////////////////////////////////////////////////; /// In the solids section of the GDML file, an elliptical cone may be declared.; /// Unfortunately, the elliptical cone is not supported under ROOT so,; /// when the elcone keyword is found, this function is called; /// to convert it to a simple box with similar dimensions, and the; /// dimensions required are taken and stored, these are then bound and; /// converted to type TGeoBBox and stored in fsolmap map using the name; /// as its key.",MatchSource.CODE_COMMENT,geom/gdml/src/TGDMLParse.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLParse.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLParse.cxx:91,Security,access,accessor,91,"////////////////////////////////////////////////////////////////////////////////; /// This accessor method returns the matrix.",MatchSource.CODE_COMMENT,geom/gdml/src/TGDMLParse.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLParse.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLWrite.cxx:1215,Deployability,update,updated,1215," * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGDMLWrite; \ingroup Geometry_gdml. This class contains implementation of converting ROOT's gGeoManager; geometry to GDML file. gGeoManager is the instance of TGeoManager class; containing tree of geometries creating resulting geometry. GDML is xml; based format of file mirroring the tree of geometries according to GDML; schema rules. For more information about GDML see http://gdml.web.cern.ch.; Each object in ROOT is represented by xml tag (=xml node/element) in GDML. This class is not needed to be instanciated. It should always be called; by gGeoManager->Export(""xyz.gdml"") method. Export is driven by extenstion; that is why "".gdml"" is important in resulting name. Whenever a new ROOT geometry object is implemented or there is a change; in GDML schema this class is needed to be updated to ensure proper mapping; between ROOT objects and GDML elements. Current status of mapping ROOT -> GDML is implemented in method called; TGDMLWrite::ChooseObject and it contains following ""map"":. #### Solids:. ~~~; TGeoBBox -> <box ... >; TGeoParaboloid -> <paraboloid ...>; TGeoSphere -> <sphere ...>; TGeoArb8 -> <arb8 ...>; TGeoConeSeg -> <cone ...>; TGeoCone -> <cone ...>; TGeoPara -> <para ...>; TGeoTrap -> <trap ...> or; - -> <arb8 ...>; TGeoGtra -> <twistedtrap ...> or; - -> <trap ...> or; - -> <arb8 ...>; TGeoTrd1 -> <trd ...>; TGeoTrd2 -> <trd ...>; TGeoTubeSeg -> <tube ...>; TGeoCtub -> <cutTube ...>; TGeoTube -> <tube ...>; TGeoPcon -> <polycone ...>; TGeoTorus -> <torus ...>; TGeoPgon -> <polyhedra ...>; TGeoEltu -> <eltube ...>; TGeoHype -> <hype ...>; TGeoXtru -> <xtru ...>; TGeoTessellated -> <tessellated ...>; TGeoCompositeShape -> <union ...> or; - -> <subtraction ...> or; - -> <intersection ...>. Special cases of solids:; TGeoScaledShape ->",MatchSource.CODE_COMMENT,geom/gdml/src/TGDMLWrite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLWrite.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLWrite.cxx:3383,Security,secur,secured,3383," ...>; TGeoCompositeShape -> <union ...> or; - -> <subtraction ...> or; - -> <intersection ...>. Special cases of solids:; TGeoScaledShape -> <elcone ...> if scaled TGeoCone or; - -> element without scale; TGeoCompositeShape -> <ellipsoid ...>; - intersection of:; - scaled TGeoSphere and TGeoBBox; ~~~. #### Materials:. ~~~; TGeoIsotope -> <isotope ...>; TGeoElement -> <element ...>; TGeoMaterial -> <material ...>; TGeoMixture -> <material ...>; ~~~. #### Structure. ~~~; TGeoVolume -> <volume ...> or; - -> <assembly ...>; TGeoNode -> <physvol ...>; TGeoPatternFinder -> <divisionvol ...>; ~~~. There are options that can be set to change resulting document. ##### Options:. ~~~; g - is set by default in gGeoManager, this option ensures compatibility; - with Geant4. It means:; - -> atomic number of material will be changed if <1 to 1; - -> if polycone is set badly it will try to export it correctly; - -> if widht * ndiv + offset is more then width of object being divided; - (in divisions) then it will be rounded so it will not exceed or; - if kPhi divsion then it will keep range of offset in -360 -> 0; f - if this option is set then names of volumes and solids will have; - pointer as a suffix to ensure uniqness of names; n - if this option is set then names will not have suffix, but uniqness is; - of names is not secured; - - if none of this two options (f,n) is set then default behaviour is so; - that incremental suffix is added to the names.; - (eg. TGeoBBox_0x1, TGeoBBox_0x2 ...); ~~~. #### USAGE:. ~~~; gGeoManager->Export(""output.gdml"");; gGeoManager->Export(""output.gdml"","""",""vg""); //the same as previous just; //options are set explicitly; gGeoManager->Export(""output.gdml"","""",""vgf"");; gGeoManager->Export(""output.gdml"","""",""gn"");; gGeoManager->Export(""output.gdml"","""",""f"");; ...; ~~~. #### Note:; Options discussed above are used only for TGDMLWrite class. There are; other options in the TGeoManager::Export(...) method that can be used.; See that function for details. */",MatchSource.CODE_COMMENT,geom/gdml/src/TGDMLWrite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLWrite.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLWrite.cxx:85,Integrability,wrap,wrapper,85,"////////////////////////////////////////////////////////////////////////////////; // wrapper of all main methods for extraction",MatchSource.CODE_COMMENT,geom/gdml/src/TGDMLWrite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLWrite.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLWrite.cxx:85,Integrability,Wrap,Wrapper,85,"////////////////////////////////////////////////////////////////////////////////; // Wrapper to only selectively write one branch of the volume hierarchy to file",MatchSource.CODE_COMMENT,geom/gdml/src/TGDMLWrite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLWrite.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLWrite.cxx:86,Integrability,Wrap,Wrapper,86,"////////////////////////////////////////////////////////////////////////////////; /// Wrapper of all exporting methods; /// Creates blank GDML file and fills it with gGeoManager structure converted; /// to GDML structure of xml nodes",MatchSource.CODE_COMMENT,geom/gdml/src/TGDMLWrite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLWrite.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLWrite.cxx:9,Modifiability,variab,variables,9,"// local variables",MatchSource.CODE_COMMENT,geom/gdml/src/TGDMLWrite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLWrite.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLWrite.cxx:32,Usability,clear,clear,32,"// create name for position and clear rotation",MatchSource.CODE_COMMENT,geom/gdml/src/TGDMLWrite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLWrite.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLWrite.cxx:53,Deployability,update,updated,53,"// experimentally found out, that rotation should be updated like this",MatchSource.CODE_COMMENT,geom/gdml/src/TGDMLWrite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLWrite.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLWrite.cxx:26,Safety,avoid,avoid,26,"//_iso suffix is added to avoid problems with same names; // for material, element and isotopes",MatchSource.CODE_COMMENT,geom/gdml/src/TGDMLWrite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLWrite.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLWrite.cxx:26,Safety,avoid,avoid,26,"//_elm suffix is added to avoid problems with same names; // for material and element",MatchSource.CODE_COMMENT,geom/gdml/src/TGDMLWrite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLWrite.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLWrite.cxx:63,Safety,avoid,avoid,63,"// check if alpha1 equals to alpha2 (converting to string - to avoid problems with floats)",MatchSource.CODE_COMMENT,geom/gdml/src/TGDMLWrite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLWrite.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLWrite.cxx:15,Testability,log,logical,15,"// Cretate the logical volume reference node",MatchSource.CODE_COMMENT,geom/gdml/src/TGDMLWrite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLWrite.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLWrite.cxx:15,Testability,log,logical,15,"// Cretate the logical volume reference nodes",MatchSource.CODE_COMMENT,geom/gdml/src/TGDMLWrite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLWrite.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLWrite.cxx:99,Testability,test,tests,99,"////////////////////////////////////////////////////////////////////////////////; /// Method which tests whether solids can be processed",MatchSource.CODE_COMMENT,geom/gdml/src/TGDMLWrite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLWrite.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLWrite.cxx:393,Integrability,Wrap,Wrapper,393,"////////////////////////////////////////////////////////////////////////////////; //; // Backwards compatibility for old DD4hep version (to be removed in the future); //; ////////////////////////////////////////////////////////////////////////////////; ////////////////////////////////////////////////////////////////////////////////; // Backwards compatibility (to be removed in the future): Wrapper to only selectively write one branch",MatchSource.CODE_COMMENT,geom/gdml/src/TGDMLWrite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLWrite.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLWrite.cxx:86,Integrability,Wrap,Wrapper,86,"////////////////////////////////////////////////////////////////////////////////; /// Wrapper of all exporting methods; /// Creates blank GDML file and fills it with gGeoManager structure converted; /// to GDML structure of xml nodes",MatchSource.CODE_COMMENT,geom/gdml/src/TGDMLWrite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLWrite.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLWrite.cxx:9,Modifiability,variab,variables,9,"// local variables",MatchSource.CODE_COMMENT,geom/gdml/src/TGDMLWrite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLWrite.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLWrite.cxx:32,Usability,clear,clear,32,"// create name for position and clear rotation",MatchSource.CODE_COMMENT,geom/gdml/src/TGDMLWrite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLWrite.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLWrite.cxx:53,Deployability,update,updated,53,"// experimentally found out, that rotation should be updated like this",MatchSource.CODE_COMMENT,geom/gdml/src/TGDMLWrite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLWrite.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGDMLMatrix.h:164,Security,expose,exposed,164,"////////////////////////////////////////////////////////////////////////////; // //; // TGDMLMatrix - A matrix used for GDML parsing, the objects have to be //; // exposed via TGeoManager interfcace to be able to construct optical //; // surfaces. //; // //; ////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,geom/geom/inc/TGDMLMatrix.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGDMLMatrix.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeant4PhysicalConstants.h:472,Energy Efficiency,Adapt,Adapted,472,"/*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; // ----------------------------------------------------------------------; // HEP coherent Physical Constants; // Adapted for ROOT by Marko Petric; //; // This file has been provided by Geant4 (simulation toolkit for HEP).; //; // Below is a non exhaustive list of Physical CONSTANTS,; // computed in the Internal HEP System Of Units.; //; // Most of them are extracted from the Particle Data Book :; // Phys. Rev. D volume 50 3-1 (1994) page 1233; //; //; // Author: M.Maire; //; // History:; //; // 23.02.96 Created; // 26.03.96 Added constants for standard conditions of temperature; // and pressure; also added Gas threshold.; // 29.04.08 use PDG 2006 values; // 03.11.08 use PDG 2008 values; // 02.10.17 addopted constant from CLHEP 2.3.4.3",MatchSource.CODE_COMMENT,geom/geom/inc/TGeant4PhysicalConstants.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeant4PhysicalConstants.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeant4PhysicalConstants.h:472,Modifiability,Adapt,Adapted,472,"/*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; // ----------------------------------------------------------------------; // HEP coherent Physical Constants; // Adapted for ROOT by Marko Petric; //; // This file has been provided by Geant4 (simulation toolkit for HEP).; //; // Below is a non exhaustive list of Physical CONSTANTS,; // computed in the Internal HEP System Of Units.; //; // Most of them are extracted from the Particle Data Book :; // Phys. Rev. D volume 50 3-1 (1994) page 1233; //; //; // Author: M.Maire; //; // History:; //; // 23.02.96 Created; // 26.03.96 Added constants for standard conditions of temperature; // and pressure; also added Gas threshold.; // 29.04.08 use PDG 2006 values; // 03.11.08 use PDG 2008 values; // 02.10.17 addopted constant from CLHEP 2.3.4.3",MatchSource.CODE_COMMENT,geom/geom/inc/TGeant4PhysicalConstants.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeant4PhysicalConstants.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeant4PhysicalConstants.h:23,Modifiability,coupling,coupling,23,"//; // electromagnetic coupling = 1.43996e-12 MeV*mm/(eplus^2); //",MatchSource.CODE_COMMENT,geom/geom/inc/TGeant4PhysicalConstants.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeant4PhysicalConstants.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeant4SystemOfUnits.h:554,Energy Efficiency,Adapt,Adapted,554,"/*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; // ----------------------------------------------------------------------; // HEP coherent system of Units; //; // This file has been provided to CLHEP by Geant4 (simulation toolkit for HEP).; // Adapted to TGeo units base by Marko Petric; //; // The basic units are :; // millimeter (millimeter); // nanosecond (nanosecond); // Mega electron Volt (MeV); // positron charge (eplus); // degree Kelvin (kelvin); // the amount of substance (mole); // luminous intensity (candela); // radian (radian); // steradian (steradian); //; // Below is a non exhaustive list of derived and pratical units; // (i.e. mostly the SI units).; // You can add your own units.; //; // The SI numerical value of the positron charge is defined here,; // as it is needed for conversion factor : positron charge = e_SI (coulomb); //; // The others physical constants are defined in the header file :; // PhysicalConstants.h; //; // Authors: M.Maire, S.Giani; //; // History:; //; // 06.02.96 Created.; // 28.03.96 Added miscellaneous constants.; // 05.12.97 E.Tcherniaev: Redefined pascal (to avoid warnings on WinNT); // 20.05.98 names: meter, second, gram, radian, degree; // (from Brian.Lasiuk@yale.edu (STAR)). Added luminous units.; // 05.08.98 angstrom, picobarn, microsecond, picosecond, petaelectronvolt; // 01.03.01 parsec; // 31.01.06 kilogray, milligray, microgray; // 29.04.08 use PDG 2006 value of e_SI; // 03.11.08 use PDG 2008 value of e_SI; // 19.08.15 added liter and its sub units (mma); // 12.01.16 added symbols for microsecond (us) and picosecond (ps) (mma); // 02.10.17 addopted units from CLHEP 2.3.4.3 and converted to TGeo unit base",MatchSource.CODE_COMMENT,geom/geom/inc/TGeant4SystemOfUnits.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeant4SystemOfUnits.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeant4SystemOfUnits.h:725,Energy Efficiency,charge,charge,725,"/*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; // ----------------------------------------------------------------------; // HEP coherent system of Units; //; // This file has been provided to CLHEP by Geant4 (simulation toolkit for HEP).; // Adapted to TGeo units base by Marko Petric; //; // The basic units are :; // millimeter (millimeter); // nanosecond (nanosecond); // Mega electron Volt (MeV); // positron charge (eplus); // degree Kelvin (kelvin); // the amount of substance (mole); // luminous intensity (candela); // radian (radian); // steradian (steradian); //; // Below is a non exhaustive list of derived and pratical units; // (i.e. mostly the SI units).; // You can add your own units.; //; // The SI numerical value of the positron charge is defined here,; // as it is needed for conversion factor : positron charge = e_SI (coulomb); //; // The others physical constants are defined in the header file :; // PhysicalConstants.h; //; // Authors: M.Maire, S.Giani; //; // History:; //; // 06.02.96 Created.; // 28.03.96 Added miscellaneous constants.; // 05.12.97 E.Tcherniaev: Redefined pascal (to avoid warnings on WinNT); // 20.05.98 names: meter, second, gram, radian, degree; // (from Brian.Lasiuk@yale.edu (STAR)). Added luminous units.; // 05.08.98 angstrom, picobarn, microsecond, picosecond, petaelectronvolt; // 01.03.01 parsec; // 31.01.06 kilogray, milligray, microgray; // 29.04.08 use PDG 2006 value of e_SI; // 03.11.08 use PDG 2008 value of e_SI; // 19.08.15 added liter and its sub units (mma); // 12.01.16 added symbols for microsecond (us) and picosecond (ps) (mma); // 02.10.17 addopted units from CLHEP 2.3.4.3 and converted to TGeo unit base",MatchSource.CODE_COMMENT,geom/geom/inc/TGeant4SystemOfUnits.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeant4SystemOfUnits.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeant4SystemOfUnits.h:1061,Energy Efficiency,charge,charge,1061,"/*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; // ----------------------------------------------------------------------; // HEP coherent system of Units; //; // This file has been provided to CLHEP by Geant4 (simulation toolkit for HEP).; // Adapted to TGeo units base by Marko Petric; //; // The basic units are :; // millimeter (millimeter); // nanosecond (nanosecond); // Mega electron Volt (MeV); // positron charge (eplus); // degree Kelvin (kelvin); // the amount of substance (mole); // luminous intensity (candela); // radian (radian); // steradian (steradian); //; // Below is a non exhaustive list of derived and pratical units; // (i.e. mostly the SI units).; // You can add your own units.; //; // The SI numerical value of the positron charge is defined here,; // as it is needed for conversion factor : positron charge = e_SI (coulomb); //; // The others physical constants are defined in the header file :; // PhysicalConstants.h; //; // Authors: M.Maire, S.Giani; //; // History:; //; // 06.02.96 Created.; // 28.03.96 Added miscellaneous constants.; // 05.12.97 E.Tcherniaev: Redefined pascal (to avoid warnings on WinNT); // 20.05.98 names: meter, second, gram, radian, degree; // (from Brian.Lasiuk@yale.edu (STAR)). Added luminous units.; // 05.08.98 angstrom, picobarn, microsecond, picosecond, petaelectronvolt; // 01.03.01 parsec; // 31.01.06 kilogray, milligray, microgray; // 29.04.08 use PDG 2006 value of e_SI; // 03.11.08 use PDG 2008 value of e_SI; // 19.08.15 added liter and its sub units (mma); // 12.01.16 added symbols for microsecond (us) and picosecond (ps) (mma); // 02.10.17 addopted units from CLHEP 2.3.4.3 and converted to TGeo unit base",MatchSource.CODE_COMMENT,geom/geom/inc/TGeant4SystemOfUnits.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeant4SystemOfUnits.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeant4SystemOfUnits.h:1138,Energy Efficiency,charge,charge,1138,"/*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; // ----------------------------------------------------------------------; // HEP coherent system of Units; //; // This file has been provided to CLHEP by Geant4 (simulation toolkit for HEP).; // Adapted to TGeo units base by Marko Petric; //; // The basic units are :; // millimeter (millimeter); // nanosecond (nanosecond); // Mega electron Volt (MeV); // positron charge (eplus); // degree Kelvin (kelvin); // the amount of substance (mole); // luminous intensity (candela); // radian (radian); // steradian (steradian); //; // Below is a non exhaustive list of derived and pratical units; // (i.e. mostly the SI units).; // You can add your own units.; //; // The SI numerical value of the positron charge is defined here,; // as it is needed for conversion factor : positron charge = e_SI (coulomb); //; // The others physical constants are defined in the header file :; // PhysicalConstants.h; //; // Authors: M.Maire, S.Giani; //; // History:; //; // 06.02.96 Created.; // 28.03.96 Added miscellaneous constants.; // 05.12.97 E.Tcherniaev: Redefined pascal (to avoid warnings on WinNT); // 20.05.98 names: meter, second, gram, radian, degree; // (from Brian.Lasiuk@yale.edu (STAR)). Added luminous units.; // 05.08.98 angstrom, picobarn, microsecond, picosecond, petaelectronvolt; // 01.03.01 parsec; // 31.01.06 kilogray, milligray, microgray; // 29.04.08 use PDG 2006 value of e_SI; // 03.11.08 use PDG 2008 value of e_SI; // 19.08.15 added liter and its sub units (mma); // 12.01.16 added symbols for microsecond (us) and picosecond (ps) (mma); // 02.10.17 addopted units from CLHEP 2.3.4.3 and converted to TGeo unit base",MatchSource.CODE_COMMENT,geom/geom/inc/TGeant4SystemOfUnits.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeant4SystemOfUnits.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeant4SystemOfUnits.h:1471,Energy Efficiency,meter,meter,1471,"/*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; // ----------------------------------------------------------------------; // HEP coherent system of Units; //; // This file has been provided to CLHEP by Geant4 (simulation toolkit for HEP).; // Adapted to TGeo units base by Marko Petric; //; // The basic units are :; // millimeter (millimeter); // nanosecond (nanosecond); // Mega electron Volt (MeV); // positron charge (eplus); // degree Kelvin (kelvin); // the amount of substance (mole); // luminous intensity (candela); // radian (radian); // steradian (steradian); //; // Below is a non exhaustive list of derived and pratical units; // (i.e. mostly the SI units).; // You can add your own units.; //; // The SI numerical value of the positron charge is defined here,; // as it is needed for conversion factor : positron charge = e_SI (coulomb); //; // The others physical constants are defined in the header file :; // PhysicalConstants.h; //; // Authors: M.Maire, S.Giani; //; // History:; //; // 06.02.96 Created.; // 28.03.96 Added miscellaneous constants.; // 05.12.97 E.Tcherniaev: Redefined pascal (to avoid warnings on WinNT); // 20.05.98 names: meter, second, gram, radian, degree; // (from Brian.Lasiuk@yale.edu (STAR)). Added luminous units.; // 05.08.98 angstrom, picobarn, microsecond, picosecond, petaelectronvolt; // 01.03.01 parsec; // 31.01.06 kilogray, milligray, microgray; // 29.04.08 use PDG 2006 value of e_SI; // 03.11.08 use PDG 2008 value of e_SI; // 19.08.15 added liter and its sub units (mma); // 12.01.16 added symbols for microsecond (us) and picosecond (ps) (mma); // 02.10.17 addopted units from CLHEP 2.3.4.3 and converted to TGeo unit base",MatchSource.CODE_COMMENT,geom/geom/inc/TGeant4SystemOfUnits.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeant4SystemOfUnits.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeant4SystemOfUnits.h:554,Modifiability,Adapt,Adapted,554,"/*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; // ----------------------------------------------------------------------; // HEP coherent system of Units; //; // This file has been provided to CLHEP by Geant4 (simulation toolkit for HEP).; // Adapted to TGeo units base by Marko Petric; //; // The basic units are :; // millimeter (millimeter); // nanosecond (nanosecond); // Mega electron Volt (MeV); // positron charge (eplus); // degree Kelvin (kelvin); // the amount of substance (mole); // luminous intensity (candela); // radian (radian); // steradian (steradian); //; // Below is a non exhaustive list of derived and pratical units; // (i.e. mostly the SI units).; // You can add your own units.; //; // The SI numerical value of the positron charge is defined here,; // as it is needed for conversion factor : positron charge = e_SI (coulomb); //; // The others physical constants are defined in the header file :; // PhysicalConstants.h; //; // Authors: M.Maire, S.Giani; //; // History:; //; // 06.02.96 Created.; // 28.03.96 Added miscellaneous constants.; // 05.12.97 E.Tcherniaev: Redefined pascal (to avoid warnings on WinNT); // 20.05.98 names: meter, second, gram, radian, degree; // (from Brian.Lasiuk@yale.edu (STAR)). Added luminous units.; // 05.08.98 angstrom, picobarn, microsecond, picosecond, petaelectronvolt; // 01.03.01 parsec; // 31.01.06 kilogray, milligray, microgray; // 29.04.08 use PDG 2006 value of e_SI; // 03.11.08 use PDG 2008 value of e_SI; // 19.08.15 added liter and its sub units (mma); // 12.01.16 added symbols for microsecond (us) and picosecond (ps) (mma); // 02.10.17 addopted units from CLHEP 2.3.4.3 and converted to TGeo unit base",MatchSource.CODE_COMMENT,geom/geom/inc/TGeant4SystemOfUnits.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeant4SystemOfUnits.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeant4SystemOfUnits.h:1426,Safety,avoid,avoid,1426,"/*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; // ----------------------------------------------------------------------; // HEP coherent system of Units; //; // This file has been provided to CLHEP by Geant4 (simulation toolkit for HEP).; // Adapted to TGeo units base by Marko Petric; //; // The basic units are :; // millimeter (millimeter); // nanosecond (nanosecond); // Mega electron Volt (MeV); // positron charge (eplus); // degree Kelvin (kelvin); // the amount of substance (mole); // luminous intensity (candela); // radian (radian); // steradian (steradian); //; // Below is a non exhaustive list of derived and pratical units; // (i.e. mostly the SI units).; // You can add your own units.; //; // The SI numerical value of the positron charge is defined here,; // as it is needed for conversion factor : positron charge = e_SI (coulomb); //; // The others physical constants are defined in the header file :; // PhysicalConstants.h; //; // Authors: M.Maire, S.Giani; //; // History:; //; // 06.02.96 Created.; // 28.03.96 Added miscellaneous constants.; // 05.12.97 E.Tcherniaev: Redefined pascal (to avoid warnings on WinNT); // 20.05.98 names: meter, second, gram, radian, degree; // (from Brian.Lasiuk@yale.edu (STAR)). Added luminous units.; // 05.08.98 angstrom, picobarn, microsecond, picosecond, petaelectronvolt; // 01.03.01 parsec; // 31.01.06 kilogray, milligray, microgray; // 29.04.08 use PDG 2006 value of e_SI; // 03.11.08 use PDG 2008 value of e_SI; // 19.08.15 added liter and its sub units (mma); // 12.01.16 added symbols for microsecond (us) and picosecond (ps) (mma); // 02.10.17 addopted units from CLHEP 2.3.4.3 and converted to TGeo unit base",MatchSource.CODE_COMMENT,geom/geom/inc/TGeant4SystemOfUnits.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeant4SystemOfUnits.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeant4SystemOfUnits.h:16,Energy Efficiency,charge,charge,16,"//; // Electric charge [Q]; //",MatchSource.CODE_COMMENT,geom/geom/inc/TGeant4SystemOfUnits.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeant4SystemOfUnits.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeant4SystemOfUnits.h:12,Energy Efficiency,charge,charge,12,"// positron charge",MatchSource.CODE_COMMENT,geom/geom/inc/TGeant4SystemOfUnits.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeant4SystemOfUnits.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeant4SystemOfUnits.h:12,Energy Efficiency,charge,charge,12,"// positron charge in coulomb",MatchSource.CODE_COMMENT,geom/geom/inc/TGeant4SystemOfUnits.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeant4SystemOfUnits.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeant4SystemOfUnits.h:42,Energy Efficiency,Energy,Energy,42,"// coulomb = 6.24150 e+18 * eplus; //; // Energy [E]; //",MatchSource.CODE_COMMENT,geom/geom/inc/TGeant4SystemOfUnits.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeant4SystemOfUnits.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeant4SystemOfUnits.h:3,Energy Efficiency,joule,joule,3,"// joule = 6.24150 e+12 * MeV; // symbols",MatchSource.CODE_COMMENT,geom/geom/inc/TGeant4SystemOfUnits.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeant4SystemOfUnits.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeant4SystemOfUnits.h:7,Energy Efficiency,Power,Power,7,"//; // Power [E][T^-1]; //",MatchSource.CODE_COMMENT,geom/geom/inc/TGeant4SystemOfUnits.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeant4SystemOfUnits.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeant4SystemOfUnits.h:3,Energy Efficiency,watt,watt,3,"// watt = 6.24150 e+3 * MeV/ns; //; // Force [E][L^-1]; //",MatchSource.CODE_COMMENT,geom/geom/inc/TGeant4SystemOfUnits.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeant4SystemOfUnits.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoAtt.h:7,Availability,mask,mask,7,"// bit mask",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoAtt.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoAtt.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoAtt.h:12,Performance,optimiz,optimization,12,"// tracking optimization attributes",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoAtt.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoAtt.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoAtt.h:38,Performance,optimiz,optimization,38,"// class for visibility, activity and optimization attributes for volumes/nodes",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoAtt.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoAtt.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoBoolNode.h:26,Security,access,access,26,"//! Mutex for thread data access; // methods",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoBoolNode.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoBoolNode.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoGlobalMagField.h:31,Security,access,accessed,31,"// The field manager should be accessed via TGeoGlobalMagField::Instance()",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoGlobalMagField.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoGlobalMagField.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoGlobalMagField.h:10,Security,access,access,10,"// Inline access to Field() method",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoGlobalMagField.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoGlobalMagField.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoHelix.h:32,Energy Efficiency,charge,charge,32,"// right/left-handed (+/- 1) - ""charge""",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoHelix.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoHelix.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoHelix.h:14,Energy Efficiency,charge,charge,14,"// a positive charge in B field makes a left-handed helix",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoHelix.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoHelix.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoHype.h:16,Modifiability,inherit,inherited,16,"// data members inherited from TGeoTube:; // Double_t fRmin; // inner radius at z=0; // Double_t fRmax; // outer radius at z=0; // Double_t fDz; // half length",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoHype.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoHype.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNavigator.h:4,Safety,safe,safety,4,"//! safety radius from current point",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoNavigator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNavigator.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNavigator.h:18,Safety,safe,safety,18,"//! last computed safety radius",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoNavigator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNavigator.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNavigator.h:25,Safety,safe,safety,25,"//! last point for which safety was computed",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoNavigator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNavigator.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNavigator.h:40,Safety,safe,safety,40,"//! last point for which parallel world safety was ""evaluated""",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoNavigator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNavigator.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNavigator.h:9,Safety,safe,safety,9,"//! last safety returned from parallel world (negative if invalid)",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoNavigator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNavigator.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNavigator.h:11,Safety,safe,safe,11,"//! flag a safe start for point classification",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoNavigator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNavigator.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNavigator.h:4,Performance,cache,cache,4,"//! cache of states",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoNavigator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNavigator.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNavigator.h:23,Performance,cache,cached,23,"//! current pointer to cached global matrix",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoNavigator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNavigator.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNavigator.h:54,Safety,safe,safety,54,"//! global mode is caching enabled for parallel world safety calls",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoNavigator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNavigator.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNavigator.h:132,Availability,avail,available,132,"// Check if we have a cached safety value from parallel world, and if this can still be used.; // Return negative value if no cache available.",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoNavigator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNavigator.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNavigator.h:22,Performance,cache,cached,22,"// Check if we have a cached safety value from parallel world, and if this can still be used.; // Return negative value if no cache available.",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoNavigator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNavigator.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNavigator.h:126,Performance,cache,cache,126,"// Check if we have a cached safety value from parallel world, and if this can still be used.; // Return negative value if no cache available.",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoNavigator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNavigator.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNavigator.h:29,Safety,safe,safety,29,"// Check if we have a cached safety value from parallel world, and if this can still be used.; // Return negative value if no cache available.",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoNavigator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNavigator.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNavigator.h:34,Safety,safe,safeties,34,"// disregard too small or invalid safeties",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoNavigator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNavigator.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNavigator.h:26,Performance,cache,cache,26,"// or return a reasonable cache estimate for safety",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoNavigator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNavigator.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNavigator.h:45,Safety,safe,safety,45,"// or return a reasonable cache estimate for safety",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoNavigator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNavigator.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNavigator.h:3,Integrability,Wrap,Wrapper,3,"// Wrapper for getting the safety from the parallel world.; // Takes care of caching mechanics and talking to the Safety function of parallel world.",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoNavigator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNavigator.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNavigator.h:27,Safety,safe,safety,27,"// Wrapper for getting the safety from the parallel world.; // Takes care of caching mechanics and talking to the Safety function of parallel world.",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoNavigator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNavigator.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNavigator.h:114,Safety,Safe,Safety,114,"// Wrapper for getting the safety from the parallel world.; // Takes care of caching mechanics and talking to the Safety function of parallel world.",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoNavigator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNavigator.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNavigator.h:33,Safety,safe,safety,33,"// enable/disable parallel world safety caching",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoNavigator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNavigator.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNavigator.h:38,Performance,cache,cache,38,"// void SetCache(const TGeoNodeCache *cache) {fCache = (TGeoNodeCache*)cache;}; //--- stack manipulation",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoNavigator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNavigator.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNavigator.h:71,Performance,cache,cache,71,"// void SetCache(const TGeoNodeCache *cache) {fCache = (TGeoNodeCache*)cache;}; //--- stack manipulation",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoNavigator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNavigator.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNode.h:114,Testability,log,logical,114,"////////////////////////////////////////////////////////////////////////////; // //; // TGeoNode - base class for logical nodes. They represent volumes //; // positioned inside a mother volume //; // //; ////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoNode.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNode.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNode.h:109,Modifiability,Plugin,Plugin,109,"////////////////////////////////////////////////////////////////////////////; // //; // TGeoIteratorPlugin - Plugin for a TGeoIterator providing the method //; // ProcessNode each time Next is called. //; // //; ////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoNode.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNode.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNode.h:16,Modifiability,plugin,plugins,16,"// ABC for user plugins connecter to a geometry iterator.",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoNode.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNode.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNode.h:19,Usability,resume,resume,19,"// Private flag to resume from current node.",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoNode.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNode.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNode.h:17,Modifiability,plugin,plugin,17,"// User iterator plugin",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoNode.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNode.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNode.h:3,Modifiability,Plugin,Plugin,3,"// Plugin automatically executed during next()",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoNode.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNode.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoOpticalSurface.h:17,Integrability,wrap,wrapped,17,"// rough surface wrapped in Teflon tape",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoOpticalSurface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoOpticalSurface.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoOpticalSurface.h:17,Integrability,wrap,wrapped,17,"// rough surface wrapped with ESR",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoOpticalSurface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoOpticalSurface.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoOpticalSurface.h:17,Integrability,wrap,wrapped,17,"// rough surface wrapped with ESR and coupled with opical grease",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoOpticalSurface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoOpticalSurface.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoOpticalSurface.h:20,Integrability,wrap,wrapped,20,"// polished surface wrapped in Teflon tape",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoOpticalSurface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoOpticalSurface.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoOpticalSurface.h:20,Integrability,wrap,wrapped,20,"// polished surface wrapped with ESR",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoOpticalSurface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoOpticalSurface.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoOpticalSurface.h:20,Integrability,wrap,wrapped,20,"// polished surface wrapped with ESR and coupled with opical grease",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoOpticalSurface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoOpticalSurface.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoOpticalSurface.h:20,Integrability,interface,interface,20,"// dielectric-metal interface",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoOpticalSurface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoOpticalSurface.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoOpticalSurface.h:25,Integrability,interface,interface,25,"// dielectric-dielectric interface",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoOpticalSurface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoOpticalSurface.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoOpticalSurface.h:28,Integrability,interface,interface,28,"// dielectric-Look-Up-Table interface",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoOpticalSurface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoOpticalSurface.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoOpticalSurface.h:34,Integrability,interface,interface,34,"// dielectric-Look-Up-Table DAVIS interface",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoOpticalSurface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoOpticalSurface.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoOpticalSurface.h:19,Integrability,interface,interface,19,"// dichroic filter interface",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoOpticalSurface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoOpticalSurface.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoOpticalSurface.h:3,Security,Access,Accessors,3,"// Accessors",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoOpticalSurface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoOpticalSurface.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoParallelWorld.h:19,Safety,safe,safety,19,"// a structure for safety evaluation (caching) purpose; // to be stored per 3D grid voxel",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoParallelWorld.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoParallelWorld.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoParallelWorld.h:15,Safety,safe,safety,15,"// the minimum safety from the mid-point of this voxel to any leaf bounding box",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoParallelWorld.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoParallelWorld.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoParallelWorld.h:29,Safety,safe,safety,29,"//! BVH helper structure for safety and navigation",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoParallelWorld.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoParallelWorld.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoParallelWorld.h:17,Performance,cache,cache,17,"//! A regular 3D cache layer for fast point-based safety lookups",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoParallelWorld.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoParallelWorld.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoParallelWorld.h:50,Safety,safe,safety,50,"//! A regular 3D cache layer for fast point-based safety lookups",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoParallelWorld.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoParallelWorld.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoParallelWorld.h:42,Safety,safe,safety,42,"//! stores bounding boxes serving a quick safety candidates (to be; //! used with the VoxelGrid and SafetyVoxelInfo)",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoParallelWorld.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoParallelWorld.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoParallelWorld.h:100,Safety,Safe,SafetyVoxelInfo,100,"//! stores bounding boxes serving a quick safety candidates (to be; //! used with the VoxelGrid and SafetyVoxelInfo)",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoParallelWorld.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoParallelWorld.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoParallelWorld.h:48,Performance,perform,performance,48,"// Adding overlap candidates can highly improve performance.",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoParallelWorld.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoParallelWorld.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoParallelWorld.h:56,Safety,detect,detect,56,"// The normal PW mode (without declaring overlaps) does detect them",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoParallelWorld.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoParallelWorld.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoParallelWorld.h:23,Integrability,interface,interfaces,23,"// --- main navigation interfaces ----; // FindNode",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoParallelWorld.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoParallelWorld.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoParallelWorld.h:8,Integrability,interface,interface,8,"// main interface for Safety",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoParallelWorld.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoParallelWorld.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoParallelWorld.h:22,Safety,Safe,Safety,22,"// main interface for Safety",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoParallelWorld.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoParallelWorld.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoParallelWorld.h:41,Safety,Safe,SafetyLoop,41,"// case AccelerationMode::kLoop : return SafetyLoop(point, safmax);",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoParallelWorld.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoParallelWorld.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoParallelWorld.h:8,Integrability,interface,interface,8,"// main interface for FindNextBoundary",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoParallelWorld.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoParallelWorld.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoParallelWorld.h:31,Safety,Safe,Safety,31,"// various implementations for Safety",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoParallelWorld.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoParallelWorld.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoParallelWorld.h:37,Safety,safe,safety,37,"// helper functions related to local safety caching (3D voxel grid); // Given a 3D point, returns the; // a) the min radius R such that there is at least one leaf bounding box fully enclosed; // in the sphere of radius R around point; // b) the set of leaf bounding boxes who partially lie within radius + margin; // ... using BVH",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoParallelWorld.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoParallelWorld.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoParallelWorld.h:20,Usability,simpl,simpler,20,"// .... same with a simpler, slower algorithm",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoParallelWorld.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoParallelWorld.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoPhysicalConstants.h:472,Energy Efficiency,Adapt,Adapted,472,"/*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; // ----------------------------------------------------------------------; // HEP coherent Physical Constants; // Adapted for ROOT by Marko Petric; //; // This file has been provided by Geant4 (simulation toolkit for HEP).; //; // Below is a non exhaustive list of Physical CONSTANTS,; // computed in the Internal HEP System Of Units.; //; // Most of them are extracted from the Particle Data Book :; // Phys. Rev. D volume 50 3-1 (1994) page 1233; //; //; // Author: M.Maire; //; // History:; //; // 23.02.96 Created; // 26.03.96 Added constants for standard conditions of temperature; // and pressure; also added Gas threshold.; // 29.04.08 use PDG 2006 values; // 03.11.08 use PDG 2008 values; // 02.10.17 addopted constant from CLHEP 2.3.4.3",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoPhysicalConstants.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoPhysicalConstants.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoPhysicalConstants.h:472,Modifiability,Adapt,Adapted,472,"/*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; // ----------------------------------------------------------------------; // HEP coherent Physical Constants; // Adapted for ROOT by Marko Petric; //; // This file has been provided by Geant4 (simulation toolkit for HEP).; //; // Below is a non exhaustive list of Physical CONSTANTS,; // computed in the Internal HEP System Of Units.; //; // Most of them are extracted from the Particle Data Book :; // Phys. Rev. D volume 50 3-1 (1994) page 1233; //; //; // Author: M.Maire; //; // History:; //; // 23.02.96 Created; // 26.03.96 Added constants for standard conditions of temperature; // and pressure; also added Gas threshold.; // 29.04.08 use PDG 2006 values; // 03.11.08 use PDG 2008 values; // 02.10.17 addopted constant from CLHEP 2.3.4.3",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoPhysicalConstants.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoPhysicalConstants.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoPhysicalConstants.h:23,Modifiability,coupling,coupling,23,"//; // electromagnetic coupling = 1.43996e-12 MeV*mm/(eplus^2); //",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoPhysicalConstants.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoPhysicalConstants.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoRCPtr.h:505,Deployability,Release,Release,505,"/** \class TGeoRCPtr; \ingroup Geometry_classes. A reference counting-managed pointer for classes derived from TGeoExtension; which can be used as C pointer. Based on CodeProject implementation example. ### Example:. ~~~ {.cpp}; class MyExtension : public TGeoExtension {; public:; MyExtension() : TGeoExtension(), fRC(0) {printf(""Created MyExtension\n"");}; virtual ~MyExtension() {printf(""Deleted MyExtension\n"");}. virtual TGeoExtension *Grab() const {fRC++; return (TGeoExtension*)this;}; virtual void Release() const {assert(fRC > 0); fRC--; if (fRC ==0) delete this;}; void print() const {printf(""MyExtension object %p\n"", this);}; private:; mutable Int_t fRC; // Reference counter; ClassDefOverride(MyExtension,1); };; ~~~. ### Usage:. ~~~ {.cpp}; // Module 1 creates an object; TGeoRCPtr<MyExtension> a2 = new MyExtension(); //fRC=1. // Module 2 grabs object; TGeoRCPtr<MyExtension> ptr2 = a2; //fRC=2. // Module 2 invokes a method; ptr2->Print();; (*ptr2).Print();. // Module 1 no longer needs object; a2 = 0; //RC=1. // Module 2 no longer needs object; ptr2 = 0; //object will be destroyed here; ~~~. ### Note:. Event if one forgets to call ptr2 = 0, the object gets delete when the method; using ptr2 gets out of scope.; */",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoRCPtr.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoRCPtr.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoRCPtr.h:522,Testability,assert,assert,522,"/** \class TGeoRCPtr; \ingroup Geometry_classes. A reference counting-managed pointer for classes derived from TGeoExtension; which can be used as C pointer. Based on CodeProject implementation example. ### Example:. ~~~ {.cpp}; class MyExtension : public TGeoExtension {; public:; MyExtension() : TGeoExtension(), fRC(0) {printf(""Created MyExtension\n"");}; virtual ~MyExtension() {printf(""Deleted MyExtension\n"");}. virtual TGeoExtension *Grab() const {fRC++; return (TGeoExtension*)this;}; virtual void Release() const {assert(fRC > 0); fRC--; if (fRC ==0) delete this;}; void print() const {printf(""MyExtension object %p\n"", this);}; private:; mutable Int_t fRC; // Reference counter; ClassDefOverride(MyExtension,1); };; ~~~. ### Usage:. ~~~ {.cpp}; // Module 1 creates an object; TGeoRCPtr<MyExtension> a2 = new MyExtension(); //fRC=1. // Module 2 grabs object; TGeoRCPtr<MyExtension> ptr2 = a2; //fRC=2. // Module 2 invokes a method; ptr2->Print();; (*ptr2).Print();. // Module 1 no longer needs object; a2 = 0; //RC=1. // Module 2 no longer needs object; ptr2 = 0; //object will be destroyed here; ~~~. ### Note:. Event if one forgets to call ptr2 = 0, the object gets delete when the method; using ptr2 gets out of scope.; */",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoRCPtr.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoRCPtr.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoRCPtr.h:182,Security,access,access,182,"// Some overloaded operators to facilitate dealing with an TGeoRCPtr as a conventional C pointer.; // Without these operators, one can still use the less transparent Get() method to access the pointer.",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoRCPtr.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoRCPtr.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoShape.h:21,Availability,error,error,21,"// Machine round-off error",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoShape.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoShape.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoSystemOfUnits.h:554,Energy Efficiency,Adapt,Adapted,554,"/*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; // ----------------------------------------------------------------------; // HEP coherent system of Units; //; // This file has been provided to CLHEP by Geant4 (simulation toolkit for HEP).; // Adapted to TGeo units base by Marko Petric; //; // The basic units are :; // millimeter (millimeter); // nanosecond (nanosecond); // Mega electron Volt (MeV); // positron charge (eplus); // degree Kelvin (kelvin); // the amount of substance (mole); // luminous intensity (candela); // radian (radian); // steradian (steradian); //; // Below is a non exhaustive list of derived and pratical units; // (i.e. mostly the SI units).; // You can add your own units.; //; // The SI numerical value of the positron charge is defined here,; // as it is needed for conversion factor : positron charge = e_SI (coulomb); //; // The others physical constants are defined in the header file :; // PhysicalConstants.h; //; // Authors: M.Maire, S.Giani; //; // History:; //; // 06.02.96 Created.; // 28.03.96 Added miscellaneous constants.; // 05.12.97 E.Tcherniaev: Redefined pascal (to avoid warnings on WinNT); // 20.05.98 names: meter, second, gram, radian, degree; // (from Brian.Lasiuk@yale.edu (STAR)). Added luminous units.; // 05.08.98 angstrom, picobarn, microsecond, picosecond, petaelectronvolt; // 01.03.01 parsec; // 31.01.06 kilogray, milligray, microgray; // 29.04.08 use PDG 2006 value of e_SI; // 03.11.08 use PDG 2008 value of e_SI; // 19.08.15 added liter and its sub units (mma); // 12.01.16 added symbols for microsecond (us) and picosecond (ps) (mma); // 02.10.17 addopted units from CLHEP 2.3.4.3 and converted to TGeo unit base",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoSystemOfUnits.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoSystemOfUnits.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoSystemOfUnits.h:725,Energy Efficiency,charge,charge,725,"/*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; // ----------------------------------------------------------------------; // HEP coherent system of Units; //; // This file has been provided to CLHEP by Geant4 (simulation toolkit for HEP).; // Adapted to TGeo units base by Marko Petric; //; // The basic units are :; // millimeter (millimeter); // nanosecond (nanosecond); // Mega electron Volt (MeV); // positron charge (eplus); // degree Kelvin (kelvin); // the amount of substance (mole); // luminous intensity (candela); // radian (radian); // steradian (steradian); //; // Below is a non exhaustive list of derived and pratical units; // (i.e. mostly the SI units).; // You can add your own units.; //; // The SI numerical value of the positron charge is defined here,; // as it is needed for conversion factor : positron charge = e_SI (coulomb); //; // The others physical constants are defined in the header file :; // PhysicalConstants.h; //; // Authors: M.Maire, S.Giani; //; // History:; //; // 06.02.96 Created.; // 28.03.96 Added miscellaneous constants.; // 05.12.97 E.Tcherniaev: Redefined pascal (to avoid warnings on WinNT); // 20.05.98 names: meter, second, gram, radian, degree; // (from Brian.Lasiuk@yale.edu (STAR)). Added luminous units.; // 05.08.98 angstrom, picobarn, microsecond, picosecond, petaelectronvolt; // 01.03.01 parsec; // 31.01.06 kilogray, milligray, microgray; // 29.04.08 use PDG 2006 value of e_SI; // 03.11.08 use PDG 2008 value of e_SI; // 19.08.15 added liter and its sub units (mma); // 12.01.16 added symbols for microsecond (us) and picosecond (ps) (mma); // 02.10.17 addopted units from CLHEP 2.3.4.3 and converted to TGeo unit base",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoSystemOfUnits.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoSystemOfUnits.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoSystemOfUnits.h:1061,Energy Efficiency,charge,charge,1061,"/*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; // ----------------------------------------------------------------------; // HEP coherent system of Units; //; // This file has been provided to CLHEP by Geant4 (simulation toolkit for HEP).; // Adapted to TGeo units base by Marko Petric; //; // The basic units are :; // millimeter (millimeter); // nanosecond (nanosecond); // Mega electron Volt (MeV); // positron charge (eplus); // degree Kelvin (kelvin); // the amount of substance (mole); // luminous intensity (candela); // radian (radian); // steradian (steradian); //; // Below is a non exhaustive list of derived and pratical units; // (i.e. mostly the SI units).; // You can add your own units.; //; // The SI numerical value of the positron charge is defined here,; // as it is needed for conversion factor : positron charge = e_SI (coulomb); //; // The others physical constants are defined in the header file :; // PhysicalConstants.h; //; // Authors: M.Maire, S.Giani; //; // History:; //; // 06.02.96 Created.; // 28.03.96 Added miscellaneous constants.; // 05.12.97 E.Tcherniaev: Redefined pascal (to avoid warnings on WinNT); // 20.05.98 names: meter, second, gram, radian, degree; // (from Brian.Lasiuk@yale.edu (STAR)). Added luminous units.; // 05.08.98 angstrom, picobarn, microsecond, picosecond, petaelectronvolt; // 01.03.01 parsec; // 31.01.06 kilogray, milligray, microgray; // 29.04.08 use PDG 2006 value of e_SI; // 03.11.08 use PDG 2008 value of e_SI; // 19.08.15 added liter and its sub units (mma); // 12.01.16 added symbols for microsecond (us) and picosecond (ps) (mma); // 02.10.17 addopted units from CLHEP 2.3.4.3 and converted to TGeo unit base",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoSystemOfUnits.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoSystemOfUnits.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoSystemOfUnits.h:1138,Energy Efficiency,charge,charge,1138,"/*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; // ----------------------------------------------------------------------; // HEP coherent system of Units; //; // This file has been provided to CLHEP by Geant4 (simulation toolkit for HEP).; // Adapted to TGeo units base by Marko Petric; //; // The basic units are :; // millimeter (millimeter); // nanosecond (nanosecond); // Mega electron Volt (MeV); // positron charge (eplus); // degree Kelvin (kelvin); // the amount of substance (mole); // luminous intensity (candela); // radian (radian); // steradian (steradian); //; // Below is a non exhaustive list of derived and pratical units; // (i.e. mostly the SI units).; // You can add your own units.; //; // The SI numerical value of the positron charge is defined here,; // as it is needed for conversion factor : positron charge = e_SI (coulomb); //; // The others physical constants are defined in the header file :; // PhysicalConstants.h; //; // Authors: M.Maire, S.Giani; //; // History:; //; // 06.02.96 Created.; // 28.03.96 Added miscellaneous constants.; // 05.12.97 E.Tcherniaev: Redefined pascal (to avoid warnings on WinNT); // 20.05.98 names: meter, second, gram, radian, degree; // (from Brian.Lasiuk@yale.edu (STAR)). Added luminous units.; // 05.08.98 angstrom, picobarn, microsecond, picosecond, petaelectronvolt; // 01.03.01 parsec; // 31.01.06 kilogray, milligray, microgray; // 29.04.08 use PDG 2006 value of e_SI; // 03.11.08 use PDG 2008 value of e_SI; // 19.08.15 added liter and its sub units (mma); // 12.01.16 added symbols for microsecond (us) and picosecond (ps) (mma); // 02.10.17 addopted units from CLHEP 2.3.4.3 and converted to TGeo unit base",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoSystemOfUnits.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoSystemOfUnits.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoSystemOfUnits.h:1471,Energy Efficiency,meter,meter,1471,"/*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; // ----------------------------------------------------------------------; // HEP coherent system of Units; //; // This file has been provided to CLHEP by Geant4 (simulation toolkit for HEP).; // Adapted to TGeo units base by Marko Petric; //; // The basic units are :; // millimeter (millimeter); // nanosecond (nanosecond); // Mega electron Volt (MeV); // positron charge (eplus); // degree Kelvin (kelvin); // the amount of substance (mole); // luminous intensity (candela); // radian (radian); // steradian (steradian); //; // Below is a non exhaustive list of derived and pratical units; // (i.e. mostly the SI units).; // You can add your own units.; //; // The SI numerical value of the positron charge is defined here,; // as it is needed for conversion factor : positron charge = e_SI (coulomb); //; // The others physical constants are defined in the header file :; // PhysicalConstants.h; //; // Authors: M.Maire, S.Giani; //; // History:; //; // 06.02.96 Created.; // 28.03.96 Added miscellaneous constants.; // 05.12.97 E.Tcherniaev: Redefined pascal (to avoid warnings on WinNT); // 20.05.98 names: meter, second, gram, radian, degree; // (from Brian.Lasiuk@yale.edu (STAR)). Added luminous units.; // 05.08.98 angstrom, picobarn, microsecond, picosecond, petaelectronvolt; // 01.03.01 parsec; // 31.01.06 kilogray, milligray, microgray; // 29.04.08 use PDG 2006 value of e_SI; // 03.11.08 use PDG 2008 value of e_SI; // 19.08.15 added liter and its sub units (mma); // 12.01.16 added symbols for microsecond (us) and picosecond (ps) (mma); // 02.10.17 addopted units from CLHEP 2.3.4.3 and converted to TGeo unit base",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoSystemOfUnits.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoSystemOfUnits.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoSystemOfUnits.h:554,Modifiability,Adapt,Adapted,554,"/*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; // ----------------------------------------------------------------------; // HEP coherent system of Units; //; // This file has been provided to CLHEP by Geant4 (simulation toolkit for HEP).; // Adapted to TGeo units base by Marko Petric; //; // The basic units are :; // millimeter (millimeter); // nanosecond (nanosecond); // Mega electron Volt (MeV); // positron charge (eplus); // degree Kelvin (kelvin); // the amount of substance (mole); // luminous intensity (candela); // radian (radian); // steradian (steradian); //; // Below is a non exhaustive list of derived and pratical units; // (i.e. mostly the SI units).; // You can add your own units.; //; // The SI numerical value of the positron charge is defined here,; // as it is needed for conversion factor : positron charge = e_SI (coulomb); //; // The others physical constants are defined in the header file :; // PhysicalConstants.h; //; // Authors: M.Maire, S.Giani; //; // History:; //; // 06.02.96 Created.; // 28.03.96 Added miscellaneous constants.; // 05.12.97 E.Tcherniaev: Redefined pascal (to avoid warnings on WinNT); // 20.05.98 names: meter, second, gram, radian, degree; // (from Brian.Lasiuk@yale.edu (STAR)). Added luminous units.; // 05.08.98 angstrom, picobarn, microsecond, picosecond, petaelectronvolt; // 01.03.01 parsec; // 31.01.06 kilogray, milligray, microgray; // 29.04.08 use PDG 2006 value of e_SI; // 03.11.08 use PDG 2008 value of e_SI; // 19.08.15 added liter and its sub units (mma); // 12.01.16 added symbols for microsecond (us) and picosecond (ps) (mma); // 02.10.17 addopted units from CLHEP 2.3.4.3 and converted to TGeo unit base",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoSystemOfUnits.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoSystemOfUnits.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoSystemOfUnits.h:1426,Safety,avoid,avoid,1426,"/*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; // ----------------------------------------------------------------------; // HEP coherent system of Units; //; // This file has been provided to CLHEP by Geant4 (simulation toolkit for HEP).; // Adapted to TGeo units base by Marko Petric; //; // The basic units are :; // millimeter (millimeter); // nanosecond (nanosecond); // Mega electron Volt (MeV); // positron charge (eplus); // degree Kelvin (kelvin); // the amount of substance (mole); // luminous intensity (candela); // radian (radian); // steradian (steradian); //; // Below is a non exhaustive list of derived and pratical units; // (i.e. mostly the SI units).; // You can add your own units.; //; // The SI numerical value of the positron charge is defined here,; // as it is needed for conversion factor : positron charge = e_SI (coulomb); //; // The others physical constants are defined in the header file :; // PhysicalConstants.h; //; // Authors: M.Maire, S.Giani; //; // History:; //; // 06.02.96 Created.; // 28.03.96 Added miscellaneous constants.; // 05.12.97 E.Tcherniaev: Redefined pascal (to avoid warnings on WinNT); // 20.05.98 names: meter, second, gram, radian, degree; // (from Brian.Lasiuk@yale.edu (STAR)). Added luminous units.; // 05.08.98 angstrom, picobarn, microsecond, picosecond, petaelectronvolt; // 01.03.01 parsec; // 31.01.06 kilogray, milligray, microgray; // 29.04.08 use PDG 2006 value of e_SI; // 03.11.08 use PDG 2008 value of e_SI; // 19.08.15 added liter and its sub units (mma); // 12.01.16 added symbols for microsecond (us) and picosecond (ps) (mma); // 02.10.17 addopted units from CLHEP 2.3.4.3 and converted to TGeo unit base",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoSystemOfUnits.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoSystemOfUnits.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoSystemOfUnits.h:16,Energy Efficiency,charge,charge,16,"//; // Electric charge [Q]; //",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoSystemOfUnits.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoSystemOfUnits.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoSystemOfUnits.h:12,Energy Efficiency,charge,charge,12,"// positron charge",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoSystemOfUnits.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoSystemOfUnits.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoSystemOfUnits.h:12,Energy Efficiency,charge,charge,12,"// positron charge in coulomb",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoSystemOfUnits.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoSystemOfUnits.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoSystemOfUnits.h:42,Energy Efficiency,Energy,Energy,42,"// coulomb = 6.24150 e+18 * eplus; //; // Energy [E]; //",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoSystemOfUnits.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoSystemOfUnits.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoSystemOfUnits.h:3,Energy Efficiency,joule,joule,3,"// joule = 6.24150 e+12 * MeV; // symbols",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoSystemOfUnits.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoSystemOfUnits.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoSystemOfUnits.h:7,Energy Efficiency,Power,Power,7,"//; // Power [E][T^-1]; //",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoSystemOfUnits.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoSystemOfUnits.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoSystemOfUnits.h:3,Energy Efficiency,watt,watt,3,"// watt = 6.24150 e+3 * MeV/ns; //; // Force [E][L^-1]; //",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoSystemOfUnits.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoSystemOfUnits.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoVolume.h:4,Deployability,TOGGLE,TOGGLE,4,"// *TOGGLE* *GETTER=IsRaytracing",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoVolume.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoVolume.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoVolume.h:4,Deployability,TOGGLE,TOGGLE,4,"// *TOGGLE* *GETTER=IsTopVolume",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoVolume.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoVolume.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoVolume.h:4,Deployability,TOGGLE,TOGGLE,4,"// *TOGGLE* *GETTER=IsVisible",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoVolume.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoVolume.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoVolume.h:4,Deployability,TOGGLE,TOGGLE,4,"// *TOGGLE* *GETTER=IsVisContainers",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoVolume.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoVolume.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoVolume.h:4,Deployability,TOGGLE,TOGGLE,4,"// *TOGGLE* *GETTER=IsVisLeaves",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoVolume.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoVolume.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoVolume.h:4,Deployability,TOGGLE,TOGGLE,4,"// *TOGGLE* *GETTER=IsVisOnly",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoVolume.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoVolume.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoVolume.h:4,Deployability,TOGGLE,TOGGLE,4,"// *TOGGLE* *GETTER=IsVisibleDaughters",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoVolume.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoVolume.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoVolume.h:4,Deployability,TOGGLE,TOGGLE,4,"// *TOGGLE* *GETTER=IsAllInvisible",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoVolume.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoVolume.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoVolume.h:14,Performance,concurren,concurrent,14,"//! Mutex for concurrent operations",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoVolume.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoVolume.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoVoxelGrid.h:5,Usability,simpl,simple,5,"// a simple structure to encode voxel indices, to address; // individual voxels in the 3D grid.",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoVoxelGrid.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoVoxelGrid.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoVoxelGrid.h:3,Security,Access,Access,3,"// Access a voxel given a 3D point P",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoVoxelGrid.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoVoxelGrid.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoVoxelGrid.h:3,Performance,cache,cached,3,"// cached value for voxel half diagonal length",MatchSource.CODE_COMMENT,geom/geom/inc/TGeoVoxelGrid.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoVoxelGrid.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TVirtualGeoConverter.h:12,Integrability,interface,interface,12,"// Abstract interface for geometry converters",MatchSource.CODE_COMMENT,geom/geom/inc/TVirtualGeoConverter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TVirtualGeoConverter.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TVirtualGeoPainter.h:55,Availability,down,down,55,"// default visualization - everything visible 3 levels down",MatchSource.CODE_COMMENT,geom/geom/inc/TVirtualGeoPainter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TVirtualGeoPainter.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TVirtualGeoPainter.h:12,Integrability,interface,interface,12,"// Abstract interface for geometry painters",MatchSource.CODE_COMMENT,geom/geom/inc/TVirtualGeoPainter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TVirtualGeoPainter.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/binned_sah_builder.h:24,Availability,down,down,24,"/// Single-threaded top-down builder that partitions primitives based on a binned approximation of; /// the Surface Area Heuristic (SAH). This builder is inspired by; /// ""On Fast Construction of SAH-based Bounding Volume Hierarchies"", by I. Wald.",MatchSource.CODE_COMMENT,geom/geom/inc/bvh/v2/binned_sah_builder.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/binned_sah_builder.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/bvh.h:395,Availability,robust,robust,395,"/// Intersects the BVH with a single ray, using the given function to intersect the contents; /// of a leaf. The algorithm starts at the node index `start` and uses the given stack object.; /// When `IsAnyHit` is true, the function stops at the first intersection (useful for shadow; /// rays), otherwise it finds the closest intersection. When `IsRobust` is true, a slower but; /// numerically robust ray-box test is used, otherwise a fast, but less precise test is used.",MatchSource.CODE_COMMENT,geom/geom/inc/bvh/v2/bvh.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/bvh.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/bvh.h:410,Testability,test,test,410,"/// Intersects the BVH with a single ray, using the given function to intersect the contents; /// of a leaf. The algorithm starts at the node index `start` and uses the given stack object.; /// When `IsAnyHit` is true, the function stops at the first intersection (useful for shadow; /// rays), otherwise it finds the closest intersection. When `IsRobust` is true, a slower but; /// numerically robust ray-box test is used, otherwise a fast, but less precise test is used.",MatchSource.CODE_COMMENT,geom/geom/inc/bvh/v2/bvh.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/bvh.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/bvh.h:459,Testability,test,test,459,"/// Intersects the BVH with a single ray, using the given function to intersect the contents; /// of a leaf. The algorithm starts at the node index `start` and uses the given stack object.; /// When `IsAnyHit` is true, the function stops at the first intersection (useful for shadow; /// rays), otherwise it finds the closest intersection. When `IsRobust` is true, a slower but; /// numerically robust ray-box test is used, otherwise a fast, but less precise test is used.",MatchSource.CODE_COMMENT,geom/geom/inc/bvh/v2/bvh.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/bvh.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/bvh.h:67,Security,access,access,67,"// Note: This may invalidate `dst_node` so has to happen after any access to it.",MatchSource.CODE_COMMENT,geom/geom/inc/bvh/v2/bvh.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/bvh.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/default_builder.h:27,Integrability,wrap,wrapper,27,"/// This builder is only a wrapper around all the other builders, which selects the best builder; /// depending on the desired BVH quality and whether a multi-threaded build is desired.",MatchSource.CODE_COMMENT,geom/geom/inc/bvh/v2/default_builder.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/default_builder.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/default_builder.h:102,Integrability,depend,depending,102,"/// This builder is only a wrapper around all the other builders, which selects the best builder; /// depending on the desired BVH quality and whether a multi-threaded build is desired.",MatchSource.CODE_COMMENT,geom/geom/inc/bvh/v2/default_builder.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/default_builder.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/default_builder.h:153,Performance,multi-thread,multi-threaded,153,"/// This builder is only a wrapper around all the other builders, which selects the best builder; /// depending on the desired BVH quality and whether a multi-threaded build is desired.",MatchSource.CODE_COMMENT,geom/geom/inc/bvh/v2/default_builder.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/default_builder.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/index.h:557,Safety,avoid,avoid,557,"/// Packed index data structure. This index can either refer to a range of primitives for a BVH; /// leaf, or to the children of a BVH node. In either case, the index corresponds to a contiguous; /// range, which means that:; ///; /// - For leaves, primitives in a BVH node should be accessed via:; ///; /// size_t begin = index.first_id();; /// size_t end = begin + index.prim_count();; /// for (size_t i = begin; i < end; ++i) {; /// size_t prim_id = bvh.prim_ids[i];; /// // ...; /// }; ///; /// Note that for efficiency, reordering the original data to avoid the indirection via; /// `bvh.prim_ids` is preferable.; ///; /// - For inner nodes, children should be accessed via:; ///; /// auto& left_child = bvh.nodes[index.first_id()];; /// auto& right_child = bvh.nodes[index.first_id() + 1];; ///",MatchSource.CODE_COMMENT,geom/geom/inc/bvh/v2/index.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/index.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/index.h:284,Security,access,accessed,284,"/// Packed index data structure. This index can either refer to a range of primitives for a BVH; /// leaf, or to the children of a BVH node. In either case, the index corresponds to a contiguous; /// range, which means that:; ///; /// - For leaves, primitives in a BVH node should be accessed via:; ///; /// size_t begin = index.first_id();; /// size_t end = begin + index.prim_count();; /// for (size_t i = begin; i < end; ++i) {; /// size_t prim_id = bvh.prim_ids[i];; /// // ...; /// }; ///; /// Note that for efficiency, reordering the original data to avoid the indirection via; /// `bvh.prim_ids` is preferable.; ///; /// - For inner nodes, children should be accessed via:; ///; /// auto& left_child = bvh.nodes[index.first_id()];; /// auto& right_child = bvh.nodes[index.first_id() + 1];; ///",MatchSource.CODE_COMMENT,geom/geom/inc/bvh/v2/index.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/index.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/index.h:666,Security,access,accessed,666,"/// Packed index data structure. This index can either refer to a range of primitives for a BVH; /// leaf, or to the children of a BVH node. In either case, the index corresponds to a contiguous; /// range, which means that:; ///; /// - For leaves, primitives in a BVH node should be accessed via:; ///; /// size_t begin = index.first_id();; /// size_t end = begin + index.prim_count();; /// for (size_t i = begin; i < end; ++i) {; /// size_t prim_id = bvh.prim_ids[i];; /// // ...; /// }; ///; /// Note that for efficiency, reordering the original data to avoid the indirection via; /// `bvh.prim_ids` is preferable.; ///; /// - For inner nodes, children should be accessed via:; ///; /// auto& left_child = bvh.nodes[index.first_id()];; /// auto& right_child = bvh.nodes[index.first_id() + 1];; ///",MatchSource.CODE_COMMENT,geom/geom/inc/bvh/v2/index.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/index.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/mini_tree_builder.h:23,Availability,down,down,23,"/// Multi-threaded top-down builder that partitions primitives using a grid. Multiple instances; /// of a single-threaded builder are run in parallel on that partition, generating many small; /// trees. Finally, a top-level tree is built on these smaller trees to form the final BVH.; /// This builder is inspired by; /// ""Rapid Bounding Volume Hierarchy Generation using Mini Trees"", by P. Ganestam et al.",MatchSource.CODE_COMMENT,geom/geom/inc/bvh/v2/mini_tree_builder.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/mini_tree_builder.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/mini_tree_builder.h:4,Performance,Multi-thread,Multi-threaded,4,"/// Multi-threaded top-down builder that partitions primitives using a grid. Multiple instances; /// of a single-threaded builder are run in parallel on that partition, generating many small; /// trees. Finally, a top-level tree is built on these smaller trees to form the final BVH.; /// This builder is inspired by; /// ""Rapid Bounding Volume Hierarchy Generation using Mini Trees"", by P. Ganestam et al.",MatchSource.CODE_COMMENT,geom/geom/inc/bvh/v2/mini_tree_builder.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/mini_tree_builder.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/mini_tree_builder.h:4,Testability,Log,Log,4,"/// Log of the dimension of the grid used to split the workload horizontally.",MatchSource.CODE_COMMENT,geom/geom/inc/bvh/v2/mini_tree_builder.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/mini_tree_builder.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/mini_tree_builder.h:80,Performance,multi-thread,multi-threaded,80,"/// Starts building a BVH with the given primitive data. The build algorithm is multi-threaded,; /// and runs on the given thread pool.",MatchSource.CODE_COMMENT,geom/geom/inc/bvh/v2/mini_tree_builder.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/mini_tree_builder.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/node.h:112,Integrability,depend,depend,112,"/// Bounds of the node, laid out in memory as `[min_x, max_x, min_y, max_y, ...]`. Users should; /// not really depend on a specific order and instead use `get_bbox()` and extract the `min`; /// and/or `max` components accordingly.",MatchSource.CODE_COMMENT,geom/geom/inc/bvh/v2/node.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/node.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/node.h:4,Availability,Robust,Robust,4,"/// Robust ray-node intersection routine. See ""Robust BVH Ray Traversal"", by T. Ize.",MatchSource.CODE_COMMENT,geom/geom/inc/bvh/v2/node.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/node.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/node.h:47,Availability,Robust,Robust,47,"/// Robust ray-node intersection routine. See ""Robust BVH Ray Traversal"", by T. Ize.",MatchSource.CODE_COMMENT,geom/geom/inc/bvh/v2/node.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/node.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/node.h:33,Integrability,rout,routine,33,"/// Robust ray-node intersection routine. See ""Robust BVH Ray Traversal"", by T. Ize.",MatchSource.CODE_COMMENT,geom/geom/inc/bvh/v2/node.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/node.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/ray.h:53,Availability,Robust,Robust,53,"// Pads the inverse direction according to T. Ize's ""Robust BVH ray traversal""",MatchSource.CODE_COMMENT,geom/geom/inc/bvh/v2/ray.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/ray.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/reinsertion_optimizer.h:39,Performance,optimiz,optimize,39,"/// Fraction of the number of nodes to optimize per iteration.",MatchSource.CODE_COMMENT,geom/geom/inc/bvh/v2/reinsertion_optimizer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/reinsertion_optimizer.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/split_heuristic.h:49,Availability,down,down,49,"/// Creates an SAH evaluator object, used by top-down builders to determine where to split.; /// The two parameters are the log of the size of primitive clusters in base 2, and the ratio of; /// the cost of intersecting a node (a ray-box intersection) over the cost of intersecting a; /// primitive.",MatchSource.CODE_COMMENT,geom/geom/inc/bvh/v2/split_heuristic.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/split_heuristic.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/split_heuristic.h:124,Testability,log,log,124,"/// Creates an SAH evaluator object, used by top-down builders to determine where to split.; /// The two parameters are the log of the size of primitive clusters in base 2, and the ratio of; /// the cost of intersecting a node (a ray-box intersection) over the cost of intersecting a; /// primitive.",MatchSource.CODE_COMMENT,geom/geom/inc/bvh/v2/split_heuristic.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/split_heuristic.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/stack.h:120,Integrability,depend,depending,120,"/// Growing stack that can be used for BVH traversal. Its performance may be lower than a small,; /// fixed-size stack, depending on the architecture.",MatchSource.CODE_COMMENT,geom/geom/inc/bvh/v2/stack.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/stack.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/stack.h:58,Performance,perform,performance,58,"/// Growing stack that can be used for BVH traversal. Its performance may be lower than a small,; /// fixed-size stack, depending on the architecture.",MatchSource.CODE_COMMENT,geom/geom/inc/bvh/v2/stack.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/stack.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/stream.h:11,Energy Efficiency,adapt,adapter,11,"/// Stream adapter for standard library input streams.",MatchSource.CODE_COMMENT,geom/geom/inc/bvh/v2/stream.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/stream.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/stream.h:11,Integrability,adapter,adapter,11,"/// Stream adapter for standard library input streams.",MatchSource.CODE_COMMENT,geom/geom/inc/bvh/v2/stream.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/stream.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/stream.h:11,Modifiability,adapt,adapter,11,"/// Stream adapter for standard library input streams.",MatchSource.CODE_COMMENT,geom/geom/inc/bvh/v2/stream.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/stream.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/stream.h:11,Energy Efficiency,adapt,adapter,11,"/// Stream adapter for standard library output streams.",MatchSource.CODE_COMMENT,geom/geom/inc/bvh/v2/stream.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/stream.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/stream.h:11,Integrability,adapter,adapter,11,"/// Stream adapter for standard library output streams.",MatchSource.CODE_COMMENT,geom/geom/inc/bvh/v2/stream.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/stream.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/stream.h:11,Modifiability,adapt,adapter,11,"/// Stream adapter for standard library output streams.",MatchSource.CODE_COMMENT,geom/geom/inc/bvh/v2/stream.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/stream.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/sweep_sah_builder.h:24,Availability,down,down,24,"/// Single-threaded top-down builder that partitions primitives based on the Surface; /// Area Heuristic (SAH). Primitives are only sorted once along each axis.",MatchSource.CODE_COMMENT,geom/geom/inc/bvh/v2/sweep_sah_builder.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/sweep_sah_builder.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/top_down_sah_builder.h:38,Availability,down,down,38,"/// Base class for all SAH-based, top-down builders.",MatchSource.CODE_COMMENT,geom/geom/inc/bvh/v2/top_down_sah_builder.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/top_down_sah_builder.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/utils.h:43,Testability,log,log,43,"/// Computes the (rounded-up) compile-time log in base-2 of an unsigned integer.",MatchSource.CODE_COMMENT,geom/geom/inc/bvh/v2/utils.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/utils.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/utils.h:43,Modifiability,variab,variable,43,"/// Computes the maximum between an atomic variable and a value, and returns the value previously; /// held by the atomic variable.",MatchSource.CODE_COMMENT,geom/geom/inc/bvh/v2/utils.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/utils.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/utils.h:122,Modifiability,variab,variable,122,"/// Computes the maximum between an atomic variable and a value, and returns the value previously; /// held by the atomic variable.",MatchSource.CODE_COMMENT,geom/geom/inc/bvh/v2/utils.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/utils.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/vec.h:44,Availability,robust,robust,44,"// Note: These functions are designed to be robust to NaNs",MatchSource.CODE_COMMENT,geom/geom/inc/bvh/v2/vec.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/vec.h
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoArb8.cxx:807,Integrability,depend,dependent,807,"/** \class TGeoArb8; \ingroup Trapezoids. \brief An arbitrary trapezoid with less than 8 vertices standing on two parallel planes perpendicular to Z axis. An `Arb8` is defined by two quadrilaterals sitting on parallel planes,; at `dZ`. These are defined each by 4 vertices having the coordinates; `(Xi,Yi,+/-dZ)`,` i=0`,` 3`. The lateral surface of the `Arb8` is; defined by the 4 pairs of edges corresponding to vertices (`i,i+1`) on; both `-dZ` and `+dZ`. If M and M' are the middles of the segments; `(i,i+1)` at `-dZ` and `+dZ`, a lateral surface is obtained by sweeping; the edge at `-dZ` along MM' so that it will match the corresponding one; at `+dZ`. Since the points defining the edges are arbitrary, the lateral; surfaces are not necessary planes - but twisted planes having a twist; angle linear-dependent on Z. ~~~ {.cpp}; TGeoArb8::TGeoArb8(Double_t dz,Double_t ivert);; ~~~. - `dz:` half-length in Z;; - `ivert = [0,7]`. Vertices have to be defined clockwise in the XY pane, both at `+dz` and; `-dz`. The quadrilateral at `-dz` is defined by indices [0,3], whereas; the one at `+dz` by vertices [4,7]. The vertex with `index=7` has to be; defined last, since it triggers the computation of the bounding box of; the shape. Any two or more vertices in each Z plane can have the same; (X,Y) coordinates. It this case, the top and bottom quadrilaterals; become triangles, segments or points. The lateral surfaces are not; necessary defined by a pair of segments, but by pair segment-point; (making a triangle) or point-point (making a line). Any choice is valid; as long as at one of the end-caps is at least a triangle. Begin_Macro; {; TCanvas *c = new TCanvas(""c"", ""c"",0,0,600,600);; new TGeoManager(""arb8"", ""poza12"");; TGeoMaterial *mat = new TGeoMaterial(""Al"", 26.98,13,2.7);; TGeoMedium *med = new TGeoMedium(""MED"",1,mat);; TGeoVolume *top = gGeoManager->MakeBox(""TOP"",med,100,100,100);; gGeoManager->SetTopVolume(top);; TGeoArb8 *arb = new TGeoArb8(20);; arb->SetVertex(0,-30,-25);; ar",MatchSource.CODE_COMMENT,geom/geom/src/TGeoArb8.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoArb8.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoArb8.cxx:3,Safety,safe,safe,3,"// safe = TMath::Sqrt(safe);",MatchSource.CODE_COMMENT,geom/geom/src/TGeoArb8.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoArb8.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoArb8.cxx:22,Safety,safe,safe,22,"// safe = TMath::Sqrt(safe);",MatchSource.CODE_COMMENT,geom/geom/src/TGeoArb8.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoArb8.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoArb8.cxx:61,Availability,toler,tolerance,61,"// Get the closest edge (point should be on this edge within tolerance)",MatchSource.CODE_COMMENT,geom/geom/src/TGeoArb8.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoArb8.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoArb8.cxx:86,Safety,avoid,avoid,86,"// If point is on one edge, fn may be very small and the normal does not make sense - avoid divzero",MatchSource.CODE_COMMENT,geom/geom/src/TGeoArb8.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoArb8.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoArb8.cxx:86,Testability,Test,Test,86,"////////////////////////////////////////////////////////////////////////////////; /// Test if point is inside this shape.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoArb8.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoArb8.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoArb8.cxx:2,Safety,safe,safe,2,/*safe*/,MatchSource.CODE_COMMENT,geom/geom/src/TGeoArb8.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoArb8.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoArb8.cxx:2,Safety,safe,safe,2,/*safe*/,MatchSource.CODE_COMMENT,geom/geom/src/TGeoArb8.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoArb8.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoArb8.cxx:95,Safety,safe,safety,95,"////////////////////////////////////////////////////////////////////////////////; /// Estimate safety to lateral plane defined by segment iseg in range [0,3]; /// Might be negative: plane seen only from inside.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoArb8.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoArb8.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoArb8.cxx:94,Safety,safe,safe,94,"////////////////////////////////////////////////////////////////////////////////; /// Compute safe distance from each of the points in the input array.; /// Input: Array of point coordinates, array of statuses for these points, size of the arrays; /// Output: Safety values",MatchSource.CODE_COMMENT,geom/geom/src/TGeoArb8.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoArb8.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoArb8.cxx:260,Safety,Safe,Safety,260,"////////////////////////////////////////////////////////////////////////////////; /// Compute safe distance from each of the points in the input array.; /// Input: Array of point coordinates, array of statuses for these points, size of the arrays; /// Output: Safety values",MatchSource.CODE_COMMENT,geom/geom/src/TGeoArb8.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoArb8.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoArb8.cxx:11,Safety,safe,safe,11,"// compute safe distance",MatchSource.CODE_COMMENT,geom/geom/src/TGeoArb8.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoArb8.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoArb8.cxx:106,Safety,safe,safe,106,"// compute distance to get outside this shape; // return TGeoArb8::DistFromInside(point, dir, iact, step, safe);; // compute distance to plane ipl :; // ipl=0 : points 0,4,1,5; // ipl=1 : points 1,5,2,6; // ipl=2 : points 2,6,3,7; // ipl=3 : points 3,7,0,4",MatchSource.CODE_COMMENT,geom/geom/src/TGeoArb8.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoArb8.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoArb8.cxx:11,Safety,safe,safe,11,"// compute safe distance",MatchSource.CODE_COMMENT,geom/geom/src/TGeoArb8.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoArb8.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoArb8.cxx:15,Safety,safe,safety,15,"//---> compute safety for lateral planes",MatchSource.CODE_COMMENT,geom/geom/src/TGeoArb8.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoArb8.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoArb8.cxx:94,Safety,safe,safe,94,"////////////////////////////////////////////////////////////////////////////////; /// Compute safe distance from each of the points in the input array.; /// Input: Array of point coordinates, array of statuses for these points, size of the arrays; /// Output: Safety values",MatchSource.CODE_COMMENT,geom/geom/src/TGeoArb8.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoArb8.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoArb8.cxx:260,Safety,Safe,Safety,260,"////////////////////////////////////////////////////////////////////////////////; /// Compute safe distance from each of the points in the input array.; /// Input: Array of point coordinates, array of statuses for these points, size of the arrays; /// Output: Safety values",MatchSource.CODE_COMMENT,geom/geom/src/TGeoArb8.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoArb8.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoArb8.cxx:11,Safety,safe,safe,11,"// compute safe distance",MatchSource.CODE_COMMENT,geom/geom/src/TGeoArb8.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoArb8.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoArb8.cxx:11,Safety,safe,safe,11,"// compute safe distance",MatchSource.CODE_COMMENT,geom/geom/src/TGeoArb8.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoArb8.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoArb8.cxx:94,Safety,safe,safe,94,"////////////////////////////////////////////////////////////////////////////////; /// Compute safe distance from each of the points in the input array.; /// Input: Array of point coordinates, array of statuses for these points, size of the arrays; /// Output: Safety values",MatchSource.CODE_COMMENT,geom/geom/src/TGeoArb8.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoArb8.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoArb8.cxx:260,Safety,Safe,Safety,260,"////////////////////////////////////////////////////////////////////////////////; /// Compute safe distance from each of the points in the input array.; /// Input: Array of point coordinates, array of statuses for these points, size of the arrays; /// Output: Safety values",MatchSource.CODE_COMMENT,geom/geom/src/TGeoArb8.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoArb8.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoAtt.cxx:90,Performance,optimiz,optimization,90,"////////////////////////////////////////////////////////////////////////////////; /// Set optimization flags.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoAtt.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoAtt.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBBox.cxx:676,Modifiability,inherit,inherit,676,"// @(#)root/geom:$Id$// Author: Andrei Gheata 24/10/01; // Contains() and DistFromOutside/Out() implemented by Mihaela Gheata; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGeoBBox; \ingroup Shapes_classes; \brief Box class. - [Building boxes](\ref GEOB00); - [Creation of boxes](\ref GEOB01); - [Divisions of boxes](\ref GEOB02). All shape primitives inherit from this, their; constructor filling automatically the parameters of the box that bounds; the given shape. Defined by 6 parameters :. ```; TGeoBBox(Double_t dx,Double_t dy,Double_t dz,Double_t *origin=0);; ```. - `fDX`, `fDY`, `fDZ` : half lengths on X, Y and Z axis; - `fOrigin[3]` : position of box origin. \anchor GEOB00; ### Building boxes. Normally a box has to be built only with 3 parameters: `DX,DY,DZ`; representing the half-lengths on X, Y and Z-axes. In this case, the; origin of the box will match the one of its reference frame and the box; will range from: `-DX` to `DX` on X-axis, from `-DY` to `DY` on Y and; from `-DZ` to `DZ` on Z. On the other hand, any other shape needs to; compute and store the parameters of their minimal bounding box. The; bounding boxes are essential to optimize navigation algorithms.; Therefore all other primitives derive from **`TGeoBBox`**. Since the; minimal bounding box is not necessary centered in the origin, any box; allows an origin translation `(Ox`,`Oy`,`Oz)`. All primitive; constructors automatically compute the bounding box parameters. Users; should be aware that building a translated box that will represent a; primitive shape by itself would affect any further positioning of other; shapes inside. Therefore it is highly recommendable to build; non-tran",MatchSource.CODE_COMMENT,geom/geom/src/TGeoBBox.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBBox.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBBox.cxx:1481,Performance,optimiz,optimize,1481,"*****/; /** \class TGeoBBox; \ingroup Shapes_classes; \brief Box class. - [Building boxes](\ref GEOB00); - [Creation of boxes](\ref GEOB01); - [Divisions of boxes](\ref GEOB02). All shape primitives inherit from this, their; constructor filling automatically the parameters of the box that bounds; the given shape. Defined by 6 parameters :. ```; TGeoBBox(Double_t dx,Double_t dy,Double_t dz,Double_t *origin=0);; ```. - `fDX`, `fDY`, `fDZ` : half lengths on X, Y and Z axis; - `fOrigin[3]` : position of box origin. \anchor GEOB00; ### Building boxes. Normally a box has to be built only with 3 parameters: `DX,DY,DZ`; representing the half-lengths on X, Y and Z-axes. In this case, the; origin of the box will match the one of its reference frame and the box; will range from: `-DX` to `DX` on X-axis, from `-DY` to `DY` on Y and; from `-DZ` to `DZ` on Z. On the other hand, any other shape needs to; compute and store the parameters of their minimal bounding box. The; bounding boxes are essential to optimize navigation algorithms.; Therefore all other primitives derive from **`TGeoBBox`**. Since the; minimal bounding box is not necessary centered in the origin, any box; allows an origin translation `(Ox`,`Oy`,`Oz)`. All primitive; constructors automatically compute the bounding box parameters. Users; should be aware that building a translated box that will represent a; primitive shape by itself would affect any further positioning of other; shapes inside. Therefore it is highly recommendable to build; non-translated boxes as primitives and translate/rotate their; corresponding volumes only during positioning stage. \anchor GEOB01; #### Creation of boxes. ```; TGeoBBox *box = new TGeoBBox(""BOX"", 20, 30, 40);; ```. Begin_Macro; {; TCanvas *c = new TCanvas(""c"", ""c"",0,0,600,600);; new TGeoManager(""box"", ""poza1"");; TGeoMaterial *mat = new TGeoMaterial(""Al"", 26.98,13,2.7);; TGeoMedium *med = new TGeoMedium(""MED"",1,mat);; TGeoVolume *top = gGeoManager->MakeBox(""TOP"",med,100,100,100);;",MatchSource.CODE_COMMENT,geom/geom/src/TGeoBBox.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBBox.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBBox.cxx:86,Testability,Test,Test,86,"////////////////////////////////////////////////////////////////////////////////; /// Test if point is inside this shape.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoBBox.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBBox.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBBox.cxx:158,Safety,safe,safe,158,"////////////////////////////////////////////////////////////////////////////////; /// Compute distance from inside point to surface of the box.; /// Boundary safe algorithm.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoBBox.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBBox.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBBox.cxx:11,Safety,safe,safe,11,"// compute safe distance",MatchSource.CODE_COMMENT,geom/geom/src/TGeoBBox.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBBox.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBBox.cxx:158,Safety,safe,safe,158,"////////////////////////////////////////////////////////////////////////////////; /// Compute distance from inside point to surface of the box.; /// Boundary safe algorithm.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoBBox.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBBox.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBBox.cxx:159,Safety,safe,safe,159,"////////////////////////////////////////////////////////////////////////////////; /// Compute distance from outside point to surface of the box.; /// Boundary safe algorithm.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoBBox.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBBox.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBBox.cxx:11,Safety,safe,safe,11,"// compute safe distance",MatchSource.CODE_COMMENT,geom/geom/src/TGeoBBox.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBBox.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBBox.cxx:159,Safety,safe,safe,159,"////////////////////////////////////////////////////////////////////////////////; /// Compute distance from outside point to surface of the box.; /// Boundary safe algorithm.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoBBox.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBBox.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBBox.cxx:94,Safety,safe,safe,94,"////////////////////////////////////////////////////////////////////////////////; /// Compute safe distance from each of the points in the input array.; /// Input: Array of point coordinates, array of statuses for these points, size of the arrays; /// Output: Safety values",MatchSource.CODE_COMMENT,geom/geom/src/TGeoBBox.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBBox.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBBox.cxx:260,Safety,Safe,Safety,260,"////////////////////////////////////////////////////////////////////////////////; /// Compute safe distance from each of the points in the input array.; /// Input: Array of point coordinates, array of statuses for these points, size of the arrays; /// Output: Safety values",MatchSource.CODE_COMMENT,geom/geom/src/TGeoBBox.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBBox.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBoolNode.cxx:75,Availability,Error,Error,75,"/*; std::lock_guard<std::mutex> guard(fMutex);; if (tid >= fThreadSize) {; Error(""GetThreadData"", ""Thread id=%d bigger than maximum declared thread number %d. \nUse; TGeoManager::SetMaxThreads properly !!!"", tid, fThreadSize);; }; if (tid >= fThreadSize); {; fThreadData.resize(tid + 1);; fThreadSize = tid + 1;; }; if (fThreadData[tid] == 0); {; if (fThreadData[tid] == 0); fThreadData[tid] = new ThreadData_t;; }; */",MatchSource.CODE_COMMENT,geom/geom/src/TGeoBoolNode.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBoolNode.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBoolNode.cxx:206,Performance,load,loading,206,"// Components of composite shape hierarchies for local frame viewers are painted; // in coordinate frame of the top level composite shape. So we force; // conversion to this. See TGeoPainter::PaintNode for loading of GLMatrix.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoBoolNode.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBoolNode.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBoolNode.cxx:23,Performance,perform,perform,23,"// keep a copy; // Now perform fetch and add of the two components buffers.; // Note we assume that composite shapes are always completely added; // so don't bother to get addDaughters flag from viewer->AddObject(); // Setup matrix and fetch/add the left component buffer",MatchSource.CODE_COMMENT,geom/geom/src/TGeoBoolNode.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBoolNode.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBoolNode.cxx:11,Safety,safe,safe,11,"// compute safe distance",MatchSource.CODE_COMMENT,geom/geom/src/TGeoBoolNode.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBoolNode.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBoolNode.cxx:11,Safety,safe,safe,11,"// compute safe distance",MatchSource.CODE_COMMENT,geom/geom/src/TGeoBoolNode.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBoolNode.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBoolNode.cxx:94,Safety,safe,safety,94,"////////////////////////////////////////////////////////////////////////////////; /// Compute safety distance for a union node;",MatchSource.CODE_COMMENT,geom/geom/src/TGeoBoolNode.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBoolNode.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBoolNode.cxx:11,Safety,safe,safe,11,"// compute safe distance",MatchSource.CODE_COMMENT,geom/geom/src/TGeoBoolNode.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBoolNode.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBoolNode.cxx:11,Safety,safe,safe,11,"// compute safe distance",MatchSource.CODE_COMMENT,geom/geom/src/TGeoBoolNode.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBoolNode.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBoolNode.cxx:94,Safety,safe,safety,94,"////////////////////////////////////////////////////////////////////////////////; /// Compute safety distance for a union node;",MatchSource.CODE_COMMENT,geom/geom/src/TGeoBoolNode.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBoolNode.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBoolNode.cxx:11,Safety,safe,safe,11,"// compute safe distance",MatchSource.CODE_COMMENT,geom/geom/src/TGeoBoolNode.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBoolNode.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBoolNode.cxx:11,Safety,safe,safe,11,"// compute safe distance",MatchSource.CODE_COMMENT,geom/geom/src/TGeoBoolNode.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBoolNode.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBoolNode.cxx:74,Testability,log,logically,74,"// It is vey likely to have a numerical issue and the point should; // be logically outside one of the shapes",MatchSource.CODE_COMMENT,geom/geom/src/TGeoBoolNode.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBoolNode.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBoolNode.cxx:15,Safety,avoid,avoid,15,"// Push rpt to avoid a bad boundary condition",MatchSource.CODE_COMMENT,geom/geom/src/TGeoBoolNode.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBoolNode.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBoolNode.cxx:15,Safety,avoid,avoid,15,"// Push lpt to avoid a bad boundary condition",MatchSource.CODE_COMMENT,geom/geom/src/TGeoBoolNode.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBoolNode.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBoolNode.cxx:94,Safety,safe,safety,94,"////////////////////////////////////////////////////////////////////////////////; /// Compute safety distance for a union node;",MatchSource.CODE_COMMENT,geom/geom/src/TGeoBoolNode.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBoolNode.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBranchArray.cxx:809,Deployability,update,updated,809,"// @(#):$Id$; // Author: Andrei Gheata 01/03/11; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGeoBranchArray; \ingroup Geometry_classes. An array of daughter indices making a geometry path. Can be used to; backup/restore a state. Allocated contiguously in memory. To setup an object of this type, one should use:. ~~~ {.cpp}; TGeoBranchArray *array = new TGeoBranchArray(level);; array->InitFromNavigator(nav); // To initialize from current navigator state; ~~~. The navigator can be updated to reflect this path array: `array->UpdateNavigator();`; */",MatchSource.CODE_COMMENT,geom/geom/src/TGeoBranchArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBranchArray.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBranchArray.cxx:853,Deployability,Update,UpdateNavigator,853,"// @(#):$Id$; // Author: Andrei Gheata 01/03/11; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGeoBranchArray; \ingroup Geometry_classes. An array of daughter indices making a geometry path. Can be used to; backup/restore a state. Allocated contiguously in memory. To setup an object of this type, one should use:. ~~~ {.cpp}; TGeoBranchArray *array = new TGeoBranchArray(level);; array->InitFromNavigator(nav); // To initialize from current navigator state; ~~~. The navigator can be updated to reflect this path array: `array->UpdateNavigator();`; */",MatchSource.CODE_COMMENT,geom/geom/src/TGeoBranchArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBranchArray.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBranchArray.cxx:555,Energy Efficiency,Allocate,Allocated,555,"// @(#):$Id$; // Author: Andrei Gheata 01/03/11; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGeoBranchArray; \ingroup Geometry_classes. An array of daughter indices making a geometry path. Can be used to; backup/restore a state. Allocated contiguously in memory. To setup an object of this type, one should use:. ~~~ {.cpp}; TGeoBranchArray *array = new TGeoBranchArray(level);; array->InitFromNavigator(nav); // To initialize from current navigator state; ~~~. The navigator can be updated to reflect this path array: `array->UpdateNavigator();`; */",MatchSource.CODE_COMMENT,geom/geom/src/TGeoBranchArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBranchArray.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBranchArray.cxx:99,Energy Efficiency,Allocate,Allocates,99,"////////////////////////////////////////////////////////////////////////////////; /// Constructor. Allocates the array with a size given by level.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoBranchArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBranchArray.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBranchArray.cxx:159,Deployability,release,released,159,"////////////////////////////////////////////////////////////////////////////////; /// Make an instance of the class which allocates the node array. To be; /// released using ReleaseInstance. If addr is non-zero, the user promised that; /// addr contains at least that many bytes: size_t needed = SizeOf(maxlevel);",MatchSource.CODE_COMMENT,geom/geom/src/TGeoBranchArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBranchArray.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBranchArray.cxx:174,Deployability,Release,ReleaseInstance,174,"////////////////////////////////////////////////////////////////////////////////; /// Make an instance of the class which allocates the node array. To be; /// released using ReleaseInstance. If addr is non-zero, the user promised that; /// addr contains at least that many bytes: size_t needed = SizeOf(maxlevel);",MatchSource.CODE_COMMENT,geom/geom/src/TGeoBranchArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBranchArray.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBranchArray.cxx:122,Energy Efficiency,allocate,allocates,122,"////////////////////////////////////////////////////////////////////////////////; /// Make an instance of the class which allocates the node array. To be; /// released using ReleaseInstance. If addr is non-zero, the user promised that; /// addr contains at least that many bytes: size_t needed = SizeOf(maxlevel);",MatchSource.CODE_COMMENT,geom/geom/src/TGeoBranchArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBranchArray.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBranchArray.cxx:159,Deployability,release,released,159,"////////////////////////////////////////////////////////////////////////////////; /// Make an instance of the class which allocates the node array. To be; /// released using ReleaseInstance. If addr is non-zero, the user promised that; /// addr contains at least that many bytes: size_t needed = SizeOf(maxlevel);",MatchSource.CODE_COMMENT,geom/geom/src/TGeoBranchArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBranchArray.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBranchArray.cxx:174,Deployability,Release,ReleaseInstance,174,"////////////////////////////////////////////////////////////////////////////////; /// Make an instance of the class which allocates the node array. To be; /// released using ReleaseInstance. If addr is non-zero, the user promised that; /// addr contains at least that many bytes: size_t needed = SizeOf(maxlevel);",MatchSource.CODE_COMMENT,geom/geom/src/TGeoBranchArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBranchArray.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBranchArray.cxx:122,Energy Efficiency,allocate,allocates,122,"////////////////////////////////////////////////////////////////////////////////; /// Make an instance of the class which allocates the node array. To be; /// released using ReleaseInstance. If addr is non-zero, the user promised that; /// addr contains at least that many bytes: size_t needed = SizeOf(maxlevel);",MatchSource.CODE_COMMENT,geom/geom/src/TGeoBranchArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBranchArray.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBranchArray.cxx:86,Deployability,Release,Releases,86,"////////////////////////////////////////////////////////////////////////////////; /// Releases the space allocated for the object",MatchSource.CODE_COMMENT,geom/geom/src/TGeoBranchArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBranchArray.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBranchArray.cxx:105,Energy Efficiency,allocate,allocated,105,"////////////////////////////////////////////////////////////////////////////////; /// Releases the space allocated for the object",MatchSource.CODE_COMMENT,geom/geom/src/TGeoBranchArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBranchArray.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBranchArray.cxx:86,Deployability,Update,Updates,86,"////////////////////////////////////////////////////////////////////////////////; /// Updates the internal addresses for n contiguous objects which have the same; /// fMaxLevel; /// Updates the internal addresses for n contiguous objects which have the same fMaxLevel",MatchSource.CODE_COMMENT,geom/geom/src/TGeoBranchArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBranchArray.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBranchArray.cxx:182,Deployability,Update,Updates,182,"////////////////////////////////////////////////////////////////////////////////; /// Updates the internal addresses for n contiguous objects which have the same; /// fMaxLevel; /// Updates the internal addresses for n contiguous objects which have the same fMaxLevel",MatchSource.CODE_COMMENT,geom/geom/src/TGeoBranchArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBranchArray.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBranchArray.cxx:154,Performance,perform,performed,154,"////////////////////////////////////////////////////////////////////////////////; /// Add and extra daughter to the current path array. No validity check performed !",MatchSource.CODE_COMMENT,geom/geom/src/TGeoBranchArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBranchArray.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBranchArray.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update the navigator to reflect the branch.; /// nav->CdTop();",MatchSource.CODE_COMMENT,geom/geom/src/TGeoBranchArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBranchArray.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBuilder.cxx:528,Deployability,continuous,continuous,528,"////////////////////////////////////////////////////////////////////////////////; /// Create tracking medium; ///; /// - numed tracking medium number assigned; /// - name tracking medium name; /// - nmat material number; /// - isvol sensitive volume flag; /// - ifield magnetic field; /// - fieldm max. field value (kilogauss); /// - tmaxfd max. angle due to field (deg/step); /// - stemax max. step allowed; /// - deemax max. fraction of energy lost in a step; /// - epsil tracking precision (cm); /// - stmin min. step due to continuous processes (cm); ///; /// - ifield = 0 if no magnetic field; ifield = -1 if user decision in guswim;; /// - ifield = 1 if tracking performed with g3rkuta; ifield = 2 if tracking; /// performed with g3helix; ifield = 3 if tracking performed with g3helx3.; ///",MatchSource.CODE_COMMENT,geom/geom/src/TGeoBuilder.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBuilder.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBuilder.cxx:439,Energy Efficiency,energy,energy,439,"////////////////////////////////////////////////////////////////////////////////; /// Create tracking medium; ///; /// - numed tracking medium number assigned; /// - name tracking medium name; /// - nmat material number; /// - isvol sensitive volume flag; /// - ifield magnetic field; /// - fieldm max. field value (kilogauss); /// - tmaxfd max. angle due to field (deg/step); /// - stemax max. step allowed; /// - deemax max. fraction of energy lost in a step; /// - epsil tracking precision (cm); /// - stmin min. step due to continuous processes (cm); ///; /// - ifield = 0 if no magnetic field; ifield = -1 if user decision in guswim;; /// - ifield = 1 if tracking performed with g3rkuta; ifield = 2 if tracking; /// performed with g3helix; ifield = 3 if tracking performed with g3helx3.; ///",MatchSource.CODE_COMMENT,geom/geom/src/TGeoBuilder.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBuilder.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBuilder.cxx:669,Performance,perform,performed,669,"////////////////////////////////////////////////////////////////////////////////; /// Create tracking medium; ///; /// - numed tracking medium number assigned; /// - name tracking medium name; /// - nmat material number; /// - isvol sensitive volume flag; /// - ifield magnetic field; /// - fieldm max. field value (kilogauss); /// - tmaxfd max. angle due to field (deg/step); /// - stemax max. step allowed; /// - deemax max. fraction of energy lost in a step; /// - epsil tracking precision (cm); /// - stmin min. step due to continuous processes (cm); ///; /// - ifield = 0 if no magnetic field; ifield = -1 if user decision in guswim;; /// - ifield = 1 if tracking performed with g3rkuta; ifield = 2 if tracking; /// performed with g3helix; ifield = 3 if tracking performed with g3helx3.; ///",MatchSource.CODE_COMMENT,geom/geom/src/TGeoBuilder.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBuilder.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBuilder.cxx:721,Performance,perform,performed,721,"////////////////////////////////////////////////////////////////////////////////; /// Create tracking medium; ///; /// - numed tracking medium number assigned; /// - name tracking medium name; /// - nmat material number; /// - isvol sensitive volume flag; /// - ifield magnetic field; /// - fieldm max. field value (kilogauss); /// - tmaxfd max. angle due to field (deg/step); /// - stemax max. step allowed; /// - deemax max. fraction of energy lost in a step; /// - epsil tracking precision (cm); /// - stmin min. step due to continuous processes (cm); ///; /// - ifield = 0 if no magnetic field; ifield = -1 if user decision in guswim;; /// - ifield = 1 if tracking performed with g3rkuta; ifield = 2 if tracking; /// performed with g3helix; ifield = 3 if tracking performed with g3helx3.; ///",MatchSource.CODE_COMMENT,geom/geom/src/TGeoBuilder.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBuilder.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBuilder.cxx:768,Performance,perform,performed,768,"////////////////////////////////////////////////////////////////////////////////; /// Create tracking medium; ///; /// - numed tracking medium number assigned; /// - name tracking medium name; /// - nmat material number; /// - isvol sensitive volume flag; /// - ifield magnetic field; /// - fieldm max. field value (kilogauss); /// - tmaxfd max. angle due to field (deg/step); /// - stemax max. step allowed; /// - deemax max. fraction of energy lost in a step; /// - epsil tracking precision (cm); /// - stmin min. step due to continuous processes (cm); ///; /// - ifield = 0 if no magnetic field; ifield = -1 if user decision in guswim;; /// - ifield = 1 if tracking performed with g3rkuta; ifield = 2 if tracking; /// performed with g3helix; ifield = 3 if tracking performed with g3helx3.; ///",MatchSource.CODE_COMMENT,geom/geom/src/TGeoBuilder.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBuilder.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCache.cxx:206,Performance,perform,performance,206,"////////////////////////////////////////////////////////////////////////////////; /// Change current path to point to the node having this id.; /// Node id has to be in range : 0 to fNNodes-1 (no check for performance reasons)",MatchSource.CODE_COMMENT,geom/geom/src/TGeoCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCache.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCache.cxx:155,Integrability,interface,interface,155,"////////////////////////////////////////////////////////////////////////////////; /// Fill names with current branch volume names (4 char - used by GEANT3 interface).",MatchSource.CODE_COMMENT,geom/geom/src/TGeoCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCache.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCache.cxx:86,Deployability,Release,Release,86,"////////////////////////////////////////////////////////////////////////////////; /// Release last used state info pointer.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCache.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCache.cxx:85,Performance,cache,cache,85,"/** \class TGeoCacheState; \ingroup Geometry_classes. Class storing the state of the cache at a given moment. */; ////////////////////////////////////////////////////////////////////////////////; /// Default ctor.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCache.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCompositeShape.cxx:1217,Availability,down,down,1217," rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGeoCompositeShape; \ingroup Shapes_classes. Composite shapes are Boolean combinations of two or more shape; components. The supported Boolean operations are union (+), intersection; (\*) and subtraction(-). Composite shapes derive from the base; **`TGeoShape`** class, therefore providing all shape features:; computation of bounding box, finding if a given point is inside or; outside the combination, as well as computing the distance to; entering/exiting. They can be directly used for creating volumes or used; in the definition of other composite shapes. Composite shapes are provided in order to complement and extend the set; of basic shape primitives. They have a binary tree internal structure,; therefore all shape-related geometry queries are signals propagated from; top level down to the final leaves, while the provided answers are; assembled and interpreted back at top. This `CSG`; `(composite solid geometry)` hierarchy is effective for small number of; components, while performance drops dramatically for large structures.; Building a complete geometry in this style is virtually possible but; highly not recommended. #### The Structure of Composite Shapes. A composite shape can always be looked as the result of a Boolean; operation between only two shape components. All information identifying; these two components as well as their positions with respect to the; frame of the composite is represented by an object called Boolean node.; A composite shape has a pointer to such a Boolean node. Since the shape; components may also be composites, they will also contain binary Boolean; nodes branching out other two shapes in the hierarchy. Any such branch; ends-up when the final leaves are no longer composite shapes, but basic; primitives. The figu",MatchSource.CODE_COMMENT,geom/geom/src/TGeoCompositeShape.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCompositeShape.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCompositeShape.cxx:2548,Integrability,interface,interface,2548,"ssible but; highly not recommended. #### The Structure of Composite Shapes. A composite shape can always be looked as the result of a Boolean; operation between only two shape components. All information identifying; these two components as well as their positions with respect to the; frame of the composite is represented by an object called Boolean node.; A composite shape has a pointer to such a Boolean node. Since the shape; components may also be composites, they will also contain binary Boolean; nodes branching out other two shapes in the hierarchy. Any such branch; ends-up when the final leaves are no longer composite shapes, but basic; primitives. The figure shows the composite shapes structure. \image html geom_composite_shape001.png ""The composite shapes structure"" width=600px. Suppose that A, B, C and D represent basic shapes, we will illustrate; how the internal representation of few combinations look like. We do; this only for understanding how to create them in a proper way, since; the user interface for this purpose is in fact very simple. We will; ignore for the time being the positioning of components. The definition; of a composite shape takes an expression where the identifiers are shape; names. The expression is parsed and decomposed in 2 sub-expressions and; the top-level Boolean operator. 1. Union: `A+B+C`. Just to illustrate the Boolean expression parsing and the composite; shape structure, let's take a simple example. We will describe the union; of A, B and C. Both union operators are at the same level. Since:. `A+B+C = (A+B)+C = A+(B+C)`. The first` (+)` is taken as separator, hence the expression split in:; `A` and `(B+C)`. A Boolean node of type **`TGeoUnion`**`(""A"",""B+C"")` is; created. This tries to replace the 2 expressions by actual pointers to; corresponding shapes. The first expression (A) contains no operators; therefore is interpreted as representing a shape. The shape named ""A"" is; searched into the list of shapes handled by the man",MatchSource.CODE_COMMENT,geom/geom/src/TGeoCompositeShape.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCompositeShape.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCompositeShape.cxx:1045,Modifiability,extend,extend,1045,"rei Gheata 31/01/02; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGeoCompositeShape; \ingroup Shapes_classes. Composite shapes are Boolean combinations of two or more shape; components. The supported Boolean operations are union (+), intersection; (\*) and subtraction(-). Composite shapes derive from the base; **`TGeoShape`** class, therefore providing all shape features:; computation of bounding box, finding if a given point is inside or; outside the combination, as well as computing the distance to; entering/exiting. They can be directly used for creating volumes or used; in the definition of other composite shapes. Composite shapes are provided in order to complement and extend the set; of basic shape primitives. They have a binary tree internal structure,; therefore all shape-related geometry queries are signals propagated from; top level down to the final leaves, while the provided answers are; assembled and interpreted back at top. This `CSG`; `(composite solid geometry)` hierarchy is effective for small number of; components, while performance drops dramatically for large structures.; Building a complete geometry in this style is virtually possible but; highly not recommended. #### The Structure of Composite Shapes. A composite shape can always be looked as the result of a Boolean; operation between only two shape components. All information identifying; these two components as well as their positions with respect to the; frame of the composite is represented by an object called Boolean node.; A composite shape has a pointer to such a Boolean node. Since the shape; components may also be composites, they will also contain binary Boolean; no",MatchSource.CODE_COMMENT,geom/geom/src/TGeoCompositeShape.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCompositeShape.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCompositeShape.cxx:1417,Performance,perform,performance,1417,"**********************/; /** \class TGeoCompositeShape; \ingroup Shapes_classes. Composite shapes are Boolean combinations of two or more shape; components. The supported Boolean operations are union (+), intersection; (\*) and subtraction(-). Composite shapes derive from the base; **`TGeoShape`** class, therefore providing all shape features:; computation of bounding box, finding if a given point is inside or; outside the combination, as well as computing the distance to; entering/exiting. They can be directly used for creating volumes or used; in the definition of other composite shapes. Composite shapes are provided in order to complement and extend the set; of basic shape primitives. They have a binary tree internal structure,; therefore all shape-related geometry queries are signals propagated from; top level down to the final leaves, while the provided answers are; assembled and interpreted back at top. This `CSG`; `(composite solid geometry)` hierarchy is effective for small number of; components, while performance drops dramatically for large structures.; Building a complete geometry in this style is virtually possible but; highly not recommended. #### The Structure of Composite Shapes. A composite shape can always be looked as the result of a Boolean; operation between only two shape components. All information identifying; these two components as well as their positions with respect to the; frame of the composite is represented by an object called Boolean node.; A composite shape has a pointer to such a Boolean node. Since the shape; components may also be composites, they will also contain binary Boolean; nodes branching out other two shapes in the hierarchy. Any such branch; ends-up when the final leaves are no longer composite shapes, but basic; primitives. The figure shows the composite shapes structure. \image html geom_composite_shape001.png ""The composite shapes structure"" width=600px. Suppose that A, B, C and D represent basic shapes, we will illus",MatchSource.CODE_COMMENT,geom/geom/src/TGeoCompositeShape.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCompositeShape.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCompositeShape.cxx:6755,Testability,stub,stub,6755,"ifiers, the created Boolean nodes will assume that; the shapes are positioned with an identity transformation with respect; to the frame of the created composite. In order to provide some; positioning of the combination components, we have to attach after each; shape identifier the name of an existing transformation, separated by a; colon. Obviously all transformations created for this purpose have to be; objects with unique names in order to be properly substituted during; parsing. #### Composite Shape Example. One should have in mind that the same shape or matrix identifiers can be; used many times in the same expression, as in the following example:. ~~~{.cpp}; {; TCanvas *c = new TCanvas(""c"", ""c"",0,0,600,600);; const Double_t sq2 = TMath::Sqrt(2.);; TGeoManager *mgr =; new TGeoManager(""Geom"",""composite shape example"");; TGeoMedium *medium = 0;; TGeoVolume *top = mgr->MakeBox(""TOP"",medium,100,250,250);; mgr->SetTopVolume(top);. // make shape components; TGeoBBox *sbox = new TGeoBBox(""B"",100,125*sq2,125*sq2);; TGeoTube *stub = new TGeoTube(""T"",0,100,250);; TGeoPgon *spgon = new TGeoPgon(""P"",0.,360.,6,2);; spgon->DefineSection(0,-250,0,80);; spgon->DefineSection(1,250,0,80);. // define some rotations; TGeoRotation *r1 = new TGeoRotation(""r1"",90,0,0,180,90,90);; r1->RegisterYourself();; TGeoRotation *r2 = new TGeoRotation(""r2"",90,0,45,90,45,270);; r2->RegisterYourself();; // create a composite; TGeoCompositeShape *cs = new TGeoCompositeShape(""cs"", ""((T+T:r1)-(P+P:r1))*B:r2"");; TGeoVolume *comp = new TGeoVolume(""COMP"",cs);; comp->SetLineColor(kRed);. // put it in the top volume; top->AddNode(comp,1);; mgr->CloseGeometry();; // visualize it with ray tracing; top->Raytrace();; }; ~~~. \image html geom_composite_shape004.png ""A composite shape example"" width=400px. Composite shapes can be subsequently used for defining volumes.; Moreover, these volumes contain other volumes, following the general; criteria. Volumes created based on composite shapes cannot be divided. */",MatchSource.CODE_COMMENT,geom/geom/src/TGeoCompositeShape.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCompositeShape.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCompositeShape.cxx:2591,Usability,simpl,simple,2591,"ssible but; highly not recommended. #### The Structure of Composite Shapes. A composite shape can always be looked as the result of a Boolean; operation between only two shape components. All information identifying; these two components as well as their positions with respect to the; frame of the composite is represented by an object called Boolean node.; A composite shape has a pointer to such a Boolean node. Since the shape; components may also be composites, they will also contain binary Boolean; nodes branching out other two shapes in the hierarchy. Any such branch; ends-up when the final leaves are no longer composite shapes, but basic; primitives. The figure shows the composite shapes structure. \image html geom_composite_shape001.png ""The composite shapes structure"" width=600px. Suppose that A, B, C and D represent basic shapes, we will illustrate; how the internal representation of few combinations look like. We do; this only for understanding how to create them in a proper way, since; the user interface for this purpose is in fact very simple. We will; ignore for the time being the positioning of components. The definition; of a composite shape takes an expression where the identifiers are shape; names. The expression is parsed and decomposed in 2 sub-expressions and; the top-level Boolean operator. 1. Union: `A+B+C`. Just to illustrate the Boolean expression parsing and the composite; shape structure, let's take a simple example. We will describe the union; of A, B and C. Both union operators are at the same level. Since:. `A+B+C = (A+B)+C = A+(B+C)`. The first` (+)` is taken as separator, hence the expression split in:; `A` and `(B+C)`. A Boolean node of type **`TGeoUnion`**`(""A"",""B+C"")` is; created. This tries to replace the 2 expressions by actual pointers to; corresponding shapes. The first expression (A) contains no operators; therefore is interpreted as representing a shape. The shape named ""A"" is; searched into the list of shapes handled by the man",MatchSource.CODE_COMMENT,geom/geom/src/TGeoCompositeShape.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCompositeShape.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCompositeShape.cxx:2978,Usability,simpl,simple,2978,"an node. Since the shape; components may also be composites, they will also contain binary Boolean; nodes branching out other two shapes in the hierarchy. Any such branch; ends-up when the final leaves are no longer composite shapes, but basic; primitives. The figure shows the composite shapes structure. \image html geom_composite_shape001.png ""The composite shapes structure"" width=600px. Suppose that A, B, C and D represent basic shapes, we will illustrate; how the internal representation of few combinations look like. We do; this only for understanding how to create them in a proper way, since; the user interface for this purpose is in fact very simple. We will; ignore for the time being the positioning of components. The definition; of a composite shape takes an expression where the identifiers are shape; names. The expression is parsed and decomposed in 2 sub-expressions and; the top-level Boolean operator. 1. Union: `A+B+C`. Just to illustrate the Boolean expression parsing and the composite; shape structure, let's take a simple example. We will describe the union; of A, B and C. Both union operators are at the same level. Since:. `A+B+C = (A+B)+C = A+(B+C)`. The first` (+)` is taken as separator, hence the expression split in:; `A` and `(B+C)`. A Boolean node of type **`TGeoUnion`**`(""A"",""B+C"")` is; created. This tries to replace the 2 expressions by actual pointers to; corresponding shapes. The first expression (A) contains no operators; therefore is interpreted as representing a shape. The shape named ""A"" is; searched into the list of shapes handled by the manager class and stored; as the ""left"" shape in the Boolean union node. Since the second; expression is not yet fully decomposed, the ""right"" shape in the; combination is created as a new composite shape. This will split at its; turn B+C into B and C and create a **`TGeoUnion`**`(""B"",""C"")`. The B and; C identifiers will be looked for and replaced by the pointers to the; actual shapes into the new node. Fin",MatchSource.CODE_COMMENT,geom/geom/src/TGeoCompositeShape.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCompositeShape.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCompositeShape.cxx:149,Availability,error,error,149,"////////////////////////////////////////////////////////////////////////////////; /// Computes capacity of this shape [length^3] by sampling with 1% error.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoCompositeShape.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCompositeShape.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCompositeShape.cxx:86,Testability,Test,Tests,86,"////////////////////////////////////////////////////////////////////////////////; /// Tests if point is inside the shape.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoCompositeShape.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCompositeShape.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCompositeShape.cxx:94,Safety,safe,safe,94,"////////////////////////////////////////////////////////////////////////////////; /// Compute safe distance from each of the points in the input array.; /// Input: Array of point coordinates, array of statuses for these points, size of the arrays; /// Output: Safety values",MatchSource.CODE_COMMENT,geom/geom/src/TGeoCompositeShape.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCompositeShape.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCompositeShape.cxx:260,Safety,Safe,Safety,260,"////////////////////////////////////////////////////////////////////////////////; /// Compute safe distance from each of the points in the input array.; /// Input: Array of point coordinates, array of statuses for these points, size of the arrays; /// Output: Safety values",MatchSource.CODE_COMMENT,geom/geom/src/TGeoCompositeShape.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCompositeShape.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCone.cxx:86,Testability,test,test,86,"////////////////////////////////////////////////////////////////////////////////; /// test if point is inside this cone",MatchSource.CODE_COMMENT,geom/geom/src/TGeoCone.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCone.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCone.cxx:167,Safety,safe,safe,167,"////////////////////////////////////////////////////////////////////////////////; /// Compute distance from inside point to surface of the cone (static); /// Boundary safe algorithm.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoCone.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCone.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCone.cxx:158,Safety,safe,safe,158,"////////////////////////////////////////////////////////////////////////////////; /// Compute distance from inside point to surface of the cone; /// Boundary safe algorithm.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoCone.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCone.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCone.cxx:159,Safety,safe,safe,159,"////////////////////////////////////////////////////////////////////////////////; /// Compute distance from outside point to surface of the tube; /// Boundary safe algorithm.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoCone.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCone.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCone.cxx:11,Safety,safe,safe,11,"// compute safe radius",MatchSource.CODE_COMMENT,geom/geom/src/TGeoCone.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCone.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCone.cxx:49,Integrability,rout,rout,49,"// Double_t rin = tg1*point[2]+ro1;; // Double_t rout = tg2*point[2]+ro2;",MatchSource.CODE_COMMENT,geom/geom/src/TGeoCone.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCone.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCone.cxx:3,Safety,Safe,Safety,3,"// Safety to inner part",MatchSource.CODE_COMMENT,geom/geom/src/TGeoCone.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCone.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCone.cxx:36,Availability,down,down,36,"// TODO: Can we push this as common down to TGeoShape?",MatchSource.CODE_COMMENT,geom/geom/src/TGeoCone.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCone.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCone.cxx:94,Safety,safe,safe,94,"////////////////////////////////////////////////////////////////////////////////; /// Compute safe distance from each of the points in the input array.; /// Input: Array of point coordinates, array of statuses for these points, size of the arrays; /// Output: Safety values",MatchSource.CODE_COMMENT,geom/geom/src/TGeoCone.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCone.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCone.cxx:260,Safety,Safe,Safety,260,"////////////////////////////////////////////////////////////////////////////////; /// Compute safe distance from each of the points in the input array.; /// Input: Array of point coordinates, array of statuses for these points, size of the arrays; /// Output: Safety values",MatchSource.CODE_COMMENT,geom/geom/src/TGeoCone.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCone.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCone.cxx:86,Testability,test,test,86,"////////////////////////////////////////////////////////////////////////////////; /// test if point is inside this sphere",MatchSource.CODE_COMMENT,geom/geom/src/TGeoCone.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCone.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCone.cxx:11,Safety,safe,safe,11,"// compute safe radius",MatchSource.CODE_COMMENT,geom/geom/src/TGeoCone.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCone.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCone.cxx:94,Safety,safe,safe,94,"////////////////////////////////////////////////////////////////////////////////; /// Compute safe distance from each of the points in the input array.; /// Input: Array of point coordinates, array of statuses for these points, size of the arrays; /// Output: Safety values",MatchSource.CODE_COMMENT,geom/geom/src/TGeoCone.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCone.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCone.cxx:260,Safety,Safe,Safety,260,"////////////////////////////////////////////////////////////////////////////////; /// Compute safe distance from each of the points in the input array.; /// Input: Array of point coordinates, array of statuses for these points, size of the arrays; /// Output: Safety values",MatchSource.CODE_COMMENT,geom/geom/src/TGeoCone.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCone.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoElement.cxx:62,Modifiability,extend,extend,62,"// User requested overwriting a standard element - we need to extend dynamically the support arrays",MatchSource.CODE_COMMENT,geom/geom/src/TGeoElement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoElement.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoElement.cxx:86,Usability,Clear,Clears,86,"////////////////////////////////////////////////////////////////////////////////; /// Clears the existing ratio.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoElement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoElement.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoElement.cxx:154,Availability,down,down,154,"////////////////////////////////////////////////////////////////////////////////; /// Go upwards from the current location until the next branching, then down.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoElement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoElement.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoElement.cxx:89,Availability,down,downwards,89,"////////////////////////////////////////////////////////////////////////////////; /// Go downwards from current level via ibranch as low in the tree as possible.; /// Return value flags if the operation was successful.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoElement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoElement.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoElement.cxx:121,Performance,optimiz,optimized,121,"////////////////////////////////////////////////////////////////////////////////; /// Find existing isotope by name. Not optimized for a big number of isotopes.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoElement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoElement.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoEltu.cxx:86,Testability,test,test,86,"////////////////////////////////////////////////////////////////////////////////; /// test if point is inside the elliptical tube",MatchSource.CODE_COMMENT,geom/geom/src/TGeoEltu.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoEltu.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoEltu.cxx:149,Safety,safe,safe,149,"////////////////////////////////////////////////////////////////////////////////; /// compute distance from outside point to surface of the tube and safe distance",MatchSource.CODE_COMMENT,geom/geom/src/TGeoEltu.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoEltu.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoEltu.cxx:35,Availability,down,down,35,"// point beyond the z limit (up or down); // Check if direction is outgoing",MatchSource.CODE_COMMENT,geom/geom/src/TGeoEltu.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoEltu.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoEltu.cxx:19,Integrability,depend,depending,19,"// select +z or -z depending on the side of the point",MatchSource.CODE_COMMENT,geom/geom/src/TGeoEltu.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoEltu.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoEltu.cxx:94,Safety,safe,safe,94,"////////////////////////////////////////////////////////////////////////////////; /// Compute safe distance from each of the points in the input array.; /// Input: Array of point coordinates, array of statuses for these points, size of the arrays; /// Output: Safety values",MatchSource.CODE_COMMENT,geom/geom/src/TGeoEltu.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoEltu.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoEltu.cxx:260,Safety,Safe,Safety,260,"////////////////////////////////////////////////////////////////////////////////; /// Compute safe distance from each of the points in the input array.; /// Input: Array of point coordinates, array of statuses for these points, size of the arrays; /// Output: Safety values",MatchSource.CODE_COMMENT,geom/geom/src/TGeoEltu.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoEltu.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoExtension.cxx:410,Availability,avail,available,410,"/** \class TGeoExtension; \ingroup Geometry_classes. ABC for user objects attached to TGeoVolume or TGeoNode.; Provides interface for getting a reference (grab) and; releasing the extension object (release), allowing for; derived classes to implement reference counted sharing.; The user who should attach extensions to logical volumes; or nodes BEFORE applying misalignment information so that; these will be available to all copies.; */",MatchSource.CODE_COMMENT,geom/geom/src/TGeoExtension.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoExtension.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoExtension.cxx:198,Deployability,release,release,198,"/** \class TGeoExtension; \ingroup Geometry_classes. ABC for user objects attached to TGeoVolume or TGeoNode.; Provides interface for getting a reference (grab) and; releasing the extension object (release), allowing for; derived classes to implement reference counted sharing.; The user who should attach extensions to logical volumes; or nodes BEFORE applying misalignment information so that; these will be available to all copies.; */",MatchSource.CODE_COMMENT,geom/geom/src/TGeoExtension.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoExtension.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoExtension.cxx:120,Integrability,interface,interface,120,"/** \class TGeoExtension; \ingroup Geometry_classes. ABC for user objects attached to TGeoVolume or TGeoNode.; Provides interface for getting a reference (grab) and; releasing the extension object (release), allowing for; derived classes to implement reference counted sharing.; The user who should attach extensions to logical volumes; or nodes BEFORE applying misalignment information so that; these will be available to all copies.; */",MatchSource.CODE_COMMENT,geom/geom/src/TGeoExtension.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoExtension.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoExtension.cxx:320,Testability,log,logical,320,"/** \class TGeoExtension; \ingroup Geometry_classes. ABC for user objects attached to TGeoVolume or TGeoNode.; Provides interface for getting a reference (grab) and; releasing the extension object (release), allowing for; derived classes to implement reference counted sharing.; The user who should attach extensions to logical volumes; or nodes BEFORE applying misalignment information so that; these will be available to all copies.; */",MatchSource.CODE_COMMENT,geom/geom/src/TGeoExtension.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoExtension.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoExtension.cxx:320,Deployability,Release,Release,320,"/** \class TGeoRCExtension; \ingroup Geometry_classes. Reference counted extension which has a pointer to and; owns a user defined TObject. This class can be used as; model for a reference counted derivation from TGeoExtension. Note: Creating a TGeoRCExtension with new() automatically grabs it, but the; creator has to Release it before the pointer gets out of scope.; The following sequence is valid:. ~~~ {.cpp}; // producer:; TGeoRCExtension *ext = new TGeoRCExtension();; some_TGeoVolume->SetUserExtension(ext);; ext->Release();; // user:; TGeoRCExtension *ext = dynamic_cast<TGeoRCExtension*>(some_TGeoVolume->GrabUserExtension());; // ... use extension; ext->Release();; ~~~. The extension is going to be released by the TGeoVolume holder at the destruction; or when calling SetUserExtension(0). The following usage is not correct:. ~~~ {.cpp}; some_TGeoVolume->SetUserExtension(new TGeoRCExtension()); ~~~. since the producer code does not release the extension.; One cannot call directly ""delete ext"" nor allocate an extension on the stack,; since the destructor is protected. Use Release instead.; */",MatchSource.CODE_COMMENT,geom/geom/src/TGeoExtension.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoExtension.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoExtension.cxx:523,Deployability,Release,Release,523,"/** \class TGeoRCExtension; \ingroup Geometry_classes. Reference counted extension which has a pointer to and; owns a user defined TObject. This class can be used as; model for a reference counted derivation from TGeoExtension. Note: Creating a TGeoRCExtension with new() automatically grabs it, but the; creator has to Release it before the pointer gets out of scope.; The following sequence is valid:. ~~~ {.cpp}; // producer:; TGeoRCExtension *ext = new TGeoRCExtension();; some_TGeoVolume->SetUserExtension(ext);; ext->Release();; // user:; TGeoRCExtension *ext = dynamic_cast<TGeoRCExtension*>(some_TGeoVolume->GrabUserExtension());; // ... use extension; ext->Release();; ~~~. The extension is going to be released by the TGeoVolume holder at the destruction; or when calling SetUserExtension(0). The following usage is not correct:. ~~~ {.cpp}; some_TGeoVolume->SetUserExtension(new TGeoRCExtension()); ~~~. since the producer code does not release the extension.; One cannot call directly ""delete ext"" nor allocate an extension on the stack,; since the destructor is protected. Use Release instead.; */",MatchSource.CODE_COMMENT,geom/geom/src/TGeoExtension.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoExtension.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoExtension.cxx:666,Deployability,Release,Release,666,"/** \class TGeoRCExtension; \ingroup Geometry_classes. Reference counted extension which has a pointer to and; owns a user defined TObject. This class can be used as; model for a reference counted derivation from TGeoExtension. Note: Creating a TGeoRCExtension with new() automatically grabs it, but the; creator has to Release it before the pointer gets out of scope.; The following sequence is valid:. ~~~ {.cpp}; // producer:; TGeoRCExtension *ext = new TGeoRCExtension();; some_TGeoVolume->SetUserExtension(ext);; ext->Release();; // user:; TGeoRCExtension *ext = dynamic_cast<TGeoRCExtension*>(some_TGeoVolume->GrabUserExtension());; // ... use extension; ext->Release();; ~~~. The extension is going to be released by the TGeoVolume holder at the destruction; or when calling SetUserExtension(0). The following usage is not correct:. ~~~ {.cpp}; some_TGeoVolume->SetUserExtension(new TGeoRCExtension()); ~~~. since the producer code does not release the extension.; One cannot call directly ""delete ext"" nor allocate an extension on the stack,; since the destructor is protected. Use Release instead.; */",MatchSource.CODE_COMMENT,geom/geom/src/TGeoExtension.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoExtension.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoExtension.cxx:712,Deployability,release,released,712,"/** \class TGeoRCExtension; \ingroup Geometry_classes. Reference counted extension which has a pointer to and; owns a user defined TObject. This class can be used as; model for a reference counted derivation from TGeoExtension. Note: Creating a TGeoRCExtension with new() automatically grabs it, but the; creator has to Release it before the pointer gets out of scope.; The following sequence is valid:. ~~~ {.cpp}; // producer:; TGeoRCExtension *ext = new TGeoRCExtension();; some_TGeoVolume->SetUserExtension(ext);; ext->Release();; // user:; TGeoRCExtension *ext = dynamic_cast<TGeoRCExtension*>(some_TGeoVolume->GrabUserExtension());; // ... use extension; ext->Release();; ~~~. The extension is going to be released by the TGeoVolume holder at the destruction; or when calling SetUserExtension(0). The following usage is not correct:. ~~~ {.cpp}; some_TGeoVolume->SetUserExtension(new TGeoRCExtension()); ~~~. since the producer code does not release the extension.; One cannot call directly ""delete ext"" nor allocate an extension on the stack,; since the destructor is protected. Use Release instead.; */",MatchSource.CODE_COMMENT,geom/geom/src/TGeoExtension.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoExtension.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoExtension.cxx:948,Deployability,release,release,948,"/** \class TGeoRCExtension; \ingroup Geometry_classes. Reference counted extension which has a pointer to and; owns a user defined TObject. This class can be used as; model for a reference counted derivation from TGeoExtension. Note: Creating a TGeoRCExtension with new() automatically grabs it, but the; creator has to Release it before the pointer gets out of scope.; The following sequence is valid:. ~~~ {.cpp}; // producer:; TGeoRCExtension *ext = new TGeoRCExtension();; some_TGeoVolume->SetUserExtension(ext);; ext->Release();; // user:; TGeoRCExtension *ext = dynamic_cast<TGeoRCExtension*>(some_TGeoVolume->GrabUserExtension());; // ... use extension; ext->Release();; ~~~. The extension is going to be released by the TGeoVolume holder at the destruction; or when calling SetUserExtension(0). The following usage is not correct:. ~~~ {.cpp}; some_TGeoVolume->SetUserExtension(new TGeoRCExtension()); ~~~. since the producer code does not release the extension.; One cannot call directly ""delete ext"" nor allocate an extension on the stack,; since the destructor is protected. Use Release instead.; */",MatchSource.CODE_COMMENT,geom/geom/src/TGeoExtension.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoExtension.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoExtension.cxx:1090,Deployability,Release,Release,1090,"/** \class TGeoRCExtension; \ingroup Geometry_classes. Reference counted extension which has a pointer to and; owns a user defined TObject. This class can be used as; model for a reference counted derivation from TGeoExtension. Note: Creating a TGeoRCExtension with new() automatically grabs it, but the; creator has to Release it before the pointer gets out of scope.; The following sequence is valid:. ~~~ {.cpp}; // producer:; TGeoRCExtension *ext = new TGeoRCExtension();; some_TGeoVolume->SetUserExtension(ext);; ext->Release();; // user:; TGeoRCExtension *ext = dynamic_cast<TGeoRCExtension*>(some_TGeoVolume->GrabUserExtension());; // ... use extension; ext->Release();; ~~~. The extension is going to be released by the TGeoVolume holder at the destruction; or when calling SetUserExtension(0). The following usage is not correct:. ~~~ {.cpp}; some_TGeoVolume->SetUserExtension(new TGeoRCExtension()); ~~~. since the producer code does not release the extension.; One cannot call directly ""delete ext"" nor allocate an extension on the stack,; since the destructor is protected. Use Release instead.; */",MatchSource.CODE_COMMENT,geom/geom/src/TGeoExtension.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoExtension.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoExtension.cxx:1014,Energy Efficiency,allocate,allocate,1014,"/** \class TGeoRCExtension; \ingroup Geometry_classes. Reference counted extension which has a pointer to and; owns a user defined TObject. This class can be used as; model for a reference counted derivation from TGeoExtension. Note: Creating a TGeoRCExtension with new() automatically grabs it, but the; creator has to Release it before the pointer gets out of scope.; The following sequence is valid:. ~~~ {.cpp}; // producer:; TGeoRCExtension *ext = new TGeoRCExtension();; some_TGeoVolume->SetUserExtension(ext);; ext->Release();; // user:; TGeoRCExtension *ext = dynamic_cast<TGeoRCExtension*>(some_TGeoVolume->GrabUserExtension());; // ... use extension; ext->Release();; ~~~. The extension is going to be released by the TGeoVolume holder at the destruction; or when calling SetUserExtension(0). The following usage is not correct:. ~~~ {.cpp}; some_TGeoVolume->SetUserExtension(new TGeoRCExtension()); ~~~. since the producer code does not release the extension.; One cannot call directly ""delete ext"" nor allocate an extension on the stack,; since the destructor is protected. Use Release instead.; */",MatchSource.CODE_COMMENT,geom/geom/src/TGeoExtension.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoExtension.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoGlobalMagField.cxx:98,Security,access,access,98,"/** \class TGeoGlobalMagField; \ingroup Geometry_classes. Global magnetic field manager. Provides access to; and owns the actual magnetic field set via `SetField()`. The field is deleted; upon destruction of the field manager at the end of ROOT session or; by calling:. ~~~ {.cpp}; TGeoGlobalMagField::Instance()->SetField(0).; ~~~. The previous global field is deleted upon replacement with notification. The global field manager provides access to the global field via:. ~~~ {.cpp}; TGeoGlobalMagField::Instance()->GetField(); ~~~. One can directly call the Field() method of a field via the global field manager:. ~~~ {.cpp}; TGeoGlobalMagField::Instance()->Field(x,B); ~~~; */",MatchSource.CODE_COMMENT,geom/geom/src/TGeoGlobalMagField.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoGlobalMagField.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoGlobalMagField.cxx:440,Security,access,access,440,"/** \class TGeoGlobalMagField; \ingroup Geometry_classes. Global magnetic field manager. Provides access to; and owns the actual magnetic field set via `SetField()`. The field is deleted; upon destruction of the field manager at the end of ROOT session or; by calling:. ~~~ {.cpp}; TGeoGlobalMagField::Instance()->SetField(0).; ~~~. The previous global field is deleted upon replacement with notification. The global field manager provides access to the global field via:. ~~~ {.cpp}; TGeoGlobalMagField::Instance()->GetField(); ~~~. One can directly call the Field() method of a field via the global field manager:. ~~~ {.cpp}; TGeoGlobalMagField::Instance()->Field(x,B); ~~~; */",MatchSource.CODE_COMMENT,geom/geom/src/TGeoGlobalMagField.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoGlobalMagField.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHalfSpace.cxx:86,Testability,test,test,86,"////////////////////////////////////////////////////////////////////////////////; /// test if point is inside the half-space",MatchSource.CODE_COMMENT,geom/geom/src/TGeoHalfSpace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHalfSpace.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHalfSpace.cxx:94,Safety,safe,safe,94,"////////////////////////////////////////////////////////////////////////////////; /// Compute safe distance from each of the points in the input array.; /// Input: Array of point coordinates, array of statuses for these points, size of the arrays; /// Output: Safety values",MatchSource.CODE_COMMENT,geom/geom/src/TGeoHalfSpace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHalfSpace.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHalfSpace.cxx:260,Safety,Safe,Safety,260,"////////////////////////////////////////////////////////////////////////////////; /// Compute safe distance from each of the points in the input array.; /// Input: Array of point coordinates, array of statuses for these points, size of the arrays; /// Output: Safety values",MatchSource.CODE_COMMENT,geom/geom/src/TGeoHalfSpace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHalfSpace.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHelix.cxx:863,Energy Efficiency,charge,charged,863,"// @(#)root/geom:$Id$; // Author: Andrei Gheata 28/04/04; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGeoHelix; \ingroup Shapes_classes. Class representing a helix curve. A helix is a curve defined by the following equations:. ~~~ {.cpp}; x = (1/c) * COS(q*phi); y = (1/c) * SIN(q*phi); z = s * alfa; ~~~. where:. ~~~ {.cpp}; c = 1/Rxy - curvature in XY plane; phi - phi angle; S = 2*PI*s - vertical separation between helix loops; q = +/- 1 - (+)=left-handed, (-)=right-handed; ~~~. In particular, a helix describes the trajectory of a charged particle in magnetic; field. In such case, the helix is right-handed for negative particle charge.; To define a helix, one must define:; - the curvature - positive defined; - the Z step made after one full turn of the helix; - the particle charge sign; - the initial particle position and direction (force normalization to unit); - the magnetic field direction. A helix provides:; - propagation to a given Z position (in global frame); Double_t *point = TGeoHelix::PropagateToZ(Double_t z);; - propagation to an arbitrary plane, returning also the new point; - propagation in a geometry until the next crossed surface; - computation of the total track length along a helix; */",MatchSource.CODE_COMMENT,geom/geom/src/TGeoHelix.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHelix.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHelix.cxx:962,Energy Efficiency,charge,charge,962,"// @(#)root/geom:$Id$; // Author: Andrei Gheata 28/04/04; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGeoHelix; \ingroup Shapes_classes. Class representing a helix curve. A helix is a curve defined by the following equations:. ~~~ {.cpp}; x = (1/c) * COS(q*phi); y = (1/c) * SIN(q*phi); z = s * alfa; ~~~. where:. ~~~ {.cpp}; c = 1/Rxy - curvature in XY plane; phi - phi angle; S = 2*PI*s - vertical separation between helix loops; q = +/- 1 - (+)=left-handed, (-)=right-handed; ~~~. In particular, a helix describes the trajectory of a charged particle in magnetic; field. In such case, the helix is right-handed for negative particle charge.; To define a helix, one must define:; - the curvature - positive defined; - the Z step made after one full turn of the helix; - the particle charge sign; - the initial particle position and direction (force normalization to unit); - the magnetic field direction. A helix provides:; - propagation to a given Z position (in global frame); Double_t *point = TGeoHelix::PropagateToZ(Double_t z);; - propagation to an arbitrary plane, returning also the new point; - propagation in a geometry until the next crossed surface; - computation of the total track length along a helix; */",MatchSource.CODE_COMMENT,geom/geom/src/TGeoHelix.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHelix.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHelix.cxx:1111,Energy Efficiency,charge,charge,1111,"// @(#)root/geom:$Id$; // Author: Andrei Gheata 28/04/04; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGeoHelix; \ingroup Shapes_classes. Class representing a helix curve. A helix is a curve defined by the following equations:. ~~~ {.cpp}; x = (1/c) * COS(q*phi); y = (1/c) * SIN(q*phi); z = s * alfa; ~~~. where:. ~~~ {.cpp}; c = 1/Rxy - curvature in XY plane; phi - phi angle; S = 2*PI*s - vertical separation between helix loops; q = +/- 1 - (+)=left-handed, (-)=right-handed; ~~~. In particular, a helix describes the trajectory of a charged particle in magnetic; field. In such case, the helix is right-handed for negative particle charge.; To define a helix, one must define:; - the curvature - positive defined; - the Z step made after one full turn of the helix; - the particle charge sign; - the initial particle position and direction (force normalization to unit); - the magnetic field direction. A helix provides:; - propagation to a given Z position (in global frame); Double_t *point = TGeoHelix::PropagateToZ(Double_t z);; - propagation to an arbitrary plane, returning also the new point; - propagation in a geometry until the next crossed surface; - computation of the total track length along a helix; */",MatchSource.CODE_COMMENT,geom/geom/src/TGeoHelix.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHelix.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHelix.cxx:142,Availability,error,error,142,"////////////////////////////////////////////////////////////////////////////////; /// Compute safe linear step that can be made such that the error; /// between linear-helix extrapolation is less than EPSIL.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoHelix.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHelix.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHelix.cxx:94,Safety,safe,safe,94,"////////////////////////////////////////////////////////////////////////////////; /// Compute safe linear step that can be made such that the error; /// between linear-helix extrapolation is less than EPSIL.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoHelix.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHelix.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHelix.cxx:95,Energy Efficiency,charge,charge,95,"////////////////////////////////////////////////////////////////////////////////; /// Positive charge means left-handed helix.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoHelix.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHelix.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHelix.cxx:293,Deployability,update,update,293,"////////////////////////////////////////////////////////////////////////////////; /// Make a step from current point along the helix and compute new point, direction and angle; /// To reach a plane/ shape boundary, one has to:; /// 1. Compute the safety to the plane/boundary; /// 2. Define / update a helix according local field and particle state (position, direction, charge); /// 3. Compute the magnetic safety (maximum distance for which the field can be considered constant); /// 4. Call TGeoHelix::Step() having as argument the minimum between 1. and 3.; /// 5. Repeat from 1. until the step to be made is small enough.; /// 6. Add to the total step the distance along a straight line from the last point; /// to the plane/shape boundary",MatchSource.CODE_COMMENT,geom/geom/src/TGeoHelix.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHelix.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHelix.cxx:371,Energy Efficiency,charge,charge,371,"////////////////////////////////////////////////////////////////////////////////; /// Make a step from current point along the helix and compute new point, direction and angle; /// To reach a plane/ shape boundary, one has to:; /// 1. Compute the safety to the plane/boundary; /// 2. Define / update a helix according local field and particle state (position, direction, charge); /// 3. Compute the magnetic safety (maximum distance for which the field can be considered constant); /// 4. Call TGeoHelix::Step() having as argument the minimum between 1. and 3.; /// 5. Repeat from 1. until the step to be made is small enough.; /// 6. Add to the total step the distance along a straight line from the last point; /// to the plane/shape boundary",MatchSource.CODE_COMMENT,geom/geom/src/TGeoHelix.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHelix.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHelix.cxx:247,Safety,safe,safety,247,"////////////////////////////////////////////////////////////////////////////////; /// Make a step from current point along the helix and compute new point, direction and angle; /// To reach a plane/ shape boundary, one has to:; /// 1. Compute the safety to the plane/boundary; /// 2. Define / update a helix according local field and particle state (position, direction, charge); /// 3. Compute the magnetic safety (maximum distance for which the field can be considered constant); /// 4. Call TGeoHelix::Step() having as argument the minimum between 1. and 3.; /// 5. Repeat from 1. until the step to be made is small enough.; /// 6. Add to the total step the distance along a straight line from the last point; /// to the plane/shape boundary",MatchSource.CODE_COMMENT,geom/geom/src/TGeoHelix.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHelix.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHelix.cxx:408,Safety,safe,safety,408,"////////////////////////////////////////////////////////////////////////////////; /// Make a step from current point along the helix and compute new point, direction and angle; /// To reach a plane/ shape boundary, one has to:; /// 1. Compute the safety to the plane/boundary; /// 2. Define / update a helix according local field and particle state (position, direction, charge); /// 3. Compute the magnetic safety (maximum distance for which the field can be considered constant); /// 4. Call TGeoHelix::Step() having as argument the minimum between 1. and 3.; /// 5. Repeat from 1. until the step to be made is small enough.; /// 6. Add to the total step the distance along a straight line from the last point; /// to the plane/shape boundary",MatchSource.CODE_COMMENT,geom/geom/src/TGeoHelix.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHelix.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHelix.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update the local helix matrix.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoHelix.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHelix.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHype.cxx:374,Integrability,rout,rout,374,"/** \class TGeoHype; \ingroup Shapes_classes. A hyperboloid is represented as a solid limited by two planes; perpendicular to the Z axis (top and bottom planes) and two hyperbolic; surfaces of revolution about Z axis (inner and outer surfaces). The; class describing hyperboloids is TGeoHype has 5 input parameters:. ~~~ {.cpp}; TGeoHype(Double_t rin,Double_t stin,Double_t rout,; Double_t stout,Double_t dz);; ~~~. Begin_Macro; {; TCanvas *c = new TCanvas(""c"", ""c"",0,0,600,600);; new TGeoManager(""hype"", ""hyperboloid"");; TGeoMaterial *mat = new TGeoMaterial(""Al"", 26.98,13,2.7);; TGeoMedium *med = new TGeoMedium(""MED"",1,mat);; TGeoVolume *top = gGeoManager->MakeBox(""TOP"",med,100,100,100);; gGeoManager->SetTopVolume(top);; TGeoVolume *vol = gGeoManager->MakeHype(""HYPE"",med,10, 45 ,20,45,40);; TGeoHype *hype = (TGeoHype*)vol->GetShape();; top->AddNode(vol,1);; gGeoManager->CloseGeometry();; gGeoManager->SetNsegments(80);; top->Draw();; TView *view = gPad->GetView();; view->ShowAxis();; }; End_Macro. The hyperbolic surface equation is taken in the form:. ~~~{.cpp}; r^2 - z^2 * tan(st)^2 = rmin^2; ~~~. - `r,z:` cylindrical coordinates for a point on the surface; - `st:` stereo angle between the hyperbola asymptotic lines and Z axis; - `rmin:` minimum distance between hyperbola and Z axis (at `z=0`). The input parameters for a hyperboloid represent:. - `rin, stin:` minimum radius and stereo angle in degrees for the inner surface; - `rout, stout:` minimum radius and stereo angle in degrees for the outer surface; - `dz:` half length in Z (bounding planes positions at `+/-dz`). The following conditions are mandatory in order to avoid intersections; between the inner and outer hyperbolic surfaces in the range `+/-dz`:. - `rin < rout`; - `rout > 0`; - `rin^2 + dz^2 * tan(stin)^2 > rout^2 + dz^2 * tan(stout)^2`. Particular cases:. - `rin=0, stin0:` the inner surface is conical; - `stin=0 / stout=0:` cylindrical surface(s). */",MatchSource.CODE_COMMENT,geom/geom/src/TGeoHype.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHype.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHype.cxx:1446,Integrability,rout,rout,1446,"/** \class TGeoHype; \ingroup Shapes_classes. A hyperboloid is represented as a solid limited by two planes; perpendicular to the Z axis (top and bottom planes) and two hyperbolic; surfaces of revolution about Z axis (inner and outer surfaces). The; class describing hyperboloids is TGeoHype has 5 input parameters:. ~~~ {.cpp}; TGeoHype(Double_t rin,Double_t stin,Double_t rout,; Double_t stout,Double_t dz);; ~~~. Begin_Macro; {; TCanvas *c = new TCanvas(""c"", ""c"",0,0,600,600);; new TGeoManager(""hype"", ""hyperboloid"");; TGeoMaterial *mat = new TGeoMaterial(""Al"", 26.98,13,2.7);; TGeoMedium *med = new TGeoMedium(""MED"",1,mat);; TGeoVolume *top = gGeoManager->MakeBox(""TOP"",med,100,100,100);; gGeoManager->SetTopVolume(top);; TGeoVolume *vol = gGeoManager->MakeHype(""HYPE"",med,10, 45 ,20,45,40);; TGeoHype *hype = (TGeoHype*)vol->GetShape();; top->AddNode(vol,1);; gGeoManager->CloseGeometry();; gGeoManager->SetNsegments(80);; top->Draw();; TView *view = gPad->GetView();; view->ShowAxis();; }; End_Macro. The hyperbolic surface equation is taken in the form:. ~~~{.cpp}; r^2 - z^2 * tan(st)^2 = rmin^2; ~~~. - `r,z:` cylindrical coordinates for a point on the surface; - `st:` stereo angle between the hyperbola asymptotic lines and Z axis; - `rmin:` minimum distance between hyperbola and Z axis (at `z=0`). The input parameters for a hyperboloid represent:. - `rin, stin:` minimum radius and stereo angle in degrees for the inner surface; - `rout, stout:` minimum radius and stereo angle in degrees for the outer surface; - `dz:` half length in Z (bounding planes positions at `+/-dz`). The following conditions are mandatory in order to avoid intersections; between the inner and outer hyperbolic surfaces in the range `+/-dz`:. - `rin < rout`; - `rout > 0`; - `rin^2 + dz^2 * tan(stin)^2 > rout^2 + dz^2 * tan(stout)^2`. Particular cases:. - `rin=0, stin0:` the inner surface is conical; - `stin=0 / stout=0:` cylindrical surface(s). */",MatchSource.CODE_COMMENT,geom/geom/src/TGeoHype.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHype.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHype.cxx:1743,Integrability,rout,rout,1743,"/** \class TGeoHype; \ingroup Shapes_classes. A hyperboloid is represented as a solid limited by two planes; perpendicular to the Z axis (top and bottom planes) and two hyperbolic; surfaces of revolution about Z axis (inner and outer surfaces). The; class describing hyperboloids is TGeoHype has 5 input parameters:. ~~~ {.cpp}; TGeoHype(Double_t rin,Double_t stin,Double_t rout,; Double_t stout,Double_t dz);; ~~~. Begin_Macro; {; TCanvas *c = new TCanvas(""c"", ""c"",0,0,600,600);; new TGeoManager(""hype"", ""hyperboloid"");; TGeoMaterial *mat = new TGeoMaterial(""Al"", 26.98,13,2.7);; TGeoMedium *med = new TGeoMedium(""MED"",1,mat);; TGeoVolume *top = gGeoManager->MakeBox(""TOP"",med,100,100,100);; gGeoManager->SetTopVolume(top);; TGeoVolume *vol = gGeoManager->MakeHype(""HYPE"",med,10, 45 ,20,45,40);; TGeoHype *hype = (TGeoHype*)vol->GetShape();; top->AddNode(vol,1);; gGeoManager->CloseGeometry();; gGeoManager->SetNsegments(80);; top->Draw();; TView *view = gPad->GetView();; view->ShowAxis();; }; End_Macro. The hyperbolic surface equation is taken in the form:. ~~~{.cpp}; r^2 - z^2 * tan(st)^2 = rmin^2; ~~~. - `r,z:` cylindrical coordinates for a point on the surface; - `st:` stereo angle between the hyperbola asymptotic lines and Z axis; - `rmin:` minimum distance between hyperbola and Z axis (at `z=0`). The input parameters for a hyperboloid represent:. - `rin, stin:` minimum radius and stereo angle in degrees for the inner surface; - `rout, stout:` minimum radius and stereo angle in degrees for the outer surface; - `dz:` half length in Z (bounding planes positions at `+/-dz`). The following conditions are mandatory in order to avoid intersections; between the inner and outer hyperbolic surfaces in the range `+/-dz`:. - `rin < rout`; - `rout > 0`; - `rin^2 + dz^2 * tan(stin)^2 > rout^2 + dz^2 * tan(stout)^2`. Particular cases:. - `rin=0, stin0:` the inner surface is conical; - `stin=0 / stout=0:` cylindrical surface(s). */",MatchSource.CODE_COMMENT,geom/geom/src/TGeoHype.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHype.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHype.cxx:1753,Integrability,rout,rout,1753,"/** \class TGeoHype; \ingroup Shapes_classes. A hyperboloid is represented as a solid limited by two planes; perpendicular to the Z axis (top and bottom planes) and two hyperbolic; surfaces of revolution about Z axis (inner and outer surfaces). The; class describing hyperboloids is TGeoHype has 5 input parameters:. ~~~ {.cpp}; TGeoHype(Double_t rin,Double_t stin,Double_t rout,; Double_t stout,Double_t dz);; ~~~. Begin_Macro; {; TCanvas *c = new TCanvas(""c"", ""c"",0,0,600,600);; new TGeoManager(""hype"", ""hyperboloid"");; TGeoMaterial *mat = new TGeoMaterial(""Al"", 26.98,13,2.7);; TGeoMedium *med = new TGeoMedium(""MED"",1,mat);; TGeoVolume *top = gGeoManager->MakeBox(""TOP"",med,100,100,100);; gGeoManager->SetTopVolume(top);; TGeoVolume *vol = gGeoManager->MakeHype(""HYPE"",med,10, 45 ,20,45,40);; TGeoHype *hype = (TGeoHype*)vol->GetShape();; top->AddNode(vol,1);; gGeoManager->CloseGeometry();; gGeoManager->SetNsegments(80);; top->Draw();; TView *view = gPad->GetView();; view->ShowAxis();; }; End_Macro. The hyperbolic surface equation is taken in the form:. ~~~{.cpp}; r^2 - z^2 * tan(st)^2 = rmin^2; ~~~. - `r,z:` cylindrical coordinates for a point on the surface; - `st:` stereo angle between the hyperbola asymptotic lines and Z axis; - `rmin:` minimum distance between hyperbola and Z axis (at `z=0`). The input parameters for a hyperboloid represent:. - `rin, stin:` minimum radius and stereo angle in degrees for the inner surface; - `rout, stout:` minimum radius and stereo angle in degrees for the outer surface; - `dz:` half length in Z (bounding planes positions at `+/-dz`). The following conditions are mandatory in order to avoid intersections; between the inner and outer hyperbolic surfaces in the range `+/-dz`:. - `rin < rout`; - `rout > 0`; - `rin^2 + dz^2 * tan(stin)^2 > rout^2 + dz^2 * tan(stout)^2`. Particular cases:. - `rin=0, stin0:` the inner surface is conical; - `stin=0 / stout=0:` cylindrical surface(s). */",MatchSource.CODE_COMMENT,geom/geom/src/TGeoHype.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHype.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHype.cxx:1796,Integrability,rout,rout,1796,"/** \class TGeoHype; \ingroup Shapes_classes. A hyperboloid is represented as a solid limited by two planes; perpendicular to the Z axis (top and bottom planes) and two hyperbolic; surfaces of revolution about Z axis (inner and outer surfaces). The; class describing hyperboloids is TGeoHype has 5 input parameters:. ~~~ {.cpp}; TGeoHype(Double_t rin,Double_t stin,Double_t rout,; Double_t stout,Double_t dz);; ~~~. Begin_Macro; {; TCanvas *c = new TCanvas(""c"", ""c"",0,0,600,600);; new TGeoManager(""hype"", ""hyperboloid"");; TGeoMaterial *mat = new TGeoMaterial(""Al"", 26.98,13,2.7);; TGeoMedium *med = new TGeoMedium(""MED"",1,mat);; TGeoVolume *top = gGeoManager->MakeBox(""TOP"",med,100,100,100);; gGeoManager->SetTopVolume(top);; TGeoVolume *vol = gGeoManager->MakeHype(""HYPE"",med,10, 45 ,20,45,40);; TGeoHype *hype = (TGeoHype*)vol->GetShape();; top->AddNode(vol,1);; gGeoManager->CloseGeometry();; gGeoManager->SetNsegments(80);; top->Draw();; TView *view = gPad->GetView();; view->ShowAxis();; }; End_Macro. The hyperbolic surface equation is taken in the form:. ~~~{.cpp}; r^2 - z^2 * tan(st)^2 = rmin^2; ~~~. - `r,z:` cylindrical coordinates for a point on the surface; - `st:` stereo angle between the hyperbola asymptotic lines and Z axis; - `rmin:` minimum distance between hyperbola and Z axis (at `z=0`). The input parameters for a hyperboloid represent:. - `rin, stin:` minimum radius and stereo angle in degrees for the inner surface; - `rout, stout:` minimum radius and stereo angle in degrees for the outer surface; - `dz:` half length in Z (bounding planes positions at `+/-dz`). The following conditions are mandatory in order to avoid intersections; between the inner and outer hyperbolic surfaces in the range `+/-dz`:. - `rin < rout`; - `rout > 0`; - `rin^2 + dz^2 * tan(stin)^2 > rout^2 + dz^2 * tan(stout)^2`. Particular cases:. - `rin=0, stin0:` the inner surface is conical; - `stin=0 / stout=0:` cylindrical surface(s). */",MatchSource.CODE_COMMENT,geom/geom/src/TGeoHype.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHype.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHype.cxx:1642,Safety,avoid,avoid,1642,"/** \class TGeoHype; \ingroup Shapes_classes. A hyperboloid is represented as a solid limited by two planes; perpendicular to the Z axis (top and bottom planes) and two hyperbolic; surfaces of revolution about Z axis (inner and outer surfaces). The; class describing hyperboloids is TGeoHype has 5 input parameters:. ~~~ {.cpp}; TGeoHype(Double_t rin,Double_t stin,Double_t rout,; Double_t stout,Double_t dz);; ~~~. Begin_Macro; {; TCanvas *c = new TCanvas(""c"", ""c"",0,0,600,600);; new TGeoManager(""hype"", ""hyperboloid"");; TGeoMaterial *mat = new TGeoMaterial(""Al"", 26.98,13,2.7);; TGeoMedium *med = new TGeoMedium(""MED"",1,mat);; TGeoVolume *top = gGeoManager->MakeBox(""TOP"",med,100,100,100);; gGeoManager->SetTopVolume(top);; TGeoVolume *vol = gGeoManager->MakeHype(""HYPE"",med,10, 45 ,20,45,40);; TGeoHype *hype = (TGeoHype*)vol->GetShape();; top->AddNode(vol,1);; gGeoManager->CloseGeometry();; gGeoManager->SetNsegments(80);; top->Draw();; TView *view = gPad->GetView();; view->ShowAxis();; }; End_Macro. The hyperbolic surface equation is taken in the form:. ~~~{.cpp}; r^2 - z^2 * tan(st)^2 = rmin^2; ~~~. - `r,z:` cylindrical coordinates for a point on the surface; - `st:` stereo angle between the hyperbola asymptotic lines and Z axis; - `rmin:` minimum distance between hyperbola and Z axis (at `z=0`). The input parameters for a hyperboloid represent:. - `rin, stin:` minimum radius and stereo angle in degrees for the inner surface; - `rout, stout:` minimum radius and stereo angle in degrees for the outer surface; - `dz:` half length in Z (bounding planes positions at `+/-dz`). The following conditions are mandatory in order to avoid intersections; between the inner and outer hyperbolic surfaces in the range `+/-dz`:. - `rin < rout`; - `rout > 0`; - `rin^2 + dz^2 * tan(stin)^2 > rout^2 + dz^2 * tan(stout)^2`. Particular cases:. - `rin=0, stin0:` the inner surface is conical; - `stin=0 / stout=0:` cylindrical surface(s). */",MatchSource.CODE_COMMENT,geom/geom/src/TGeoHype.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHype.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHype.cxx:222,Integrability,rout,rout,222,"////////////////////////////////////////////////////////////////////////////////; /// Default constructor specifying a list of parameters; /// - param[0] = dz; /// - param[1] = rin; /// - param[2] = stin; /// - param[3] = rout; /// - param[4] = stout",MatchSource.CODE_COMMENT,geom/geom/src/TGeoHype.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHype.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHype.cxx:86,Testability,test,test,86,"////////////////////////////////////////////////////////////////////////////////; /// test if point is inside this tube",MatchSource.CODE_COMMENT,geom/geom/src/TGeoHype.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHype.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHype.cxx:26,Safety,safe,safety,26,"// 1. dr<0 => approximate safety with distance to tangent to hyperbola in z = |point[2]|",MatchSource.CODE_COMMENT,geom/geom/src/TGeoHype.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHype.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHype.cxx:26,Safety,safe,safety,26,"// 2. dr>0 => approximate safety with distance from point to segment P1(r(z0),z0) and P2(r0, z(r0))",MatchSource.CODE_COMMENT,geom/geom/src/TGeoHype.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHype.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHype.cxx:228,Integrability,rout,rout,228,"////////////////////////////////////////////////////////////////////////////////; /// Set dimensions of the hyperboloid starting from an array.; /// - param[0] = dz; /// - param[1] = rin; /// - param[2] = stin; /// - param[3] = rout; /// - param[4] = stout",MatchSource.CODE_COMMENT,geom/geom/src/TGeoHype.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHype.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHype.cxx:94,Safety,safe,safe,94,"////////////////////////////////////////////////////////////////////////////////; /// Compute safe distance from each of the points in the input array.; /// Input: Array of point coordinates, array of statuses for these points, size of the arrays; /// Output: Safety values",MatchSource.CODE_COMMENT,geom/geom/src/TGeoHype.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHype.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHype.cxx:260,Safety,Safe,Safety,260,"////////////////////////////////////////////////////////////////////////////////; /// Compute safe distance from each of the points in the input array.; /// Input: Array of point coordinates, array of statuses for these points, size of the arrays; /// Output: Safety values",MatchSource.CODE_COMMENT,geom/geom/src/TGeoHype.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHype.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:8685,Availability,down,down,8685,"t and closed (for instance the; previous example $ROOTSYS/tutorials/geom/rootgeom.C ), the manager class will register; itself to ROOT and the logical/physical structures will become immediately browsable.; The ROOT browser will display starting from the geometry folder : the list of; transformations and media, the top volume and the top logical node. These last; two can be fully expanded, any intermediate volume/node in the browser being subject; of direct access context menu operations (right mouse button click). All user; utilities of classes TGeoManager, TGeoVolume and TGeoNode can be called via the; context menu. \image html geom_browser.jpg. ### Drawing the geometry. Any logical volume can be drawn via TGeoVolume::Draw() member function.; This can be directly accessed from the context menu of the volume object; directly from the browser.; There are several drawing options that can be set with; TGeoManager::SetVisOption(Int_t opt) method :. #### opt=0; only the content of the volume is drawn, N levels down (default N=3).; This is the default behavior. The number of levels to be drawn can be changed; via TGeoManager::SetVisLevel(Int_t level) method. \image html geom_frame0.jpg. #### opt=1; the final leaves (e.g. daughters with no containment) of the branch; starting from volume are drawn down to the current number of levels.; WARNING : This mode is memory consuming; depending of the size of geometry, so drawing from top level within this mode; should be handled with care for expensive geometries. In future there will be; a limitation on the maximum number of nodes to be visualized. \image html geom_frame1.jpg. #### opt=2; only the clicked volume is visualized. This is automatically set by; TGeoVolume::DrawOnly() method. #### opt=3 - only a given path is visualized. This is automatically set by; TGeoVolume::DrawPath(const char *path) method. The current view can be exploded in cartesian, cylindrical or spherical; coordinates :; TGeoManager::SetExplodedView(Int_t ",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:8976,Availability,down,down,8976,"ormations and media, the top volume and the top logical node. These last; two can be fully expanded, any intermediate volume/node in the browser being subject; of direct access context menu operations (right mouse button click). All user; utilities of classes TGeoManager, TGeoVolume and TGeoNode can be called via the; context menu. \image html geom_browser.jpg. ### Drawing the geometry. Any logical volume can be drawn via TGeoVolume::Draw() member function.; This can be directly accessed from the context menu of the volume object; directly from the browser.; There are several drawing options that can be set with; TGeoManager::SetVisOption(Int_t opt) method :. #### opt=0; only the content of the volume is drawn, N levels down (default N=3).; This is the default behavior. The number of levels to be drawn can be changed; via TGeoManager::SetVisLevel(Int_t level) method. \image html geom_frame0.jpg. #### opt=1; the final leaves (e.g. daughters with no containment) of the branch; starting from volume are drawn down to the current number of levels.; WARNING : This mode is memory consuming; depending of the size of geometry, so drawing from top level within this mode; should be handled with care for expensive geometries. In future there will be; a limitation on the maximum number of nodes to be visualized. \image html geom_frame1.jpg. #### opt=2; only the clicked volume is visualized. This is automatically set by; TGeoVolume::DrawOnly() method. #### opt=3 - only a given path is visualized. This is automatically set by; TGeoVolume::DrawPath(const char *path) method. The current view can be exploded in cartesian, cylindrical or spherical; coordinates :; TGeoManager::SetExplodedView(Int_t opt). Options may be :; - 0 - default (no bombing); - 1 - cartesian coordinates. The bomb factor on each axis can be set with; TGeoManager::SetBombX(Double_t bomb) and corresponding Y and Z.; - 2 - bomb in cylindrical coordinates. Only the bomb factors on Z and R; are considered; \image html ",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:10637,Availability,CheckPoint,CheckPoint,10637,"tExplodedView(Int_t opt). Options may be :; - 0 - default (no bombing); - 1 - cartesian coordinates. The bomb factor on each axis can be set with; TGeoManager::SetBombX(Double_t bomb) and corresponding Y and Z.; - 2 - bomb in cylindrical coordinates. Only the bomb factors on Z and R; are considered; \image html geom_frameexp.jpg. - 3 - bomb in radial spherical coordinate : TGeoManager::SetBombR(). Volumes themselves support different visualization settings :; - TGeoVolume::SetVisibility() : set volume visibility.; - TGeoVolume::VisibleDaughters() : set daughters visibility.; All these actions automatically updates the current view if any. ### Checking the geometry. Several checking methods are accessible from the volume context menu. They; generally apply only to the visible parts of the drawn geometry in order to; ease geometry checking, and their implementation is in the TGeoChecker class; from the painting package. #### Checking a given point.; Can be called from TGeoManager::CheckPoint(Double_t x, Double_t y, Double_t z).; This method is drawing the daughters of the volume containing the point one; level down, printing the path to the deepest physical node holding this point.; It also computes the closest distance to any boundary. The point will be drawn; in red, as well as a sphere having this closest distance as radius. In case a; non-zero distance is given by the user as fifth argument of CheckPoint, this; distance will be used as radius of the safety sphere. \image html geom_checkpoint.jpg. #### Shooting random points.; Can be called from TGeoVolume::RandomPoints() (context menu function) and; it will draw this volume with current visualization settings. Random points; are generated in the bounding box of the top drawn volume. The points are; classified and drawn with the color of their deepest container. Only points; in visible nodes will be drawn. \image html geom_random1.jpg. #### Raytracing.; Can be called from TGeoVolume::RandomRays() (context menu of vo",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:10769,Availability,down,down,10769," each axis can be set with; TGeoManager::SetBombX(Double_t bomb) and corresponding Y and Z.; - 2 - bomb in cylindrical coordinates. Only the bomb factors on Z and R; are considered; \image html geom_frameexp.jpg. - 3 - bomb in radial spherical coordinate : TGeoManager::SetBombR(). Volumes themselves support different visualization settings :; - TGeoVolume::SetVisibility() : set volume visibility.; - TGeoVolume::VisibleDaughters() : set daughters visibility.; All these actions automatically updates the current view if any. ### Checking the geometry. Several checking methods are accessible from the volume context menu. They; generally apply only to the visible parts of the drawn geometry in order to; ease geometry checking, and their implementation is in the TGeoChecker class; from the painting package. #### Checking a given point.; Can be called from TGeoManager::CheckPoint(Double_t x, Double_t y, Double_t z).; This method is drawing the daughters of the volume containing the point one; level down, printing the path to the deepest physical node holding this point.; It also computes the closest distance to any boundary. The point will be drawn; in red, as well as a sphere having this closest distance as radius. In case a; non-zero distance is given by the user as fifth argument of CheckPoint, this; distance will be used as radius of the safety sphere. \image html geom_checkpoint.jpg. #### Shooting random points.; Can be called from TGeoVolume::RandomPoints() (context menu function) and; it will draw this volume with current visualization settings. Random points; are generated in the bounding box of the top drawn volume. The points are; classified and drawn with the color of their deepest container. Only points; in visible nodes will be drawn. \image html geom_random1.jpg. #### Raytracing.; Can be called from TGeoVolume::RandomRays() (context menu of volumes) and; will shoot rays from a given point in the local reference frame with random; directions. The intersections ",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:11062,Availability,CheckPoint,CheckPoint,11062,"e html geom_frameexp.jpg. - 3 - bomb in radial spherical coordinate : TGeoManager::SetBombR(). Volumes themselves support different visualization settings :; - TGeoVolume::SetVisibility() : set volume visibility.; - TGeoVolume::VisibleDaughters() : set daughters visibility.; All these actions automatically updates the current view if any. ### Checking the geometry. Several checking methods are accessible from the volume context menu. They; generally apply only to the visible parts of the drawn geometry in order to; ease geometry checking, and their implementation is in the TGeoChecker class; from the painting package. #### Checking a given point.; Can be called from TGeoManager::CheckPoint(Double_t x, Double_t y, Double_t z).; This method is drawing the daughters of the volume containing the point one; level down, printing the path to the deepest physical node holding this point.; It also computes the closest distance to any boundary. The point will be drawn; in red, as well as a sphere having this closest distance as radius. In case a; non-zero distance is given by the user as fifth argument of CheckPoint, this; distance will be used as radius of the safety sphere. \image html geom_checkpoint.jpg. #### Shooting random points.; Can be called from TGeoVolume::RandomPoints() (context menu function) and; it will draw this volume with current visualization settings. Random points; are generated in the bounding box of the top drawn volume. The points are; classified and drawn with the color of their deepest container. Only points; in visible nodes will be drawn. \image html geom_random1.jpg. #### Raytracing.; Can be called from TGeoVolume::RandomRays() (context menu of volumes) and; will shoot rays from a given point in the local reference frame with random; directions. The intersections with displayed nodes will appear as segments; having the color of the touched node. Drawn geometry will be then made invisible; in order to enhance rays. \image html geom_random2.jpg; */",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:10257,Deployability,update,updates,10257,"s to be visualized. \image html geom_frame1.jpg. #### opt=2; only the clicked volume is visualized. This is automatically set by; TGeoVolume::DrawOnly() method. #### opt=3 - only a given path is visualized. This is automatically set by; TGeoVolume::DrawPath(const char *path) method. The current view can be exploded in cartesian, cylindrical or spherical; coordinates :; TGeoManager::SetExplodedView(Int_t opt). Options may be :; - 0 - default (no bombing); - 1 - cartesian coordinates. The bomb factor on each axis can be set with; TGeoManager::SetBombX(Double_t bomb) and corresponding Y and Z.; - 2 - bomb in cylindrical coordinates. Only the bomb factors on Z and R; are considered; \image html geom_frameexp.jpg. - 3 - bomb in radial spherical coordinate : TGeoManager::SetBombR(). Volumes themselves support different visualization settings :; - TGeoVolume::SetVisibility() : set volume visibility.; - TGeoVolume::VisibleDaughters() : set daughters visibility.; All these actions automatically updates the current view if any. ### Checking the geometry. Several checking methods are accessible from the volume context menu. They; generally apply only to the visible parts of the drawn geometry in order to; ease geometry checking, and their implementation is in the TGeoChecker class; from the painting package. #### Checking a given point.; Can be called from TGeoManager::CheckPoint(Double_t x, Double_t y, Double_t z).; This method is drawing the daughters of the volume containing the point one; level down, printing the path to the deepest physical node holding this point.; It also computes the closest distance to any boundary. The point will be drawn; in red, as well as a sphere having this closest distance as radius. In case a; non-zero distance is given by the user as fifth argument of CheckPoint, this; distance will be used as radius of the safety sphere. \image html geom_checkpoint.jpg. #### Shooting random points.; Can be called from TGeoVolume::RandomPoints() (context menu",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:523,Integrability,interface,interface,523,"// @(#)root/geom:$Id$; // Author: Andrei Gheata 25/10/01; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGeoManager; \ingroup Geometry_classes. The manager class for any TGeo geometry. Provides user; interface for geometry creation, navigation, state querying,; visualization, IO, geometry checking and other utilities. ## General architecture. The ROOT geometry package is a tool designed for building, browsing,; tracking and visualizing a detector geometry. The code is independent from; other external MC for simulation, therefore it does not contain any; constraints related to physics. However, the package defines a number of; hooks for tracking, such as media, materials, magnetic field or track state flags,; in order to allow interfacing to tracking MC's. The final goal is to be; able to use the same geometry for several purposes, such as tracking,; reconstruction or visualization, taking advantage of the ROOT features; related to bookkeeping, I/O, histogramming, browsing and GUI's. The geometrical modeler is the most important component of the package and; it provides answers to the basic questions like ""Where am I ?"" or ""How far; from the next boundary ?"", but also to more complex ones like ""How far from; the closest surface ?"" or ""Which is the next crossing along a helix ?"". The architecture of the modeler is a combination between a GEANT-like; containment scheme and a normal CSG binary tree at the level of shapes. An; important common feature of all detector geometry descriptions is the; mother-daughter concept. This is the most natural approach when tracking; is concerned and imposes a set of constraints to the way geometry is defined.; Construc",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:9056,Integrability,depend,depending,9056,"being subject; of direct access context menu operations (right mouse button click). All user; utilities of classes TGeoManager, TGeoVolume and TGeoNode can be called via the; context menu. \image html geom_browser.jpg. ### Drawing the geometry. Any logical volume can be drawn via TGeoVolume::Draw() member function.; This can be directly accessed from the context menu of the volume object; directly from the browser.; There are several drawing options that can be set with; TGeoManager::SetVisOption(Int_t opt) method :. #### opt=0; only the content of the volume is drawn, N levels down (default N=3).; This is the default behavior. The number of levels to be drawn can be changed; via TGeoManager::SetVisLevel(Int_t level) method. \image html geom_frame0.jpg. #### opt=1; the final leaves (e.g. daughters with no containment) of the branch; starting from volume are drawn down to the current number of levels.; WARNING : This mode is memory consuming; depending of the size of geometry, so drawing from top level within this mode; should be handled with care for expensive geometries. In future there will be; a limitation on the maximum number of nodes to be visualized. \image html geom_frame1.jpg. #### opt=2; only the clicked volume is visualized. This is automatically set by; TGeoVolume::DrawOnly() method. #### opt=3 - only a given path is visualized. This is automatically set by; TGeoVolume::DrawPath(const char *path) method. The current view can be exploded in cartesian, cylindrical or spherical; coordinates :; TGeoManager::SetExplodedView(Int_t opt). Options may be :; - 0 - default (no bombing); - 1 - cartesian coordinates. The bomb factor on each axis can be set with; TGeoManager::SetBombX(Double_t bomb) and corresponding Y and Z.; - 2 - bomb in cylindrical coordinates. Only the bomb factors on Z and R; are considered; \image html geom_frameexp.jpg. - 3 - bomb in radial spherical coordinate : TGeoManager::SetBombR(). Volumes themselves support different visualization settin",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:4355,Modifiability,inherit,inherits,4355,"mes),; every volume becoming a branch in this graph. Any volume in the logical graph; can become the actual top volume at run time (see TGeoManager::SetTopVolume()).; All functionalities of the modeler will behave in this case as if only the; corresponding branch starting from this volume is the registered geometry. \image html geom_graf.jpg. A given volume can be positioned several times in the geometry. A volume; can be divided according default or user-defined patterns, creating automatically; the list of division nodes inside. The elementary volumes created during the; dividing process follow the same scheme as usual volumes, therefore it is possible; to position further geometrical structures inside or to divide them further more; (see TGeoVolume::Divide()). The primitive shapes supported by the package are basically the GEANT3; shapes (see class TGeoShape), arbitrary wedges with eight vertices on two parallel; planes. All basic primitives inherits from class TGeoBBox since the bounding box; of a solid is essential for the tracking algorithms. They also implement the; virtual methods defined in the virtual class TGeoShape (point and segment; classification). User-defined primitives can be directly plugged into the modeler; provided that they override these methods. Composite shapes will be soon supported; by the modeler. In order to build a TGeoCompositeShape, one will have to define; first the primitive components. The object that handle boolean; operations among components is called TGeoBoolCombinator and it has to be; constructed providing a string boolean expression between the components names. ## Example for building a simple geometry. Begin_Macro(source); ../../../tutorials/geom/rootgeom.C; End_Macro. ## TGeoManager - the manager class for the geometry package. TGeoManager class is embedding all the API needed for building and tracking; a geometry. It defines a global pointer (gGeoManager) in order to be fully; accessible from external code. The mechanism",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:11903,Modifiability,enhance,enhance,11903,"e html geom_frameexp.jpg. - 3 - bomb in radial spherical coordinate : TGeoManager::SetBombR(). Volumes themselves support different visualization settings :; - TGeoVolume::SetVisibility() : set volume visibility.; - TGeoVolume::VisibleDaughters() : set daughters visibility.; All these actions automatically updates the current view if any. ### Checking the geometry. Several checking methods are accessible from the volume context menu. They; generally apply only to the visible parts of the drawn geometry in order to; ease geometry checking, and their implementation is in the TGeoChecker class; from the painting package. #### Checking a given point.; Can be called from TGeoManager::CheckPoint(Double_t x, Double_t y, Double_t z).; This method is drawing the daughters of the volume containing the point one; level down, printing the path to the deepest physical node holding this point.; It also computes the closest distance to any boundary. The point will be drawn; in red, as well as a sphere having this closest distance as radius. In case a; non-zero distance is given by the user as fifth argument of CheckPoint, this; distance will be used as radius of the safety sphere. \image html geom_checkpoint.jpg. #### Shooting random points.; Can be called from TGeoVolume::RandomPoints() (context menu function) and; it will draw this volume with current visualization settings. Random points; are generated in the bounding box of the top drawn volume. The points are; classified and drawn with the color of their deepest container. Only points; in visible nodes will be drawn. \image html geom_random1.jpg. #### Raytracing.; Can be called from TGeoVolume::RandomRays() (context menu of volumes) and; will shoot rays from a given point in the local reference frame with random; directions. The intersections with displayed nodes will appear as segments; having the color of the touched node. Drawn geometry will be then made invisible; in order to enhance rays. \image html geom_random2.jpg; */",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:6031,Performance,cache,cache,6031,"een the components names. ## Example for building a simple geometry. Begin_Macro(source); ../../../tutorials/geom/rootgeom.C; End_Macro. ## TGeoManager - the manager class for the geometry package. TGeoManager class is embedding all the API needed for building and tracking; a geometry. It defines a global pointer (gGeoManager) in order to be fully; accessible from external code. The mechanism of handling multiple geometries; at the same time will be soon implemented. TGeoManager is the owner of all geometry objects defined in a session,; therefore users must not try to control their deletion. It contains lists of; media, materials, transformations, shapes and volumes. Logical nodes (positioned; volumes) are created and destroyed by the TGeoVolume class. Physical; nodes and their global transformations are subjected to a caching mechanism; due to the sometimes very large memory requirements of logical graph expansion.; The caching mechanism is triggered by the total number of physical instances; of volumes and the cache manager is a client of TGeoManager. The manager class; also controls the painter client. This is linked with ROOT graphical libraries; loaded on demand in order to control visualization actions. ## Rules for building a valid geometry. A given geometry can be built in various ways, but there are mandatory steps; that have to be followed in order to be validated by the modeler. There are; general rules : volumes needs media and shapes in order to be created,; both container and containee volumes must be created before linking them together,; and the relative transformation matrix must be provided. All branches must; have an upper link point otherwise they will not be considered as part of the; geometry. Visibility or tracking properties of volumes can be provided both; at build time or after geometry is closed, but global visualization settings; (see TGeoPainter class) should not be provided at build time, otherwise the; drawing package will be loaded. ",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:6172,Performance,load,loaded,6172,"the geometry package. TGeoManager class is embedding all the API needed for building and tracking; a geometry. It defines a global pointer (gGeoManager) in order to be fully; accessible from external code. The mechanism of handling multiple geometries; at the same time will be soon implemented. TGeoManager is the owner of all geometry objects defined in a session,; therefore users must not try to control their deletion. It contains lists of; media, materials, transformations, shapes and volumes. Logical nodes (positioned; volumes) are created and destroyed by the TGeoVolume class. Physical; nodes and their global transformations are subjected to a caching mechanism; due to the sometimes very large memory requirements of logical graph expansion.; The caching mechanism is triggered by the total number of physical instances; of volumes and the cache manager is a client of TGeoManager. The manager class; also controls the painter client. This is linked with ROOT graphical libraries; loaded on demand in order to control visualization actions. ## Rules for building a valid geometry. A given geometry can be built in various ways, but there are mandatory steps; that have to be followed in order to be validated by the modeler. There are; general rules : volumes needs media and shapes in order to be created,; both container and containee volumes must be created before linking them together,; and the relative transformation matrix must be provided. All branches must; have an upper link point otherwise they will not be considered as part of the; geometry. Visibility or tracking properties of volumes can be provided both; at build time or after geometry is closed, but global visualization settings; (see TGeoPainter class) should not be provided at build time, otherwise the; drawing package will be loaded. There is also a list of specific rules :; positioned daughters should not extrude their mother or intersect with sisters; unless this is specified (see TGeoVolume::AddNodeOverl",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:6994,Performance,load,loaded,6994,"very large memory requirements of logical graph expansion.; The caching mechanism is triggered by the total number of physical instances; of volumes and the cache manager is a client of TGeoManager. The manager class; also controls the painter client. This is linked with ROOT graphical libraries; loaded on demand in order to control visualization actions. ## Rules for building a valid geometry. A given geometry can be built in various ways, but there are mandatory steps; that have to be followed in order to be validated by the modeler. There are; general rules : volumes needs media and shapes in order to be created,; both container and containee volumes must be created before linking them together,; and the relative transformation matrix must be provided. All branches must; have an upper link point otherwise they will not be considered as part of the; geometry. Visibility or tracking properties of volumes can be provided both; at build time or after geometry is closed, but global visualization settings; (see TGeoPainter class) should not be provided at build time, otherwise the; drawing package will be loaded. There is also a list of specific rules :; positioned daughters should not extrude their mother or intersect with sisters; unless this is specified (see TGeoVolume::AddNodeOverlap()), the top volume; (containing all geometry tree) must be specified before closing the geometry; and must not be positioned - it represents the global reference frame. After; building the full geometry tree, the geometry must be closed; (see TGeoManager::CloseGeometry()). Voxelization can be redone per volume after; this process. Below is the general scheme of the manager class. \image html geom_mgr.jpg. ## An interactive session. Provided that a geometry was successfully built and closed (for instance the; previous example $ROOTSYS/tutorials/geom/rootgeom.C ), the manager class will register; itself to ROOT and the logical/physical structures will become immediately browsable.; The ",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:765,Safety,detect,detector,765,"// @(#)root/geom:$Id$; // Author: Andrei Gheata 25/10/01; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGeoManager; \ingroup Geometry_classes. The manager class for any TGeo geometry. Provides user; interface for geometry creation, navigation, state querying,; visualization, IO, geometry checking and other utilities. ## General architecture. The ROOT geometry package is a tool designed for building, browsing,; tracking and visualizing a detector geometry. The code is independent from; other external MC for simulation, therefore it does not contain any; constraints related to physics. However, the package defines a number of; hooks for tracking, such as media, materials, magnetic field or track state flags,; in order to allow interfacing to tracking MC's. The final goal is to be; able to use the same geometry for several purposes, such as tracking,; reconstruction or visualization, taking advantage of the ROOT features; related to bookkeeping, I/O, histogramming, browsing and GUI's. The geometrical modeler is the most important component of the package and; it provides answers to the basic questions like ""Where am I ?"" or ""How far; from the next boundary ?"", but also to more complex ones like ""How far from; the closest surface ?"" or ""Which is the next crossing along a helix ?"". The architecture of the modeler is a combination between a GEANT-like; containment scheme and a normal CSG binary tree at the level of shapes. An; important common feature of all detector geometry descriptions is the; mother-daughter concept. This is the most natural approach when tracking; is concerned and imposes a set of constraints to the way geometry is defined.; Construc",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:1801,Safety,detect,detector,1801,"other external MC for simulation, therefore it does not contain any; constraints related to physics. However, the package defines a number of; hooks for tracking, such as media, materials, magnetic field or track state flags,; in order to allow interfacing to tracking MC's. The final goal is to be; able to use the same geometry for several purposes, such as tracking,; reconstruction or visualization, taking advantage of the ROOT features; related to bookkeeping, I/O, histogramming, browsing and GUI's. The geometrical modeler is the most important component of the package and; it provides answers to the basic questions like ""Where am I ?"" or ""How far; from the next boundary ?"", but also to more complex ones like ""How far from; the closest surface ?"" or ""Which is the next crossing along a helix ?"". The architecture of the modeler is a combination between a GEANT-like; containment scheme and a normal CSG binary tree at the level of shapes. An; important common feature of all detector geometry descriptions is the; mother-daughter concept. This is the most natural approach when tracking; is concerned and imposes a set of constraints to the way geometry is defined.; Constructive solid geometry composition is used only in order to create more; complex shapes from an existing set of primitives through boolean operations.; This feature is not implemented yet but in future full definition of boolean; expressions will be supported. Practically every geometry defined in GEANT style can be mapped by the modeler.; The basic components used for building the logical hierarchy of the geometry; are called ""volumes"" and ""nodes"". Volumes (sometimes called ""solids"") are fully; defined geometrical objects having a given shape and medium and possibly; containing a list of nodes. Nodes represent just positioned instances of volumes; inside a container volume and they are not directly defined by user. They are; automatically created as a result of adding one volume inside other or dividing;",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:11119,Safety,safe,safety,11119,"e html geom_frameexp.jpg. - 3 - bomb in radial spherical coordinate : TGeoManager::SetBombR(). Volumes themselves support different visualization settings :; - TGeoVolume::SetVisibility() : set volume visibility.; - TGeoVolume::VisibleDaughters() : set daughters visibility.; All these actions automatically updates the current view if any. ### Checking the geometry. Several checking methods are accessible from the volume context menu. They; generally apply only to the visible parts of the drawn geometry in order to; ease geometry checking, and their implementation is in the TGeoChecker class; from the painting package. #### Checking a given point.; Can be called from TGeoManager::CheckPoint(Double_t x, Double_t y, Double_t z).; This method is drawing the daughters of the volume containing the point one; level down, printing the path to the deepest physical node holding this point.; It also computes the closest distance to any boundary. The point will be drawn; in red, as well as a sphere having this closest distance as radius. In case a; non-zero distance is given by the user as fifth argument of CheckPoint, this; distance will be used as radius of the safety sphere. \image html geom_checkpoint.jpg. #### Shooting random points.; Can be called from TGeoVolume::RandomPoints() (context menu function) and; it will draw this volume with current visualization settings. Random points; are generated in the bounding box of the top drawn volume. The points are; classified and drawn with the color of their deepest container. Only points; in visible nodes will be drawn. \image html geom_random1.jpg. #### Raytracing.; Can be called from TGeoVolume::RandomRays() (context menu of volumes) and; will shoot rays from a given point in the local reference frame with random; directions. The intersections with displayed nodes will appear as segments; having the color of the touched node. Drawn geometry will be then made invisible; in order to enhance rays. \image html geom_random2.jpg; */",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:5353,Security,access,accessible,5353,"ll basic primitives inherits from class TGeoBBox since the bounding box; of a solid is essential for the tracking algorithms. They also implement the; virtual methods defined in the virtual class TGeoShape (point and segment; classification). User-defined primitives can be directly plugged into the modeler; provided that they override these methods. Composite shapes will be soon supported; by the modeler. In order to build a TGeoCompositeShape, one will have to define; first the primitive components. The object that handle boolean; operations among components is called TGeoBoolCombinator and it has to be; constructed providing a string boolean expression between the components names. ## Example for building a simple geometry. Begin_Macro(source); ../../../tutorials/geom/rootgeom.C; End_Macro. ## TGeoManager - the manager class for the geometry package. TGeoManager class is embedding all the API needed for building and tracking; a geometry. It defines a global pointer (gGeoManager) in order to be fully; accessible from external code. The mechanism of handling multiple geometries; at the same time will be soon implemented. TGeoManager is the owner of all geometry objects defined in a session,; therefore users must not try to control their deletion. It contains lists of; media, materials, transformations, shapes and volumes. Logical nodes (positioned; volumes) are created and destroyed by the TGeoVolume class. Physical; nodes and their global transformations are subjected to a caching mechanism; due to the sometimes very large memory requirements of logical graph expansion.; The caching mechanism is triggered by the total number of physical instances; of volumes and the cache manager is a client of TGeoManager. The manager class; also controls the painter client. This is linked with ROOT graphical libraries; loaded on demand in order to control visualization actions. ## Rules for building a valid geometry. A given geometry can be built in various ways, but there are man",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:6390,Security,validat,validated,6390,"be fully; accessible from external code. The mechanism of handling multiple geometries; at the same time will be soon implemented. TGeoManager is the owner of all geometry objects defined in a session,; therefore users must not try to control their deletion. It contains lists of; media, materials, transformations, shapes and volumes. Logical nodes (positioned; volumes) are created and destroyed by the TGeoVolume class. Physical; nodes and their global transformations are subjected to a caching mechanism; due to the sometimes very large memory requirements of logical graph expansion.; The caching mechanism is triggered by the total number of physical instances; of volumes and the cache manager is a client of TGeoManager. The manager class; also controls the painter client. This is linked with ROOT graphical libraries; loaded on demand in order to control visualization actions. ## Rules for building a valid geometry. A given geometry can be built in various ways, but there are mandatory steps; that have to be followed in order to be validated by the modeler. There are; general rules : volumes needs media and shapes in order to be created,; both container and containee volumes must be created before linking them together,; and the relative transformation matrix must be provided. All branches must; have an upper link point otherwise they will not be considered as part of the; geometry. Visibility or tracking properties of volumes can be provided both; at build time or after geometry is closed, but global visualization settings; (see TGeoPainter class) should not be provided at build time, otherwise the; drawing package will be loaded. There is also a list of specific rules :; positioned daughters should not extrude their mother or intersect with sisters; unless this is specified (see TGeoVolume::AddNodeOverlap()), the top volume; (containing all geometry tree) must be specified before closing the geometry; and must not be positioned - it represents the global reference ",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:8125,Security,access,access,8125," intersect with sisters; unless this is specified (see TGeoVolume::AddNodeOverlap()), the top volume; (containing all geometry tree) must be specified before closing the geometry; and must not be positioned - it represents the global reference frame. After; building the full geometry tree, the geometry must be closed; (see TGeoManager::CloseGeometry()). Voxelization can be redone per volume after; this process. Below is the general scheme of the manager class. \image html geom_mgr.jpg. ## An interactive session. Provided that a geometry was successfully built and closed (for instance the; previous example $ROOTSYS/tutorials/geom/rootgeom.C ), the manager class will register; itself to ROOT and the logical/physical structures will become immediately browsable.; The ROOT browser will display starting from the geometry folder : the list of; transformations and media, the top volume and the top logical node. These last; two can be fully expanded, any intermediate volume/node in the browser being subject; of direct access context menu operations (right mouse button click). All user; utilities of classes TGeoManager, TGeoVolume and TGeoNode can be called via the; context menu. \image html geom_browser.jpg. ### Drawing the geometry. Any logical volume can be drawn via TGeoVolume::Draw() member function.; This can be directly accessed from the context menu of the volume object; directly from the browser.; There are several drawing options that can be set with; TGeoManager::SetVisOption(Int_t opt) method :. #### opt=0; only the content of the volume is drawn, N levels down (default N=3).; This is the default behavior. The number of levels to be drawn can be changed; via TGeoManager::SetVisLevel(Int_t level) method. \image html geom_frame0.jpg. #### opt=1; the final leaves (e.g. daughters with no containment) of the branch; starting from volume are drawn down to the current number of levels.; WARNING : This mode is memory consuming; depending of the size of geometry, so drawin",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:8439,Security,access,accessed,8439," can be redone per volume after; this process. Below is the general scheme of the manager class. \image html geom_mgr.jpg. ## An interactive session. Provided that a geometry was successfully built and closed (for instance the; previous example $ROOTSYS/tutorials/geom/rootgeom.C ), the manager class will register; itself to ROOT and the logical/physical structures will become immediately browsable.; The ROOT browser will display starting from the geometry folder : the list of; transformations and media, the top volume and the top logical node. These last; two can be fully expanded, any intermediate volume/node in the browser being subject; of direct access context menu operations (right mouse button click). All user; utilities of classes TGeoManager, TGeoVolume and TGeoNode can be called via the; context menu. \image html geom_browser.jpg. ### Drawing the geometry. Any logical volume can be drawn via TGeoVolume::Draw() member function.; This can be directly accessed from the context menu of the volume object; directly from the browser.; There are several drawing options that can be set with; TGeoManager::SetVisOption(Int_t opt) method :. #### opt=0; only the content of the volume is drawn, N levels down (default N=3).; This is the default behavior. The number of levels to be drawn can be changed; via TGeoManager::SetVisLevel(Int_t level) method. \image html geom_frame0.jpg. #### opt=1; the final leaves (e.g. daughters with no containment) of the branch; starting from volume are drawn down to the current number of levels.; WARNING : This mode is memory consuming; depending of the size of geometry, so drawing from top level within this mode; should be handled with care for expensive geometries. In future there will be; a limitation on the maximum number of nodes to be visualized. \image html geom_frame1.jpg. #### opt=2; only the clicked volume is visualized. This is automatically set by; TGeoVolume::DrawOnly() method. #### opt=3 - only a given path is visualized. This",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:10346,Security,access,accessible,10346,"zed. This is automatically set by; TGeoVolume::DrawOnly() method. #### opt=3 - only a given path is visualized. This is automatically set by; TGeoVolume::DrawPath(const char *path) method. The current view can be exploded in cartesian, cylindrical or spherical; coordinates :; TGeoManager::SetExplodedView(Int_t opt). Options may be :; - 0 - default (no bombing); - 1 - cartesian coordinates. The bomb factor on each axis can be set with; TGeoManager::SetBombX(Double_t bomb) and corresponding Y and Z.; - 2 - bomb in cylindrical coordinates. Only the bomb factors on Z and R; are considered; \image html geom_frameexp.jpg. - 3 - bomb in radial spherical coordinate : TGeoManager::SetBombR(). Volumes themselves support different visualization settings :; - TGeoVolume::SetVisibility() : set volume visibility.; - TGeoVolume::VisibleDaughters() : set daughters visibility.; All these actions automatically updates the current view if any. ### Checking the geometry. Several checking methods are accessible from the volume context menu. They; generally apply only to the visible parts of the drawn geometry in order to; ease geometry checking, and their implementation is in the TGeoChecker class; from the painting package. #### Checking a given point.; Can be called from TGeoManager::CheckPoint(Double_t x, Double_t y, Double_t z).; This method is drawing the daughters of the volume containing the point one; level down, printing the path to the deepest physical node holding this point.; It also computes the closest distance to any boundary. The point will be drawn; in red, as well as a sphere having this closest distance as radius. In case a; non-zero distance is given by the user as fifth argument of CheckPoint, this; distance will be used as radius of the safety sphere. \image html geom_checkpoint.jpg. #### Shooting random points.; Can be called from TGeoVolume::RandomPoints() (context menu function) and; it will draw this volume with current visualization settings. Random points; ar",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:2383,Testability,log,logical,2383,"d; it provides answers to the basic questions like ""Where am I ?"" or ""How far; from the next boundary ?"", but also to more complex ones like ""How far from; the closest surface ?"" or ""Which is the next crossing along a helix ?"". The architecture of the modeler is a combination between a GEANT-like; containment scheme and a normal CSG binary tree at the level of shapes. An; important common feature of all detector geometry descriptions is the; mother-daughter concept. This is the most natural approach when tracking; is concerned and imposes a set of constraints to the way geometry is defined.; Constructive solid geometry composition is used only in order to create more; complex shapes from an existing set of primitives through boolean operations.; This feature is not implemented yet but in future full definition of boolean; expressions will be supported. Practically every geometry defined in GEANT style can be mapped by the modeler.; The basic components used for building the logical hierarchy of the geometry; are called ""volumes"" and ""nodes"". Volumes (sometimes called ""solids"") are fully; defined geometrical objects having a given shape and medium and possibly; containing a list of nodes. Nodes represent just positioned instances of volumes; inside a container volume and they are not directly defined by user. They are; automatically created as a result of adding one volume inside other or dividing; a volume. The geometrical transformation hold by nodes is always defined with; respect to their mother (relative positioning). Reflection matrices are allowed.; All volumes have to be fully aware of their containees when the geometry is; closed. They will build additional structures (voxels) in order to fasten-up; the search algorithms. Finally, nodes can be regarded as bidirectional links; between containers and containees objects. The structure defined in this way is a graph structure since volumes are; replicable (same volume can become daughter node of several other vol",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:3467,Testability,log,logical,3467,"ed geometrical objects having a given shape and medium and possibly; containing a list of nodes. Nodes represent just positioned instances of volumes; inside a container volume and they are not directly defined by user. They are; automatically created as a result of adding one volume inside other or dividing; a volume. The geometrical transformation hold by nodes is always defined with; respect to their mother (relative positioning). Reflection matrices are allowed.; All volumes have to be fully aware of their containees when the geometry is; closed. They will build additional structures (voxels) in order to fasten-up; the search algorithms. Finally, nodes can be regarded as bidirectional links; between containers and containees objects. The structure defined in this way is a graph structure since volumes are; replicable (same volume can become daughter node of several other volumes),; every volume becoming a branch in this graph. Any volume in the logical graph; can become the actual top volume at run time (see TGeoManager::SetTopVolume()).; All functionalities of the modeler will behave in this case as if only the; corresponding branch starting from this volume is the registered geometry. \image html geom_graf.jpg. A given volume can be positioned several times in the geometry. A volume; can be divided according default or user-defined patterns, creating automatically; the list of division nodes inside. The elementary volumes created during the; dividing process follow the same scheme as usual volumes, therefore it is possible; to position further geometrical structures inside or to divide them further more; (see TGeoVolume::Divide()). The primitive shapes supported by the package are basically the GEANT3; shapes (see class TGeoShape), arbitrary wedges with eight vertices on two parallel; planes. All basic primitives inherits from class TGeoBBox since the bounding box; of a solid is essential for the tracking algorithms. They also implement the; virtual methods def",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:5679,Testability,Log,Logical,5679,"orted; by the modeler. In order to build a TGeoCompositeShape, one will have to define; first the primitive components. The object that handle boolean; operations among components is called TGeoBoolCombinator and it has to be; constructed providing a string boolean expression between the components names. ## Example for building a simple geometry. Begin_Macro(source); ../../../tutorials/geom/rootgeom.C; End_Macro. ## TGeoManager - the manager class for the geometry package. TGeoManager class is embedding all the API needed for building and tracking; a geometry. It defines a global pointer (gGeoManager) in order to be fully; accessible from external code. The mechanism of handling multiple geometries; at the same time will be soon implemented. TGeoManager is the owner of all geometry objects defined in a session,; therefore users must not try to control their deletion. It contains lists of; media, materials, transformations, shapes and volumes. Logical nodes (positioned; volumes) are created and destroyed by the TGeoVolume class. Physical; nodes and their global transformations are subjected to a caching mechanism; due to the sometimes very large memory requirements of logical graph expansion.; The caching mechanism is triggered by the total number of physical instances; of volumes and the cache manager is a client of TGeoManager. The manager class; also controls the painter client. This is linked with ROOT graphical libraries; loaded on demand in order to control visualization actions. ## Rules for building a valid geometry. A given geometry can be built in various ways, but there are mandatory steps; that have to be followed in order to be validated by the modeler. There are; general rules : volumes needs media and shapes in order to be created,; both container and containee volumes must be created before linking them together,; and the relative transformation matrix must be provided. All branches must; have an upper link point otherwise they will not be considered ",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:5908,Testability,log,logical,5908,"ect that handle boolean; operations among components is called TGeoBoolCombinator and it has to be; constructed providing a string boolean expression between the components names. ## Example for building a simple geometry. Begin_Macro(source); ../../../tutorials/geom/rootgeom.C; End_Macro. ## TGeoManager - the manager class for the geometry package. TGeoManager class is embedding all the API needed for building and tracking; a geometry. It defines a global pointer (gGeoManager) in order to be fully; accessible from external code. The mechanism of handling multiple geometries; at the same time will be soon implemented. TGeoManager is the owner of all geometry objects defined in a session,; therefore users must not try to control their deletion. It contains lists of; media, materials, transformations, shapes and volumes. Logical nodes (positioned; volumes) are created and destroyed by the TGeoVolume class. Physical; nodes and their global transformations are subjected to a caching mechanism; due to the sometimes very large memory requirements of logical graph expansion.; The caching mechanism is triggered by the total number of physical instances; of volumes and the cache manager is a client of TGeoManager. The manager class; also controls the painter client. This is linked with ROOT graphical libraries; loaded on demand in order to control visualization actions. ## Rules for building a valid geometry. A given geometry can be built in various ways, but there are mandatory steps; that have to be followed in order to be validated by the modeler. There are; general rules : volumes needs media and shapes in order to be created,; both container and containee volumes must be created before linking them together,; and the relative transformation matrix must be provided. All branches must; have an upper link point otherwise they will not be considered as part of the; geometry. Visibility or tracking properties of volumes can be provided both; at build time or after geometry is",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:7806,Testability,log,logical,7806,"ed both; at build time or after geometry is closed, but global visualization settings; (see TGeoPainter class) should not be provided at build time, otherwise the; drawing package will be loaded. There is also a list of specific rules :; positioned daughters should not extrude their mother or intersect with sisters; unless this is specified (see TGeoVolume::AddNodeOverlap()), the top volume; (containing all geometry tree) must be specified before closing the geometry; and must not be positioned - it represents the global reference frame. After; building the full geometry tree, the geometry must be closed; (see TGeoManager::CloseGeometry()). Voxelization can be redone per volume after; this process. Below is the general scheme of the manager class. \image html geom_mgr.jpg. ## An interactive session. Provided that a geometry was successfully built and closed (for instance the; previous example $ROOTSYS/tutorials/geom/rootgeom.C ), the manager class will register; itself to ROOT and the logical/physical structures will become immediately browsable.; The ROOT browser will display starting from the geometry folder : the list of; transformations and media, the top volume and the top logical node. These last; two can be fully expanded, any intermediate volume/node in the browser being subject; of direct access context menu operations (right mouse button click). All user; utilities of classes TGeoManager, TGeoVolume and TGeoNode can be called via the; context menu. \image html geom_browser.jpg. ### Drawing the geometry. Any logical volume can be drawn via TGeoVolume::Draw() member function.; This can be directly accessed from the context menu of the volume object; directly from the browser.; There are several drawing options that can be set with; TGeoManager::SetVisOption(Int_t opt) method :. #### opt=0; only the content of the volume is drawn, N levels down (default N=3).; This is the default behavior. The number of levels to be drawn can be changed; via TGeoManager::SetVi",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:8003,Testability,log,logical,8003," build time, otherwise the; drawing package will be loaded. There is also a list of specific rules :; positioned daughters should not extrude their mother or intersect with sisters; unless this is specified (see TGeoVolume::AddNodeOverlap()), the top volume; (containing all geometry tree) must be specified before closing the geometry; and must not be positioned - it represents the global reference frame. After; building the full geometry tree, the geometry must be closed; (see TGeoManager::CloseGeometry()). Voxelization can be redone per volume after; this process. Below is the general scheme of the manager class. \image html geom_mgr.jpg. ## An interactive session. Provided that a geometry was successfully built and closed (for instance the; previous example $ROOTSYS/tutorials/geom/rootgeom.C ), the manager class will register; itself to ROOT and the logical/physical structures will become immediately browsable.; The ROOT browser will display starting from the geometry folder : the list of; transformations and media, the top volume and the top logical node. These last; two can be fully expanded, any intermediate volume/node in the browser being subject; of direct access context menu operations (right mouse button click). All user; utilities of classes TGeoManager, TGeoVolume and TGeoNode can be called via the; context menu. \image html geom_browser.jpg. ### Drawing the geometry. Any logical volume can be drawn via TGeoVolume::Draw() member function.; This can be directly accessed from the context menu of the volume object; directly from the browser.; There are several drawing options that can be set with; TGeoManager::SetVisOption(Int_t opt) method :. #### opt=0; only the content of the volume is drawn, N levels down (default N=3).; This is the default behavior. The number of levels to be drawn can be changed; via TGeoManager::SetVisLevel(Int_t level) method. \image html geom_frame0.jpg. #### opt=1; the final leaves (e.g. daughters with no containment) of the branc",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:8349,Testability,log,logical,8349,"try tree, the geometry must be closed; (see TGeoManager::CloseGeometry()). Voxelization can be redone per volume after; this process. Below is the general scheme of the manager class. \image html geom_mgr.jpg. ## An interactive session. Provided that a geometry was successfully built and closed (for instance the; previous example $ROOTSYS/tutorials/geom/rootgeom.C ), the manager class will register; itself to ROOT and the logical/physical structures will become immediately browsable.; The ROOT browser will display starting from the geometry folder : the list of; transformations and media, the top volume and the top logical node. These last; two can be fully expanded, any intermediate volume/node in the browser being subject; of direct access context menu operations (right mouse button click). All user; utilities of classes TGeoManager, TGeoVolume and TGeoNode can be called via the; context menu. \image html geom_browser.jpg. ### Drawing the geometry. Any logical volume can be drawn via TGeoVolume::Draw() member function.; This can be directly accessed from the context menu of the volume object; directly from the browser.; There are several drawing options that can be set with; TGeoManager::SetVisOption(Int_t opt) method :. #### opt=0; only the content of the volume is drawn, N levels down (default N=3).; This is the default behavior. The number of levels to be drawn can be changed; via TGeoManager::SetVisLevel(Int_t level) method. \image html geom_frame0.jpg. #### opt=1; the final leaves (e.g. daughters with no containment) of the branch; starting from volume are drawn down to the current number of levels.; WARNING : This mode is memory consuming; depending of the size of geometry, so drawing from top level within this mode; should be handled with care for expensive geometries. In future there will be; a limitation on the maximum number of nodes to be visualized. \image html geom_frame1.jpg. #### opt=2; only the clicked volume is visualized. This is automatically se",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:5054,Usability,simpl,simple,5054,"s possible; to position further geometrical structures inside or to divide them further more; (see TGeoVolume::Divide()). The primitive shapes supported by the package are basically the GEANT3; shapes (see class TGeoShape), arbitrary wedges with eight vertices on two parallel; planes. All basic primitives inherits from class TGeoBBox since the bounding box; of a solid is essential for the tracking algorithms. They also implement the; virtual methods defined in the virtual class TGeoShape (point and segment; classification). User-defined primitives can be directly plugged into the modeler; provided that they override these methods. Composite shapes will be soon supported; by the modeler. In order to build a TGeoCompositeShape, one will have to define; first the primitive components. The object that handle boolean; operations among components is called TGeoBoolCombinator and it has to be; constructed providing a string boolean expression between the components names. ## Example for building a simple geometry. Begin_Macro(source); ../../../tutorials/geom/rootgeom.C; End_Macro. ## TGeoManager - the manager class for the geometry package. TGeoManager class is embedding all the API needed for building and tracking; a geometry. It defines a global pointer (gGeoManager) in order to be fully; accessible from external code. The mechanism of handling multiple geometries; at the same time will be soon implemented. TGeoManager is the owner of all geometry objects defined in a session,; therefore users must not try to control their deletion. It contains lists of; media, materials, transformations, shapes and volumes. Logical nodes (positioned; volumes) are created and destroyed by the TGeoVolume class. Physical; nodes and their global transformations are subjected to a caching mechanism; due to the sometimes very large memory requirements of logical graph expansion.; The caching mechanism is triggered by the total number of physical instances; of volumes and the cache manager is a",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:38,Security,access,access,38,"// This is a quite inefficient way to access map elements, but needed for the GDML writer to",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:319,Usability,Clear,ClearTracks,319,"////////////////////////////////////////////////////////////////////////////////; /// Add a track to the list of tracks. Use this for primaries only. For secondaries,; /// add them to the parent track. The method create objects that are registered; /// to the analysis manager but have to be cleaned-up by the user via ClearTracks().",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:86,Usability,Clear,Clear,86,"////////////////////////////////////////////////////////////////////////////////; /// Clear all navigators.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:86,Usability,Clear,Clear,86,"////////////////////////////////////////////////////////////////////////////////; /// Clear a single navigator.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:86,Usability,Clear,Clear,86,"////////////////////////////////////////////////////////////////////////////////; /// Clear the current map of threads. This will be filled again by the calling; /// threads via ThreadId calls.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:19,Deployability,update,updated,19,"// Map needs to be updated.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:133,Performance,cache,cache,133,"////////////////////////////////////////////////////////////////////////////////; /// Backup the current state without affecting the cache stack.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:134,Performance,cache,cache,134,"////////////////////////////////////////////////////////////////////////////////; /// Restore a backed-up state without affecting the cache stack.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:115,Integrability,depend,dependent,115,"// Medium checking now performed only if replacement is an assembly and old volume a real one.; // Check result is dependent on positioning.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:23,Performance,perform,performed,23,"// Medium checking now performed only if replacement is an assembly and old volume a real one.; // Check result is dependent on positioning.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:528,Deployability,continuous,continuous,528,"////////////////////////////////////////////////////////////////////////////////; /// Create tracking medium; ///; /// - numed tracking medium number assigned; /// - name tracking medium name; /// - nmat material number; /// - isvol sensitive volume flag; /// - ifield magnetic field; /// - fieldm max. field value (kilogauss); /// - tmaxfd max. angle due to field (deg/step); /// - stemax max. step allowed; /// - deemax max. fraction of energy lost in a step; /// - epsil tracking precision (cm); /// - stmin min. step due to continuous processes (cm); ///; /// - ifield = 0 if no magnetic field; ifield = -1 if user decision in guswim;; /// - ifield = 1 if tracking performed with g3rkuta; ifield = 2 if tracking; /// performed with g3helix; ifield = 3 if tracking performed with g3helx3.; ///",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:439,Energy Efficiency,energy,energy,439,"////////////////////////////////////////////////////////////////////////////////; /// Create tracking medium; ///; /// - numed tracking medium number assigned; /// - name tracking medium name; /// - nmat material number; /// - isvol sensitive volume flag; /// - ifield magnetic field; /// - fieldm max. field value (kilogauss); /// - tmaxfd max. angle due to field (deg/step); /// - stemax max. step allowed; /// - deemax max. fraction of energy lost in a step; /// - epsil tracking precision (cm); /// - stmin min. step due to continuous processes (cm); ///; /// - ifield = 0 if no magnetic field; ifield = -1 if user decision in guswim;; /// - ifield = 1 if tracking performed with g3rkuta; ifield = 2 if tracking; /// performed with g3helix; ifield = 3 if tracking performed with g3helx3.; ///",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:669,Performance,perform,performed,669,"////////////////////////////////////////////////////////////////////////////////; /// Create tracking medium; ///; /// - numed tracking medium number assigned; /// - name tracking medium name; /// - nmat material number; /// - isvol sensitive volume flag; /// - ifield magnetic field; /// - fieldm max. field value (kilogauss); /// - tmaxfd max. angle due to field (deg/step); /// - stemax max. step allowed; /// - deemax max. fraction of energy lost in a step; /// - epsil tracking precision (cm); /// - stmin min. step due to continuous processes (cm); ///; /// - ifield = 0 if no magnetic field; ifield = -1 if user decision in guswim;; /// - ifield = 1 if tracking performed with g3rkuta; ifield = 2 if tracking; /// performed with g3helix; ifield = 3 if tracking performed with g3helx3.; ///",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:721,Performance,perform,performed,721,"////////////////////////////////////////////////////////////////////////////////; /// Create tracking medium; ///; /// - numed tracking medium number assigned; /// - name tracking medium name; /// - nmat material number; /// - isvol sensitive volume flag; /// - ifield magnetic field; /// - fieldm max. field value (kilogauss); /// - tmaxfd max. angle due to field (deg/step); /// - stemax max. step allowed; /// - deemax max. fraction of energy lost in a step; /// - epsil tracking precision (cm); /// - stmin min. step due to continuous processes (cm); ///; /// - ifield = 0 if no magnetic field; ifield = -1 if user decision in guswim;; /// - ifield = 1 if tracking performed with g3rkuta; ifield = 2 if tracking; /// performed with g3helix; ifield = 3 if tracking performed with g3helx3.; ///",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:768,Performance,perform,performed,768,"////////////////////////////////////////////////////////////////////////////////; /// Create tracking medium; ///; /// - numed tracking medium number assigned; /// - name tracking medium name; /// - nmat material number; /// - isvol sensitive volume flag; /// - ifield magnetic field; /// - fieldm max. field value (kilogauss); /// - tmaxfd max. angle due to field (deg/step); /// - stemax max. step allowed; /// - deemax max. fraction of energy lost in a step; /// - epsil tracking precision (cm); /// - stmin min. step due to continuous processes (cm); ///; /// - ifield = 0 if no magnetic field; ifield = -1 if user decision in guswim;; /// - ifield = 1 if tracking performed with g3rkuta; ifield = 2 if tracking; /// performed with g3helix; ifield = 3 if tracking performed with g3helx3.; ///",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:217,Performance,cache,cache,217,"////////////////////////////////////////////////////////////////////////////////; /// Closing geometry implies checking the geometry validity, fixing shapes; /// with negative parameters (run-time shapes)building the cache manager,; /// voxelizing all volumes, counting the total number of physical nodes and; /// registering the manager class to the browser.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:23,Safety,avoid,avoid,23,"// BuildIdArray();; // avoid voxelization if requested to speed up geometry startup",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:86,Usability,Clear,Clear,86,"////////////////////////////////////////////////////////////////////////////////; /// Clear the list of overlaps.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:206,Performance,perform,performance,206,"////////////////////////////////////////////////////////////////////////////////; /// Change current path to point to the node having this id.; /// Node id has to be in range : 0 to fNNodes-1 (no check for performance reasons)",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:124,Deployability,Update,Updates,124,"////////////////////////////////////////////////////////////////////////////////; /// Make top level node the current node. Updates the cache accordingly.; /// Determine the overlapping state of current node.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:136,Performance,cache,cache,136,"////////////////////////////////////////////////////////////////////////////////; /// Make top level node the current node. Updates the cache accordingly.; /// Determine the overlapping state of current node.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:115,Deployability,Update,Updates,115,"////////////////////////////////////////////////////////////////////////////////; /// Go one level up in geometry. Updates cache accordingly.; /// Determine the overlapping state of current node.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:123,Performance,cache,cache,123,"////////////////////////////////////////////////////////////////////////////////; /// Go one level up in geometry. Updates cache accordingly.; /// Determine the overlapping state of current node.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:191,Deployability,Update,Updates,191,"////////////////////////////////////////////////////////////////////////////////; /// Make a daughter of current node current. Can be called only with a valid; /// daughter index (no check). Updates cache accordingly.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:199,Performance,cache,cache,199,"////////////////////////////////////////////////////////////////////////////////; /// Make a daughter of current node current. Can be called only with a valid; /// daughter index (no check). Updates cache accordingly.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:150,Availability,down,down,150,"////////////////////////////////////////////////////////////////////////////////; /// Count the total number of nodes starting from a volume, nlevels down.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:94,Safety,safe,safe,94,"////////////////////////////////////////////////////////////////////////////////; /// Compute safe distance from the current point. This represent the distance; /// from POINT to the closest boundary.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:147,Availability,down,down,147,"////////////////////////////////////////////////////////////////////////////////; /// set drawing mode :; /// - option=0 (default) all nodes drawn down to vislevel; /// - option=1 leaves and nodes at vislevel drawn; /// - option=2 path is drawn; /// - option=4 visibility changed",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:104,Availability,down,down,104,"////////////////////////////////////////////////////////////////////////////////; /// set default level down to which visualization is performed",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:135,Performance,perform,performed,135,"////////////////////////////////////////////////////////////////////////////////; /// set default level down to which visualization is performed",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:86,Performance,Optimiz,Optimize,86,"////////////////////////////////////////////////////////////////////////////////; /// Optimize voxelization type for all volumes. Save best choice in a macro.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:307,Availability,error,error,307,"////////////////////////////////////////////////////////////////////////////////; /// Parse a string boolean expression and do a syntax check. Find top; /// level boolean operator and returns its type. Fill the two; /// substrings to which this operator applies. The returned integer is :; /// - -1 : parse error; /// - 0 : no boolean operator; /// - 1 : union - represented as '+' in expression; /// - 2 : difference (subtraction) - represented as '-' in expression; /// - 3 : intersection - represented as '*' in expression.; /// Parentheses should be used to avoid ambiguities. For instance :; /// - A+B-C will be interpreted as (A+B)-C which is not the same as A+(B-C); /// eliminate not needed parentheses",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:562,Safety,avoid,avoid,562,"////////////////////////////////////////////////////////////////////////////////; /// Parse a string boolean expression and do a syntax check. Find top; /// level boolean operator and returns its type. Fill the two; /// substrings to which this operator applies. The returned integer is :; /// - -1 : parse error; /// - 0 : no boolean operator; /// - 1 : union - represented as '+' in expression; /// - 2 : difference (subtraction) - represented as '-' in expression; /// - 3 : intersection - represented as '*' in expression.; /// Parentheses should be used to avoid ambiguities. For instance :; /// - A+B-C will be interpreted as (A+B)-C which is not the same as A+(B-C); /// eliminate not needed parentheses",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:572,Safety,safe,safe,572,"////////////////////////////////////////////////////////////////////////////////; /// Find distance to next boundary and store it in fStep. Returns node to which this; /// boundary belongs. If PATH is specified, compute only distance to the node to which; /// PATH points. If STEPMAX is specified, compute distance only in case fSafety is smaller; /// than this value. STEPMAX represent the step to be made imposed by other reasons than; /// geometry (usually physics processes). Therefore in this case this method provides the; /// answer to the question : ""Is STEPMAX a safe step ?"" returning a NULL node and filling; /// fStep with a big number.; /// In case frombdr=kTRUE, the isotropic safety is set to zero.; ///; /// Note : safety distance for the current point is computed ONLY in case STEPMAX is; /// specified, otherwise users have to call explicitly TGeoManager::Safety() if; /// they want this computed for the current point.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:691,Safety,safe,safety,691,"////////////////////////////////////////////////////////////////////////////////; /// Find distance to next boundary and store it in fStep. Returns node to which this; /// boundary belongs. If PATH is specified, compute only distance to the node to which; /// PATH points. If STEPMAX is specified, compute distance only in case fSafety is smaller; /// than this value. STEPMAX represent the step to be made imposed by other reasons than; /// geometry (usually physics processes). Therefore in this case this method provides the; /// answer to the question : ""Is STEPMAX a safe step ?"" returning a NULL node and filling; /// fStep with a big number.; /// In case frombdr=kTRUE, the isotropic safety is set to zero.; ///; /// Note : safety distance for the current point is computed ONLY in case STEPMAX is; /// specified, otherwise users have to call explicitly TGeoManager::Safety() if; /// they want this computed for the current point.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:731,Safety,safe,safety,731,"////////////////////////////////////////////////////////////////////////////////; /// Find distance to next boundary and store it in fStep. Returns node to which this; /// boundary belongs. If PATH is specified, compute only distance to the node to which; /// PATH points. If STEPMAX is specified, compute distance only in case fSafety is smaller; /// than this value. STEPMAX represent the step to be made imposed by other reasons than; /// geometry (usually physics processes). Therefore in this case this method provides the; /// answer to the question : ""Is STEPMAX a safe step ?"" returning a NULL node and filling; /// fStep with a big number.; /// In case frombdr=kTRUE, the isotropic safety is set to zero.; ///; /// Note : safety distance for the current point is computed ONLY in case STEPMAX is; /// specified, otherwise users have to call explicitly TGeoManager::Safety() if; /// they want this computed for the current point.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:874,Safety,Safe,Safety,874,"////////////////////////////////////////////////////////////////////////////////; /// Find distance to next boundary and store it in fStep. Returns node to which this; /// boundary belongs. If PATH is specified, compute only distance to the node to which; /// PATH points. If STEPMAX is specified, compute distance only in case fSafety is smaller; /// than this value. STEPMAX represent the step to be made imposed by other reasons than; /// geometry (usually physics processes). Therefore in this case this method provides the; /// answer to the question : ""Is STEPMAX a safe step ?"" returning a NULL node and filling; /// fStep with a big number.; /// In case frombdr=kTRUE, the isotropic safety is set to zero.; ///; /// Note : safety distance for the current point is computed ONLY in case STEPMAX is; /// specified, otherwise users have to call explicitly TGeoManager::Safety() if; /// they want this computed for the current point.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:86,Usability,Clear,Clear,86,"////////////////////////////////////////////////////////////////////////////////; /// Clear the current list of physical nodes, so that we can start over with a new list.; /// If MUSTDELETE is true, delete previous nodes.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:105,Availability,error,errors,105,"////////////////////////////////////////////////////////////////////////////////; /// Check the boundary errors reference file created by CheckBoundaryErrors method.; /// The shape for which the crossing failed is drawn with the starting point in red; /// and the extrapolated point to boundary (+/- failing push/pull) in yellow.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:127,Availability,CheckPoint,CheckPoint,127,"////////////////////////////////////////////////////////////////////////////////; /// Classify a given point. See TGeoChecker::CheckPoint().",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:86,Testability,Test,Test,86,"////////////////////////////////////////////////////////////////////////////////; /// Test for shape navigation methods. Summary for test numbers:; /// - 1: DistFromInside/Outside. Sample points inside the shape. Generate; /// directions randomly in cos(theta). Compute DistFromInside and move the; /// point with bigger distance. Compute DistFromOutside back from new point.; /// Plot d-(d1+d2); ///",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:133,Testability,test,test,133,"////////////////////////////////////////////////////////////////////////////////; /// Test for shape navigation methods. Summary for test numbers:; /// - 1: DistFromInside/Outside. Sample points inside the shape. Generate; /// directions randomly in cos(theta). Compute DistFromInside and move the; /// point with bigger distance. Compute DistFromOutside back from new point.; /// Plot d-(d1+d2); ///",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:919,Safety,Safe,Safety,919,"////////////////////////////////////////////////////////////////////////////////; /// Geometry checking.; /// - if option contains 'o': Optional overlap checkings (by sampling and by mesh).; /// - if option contains 'b': Optional boundary crossing check + timing per volume.; ///; /// STAGE 1: extensive overlap checking by sampling per volume. Stdout need to be; /// checked by user to get report, then TGeoVolume::CheckOverlaps(0.01, ""s"") can; /// be called for the suspicious volumes.; ///; /// STAGE 2: normal overlap checking using the shapes mesh - fills the list of; /// overlaps.; ///; /// STAGE 3: shooting NRAYS rays from VERTEX and counting the total number of; /// crossings per volume (rays propagated from boundary to boundary until; /// geometry exit). Timing computed and results stored in a histo.; ///; /// STAGE 4: shooting 1 mil. random rays inside EACH volume and calling; /// FindNextBoundary() + Safety() for each call. The timing is normalized by the; /// number of crossings computed at stage 2 and presented as percentage.; /// One can get a picture on which are the most ""burned"" volumes during; /// transportation from geometry point of view. Another plot of the timing per; /// volume vs. number of daughters is produced.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:86,Performance,Perform,Perform,86,"////////////////////////////////////////////////////////////////////////////////; /// Perform last checks on the geometry",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:145,Integrability,message,messages,145,"////////////////////////////////////////////////////////////////////////////////; /// Set verbosity level (static function).; /// - 0 - suppress messages related to geom-painter visibility level; /// - 1 - default value",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:44,Performance,cache,cacheread,44,"// in case a web file is specified, use the cacheread option to cache; // this file in the cache directory",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:64,Performance,cache,cache,64,"// in case a web file is specified, use the cacheread option to cache; // this file in the cache directory",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:91,Performance,cache,cache,91,"// in case a web file is specified, use the cacheread option to cache; // this file in the cache directory",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update element flags when geometry is loaded from a file.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:124,Performance,load,loaded,124,"////////////////////////////////////////////////////////////////////////////////; /// Update element flags when geometry is loaded from a file.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:116,Security,access,access,116,"////////////////////////////////////////////////////////////////////////////////; /// Initialize PNE array for fast access via index and unique-id.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMaterial.cxx:198,Deployability,release,released,198,"////////////////////////////////////////////////////////////////////////////////; /// Connect user-defined extension to the material. The material ""grabs"" a copy, so; /// the original object can be released by the producer. Release the previously; /// connected extension if any.; ///; /// NOTE: This interface is intended for user extensions and is guaranteed not; /// to be used by TGeo",MatchSource.CODE_COMMENT,geom/geom/src/TGeoMaterial.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMaterial.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMaterial.cxx:224,Deployability,Release,Release,224,"////////////////////////////////////////////////////////////////////////////////; /// Connect user-defined extension to the material. The material ""grabs"" a copy, so; /// the original object can be released by the producer. Release the previously; /// connected extension if any.; ///; /// NOTE: This interface is intended for user extensions and is guaranteed not; /// to be used by TGeo",MatchSource.CODE_COMMENT,geom/geom/src/TGeoMaterial.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMaterial.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMaterial.cxx:301,Integrability,interface,interface,301,"////////////////////////////////////////////////////////////////////////////////; /// Connect user-defined extension to the material. The material ""grabs"" a copy, so; /// the original object can be released by the producer. Release the previously; /// connected extension if any.; ///; /// NOTE: This interface is intended for user extensions and is guaranteed not; /// to be used by TGeo",MatchSource.CODE_COMMENT,geom/geom/src/TGeoMaterial.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMaterial.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMaterial.cxx:203,Deployability,release,released,203,"////////////////////////////////////////////////////////////////////////////////; /// Connect framework defined extension to the material. The material ""grabs"" a copy,; /// so the original object can be released by the producer. Release the previously; /// connected extension if any.; ///; /// NOTE: This interface is intended for the use by TGeo and the users should; /// NOT connect extensions using this method",MatchSource.CODE_COMMENT,geom/geom/src/TGeoMaterial.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMaterial.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMaterial.cxx:229,Deployability,Release,Release,229,"////////////////////////////////////////////////////////////////////////////////; /// Connect framework defined extension to the material. The material ""grabs"" a copy,; /// so the original object can be released by the producer. Release the previously; /// connected extension if any.; ///; /// NOTE: This interface is intended for the use by TGeo and the users should; /// NOT connect extensions using this method",MatchSource.CODE_COMMENT,geom/geom/src/TGeoMaterial.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMaterial.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMaterial.cxx:306,Integrability,interface,interface,306,"////////////////////////////////////////////////////////////////////////////////; /// Connect framework defined extension to the material. The material ""grabs"" a copy,; /// so the original object can be released by the producer. Release the previously; /// connected extension if any.; ///; /// NOTE: This interface is intended for the use by TGeo and the users should; /// NOT connect extensions using this method",MatchSource.CODE_COMMENT,geom/geom/src/TGeoMaterial.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMaterial.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMaterial.cxx:147,Deployability,Release,Release,147,"////////////////////////////////////////////////////////////////////////////////; /// Get a copy of the user extension pointer. The user must call Release() on; /// the copy pointer once this pointer is not needed anymore (equivalent to; /// delete() after calling new())",MatchSource.CODE_COMMENT,geom/geom/src/TGeoMaterial.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMaterial.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMaterial.cxx:152,Deployability,Release,Release,152,"////////////////////////////////////////////////////////////////////////////////; /// Get a copy of the framework extension pointer. The user must call Release() on; /// the copy pointer once this pointer is not needed anymore (equivalent to; /// delete() after calling new())",MatchSource.CODE_COMMENT,geom/geom/src/TGeoMaterial.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMaterial.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMaterial.cxx:21,Integrability,rout,routine,21,"// taken grom Geant3 routine GSMATE",MatchSource.CODE_COMMENT,geom/geom/src/TGeoMaterial.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMaterial.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMaterial.cxx:169,Safety,avoid,avoid,169,"////////////////////////////////////////////////////////////////////////////////; /// Get a pointer to the element this material is made of.; /// This second call is to avoid warnings to not call a virtual; /// method from the constructor",MatchSource.CODE_COMMENT,geom/geom/src/TGeoMaterial.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMaterial.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMaterial.cxx:93,Integrability,interface,interface,93,"////////////////////////////////////////////////////////////////////////////////; /// Single interface to get element properties.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoMaterial.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMaterial.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx:5520,Availability,Avail,Available,5520,"of several; others, a special class TGeoHMatrix is provided. Here is an example of matrix; creation :. ### Matrix creation example:. ~~~ {.cpp}; root[0] TGeoRotation r1,r2;; r1.SetAngles(90,0,30); // rotation defined by Euler angles; r2.SetAngles(90,90,90,180,0,0); // rotation defined by GEANT3 angles; TGeoTranslation t1(-10,10,0);; TGeoTranslation t2(10,-10,5);; TGeoCombiTrans c1(t1,r1);; TGeoCombiTrans c2(t2,r2);; TGeoHMatrix h = c1 * c2; // composition is done via TGeoHMatrix class; root[7] TGeoHMatrix *ph = new TGeoHMatrix(hm); // this is the one we want to; // use for positioning a volume; root[8] ph->Print();; ...; pVolume->AddNode(pVolDaughter,id,ph) // now ph is owned by the manager; ~~~. ### Rule for matrix creation:; Unless explicitly used for positioning nodes (TGeoVolume::AddNode()) all; matrices deletion have to be managed by users. Matrices passed to geometry; have to be created by using new() operator and their deletion is done by; TGeoManager class. ### Available geometrical transformations. #### TGeoTranslation; Represent a (dx,dy,dz) translation. Data members:; Double_t fTranslation[3]. Translations can be added/subtracted. ~~~ {.cpp}; TGeoTranslation t1;; t1->SetTranslation(-5,10,4);; TGeoTranslation *t2 = new TGeoTranslation(4,3,10);; t2->Subtract(&t1);; ~~~. #### Rotations; Represent a pure rotation. Data members: Double_t fRotationMatrix[3*3].; Rotations can be defined either by Euler angles, either, by GEANT3 angles :. ~~~ {.cpp}; TGeoRotation *r1 = new TGeoRotation();; r1->SetAngles(phi, theta, psi); // all angles in degrees; ~~~. This represent the composition of : first a rotation about Z axis with; angle phi, then a rotation with theta about the rotated X axis, and; finally a rotation with psi about the new Z axis. ~~~ {.cpp}; r1->SetAngles(th1,phi1, th2,phi2, th3,phi3); ~~~. This is a rotation defined in GEANT3 style. Theta and phi are the spherical; angles of each axis of the rotated coordinate system with respect to the; initial one. Thi",MatchSource.CODE_COMMENT,geom/geom/src/TGeoMatrix.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx:6644,Availability,error,error,6644,"sing new() operator and their deletion is done by; TGeoManager class. ### Available geometrical transformations. #### TGeoTranslation; Represent a (dx,dy,dz) translation. Data members:; Double_t fTranslation[3]. Translations can be added/subtracted. ~~~ {.cpp}; TGeoTranslation t1;; t1->SetTranslation(-5,10,4);; TGeoTranslation *t2 = new TGeoTranslation(4,3,10);; t2->Subtract(&t1);; ~~~. #### Rotations; Represent a pure rotation. Data members: Double_t fRotationMatrix[3*3].; Rotations can be defined either by Euler angles, either, by GEANT3 angles :. ~~~ {.cpp}; TGeoRotation *r1 = new TGeoRotation();; r1->SetAngles(phi, theta, psi); // all angles in degrees; ~~~. This represent the composition of : first a rotation about Z axis with; angle phi, then a rotation with theta about the rotated X axis, and; finally a rotation with psi about the new Z axis. ~~~ {.cpp}; r1->SetAngles(th1,phi1, th2,phi2, th3,phi3); ~~~. This is a rotation defined in GEANT3 style. Theta and phi are the spherical; angles of each axis of the rotated coordinate system with respect to the; initial one. This construction allows definition of malformed rotations,; e.g. not orthogonal. A check is performed and an error message is issued; in this case. Specific utilities : determinant, inverse. #### Scale transformations; Represent a scale shrinking/enlargement. Data; members :Double_t fScale[3]. Not fully implemented yet. #### Combined transformations; Represent a rotation followed by a translation.; Data members: Double_t fTranslation[3], TGeoRotation *fRotation. ~~~ {.cpp}; TGeoRotation *rot = new TGeoRotation(""rot"",10,20,30);; TGeoTranslation trans;; ...; TGeoCombiTrans *c1 = new TGeoCombiTrans(trans, rot);; TGeoCombiTrans *c2 = new TGeoCombiTrans(""somename"",10,20,30,rot); ~~~. #### TGeoGenTrans; Combined transformations including a scale. Not implemented. #### TGeoIdentity; A generic singleton matrix representing a identity transformation; NOTE: identified by the global variable gGeoIdentity.; */",MatchSource.CODE_COMMENT,geom/geom/src/TGeoMatrix.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx:3377,Integrability,interface,interface,3377,"are the 3x3 rotation matrix components,; - `tx`, `ty`, `tz` are the translation components; - `sx`, `sy`, `sz` are arbitrary scale constants on each axis,. The disadvantage in using this approach is that computation for 4x4 matrices; is expensive. Even combining two translation would become a multiplication; of their corresponding matrices, which is quite an undesired effect. On the; other hand, it is not a good idea to store a translation as a block of 16; numbers. We have therefore chosen to implement each basic transformation type; as a class deriving from the same basic abstract class and handling its specific; data and point/vector transformation algorithms. \image html geom_transf.jpg. ### The base class TGeoMatrix defines abstract metods for:. #### translation, rotation and scale getters. Every derived class stores only; its specific data, e.g. a translation stores an array of 3 doubles and a; rotation an array of 9. However, asking which is the rotation array of a; TGeoTranslation through the base TGeoMatrix interface is a legal operation.; The answer in this case is a pointer to a global constant array representing; an identity rotation. ~~~ {.cpp}; Double_t *TGeoMatrix::GetTranslation(); Double_t *TGeoMatrix::GetRotation(); Double_t *TGeoMatrix::GetScale(); ~~~. #### MasterToLocal() and LocalToMaster() point and vector transformations :. ~~~ {.cpp}; void TGeoMatrix::MasterToLocal(const Double_t *master, Double_t *local); void TGeoMatrix::LocalToMaster(const Double_t *local, Double_t *master); void TGeoMatrix::MasterToLocalVect(const Double_t *master, Double_t *local); void TGeoMatrix::LocalToMasterVect(const Double_t *local, Double_t *master); ~~~. These allow correct conversion also for reflections. #### Transformation type getters :. ~~~ {.cpp}; Bool_t TGeoMatrix::IsIdentity(); Bool_t TGeoMatrix::IsTranslation(); Bool_t TGeoMatrix::IsRotation(); Bool_t TGeoMatrix::IsScale(); Bool_t TGeoMatrix::IsCombi() (translation + rotation); Bool_t TGeoMatrix::IsGene",MatchSource.CODE_COMMENT,geom/geom/src/TGeoMatrix.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx:6650,Integrability,message,message,6650,"sing new() operator and their deletion is done by; TGeoManager class. ### Available geometrical transformations. #### TGeoTranslation; Represent a (dx,dy,dz) translation. Data members:; Double_t fTranslation[3]. Translations can be added/subtracted. ~~~ {.cpp}; TGeoTranslation t1;; t1->SetTranslation(-5,10,4);; TGeoTranslation *t2 = new TGeoTranslation(4,3,10);; t2->Subtract(&t1);; ~~~. #### Rotations; Represent a pure rotation. Data members: Double_t fRotationMatrix[3*3].; Rotations can be defined either by Euler angles, either, by GEANT3 angles :. ~~~ {.cpp}; TGeoRotation *r1 = new TGeoRotation();; r1->SetAngles(phi, theta, psi); // all angles in degrees; ~~~. This represent the composition of : first a rotation about Z axis with; angle phi, then a rotation with theta about the rotated X axis, and; finally a rotation with psi about the new Z axis. ~~~ {.cpp}; r1->SetAngles(th1,phi1, th2,phi2, th3,phi3); ~~~. This is a rotation defined in GEANT3 style. Theta and phi are the spherical; angles of each axis of the rotated coordinate system with respect to the; initial one. This construction allows definition of malformed rotations,; e.g. not orthogonal. A check is performed and an error message is issued; in this case. Specific utilities : determinant, inverse. #### Scale transformations; Represent a scale shrinking/enlargement. Data; members :Double_t fScale[3]. Not fully implemented yet. #### Combined transformations; Represent a rotation followed by a translation.; Data members: Double_t fTranslation[3], TGeoRotation *fRotation. ~~~ {.cpp}; TGeoRotation *rot = new TGeoRotation(""rot"",10,20,30);; TGeoTranslation trans;; ...; TGeoCombiTrans *c1 = new TGeoCombiTrans(trans, rot);; TGeoCombiTrans *c2 = new TGeoCombiTrans(""somename"",10,20,30,rot); ~~~. #### TGeoGenTrans; Combined transformations including a scale. Not implemented. #### TGeoIdentity; A generic singleton matrix representing a identity transformation; NOTE: identified by the global variable gGeoIdentity.; */",MatchSource.CODE_COMMENT,geom/geom/src/TGeoMatrix.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx:7420,Modifiability,variab,variable,7420,"sing new() operator and their deletion is done by; TGeoManager class. ### Available geometrical transformations. #### TGeoTranslation; Represent a (dx,dy,dz) translation. Data members:; Double_t fTranslation[3]. Translations can be added/subtracted. ~~~ {.cpp}; TGeoTranslation t1;; t1->SetTranslation(-5,10,4);; TGeoTranslation *t2 = new TGeoTranslation(4,3,10);; t2->Subtract(&t1);; ~~~. #### Rotations; Represent a pure rotation. Data members: Double_t fRotationMatrix[3*3].; Rotations can be defined either by Euler angles, either, by GEANT3 angles :. ~~~ {.cpp}; TGeoRotation *r1 = new TGeoRotation();; r1->SetAngles(phi, theta, psi); // all angles in degrees; ~~~. This represent the composition of : first a rotation about Z axis with; angle phi, then a rotation with theta about the rotated X axis, and; finally a rotation with psi about the new Z axis. ~~~ {.cpp}; r1->SetAngles(th1,phi1, th2,phi2, th3,phi3); ~~~. This is a rotation defined in GEANT3 style. Theta and phi are the spherical; angles of each axis of the rotated coordinate system with respect to the; initial one. This construction allows definition of malformed rotations,; e.g. not orthogonal. A check is performed and an error message is issued; in this case. Specific utilities : determinant, inverse. #### Scale transformations; Represent a scale shrinking/enlargement. Data; members :Double_t fScale[3]. Not fully implemented yet. #### Combined transformations; Represent a rotation followed by a translation.; Data members: Double_t fTranslation[3], TGeoRotation *fRotation. ~~~ {.cpp}; TGeoRotation *rot = new TGeoRotation(""rot"",10,20,30);; TGeoTranslation trans;; ...; TGeoCombiTrans *c1 = new TGeoCombiTrans(trans, rot);; TGeoCombiTrans *c2 = new TGeoCombiTrans(""somename"",10,20,30,rot); ~~~. #### TGeoGenTrans; Combined transformations including a scale. Not implemented. #### TGeoIdentity; A generic singleton matrix representing a identity transformation; NOTE: identified by the global variable gGeoIdentity.; */",MatchSource.CODE_COMMENT,geom/geom/src/TGeoMatrix.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx:650,Performance,optimiz,optimize,650,"// @(#)root/geom:$Id$; // Author: Andrei Gheata 25/10/01; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGeoMatrix; \ingroup Geometry_classes. Geometrical transformation package. All geometrical transformations handled by the modeller are provided as a; built-in package. This was designed to minimize memory requirements and; optimize performance of point/vector master-to-local and local-to-master; computation. We need to have in mind that a transformation in TGeo has 2; major use-cases. The first one is for defining the placement of a volume; with respect to its container reference frame. This frame will be called; 'master' and the frame of the positioned volume - 'local'. If T is a; transformation used for positioning volume daughters, then:. ~~~ {.cpp}; MASTER = T * LOCAL; ~~~. Therefore a local-to-master conversion will be performed by using T, while; a master-to-local by using its inverse. The second use case is the computation; of the global transformation of a given object in the geometry. Since the; geometry is built as 'volumes-inside-volumes', this global transformation; represent the pile-up of all local transformations in the corresponding; branch. The conversion from the global reference frame and the given object; is also called master-to-local, but it is handled by the manager class.; A general homogenous transformation is defined as a 4x4 matrix embedding; a rotation, a translation and a scale. The advantage of this description; is that each basic transformation can be represented as a homogenous matrix,; composition being performed as simple matrix multiplication. Rotation: Inverse rotation:. ~~~ {.cpp}; r11 r12 r13 0 r11 r21 r31 0; r",MatchSource.CODE_COMMENT,geom/geom/src/TGeoMatrix.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx:659,Performance,perform,performance,659,"// @(#)root/geom:$Id$; // Author: Andrei Gheata 25/10/01; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGeoMatrix; \ingroup Geometry_classes. Geometrical transformation package. All geometrical transformations handled by the modeller are provided as a; built-in package. This was designed to minimize memory requirements and; optimize performance of point/vector master-to-local and local-to-master; computation. We need to have in mind that a transformation in TGeo has 2; major use-cases. The first one is for defining the placement of a volume; with respect to its container reference frame. This frame will be called; 'master' and the frame of the positioned volume - 'local'. If T is a; transformation used for positioning volume daughters, then:. ~~~ {.cpp}; MASTER = T * LOCAL; ~~~. Therefore a local-to-master conversion will be performed by using T, while; a master-to-local by using its inverse. The second use case is the computation; of the global transformation of a given object in the geometry. Since the; geometry is built as 'volumes-inside-volumes', this global transformation; represent the pile-up of all local transformations in the corresponding; branch. The conversion from the global reference frame and the given object; is also called master-to-local, but it is handled by the manager class.; A general homogenous transformation is defined as a 4x4 matrix embedding; a rotation, a translation and a scale. The advantage of this description; is that each basic transformation can be represented as a homogenous matrix,; composition being performed as simple matrix multiplication. Rotation: Inverse rotation:. ~~~ {.cpp}; r11 r12 r13 0 r11 r21 r31 0; r",MatchSource.CODE_COMMENT,geom/geom/src/TGeoMatrix.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx:1161,Performance,perform,performed,1161,"and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGeoMatrix; \ingroup Geometry_classes. Geometrical transformation package. All geometrical transformations handled by the modeller are provided as a; built-in package. This was designed to minimize memory requirements and; optimize performance of point/vector master-to-local and local-to-master; computation. We need to have in mind that a transformation in TGeo has 2; major use-cases. The first one is for defining the placement of a volume; with respect to its container reference frame. This frame will be called; 'master' and the frame of the positioned volume - 'local'. If T is a; transformation used for positioning volume daughters, then:. ~~~ {.cpp}; MASTER = T * LOCAL; ~~~. Therefore a local-to-master conversion will be performed by using T, while; a master-to-local by using its inverse. The second use case is the computation; of the global transformation of a given object in the geometry. Since the; geometry is built as 'volumes-inside-volumes', this global transformation; represent the pile-up of all local transformations in the corresponding; branch. The conversion from the global reference frame and the given object; is also called master-to-local, but it is handled by the manager class.; A general homogenous transformation is defined as a 4x4 matrix embedding; a rotation, a translation and a scale. The advantage of this description; is that each basic transformation can be represented as a homogenous matrix,; composition being performed as simple matrix multiplication. Rotation: Inverse rotation:. ~~~ {.cpp}; r11 r12 r13 0 r11 r21 r31 0; r21 r22 r23 0 r12 r22 r32 0; r31 r32 r33 0 r13 r23 r33 0; 0 0 0 1 0 0 0 1; ~~~. Translation: Inverse translation:. ~~~ {.cpp}; 1 0 0 tx 1 0 0 -tx; 0 1 0 ty 0 1 0 -ty; 0 0 ",MatchSource.CODE_COMMENT,geom/geom/src/TGeoMatrix.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx:1887,Performance,perform,performed,1887,"ng the placement of a volume; with respect to its container reference frame. This frame will be called; 'master' and the frame of the positioned volume - 'local'. If T is a; transformation used for positioning volume daughters, then:. ~~~ {.cpp}; MASTER = T * LOCAL; ~~~. Therefore a local-to-master conversion will be performed by using T, while; a master-to-local by using its inverse. The second use case is the computation; of the global transformation of a given object in the geometry. Since the; geometry is built as 'volumes-inside-volumes', this global transformation; represent the pile-up of all local transformations in the corresponding; branch. The conversion from the global reference frame and the given object; is also called master-to-local, but it is handled by the manager class.; A general homogenous transformation is defined as a 4x4 matrix embedding; a rotation, a translation and a scale. The advantage of this description; is that each basic transformation can be represented as a homogenous matrix,; composition being performed as simple matrix multiplication. Rotation: Inverse rotation:. ~~~ {.cpp}; r11 r12 r13 0 r11 r21 r31 0; r21 r22 r23 0 r12 r22 r32 0; r31 r32 r33 0 r13 r23 r33 0; 0 0 0 1 0 0 0 1; ~~~. Translation: Inverse translation:. ~~~ {.cpp}; 1 0 0 tx 1 0 0 -tx; 0 1 0 ty 0 1 0 -ty; 0 0 1 tz 0 0 1 -tz; 0 0 0 1 0 0 0 1; ~~~. Scale: Inverse scale:. ~~~ {.cpp}; sx 0 0 0 1/sx 0 0 0; 0 sy 0 0 0 1/sy 0 0; 0 0 sz 0 0 0 1/sz 0; 0 0 0 1 0 0 0 1; ~~~. where:; - `rij` are the 3x3 rotation matrix components,; - `tx`, `ty`, `tz` are the translation components; - `sx`, `sy`, `sz` are arbitrary scale constants on each axis,. The disadvantage in using this approach is that computation for 4x4 matrices; is expensive. Even combining two translation would become a multiplication; of their corresponding matrices, which is quite an undesired effect. On the; other hand, it is not a good idea to store a translation as a block of 16; numbers. We have therefore chosen t",MatchSource.CODE_COMMENT,geom/geom/src/TGeoMatrix.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx:6627,Performance,perform,performed,6627,"sing new() operator and their deletion is done by; TGeoManager class. ### Available geometrical transformations. #### TGeoTranslation; Represent a (dx,dy,dz) translation. Data members:; Double_t fTranslation[3]. Translations can be added/subtracted. ~~~ {.cpp}; TGeoTranslation t1;; t1->SetTranslation(-5,10,4);; TGeoTranslation *t2 = new TGeoTranslation(4,3,10);; t2->Subtract(&t1);; ~~~. #### Rotations; Represent a pure rotation. Data members: Double_t fRotationMatrix[3*3].; Rotations can be defined either by Euler angles, either, by GEANT3 angles :. ~~~ {.cpp}; TGeoRotation *r1 = new TGeoRotation();; r1->SetAngles(phi, theta, psi); // all angles in degrees; ~~~. This represent the composition of : first a rotation about Z axis with; angle phi, then a rotation with theta about the rotated X axis, and; finally a rotation with psi about the new Z axis. ~~~ {.cpp}; r1->SetAngles(th1,phi1, th2,phi2, th3,phi3); ~~~. This is a rotation defined in GEANT3 style. Theta and phi are the spherical; angles of each axis of the rotated coordinate system with respect to the; initial one. This construction allows definition of malformed rotations,; e.g. not orthogonal. A check is performed and an error message is issued; in this case. Specific utilities : determinant, inverse. #### Scale transformations; Represent a scale shrinking/enlargement. Data; members :Double_t fScale[3]. Not fully implemented yet. #### Combined transformations; Represent a rotation followed by a translation.; Data members: Double_t fTranslation[3], TGeoRotation *fRotation. ~~~ {.cpp}; TGeoRotation *rot = new TGeoRotation(""rot"",10,20,30);; TGeoTranslation trans;; ...; TGeoCombiTrans *c1 = new TGeoCombiTrans(trans, rot);; TGeoCombiTrans *c2 = new TGeoCombiTrans(""somename"",10,20,30,rot); ~~~. #### TGeoGenTrans; Combined transformations including a scale. Not implemented. #### TGeoIdentity; A generic singleton matrix representing a identity transformation; NOTE: identified by the global variable gGeoIdentity.; */",MatchSource.CODE_COMMENT,geom/geom/src/TGeoMatrix.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx:1900,Usability,simpl,simple,1900,"ng the placement of a volume; with respect to its container reference frame. This frame will be called; 'master' and the frame of the positioned volume - 'local'. If T is a; transformation used for positioning volume daughters, then:. ~~~ {.cpp}; MASTER = T * LOCAL; ~~~. Therefore a local-to-master conversion will be performed by using T, while; a master-to-local by using its inverse. The second use case is the computation; of the global transformation of a given object in the geometry. Since the; geometry is built as 'volumes-inside-volumes', this global transformation; represent the pile-up of all local transformations in the corresponding; branch. The conversion from the global reference frame and the given object; is also called master-to-local, but it is handled by the manager class.; A general homogenous transformation is defined as a 4x4 matrix embedding; a rotation, a translation and a scale. The advantage of this description; is that each basic transformation can be represented as a homogenous matrix,; composition being performed as simple matrix multiplication. Rotation: Inverse rotation:. ~~~ {.cpp}; r11 r12 r13 0 r11 r21 r31 0; r21 r22 r23 0 r12 r22 r32 0; r31 r32 r33 0 r13 r23 r33 0; 0 0 0 1 0 0 0 1; ~~~. Translation: Inverse translation:. ~~~ {.cpp}; 1 0 0 tx 1 0 0 -tx; 0 1 0 ty 0 1 0 -ty; 0 0 1 tz 0 0 1 -tz; 0 0 0 1 0 0 0 1; ~~~. Scale: Inverse scale:. ~~~ {.cpp}; sx 0 0 0 1/sx 0 0 0; 0 sy 0 0 0 1/sy 0 0; 0 0 sz 0 0 0 1/sz 0; 0 0 0 1 0 0 0 1; ~~~. where:; - `rij` are the 3x3 rotation matrix components,; - `tx`, `ty`, `tz` are the translation components; - `sx`, `sy`, `sz` are arbitrary scale constants on each axis,. The disadvantage in using this approach is that computation for 4x4 matrices; is expensive. Even combining two translation would become a multiplication; of their corresponding matrices, which is quite an undesired effect. On the; other hand, it is not a good idea to store a translation as a block of 16; numbers. We have therefore chosen t",MatchSource.CODE_COMMENT,geom/geom/src/TGeoMatrix.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx:86,Performance,Perform,Perform,86,"////////////////////////////////////////////////////////////////////////////////; /// Perform orthogonality test for rotation.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoMatrix.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx:108,Testability,test,test,108,"////////////////////////////////////////////////////////////////////////////////; /// Perform orthogonality test for rotation.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoMatrix.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx:86,Performance,Perform,Perform,86,"////////////////////////////////////////////////////////////////////////////////; /// Perform a rotation about Z having the sine/cosine of the rotation angle.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoMatrix.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx:56,Availability,error,errors,56,"// do the trick to eliminate most of the floating point errors",MatchSource.CODE_COMMENT,geom/geom/src/TGeoMatrix.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx:86,Performance,perform,performes,86,"////////////////////////////////////////////////////////////////////////////////; /// performes an orthogonality check and finds if the matrix is a reflection; /// Warning(""CheckMatrix"", ""orthogonality check not performed yet"");",MatchSource.CODE_COMMENT,geom/geom/src/TGeoMatrix.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx:212,Performance,perform,performed,212,"////////////////////////////////////////////////////////////////////////////////; /// performes an orthogonality check and finds if the matrix is a reflection; /// Warning(""CheckMatrix"", ""orthogonality check not performed yet"");",MatchSource.CODE_COMMENT,geom/geom/src/TGeoMatrix.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx:128,Usability,simpl,simply,128,"////////////////////////////////////////////////////////////////////////////////; /// Get the inverse rotation matrix (which is simply the transpose)",MatchSource.CODE_COMMENT,geom/geom/src/TGeoMatrix.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx:181,Performance,perform,perform,181,"////////////////////////////////////////////////////////////////////////////////; /// Convert the local distance along unit vector DIR to master frame. If DIR; /// is not specified perform a conversion such as the returned distance is the; /// the minimum for all possible directions.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoMatrix.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx:174,Performance,perform,perform,174,"////////////////////////////////////////////////////////////////////////////////; /// Convert the distance along unit vector DIR to local frame. If DIR; /// is not specified perform a conversion such as the returned distance is the; /// the minimum for all possible directions.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoMatrix.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx:86,Usability,clear,clear,86,"////////////////////////////////////////////////////////////////////////////////; /// clear the fields of this transformation",MatchSource.CODE_COMMENT,geom/geom/src/TGeoMatrix.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx:269,Availability,down,down,269,"/** \class TGeoHMatrix; \ingroup Geometry_classes. Matrix class used for computing global transformations; Should NOT be used for node definition. An instance of this class; is generally used to pile-up local transformations starting from; the top level physical node, down to the current node.; */",MatchSource.CODE_COMMENT,geom/geom/src/TGeoMatrix.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx:86,Usability,clear,clear,86,"////////////////////////////////////////////////////////////////////////////////; /// clear the data for this matrix",MatchSource.CODE_COMMENT,geom/geom/src/TGeoMatrix.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx:86,Performance,Perform,Perform,86,"////////////////////////////////////////////////////////////////////////////////; /// Perform a rotation about Z having the sine/cosine of the rotation angle.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoMatrix.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMedium.cxx:1034,Integrability,interface,interfaces,1034,"// @(#)root/geom:$Id$; // Author: Rene Brun 26/12/02; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGeoMedium; \ingroup Materials_classes. Media are used to store properties related to tracking and which are useful; only when using geometry with a particle transport MC package (via VMC). One; may define several tracking media for a given material. The media ID are user; defined values that are not used by the geometry package. In case geometry; is used via VMC (in GEANT) these numbers are overwritten, so one can only; rely on these values after gMC->FinishGeometry() is called.; The media parameters are inspired from GEANT3 and the values defined make sense; in context of GEANT (3 but also 4) or FLUKA interfaces.; */",MatchSource.CODE_COMMENT,geom/geom/src/TGeoMedium.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMedium.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx:97,Performance,cache,cache,97,"////////////////////////////////////////////////////////////////////////////////; /// Builds the cache for physical nodes and global matrices.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoNavigator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx:9,Performance,cache,cache,9,"// build cache",MatchSource.CODE_COMMENT,geom/geom/src/TGeoNavigator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx:253,Availability,failure,failure,253,"////////////////////////////////////////////////////////////////////////////////; /// Browse the tree of nodes starting from top node according to pathname.; /// Changes the path accordingly. The path is changed to point to the top node; /// in case of failure.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoNavigator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx:206,Performance,perform,performance,206,"////////////////////////////////////////////////////////////////////////////////; /// Change current path to point to the node having this id.; /// Node id has to be in range : 0 to fNNodes-1 (no check for performance reasons)",MatchSource.CODE_COMMENT,geom/geom/src/TGeoNavigator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx:191,Deployability,Update,Updates,191,"////////////////////////////////////////////////////////////////////////////////; /// Make a daughter of current node current. Can be called only with a valid; /// daughter index (no check). Updates cache accordingly.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoNavigator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx:199,Performance,cache,cache,199,"////////////////////////////////////////////////////////////////////////////////; /// Make a daughter of current node current. Can be called only with a valid; /// daughter index (no check). Updates cache accordingly.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoNavigator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx:190,Deployability,Update,Updates,190,"////////////////////////////////////////////////////////////////////////////////; /// Make a daughter of current node current. Can be called only with a valid; /// daughter node (no check). Updates cache accordingly.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoNavigator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx:198,Performance,cache,cache,198,"////////////////////////////////////////////////////////////////////////////////; /// Make a daughter of current node current. Can be called only with a valid; /// daughter node (no check). Updates cache accordingly.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoNavigator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx:115,Deployability,Update,Updates,115,"////////////////////////////////////////////////////////////////////////////////; /// Go one level up in geometry. Updates cache accordingly.; /// Determine the overlapping state of current node.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoNavigator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx:123,Performance,cache,cache,123,"////////////////////////////////////////////////////////////////////////////////; /// Go one level up in geometry. Updates cache accordingly.; /// Determine the overlapping state of current node.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoNavigator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx:124,Deployability,Update,Updates,124,"////////////////////////////////////////////////////////////////////////////////; /// Make top level node the current node. Updates the cache accordingly.; /// Determine the overlapping state of current node.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoNavigator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx:136,Performance,cache,cache,136,"////////////////////////////////////////////////////////////////////////////////; /// Make top level node the current node. Updates the cache accordingly.; /// Determine the overlapping state of current node.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoNavigator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx:44,Availability,error,error,44,"// Extrapolate current point with estimated error.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoNavigator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx:572,Safety,safe,safe,572,"////////////////////////////////////////////////////////////////////////////////; /// Find distance to next boundary and store it in fStep. Returns node to which this; /// boundary belongs. If PATH is specified, compute only distance to the node to which; /// PATH points. If STEPMAX is specified, compute distance only in case fSafety is smaller; /// than this value. STEPMAX represent the step to be made imposed by other reasons than; /// geometry (usually physics processes). Therefore in this case this method provides the; /// answer to the question : ""Is STEPMAX a safe step ?"" returning a NULL node and filling; /// fStep with a big number.; /// In case frombdr=kTRUE, the isotropic safety is set to zero.; ///; /// Note : safety distance for the current point is computed ONLY in case STEPMAX is; /// specified, otherwise users have to call explicitly TGeoManager::Safety() if; /// they want this computed for the current point.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoNavigator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx:691,Safety,safe,safety,691,"////////////////////////////////////////////////////////////////////////////////; /// Find distance to next boundary and store it in fStep. Returns node to which this; /// boundary belongs. If PATH is specified, compute only distance to the node to which; /// PATH points. If STEPMAX is specified, compute distance only in case fSafety is smaller; /// than this value. STEPMAX represent the step to be made imposed by other reasons than; /// geometry (usually physics processes). Therefore in this case this method provides the; /// answer to the question : ""Is STEPMAX a safe step ?"" returning a NULL node and filling; /// fStep with a big number.; /// In case frombdr=kTRUE, the isotropic safety is set to zero.; ///; /// Note : safety distance for the current point is computed ONLY in case STEPMAX is; /// specified, otherwise users have to call explicitly TGeoManager::Safety() if; /// they want this computed for the current point.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoNavigator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx:731,Safety,safe,safety,731,"////////////////////////////////////////////////////////////////////////////////; /// Find distance to next boundary and store it in fStep. Returns node to which this; /// boundary belongs. If PATH is specified, compute only distance to the node to which; /// PATH points. If STEPMAX is specified, compute distance only in case fSafety is smaller; /// than this value. STEPMAX represent the step to be made imposed by other reasons than; /// geometry (usually physics processes). Therefore in this case this method provides the; /// answer to the question : ""Is STEPMAX a safe step ?"" returning a NULL node and filling; /// fStep with a big number.; /// In case frombdr=kTRUE, the isotropic safety is set to zero.; ///; /// Note : safety distance for the current point is computed ONLY in case STEPMAX is; /// specified, otherwise users have to call explicitly TGeoManager::Safety() if; /// they want this computed for the current point.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoNavigator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx:874,Safety,Safe,Safety,874,"////////////////////////////////////////////////////////////////////////////////; /// Find distance to next boundary and store it in fStep. Returns node to which this; /// boundary belongs. If PATH is specified, compute only distance to the node to which; /// PATH points. If STEPMAX is specified, compute distance only in case fSafety is smaller; /// than this value. STEPMAX represent the step to be made imposed by other reasons than; /// geometry (usually physics processes). Therefore in this case this method provides the; /// answer to the question : ""Is STEPMAX a safe step ?"" returning a NULL node and filling; /// fStep with a big number.; /// In case frombdr=kTRUE, the isotropic safety is set to zero.; ///; /// Note : safety distance for the current point is computed ONLY in case STEPMAX is; /// specified, otherwise users have to call explicitly TGeoManager::Safety() if; /// they want this computed for the current point.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoNavigator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx:29,Testability,log,logically,29,"// If inside an assembly, go logically up in the hierarchy",MatchSource.CODE_COMMENT,geom/geom/src/TGeoNavigator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx:47,Safety,safe,safe,47,"// Try to get out easy if proposed step within safe region",MatchSource.CODE_COMMENT,geom/geom/src/TGeoNavigator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx:57,Availability,error,error,57,"// Current point may be inside the other node - geometry error that we ignore",MatchSource.CODE_COMMENT,geom/geom/src/TGeoNavigator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx:29,Testability,log,logically,29,"// If inside an assembly, go logically up in the hierarchy",MatchSource.CODE_COMMENT,geom/geom/src/TGeoNavigator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx:47,Safety,safe,safe,47,"// Try to get out easy if proposed step within safe region",MatchSource.CODE_COMMENT,geom/geom/src/TGeoNavigator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx:30,Safety,safe,safety,30,"// If proposed step less than safety, nothing to check",MatchSource.CODE_COMMENT,geom/geom/src/TGeoNavigator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx:3,Deployability,Update,Update,3,"// Update global point",MatchSource.CODE_COMMENT,geom/geom/src/TGeoNavigator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx:88,Integrability,Wrap,Wrapper,88,"//////////////////////////////////////////////////////////////////////////////////; /// Wrapper for getting the safety from the parallel world. Takes care of; /// caching mechanics + talking to the parallel world.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoNavigator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx:112,Safety,safe,safety,112,"//////////////////////////////////////////////////////////////////////////////////; /// Wrapper for getting the safety from the parallel world. Takes care of; /// caching mechanics + talking to the parallel world.",MatchSource.CODE_COMMENT,geom/geom/src/TGeoNavigator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx:6,Performance,cache,cache,6,"// if cache is valid, just use it",MatchSource.CODE_COMMENT,geom/geom/src/TGeoNavigator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx:40,Deployability,update,update,40,"// otherwise we need to evaluate it and update the cache; // we evaluate this with saf_max = infinity to get the best; // possible safety value",MatchSource.CODE_COMMENT,geom/geom/src/TGeoNavigator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx:51,Performance,cache,cache,51,"// otherwise we need to evaluate it and update the cache; // we evaluate this with saf_max = infinity to get the best; // possible safety value",MatchSource.CODE_COMMENT,geom/geom/src/TGeoNavigator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx
https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx:131,Safety,safe,safety,131,"// otherwise we need to evaluate it and update the cache; // we evaluate this with saf_max = infinity to get the best; // possible safety value",MatchSource.CODE_COMMENT,geom/geom/src/TGeoNavigator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx
