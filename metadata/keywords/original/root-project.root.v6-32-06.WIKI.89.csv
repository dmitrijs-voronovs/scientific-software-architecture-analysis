id,quality_attribute,keyword,matched_word,match_idx,sentence,source,filename,author,repo,version,wiki,url
https://root.cern/doc/master/classTProofServInputHandler.html:12470,Modifiability,inherit,inherited,12470," = 2; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TFileHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (cons",MatchSource.WIKI,doc/master/classTProofServInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServInputHandler.html
https://root.cern/doc/master/classTProofServInputHandler.html:12686,Modifiability,inherit,inherited,12686," = 2; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TFileHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (cons",MatchSource.WIKI,doc/master/classTProofServInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServInputHandler.html
https://root.cern/doc/master/classTProofServInputHandler.html:12904,Modifiability,inherit,inherited,12904," = 2; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TFileHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (cons",MatchSource.WIKI,doc/master/classTProofServInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServInputHandler.html
https://root.cern/doc/master/classTProofServInputHandler.html:13422,Modifiability,inherit,inherited,13422,"mber Functions inherited from TFileHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullpt",MatchSource.WIKI,doc/master/classTProofServInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServInputHandler.html
https://root.cern/doc/master/classTProofServInputHandler.html:14582,Modifiability,inherit,inherited,14582,"n_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TFileHandler;  TFileHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static",MatchSource.WIKI,doc/master/classTProofServInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServInputHandler.html
https://root.cern/doc/master/classTProofServInputHandler.html:14681,Modifiability,inherit,inherited,14681,"n_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TFileHandler;  TFileHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static",MatchSource.WIKI,doc/master/classTProofServInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServInputHandler.html
https://root.cern/doc/master/classTProofServInputHandler.html:14759,Modifiability,inherit,inherited,14759,"n_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TFileHandler;  TFileHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static",MatchSource.WIKI,doc/master/classTProofServInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServInputHandler.html
https://root.cern/doc/master/classTProofServInputHandler.html:14970,Modifiability,inherit,inherited,14970,"slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TFileHandler;  TFileHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TFileHandler; int fFileNum;  ; int fMask;  ; int fReadyMask;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from t",MatchSource.WIKI,doc/master/classTProofServInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServInputHandler.html
https://root.cern/doc/master/classTProofServInputHandler.html:15083,Modifiability,inherit,inherited,15083,"slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TFileHandler;  TFileHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TFileHandler; int fFileNum;  ; int fMask;  ; int fReadyMask;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from t",MatchSource.WIKI,doc/master/classTProofServInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServInputHandler.html
https://root.cern/doc/master/classTProofServInputHandler.html:15932,Modifiability,inherit,inherited,15932,"ectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TFileHandler; int fFileNum;  ; int fMask;  ; int fReadyMask;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TProofServInputHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofServInputHandler(). TProofServInputHandler::TProofServInputHandler ; (; TProofServ * ; s, . Int_t ; fd . ). inline . Definition at line 219 of file TProofServ.cxx. Member Function Documentation. ◆ Notify(). Bool_t TProofServInputHandler::Notify ; (; ). overridevirtual . Handle this input. ; Reimplemented from TFileHandler.; Definition at line 228 of file TProofServ.cxx. ◆ ReadNotify(). Bool_t TProofServInputHandler::ReadNotify ; (; ). inlineoverridevirtual . Notify when something can be read from the descriptor associated with this handler. ; Reimplemented from TFileHandler",MatchSource.WIKI,doc/master/classTProofServInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServInputHandler.html
https://root.cern/doc/master/classTProofServInputHandler.html:16033,Modifiability,inherit,inherited,16033,"ectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TFileHandler; int fFileNum;  ; int fMask;  ; int fReadyMask;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TProofServInputHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofServInputHandler(). TProofServInputHandler::TProofServInputHandler ; (; TProofServ * ; s, . Int_t ; fd . ). inline . Definition at line 219 of file TProofServ.cxx. Member Function Documentation. ◆ Notify(). Bool_t TProofServInputHandler::Notify ; (; ). overridevirtual . Handle this input. ; Reimplemented from TFileHandler.; Definition at line 228 of file TProofServ.cxx. ◆ ReadNotify(). Bool_t TProofServInputHandler::ReadNotify ; (; ). inlineoverridevirtual . Notify when something can be read from the descriptor associated with this handler. ; Reimplemented from TFileHandler",MatchSource.WIKI,doc/master/classTProofServInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServInputHandler.html
https://root.cern/doc/master/classTProofServInputHandler.html:16246,Modifiability,inherit,inherited,16246,"ectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TFileHandler; int fFileNum;  ; int fMask;  ; int fReadyMask;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TProofServInputHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofServInputHandler(). TProofServInputHandler::TProofServInputHandler ; (; TProofServ * ; s, . Int_t ; fd . ). inline . Definition at line 219 of file TProofServ.cxx. Member Function Documentation. ◆ Notify(). Bool_t TProofServInputHandler::Notify ; (; ). overridevirtual . Handle this input. ; Reimplemented from TFileHandler.; Definition at line 228 of file TProofServ.cxx. ◆ ReadNotify(). Bool_t TProofServInputHandler::ReadNotify ; (; ). inlineoverridevirtual . Notify when something can be read from the descriptor associated with this handler. ; Reimplemented from TFileHandler",MatchSource.WIKI,doc/master/classTProofServInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServInputHandler.html
https://root.cern/doc/master/classTProofServInputHandler.html:5518,Security,hash,hash,5518," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTProofServInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServInputHandler.html
https://root.cern/doc/master/classTProofServInterruptHandler.html:3560,Availability,error,error,3560,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTProofServInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServInterruptHandler.html
https://root.cern/doc/master/classTProofServInterruptHandler.html:3649,Availability,error,error,3649,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTProofServInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServInterruptHandler.html
https://root.cern/doc/master/classTProofServInterruptHandler.html:3804,Availability,error,error,3804,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTProofServInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServInterruptHandler.html
https://root.cern/doc/master/classTProofServInterruptHandler.html:4101,Availability,error,error,4101,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTProofServInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServInterruptHandler.html
https://root.cern/doc/master/classTProofServInterruptHandler.html:8536,Availability,error,error,8536," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTProofServInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServInterruptHandler.html
https://root.cern/doc/master/classTProofServInterruptHandler.html:3566,Integrability,message,message,3566,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTProofServInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServInterruptHandler.html
https://root.cern/doc/master/classTProofServInterruptHandler.html:4107,Integrability,message,message,4107,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTProofServInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServInterruptHandler.html
https://root.cern/doc/master/classTProofServInterruptHandler.html:5309,Integrability,message,message,5309,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTProofServInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServInterruptHandler.html
https://root.cern/doc/master/classTProofServInterruptHandler.html:8542,Integrability,message,message,8542," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTProofServInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServInterruptHandler.html
https://root.cern/doc/master/classTProofServInterruptHandler.html:8915,Integrability,message,message,8915," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, voi",MatchSource.WIKI,doc/master/classTProofServInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServInterruptHandler.html
https://root.cern/doc/master/classTProofServInterruptHandler.html:474,Modifiability,inherit,inherited,474,". ROOT: TProofServInterruptHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TProofServInterruptHandler Class Reference. . Definition at line 173 of file TProofServ.cxx. Public Member Functions;  TProofServInterruptHandler (TProofServ *s);  ; Bool_t Notify () override;  Handle this interrupt. ;  ;  Public Member Functions inherited from TSignalHandler;  TSignalHandler (ESignals sig, Bool_t sync=kTRUE);  Create signal event handler. ;  ; virtual ~TSignalHandler ();  ; void Add () override;  Add signal handler to system signal handler list. ;  ; void Delay ();  ; ESignals GetSignal () const;  ; void HandleDelayedSignal ();  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when signal occurs. ;  ; void Remove () override;  Remove signal handler from system signal handler list. ;  ; void SetSignal (ESignals sig);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char ",MatchSource.WIKI,doc/master/classTProofServInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServInterruptHandler.html
https://root.cern/doc/master/classTProofServInterruptHandler.html:1219,Modifiability,inherit,inherited,1219,"terruptHandler Class Reference. . Definition at line 173 of file TProofServ.cxx. Public Member Functions;  TProofServInterruptHandler (TProofServ *s);  ; Bool_t Notify () override;  Handle this interrupt. ;  ;  Public Member Functions inherited from TSignalHandler;  TSignalHandler (ESignals sig, Bool_t sync=kTRUE);  Create signal event handler. ;  ; virtual ~TSignalHandler ();  ; void Add () override;  Add signal handler to system signal handler list. ;  ; void Delay ();  ; ESignals GetSignal () const;  ; void HandleDelayedSignal ();  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when signal occurs. ;  ; void Remove () override;  Remove signal handler from system signal handler list. ;  ; void SetSignal (ESignals sig);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser",MatchSource.WIKI,doc/master/classTProofServInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServInterruptHandler.html
https://root.cern/doc/master/classTProofServInterruptHandler.html:1799,Modifiability,inherit,inherited,1799,"; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when signal occurs. ;  ; void Remove () override;  Remove signal handler from system signal handler list. ;  ; void SetSignal (ESignals sig);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTProofServInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServInterruptHandler.html
https://root.cern/doc/master/classTProofServInterruptHandler.html:3196,Modifiability,inherit,inheritance,3196,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTProofServInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServInterruptHandler.html
https://root.cern/doc/master/classTProofServInterruptHandler.html:5407,Modifiability,inherit,inherits,5407,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTProofServInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServInterruptHandler.html
https://root.cern/doc/master/classTProofServInterruptHandler.html:5524,Modifiability,inherit,inherits,5524,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTProofServInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServInterruptHandler.html
https://root.cern/doc/master/classTProofServInterruptHandler.html:9222,Modifiability,inherit,inherited,9222," SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const char *signal, const T &arg);  Activate signal with single paramet",MatchSource.WIKI,doc/master/classTProofServInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServInterruptHandler.html
https://root.cern/doc/master/classTProofServInterruptHandler.html:11252,Modifiability,inherit,inherited,11252,"t, const T &... params);  Emit a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Private Attributes; TProofServ * fServ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TSignalHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  St",MatchSource.WIKI,doc/master/classTProofServInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServInterruptHandler.html
https://root.cern/doc/master/classTProofServInterruptHandler.html:11908,Modifiability,inherit,inherited,11908,"d Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TSignalHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (con",MatchSource.WIKI,doc/master/classTProofServInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServInterruptHandler.html
https://root.cern/doc/master/classTProofServInterruptHandler.html:12126,Modifiability,inherit,inherited,12126,"d Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TSignalHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (con",MatchSource.WIKI,doc/master/classTProofServInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServInterruptHandler.html
https://root.cern/doc/master/classTProofServInterruptHandler.html:12344,Modifiability,inherit,inherited,12344,"d Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TSignalHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (con",MatchSource.WIKI,doc/master/classTProofServInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServInterruptHandler.html
https://root.cern/doc/master/classTProofServInterruptHandler.html:12862,Modifiability,inherit,inherited,12862,"er Functions inherited from TSignalHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullpt",MatchSource.WIKI,doc/master/classTProofServInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServInterruptHandler.html
https://root.cern/doc/master/classTProofServInterruptHandler.html:14022,Modifiability,inherit,inherited,14022,"t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSignalHandler;  TSignalHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; stat",MatchSource.WIKI,doc/master/classTProofServInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServInterruptHandler.html
https://root.cern/doc/master/classTProofServInterruptHandler.html:14121,Modifiability,inherit,inherited,14121,"t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSignalHandler;  TSignalHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; stat",MatchSource.WIKI,doc/master/classTProofServInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServInterruptHandler.html
https://root.cern/doc/master/classTProofServInterruptHandler.html:14203,Modifiability,inherit,inherited,14203,"t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSignalHandler;  TSignalHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; stat",MatchSource.WIKI,doc/master/classTProofServInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServInterruptHandler.html
https://root.cern/doc/master/classTProofServInterruptHandler.html:14414,Modifiability,inherit,inherited,14414,");  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSignalHandler;  TSignalHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TSignalHandler; Int_t fDelay;  ; ESignals fSignal;  ; Bool_t fSync;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals",MatchSource.WIKI,doc/master/classTProofServInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServInterruptHandler.html
https://root.cern/doc/master/classTProofServInterruptHandler.html:14527,Modifiability,inherit,inherited,14527,");  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSignalHandler;  TSignalHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TSignalHandler; Int_t fDelay;  ; ESignals fSignal;  ; Bool_t fSync;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals",MatchSource.WIKI,doc/master/classTProofServInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServInterruptHandler.html
https://root.cern/doc/master/classTProofServInterruptHandler.html:15376,Modifiability,inherit,inherited,15376,"rgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TSignalHandler; Int_t fDelay;  ; ESignals fSignal;  ; Bool_t fSync;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TProofServInterruptHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofServInterruptHandler(). TProofServInterruptHandler::TProofServInterruptHandler ; (; TProofServ * ; s). inline . Definition at line 176 of file TProofServ.cxx. Member Function Documentation. ◆ Notify(). Bool_t TProofServInterruptHandler::Notify ; (; ). overridevirtual . Handle this interrupt. ; Implements TSysEvtHandler.; Definition at line 184 of file TProofServ.cxx. Member Data Documentation. ◆ fServ. TProofServ* TProofServInterruptHandler::fServ. private . Definition at line 174 of file TProofServ.cxx. proof/proof/src/TProofServ.cxx. TProofServInterruptHandler. RO",MatchSource.WIKI,doc/master/classTProofServInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServInterruptHandler.html
https://root.cern/doc/master/classTProofServInterruptHandler.html:15484,Modifiability,inherit,inherited,15484,"rgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TSignalHandler; Int_t fDelay;  ; ESignals fSignal;  ; Bool_t fSync;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TProofServInterruptHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofServInterruptHandler(). TProofServInterruptHandler::TProofServInterruptHandler ; (; TProofServ * ; s). inline . Definition at line 176 of file TProofServ.cxx. Member Function Documentation. ◆ Notify(). Bool_t TProofServInterruptHandler::Notify ; (; ). overridevirtual . Handle this interrupt. ; Implements TSysEvtHandler.; Definition at line 184 of file TProofServ.cxx. Member Data Documentation. ◆ fServ. TProofServ* TProofServInterruptHandler::fServ. private . Definition at line 174 of file TProofServ.cxx. proof/proof/src/TProofServ.cxx. TProofServInterruptHandler. RO",MatchSource.WIKI,doc/master/classTProofServInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServInterruptHandler.html
https://root.cern/doc/master/classTProofServInterruptHandler.html:15697,Modifiability,inherit,inherited,15697,"rgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TSignalHandler; Int_t fDelay;  ; ESignals fSignal;  ; Bool_t fSync;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TProofServInterruptHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofServInterruptHandler(). TProofServInterruptHandler::TProofServInterruptHandler ; (; TProofServ * ; s). inline . Definition at line 176 of file TProofServ.cxx. Member Function Documentation. ◆ Notify(). Bool_t TProofServInterruptHandler::Notify ; (; ). overridevirtual . Handle this interrupt. ; Implements TSysEvtHandler.; Definition at line 184 of file TProofServ.cxx. Member Data Documentation. ◆ fServ. TProofServ* TProofServInterruptHandler::fServ. private . Definition at line 174 of file TProofServ.cxx. proof/proof/src/TProofServ.cxx. TProofServInterruptHandler. RO",MatchSource.WIKI,doc/master/classTProofServInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServInterruptHandler.html
https://root.cern/doc/master/classTProofServInterruptHandler.html:5038,Security,hash,hash,5038," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTProofServInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServInterruptHandler.html
https://root.cern/doc/master/classTProofServLite.html:973,Availability,alive,alive,973,". ROOT: TProofServLite Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TProofServLite Class ReferencePROOF » PROOF kernel Libraries. ; Version of the PROOF worker server for local running. ; The client starts directly the desired number of these workers; the master and daemons are eliminated, optimizing the number of messages exchanged and created / destroyed. ; Definition at line 30 of file TProofServLite.h. Public Member Functions;  TProofServLite (Int_t *argc, char **argv, FILE *flog=0);  Main constructor. ;  ;  ~TProofServLite () override;  Cleanup. ;  ; Int_t CreateServer () override;  Finalize the server setup. ;  ; void HandleFork (TMessage *mess) override;  Cloning itself via fork. ;  ; void HandleSigPipe () override;  Called when the client is not alive anymore; terminate the session. ;  ; void HandleTermination () override;  Called when the client is not alive anymore; terminate the session. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Terminate (Int_t status) override;  Terminate the proof server. ;  ;  Public Member Functions inherited from TProofServ;  TProofServ (Int_t *argc, char **argv, FILE *flog=0);  Main constructor. ;  ;  ~TProofServ () override;  Cleanup. ;  ; virtual void DisableTimeout ();  ; virtual void EnableTimeout ();  ; void FlushLogFile ();  Reposition the read pointer in the log file to the very end. ;  ; TObject * Get (const char *namecycle);  Get object with name ""name;cycle"" (e.g. ;  ; Int_t GetActSessions () const;  ; const char * GetCacheDir () const;  ; TProofLockPath * GetCacheLock ();  ; const char * GetConfDir () const;  ; const char * GetConfFile () const;  ; Float_t GetCpuTime () cons",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:1083,Availability,alive,alive,1083,"ence Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TProofServLite Class ReferencePROOF » PROOF kernel Libraries. ; Version of the PROOF worker server for local running. ; The client starts directly the desired number of these workers; the master and daemons are eliminated, optimizing the number of messages exchanged and created / destroyed. ; Definition at line 30 of file TProofServLite.h. Public Member Functions;  TProofServLite (Int_t *argc, char **argv, FILE *flog=0);  Main constructor. ;  ;  ~TProofServLite () override;  Cleanup. ;  ; Int_t CreateServer () override;  Finalize the server setup. ;  ; void HandleFork (TMessage *mess) override;  Cloning itself via fork. ;  ; void HandleSigPipe () override;  Called when the client is not alive anymore; terminate the session. ;  ; void HandleTermination () override;  Called when the client is not alive anymore; terminate the session. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Terminate (Int_t status) override;  Terminate the proof server. ;  ;  Public Member Functions inherited from TProofServ;  TProofServ (Int_t *argc, char **argv, FILE *flog=0);  Main constructor. ;  ;  ~TProofServ () override;  Cleanup. ;  ; virtual void DisableTimeout ();  ; virtual void EnableTimeout ();  ; void FlushLogFile ();  Reposition the read pointer in the log file to the very end. ;  ; TObject * Get (const char *namecycle);  Get object with name ""name;cycle"" (e.g. ;  ; Int_t GetActSessions () const;  ; const char * GetCacheDir () const;  ; TProofLockPath * GetCacheLock ();  ; const char * GetConfDir () const;  ; const char * GetConfFile () const;  ; Float_t GetCpuTime () const;  ; const char * GetDataDir () const;  ; const char * GetDataD",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:3337,Availability,recover,recover,3337,"evel () const;  ; Long64_t GetMsgSizeHWM () const;  ; TDSetElement * GetNextPacket (Long64_t totalEntries=-1);  Get next range of entries to be processed on this server. ;  ; void GetOptions (Int_t *argc, char **argv) override;  Get and handle command line options. ;  ; const char * GetOrdinal () const;  ; TPackMgr * GetPackMgr () const;  ; const char * GetPrefix () const;  ; TProof * GetProof () const;  ; Int_t GetProtocol () const;  ; Int_t GetQuerySeqNum () const;  ; Float_t GetRealTime () const;  ; const char * GetService () const;  ; const char * GetSessionDir () const;  ; const char * GetSessionTag () const;  ; TSocket * GetSocket () const;  ; const char * GetTopSessionTag () const;  ; Int_t GetTotSessions () const;  ; const char * GetUser () const;  ; const char * GetWorkDir () const;  ; virtual EQueryAction GetWorkers (TList *workers, Int_t &prioritychange, Bool_t resume=kFALSE);  Get list of workers to be used from now on. ;  ; void HandleException (Int_t sig) override;  Exception handler: we do not try to recover here, just exit. ;  ; virtual void HandleSocketInput ();  Handle input coming from the client or from the master server. ;  ; virtual Int_t HandleSocketInput (TMessage *mess, Bool_t all);  Process input coming from the client or from the master server. ;  ; virtual void HandleUrgentData ();  Handle Out-Of-Band data sent by the master or client. ;  ; void Interrupt ();  ; Bool_t IsEndMaster () const;  ; Bool_t IsMaster () const;  ; Bool_t IsParallel () const;  True if in parallel mode. ;  ; Bool_t IsTopMaster () const;  ; void LogToMaster (Bool_t on=kTRUE);  ; void Print (Option_t *option="""") const override;  Print status of slave server. ;  ; Int_t ReceiveFile (const char *file, Bool_t bin, Long64_t size);  Receive a file, either sent by a client or a master server. ;  ; virtual void ReleaseWorker (const char *);  ; void Reset (const char *dir);  Reset PROOF environment to be ready for execution of next command. ;  ; void RestartComputeTime ();  R",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:6584,Availability,avail,available,6584,"es passed as program arguments. ;  ; EExitOnException ExitOnException (EExitOnException opt=kExit);  Set the exit on exception option. ;  ; virtual TApplicationImp * GetApplicationImp ();  ; TApplication * GetAppRemote () const;  ; const char * GetIdleCommand () const;  ; TString GetSetup ();  It gets the ROOT installation setup as TString. ;  ; TSignalHandler * GetSignalHandler () const;  ; virtual void HandleIdleTimer ();  Handle idle timeout. ;  ; virtual Bool_t HandleTermInput ();  ; virtual void Hide ();  ; virtual void Iconify ();  ; virtual void Init ();  ; void InitializeGraphics (Bool_t only_web=kFALSE);  Initialize the graphics environment. ;  ; TObjArray * InputFiles () const;  ; virtual Bool_t IsCmdThread ();  ; Bool_t IsRunning () const;  ; virtual void KeyPressed (Int_t key);  Emit signal when console keyboard key was pressed. ;  ; virtual void LineProcessed (const char *line);  Emit signal when a line has been processed. ;  ; virtual void Lower ();  ; void ls (Option_t *option="""") const override;  Show available sessions. ;  ; Bool_t NoLogoOpt () const;  ; Bool_t NoLogOpt () const;  ; virtual void Open ();  ; void OpenForumTopic (const TString &type);  It opens a Forum topic in a web browser with prefilled ROOT version. ;  ; void OpenGitHubIssue (const TString &type);  It opens a GitHub issue in a web browser with prefilled ROOT version. ;  ; void OpenInBrowser (const TString &url);  The function generates and executes a command that loads the Doxygen URL in a browser. ;  ; void OpenReferenceGuideFor (const TString &strippedClass);  It opens the online reference guide, generated with Doxygen, for the chosen scope (class/namespace/struct) or member (method/function/ data member/enumeration/enumerator. ;  ; virtual Longptr_t ProcessFile (const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE);  Process a file containing a C++ macro. ;  ; virtual Longptr_t ProcessLine (const char *line, Bool_t sync=kFALSE, Int_t *error=nullptr);  Process a single comm",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:7357,Availability,error,error,7357,"l when console keyboard key was pressed. ;  ; virtual void LineProcessed (const char *line);  Emit signal when a line has been processed. ;  ; virtual void Lower ();  ; void ls (Option_t *option="""") const override;  Show available sessions. ;  ; Bool_t NoLogoOpt () const;  ; Bool_t NoLogOpt () const;  ; virtual void Open ();  ; void OpenForumTopic (const TString &type);  It opens a Forum topic in a web browser with prefilled ROOT version. ;  ; void OpenGitHubIssue (const TString &type);  It opens a GitHub issue in a web browser with prefilled ROOT version. ;  ; void OpenInBrowser (const TString &url);  The function generates and executes a command that loads the Doxygen URL in a browser. ;  ; void OpenReferenceGuideFor (const TString &strippedClass);  It opens the online reference guide, generated with Doxygen, for the chosen scope (class/namespace/struct) or member (method/function/ data member/enumeration/enumerator. ;  ; virtual Longptr_t ProcessFile (const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE);  Process a file containing a C++ macro. ;  ; virtual Longptr_t ProcessLine (const char *line, Bool_t sync=kFALSE, Int_t *error=nullptr);  Process a single command line, either a C++ statement or an interpreter command starting with a ""."". ;  ; Bool_t QuitOpt () const;  ; virtual void Raise ();  ; virtual void RemoveIdleTimer ();  Remove idle timer. Normally called via TROOT::Idle(0). ;  ; Bool_t ReturnFromRun () const;  ; virtual void ReturnPressed (char *text);  Emit signal when return key was pressed. ;  ; virtual void SetEchoMode (Bool_t mode);  Set console echo mode: ;  ; virtual void SetIdleTimer (UInt_t idleTimeInSec, const char *command);  Set the command to be executed after the system has been idle for idleTimeInSec seconds. ;  ; void SetReturnFromRun (Bool_t ret);  ; virtual void Show ();  ; virtual void StartIdleing ();  Called when system starts idleing. ;  ; virtual void StopIdleing ();  Called when system stops idleing. ;  ; void StreamerNVirt",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:7514,Availability,error,error,7514,"; void ls (Option_t *option="""") const override;  Show available sessions. ;  ; Bool_t NoLogoOpt () const;  ; Bool_t NoLogOpt () const;  ; virtual void Open ();  ; void OpenForumTopic (const TString &type);  It opens a Forum topic in a web browser with prefilled ROOT version. ;  ; void OpenGitHubIssue (const TString &type);  It opens a GitHub issue in a web browser with prefilled ROOT version. ;  ; void OpenInBrowser (const TString &url);  The function generates and executes a command that loads the Doxygen URL in a browser. ;  ; void OpenReferenceGuideFor (const TString &strippedClass);  It opens the online reference guide, generated with Doxygen, for the chosen scope (class/namespace/struct) or member (method/function/ data member/enumeration/enumerator. ;  ; virtual Longptr_t ProcessFile (const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE);  Process a file containing a C++ macro. ;  ; virtual Longptr_t ProcessLine (const char *line, Bool_t sync=kFALSE, Int_t *error=nullptr);  Process a single command line, either a C++ statement or an interpreter command starting with a ""."". ;  ; Bool_t QuitOpt () const;  ; virtual void Raise ();  ; virtual void RemoveIdleTimer ();  Remove idle timer. Normally called via TROOT::Idle(0). ;  ; Bool_t ReturnFromRun () const;  ; virtual void ReturnPressed (char *text);  Emit signal when return key was pressed. ;  ; virtual void SetEchoMode (Bool_t mode);  Set console echo mode: ;  ; virtual void SetIdleTimer (UInt_t idleTimeInSec, const char *command);  Set the command to be executed after the system has been idle for idleTimeInSec seconds. ;  ; void SetReturnFromRun (Bool_t ret);  ; virtual void Show ();  ; virtual void StartIdleing ();  Called when system starts idleing. ;  ; virtual void StopIdleing ();  Called when system stops idleing. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Int_t TabCompletionHook (char *buf, int *pLoc, std::ostream &out);  What to do when tab is pressed. ;  ; const c",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:7960,Availability,echo,echo,7960," that loads the Doxygen URL in a browser. ;  ; void OpenReferenceGuideFor (const TString &strippedClass);  It opens the online reference guide, generated with Doxygen, for the chosen scope (class/namespace/struct) or member (method/function/ data member/enumeration/enumerator. ;  ; virtual Longptr_t ProcessFile (const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE);  Process a file containing a C++ macro. ;  ; virtual Longptr_t ProcessLine (const char *line, Bool_t sync=kFALSE, Int_t *error=nullptr);  Process a single command line, either a C++ statement or an interpreter command starting with a ""."". ;  ; Bool_t QuitOpt () const;  ; virtual void Raise ();  ; virtual void RemoveIdleTimer ();  Remove idle timer. Normally called via TROOT::Idle(0). ;  ; Bool_t ReturnFromRun () const;  ; virtual void ReturnPressed (char *text);  Emit signal when return key was pressed. ;  ; virtual void SetEchoMode (Bool_t mode);  Set console echo mode: ;  ; virtual void SetIdleTimer (UInt_t idleTimeInSec, const char *command);  Set the command to be executed after the system has been idle for idleTimeInSec seconds. ;  ; void SetReturnFromRun (Bool_t ret);  ; virtual void Show ();  ; virtual void StartIdleing ();  Called when system starts idleing. ;  ; virtual void StopIdleing ();  Called when system stops idleing. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Int_t TabCompletionHook (char *buf, int *pLoc, std::ostream &out);  What to do when tab is pressed. ;  ; const char * WorkingDirectory () const;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Bro",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:10353,Availability,error,error,10353,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:10442,Availability,error,error,10442,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:10597,Availability,error,error,10597,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:10894,Availability,error,error,10894,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:15229,Availability,error,error,15229,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:18363,Availability,error,error,18363,"const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TProofServ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void ErrorHandler (Int_t level, Bool_t abort, const char *location, const char *msg);  The PROOF error handler function. ;  ; static void FilterLocalroot (TString &path, const char *url=""root://dum/"");  If 'path' is local and 'dsrv' is Xrootd, apply 'path.Localroot' settings, if any. ;  ; static TMap * GetDataSetNodeMap (TFileCollection *fc, TString &emsg);  Get a map {server-name, list-of-files} for collection 'fc' to be used in TPacketizerFile. ;  ; static void GetLocalServer (TString &dsrv);  Extract LOCALDATASERVER info in 'dsrv'. ;  ; static Float_t GetMemHWM ();  MemHWM getter. ;  ; static Float_t GetMemStop ();  MemStop getter. ;  ; static Long_t GetResMemMax ();  ResMemMax getter. ;  ; static Long_t GetVirtMemMax ();  VirtMemMax getter. ;  ; static Bool_t IsActive ();  Static function that returns kTRUE in case we are a PROOF server. ; ",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:20251,Availability,error,error,20251,"ut' as datasets according to the rules in 'in'. ;  ; static void ResolveKeywords (TString &fname, const char *path=0);  Replace <ord>, <user>, <u>, <group>, <stag>, <qnum>, <file>, <rver> and <build> placeholders in fname. ;  ; static FILE * SetErrorHandlerFile (FILE *ferr);  Set the file stream where to log (default stderr). ;  ; static void SetLastEntry (Long64_t lastentry);  Set the last entry before exception. ;  ; static void SetLastMsg (const char *lastmsg);  Set the message to be sent back in case of exceptions. ;  ; static TProofServ * This ();  Static function returning pointer to global object gProofServ. ;  ;  Static Public Member Functions inherited from TApplication; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void CreateApplication ();  Static function used to create a default application environment. ;  ; static const char * DeclFileName ();  ; static Longptr_t ExecuteFile (const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE);  Execute a file containing a C++ macro (static method). ;  ; static TList * GetApplications ();  Static method returning the list of available applications. ;  ; static void NeedGraphicsLibs ();  Static method. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns t",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:20420,Availability,avail,available,20420,", <group>, <stag>, <qnum>, <file>, <rver> and <build> placeholders in fname. ;  ; static FILE * SetErrorHandlerFile (FILE *ferr);  Set the file stream where to log (default stderr). ;  ; static void SetLastEntry (Long64_t lastentry);  Set the last entry before exception. ;  ; static void SetLastMsg (const char *lastmsg);  Set the message to be sent back in case of exceptions. ;  ; static TProofServ * This ();  Static function returning pointer to global object gProofServ. ;  ;  Static Public Member Functions inherited from TApplication; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void CreateApplication ();  Static function used to create a default application environment. ;  ; static const char * DeclFileName ();  ; static Longptr_t ExecuteFile (const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE);  Execute a file containing a C++ macro (static method). ;  ; static TList * GetApplications ();  Static method returning the list of available applications. ;  ; static void NeedGraphicsLibs ();  Static method. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; s",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:26457,Availability,error,error,26457,"art (between TProofServ and TXProofServ) of the setup phase. ;  ; Bool_t UnlinkDataDir (const char *path);  Scan recursively the datadir and unlink it if empty Return kTRUE if it can be unlinked, kFALSE otherwise. ;  ;  Protected Member Functions inherited from TApplication;  TApplication ();  Default ctor. Can be used by classes deriving from TApplication. ;  ; virtual void Forum (const char *line);  The function ("".forum <type>"") submits a new post on the ROOT forum via web browser. ;  ; virtual void GitHub (const char *line);  The function ("".gh <type>"") submits a new issue on GitHub via web browser. ;  ; virtual void Help (const char *line);  The function lists useful commands ("".help"") or opens the online reference guide, generated with Doxygen ("".help scope"" or "".help scope::member""). ;  ; virtual void LoadGraphicsLibs ();  Load shared libs necessary for graphics. ;  ; virtual void MakeBatch ();  Switch to batch mode. ;  ; virtual Longptr_t ProcessRemote (const char *line, Int_t *error=nullptr);  Process the content of a line starting with "".R"" (already stripped-off) The format is. ;  ; void SetSignalHandler (TSignalHandler *sh);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TApplication; static void Close (TApplication *app);  Static function used to close a remote application. ;  ; static TApplication * Open (const char *url, Int_t debug, const char *script);  Static function used to attach to an existing remote application or to start one. ;  ; static Int_t ParseRemoteLine (const char *ln, TString &hostdir, TString &user, Int_t &dbg, TString &script);  Parse the content of a line starting with "".R"" (already s",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:30242,Availability,error,error,30242,"ProofServLite ; (; Int_t * ; argc, . char ** ; argv, . FILE * ; flog = 0 . ). Main constructor. ; Definition at line 191 of file TProofServLite.cxx. ◆ ~TProofServLite(). TProofServLite::~TProofServLite ; (; ). override . Cleanup. ; Not really necessary since after this dtor there is no live anyway. ; Definition at line 313 of file TProofServLite.cxx. Member Function Documentation. ◆ Class(). static TClass * TProofServLite::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TProofServLite::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TProofServLite::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 55 of file TProofServLite.h. ◆ CreateServer(). Int_t TProofServLite::CreateServer ; (; ). overridevirtual . Finalize the server setup. ; If master, create the TProof instance to talk the worker or submaster nodes. Return 0 on success, -1 on error ; Reimplemented from TProofServ.; Definition at line 203 of file TProofServLite.cxx. ◆ DeclFileName(). static const char * TProofServLite::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 55 of file TProofServLite.h. ◆ HandleFork(). void TProofServLite::HandleFork ; (; TMessage * ; mess). overridevirtual . Cloning itself via fork. ; Reimplemented from TProofServ.; Definition at line 467 of file TProofServLite.cxx. ◆ HandleSigPipe(). void TProofServLite::HandleSigPipe ; (; ). overridevirtual . Called when the client is not alive anymore; terminate the session. ; Reimplemented from TProofServ.; Definition at line 321 of file TProofServLite.cxx. ◆ HandleTermination(). void TProofServLite::HandleTermination ; (; ). overridevirtual . Called when the client is not alive anymore; terminate the session. ; Reimplemented from TProofServ.; Definition at line 329 of file TProofServLite.cxx. ◆ IsA(). TClass * TProofServLite::IsA ; (;",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:30841,Availability,alive,alive,30841," Class_Version(). static constexpr Version_t TProofServLite::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 55 of file TProofServLite.h. ◆ CreateServer(). Int_t TProofServLite::CreateServer ; (; ). overridevirtual . Finalize the server setup. ; If master, create the TProof instance to talk the worker or submaster nodes. Return 0 on success, -1 on error ; Reimplemented from TProofServ.; Definition at line 203 of file TProofServLite.cxx. ◆ DeclFileName(). static const char * TProofServLite::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 55 of file TProofServLite.h. ◆ HandleFork(). void TProofServLite::HandleFork ; (; TMessage * ; mess). overridevirtual . Cloning itself via fork. ; Reimplemented from TProofServ.; Definition at line 467 of file TProofServLite.cxx. ◆ HandleSigPipe(). void TProofServLite::HandleSigPipe ; (; ). overridevirtual . Called when the client is not alive anymore; terminate the session. ; Reimplemented from TProofServ.; Definition at line 321 of file TProofServLite.cxx. ◆ HandleTermination(). void TProofServLite::HandleTermination ; (; ). overridevirtual . Called when the client is not alive anymore; terminate the session. ; Reimplemented from TProofServ.; Definition at line 329 of file TProofServLite.cxx. ◆ IsA(). TClass * TProofServLite::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TProofServ.; Definition at line 55 of file TProofServLite.h. ◆ Setup(). Int_t TProofServLite::Setup ; (; ). overrideprivatevirtual . Print the ProofServ logo on standard output. ; Return 0 on success, -1 on error ; Reimplemented from TProofServ.; Definition at line 338 of file TProofServLite.cxx. ◆ SetupOnFork(). Int_t TProofServLite::SetupOnFork ; (; const char * ; ord). private . Finalize the server setup afetr forking. ; Return 0 on success, -1 on error ; Definition at line 506 of file TProofS",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:31082,Availability,alive,alive,31082,"(; ). overridevirtual . Finalize the server setup. ; If master, create the TProof instance to talk the worker or submaster nodes. Return 0 on success, -1 on error ; Reimplemented from TProofServ.; Definition at line 203 of file TProofServLite.cxx. ◆ DeclFileName(). static const char * TProofServLite::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 55 of file TProofServLite.h. ◆ HandleFork(). void TProofServLite::HandleFork ; (; TMessage * ; mess). overridevirtual . Cloning itself via fork. ; Reimplemented from TProofServ.; Definition at line 467 of file TProofServLite.cxx. ◆ HandleSigPipe(). void TProofServLite::HandleSigPipe ; (; ). overridevirtual . Called when the client is not alive anymore; terminate the session. ; Reimplemented from TProofServ.; Definition at line 321 of file TProofServLite.cxx. ◆ HandleTermination(). void TProofServLite::HandleTermination ; (; ). overridevirtual . Called when the client is not alive anymore; terminate the session. ; Reimplemented from TProofServ.; Definition at line 329 of file TProofServLite.cxx. ◆ IsA(). TClass * TProofServLite::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TProofServ.; Definition at line 55 of file TProofServLite.h. ◆ Setup(). Int_t TProofServLite::Setup ; (; ). overrideprivatevirtual . Print the ProofServ logo on standard output. ; Return 0 on success, -1 on error ; Reimplemented from TProofServ.; Definition at line 338 of file TProofServLite.cxx. ◆ SetupOnFork(). Int_t TProofServLite::SetupOnFork ; (; const char * ; ord). private . Finalize the server setup afetr forking. ; Return 0 on success, -1 on error ; Definition at line 506 of file TProofServLite.cxx. ◆ Streamer(). void TProofServLite::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TProofServ. ◆ StreamerNVirtual(). void TProofServLite::StreamerNVirtual ; (; TBuffer &",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:31550,Availability,error,error,31550,"oofServLite::HandleFork ; (; TMessage * ; mess). overridevirtual . Cloning itself via fork. ; Reimplemented from TProofServ.; Definition at line 467 of file TProofServLite.cxx. ◆ HandleSigPipe(). void TProofServLite::HandleSigPipe ; (; ). overridevirtual . Called when the client is not alive anymore; terminate the session. ; Reimplemented from TProofServ.; Definition at line 321 of file TProofServLite.cxx. ◆ HandleTermination(). void TProofServLite::HandleTermination ; (; ). overridevirtual . Called when the client is not alive anymore; terminate the session. ; Reimplemented from TProofServ.; Definition at line 329 of file TProofServLite.cxx. ◆ IsA(). TClass * TProofServLite::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TProofServ.; Definition at line 55 of file TProofServLite.h. ◆ Setup(). Int_t TProofServLite::Setup ; (; ). overrideprivatevirtual . Print the ProofServ logo on standard output. ; Return 0 on success, -1 on error ; Reimplemented from TProofServ.; Definition at line 338 of file TProofServLite.cxx. ◆ SetupOnFork(). Int_t TProofServLite::SetupOnFork ; (; const char * ; ord). private . Finalize the server setup afetr forking. ; Return 0 on success, -1 on error ; Definition at line 506 of file TProofServLite.cxx. ◆ Streamer(). void TProofServLite::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TProofServ. ◆ StreamerNVirtual(). void TProofServLite::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 55 of file TProofServLite.h. ◆ Terminate(). void TProofServLite::Terminate ; (; Int_t ; status). overridevirtual . Terminate the proof server. ; Reimplemented from TProofServ.; Definition at line 428 of file TProofServLite.cxx. Member Data Documentation. ◆ fInterruptHandler. TProofServLiteInterruptHandler* TProofServLite::fInterruptHandler. private . Definition at line 33 of file TProofServLite.h. ◆ fSock",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:31798,Availability,error,error,31798," Called when the client is not alive anymore; terminate the session. ; Reimplemented from TProofServ.; Definition at line 321 of file TProofServLite.cxx. ◆ HandleTermination(). void TProofServLite::HandleTermination ; (; ). overridevirtual . Called when the client is not alive anymore; terminate the session. ; Reimplemented from TProofServ.; Definition at line 329 of file TProofServLite.cxx. ◆ IsA(). TClass * TProofServLite::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TProofServ.; Definition at line 55 of file TProofServLite.h. ◆ Setup(). Int_t TProofServLite::Setup ; (; ). overrideprivatevirtual . Print the ProofServ logo on standard output. ; Return 0 on success, -1 on error ; Reimplemented from TProofServ.; Definition at line 338 of file TProofServLite.cxx. ◆ SetupOnFork(). Int_t TProofServLite::SetupOnFork ; (; const char * ; ord). private . Finalize the server setup afetr forking. ; Return 0 on success, -1 on error ; Definition at line 506 of file TProofServLite.cxx. ◆ Streamer(). void TProofServLite::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TProofServ. ◆ StreamerNVirtual(). void TProofServLite::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 55 of file TProofServLite.h. ◆ Terminate(). void TProofServLite::Terminate ; (; Int_t ; status). overridevirtual . Terminate the proof server. ; Reimplemented from TProofServ.; Definition at line 428 of file TProofServLite.cxx. Member Data Documentation. ◆ fInterruptHandler. TProofServLiteInterruptHandler* TProofServLite::fInterruptHandler. private . Definition at line 33 of file TProofServLite.h. ◆ fSockPath. TString TProofServLite::fSockPath. private . Definition at line 34 of file TProofServLite.h. ◆ fTerminated. Bool_t TProofServLite::fTerminated. private . Definition at line 36 of file TProofServLite.h. proof/proof/inc/TProofServLite.h; proof/proof/sr",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:5863,Deployability,install,installation,5863,"or client. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void TruncateLogFile ();  Truncate the log file to the 80% of the required max size if this is set. ;  ; Int_t UpdateSessionStatus (Int_t xst=-1);  Update the session status in the relevant file. ;  ;  Public Member Functions inherited from TApplication;  TApplication (const char *appClassName, Int_t *argc, char **argv, void *options=nullptr, Int_t numOptions=0);  Create an application environment. ;  ; virtual ~TApplication ();  TApplication dtor. ;  ; virtual const char * ApplicationName () const;  ; Int_t Argc () const;  ; char ** Argv () const;  ; char * Argv (Int_t index) const;  Return specified argument. ;  ; void ClearInputFiles ();  Clear list containing macro files passed as program arguments. ;  ; EExitOnException ExitOnException (EExitOnException opt=kExit);  Set the exit on exception option. ;  ; virtual TApplicationImp * GetApplicationImp ();  ; TApplication * GetAppRemote () const;  ; const char * GetIdleCommand () const;  ; TString GetSetup ();  It gets the ROOT installation setup as TString. ;  ; TSignalHandler * GetSignalHandler () const;  ; virtual void HandleIdleTimer ();  Handle idle timeout. ;  ; virtual Bool_t HandleTermInput ();  ; virtual void Hide ();  ; virtual void Iconify ();  ; virtual void Init ();  ; void InitializeGraphics (Bool_t only_web=kFALSE);  Initialize the graphics environment. ;  ; TObjArray * InputFiles () const;  ; virtual Bool_t IsCmdThread ();  ; Bool_t IsRunning () const;  ; virtual void KeyPressed (Int_t key);  Emit signal when console keyboard key was pressed. ;  ; virtual void LineProcessed (const char *line);  Emit signal when a line has been processed. ;  ; virtual void Lower ();  ; void ls (Option_t *option="""") const override;  Show available sessions. ;  ; Bool_t NoLogoOpt () const;  ; Bool_t NoLogOpt () const;  ; virtual void Open ();  ; void OpenForumTopic (const TString &type);  It opens a Forum topic in a web browser with prefill",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:525,Integrability,message,messages,525,". ROOT: TProofServLite Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TProofServLite Class ReferencePROOF » PROOF kernel Libraries. ; Version of the PROOF worker server for local running. ; The client starts directly the desired number of these workers; the master and daemons are eliminated, optimizing the number of messages exchanged and created / destroyed. ; Definition at line 30 of file TProofServLite.h. Public Member Functions;  TProofServLite (Int_t *argc, char **argv, FILE *flog=0);  Main constructor. ;  ;  ~TProofServLite () override;  Cleanup. ;  ; Int_t CreateServer () override;  Finalize the server setup. ;  ; void HandleFork (TMessage *mess) override;  Cloning itself via fork. ;  ; void HandleSigPipe () override;  Called when the client is not alive anymore; terminate the session. ;  ; void HandleTermination () override;  Called when the client is not alive anymore; terminate the session. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Terminate (Int_t status) override;  Terminate the proof server. ;  ;  Public Member Functions inherited from TProofServ;  TProofServ (Int_t *argc, char **argv, FILE *flog=0);  Main constructor. ;  ;  ~TProofServ () override;  Cleanup. ;  ; virtual void DisableTimeout ();  ; virtual void EnableTimeout ();  ; void FlushLogFile ();  Reposition the read pointer in the log file to the very end. ;  ; TObject * Get (const char *namecycle);  Get object with name ""name;cycle"" (e.g. ;  ; Int_t GetActSessions () const;  ; const char * GetCacheDir () const;  ; TProofLockPath * GetCacheLock ();  ; const char * GetConfDir () const;  ; const char * GetConfFile () const;  ; Float_t GetCpuTime () cons",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:4482,Integrability,message,message,4482,"r server. ;  ; virtual Int_t HandleSocketInput (TMessage *mess, Bool_t all);  Process input coming from the client or from the master server. ;  ; virtual void HandleUrgentData ();  Handle Out-Of-Band data sent by the master or client. ;  ; void Interrupt ();  ; Bool_t IsEndMaster () const;  ; Bool_t IsMaster () const;  ; Bool_t IsParallel () const;  True if in parallel mode. ;  ; Bool_t IsTopMaster () const;  ; void LogToMaster (Bool_t on=kTRUE);  ; void Print (Option_t *option="""") const override;  Print status of slave server. ;  ; Int_t ReceiveFile (const char *file, Bool_t bin, Long64_t size);  Receive a file, either sent by a client or a master server. ;  ; virtual void ReleaseWorker (const char *);  ; void Reset (const char *dir);  Reset PROOF environment to be ready for execution of next command. ;  ; void RestartComputeTime ();  Reset the compute time. ;  ; void Run (Bool_t retrn=kFALSE) override;  Main server eventloop. ;  ; void SendAsynMessage (const char *msg, Bool_t lf=kTRUE);  Send an asychronous message to the master / client . ;  ; virtual void SendLogFile (Int_t status=0, Int_t start=-1, Int_t end=-1);  Send log file to master. ;  ; void SendParallel (Bool_t async=kFALSE);  Send number of parallel nodes to master or client. ;  ; void SendStatistics ();  Send statistics of slave server to master or client. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void TruncateLogFile ();  Truncate the log file to the 80% of the required max size if this is set. ;  ; Int_t UpdateSessionStatus (Int_t xst=-1);  Update the session status in the relevant file. ;  ;  Public Member Functions inherited from TApplication;  TApplication (const char *appClassName, Int_t *argc, char **argv, void *options=nullptr, Int_t numOptions=0);  Create an application environment. ;  ; virtual ~TApplication ();  TApplication dtor. ;  ; virtual const char * ApplicationName () const;  ; Int_t Argc () const;  ; char ** Argv () const;  ; char * Argv (Int_t index) co",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:10359,Integrability,message,message,10359,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:10900,Integrability,message,message,10900,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:12102,Integrability,message,message,12102,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle again",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:15235,Integrability,message,message,15235,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:15608,Integrability,message,message,15608," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, voi",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:19724,Integrability,message,message,19724," ;  ; static void GetLocalServer (TString &dsrv);  Extract LOCALDATASERVER info in 'dsrv'. ;  ; static Float_t GetMemHWM ();  MemHWM getter. ;  ; static Float_t GetMemStop ();  MemStop getter. ;  ; static Long_t GetResMemMax ();  ResMemMax getter. ;  ; static Long_t GetVirtMemMax ();  VirtMemMax getter. ;  ; static Bool_t IsActive ();  Static function that returns kTRUE in case we are a PROOF server. ;  ; static Int_t RegisterDataSets (TList *in, TList *out, TDataSetManager *dsm, TString &e);  Register TFileCollections in 'out' as datasets according to the rules in 'in'. ;  ; static void ResolveKeywords (TString &fname, const char *path=0);  Replace <ord>, <user>, <u>, <group>, <stag>, <qnum>, <file>, <rver> and <build> placeholders in fname. ;  ; static FILE * SetErrorHandlerFile (FILE *ferr);  Set the file stream where to log (default stderr). ;  ; static void SetLastEntry (Long64_t lastentry);  Set the last entry before exception. ;  ; static void SetLastMsg (const char *lastmsg);  Set the message to be sent back in case of exceptions. ;  ; static TProofServ * This ();  Static function returning pointer to global object gProofServ. ;  ;  Static Public Member Functions inherited from TApplication; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void CreateApplication ();  Static function used to create a default application environment. ;  ; static const char * DeclFileName ();  ; static Longptr_t ExecuteFile (const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE);  Execute a file containing a C++ macro (static method). ;  ; static TList * GetApplications ();  Static method returning the list of available applications. ;  ; static void NeedGraphicsLibs ();  Static method. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; sta",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:25071,Integrability,message,message,25071,"his is typically run in the reader thread, so access needs to be protected. ;  ; virtual void HandleArchive (TMessage *mess, TString *slb=0);  Handle archive request. ;  ; virtual Int_t HandleCache (TMessage *mess, TString *slb=0);  Handle here all cache and package requests. ;  ; virtual void HandleCheckFile (TMessage *mess, TString *slb=0);  Handle file checking request. ;  ; virtual Int_t HandleDataSets (TMessage *mess, TString *slb=0);  Handle here requests about datasets. ;  ; virtual Int_t HandleLibIncPath (TMessage *mess);  Handle lib, inc search paths modification request. ;  ; virtual void HandleProcess (TMessage *mess, TString *slb=0);  Handle processing request. ;  ; virtual void HandleQueryList (TMessage *mess);  Handle request for list of queries. ;  ; virtual void HandleRemove (TMessage *mess, TString *slb=0);  Handle remove request. ;  ; virtual void HandleRetrieve (TMessage *mess, TString *slb=0);  Handle retrieve request. ;  ; virtual void HandleSubmerger (TMessage *mess);  Handle a message of type kPROOF_SUBMERGER. ;  ; virtual Int_t HandleWorkerLists (TMessage *mess);  Handle here all requests to modify worker lists. ;  ; Bool_t IsIdle ();  Return the idle status. ;  ; virtual void MakePlayer ();  Make player instance. ;  ; virtual void ProcessNext (TString *slb=0);  process the next query from the queue of submitted jobs. ;  ; Int_t SetupCommon ();  Common part (between TProofServ and TXProofServ) of the setup phase. ;  ; Bool_t UnlinkDataDir (const char *path);  Scan recursively the datadir and unlink it if empty Return kTRUE if it can be unlinked, kFALSE otherwise. ;  ;  Protected Member Functions inherited from TApplication;  TApplication ();  Default ctor. Can be used by classes deriving from TApplication. ;  ; virtual void Forum (const char *line);  The function ("".forum <type>"") submits a new post on the ROOT forum via web browser. ;  ; virtual void GitHub (const char *line);  The function ("".gh <type>"") submits a new issue on GitHub via we",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:1402,Modifiability,inherit,inherited,1402,"number of these workers; the master and daemons are eliminated, optimizing the number of messages exchanged and created / destroyed. ; Definition at line 30 of file TProofServLite.h. Public Member Functions;  TProofServLite (Int_t *argc, char **argv, FILE *flog=0);  Main constructor. ;  ;  ~TProofServLite () override;  Cleanup. ;  ; Int_t CreateServer () override;  Finalize the server setup. ;  ; void HandleFork (TMessage *mess) override;  Cloning itself via fork. ;  ; void HandleSigPipe () override;  Called when the client is not alive anymore; terminate the session. ;  ; void HandleTermination () override;  Called when the client is not alive anymore; terminate the session. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Terminate (Int_t status) override;  Terminate the proof server. ;  ;  Public Member Functions inherited from TProofServ;  TProofServ (Int_t *argc, char **argv, FILE *flog=0);  Main constructor. ;  ;  ~TProofServ () override;  Cleanup. ;  ; virtual void DisableTimeout ();  ; virtual void EnableTimeout ();  ; void FlushLogFile ();  Reposition the read pointer in the log file to the very end. ;  ; TObject * Get (const char *namecycle);  Get object with name ""name;cycle"" (e.g. ;  ; Int_t GetActSessions () const;  ; const char * GetCacheDir () const;  ; TProofLockPath * GetCacheLock ();  ; const char * GetConfDir () const;  ; const char * GetConfFile () const;  ; Float_t GetCpuTime () const;  ; const char * GetDataDir () const;  ; const char * GetDataDirOpts () const;  ; Float_t GetEffSessions () const;  ; TList * GetEnabledPackages () const;  ; const char * GetGroup () const;  ; Int_t GetGroupId () const;  ; Int_t GetGroupSize () const;  ; const char * GetImage () const;  ; Int_t GetLogLevel () const;  ; Long64_t GetMsgSizeHWM () const;  ; TDSetElement * GetNextPacket (Long64_t totalEntries=-1);  Get next range of ",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:5096,Modifiability,inherit,inherited,5096,";  ; void Reset (const char *dir);  Reset PROOF environment to be ready for execution of next command. ;  ; void RestartComputeTime ();  Reset the compute time. ;  ; void Run (Bool_t retrn=kFALSE) override;  Main server eventloop. ;  ; void SendAsynMessage (const char *msg, Bool_t lf=kTRUE);  Send an asychronous message to the master / client . ;  ; virtual void SendLogFile (Int_t status=0, Int_t start=-1, Int_t end=-1);  Send log file to master. ;  ; void SendParallel (Bool_t async=kFALSE);  Send number of parallel nodes to master or client. ;  ; void SendStatistics ();  Send statistics of slave server to master or client. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void TruncateLogFile ();  Truncate the log file to the 80% of the required max size if this is set. ;  ; Int_t UpdateSessionStatus (Int_t xst=-1);  Update the session status in the relevant file. ;  ;  Public Member Functions inherited from TApplication;  TApplication (const char *appClassName, Int_t *argc, char **argv, void *options=nullptr, Int_t numOptions=0);  Create an application environment. ;  ; virtual ~TApplication ();  TApplication dtor. ;  ; virtual const char * ApplicationName () const;  ; Int_t Argc () const;  ; char ** Argv () const;  ; char * Argv (Int_t index) const;  Return specified argument. ;  ; void ClearInputFiles ();  Clear list containing macro files passed as program arguments. ;  ; EExitOnException ExitOnException (EExitOnException opt=kExit);  Set the exit on exception option. ;  ; virtual TApplicationImp * GetApplicationImp ();  ; TApplication * GetAppRemote () const;  ; const char * GetIdleCommand () const;  ; TString GetSetup ();  It gets the ROOT installation setup as TString. ;  ; TSignalHandler * GetSignalHandler () const;  ; virtual void HandleIdleTimer ();  Handle idle timeout. ;  ; virtual Bool_t HandleTermInput ();  ; virtual void Hide ();  ; virtual void Iconify ();  ; virtual void Init ();  ; void InitializeGraphics (Bool_t only_web=kFALS",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:8592,Modifiability,inherit,inherited,8592," or an interpreter command starting with a ""."". ;  ; Bool_t QuitOpt () const;  ; virtual void Raise ();  ; virtual void RemoveIdleTimer ();  Remove idle timer. Normally called via TROOT::Idle(0). ;  ; Bool_t ReturnFromRun () const;  ; virtual void ReturnPressed (char *text);  Emit signal when return key was pressed. ;  ; virtual void SetEchoMode (Bool_t mode);  Set console echo mode: ;  ; virtual void SetIdleTimer (UInt_t idleTimeInSec, const char *command);  Set the command to be executed after the system has been idle for idleTimeInSec seconds. ;  ; void SetReturnFromRun (Bool_t ret);  ; virtual void Show ();  ; virtual void StartIdleing ();  Called when system starts idleing. ;  ; virtual void StopIdleing ();  Called when system stops idleing. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Int_t TabCompletionHook (char *buf, int *pLoc, std::ostream &out);  What to do when tab is pressed. ;  ; const char * WorkingDirectory () const;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Comp",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:9989,Modifiability,inherit,inheritance,9989,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:12200,Modifiability,inherit,inherits,12200,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality th",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:12317,Modifiability,inherit,inherits,12317,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden t",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:15915,Modifiability,inherit,inherited,15915," SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const char *signal, const T &arg);  Activate signal with single paramet",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:18077,Modifiability,inherit,inherited,18077,"const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TProofServ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void ErrorHandler (Int_t level, Bool_t abort, const char *location, const char *msg);  The PROOF error handler function. ;  ; static void FilterLocalroot (TString &path, const char *url=""root://dum/"");  If 'path' is local and 'dsrv' is Xrootd, apply 'path.Localroot' settings, if any. ;  ; static TMap * GetDataSetNodeMap (TFileCollection *fc, TString &emsg);  Get a map {server-name, list-of-files} for collection 'fc' to be used in TPacketizerFile. ;  ; static void GetLocalServer (TString &dsrv);  Extract LOCALDATASERVER info in 'dsrv'. ;  ; static Float_t GetMemHWM ();  MemHWM getter. ;  ; static Float_t GetMemStop ();  MemStop getter. ;  ; static Long_t GetResMemMax ();  ResMemMax getter. ;  ; static Long_t GetVirtMemMax ();  VirtMemMax getter. ;  ; static Bool_t IsActive ();  Static function that returns kTRUE in case we are a PROOF server. ; ",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:19906,Modifiability,inherit,inherited,19906,"Max getter. ;  ; static Bool_t IsActive ();  Static function that returns kTRUE in case we are a PROOF server. ;  ; static Int_t RegisterDataSets (TList *in, TList *out, TDataSetManager *dsm, TString &e);  Register TFileCollections in 'out' as datasets according to the rules in 'in'. ;  ; static void ResolveKeywords (TString &fname, const char *path=0);  Replace <ord>, <user>, <u>, <group>, <stag>, <qnum>, <file>, <rver> and <build> placeholders in fname. ;  ; static FILE * SetErrorHandlerFile (FILE *ferr);  Set the file stream where to log (default stderr). ;  ; static void SetLastEntry (Long64_t lastentry);  Set the last entry before exception. ;  ; static void SetLastMsg (const char *lastmsg);  Set the message to be sent back in case of exceptions. ;  ; static TProofServ * This ();  Static function returning pointer to global object gProofServ. ;  ;  Static Public Member Functions inherited from TApplication; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void CreateApplication ();  Static function used to create a default application environment. ;  ; static const char * DeclFileName ();  ; static Longptr_t ExecuteFile (const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE);  Execute a file containing a C++ macro (static method). ;  ; static TList * GetApplications ();  Static method returning the list of available applications. ;  ; static void NeedGraphicsLibs ();  Static method. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObject",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:20535,Modifiability,inherit,inherited,20535,"ast entry before exception. ;  ; static void SetLastMsg (const char *lastmsg);  Set the message to be sent back in case of exceptions. ;  ; static TProofServ * This ();  Static function returning pointer to global object gProofServ. ;  ;  Static Public Member Functions inherited from TApplication; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void CreateApplication ();  Static function used to create a default application environment. ;  ; static const char * DeclFileName ();  ; static Longptr_t ExecuteFile (const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE);  Execute a file containing a C++ macro (static method). ;  ; static TList * GetApplications ();  Static method returning the list of available applications. ;  ; static void NeedGraphicsLibs ();  Static method. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t C",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:21053,Modifiability,inherit,inherited,21053,"tatic function used to create a default application environment. ;  ; static const char * DeclFileName ();  ; static Longptr_t ExecuteFile (const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE);  Execute a file containing a C++ macro (static method). ;  ; static TList * GetApplications ();  Static method returning the list of available applications. ;  ; static void NeedGraphicsLibs ();  Static method. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullpt",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:22546,Modifiability,inherit,inherited,22546,");  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Private Member Functions; Int_t Setup () override;  Print the ProofServ logo on standard output. ;  ; Int_t SetupOnFork (const char *ord);  Finalize the server setup afetr forking. ;  . Private Attributes; TProofServLiteInterruptHandler * fInterruptHandler;  ; TString fSockPath;  ; Bool_t fTerminated;  . Additional Inherited Members;  Public Types inherited from TProofServ; enum  EQueryAction { kQueryOK; , kQueryModify; , kQueryStop; , kQueryEnqueued; };  ; enum  EStatusBits { kHighMemory = (1ULL << ( 17 )); };  ;  Public Types inherited from TApplication; enum  EExitOnException { kDontExit; , kExit; , kAbort; };  ; enum  EFileBits { kExpression = (1ULL << ( 14 )); };  ; enum  EStatusBits { kProcessRemotely = (1ULL << ( 15 )); , kDefaultApplication = (1ULL << ( 16 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TProofServ; virtual void DeletePlayer ();  Delete player instance. ;  ; virtual Int",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:22730,Modifiability,inherit,inherited,22730,");  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Private Member Functions; Int_t Setup () override;  Print the ProofServ logo on standard output. ;  ; Int_t SetupOnFork (const char *ord);  Finalize the server setup afetr forking. ;  . Private Attributes; TProofServLiteInterruptHandler * fInterruptHandler;  ; TString fSockPath;  ; Bool_t fTerminated;  . Additional Inherited Members;  Public Types inherited from TProofServ; enum  EQueryAction { kQueryOK; , kQueryModify; , kQueryStop; , kQueryEnqueued; };  ; enum  EStatusBits { kHighMemory = (1ULL << ( 17 )); };  ;  Public Types inherited from TApplication; enum  EExitOnException { kDontExit; , kExit; , kAbort; };  ; enum  EFileBits { kExpression = (1ULL << ( 14 )); };  ; enum  EStatusBits { kProcessRemotely = (1ULL << ( 15 )); , kDefaultApplication = (1ULL << ( 16 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TProofServ; virtual void DeletePlayer ();  Delete player instance. ;  ; virtual Int",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:22995,Modifiability,inherit,inherited,22995,");  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Private Member Functions; Int_t Setup () override;  Print the ProofServ logo on standard output. ;  ; Int_t SetupOnFork (const char *ord);  Finalize the server setup afetr forking. ;  . Private Attributes; TProofServLiteInterruptHandler * fInterruptHandler;  ; TString fSockPath;  ; Bool_t fTerminated;  . Additional Inherited Members;  Public Types inherited from TProofServ; enum  EQueryAction { kQueryOK; , kQueryModify; , kQueryStop; , kQueryEnqueued; };  ; enum  EStatusBits { kHighMemory = (1ULL << ( 17 )); };  ;  Public Types inherited from TApplication; enum  EExitOnException { kDontExit; , kExit; , kAbort; };  ; enum  EFileBits { kExpression = (1ULL << ( 14 )); };  ; enum  EStatusBits { kProcessRemotely = (1ULL << ( 15 )); , kDefaultApplication = (1ULL << ( 16 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TProofServ; virtual void DeletePlayer ();  Delete player instance. ;  ; virtual Int",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:23636,Modifiability,inherit,inherited,23636,";  Public Types inherited from TApplication; enum  EExitOnException { kDontExit; , kExit; , kAbort; };  ; enum  EFileBits { kExpression = (1ULL << ( 14 )); };  ; enum  EStatusBits { kProcessRemotely = (1ULL << ( 15 )); , kDefaultApplication = (1ULL << ( 16 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TProofServ; virtual void DeletePlayer ();  Delete player instance. ;  ; virtual Int_t Fork ();  Fork a child. ;  ; Int_t GetSessionStatus ();  Return the status of this session: 0 idle 1 running 2 being terminated (currently unused) 3 queued 4 idle timed-out (not set in here but in TIdleTOTimer::Notify) This is typically run in the reader thread, so access needs to be protected. ;  ; virtual void HandleArchive (TMessage *mess, TString *slb=0);  Handle archive request. ;  ; virtual Int_t HandleCache (TMessage *mess, TString *slb=0);  Handle here all cache and package requests. ;  ; virtual void HandleCheckFile (TMessage *mess, TString *slb=0);  Handle file checking request. ;  ; virtual Int_t HandleDataSets (TMessage *mess, TString *slb=0);  Handle here requests about datasets. ;  ; virtual Int_t HandleLibIncPath (TMessage *mess);  Handle lib, inc search paths modification request. ;  ; virtual void HandleProcess (TMessage *mess, TString *slb=0);  Han",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:23735,Modifiability,inherit,inherited,23735,";  Public Types inherited from TApplication; enum  EExitOnException { kDontExit; , kExit; , kAbort; };  ; enum  EFileBits { kExpression = (1ULL << ( 14 )); };  ; enum  EStatusBits { kProcessRemotely = (1ULL << ( 15 )); , kDefaultApplication = (1ULL << ( 16 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TProofServ; virtual void DeletePlayer ();  Delete player instance. ;  ; virtual Int_t Fork ();  Fork a child. ;  ; Int_t GetSessionStatus ();  Return the status of this session: 0 idle 1 running 2 being terminated (currently unused) 3 queued 4 idle timed-out (not set in here but in TIdleTOTimer::Notify) This is typically run in the reader thread, so access needs to be protected. ;  ; virtual void HandleArchive (TMessage *mess, TString *slb=0);  Handle archive request. ;  ; virtual Int_t HandleCache (TMessage *mess, TString *slb=0);  Handle here all cache and package requests. ;  ; virtual void HandleCheckFile (TMessage *mess, TString *slb=0);  Handle file checking request. ;  ; virtual Int_t HandleDataSets (TMessage *mess, TString *slb=0);  Handle here requests about datasets. ;  ; virtual Int_t HandleLibIncPath (TMessage *mess);  Handle lib, inc search paths modification request. ;  ; virtual void HandleProcess (TMessage *mess, TString *slb=0);  Han",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:25703,Modifiability,inherit,inherited,25703,"e processing request. ;  ; virtual void HandleQueryList (TMessage *mess);  Handle request for list of queries. ;  ; virtual void HandleRemove (TMessage *mess, TString *slb=0);  Handle remove request. ;  ; virtual void HandleRetrieve (TMessage *mess, TString *slb=0);  Handle retrieve request. ;  ; virtual void HandleSubmerger (TMessage *mess);  Handle a message of type kPROOF_SUBMERGER. ;  ; virtual Int_t HandleWorkerLists (TMessage *mess);  Handle here all requests to modify worker lists. ;  ; Bool_t IsIdle ();  Return the idle status. ;  ; virtual void MakePlayer ();  Make player instance. ;  ; virtual void ProcessNext (TString *slb=0);  process the next query from the queue of submitted jobs. ;  ; Int_t SetupCommon ();  Common part (between TProofServ and TXProofServ) of the setup phase. ;  ; Bool_t UnlinkDataDir (const char *path);  Scan recursively the datadir and unlink it if empty Return kTRUE if it can be unlinked, kFALSE otherwise. ;  ;  Protected Member Functions inherited from TApplication;  TApplication ();  Default ctor. Can be used by classes deriving from TApplication. ;  ; virtual void Forum (const char *line);  The function ("".forum <type>"") submits a new post on the ROOT forum via web browser. ;  ; virtual void GitHub (const char *line);  The function ("".gh <type>"") submits a new issue on GitHub via web browser. ;  ; virtual void Help (const char *line);  The function lists useful commands ("".help"") or opens the online reference guide, generated with Doxygen ("".help scope"" or "".help scope::member""). ;  ; virtual void LoadGraphicsLibs ();  Load shared libs necessary for graphics. ;  ; virtual void MakeBatch ();  Switch to batch mode. ;  ; virtual Longptr_t ProcessRemote (const char *line, Int_t *error=nullptr);  Process the content of a line starting with "".R"" (already stripped-off) The format is. ;  ; void SetSignalHandler (TSignalHandler *sh);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *locatio",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:26641,Modifiability,inherit,inherited,26641,"rotected Member Functions inherited from TApplication;  TApplication ();  Default ctor. Can be used by classes deriving from TApplication. ;  ; virtual void Forum (const char *line);  The function ("".forum <type>"") submits a new post on the ROOT forum via web browser. ;  ; virtual void GitHub (const char *line);  The function ("".gh <type>"") submits a new issue on GitHub via web browser. ;  ; virtual void Help (const char *line);  The function lists useful commands ("".help"") or opens the online reference guide, generated with Doxygen ("".help scope"" or "".help scope::member""). ;  ; virtual void LoadGraphicsLibs ();  Load shared libs necessary for graphics. ;  ; virtual void MakeBatch ();  Switch to batch mode. ;  ; virtual Longptr_t ProcessRemote (const char *line, Int_t *error=nullptr);  Process the content of a line starting with "".R"" (already stripped-off) The format is. ;  ; void SetSignalHandler (TSignalHandler *sh);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TApplication; static void Close (TApplication *app);  Static function used to close a remote application. ;  ; static TApplication * Open (const char *url, Int_t debug, const char *script);  Static function used to attach to an existing remote application or to start one. ;  ; static Int_t ParseRemoteLine (const char *ln, TString &hostdir, TString &user, Int_t &dbg, TString &script);  Parse the content of a line starting with "".R"" (already stripped-off) The format is. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *s",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:26852,Modifiability,inherit,inherited,26852,"al void GitHub (const char *line);  The function ("".gh <type>"") submits a new issue on GitHub via web browser. ;  ; virtual void Help (const char *line);  The function lists useful commands ("".help"") or opens the online reference guide, generated with Doxygen ("".help scope"" or "".help scope::member""). ;  ; virtual void LoadGraphicsLibs ();  Load shared libs necessary for graphics. ;  ; virtual void MakeBatch ();  Switch to batch mode. ;  ; virtual Longptr_t ProcessRemote (const char *line, Int_t *error=nullptr);  Process the content of a line starting with "".R"" (already stripped-off) The format is. ;  ; void SetSignalHandler (TSignalHandler *sh);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TApplication; static void Close (TApplication *app);  Static function used to close a remote application. ;  ; static TApplication * Open (const char *url, Int_t debug, const char *script);  Static function used to attach to an existing remote application or to start one. ;  ; static Int_t ParseRemoteLine (const char *ln, TString &hostdir, TString &user, Int_t &dbg, TString &script);  Parse the content of a line starting with "".R"" (already stripped-off) The format is. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t Connect",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:26997,Modifiability,inherit,inherited,26997,"al void GitHub (const char *line);  The function ("".gh <type>"") submits a new issue on GitHub via web browser. ;  ; virtual void Help (const char *line);  The function lists useful commands ("".help"") or opens the online reference guide, generated with Doxygen ("".help scope"" or "".help scope::member""). ;  ; virtual void LoadGraphicsLibs ();  Load shared libs necessary for graphics. ;  ; virtual void MakeBatch ();  Switch to batch mode. ;  ; virtual Longptr_t ProcessRemote (const char *line, Int_t *error=nullptr);  Process the content of a line starting with "".R"" (already stripped-off) The format is. ;  ; void SetSignalHandler (TSignalHandler *sh);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TApplication; static void Close (TApplication *app);  Static function used to close a remote application. ;  ; static TApplication * Open (const char *url, Int_t debug, const char *script);  Static function used to attach to an existing remote application or to start one. ;  ; static Int_t ParseRemoteLine (const char *ln, TString &hostdir, TString &user, Int_t &dbg, TString &script);  Parse the content of a line starting with "".R"" (already stripped-off) The format is. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t Connect",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:27525,Modifiability,inherit,inherited,27525,"rotected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TApplication; static void Close (TApplication *app);  Static function used to close a remote application. ;  ; static TApplication * Open (const char *url, Int_t debug, const char *script);  Static function used to attach to an existing remote application or to start one. ;  ; static Int_t ParseRemoteLine (const char *ln, TString &hostdir, TString &user, Int_t &dbg, TString &script);  Parse the content of a line starting with "".R"" (already stripped-off) The format is. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TApplication; TApplication * fAppRemote;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connecti",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:28374,Modifiability,inherit,inherited,28374,"r *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TApplication; TApplication * fAppRemote;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TProofServ; static Long64_t fgLastEntry = -1;  ; static TString fgLastMsg;  ;  Static Protected Attributes inherited from TApplication; static TList * fgApplications = nullptr;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TProofServLite.h>. Inheritance diagram for TProofServLite:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofServLite(). TProofServLite::TProofServLite ; (; Int_t * ; argc, . char ** ; argv, . FILE * ; flog = 0 . ). Main constructor. ; Definition at line 191 of file TProofServLite.cxx. ◆ ~TProofServLite(). TProofServLite::~TProofServLite ; (; ). override . Cleanup. ; Not really necessary since after this dtor there is no live anyway. ; Definition at line 313 of file TProofServLite.cxx. Member Function Documentation. ◆ Class(). static TClass * TProofServLite::C",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:28455,Modifiability,inherit,inherited,28455,"r *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TApplication; TApplication * fAppRemote;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TProofServ; static Long64_t fgLastEntry = -1;  ; static TString fgLastMsg;  ;  Static Protected Attributes inherited from TApplication; static TList * fgApplications = nullptr;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TProofServLite.h>. Inheritance diagram for TProofServLite:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofServLite(). TProofServLite::TProofServLite ; (; Int_t * ; argc, . char ** ; argv, . FILE * ; flog = 0 . ). Main constructor. ; Definition at line 191 of file TProofServLite.cxx. ◆ ~TProofServLite(). TProofServLite::~TProofServLite ; (; ). override . Cleanup. ; Not really necessary since after this dtor there is no live anyway. ; Definition at line 313 of file TProofServLite.cxx. Member Function Documentation. ◆ Class(). static TClass * TProofServLite::C",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:28668,Modifiability,inherit,inherited,28668,"r *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TApplication; TApplication * fAppRemote;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TProofServ; static Long64_t fgLastEntry = -1;  ; static TString fgLastMsg;  ;  Static Protected Attributes inherited from TApplication; static TList * fgApplications = nullptr;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TProofServLite.h>. Inheritance diagram for TProofServLite:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofServLite(). TProofServLite::TProofServLite ; (; Int_t * ; argc, . char ** ; argv, . FILE * ; flog = 0 . ). Main constructor. ; Definition at line 191 of file TProofServLite.cxx. ◆ ~TProofServLite(). TProofServLite::~TProofServLite ; (; ). override . Cleanup. ; Not really necessary since after this dtor there is no live anyway. ; Definition at line 313 of file TProofServLite.cxx. Member Function Documentation. ◆ Class(). static TClass * TProofServLite::C",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:28790,Modifiability,inherit,inherited,28790,"r *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TApplication; TApplication * fAppRemote;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TProofServ; static Long64_t fgLastEntry = -1;  ; static TString fgLastMsg;  ;  Static Protected Attributes inherited from TApplication; static TList * fgApplications = nullptr;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TProofServLite.h>. Inheritance diagram for TProofServLite:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofServLite(). TProofServLite::TProofServLite ; (; Int_t * ; argc, . char ** ; argv, . FILE * ; flog = 0 . ). Main constructor. ; Definition at line 191 of file TProofServLite.cxx. ◆ ~TProofServLite(). TProofServLite::~TProofServLite ; (; ). override . Cleanup. ; Not really necessary since after this dtor there is no live anyway. ; Definition at line 313 of file TProofServLite.cxx. Member Function Documentation. ◆ Class(). static TClass * TProofServLite::C",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:28892,Modifiability,inherit,inherited,28892,"r *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TApplication; TApplication * fAppRemote;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TProofServ; static Long64_t fgLastEntry = -1;  ; static TString fgLastMsg;  ;  Static Protected Attributes inherited from TApplication; static TList * fgApplications = nullptr;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TProofServLite.h>. Inheritance diagram for TProofServLite:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofServLite(). TProofServLite::TProofServLite ; (; Int_t * ; argc, . char ** ; argv, . FILE * ; flog = 0 . ). Main constructor. ; Definition at line 191 of file TProofServLite.cxx. ◆ ~TProofServLite(). TProofServLite::~TProofServLite ; (; ). override . Cleanup. ; Not really necessary since after this dtor there is no live anyway. ; Definition at line 313 of file TProofServLite.cxx. Member Function Documentation. ◆ Class(). static TClass * TProofServLite::C",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:500,Performance,optimiz,optimizing,500,". ROOT: TProofServLite Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TProofServLite Class ReferencePROOF » PROOF kernel Libraries. ; Version of the PROOF worker server for local running. ; The client starts directly the desired number of these workers; the master and daemons are eliminated, optimizing the number of messages exchanged and created / destroyed. ; Definition at line 30 of file TProofServLite.h. Public Member Functions;  TProofServLite (Int_t *argc, char **argv, FILE *flog=0);  Main constructor. ;  ;  ~TProofServLite () override;  Cleanup. ;  ; Int_t CreateServer () override;  Finalize the server setup. ;  ; void HandleFork (TMessage *mess) override;  Cloning itself via fork. ;  ; void HandleSigPipe () override;  Called when the client is not alive anymore; terminate the session. ;  ; void HandleTermination () override;  Called when the client is not alive anymore; terminate the session. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Terminate (Int_t status) override;  Terminate the proof server. ;  ;  Public Member Functions inherited from TProofServ;  TProofServ (Int_t *argc, char **argv, FILE *flog=0);  Main constructor. ;  ;  ~TProofServ () override;  Cleanup. ;  ; virtual void DisableTimeout ();  ; virtual void EnableTimeout ();  ; void FlushLogFile ();  Reposition the read pointer in the log file to the very end. ;  ; TObject * Get (const char *namecycle);  Get object with name ""name;cycle"" (e.g. ;  ; Int_t GetActSessions () const;  ; const char * GetCacheDir () const;  ; TProofLockPath * GetCacheLock ();  ; const char * GetConfDir () const;  ; const char * GetConfFile () const;  ; Float_t GetCpuTime () cons",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:7024,Performance,load,loads,7024,"timeout. ;  ; virtual Bool_t HandleTermInput ();  ; virtual void Hide ();  ; virtual void Iconify ();  ; virtual void Init ();  ; void InitializeGraphics (Bool_t only_web=kFALSE);  Initialize the graphics environment. ;  ; TObjArray * InputFiles () const;  ; virtual Bool_t IsCmdThread ();  ; Bool_t IsRunning () const;  ; virtual void KeyPressed (Int_t key);  Emit signal when console keyboard key was pressed. ;  ; virtual void LineProcessed (const char *line);  Emit signal when a line has been processed. ;  ; virtual void Lower ();  ; void ls (Option_t *option="""") const override;  Show available sessions. ;  ; Bool_t NoLogoOpt () const;  ; Bool_t NoLogOpt () const;  ; virtual void Open ();  ; void OpenForumTopic (const TString &type);  It opens a Forum topic in a web browser with prefilled ROOT version. ;  ; void OpenGitHubIssue (const TString &type);  It opens a GitHub issue in a web browser with prefilled ROOT version. ;  ; void OpenInBrowser (const TString &url);  The function generates and executes a command that loads the Doxygen URL in a browser. ;  ; void OpenReferenceGuideFor (const TString &strippedClass);  It opens the online reference guide, generated with Doxygen, for the chosen scope (class/namespace/struct) or member (method/function/ data member/enumeration/enumerator. ;  ; virtual Longptr_t ProcessFile (const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE);  Process a file containing a C++ macro. ;  ; virtual Longptr_t ProcessLine (const char *line, Bool_t sync=kFALSE, Int_t *error=nullptr);  Process a single command line, either a C++ statement or an interpreter command starting with a ""."". ;  ; Bool_t QuitOpt () const;  ; virtual void Raise ();  ; virtual void RemoveIdleTimer ();  Remove idle timer. Normally called via TROOT::Idle(0). ;  ; Bool_t ReturnFromRun () const;  ; virtual void ReturnPressed (char *text);  Emit signal when return key was pressed. ;  ; virtual void SetEchoMode (Bool_t mode);  Set console echo mode: ;  ; virtual void Set",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:23985,Performance,queue,queued,23985,"inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TProofServ; virtual void DeletePlayer ();  Delete player instance. ;  ; virtual Int_t Fork ();  Fork a child. ;  ; Int_t GetSessionStatus ();  Return the status of this session: 0 idle 1 running 2 being terminated (currently unused) 3 queued 4 idle timed-out (not set in here but in TIdleTOTimer::Notify) This is typically run in the reader thread, so access needs to be protected. ;  ; virtual void HandleArchive (TMessage *mess, TString *slb=0);  Handle archive request. ;  ; virtual Int_t HandleCache (TMessage *mess, TString *slb=0);  Handle here all cache and package requests. ;  ; virtual void HandleCheckFile (TMessage *mess, TString *slb=0);  Handle file checking request. ;  ; virtual Int_t HandleDataSets (TMessage *mess, TString *slb=0);  Handle here requests about datasets. ;  ; virtual Int_t HandleLibIncPath (TMessage *mess);  Handle lib, inc search paths modification request. ;  ; virtual void HandleProcess (TMessage *mess, TString *slb=0);  Handle processing request. ;  ; virtual void HandleQueryList (TMessage *mess);  Handle request for list of queries. ;  ; virtual void HandleRemove (TMessage *mess, TString *slb=0);  Handle remove request. ;  ; virtual void HandleRetrieve (TMessage *mess, TString *slb=0);  Handle retr",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:24305,Performance,cache,cache,24305,";  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TProofServ; virtual void DeletePlayer ();  Delete player instance. ;  ; virtual Int_t Fork ();  Fork a child. ;  ; Int_t GetSessionStatus ();  Return the status of this session: 0 idle 1 running 2 being terminated (currently unused) 3 queued 4 idle timed-out (not set in here but in TIdleTOTimer::Notify) This is typically run in the reader thread, so access needs to be protected. ;  ; virtual void HandleArchive (TMessage *mess, TString *slb=0);  Handle archive request. ;  ; virtual Int_t HandleCache (TMessage *mess, TString *slb=0);  Handle here all cache and package requests. ;  ; virtual void HandleCheckFile (TMessage *mess, TString *slb=0);  Handle file checking request. ;  ; virtual Int_t HandleDataSets (TMessage *mess, TString *slb=0);  Handle here requests about datasets. ;  ; virtual Int_t HandleLibIncPath (TMessage *mess);  Handle lib, inc search paths modification request. ;  ; virtual void HandleProcess (TMessage *mess, TString *slb=0);  Handle processing request. ;  ; virtual void HandleQueryList (TMessage *mess);  Handle request for list of queries. ;  ; virtual void HandleRemove (TMessage *mess, TString *slb=0);  Handle remove request. ;  ; virtual void HandleRetrieve (TMessage *mess, TString *slb=0);  Handle retrieve request. ;  ; virtual void HandleSubmerger (TMessage *mess);  Handle a message of type kPROOF_SUBMERGER. ;  ; virtual Int_t HandleWorkerLists (TMessage *mess);  Handle here all requests to modify worker lists. ;  ; Bool_t IsIdle ();  Return the idle status. ;  ; virtual void M",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:25395,Performance,queue,queue,25395," (TMessage *mess, TString *slb=0);  Handle file checking request. ;  ; virtual Int_t HandleDataSets (TMessage *mess, TString *slb=0);  Handle here requests about datasets. ;  ; virtual Int_t HandleLibIncPath (TMessage *mess);  Handle lib, inc search paths modification request. ;  ; virtual void HandleProcess (TMessage *mess, TString *slb=0);  Handle processing request. ;  ; virtual void HandleQueryList (TMessage *mess);  Handle request for list of queries. ;  ; virtual void HandleRemove (TMessage *mess, TString *slb=0);  Handle remove request. ;  ; virtual void HandleRetrieve (TMessage *mess, TString *slb=0);  Handle retrieve request. ;  ; virtual void HandleSubmerger (TMessage *mess);  Handle a message of type kPROOF_SUBMERGER. ;  ; virtual Int_t HandleWorkerLists (TMessage *mess);  Handle here all requests to modify worker lists. ;  ; Bool_t IsIdle ();  Return the idle status. ;  ; virtual void MakePlayer ();  Make player instance. ;  ; virtual void ProcessNext (TString *slb=0);  process the next query from the queue of submitted jobs. ;  ; Int_t SetupCommon ();  Common part (between TProofServ and TXProofServ) of the setup phase. ;  ; Bool_t UnlinkDataDir (const char *path);  Scan recursively the datadir and unlink it if empty Return kTRUE if it can be unlinked, kFALSE otherwise. ;  ;  Protected Member Functions inherited from TApplication;  TApplication ();  Default ctor. Can be used by classes deriving from TApplication. ;  ; virtual void Forum (const char *line);  The function ("".forum <type>"") submits a new post on the ROOT forum via web browser. ;  ; virtual void GitHub (const char *line);  The function ("".gh <type>"") submits a new issue on GitHub via web browser. ;  ; virtual void Help (const char *line);  The function lists useful commands ("".help"") or opens the online reference guide, generated with Doxygen ("".help scope"" or "".help scope::member""). ;  ; virtual void LoadGraphicsLibs ();  Load shared libs necessary for graphics. ;  ; virtual void MakeBatch",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:3337,Safety,recover,recover,3337,"evel () const;  ; Long64_t GetMsgSizeHWM () const;  ; TDSetElement * GetNextPacket (Long64_t totalEntries=-1);  Get next range of entries to be processed on this server. ;  ; void GetOptions (Int_t *argc, char **argv) override;  Get and handle command line options. ;  ; const char * GetOrdinal () const;  ; TPackMgr * GetPackMgr () const;  ; const char * GetPrefix () const;  ; TProof * GetProof () const;  ; Int_t GetProtocol () const;  ; Int_t GetQuerySeqNum () const;  ; Float_t GetRealTime () const;  ; const char * GetService () const;  ; const char * GetSessionDir () const;  ; const char * GetSessionTag () const;  ; TSocket * GetSocket () const;  ; const char * GetTopSessionTag () const;  ; Int_t GetTotSessions () const;  ; const char * GetUser () const;  ; const char * GetWorkDir () const;  ; virtual EQueryAction GetWorkers (TList *workers, Int_t &prioritychange, Bool_t resume=kFALSE);  Get list of workers to be used from now on. ;  ; void HandleException (Int_t sig) override;  Exception handler: we do not try to recover here, just exit. ;  ; virtual void HandleSocketInput ();  Handle input coming from the client or from the master server. ;  ; virtual Int_t HandleSocketInput (TMessage *mess, Bool_t all);  Process input coming from the client or from the master server. ;  ; virtual void HandleUrgentData ();  Handle Out-Of-Band data sent by the master or client. ;  ; void Interrupt ();  ; Bool_t IsEndMaster () const;  ; Bool_t IsMaster () const;  ; Bool_t IsParallel () const;  True if in parallel mode. ;  ; Bool_t IsTopMaster () const;  ; void LogToMaster (Bool_t on=kTRUE);  ; void Print (Option_t *option="""") const override;  Print status of slave server. ;  ; Int_t ReceiveFile (const char *file, Bool_t bin, Long64_t size);  Receive a file, either sent by a client or a master server. ;  ; virtual void ReleaseWorker (const char *);  ; void Reset (const char *dir);  Reset PROOF environment to be ready for execution of next command. ;  ; void RestartComputeTime ();  R",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:5992,Safety,timeout,timeout,5992,"ax size if this is set. ;  ; Int_t UpdateSessionStatus (Int_t xst=-1);  Update the session status in the relevant file. ;  ;  Public Member Functions inherited from TApplication;  TApplication (const char *appClassName, Int_t *argc, char **argv, void *options=nullptr, Int_t numOptions=0);  Create an application environment. ;  ; virtual ~TApplication ();  TApplication dtor. ;  ; virtual const char * ApplicationName () const;  ; Int_t Argc () const;  ; char ** Argv () const;  ; char * Argv (Int_t index) const;  Return specified argument. ;  ; void ClearInputFiles ();  Clear list containing macro files passed as program arguments. ;  ; EExitOnException ExitOnException (EExitOnException opt=kExit);  Set the exit on exception option. ;  ; virtual TApplicationImp * GetApplicationImp ();  ; TApplication * GetAppRemote () const;  ; const char * GetIdleCommand () const;  ; TString GetSetup ();  It gets the ROOT installation setup as TString. ;  ; TSignalHandler * GetSignalHandler () const;  ; virtual void HandleIdleTimer ();  Handle idle timeout. ;  ; virtual Bool_t HandleTermInput ();  ; virtual void Hide ();  ; virtual void Iconify ();  ; virtual void Init ();  ; void InitializeGraphics (Bool_t only_web=kFALSE);  Initialize the graphics environment. ;  ; TObjArray * InputFiles () const;  ; virtual Bool_t IsCmdThread ();  ; Bool_t IsRunning () const;  ; virtual void KeyPressed (Int_t key);  Emit signal when console keyboard key was pressed. ;  ; virtual void LineProcessed (const char *line);  Emit signal when a line has been processed. ;  ; virtual void Lower ();  ; void ls (Option_t *option="""") const override;  Show available sessions. ;  ; Bool_t NoLogoOpt () const;  ; Bool_t NoLogOpt () const;  ; virtual void Open ();  ; void OpenForumTopic (const TString &type);  It opens a Forum topic in a web browser with prefilled ROOT version. ;  ; void OpenGitHubIssue (const TString &type);  It opens a GitHub issue in a web browser with prefilled ROOT version. ;  ; void OpenInBrows",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:18305,Safety,abort,abort,18305,"const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TProofServ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void ErrorHandler (Int_t level, Bool_t abort, const char *location, const char *msg);  The PROOF error handler function. ;  ; static void FilterLocalroot (TString &path, const char *url=""root://dum/"");  If 'path' is local and 'dsrv' is Xrootd, apply 'path.Localroot' settings, if any. ;  ; static TMap * GetDataSetNodeMap (TFileCollection *fc, TString &emsg);  Get a map {server-name, list-of-files} for collection 'fc' to be used in TPacketizerFile. ;  ; static void GetLocalServer (TString &dsrv);  Extract LOCALDATASERVER info in 'dsrv'. ;  ; static Float_t GetMemHWM ();  MemHWM getter. ;  ; static Float_t GetMemStop ();  MemStop getter. ;  ; static Long_t GetResMemMax ();  ResMemMax getter. ;  ; static Long_t GetVirtMemMax ();  VirtMemMax getter. ;  ; static Bool_t IsActive ();  Static function that returns kTRUE in case we are a PROOF server. ; ",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:11831,Security,hash,hash,11831," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:24102,Security,access,access,24102,"inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TProofServ; virtual void DeletePlayer ();  Delete player instance. ;  ; virtual Int_t Fork ();  Fork a child. ;  ; Int_t GetSessionStatus ();  Return the status of this session: 0 idle 1 running 2 being terminated (currently unused) 3 queued 4 idle timed-out (not set in here but in TIdleTOTimer::Notify) This is typically run in the reader thread, so access needs to be protected. ;  ; virtual void HandleArchive (TMessage *mess, TString *slb=0);  Handle archive request. ;  ; virtual Int_t HandleCache (TMessage *mess, TString *slb=0);  Handle here all cache and package requests. ;  ; virtual void HandleCheckFile (TMessage *mess, TString *slb=0);  Handle file checking request. ;  ; virtual Int_t HandleDataSets (TMessage *mess, TString *slb=0);  Handle here requests about datasets. ;  ; virtual Int_t HandleLibIncPath (TMessage *mess);  Handle lib, inc search paths modification request. ;  ; virtual void HandleProcess (TMessage *mess, TString *slb=0);  Handle processing request. ;  ; virtual void HandleQueryList (TMessage *mess);  Handle request for list of queries. ;  ; virtual void HandleRemove (TMessage *mess, TString *slb=0);  Handle remove request. ;  ; virtual void HandleRetrieve (TMessage *mess, TString *slb=0);  Handle retr",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:1675,Testability,log,log,1675,"blic Member Functions;  TProofServLite (Int_t *argc, char **argv, FILE *flog=0);  Main constructor. ;  ;  ~TProofServLite () override;  Cleanup. ;  ; Int_t CreateServer () override;  Finalize the server setup. ;  ; void HandleFork (TMessage *mess) override;  Cloning itself via fork. ;  ; void HandleSigPipe () override;  Called when the client is not alive anymore; terminate the session. ;  ; void HandleTermination () override;  Called when the client is not alive anymore; terminate the session. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Terminate (Int_t status) override;  Terminate the proof server. ;  ;  Public Member Functions inherited from TProofServ;  TProofServ (Int_t *argc, char **argv, FILE *flog=0);  Main constructor. ;  ;  ~TProofServ () override;  Cleanup. ;  ; virtual void DisableTimeout ();  ; virtual void EnableTimeout ();  ; void FlushLogFile ();  Reposition the read pointer in the log file to the very end. ;  ; TObject * Get (const char *namecycle);  Get object with name ""name;cycle"" (e.g. ;  ; Int_t GetActSessions () const;  ; const char * GetCacheDir () const;  ; TProofLockPath * GetCacheLock ();  ; const char * GetConfDir () const;  ; const char * GetConfFile () const;  ; Float_t GetCpuTime () const;  ; const char * GetDataDir () const;  ; const char * GetDataDirOpts () const;  ; Float_t GetEffSessions () const;  ; TList * GetEnabledPackages () const;  ; const char * GetGroup () const;  ; Int_t GetGroupId () const;  ; Int_t GetGroupSize () const;  ; const char * GetImage () const;  ; Int_t GetLogLevel () const;  ; Long64_t GetMsgSizeHWM () const;  ; TDSetElement * GetNextPacket (Long64_t totalEntries=-1);  Get next range of entries to be processed on this server. ;  ; void GetOptions (Int_t *argc, char **argv) override;  Get and handle command line options. ;  ; const char * GetOrdinal () const;  ; TPackMg",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:4599,Testability,log,log,4599,"ient or from the master server. ;  ; virtual void HandleUrgentData ();  Handle Out-Of-Band data sent by the master or client. ;  ; void Interrupt ();  ; Bool_t IsEndMaster () const;  ; Bool_t IsMaster () const;  ; Bool_t IsParallel () const;  True if in parallel mode. ;  ; Bool_t IsTopMaster () const;  ; void LogToMaster (Bool_t on=kTRUE);  ; void Print (Option_t *option="""") const override;  Print status of slave server. ;  ; Int_t ReceiveFile (const char *file, Bool_t bin, Long64_t size);  Receive a file, either sent by a client or a master server. ;  ; virtual void ReleaseWorker (const char *);  ; void Reset (const char *dir);  Reset PROOF environment to be ready for execution of next command. ;  ; void RestartComputeTime ();  Reset the compute time. ;  ; void Run (Bool_t retrn=kFALSE) override;  Main server eventloop. ;  ; void SendAsynMessage (const char *msg, Bool_t lf=kTRUE);  Send an asychronous message to the master / client . ;  ; virtual void SendLogFile (Int_t status=0, Int_t start=-1, Int_t end=-1);  Send log file to master. ;  ; void SendParallel (Bool_t async=kFALSE);  Send number of parallel nodes to master or client. ;  ; void SendStatistics ();  Send statistics of slave server to master or client. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void TruncateLogFile ();  Truncate the log file to the 80% of the required max size if this is set. ;  ; Int_t UpdateSessionStatus (Int_t xst=-1);  Update the session status in the relevant file. ;  ;  Public Member Functions inherited from TApplication;  TApplication (const char *appClassName, Int_t *argc, char **argv, void *options=nullptr, Int_t numOptions=0);  Create an application environment. ;  ; virtual ~TApplication ();  TApplication dtor. ;  ; virtual const char * ApplicationName () const;  ; Int_t Argc () const;  ; char ** Argv () const;  ; char * Argv (Int_t index) const;  Return specified argument. ;  ; void ClearInputFiles ();  Clear list containing macro files passed as pr",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:4909,Testability,log,log,4909,"ster (Bool_t on=kTRUE);  ; void Print (Option_t *option="""") const override;  Print status of slave server. ;  ; Int_t ReceiveFile (const char *file, Bool_t bin, Long64_t size);  Receive a file, either sent by a client or a master server. ;  ; virtual void ReleaseWorker (const char *);  ; void Reset (const char *dir);  Reset PROOF environment to be ready for execution of next command. ;  ; void RestartComputeTime ();  Reset the compute time. ;  ; void Run (Bool_t retrn=kFALSE) override;  Main server eventloop. ;  ; void SendAsynMessage (const char *msg, Bool_t lf=kTRUE);  Send an asychronous message to the master / client . ;  ; virtual void SendLogFile (Int_t status=0, Int_t start=-1, Int_t end=-1);  Send log file to master. ;  ; void SendParallel (Bool_t async=kFALSE);  Send number of parallel nodes to master or client. ;  ; void SendStatistics ();  Send statistics of slave server to master or client. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void TruncateLogFile ();  Truncate the log file to the 80% of the required max size if this is set. ;  ; Int_t UpdateSessionStatus (Int_t xst=-1);  Update the session status in the relevant file. ;  ;  Public Member Functions inherited from TApplication;  TApplication (const char *appClassName, Int_t *argc, char **argv, void *options=nullptr, Int_t numOptions=0);  Create an application environment. ;  ; virtual ~TApplication ();  TApplication dtor. ;  ; virtual const char * ApplicationName () const;  ; Int_t Argc () const;  ; char ** Argv () const;  ; char * Argv (Int_t index) const;  Return specified argument. ;  ; void ClearInputFiles ();  Clear list containing macro files passed as program arguments. ;  ; EExitOnException ExitOnException (EExitOnException opt=kExit);  Set the exit on exception option. ;  ; virtual TApplicationImp * GetApplicationImp ();  ; TApplication * GetAppRemote () const;  ; const char * GetIdleCommand () const;  ; TString GetSetup ();  It gets the ROOT installation setup as",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:19552,Testability,log,log,19552,"h.Localroot' settings, if any. ;  ; static TMap * GetDataSetNodeMap (TFileCollection *fc, TString &emsg);  Get a map {server-name, list-of-files} for collection 'fc' to be used in TPacketizerFile. ;  ; static void GetLocalServer (TString &dsrv);  Extract LOCALDATASERVER info in 'dsrv'. ;  ; static Float_t GetMemHWM ();  MemHWM getter. ;  ; static Float_t GetMemStop ();  MemStop getter. ;  ; static Long_t GetResMemMax ();  ResMemMax getter. ;  ; static Long_t GetVirtMemMax ();  VirtMemMax getter. ;  ; static Bool_t IsActive ();  Static function that returns kTRUE in case we are a PROOF server. ;  ; static Int_t RegisterDataSets (TList *in, TList *out, TDataSetManager *dsm, TString &e);  Register TFileCollections in 'out' as datasets according to the rules in 'in'. ;  ; static void ResolveKeywords (TString &fname, const char *path=0);  Replace <ord>, <user>, <u>, <group>, <stag>, <qnum>, <file>, <rver> and <build> placeholders in fname. ;  ; static FILE * SetErrorHandlerFile (FILE *ferr);  Set the file stream where to log (default stderr). ;  ; static void SetLastEntry (Long64_t lastentry);  Set the last entry before exception. ;  ; static void SetLastMsg (const char *lastmsg);  Set the message to be sent back in case of exceptions. ;  ; static TProofServ * This ();  Static function returning pointer to global object gProofServ. ;  ;  Static Public Member Functions inherited from TApplication; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void CreateApplication ();  Static function used to create a default application environment. ;  ; static const char * DeclFileName ();  ; static Longptr_t ExecuteFile (const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE);  Execute a file containing a C++ macro (static method). ;  ; static TList * GetApplications ();  Static method returning the list of available applications. ;  ; static void NeedGraphicsLibs ();  Static method. ;  ;  Static Public Mem",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:22268,Testability,log,logo,22268,"s the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Private Member Functions; Int_t Setup () override;  Print the ProofServ logo on standard output. ;  ; Int_t SetupOnFork (const char *ord);  Finalize the server setup afetr forking. ;  . Private Attributes; TProofServLiteInterruptHandler * fInterruptHandler;  ; TString fSockPath;  ; Bool_t fTerminated;  . Additional Inherited Members;  Public Types inherited from TProofServ; enum  EQueryAction { kQueryOK; , kQueryModify; , kQueryStop; , kQueryEnqueued; };  ; enum  EStatusBits { kHighMemory = (1ULL << ( 17 )); };  ;  Public Types inherited from TApplication; enum  EExitOnException { kDontExit; , kExit; , kAbort; };  ; enum  EFileBits { kExpression = (1ULL << ( 14 )); };  ; enum  EStatusBits { kProcessRemotely = (1ULL << ( 15 )); , kDefaultApplication = (1ULL << ( 16 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , ",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:31496,Testability,log,logo,31496,"ine 55 of file TProofServLite.h. ◆ HandleFork(). void TProofServLite::HandleFork ; (; TMessage * ; mess). overridevirtual . Cloning itself via fork. ; Reimplemented from TProofServ.; Definition at line 467 of file TProofServLite.cxx. ◆ HandleSigPipe(). void TProofServLite::HandleSigPipe ; (; ). overridevirtual . Called when the client is not alive anymore; terminate the session. ; Reimplemented from TProofServ.; Definition at line 321 of file TProofServLite.cxx. ◆ HandleTermination(). void TProofServLite::HandleTermination ; (; ). overridevirtual . Called when the client is not alive anymore; terminate the session. ; Reimplemented from TProofServ.; Definition at line 329 of file TProofServLite.cxx. ◆ IsA(). TClass * TProofServLite::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TProofServ.; Definition at line 55 of file TProofServLite.h. ◆ Setup(). Int_t TProofServLite::Setup ; (; ). overrideprivatevirtual . Print the ProofServ logo on standard output. ; Return 0 on success, -1 on error ; Reimplemented from TProofServ.; Definition at line 338 of file TProofServLite.cxx. ◆ SetupOnFork(). Int_t TProofServLite::SetupOnFork ; (; const char * ; ord). private . Finalize the server setup afetr forking. ; Return 0 on success, -1 on error ; Definition at line 506 of file TProofServLite.cxx. ◆ Streamer(). void TProofServLite::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TProofServ. ◆ StreamerNVirtual(). void TProofServLite::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 55 of file TProofServLite.h. ◆ Terminate(). void TProofServLite::Terminate ; (; Int_t ; status). overridevirtual . Terminate the proof server. ; Reimplemented from TProofServ.; Definition at line 428 of file TProofServLite.cxx. Member Data Documentation. ◆ fInterruptHandler. TProofServLiteInterruptHandler* TProofServLite::fInterruptHandler. private .",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:3191,Usability,resume,resume,3191,"* GetConfDir () const;  ; const char * GetConfFile () const;  ; Float_t GetCpuTime () const;  ; const char * GetDataDir () const;  ; const char * GetDataDirOpts () const;  ; Float_t GetEffSessions () const;  ; TList * GetEnabledPackages () const;  ; const char * GetGroup () const;  ; Int_t GetGroupId () const;  ; Int_t GetGroupSize () const;  ; const char * GetImage () const;  ; Int_t GetLogLevel () const;  ; Long64_t GetMsgSizeHWM () const;  ; TDSetElement * GetNextPacket (Long64_t totalEntries=-1);  Get next range of entries to be processed on this server. ;  ; void GetOptions (Int_t *argc, char **argv) override;  Get and handle command line options. ;  ; const char * GetOrdinal () const;  ; TPackMgr * GetPackMgr () const;  ; const char * GetPrefix () const;  ; TProof * GetProof () const;  ; Int_t GetProtocol () const;  ; Int_t GetQuerySeqNum () const;  ; Float_t GetRealTime () const;  ; const char * GetService () const;  ; const char * GetSessionDir () const;  ; const char * GetSessionTag () const;  ; TSocket * GetSocket () const;  ; const char * GetTopSessionTag () const;  ; Int_t GetTotSessions () const;  ; const char * GetUser () const;  ; const char * GetWorkDir () const;  ; virtual EQueryAction GetWorkers (TList *workers, Int_t &prioritychange, Bool_t resume=kFALSE);  Get list of workers to be used from now on. ;  ; void HandleException (Int_t sig) override;  Exception handler: we do not try to recover here, just exit. ;  ; virtual void HandleSocketInput ();  Handle input coming from the client or from the master server. ;  ; virtual Int_t HandleSocketInput (TMessage *mess, Bool_t all);  Process input coming from the client or from the master server. ;  ; virtual void HandleUrgentData ();  Handle Out-Of-Band data sent by the master or client. ;  ; void Interrupt ();  ; Bool_t IsEndMaster () const;  ; Bool_t IsMaster () const;  ; Bool_t IsParallel () const;  True if in parallel mode. ;  ; Bool_t IsTopMaster () const;  ; void LogToMaster (Bool_t on=kTRUE);  ; ",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:7155,Usability,guid,guide,7155,"ialize the graphics environment. ;  ; TObjArray * InputFiles () const;  ; virtual Bool_t IsCmdThread ();  ; Bool_t IsRunning () const;  ; virtual void KeyPressed (Int_t key);  Emit signal when console keyboard key was pressed. ;  ; virtual void LineProcessed (const char *line);  Emit signal when a line has been processed. ;  ; virtual void Lower ();  ; void ls (Option_t *option="""") const override;  Show available sessions. ;  ; Bool_t NoLogoOpt () const;  ; Bool_t NoLogOpt () const;  ; virtual void Open ();  ; void OpenForumTopic (const TString &type);  It opens a Forum topic in a web browser with prefilled ROOT version. ;  ; void OpenGitHubIssue (const TString &type);  It opens a GitHub issue in a web browser with prefilled ROOT version. ;  ; void OpenInBrowser (const TString &url);  The function generates and executes a command that loads the Doxygen URL in a browser. ;  ; void OpenReferenceGuideFor (const TString &strippedClass);  It opens the online reference guide, generated with Doxygen, for the chosen scope (class/namespace/struct) or member (method/function/ data member/enumeration/enumerator. ;  ; virtual Longptr_t ProcessFile (const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE);  Process a file containing a C++ macro. ;  ; virtual Longptr_t ProcessLine (const char *line, Bool_t sync=kFALSE, Int_t *error=nullptr);  Process a single command line, either a C++ statement or an interpreter command starting with a ""."". ;  ; Bool_t QuitOpt () const;  ; virtual void Raise ();  ; virtual void RemoveIdleTimer ();  Remove idle timer. Normally called via TROOT::Idle(0). ;  ; Bool_t ReturnFromRun () const;  ; virtual void ReturnPressed (char *text);  Emit signal when return key was pressed. ;  ; virtual void SetEchoMode (Bool_t mode);  Set console echo mode: ;  ; virtual void SetIdleTimer (UInt_t idleTimeInSec, const char *command);  Set the command to be executed after the system has been idle for idleTimeInSec seconds. ;  ; void SetReturnFromRun (Bool_t ret);",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLite.html:26186,Usability,guid,guide,26186,"s to modify worker lists. ;  ; Bool_t IsIdle ();  Return the idle status. ;  ; virtual void MakePlayer ();  Make player instance. ;  ; virtual void ProcessNext (TString *slb=0);  process the next query from the queue of submitted jobs. ;  ; Int_t SetupCommon ();  Common part (between TProofServ and TXProofServ) of the setup phase. ;  ; Bool_t UnlinkDataDir (const char *path);  Scan recursively the datadir and unlink it if empty Return kTRUE if it can be unlinked, kFALSE otherwise. ;  ;  Protected Member Functions inherited from TApplication;  TApplication ();  Default ctor. Can be used by classes deriving from TApplication. ;  ; virtual void Forum (const char *line);  The function ("".forum <type>"") submits a new post on the ROOT forum via web browser. ;  ; virtual void GitHub (const char *line);  The function ("".gh <type>"") submits a new issue on GitHub via web browser. ;  ; virtual void Help (const char *line);  The function lists useful commands ("".help"") or opens the online reference guide, generated with Doxygen ("".help scope"" or "".help scope::member""). ;  ; virtual void LoadGraphicsLibs ();  Load shared libs necessary for graphics. ;  ; virtual void MakeBatch ();  Switch to batch mode. ;  ; virtual Longptr_t ProcessRemote (const char *line, Int_t *error=nullptr);  Process the content of a line starting with "".R"" (already stripped-off) The format is. ;  ; void SetSignalHandler (TSignalHandler *sh);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TApplication; static void Close (TApplication *app);  Static function used to close a remote application. ;  ; static TApplication * Open (const char *url, Int_t debug, con",MatchSource.WIKI,doc/master/classTProofServLite.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLite.html
https://root.cern/doc/master/classTProofServLiteInputHandler.html:674,Availability,mask,mask,674,". ROOT: TProofServLiteInputHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TProofServLiteInputHandler Class Reference. . Definition at line 160 of file TProofServLite.cxx. Public Member Functions;  TProofServLiteInputHandler (TProofServLite *s, Int_t fd);  ; Bool_t Notify () override;  Handle input on the socket. ;  ; Bool_t ReadNotify () override;  Notify when something can be read from the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TFileHandler;  TFileHandler (int fd, int mask);  Create a file descriptor event handler. ;  ; virtual ~TFileHandler ();  ; void Add () override;  Add file event handler to system file handler list. ;  ; int GetFd () const;  ; virtual Bool_t HasReadInterest ();  True if handler is interested in read events. ;  ; virtual Bool_t HasWriteInterest ();  True if handler is interested in write events. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsReadReady () const;  ; virtual Bool_t IsWriteReady () const;  ; void Remove () override;  Remove file event handler from system file handler list. ;  ; virtual void ResetReadyMask ();  ; void SetFd (int fd);  ; virtual void SetInterest (Int_t mask);  Set interest mask to 'mask'. ;  ; virtual void SetReadReady ();  ; virtual void SetWriteReady ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Bool_t WriteNotify ();  Notify when something can be written to the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void ",MatchSource.WIKI,doc/master/classTProofServLiteInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInputHandler.html
https://root.cern/doc/master/classTProofServLiteInputHandler.html:1330,Availability,mask,mask,1330,"file TProofServLite.cxx. Public Member Functions;  TProofServLiteInputHandler (TProofServLite *s, Int_t fd);  ; Bool_t Notify () override;  Handle input on the socket. ;  ; Bool_t ReadNotify () override;  Notify when something can be read from the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TFileHandler;  TFileHandler (int fd, int mask);  Create a file descriptor event handler. ;  ; virtual ~TFileHandler ();  ; void Add () override;  Add file event handler to system file handler list. ;  ; int GetFd () const;  ; virtual Bool_t HasReadInterest ();  True if handler is interested in read events. ;  ; virtual Bool_t HasWriteInterest ();  True if handler is interested in write events. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsReadReady () const;  ; virtual Bool_t IsWriteReady () const;  ; void Remove () override;  Remove file event handler from system file handler list. ;  ; virtual void ResetReadyMask ();  ; void SetFd (int fd);  ; virtual void SetInterest (Int_t mask);  Set interest mask to 'mask'. ;  ; virtual void SetReadReady ();  ; virtual void SetWriteReady ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Bool_t WriteNotify ();  Notify when something can be written to the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Fu",MatchSource.WIKI,doc/master/classTProofServLiteInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInputHandler.html
https://root.cern/doc/master/classTProofServLiteInputHandler.html:1351,Availability,mask,mask,1351,"file TProofServLite.cxx. Public Member Functions;  TProofServLiteInputHandler (TProofServLite *s, Int_t fd);  ; Bool_t Notify () override;  Handle input on the socket. ;  ; Bool_t ReadNotify () override;  Notify when something can be read from the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TFileHandler;  TFileHandler (int fd, int mask);  Create a file descriptor event handler. ;  ; virtual ~TFileHandler ();  ; void Add () override;  Add file event handler to system file handler list. ;  ; int GetFd () const;  ; virtual Bool_t HasReadInterest ();  True if handler is interested in read events. ;  ; virtual Bool_t HasWriteInterest ();  True if handler is interested in write events. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsReadReady () const;  ; virtual Bool_t IsWriteReady () const;  ; void Remove () override;  Remove file event handler from system file handler list. ;  ; virtual void ResetReadyMask ();  ; void SetFd (int fd);  ; virtual void SetInterest (Int_t mask);  Set interest mask to 'mask'. ;  ; virtual void SetReadReady ();  ; virtual void SetWriteReady ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Bool_t WriteNotify ();  Notify when something can be written to the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Fu",MatchSource.WIKI,doc/master/classTProofServLiteInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInputHandler.html
https://root.cern/doc/master/classTProofServLiteInputHandler.html:1360,Availability,mask,mask,1360,"file TProofServLite.cxx. Public Member Functions;  TProofServLiteInputHandler (TProofServLite *s, Int_t fd);  ; Bool_t Notify () override;  Handle input on the socket. ;  ; Bool_t ReadNotify () override;  Notify when something can be read from the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TFileHandler;  TFileHandler (int fd, int mask);  Create a file descriptor event handler. ;  ; virtual ~TFileHandler ();  ; void Add () override;  Add file event handler to system file handler list. ;  ; int GetFd () const;  ; virtual Bool_t HasReadInterest ();  True if handler is interested in read events. ;  ; virtual Bool_t HasWriteInterest ();  True if handler is interested in write events. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsReadReady () const;  ; virtual Bool_t IsWriteReady () const;  ; void Remove () override;  Remove file event handler from system file handler list. ;  ; virtual void ResetReadyMask ();  ; void SetFd (int fd);  ; virtual void SetInterest (Int_t mask);  Set interest mask to 'mask'. ;  ; virtual void SetReadReady ();  ; virtual void SetWriteReady ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Bool_t WriteNotify ();  Notify when something can be written to the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Fu",MatchSource.WIKI,doc/master/classTProofServLiteInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInputHandler.html
https://root.cern/doc/master/classTProofServLiteInputHandler.html:4069,Availability,error,error,4069,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTProofServLiteInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInputHandler.html
https://root.cern/doc/master/classTProofServLiteInputHandler.html:4158,Availability,error,error,4158,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTProofServLiteInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInputHandler.html
https://root.cern/doc/master/classTProofServLiteInputHandler.html:4313,Availability,error,error,4313,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTProofServLiteInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInputHandler.html
https://root.cern/doc/master/classTProofServLiteInputHandler.html:4610,Availability,error,error,4610,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTProofServLiteInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInputHandler.html
https://root.cern/doc/master/classTProofServLiteInputHandler.html:9045,Availability,error,error,9045," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTProofServLiteInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInputHandler.html
https://root.cern/doc/master/classTProofServLiteInputHandler.html:4075,Integrability,message,message,4075,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTProofServLiteInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInputHandler.html
https://root.cern/doc/master/classTProofServLiteInputHandler.html:4616,Integrability,message,message,4616,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTProofServLiteInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInputHandler.html
https://root.cern/doc/master/classTProofServLiteInputHandler.html:5818,Integrability,message,message,5818,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTProofServLiteInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInputHandler.html
https://root.cern/doc/master/classTProofServLiteInputHandler.html:9051,Integrability,message,message,9051," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTProofServLiteInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInputHandler.html
https://root.cern/doc/master/classTProofServLiteInputHandler.html:9424,Integrability,message,message,9424," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, voi",MatchSource.WIKI,doc/master/classTProofServLiteInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInputHandler.html
https://root.cern/doc/master/classTProofServLiteInputHandler.html:618,Modifiability,inherit,inherited,618,". ROOT: TProofServLiteInputHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TProofServLiteInputHandler Class Reference. . Definition at line 160 of file TProofServLite.cxx. Public Member Functions;  TProofServLiteInputHandler (TProofServLite *s, Int_t fd);  ; Bool_t Notify () override;  Handle input on the socket. ;  ; Bool_t ReadNotify () override;  Notify when something can be read from the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TFileHandler;  TFileHandler (int fd, int mask);  Create a file descriptor event handler. ;  ; virtual ~TFileHandler ();  ; void Add () override;  Add file event handler to system file handler list. ;  ; int GetFd () const;  ; virtual Bool_t HasReadInterest ();  True if handler is interested in read events. ;  ; virtual Bool_t HasWriteInterest ();  True if handler is interested in write events. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsReadReady () const;  ; virtual Bool_t IsWriteReady () const;  ; void Remove () override;  Remove file event handler from system file handler list. ;  ; virtual void ResetReadyMask ();  ; void SetFd (int fd);  ; virtual void SetInterest (Int_t mask);  Set interest mask to 'mask'. ;  ; virtual void SetReadReady ();  ; virtual void SetWriteReady ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Bool_t WriteNotify ();  Notify when something can be written to the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void ",MatchSource.WIKI,doc/master/classTProofServLiteInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInputHandler.html
https://root.cern/doc/master/classTProofServLiteInputHandler.html:1728,Modifiability,inherit,inherited,1728,"dd file event handler to system file handler list. ;  ; int GetFd () const;  ; virtual Bool_t HasReadInterest ();  True if handler is interested in read events. ;  ; virtual Bool_t HasWriteInterest ();  True if handler is interested in write events. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsReadReady () const;  ; virtual Bool_t IsWriteReady () const;  ; void Remove () override;  Remove file event handler from system file handler list. ;  ; virtual void ResetReadyMask ();  ; void SetFd (int fd);  ; virtual void SetInterest (Int_t mask);  Set interest mask to 'mask'. ;  ; virtual void SetReadReady ();  ; virtual void SetWriteReady ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Bool_t WriteNotify ();  Notify when something can be written to the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be over",MatchSource.WIKI,doc/master/classTProofServLiteInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInputHandler.html
https://root.cern/doc/master/classTProofServLiteInputHandler.html:2308,Modifiability,inherit,inherited,2308," fd);  ; virtual void SetInterest (Int_t mask);  Set interest mask to 'mask'. ;  ; virtual void SetReadReady ();  ; virtual void SetWriteReady ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Bool_t WriteNotify ();  Notify when something can be written to the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTProofServLiteInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInputHandler.html
https://root.cern/doc/master/classTProofServLiteInputHandler.html:3705,Modifiability,inherit,inheritance,3705,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTProofServLiteInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInputHandler.html
https://root.cern/doc/master/classTProofServLiteInputHandler.html:5916,Modifiability,inherit,inherits,5916,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTProofServLiteInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInputHandler.html
https://root.cern/doc/master/classTProofServLiteInputHandler.html:6033,Modifiability,inherit,inherits,6033,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTProofServLiteInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInputHandler.html
https://root.cern/doc/master/classTProofServLiteInputHandler.html:9731,Modifiability,inherit,inherited,9731," SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const char *signal, const T &arg);  Activate signal with single paramet",MatchSource.WIKI,doc/master/classTProofServLiteInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInputHandler.html
https://root.cern/doc/master/classTProofServLiteInputHandler.html:11765,Modifiability,inherit,inherited,11765,"a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Private Attributes; TProofServLite * fServ;  . Additional Inherited Members;  Public Types inherited from TFileHandler; enum  { kRead = 1; , kWrite = 2; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TFileHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; stat",MatchSource.WIKI,doc/master/classTProofServLiteInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInputHandler.html
https://root.cern/doc/master/classTProofServLiteInputHandler.html:11847,Modifiability,inherit,inherited,11847,"a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Private Attributes; TProofServLite * fServ;  . Additional Inherited Members;  Public Types inherited from TFileHandler; enum  { kRead = 1; , kWrite = 2; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TFileHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; stat",MatchSource.WIKI,doc/master/classTProofServLiteInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInputHandler.html
https://root.cern/doc/master/classTProofServLiteInputHandler.html:12503,Modifiability,inherit,inherited,12503," = 2; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TFileHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (cons",MatchSource.WIKI,doc/master/classTProofServLiteInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInputHandler.html
https://root.cern/doc/master/classTProofServLiteInputHandler.html:12719,Modifiability,inherit,inherited,12719," = 2; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TFileHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (cons",MatchSource.WIKI,doc/master/classTProofServLiteInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInputHandler.html
https://root.cern/doc/master/classTProofServLiteInputHandler.html:12937,Modifiability,inherit,inherited,12937," = 2; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TFileHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (cons",MatchSource.WIKI,doc/master/classTProofServLiteInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInputHandler.html
https://root.cern/doc/master/classTProofServLiteInputHandler.html:13455,Modifiability,inherit,inherited,13455,"mber Functions inherited from TFileHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullpt",MatchSource.WIKI,doc/master/classTProofServLiteInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInputHandler.html
https://root.cern/doc/master/classTProofServLiteInputHandler.html:14615,Modifiability,inherit,inherited,14615,"n_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TFileHandler;  TFileHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static",MatchSource.WIKI,doc/master/classTProofServLiteInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInputHandler.html
https://root.cern/doc/master/classTProofServLiteInputHandler.html:14714,Modifiability,inherit,inherited,14714,"n_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TFileHandler;  TFileHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static",MatchSource.WIKI,doc/master/classTProofServLiteInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInputHandler.html
https://root.cern/doc/master/classTProofServLiteInputHandler.html:14792,Modifiability,inherit,inherited,14792,"n_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TFileHandler;  TFileHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static",MatchSource.WIKI,doc/master/classTProofServLiteInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInputHandler.html
https://root.cern/doc/master/classTProofServLiteInputHandler.html:15003,Modifiability,inherit,inherited,15003,"slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TFileHandler;  TFileHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TFileHandler; int fFileNum;  ; int fMask;  ; int fReadyMask;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from t",MatchSource.WIKI,doc/master/classTProofServLiteInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInputHandler.html
https://root.cern/doc/master/classTProofServLiteInputHandler.html:15116,Modifiability,inherit,inherited,15116,"slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TFileHandler;  TFileHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TFileHandler; int fFileNum;  ; int fMask;  ; int fReadyMask;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from t",MatchSource.WIKI,doc/master/classTProofServLiteInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInputHandler.html
https://root.cern/doc/master/classTProofServLiteInputHandler.html:15965,Modifiability,inherit,inherited,15965,"ectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TFileHandler; int fFileNum;  ; int fMask;  ; int fReadyMask;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TProofServLiteInputHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofServLiteInputHandler(). TProofServLiteInputHandler::TProofServLiteInputHandler ; (; TProofServLite * ; s, . Int_t ; fd . ). inline . Definition at line 163 of file TProofServLite.cxx. Member Function Documentation. ◆ Notify(). Bool_t TProofServLiteInputHandler::Notify ; (; ). overridevirtual . Handle input on the socket. ; Reimplemented from TFileHandler.; Definition at line 172 of file TProofServLite.cxx. ◆ ReadNotify(). Bool_t TProofServLiteInputHandler::ReadNotify ; (; ). inlineoverridevirtual . Notify when something can be read from the descriptor associated with th",MatchSource.WIKI,doc/master/classTProofServLiteInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInputHandler.html
https://root.cern/doc/master/classTProofServLiteInputHandler.html:16066,Modifiability,inherit,inherited,16066,"ectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TFileHandler; int fFileNum;  ; int fMask;  ; int fReadyMask;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TProofServLiteInputHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofServLiteInputHandler(). TProofServLiteInputHandler::TProofServLiteInputHandler ; (; TProofServLite * ; s, . Int_t ; fd . ). inline . Definition at line 163 of file TProofServLite.cxx. Member Function Documentation. ◆ Notify(). Bool_t TProofServLiteInputHandler::Notify ; (; ). overridevirtual . Handle input on the socket. ; Reimplemented from TFileHandler.; Definition at line 172 of file TProofServLite.cxx. ◆ ReadNotify(). Bool_t TProofServLiteInputHandler::ReadNotify ; (; ). inlineoverridevirtual . Notify when something can be read from the descriptor associated with th",MatchSource.WIKI,doc/master/classTProofServLiteInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInputHandler.html
https://root.cern/doc/master/classTProofServLiteInputHandler.html:16279,Modifiability,inherit,inherited,16279,"ectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TFileHandler; int fFileNum;  ; int fMask;  ; int fReadyMask;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TProofServLiteInputHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofServLiteInputHandler(). TProofServLiteInputHandler::TProofServLiteInputHandler ; (; TProofServLite * ; s, . Int_t ; fd . ). inline . Definition at line 163 of file TProofServLite.cxx. Member Function Documentation. ◆ Notify(). Bool_t TProofServLiteInputHandler::Notify ; (; ). overridevirtual . Handle input on the socket. ; Reimplemented from TFileHandler.; Definition at line 172 of file TProofServLite.cxx. ◆ ReadNotify(). Bool_t TProofServLiteInputHandler::ReadNotify ; (; ). inlineoverridevirtual . Notify when something can be read from the descriptor associated with th",MatchSource.WIKI,doc/master/classTProofServLiteInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInputHandler.html
https://root.cern/doc/master/classTProofServLiteInputHandler.html:5547,Security,hash,hash,5547," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTProofServLiteInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInputHandler.html
https://root.cern/doc/master/classTProofServLiteInterruptHandler.html:3576,Availability,error,error,3576,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTProofServLiteInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInterruptHandler.html
https://root.cern/doc/master/classTProofServLiteInterruptHandler.html:3665,Availability,error,error,3665,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTProofServLiteInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInterruptHandler.html
https://root.cern/doc/master/classTProofServLiteInterruptHandler.html:3820,Availability,error,error,3820,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTProofServLiteInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInterruptHandler.html
https://root.cern/doc/master/classTProofServLiteInterruptHandler.html:4117,Availability,error,error,4117,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTProofServLiteInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInterruptHandler.html
https://root.cern/doc/master/classTProofServLiteInterruptHandler.html:8552,Availability,error,error,8552," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTProofServLiteInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInterruptHandler.html
https://root.cern/doc/master/classTProofServLiteInterruptHandler.html:3582,Integrability,message,message,3582,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTProofServLiteInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInterruptHandler.html
https://root.cern/doc/master/classTProofServLiteInterruptHandler.html:4123,Integrability,message,message,4123,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTProofServLiteInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInterruptHandler.html
https://root.cern/doc/master/classTProofServLiteInterruptHandler.html:5325,Integrability,message,message,5325,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTProofServLiteInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInterruptHandler.html
https://root.cern/doc/master/classTProofServLiteInterruptHandler.html:8558,Integrability,message,message,8558," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTProofServLiteInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInterruptHandler.html
https://root.cern/doc/master/classTProofServLiteInterruptHandler.html:8931,Integrability,message,message,8931," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, voi",MatchSource.WIKI,doc/master/classTProofServLiteInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInterruptHandler.html
https://root.cern/doc/master/classTProofServLiteInterruptHandler.html:490,Modifiability,inherit,inherited,490,". ROOT: TProofServLiteInterruptHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TProofServLiteInterruptHandler Class Reference. . Definition at line 72 of file TProofServLite.cxx. Public Member Functions;  TProofServLiteInterruptHandler (TProofServLite *s);  ; Bool_t Notify () override;  Handle urgent data. ;  ;  Public Member Functions inherited from TSignalHandler;  TSignalHandler (ESignals sig, Bool_t sync=kTRUE);  Create signal event handler. ;  ; virtual ~TSignalHandler ();  ; void Add () override;  Add signal handler to system signal handler list. ;  ; void Delay ();  ; ESignals GetSignal () const;  ; void HandleDelayedSignal ();  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when signal occurs. ;  ; void Remove () override;  Remove signal handler from system signal handler list. ;  ; void SetSignal (ESignals sig);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMet",MatchSource.WIKI,doc/master/classTProofServLiteInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInterruptHandler.html
https://root.cern/doc/master/classTProofServLiteInterruptHandler.html:1235,Modifiability,inherit,inherited,1235,"andler Class Reference. . Definition at line 72 of file TProofServLite.cxx. Public Member Functions;  TProofServLiteInterruptHandler (TProofServLite *s);  ; Bool_t Notify () override;  Handle urgent data. ;  ;  Public Member Functions inherited from TSignalHandler;  TSignalHandler (ESignals sig, Bool_t sync=kTRUE);  Create signal event handler. ;  ; virtual ~TSignalHandler ();  ; void Add () override;  Add signal handler to system signal handler list. ;  ; void Delay ();  ; ESignals GetSignal () const;  ; void HandleDelayedSignal ();  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when signal occurs. ;  ; void Remove () override;  Remove signal handler from system signal handler list. ;  ; void SetSignal (ESignals sig);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser",MatchSource.WIKI,doc/master/classTProofServLiteInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInterruptHandler.html
https://root.cern/doc/master/classTProofServLiteInterruptHandler.html:1815,Modifiability,inherit,inherited,1815,"; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when signal occurs. ;  ; void Remove () override;  Remove signal handler from system signal handler list. ;  ; void SetSignal (ESignals sig);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTProofServLiteInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInterruptHandler.html
https://root.cern/doc/master/classTProofServLiteInterruptHandler.html:3212,Modifiability,inherit,inheritance,3212,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTProofServLiteInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInterruptHandler.html
https://root.cern/doc/master/classTProofServLiteInterruptHandler.html:5423,Modifiability,inherit,inherits,5423,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTProofServLiteInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInterruptHandler.html
https://root.cern/doc/master/classTProofServLiteInterruptHandler.html:5540,Modifiability,inherit,inherits,5540,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTProofServLiteInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInterruptHandler.html
https://root.cern/doc/master/classTProofServLiteInterruptHandler.html:9238,Modifiability,inherit,inherited,9238," SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const char *signal, const T &arg);  Activate signal with single paramet",MatchSource.WIKI,doc/master/classTProofServLiteInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInterruptHandler.html
https://root.cern/doc/master/classTProofServLiteInterruptHandler.html:11272,Modifiability,inherit,inherited,11272,"onst T &... params);  Emit a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Private Attributes; TProofServLite * fServ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TSignalHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  St",MatchSource.WIKI,doc/master/classTProofServLiteInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInterruptHandler.html
https://root.cern/doc/master/classTProofServLiteInterruptHandler.html:11928,Modifiability,inherit,inherited,11928,"d Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TSignalHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (con",MatchSource.WIKI,doc/master/classTProofServLiteInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInterruptHandler.html
https://root.cern/doc/master/classTProofServLiteInterruptHandler.html:12146,Modifiability,inherit,inherited,12146,"d Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TSignalHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (con",MatchSource.WIKI,doc/master/classTProofServLiteInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInterruptHandler.html
https://root.cern/doc/master/classTProofServLiteInterruptHandler.html:12364,Modifiability,inherit,inherited,12364,"d Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TSignalHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (con",MatchSource.WIKI,doc/master/classTProofServLiteInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInterruptHandler.html
https://root.cern/doc/master/classTProofServLiteInterruptHandler.html:12882,Modifiability,inherit,inherited,12882,"er Functions inherited from TSignalHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullpt",MatchSource.WIKI,doc/master/classTProofServLiteInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInterruptHandler.html
https://root.cern/doc/master/classTProofServLiteInterruptHandler.html:14042,Modifiability,inherit,inherited,14042,"t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSignalHandler;  TSignalHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; stat",MatchSource.WIKI,doc/master/classTProofServLiteInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInterruptHandler.html
https://root.cern/doc/master/classTProofServLiteInterruptHandler.html:14141,Modifiability,inherit,inherited,14141,"t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSignalHandler;  TSignalHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; stat",MatchSource.WIKI,doc/master/classTProofServLiteInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInterruptHandler.html
https://root.cern/doc/master/classTProofServLiteInterruptHandler.html:14223,Modifiability,inherit,inherited,14223,"t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSignalHandler;  TSignalHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; stat",MatchSource.WIKI,doc/master/classTProofServLiteInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInterruptHandler.html
https://root.cern/doc/master/classTProofServLiteInterruptHandler.html:14434,Modifiability,inherit,inherited,14434,");  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSignalHandler;  TSignalHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TSignalHandler; Int_t fDelay;  ; ESignals fSignal;  ; Bool_t fSync;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals",MatchSource.WIKI,doc/master/classTProofServLiteInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInterruptHandler.html
https://root.cern/doc/master/classTProofServLiteInterruptHandler.html:14547,Modifiability,inherit,inherited,14547,");  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSignalHandler;  TSignalHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TSignalHandler; Int_t fDelay;  ; ESignals fSignal;  ; Bool_t fSync;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals",MatchSource.WIKI,doc/master/classTProofServLiteInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInterruptHandler.html
https://root.cern/doc/master/classTProofServLiteInterruptHandler.html:15396,Modifiability,inherit,inherited,15396,"rgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TSignalHandler; Int_t fDelay;  ; ESignals fSignal;  ; Bool_t fSync;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TProofServLiteInterruptHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofServLiteInterruptHandler(). TProofServLiteInterruptHandler::TProofServLiteInterruptHandler ; (; TProofServLite * ; s). inline . Definition at line 75 of file TProofServLite.cxx. Member Function Documentation. ◆ Notify(). Bool_t TProofServLiteInterruptHandler::Notify ; (; ). overridevirtual . Handle urgent data. ; Implements TSysEvtHandler.; Definition at line 83 of file TProofServLite.cxx. Member Data Documentation. ◆ fServ. TProofServLite* TProofServLiteInterruptHandler::fServ. private . Definition at line 73 of file TProofServLite.cxx. proof/proof/src/TProofSe",MatchSource.WIKI,doc/master/classTProofServLiteInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInterruptHandler.html
https://root.cern/doc/master/classTProofServLiteInterruptHandler.html:15504,Modifiability,inherit,inherited,15504,"rgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TSignalHandler; Int_t fDelay;  ; ESignals fSignal;  ; Bool_t fSync;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TProofServLiteInterruptHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofServLiteInterruptHandler(). TProofServLiteInterruptHandler::TProofServLiteInterruptHandler ; (; TProofServLite * ; s). inline . Definition at line 75 of file TProofServLite.cxx. Member Function Documentation. ◆ Notify(). Bool_t TProofServLiteInterruptHandler::Notify ; (; ). overridevirtual . Handle urgent data. ; Implements TSysEvtHandler.; Definition at line 83 of file TProofServLite.cxx. Member Data Documentation. ◆ fServ. TProofServLite* TProofServLiteInterruptHandler::fServ. private . Definition at line 73 of file TProofServLite.cxx. proof/proof/src/TProofSe",MatchSource.WIKI,doc/master/classTProofServLiteInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInterruptHandler.html
https://root.cern/doc/master/classTProofServLiteInterruptHandler.html:15717,Modifiability,inherit,inherited,15717,"rgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TSignalHandler; Int_t fDelay;  ; ESignals fSignal;  ; Bool_t fSync;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TProofServLiteInterruptHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofServLiteInterruptHandler(). TProofServLiteInterruptHandler::TProofServLiteInterruptHandler ; (; TProofServLite * ; s). inline . Definition at line 75 of file TProofServLite.cxx. Member Function Documentation. ◆ Notify(). Bool_t TProofServLiteInterruptHandler::Notify ; (; ). overridevirtual . Handle urgent data. ; Implements TSysEvtHandler.; Definition at line 83 of file TProofServLite.cxx. Member Data Documentation. ◆ fServ. TProofServLite* TProofServLiteInterruptHandler::fServ. private . Definition at line 73 of file TProofServLite.cxx. proof/proof/src/TProofSe",MatchSource.WIKI,doc/master/classTProofServLiteInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInterruptHandler.html
https://root.cern/doc/master/classTProofServLiteInterruptHandler.html:5054,Security,hash,hash,5054," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTProofServLiteInterruptHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteInterruptHandler.html
https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html:3588,Availability,error,error,3588,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTProofServLiteSegViolationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html
https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html:3677,Availability,error,error,3677,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTProofServLiteSegViolationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html
https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html:3832,Availability,error,error,3832,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTProofServLiteSegViolationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html
https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html:4129,Availability,error,error,4129,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTProofServLiteSegViolationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html
https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html:8564,Availability,error,error,8564," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTProofServLiteSegViolationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html
https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html:3594,Integrability,message,message,3594,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTProofServLiteSegViolationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html
https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html:4135,Integrability,message,message,4135,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTProofServLiteSegViolationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html
https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html:5337,Integrability,message,message,5337,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTProofServLiteSegViolationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html
https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html:8570,Integrability,message,message,8570," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTProofServLiteSegViolationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html
https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html:8943,Integrability,message,message,8943," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, voi",MatchSource.WIKI,doc/master/classTProofServLiteSegViolationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html
https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html:502,Modifiability,inherit,inherited,502,". ROOT: TProofServLiteSegViolationHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TProofServLiteSegViolationHandler Class Reference. . Definition at line 137 of file TProofServLite.cxx. Public Member Functions;  TProofServLiteSegViolationHandler (TProofServLite *s);  ; Bool_t Notify () override;  Handle seg violation. ;  ;  Public Member Functions inherited from TSignalHandler;  TSignalHandler (ESignals sig, Bool_t sync=kTRUE);  Create signal event handler. ;  ; virtual ~TSignalHandler ();  ; void Add () override;  Add signal handler to system signal handler list. ;  ; void Delay ();  ; ESignals GetSignal () const;  ; void HandleDelayedSignal ();  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when signal occurs. ;  ; void Remove () override;  Remove signal handler from system signal handler list. ;  ; void SetSignal (ESignals sig);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void",MatchSource.WIKI,doc/master/classTProofServLiteSegViolationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html
https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html:1247,Modifiability,inherit,inherited,1247," Class Reference. . Definition at line 137 of file TProofServLite.cxx. Public Member Functions;  TProofServLiteSegViolationHandler (TProofServLite *s);  ; Bool_t Notify () override;  Handle seg violation. ;  ;  Public Member Functions inherited from TSignalHandler;  TSignalHandler (ESignals sig, Bool_t sync=kTRUE);  Create signal event handler. ;  ; virtual ~TSignalHandler ();  ; void Add () override;  Add signal handler to system signal handler list. ;  ; void Delay ();  ; ESignals GetSignal () const;  ; void HandleDelayedSignal ();  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when signal occurs. ;  ; void Remove () override;  Remove signal handler from system signal handler list. ;  ; void SetSignal (ESignals sig);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser",MatchSource.WIKI,doc/master/classTProofServLiteSegViolationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html
https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html:1827,Modifiability,inherit,inherited,1827,"; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when signal occurs. ;  ; void Remove () override;  Remove signal handler from system signal handler list. ;  ; void SetSignal (ESignals sig);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTProofServLiteSegViolationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html
https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html:3224,Modifiability,inherit,inheritance,3224,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTProofServLiteSegViolationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html
https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html:5435,Modifiability,inherit,inherits,5435,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTProofServLiteSegViolationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html
https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html:5552,Modifiability,inherit,inherits,5552,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTProofServLiteSegViolationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html
https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html:9250,Modifiability,inherit,inherited,9250," SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const char *signal, const T &arg);  Activate signal with single paramet",MatchSource.WIKI,doc/master/classTProofServLiteSegViolationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html
https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html:11284,Modifiability,inherit,inherited,11284,"onst T &... params);  Emit a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Private Attributes; TProofServLite * fServ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TSignalHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  St",MatchSource.WIKI,doc/master/classTProofServLiteSegViolationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html
https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html:11940,Modifiability,inherit,inherited,11940,"d Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TSignalHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (con",MatchSource.WIKI,doc/master/classTProofServLiteSegViolationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html
https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html:12158,Modifiability,inherit,inherited,12158,"d Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TSignalHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (con",MatchSource.WIKI,doc/master/classTProofServLiteSegViolationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html
https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html:12376,Modifiability,inherit,inherited,12376,"d Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TSignalHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (con",MatchSource.WIKI,doc/master/classTProofServLiteSegViolationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html
https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html:12894,Modifiability,inherit,inherited,12894,"er Functions inherited from TSignalHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullpt",MatchSource.WIKI,doc/master/classTProofServLiteSegViolationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html
https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html:14054,Modifiability,inherit,inherited,14054,"t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSignalHandler;  TSignalHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; stat",MatchSource.WIKI,doc/master/classTProofServLiteSegViolationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html
https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html:14153,Modifiability,inherit,inherited,14153,"t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSignalHandler;  TSignalHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; stat",MatchSource.WIKI,doc/master/classTProofServLiteSegViolationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html
https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html:14235,Modifiability,inherit,inherited,14235,"t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSignalHandler;  TSignalHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; stat",MatchSource.WIKI,doc/master/classTProofServLiteSegViolationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html
https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html:14446,Modifiability,inherit,inherited,14446,");  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSignalHandler;  TSignalHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TSignalHandler; Int_t fDelay;  ; ESignals fSignal;  ; Bool_t fSync;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals",MatchSource.WIKI,doc/master/classTProofServLiteSegViolationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html
https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html:14559,Modifiability,inherit,inherited,14559,");  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSignalHandler;  TSignalHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TSignalHandler; Int_t fDelay;  ; ESignals fSignal;  ; Bool_t fSync;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals",MatchSource.WIKI,doc/master/classTProofServLiteSegViolationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html
https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html:15408,Modifiability,inherit,inherited,15408,"rgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TSignalHandler; Int_t fDelay;  ; ESignals fSignal;  ; Bool_t fSync;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TProofServLiteSegViolationHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofServLiteSegViolationHandler(). TProofServLiteSegViolationHandler::TProofServLiteSegViolationHandler ; (; TProofServLite * ; s). inline . Definition at line 140 of file TProofServLite.cxx. Member Function Documentation. ◆ Notify(). Bool_t TProofServLiteSegViolationHandler::Notify ; (; ). overridevirtual . Handle seg violation. ; Implements TSysEvtHandler.; Definition at line 148 of file TProofServLite.cxx. Member Data Documentation. ◆ fServ. TProofServLite* TProofServLiteSegViolationHandler::fServ. private . Definition at line 138 of file TProofServLite.cxx. p",MatchSource.WIKI,doc/master/classTProofServLiteSegViolationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html
https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html:15516,Modifiability,inherit,inherited,15516,"rgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TSignalHandler; Int_t fDelay;  ; ESignals fSignal;  ; Bool_t fSync;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TProofServLiteSegViolationHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofServLiteSegViolationHandler(). TProofServLiteSegViolationHandler::TProofServLiteSegViolationHandler ; (; TProofServLite * ; s). inline . Definition at line 140 of file TProofServLite.cxx. Member Function Documentation. ◆ Notify(). Bool_t TProofServLiteSegViolationHandler::Notify ; (; ). overridevirtual . Handle seg violation. ; Implements TSysEvtHandler.; Definition at line 148 of file TProofServLite.cxx. Member Data Documentation. ◆ fServ. TProofServLite* TProofServLiteSegViolationHandler::fServ. private . Definition at line 138 of file TProofServLite.cxx. p",MatchSource.WIKI,doc/master/classTProofServLiteSegViolationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html
https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html:15729,Modifiability,inherit,inherited,15729,"rgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TSignalHandler; Int_t fDelay;  ; ESignals fSignal;  ; Bool_t fSync;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TProofServLiteSegViolationHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofServLiteSegViolationHandler(). TProofServLiteSegViolationHandler::TProofServLiteSegViolationHandler ; (; TProofServLite * ; s). inline . Definition at line 140 of file TProofServLite.cxx. Member Function Documentation. ◆ Notify(). Bool_t TProofServLiteSegViolationHandler::Notify ; (; ). overridevirtual . Handle seg violation. ; Implements TSysEvtHandler.; Definition at line 148 of file TProofServLite.cxx. Member Data Documentation. ◆ fServ. TProofServLite* TProofServLiteSegViolationHandler::fServ. private . Definition at line 138 of file TProofServLite.cxx. p",MatchSource.WIKI,doc/master/classTProofServLiteSegViolationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html
https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html:5066,Security,hash,hash,5066," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTProofServLiteSegViolationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html
https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html:3567,Availability,error,error,3567,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTProofServLiteSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html
https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html:3656,Availability,error,error,3656,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTProofServLiteSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html
https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html:3811,Availability,error,error,3811,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTProofServLiteSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html
https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html:4108,Availability,error,error,4108,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTProofServLiteSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html
https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html:8543,Availability,error,error,8543," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTProofServLiteSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html
https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html:3573,Integrability,message,message,3573,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTProofServLiteSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html
https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html:4114,Integrability,message,message,4114,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTProofServLiteSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html
https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html:5316,Integrability,message,message,5316,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTProofServLiteSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html
https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html:8549,Integrability,message,message,8549," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTProofServLiteSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html
https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html:8922,Integrability,message,message,8922," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, voi",MatchSource.WIKI,doc/master/classTProofServLiteSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html
https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html:481,Modifiability,inherit,inherited,481,". ROOT: TProofServLiteSigPipeHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TProofServLiteSigPipeHandler Class Reference. . Definition at line 95 of file TProofServLite.cxx. Public Member Functions;  TProofServLiteSigPipeHandler (TProofServLite *s);  ; Bool_t Notify () override;  Handle sig pipe. ;  ;  Public Member Functions inherited from TSignalHandler;  TSignalHandler (ESignals sig, Bool_t sync=kTRUE);  Create signal event handler. ;  ; virtual ~TSignalHandler ();  ; void Add () override;  Add signal handler to system signal handler list. ;  ; void Delay ();  ; ESignals GetSignal () const;  ; void HandleDelayedSignal ();  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when signal occurs. ;  ; void Remove () override;  Remove signal handler from system signal handler list. ;  ; void SetSignal (ESignals sig);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (cons",MatchSource.WIKI,doc/master/classTProofServLiteSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html
https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html:1226,Modifiability,inherit,inherited,1226,"PipeHandler Class Reference. . Definition at line 95 of file TProofServLite.cxx. Public Member Functions;  TProofServLiteSigPipeHandler (TProofServLite *s);  ; Bool_t Notify () override;  Handle sig pipe. ;  ;  Public Member Functions inherited from TSignalHandler;  TSignalHandler (ESignals sig, Bool_t sync=kTRUE);  Create signal event handler. ;  ; virtual ~TSignalHandler ();  ; void Add () override;  Add signal handler to system signal handler list. ;  ; void Delay ();  ; ESignals GetSignal () const;  ; void HandleDelayedSignal ();  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when signal occurs. ;  ; void Remove () override;  Remove signal handler from system signal handler list. ;  ; void SetSignal (ESignals sig);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser",MatchSource.WIKI,doc/master/classTProofServLiteSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html
https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html:1806,Modifiability,inherit,inherited,1806,"; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when signal occurs. ;  ; void Remove () override;  Remove signal handler from system signal handler list. ;  ; void SetSignal (ESignals sig);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTProofServLiteSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html
https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html:3203,Modifiability,inherit,inheritance,3203,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTProofServLiteSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html
https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html:5414,Modifiability,inherit,inherits,5414,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTProofServLiteSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html
https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html:5531,Modifiability,inherit,inherits,5531,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTProofServLiteSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html
https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html:9229,Modifiability,inherit,inherited,9229," SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const char *signal, const T &arg);  Activate signal with single paramet",MatchSource.WIKI,doc/master/classTProofServLiteSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html
https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html:11263,Modifiability,inherit,inherited,11263,"onst T &... params);  Emit a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Private Attributes; TProofServLite * fServ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TSignalHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  St",MatchSource.WIKI,doc/master/classTProofServLiteSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html
https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html:11919,Modifiability,inherit,inherited,11919,"d Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TSignalHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (con",MatchSource.WIKI,doc/master/classTProofServLiteSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html
https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html:12137,Modifiability,inherit,inherited,12137,"d Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TSignalHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (con",MatchSource.WIKI,doc/master/classTProofServLiteSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html
https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html:12355,Modifiability,inherit,inherited,12355,"d Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TSignalHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (con",MatchSource.WIKI,doc/master/classTProofServLiteSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html
https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html:12873,Modifiability,inherit,inherited,12873,"er Functions inherited from TSignalHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullpt",MatchSource.WIKI,doc/master/classTProofServLiteSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html
https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html:14033,Modifiability,inherit,inherited,14033,"t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSignalHandler;  TSignalHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; stat",MatchSource.WIKI,doc/master/classTProofServLiteSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html
https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html:14132,Modifiability,inherit,inherited,14132,"t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSignalHandler;  TSignalHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; stat",MatchSource.WIKI,doc/master/classTProofServLiteSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html
https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html:14214,Modifiability,inherit,inherited,14214,"t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSignalHandler;  TSignalHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; stat",MatchSource.WIKI,doc/master/classTProofServLiteSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html
https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html:14425,Modifiability,inherit,inherited,14425,");  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSignalHandler;  TSignalHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TSignalHandler; Int_t fDelay;  ; ESignals fSignal;  ; Bool_t fSync;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals",MatchSource.WIKI,doc/master/classTProofServLiteSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html
https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html:14538,Modifiability,inherit,inherited,14538,");  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSignalHandler;  TSignalHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TSignalHandler; Int_t fDelay;  ; ESignals fSignal;  ; Bool_t fSync;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals",MatchSource.WIKI,doc/master/classTProofServLiteSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html
https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html:15387,Modifiability,inherit,inherited,15387,"rgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TSignalHandler; Int_t fDelay;  ; ESignals fSignal;  ; Bool_t fSync;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TProofServLiteSigPipeHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofServLiteSigPipeHandler(). TProofServLiteSigPipeHandler::TProofServLiteSigPipeHandler ; (; TProofServLite * ; s). inline . Definition at line 98 of file TProofServLite.cxx. Member Function Documentation. ◆ Notify(). Bool_t TProofServLiteSigPipeHandler::Notify ; (; ). overridevirtual . Handle sig pipe. ; Implements TSysEvtHandler.; Definition at line 106 of file TProofServLite.cxx. Member Data Documentation. ◆ fServ. TProofServLite* TProofServLiteSigPipeHandler::fServ. private . Definition at line 96 of file TProofServLite.cxx. proof/proof/src/TProofServLite.cxx. TP",MatchSource.WIKI,doc/master/classTProofServLiteSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html
https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html:15495,Modifiability,inherit,inherited,15495,"rgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TSignalHandler; Int_t fDelay;  ; ESignals fSignal;  ; Bool_t fSync;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TProofServLiteSigPipeHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofServLiteSigPipeHandler(). TProofServLiteSigPipeHandler::TProofServLiteSigPipeHandler ; (; TProofServLite * ; s). inline . Definition at line 98 of file TProofServLite.cxx. Member Function Documentation. ◆ Notify(). Bool_t TProofServLiteSigPipeHandler::Notify ; (; ). overridevirtual . Handle sig pipe. ; Implements TSysEvtHandler.; Definition at line 106 of file TProofServLite.cxx. Member Data Documentation. ◆ fServ. TProofServLite* TProofServLiteSigPipeHandler::fServ. private . Definition at line 96 of file TProofServLite.cxx. proof/proof/src/TProofServLite.cxx. TP",MatchSource.WIKI,doc/master/classTProofServLiteSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html
https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html:15708,Modifiability,inherit,inherited,15708,"rgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TSignalHandler; Int_t fDelay;  ; ESignals fSignal;  ; Bool_t fSync;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TProofServLiteSigPipeHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofServLiteSigPipeHandler(). TProofServLiteSigPipeHandler::TProofServLiteSigPipeHandler ; (; TProofServLite * ; s). inline . Definition at line 98 of file TProofServLite.cxx. Member Function Documentation. ◆ Notify(). Bool_t TProofServLiteSigPipeHandler::Notify ; (; ). overridevirtual . Handle sig pipe. ; Implements TSysEvtHandler.; Definition at line 106 of file TProofServLite.cxx. Member Data Documentation. ◆ fServ. TProofServLite* TProofServLiteSigPipeHandler::fServ. private . Definition at line 96 of file TProofServLite.cxx. proof/proof/src/TProofServLite.cxx. TP",MatchSource.WIKI,doc/master/classTProofServLiteSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html
https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html:5045,Security,hash,hash,5045," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTProofServLiteSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html
https://root.cern/doc/master/classTProofServLiteTerminationHandler.html:3583,Availability,error,error,3583,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTProofServLiteTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteTerminationHandler.html
https://root.cern/doc/master/classTProofServLiteTerminationHandler.html:3672,Availability,error,error,3672,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTProofServLiteTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteTerminationHandler.html
https://root.cern/doc/master/classTProofServLiteTerminationHandler.html:3827,Availability,error,error,3827,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTProofServLiteTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteTerminationHandler.html
https://root.cern/doc/master/classTProofServLiteTerminationHandler.html:4124,Availability,error,error,4124,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTProofServLiteTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteTerminationHandler.html
https://root.cern/doc/master/classTProofServLiteTerminationHandler.html:8559,Availability,error,error,8559," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTProofServLiteTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteTerminationHandler.html
https://root.cern/doc/master/classTProofServLiteTerminationHandler.html:3589,Integrability,message,message,3589,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTProofServLiteTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteTerminationHandler.html
https://root.cern/doc/master/classTProofServLiteTerminationHandler.html:4130,Integrability,message,message,4130,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTProofServLiteTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteTerminationHandler.html
https://root.cern/doc/master/classTProofServLiteTerminationHandler.html:5332,Integrability,message,message,5332,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTProofServLiteTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteTerminationHandler.html
https://root.cern/doc/master/classTProofServLiteTerminationHandler.html:8565,Integrability,message,message,8565," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTProofServLiteTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteTerminationHandler.html
https://root.cern/doc/master/classTProofServLiteTerminationHandler.html:8938,Integrability,message,message,8938," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, voi",MatchSource.WIKI,doc/master/classTProofServLiteTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteTerminationHandler.html
https://root.cern/doc/master/classTProofServLiteTerminationHandler.html:497,Modifiability,inherit,inherited,497,". ROOT: TProofServLiteTerminationHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TProofServLiteTerminationHandler Class Reference. . Definition at line 115 of file TProofServLite.cxx. Public Member Functions;  TProofServLiteTerminationHandler (TProofServLite *s);  ; Bool_t Notify () override;  Handle termination. ;  ;  Public Member Functions inherited from TSignalHandler;  TSignalHandler (ESignals sig, Bool_t sync=kTRUE);  Create signal event handler. ;  ; virtual ~TSignalHandler ();  ; void Add () override;  Add signal handler to system signal handler list. ;  ; void Delay ();  ; ESignals GetSignal () const;  ; void HandleDelayedSignal ();  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when signal occurs. ;  ; void Remove () override;  Remove signal handler from system signal handler list. ;  ; void SetSignal (ESignals sig);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void Abst",MatchSource.WIKI,doc/master/classTProofServLiteTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteTerminationHandler.html
https://root.cern/doc/master/classTProofServLiteTerminationHandler.html:1242,Modifiability,inherit,inherited,1242,"ler Class Reference. . Definition at line 115 of file TProofServLite.cxx. Public Member Functions;  TProofServLiteTerminationHandler (TProofServLite *s);  ; Bool_t Notify () override;  Handle termination. ;  ;  Public Member Functions inherited from TSignalHandler;  TSignalHandler (ESignals sig, Bool_t sync=kTRUE);  Create signal event handler. ;  ; virtual ~TSignalHandler ();  ; void Add () override;  Add signal handler to system signal handler list. ;  ; void Delay ();  ; ESignals GetSignal () const;  ; void HandleDelayedSignal ();  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when signal occurs. ;  ; void Remove () override;  Remove signal handler from system signal handler list. ;  ; void SetSignal (ESignals sig);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser",MatchSource.WIKI,doc/master/classTProofServLiteTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteTerminationHandler.html
https://root.cern/doc/master/classTProofServLiteTerminationHandler.html:1822,Modifiability,inherit,inherited,1822,"; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when signal occurs. ;  ; void Remove () override;  Remove signal handler from system signal handler list. ;  ; void SetSignal (ESignals sig);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTProofServLiteTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteTerminationHandler.html
https://root.cern/doc/master/classTProofServLiteTerminationHandler.html:3219,Modifiability,inherit,inheritance,3219,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTProofServLiteTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteTerminationHandler.html
https://root.cern/doc/master/classTProofServLiteTerminationHandler.html:5430,Modifiability,inherit,inherits,5430,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTProofServLiteTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteTerminationHandler.html
https://root.cern/doc/master/classTProofServLiteTerminationHandler.html:5547,Modifiability,inherit,inherits,5547,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTProofServLiteTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteTerminationHandler.html
https://root.cern/doc/master/classTProofServLiteTerminationHandler.html:9245,Modifiability,inherit,inherited,9245," SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const char *signal, const T &arg);  Activate signal with single paramet",MatchSource.WIKI,doc/master/classTProofServLiteTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteTerminationHandler.html
https://root.cern/doc/master/classTProofServLiteTerminationHandler.html:11279,Modifiability,inherit,inherited,11279,"onst T &... params);  Emit a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Private Attributes; TProofServLite * fServ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TSignalHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  St",MatchSource.WIKI,doc/master/classTProofServLiteTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteTerminationHandler.html
https://root.cern/doc/master/classTProofServLiteTerminationHandler.html:11935,Modifiability,inherit,inherited,11935,"d Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TSignalHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (con",MatchSource.WIKI,doc/master/classTProofServLiteTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteTerminationHandler.html
https://root.cern/doc/master/classTProofServLiteTerminationHandler.html:12153,Modifiability,inherit,inherited,12153,"d Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TSignalHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (con",MatchSource.WIKI,doc/master/classTProofServLiteTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteTerminationHandler.html
https://root.cern/doc/master/classTProofServLiteTerminationHandler.html:12371,Modifiability,inherit,inherited,12371,"d Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TSignalHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (con",MatchSource.WIKI,doc/master/classTProofServLiteTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteTerminationHandler.html
https://root.cern/doc/master/classTProofServLiteTerminationHandler.html:12889,Modifiability,inherit,inherited,12889,"er Functions inherited from TSignalHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullpt",MatchSource.WIKI,doc/master/classTProofServLiteTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteTerminationHandler.html
https://root.cern/doc/master/classTProofServLiteTerminationHandler.html:14049,Modifiability,inherit,inherited,14049,"t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSignalHandler;  TSignalHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; stat",MatchSource.WIKI,doc/master/classTProofServLiteTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteTerminationHandler.html
https://root.cern/doc/master/classTProofServLiteTerminationHandler.html:14148,Modifiability,inherit,inherited,14148,"t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSignalHandler;  TSignalHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; stat",MatchSource.WIKI,doc/master/classTProofServLiteTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteTerminationHandler.html
https://root.cern/doc/master/classTProofServLiteTerminationHandler.html:14230,Modifiability,inherit,inherited,14230,"t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSignalHandler;  TSignalHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; stat",MatchSource.WIKI,doc/master/classTProofServLiteTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteTerminationHandler.html
https://root.cern/doc/master/classTProofServLiteTerminationHandler.html:14441,Modifiability,inherit,inherited,14441,");  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSignalHandler;  TSignalHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TSignalHandler; Int_t fDelay;  ; ESignals fSignal;  ; Bool_t fSync;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals",MatchSource.WIKI,doc/master/classTProofServLiteTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteTerminationHandler.html
https://root.cern/doc/master/classTProofServLiteTerminationHandler.html:14554,Modifiability,inherit,inherited,14554,");  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSignalHandler;  TSignalHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TSignalHandler; Int_t fDelay;  ; ESignals fSignal;  ; Bool_t fSync;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals",MatchSource.WIKI,doc/master/classTProofServLiteTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteTerminationHandler.html
https://root.cern/doc/master/classTProofServLiteTerminationHandler.html:15403,Modifiability,inherit,inherited,15403,"rgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TSignalHandler; Int_t fDelay;  ; ESignals fSignal;  ; Bool_t fSync;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TProofServLiteTerminationHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofServLiteTerminationHandler(). TProofServLiteTerminationHandler::TProofServLiteTerminationHandler ; (; TProofServLite * ; s). inline . Definition at line 118 of file TProofServLite.cxx. Member Function Documentation. ◆ Notify(). Bool_t TProofServLiteTerminationHandler::Notify ; (; ). overridevirtual . Handle termination. ; Implements TSysEvtHandler.; Definition at line 126 of file TProofServLite.cxx. Member Data Documentation. ◆ fServ. TProofServLite* TProofServLiteTerminationHandler::fServ. private . Definition at line 116 of file TProofServLite.cxx. proof/pro",MatchSource.WIKI,doc/master/classTProofServLiteTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteTerminationHandler.html
https://root.cern/doc/master/classTProofServLiteTerminationHandler.html:15511,Modifiability,inherit,inherited,15511,"rgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TSignalHandler; Int_t fDelay;  ; ESignals fSignal;  ; Bool_t fSync;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TProofServLiteTerminationHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofServLiteTerminationHandler(). TProofServLiteTerminationHandler::TProofServLiteTerminationHandler ; (; TProofServLite * ; s). inline . Definition at line 118 of file TProofServLite.cxx. Member Function Documentation. ◆ Notify(). Bool_t TProofServLiteTerminationHandler::Notify ; (; ). overridevirtual . Handle termination. ; Implements TSysEvtHandler.; Definition at line 126 of file TProofServLite.cxx. Member Data Documentation. ◆ fServ. TProofServLite* TProofServLiteTerminationHandler::fServ. private . Definition at line 116 of file TProofServLite.cxx. proof/pro",MatchSource.WIKI,doc/master/classTProofServLiteTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteTerminationHandler.html
https://root.cern/doc/master/classTProofServLiteTerminationHandler.html:15724,Modifiability,inherit,inherited,15724,"rgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TSignalHandler; Int_t fDelay;  ; ESignals fSignal;  ; Bool_t fSync;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TProofServLiteTerminationHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofServLiteTerminationHandler(). TProofServLiteTerminationHandler::TProofServLiteTerminationHandler ; (; TProofServLite * ; s). inline . Definition at line 118 of file TProofServLite.cxx. Member Function Documentation. ◆ Notify(). Bool_t TProofServLiteTerminationHandler::Notify ; (; ). overridevirtual . Handle termination. ; Implements TSysEvtHandler.; Definition at line 126 of file TProofServLite.cxx. Member Data Documentation. ◆ fServ. TProofServLite* TProofServLiteTerminationHandler::fServ. private . Definition at line 116 of file TProofServLite.cxx. proof/pro",MatchSource.WIKI,doc/master/classTProofServLiteTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteTerminationHandler.html
https://root.cern/doc/master/classTProofServLiteTerminationHandler.html:5061,Security,hash,hash,5061," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTProofServLiteTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLiteTerminationHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:1428,Availability,avail,available,1428,"tusBits { kFileIsPipe = (1ULL << ( 23 )); };  ;  Public Types inherited from TFileHandler; enum  { kRead = 1; , kWrite = 2; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TProofServLogHandler (const char *cmd, TSocket *s, const char *pfx="""");  Execute 'cmd' in a pipe and handle output messages from the related file. ;  ;  TProofServLogHandler (FILE *f, TSocket *s, const char *pfx="""");  Handle available message from the open file 'f'. ;  ;  ~TProofServLogHandler () override;  Handle available message in the open file. ;  ; Bool_t IsValid ();  ; Bool_t Notify () override;  Handle available message in the open file. ;  ; Bool_t ReadNotify () override;  Notify when something can be read from the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TFileHandler;  TFileHandler (int fd, int mask);  Create a file descriptor event handler. ;  ; virtual ~TFileHandler ();  ; void Add () override;  Add file event handler to system file handler list. ;  ; int GetFd () const;  ; virtual Bool_t HasReadInterest ();  True if handler is interested in read events. ;  ; virtual Bool_t HasWriteInterest ();  True if handler is interested in write events. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsReadReady () const;  ; virtual Bool_t IsWriteReady () const;  ; void Remove () override;  Remove file event handler from system file han",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:1519,Availability,avail,available,1519,"ad = 1; , kWrite = 2; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TProofServLogHandler (const char *cmd, TSocket *s, const char *pfx="""");  Execute 'cmd' in a pipe and handle output messages from the related file. ;  ;  TProofServLogHandler (FILE *f, TSocket *s, const char *pfx="""");  Handle available message from the open file 'f'. ;  ;  ~TProofServLogHandler () override;  Handle available message in the open file. ;  ; Bool_t IsValid ();  ; Bool_t Notify () override;  Handle available message in the open file. ;  ; Bool_t ReadNotify () override;  Notify when something can be read from the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TFileHandler;  TFileHandler (int fd, int mask);  Create a file descriptor event handler. ;  ; virtual ~TFileHandler ();  ; void Add () override;  Add file event handler to system file handler list. ;  ; int GetFd () const;  ; virtual Bool_t HasReadInterest ();  True if handler is interested in read events. ;  ; virtual Bool_t HasWriteInterest ();  True if handler is interested in write events. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsReadReady () const;  ; virtual Bool_t IsWriteReady () const;  ; void Remove () override;  Remove file event handler from system file handler list. ;  ; virtual void ResetReadyMask ();  ; void SetFd (int fd);  ; virtual void SetInterest (In",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:1617,Availability,avail,available,1617,"01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TProofServLogHandler (const char *cmd, TSocket *s, const char *pfx="""");  Execute 'cmd' in a pipe and handle output messages from the related file. ;  ;  TProofServLogHandler (FILE *f, TSocket *s, const char *pfx="""");  Handle available message from the open file 'f'. ;  ;  ~TProofServLogHandler () override;  Handle available message in the open file. ;  ; Bool_t IsValid ();  ; Bool_t Notify () override;  Handle available message in the open file. ;  ; Bool_t ReadNotify () override;  Notify when something can be read from the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TFileHandler;  TFileHandler (int fd, int mask);  Create a file descriptor event handler. ;  ; virtual ~TFileHandler ();  ; void Add () override;  Add file event handler to system file handler list. ;  ; int GetFd () const;  ; virtual Bool_t HasReadInterest ();  True if handler is interested in read events. ;  ; virtual Bool_t HasWriteInterest ();  True if handler is interested in write events. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsReadReady () const;  ; virtual Bool_t IsWriteReady () const;  ; void Remove () override;  Remove file event handler from system file handler list. ;  ; virtual void ResetReadyMask ();  ; void SetFd (int fd);  ; virtual void SetInterest (Int_t mask);  Set interest mask to 'mask'. ;  ; virtual void SetReadReady ();  ; virtual void",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:1860,Availability,mask,mask,1860,"enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TProofServLogHandler (const char *cmd, TSocket *s, const char *pfx="""");  Execute 'cmd' in a pipe and handle output messages from the related file. ;  ;  TProofServLogHandler (FILE *f, TSocket *s, const char *pfx="""");  Handle available message from the open file 'f'. ;  ;  ~TProofServLogHandler () override;  Handle available message in the open file. ;  ; Bool_t IsValid ();  ; Bool_t Notify () override;  Handle available message in the open file. ;  ; Bool_t ReadNotify () override;  Notify when something can be read from the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TFileHandler;  TFileHandler (int fd, int mask);  Create a file descriptor event handler. ;  ; virtual ~TFileHandler ();  ; void Add () override;  Add file event handler to system file handler list. ;  ; int GetFd () const;  ; virtual Bool_t HasReadInterest ();  True if handler is interested in read events. ;  ; virtual Bool_t HasWriteInterest ();  True if handler is interested in write events. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsReadReady () const;  ; virtual Bool_t IsWriteReady () const;  ; void Remove () override;  Remove file event handler from system file handler list. ;  ; virtual void ResetReadyMask ();  ; void SetFd (int fd);  ; virtual void SetInterest (Int_t mask);  Set interest mask to 'mask'. ;  ; virtual void SetReadReady ();  ; virtual void SetWriteReady ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Bool_t WriteNotify ();  Notify when something can be written to t",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:2516,Availability,mask,mask,2516,"rvLogHandler () override;  Handle available message in the open file. ;  ; Bool_t IsValid ();  ; Bool_t Notify () override;  Handle available message in the open file. ;  ; Bool_t ReadNotify () override;  Notify when something can be read from the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TFileHandler;  TFileHandler (int fd, int mask);  Create a file descriptor event handler. ;  ; virtual ~TFileHandler ();  ; void Add () override;  Add file event handler to system file handler list. ;  ; int GetFd () const;  ; virtual Bool_t HasReadInterest ();  True if handler is interested in read events. ;  ; virtual Bool_t HasWriteInterest ();  True if handler is interested in write events. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsReadReady () const;  ; virtual Bool_t IsWriteReady () const;  ; void Remove () override;  Remove file event handler from system file handler list. ;  ; virtual void ResetReadyMask ();  ; void SetFd (int fd);  ; virtual void SetInterest (Int_t mask);  Set interest mask to 'mask'. ;  ; virtual void SetReadReady ();  ; virtual void SetWriteReady ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Bool_t WriteNotify ();  Notify when something can be written to the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Fu",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:2537,Availability,mask,mask,2537,"rvLogHandler () override;  Handle available message in the open file. ;  ; Bool_t IsValid ();  ; Bool_t Notify () override;  Handle available message in the open file. ;  ; Bool_t ReadNotify () override;  Notify when something can be read from the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TFileHandler;  TFileHandler (int fd, int mask);  Create a file descriptor event handler. ;  ; virtual ~TFileHandler ();  ; void Add () override;  Add file event handler to system file handler list. ;  ; int GetFd () const;  ; virtual Bool_t HasReadInterest ();  True if handler is interested in read events. ;  ; virtual Bool_t HasWriteInterest ();  True if handler is interested in write events. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsReadReady () const;  ; virtual Bool_t IsWriteReady () const;  ; void Remove () override;  Remove file event handler from system file handler list. ;  ; virtual void ResetReadyMask ();  ; void SetFd (int fd);  ; virtual void SetInterest (Int_t mask);  Set interest mask to 'mask'. ;  ; virtual void SetReadReady ();  ; virtual void SetWriteReady ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Bool_t WriteNotify ();  Notify when something can be written to the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Fu",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:2546,Availability,mask,mask,2546,"rvLogHandler () override;  Handle available message in the open file. ;  ; Bool_t IsValid ();  ; Bool_t Notify () override;  Handle available message in the open file. ;  ; Bool_t ReadNotify () override;  Notify when something can be read from the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TFileHandler;  TFileHandler (int fd, int mask);  Create a file descriptor event handler. ;  ; virtual ~TFileHandler ();  ; void Add () override;  Add file event handler to system file handler list. ;  ; int GetFd () const;  ; virtual Bool_t HasReadInterest ();  True if handler is interested in read events. ;  ; virtual Bool_t HasWriteInterest ();  True if handler is interested in write events. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsReadReady () const;  ; virtual Bool_t IsWriteReady () const;  ; void Remove () override;  Remove file event handler from system file handler list. ;  ; virtual void ResetReadyMask ();  ; void SetFd (int fd);  ; virtual void SetInterest (Int_t mask);  Set interest mask to 'mask'. ;  ; virtual void SetReadReady ();  ; virtual void SetWriteReady ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Bool_t WriteNotify ();  Notify when something can be written to the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Fu",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:5255,Availability,error,error,5255,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:5344,Availability,error,error,5344,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:5499,Availability,error,error,5499,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:5796,Availability,error,error,5796,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:10231,Availability,error,error,10231," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:18000,Availability,avail,available,18000," fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TProofServ.h>. Inheritance diagram for TProofServLogHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TProofServLogHandler::EStatusBits. EnumeratorkFileIsPipe . Definition at line 385 of file TProofServ.h. Constructor & Destructor Documentation. ◆ TProofServLogHandler() [1/2]. TProofServLogHandler::TProofServLogHandler ; (; const char * ; cmd, . TSocket * ; s, . const char * ; pfx = """" . ). Execute 'cmd' in a pipe and handle output messages from the related file. ; Definition at line 240 of file TProofServ.cxx. ◆ TProofServLogHandler() [2/2]. TProofServLogHandler::TProofServLogHandler ; (; FILE * ; f, . TSocket * ; s, . const char * ; pfx = """" . ). Handle available message from the open file 'f'. ; Definition at line 268 of file TProofServ.cxx. ◆ ~TProofServLogHandler(). TProofServLogHandler::~TProofServLogHandler ; (; ). override . Handle available message in the open file. ; Definition at line 286 of file TProofServ.cxx. Member Function Documentation. ◆ GetCmdRtn(). Int_t TProofServLogHandler::GetCmdRtn ; (; ). static . Static method to get the return code from the execution of a command via the pipe. ; This is always 0 when the log handler is not used with a pipe ; Definition at line 344 of file TProofServ.cxx. ◆ IsValid(). Bool_t TProofServLogHandler::IsValid ; (; ). inline . Definition at line 390 of file TProofServ.h. ◆ Notify(). Bool_t TProofServLogHandler::Notify ; (; ). overridevirtual . Handle available message in the open file. ; Reimplemented from TFileHandler.; Definition at line 303 of file TProofServ.cxx. ◆ ReadNotify(). Bool_t TProofServLogHandler::ReadNotify ; (; ). inlineoverridevirtual . Notify when something can be read from the desc",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:18188,Availability,avail,available,18188,"f signals ;  . #include <TProofServ.h>. Inheritance diagram for TProofServLogHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TProofServLogHandler::EStatusBits. EnumeratorkFileIsPipe . Definition at line 385 of file TProofServ.h. Constructor & Destructor Documentation. ◆ TProofServLogHandler() [1/2]. TProofServLogHandler::TProofServLogHandler ; (; const char * ; cmd, . TSocket * ; s, . const char * ; pfx = """" . ). Execute 'cmd' in a pipe and handle output messages from the related file. ; Definition at line 240 of file TProofServ.cxx. ◆ TProofServLogHandler() [2/2]. TProofServLogHandler::TProofServLogHandler ; (; FILE * ; f, . TSocket * ; s, . const char * ; pfx = """" . ). Handle available message from the open file 'f'. ; Definition at line 268 of file TProofServ.cxx. ◆ ~TProofServLogHandler(). TProofServLogHandler::~TProofServLogHandler ; (; ). override . Handle available message in the open file. ; Definition at line 286 of file TProofServ.cxx. Member Function Documentation. ◆ GetCmdRtn(). Int_t TProofServLogHandler::GetCmdRtn ; (; ). static . Static method to get the return code from the execution of a command via the pipe. ; This is always 0 when the log handler is not used with a pipe ; Definition at line 344 of file TProofServ.cxx. ◆ IsValid(). Bool_t TProofServLogHandler::IsValid ; (; ). inline . Definition at line 390 of file TProofServ.h. ◆ Notify(). Bool_t TProofServLogHandler::Notify ; (; ). overridevirtual . Handle available message in the open file. ; Reimplemented from TFileHandler.; Definition at line 303 of file TProofServ.cxx. ◆ ReadNotify(). Bool_t TProofServLogHandler::ReadNotify ; (; ). inlineoverridevirtual . Notify when something can be read from the descriptor associated with this handler. ; Reimplemented from TFileHandler.; Definition at line 393 of file TProofServ.h. ◆ SetDefaultPrefix(). void TProofServLogHandler::SetDefaultPrefix ;",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:18763,Availability,avail,available,18763,"ages from the related file. ; Definition at line 240 of file TProofServ.cxx. ◆ TProofServLogHandler() [2/2]. TProofServLogHandler::TProofServLogHandler ; (; FILE * ; f, . TSocket * ; s, . const char * ; pfx = """" . ). Handle available message from the open file 'f'. ; Definition at line 268 of file TProofServ.cxx. ◆ ~TProofServLogHandler(). TProofServLogHandler::~TProofServLogHandler ; (; ). override . Handle available message in the open file. ; Definition at line 286 of file TProofServ.cxx. Member Function Documentation. ◆ GetCmdRtn(). Int_t TProofServLogHandler::GetCmdRtn ; (; ). static . Static method to get the return code from the execution of a command via the pipe. ; This is always 0 when the log handler is not used with a pipe ; Definition at line 344 of file TProofServ.cxx. ◆ IsValid(). Bool_t TProofServLogHandler::IsValid ; (; ). inline . Definition at line 390 of file TProofServ.h. ◆ Notify(). Bool_t TProofServLogHandler::Notify ; (; ). overridevirtual . Handle available message in the open file. ; Reimplemented from TFileHandler.; Definition at line 303 of file TProofServ.cxx. ◆ ReadNotify(). Bool_t TProofServLogHandler::ReadNotify ; (; ). inlineoverridevirtual . Notify when something can be read from the descriptor associated with this handler. ; Reimplemented from TFileHandler.; Definition at line 393 of file TProofServ.h. ◆ SetDefaultPrefix(). void TProofServLogHandler::SetDefaultPrefix ; (; const char * ; pfx). static . Static method to set the default prefix. ; Definition at line 336 of file TProofServ.cxx. Member Data Documentation. ◆ fFile. FILE* TProofServLogHandler::fFile. private . Definition at line 378 of file TProofServ.h. ◆ fgCmdRtn. Int_t TProofServLogHandler::fgCmdRtn = 0. staticprivate . Definition at line 382 of file TProofServ.h. ◆ fgPfx. TString TProofServLogHandler::fgPfx = """". staticprivate . Definition at line 381 of file TProofServ.h. ◆ fPfx. TString TProofServLogHandler::fPfx. private . Definition at line 379 of file TProofServ.h.",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:1318,Integrability,message,messages,1318,"e Attributes |; List of all members ; TProofServLogHandler Class Reference. . Definition at line 375 of file TProofServ.h. Public Types; enum  EStatusBits { kFileIsPipe = (1ULL << ( 23 )); };  ;  Public Types inherited from TFileHandler; enum  { kRead = 1; , kWrite = 2; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TProofServLogHandler (const char *cmd, TSocket *s, const char *pfx="""");  Execute 'cmd' in a pipe and handle output messages from the related file. ;  ;  TProofServLogHandler (FILE *f, TSocket *s, const char *pfx="""");  Handle available message from the open file 'f'. ;  ;  ~TProofServLogHandler () override;  Handle available message in the open file. ;  ; Bool_t IsValid ();  ; Bool_t Notify () override;  Handle available message in the open file. ;  ; Bool_t ReadNotify () override;  Notify when something can be read from the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TFileHandler;  TFileHandler (int fd, int mask);  Create a file descriptor event handler. ;  ; virtual ~TFileHandler ();  ; void Add () override;  Add file event handler to system file handler list. ;  ; int GetFd () const;  ; virtual Bool_t HasReadInterest ();  True if handler is interested in read events. ;  ; virtual Bool_t HasWriteInterest ();  True if handler is interested in write events. ;  ; TClass * IsA () const override;  ; virtual",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:1438,Integrability,message,message,1438,"tusBits { kFileIsPipe = (1ULL << ( 23 )); };  ;  Public Types inherited from TFileHandler; enum  { kRead = 1; , kWrite = 2; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TProofServLogHandler (const char *cmd, TSocket *s, const char *pfx="""");  Execute 'cmd' in a pipe and handle output messages from the related file. ;  ;  TProofServLogHandler (FILE *f, TSocket *s, const char *pfx="""");  Handle available message from the open file 'f'. ;  ;  ~TProofServLogHandler () override;  Handle available message in the open file. ;  ; Bool_t IsValid ();  ; Bool_t Notify () override;  Handle available message in the open file. ;  ; Bool_t ReadNotify () override;  Notify when something can be read from the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TFileHandler;  TFileHandler (int fd, int mask);  Create a file descriptor event handler. ;  ; virtual ~TFileHandler ();  ; void Add () override;  Add file event handler to system file handler list. ;  ; int GetFd () const;  ; virtual Bool_t HasReadInterest ();  True if handler is interested in read events. ;  ; virtual Bool_t HasWriteInterest ();  True if handler is interested in write events. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsReadReady () const;  ; virtual Bool_t IsWriteReady () const;  ; void Remove () override;  Remove file event handler from system file han",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:1529,Integrability,message,message,1529,"ad = 1; , kWrite = 2; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TProofServLogHandler (const char *cmd, TSocket *s, const char *pfx="""");  Execute 'cmd' in a pipe and handle output messages from the related file. ;  ;  TProofServLogHandler (FILE *f, TSocket *s, const char *pfx="""");  Handle available message from the open file 'f'. ;  ;  ~TProofServLogHandler () override;  Handle available message in the open file. ;  ; Bool_t IsValid ();  ; Bool_t Notify () override;  Handle available message in the open file. ;  ; Bool_t ReadNotify () override;  Notify when something can be read from the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TFileHandler;  TFileHandler (int fd, int mask);  Create a file descriptor event handler. ;  ; virtual ~TFileHandler ();  ; void Add () override;  Add file event handler to system file handler list. ;  ; int GetFd () const;  ; virtual Bool_t HasReadInterest ();  True if handler is interested in read events. ;  ; virtual Bool_t HasWriteInterest ();  True if handler is interested in write events. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsReadReady () const;  ; virtual Bool_t IsWriteReady () const;  ; void Remove () override;  Remove file event handler from system file handler list. ;  ; virtual void ResetReadyMask ();  ; void SetFd (int fd);  ; virtual void SetInterest (In",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:1627,Integrability,message,message,1627,"01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TProofServLogHandler (const char *cmd, TSocket *s, const char *pfx="""");  Execute 'cmd' in a pipe and handle output messages from the related file. ;  ;  TProofServLogHandler (FILE *f, TSocket *s, const char *pfx="""");  Handle available message from the open file 'f'. ;  ;  ~TProofServLogHandler () override;  Handle available message in the open file. ;  ; Bool_t IsValid ();  ; Bool_t Notify () override;  Handle available message in the open file. ;  ; Bool_t ReadNotify () override;  Notify when something can be read from the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TFileHandler;  TFileHandler (int fd, int mask);  Create a file descriptor event handler. ;  ; virtual ~TFileHandler ();  ; void Add () override;  Add file event handler to system file handler list. ;  ; int GetFd () const;  ; virtual Bool_t HasReadInterest ();  True if handler is interested in read events. ;  ; virtual Bool_t HasWriteInterest ();  True if handler is interested in write events. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsReadReady () const;  ; virtual Bool_t IsWriteReady () const;  ; void Remove () override;  Remove file event handler from system file handler list. ;  ; virtual void ResetReadyMask ();  ; void SetFd (int fd);  ; virtual void SetInterest (Int_t mask);  Set interest mask to 'mask'. ;  ; virtual void SetReadReady ();  ; virtual void",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:5261,Integrability,message,message,5261,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:5802,Integrability,message,message,5802,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:7004,Integrability,message,message,7004,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:10237,Integrability,message,message,10237," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:10610,Integrability,message,message,10610," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, voi",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:17772,Integrability,message,messages,17772,";  Protected Attributes inherited from TFileHandler; int fFileNum;  ; int fMask;  ; int fReadyMask;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TProofServ.h>. Inheritance diagram for TProofServLogHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TProofServLogHandler::EStatusBits. EnumeratorkFileIsPipe . Definition at line 385 of file TProofServ.h. Constructor & Destructor Documentation. ◆ TProofServLogHandler() [1/2]. TProofServLogHandler::TProofServLogHandler ; (; const char * ; cmd, . TSocket * ; s, . const char * ; pfx = """" . ). Execute 'cmd' in a pipe and handle output messages from the related file. ; Definition at line 240 of file TProofServ.cxx. ◆ TProofServLogHandler() [2/2]. TProofServLogHandler::TProofServLogHandler ; (; FILE * ; f, . TSocket * ; s, . const char * ; pfx = """" . ). Handle available message from the open file 'f'. ; Definition at line 268 of file TProofServ.cxx. ◆ ~TProofServLogHandler(). TProofServLogHandler::~TProofServLogHandler ; (; ). override . Handle available message in the open file. ; Definition at line 286 of file TProofServ.cxx. Member Function Documentation. ◆ GetCmdRtn(). Int_t TProofServLogHandler::GetCmdRtn ; (; ). static . Static method to get the return code from the execution of a command via the pipe. ; This is always 0 when the log handler is not used with a pipe ; Definition at line 344 of file TProofServ.cxx. ◆ IsValid(). Bool_t TProofServLogHandler::IsValid ; (; ). inline . Definition at line 390 of file TProofServ.h. ◆ Notify(). Bool_t TProofServLogHandler::Notify ; (; ). overridevirtual . Handle ava",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:18010,Integrability,message,message,18010," fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TProofServ.h>. Inheritance diagram for TProofServLogHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TProofServLogHandler::EStatusBits. EnumeratorkFileIsPipe . Definition at line 385 of file TProofServ.h. Constructor & Destructor Documentation. ◆ TProofServLogHandler() [1/2]. TProofServLogHandler::TProofServLogHandler ; (; const char * ; cmd, . TSocket * ; s, . const char * ; pfx = """" . ). Execute 'cmd' in a pipe and handle output messages from the related file. ; Definition at line 240 of file TProofServ.cxx. ◆ TProofServLogHandler() [2/2]. TProofServLogHandler::TProofServLogHandler ; (; FILE * ; f, . TSocket * ; s, . const char * ; pfx = """" . ). Handle available message from the open file 'f'. ; Definition at line 268 of file TProofServ.cxx. ◆ ~TProofServLogHandler(). TProofServLogHandler::~TProofServLogHandler ; (; ). override . Handle available message in the open file. ; Definition at line 286 of file TProofServ.cxx. Member Function Documentation. ◆ GetCmdRtn(). Int_t TProofServLogHandler::GetCmdRtn ; (; ). static . Static method to get the return code from the execution of a command via the pipe. ; This is always 0 when the log handler is not used with a pipe ; Definition at line 344 of file TProofServ.cxx. ◆ IsValid(). Bool_t TProofServLogHandler::IsValid ; (; ). inline . Definition at line 390 of file TProofServ.h. ◆ Notify(). Bool_t TProofServLogHandler::Notify ; (; ). overridevirtual . Handle available message in the open file. ; Reimplemented from TFileHandler.; Definition at line 303 of file TProofServ.cxx. ◆ ReadNotify(). Bool_t TProofServLogHandler::ReadNotify ; (; ). inlineoverridevirtual . Notify when something can be read from the desc",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:18198,Integrability,message,message,18198,"f signals ;  . #include <TProofServ.h>. Inheritance diagram for TProofServLogHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TProofServLogHandler::EStatusBits. EnumeratorkFileIsPipe . Definition at line 385 of file TProofServ.h. Constructor & Destructor Documentation. ◆ TProofServLogHandler() [1/2]. TProofServLogHandler::TProofServLogHandler ; (; const char * ; cmd, . TSocket * ; s, . const char * ; pfx = """" . ). Execute 'cmd' in a pipe and handle output messages from the related file. ; Definition at line 240 of file TProofServ.cxx. ◆ TProofServLogHandler() [2/2]. TProofServLogHandler::TProofServLogHandler ; (; FILE * ; f, . TSocket * ; s, . const char * ; pfx = """" . ). Handle available message from the open file 'f'. ; Definition at line 268 of file TProofServ.cxx. ◆ ~TProofServLogHandler(). TProofServLogHandler::~TProofServLogHandler ; (; ). override . Handle available message in the open file. ; Definition at line 286 of file TProofServ.cxx. Member Function Documentation. ◆ GetCmdRtn(). Int_t TProofServLogHandler::GetCmdRtn ; (; ). static . Static method to get the return code from the execution of a command via the pipe. ; This is always 0 when the log handler is not used with a pipe ; Definition at line 344 of file TProofServ.cxx. ◆ IsValid(). Bool_t TProofServLogHandler::IsValid ; (; ). inline . Definition at line 390 of file TProofServ.h. ◆ Notify(). Bool_t TProofServLogHandler::Notify ; (; ). overridevirtual . Handle available message in the open file. ; Reimplemented from TFileHandler.; Definition at line 303 of file TProofServ.cxx. ◆ ReadNotify(). Bool_t TProofServLogHandler::ReadNotify ; (; ). inlineoverridevirtual . Notify when something can be read from the descriptor associated with this handler. ; Reimplemented from TFileHandler.; Definition at line 393 of file TProofServ.h. ◆ SetDefaultPrefix(). void TProofServLogHandler::SetDefaultPrefix ;",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:18773,Integrability,message,message,18773,"ages from the related file. ; Definition at line 240 of file TProofServ.cxx. ◆ TProofServLogHandler() [2/2]. TProofServLogHandler::TProofServLogHandler ; (; FILE * ; f, . TSocket * ; s, . const char * ; pfx = """" . ). Handle available message from the open file 'f'. ; Definition at line 268 of file TProofServ.cxx. ◆ ~TProofServLogHandler(). TProofServLogHandler::~TProofServLogHandler ; (; ). override . Handle available message in the open file. ; Definition at line 286 of file TProofServ.cxx. Member Function Documentation. ◆ GetCmdRtn(). Int_t TProofServLogHandler::GetCmdRtn ; (; ). static . Static method to get the return code from the execution of a command via the pipe. ; This is always 0 when the log handler is not used with a pipe ; Definition at line 344 of file TProofServ.cxx. ◆ IsValid(). Bool_t TProofServLogHandler::IsValid ; (; ). inline . Definition at line 390 of file TProofServ.h. ◆ Notify(). Bool_t TProofServLogHandler::Notify ; (; ). overridevirtual . Handle available message in the open file. ; Reimplemented from TFileHandler.; Definition at line 303 of file TProofServ.cxx. ◆ ReadNotify(). Bool_t TProofServLogHandler::ReadNotify ; (; ). inlineoverridevirtual . Notify when something can be read from the descriptor associated with this handler. ; Reimplemented from TFileHandler.; Definition at line 393 of file TProofServ.h. ◆ SetDefaultPrefix(). void TProofServLogHandler::SetDefaultPrefix ; (; const char * ; pfx). static . Static method to set the default prefix. ; Definition at line 336 of file TProofServ.cxx. Member Data Documentation. ◆ fFile. FILE* TProofServLogHandler::fFile. private . Definition at line 378 of file TProofServ.h. ◆ fgCmdRtn. Int_t TProofServLogHandler::fgCmdRtn = 0. staticprivate . Definition at line 382 of file TProofServ.h. ◆ fgPfx. TString TProofServLogHandler::fgPfx = """". staticprivate . Definition at line 381 of file TProofServ.h. ◆ fPfx. TString TProofServLogHandler::fPfx. private . Definition at line 379 of file TProofServ.h.",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:471,Modifiability,inherit,inherited,471,". ROOT: TProofServLogHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; TProofServLogHandler Class Reference. . Definition at line 375 of file TProofServ.h. Public Types; enum  EStatusBits { kFileIsPipe = (1ULL << ( 23 )); };  ;  Public Types inherited from TFileHandler; enum  { kRead = 1; , kWrite = 2; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TProofServLogHandler (const char *cmd, TSocket *s, const char *pfx="""");  Execute 'cmd' in a pipe and handle output messages from the related file. ;  ;  TProofServLogHandler (FILE *f, TSocket *s, const char *pfx="""");  Handle available message from the open file 'f'. ;  ;  ~TProofServLogHandler () override;  Handle available message in the open file. ;  ; Bool_t IsValid ();  ; Bool_t Notify () override;  Handle available message in the open file. ;  ; Bool_t ReadNotify () override;  Notify when something can be read from the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TFileHandler;  TFileHandler (int fd, int mask);  Create a file descriptor event handler. ;  ; virtual ~TFileHandler ();  ; void Add () override;  Add file event handler to system fil",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:553,Modifiability,inherit,inherited,553,". ROOT: TProofServLogHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; TProofServLogHandler Class Reference. . Definition at line 375 of file TProofServ.h. Public Types; enum  EStatusBits { kFileIsPipe = (1ULL << ( 23 )); };  ;  Public Types inherited from TFileHandler; enum  { kRead = 1; , kWrite = 2; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TProofServLogHandler (const char *cmd, TSocket *s, const char *pfx="""");  Execute 'cmd' in a pipe and handle output messages from the related file. ;  ;  TProofServLogHandler (FILE *f, TSocket *s, const char *pfx="""");  Handle available message from the open file 'f'. ;  ;  ~TProofServLogHandler () override;  Handle available message in the open file. ;  ; Bool_t IsValid ();  ; Bool_t Notify () override;  Handle available message in the open file. ;  ; Bool_t ReadNotify () override;  Notify when something can be read from the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TFileHandler;  TFileHandler (int fd, int mask);  Create a file descriptor event handler. ;  ; virtual ~TFileHandler ();  ; void Add () override;  Add file event handler to system fil",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:1804,Modifiability,inherit,inherited,1804,"enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TProofServLogHandler (const char *cmd, TSocket *s, const char *pfx="""");  Execute 'cmd' in a pipe and handle output messages from the related file. ;  ;  TProofServLogHandler (FILE *f, TSocket *s, const char *pfx="""");  Handle available message from the open file 'f'. ;  ;  ~TProofServLogHandler () override;  Handle available message in the open file. ;  ; Bool_t IsValid ();  ; Bool_t Notify () override;  Handle available message in the open file. ;  ; Bool_t ReadNotify () override;  Notify when something can be read from the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TFileHandler;  TFileHandler (int fd, int mask);  Create a file descriptor event handler. ;  ; virtual ~TFileHandler ();  ; void Add () override;  Add file event handler to system file handler list. ;  ; int GetFd () const;  ; virtual Bool_t HasReadInterest ();  True if handler is interested in read events. ;  ; virtual Bool_t HasWriteInterest ();  True if handler is interested in write events. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsReadReady () const;  ; virtual Bool_t IsWriteReady () const;  ; void Remove () override;  Remove file event handler from system file handler list. ;  ; virtual void ResetReadyMask ();  ; void SetFd (int fd);  ; virtual void SetInterest (Int_t mask);  Set interest mask to 'mask'. ;  ; virtual void SetReadReady ();  ; virtual void SetWriteReady ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Bool_t WriteNotify ();  Notify when something can be written to t",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:2914,Modifiability,inherit,inherited,2914,"dd file event handler to system file handler list. ;  ; int GetFd () const;  ; virtual Bool_t HasReadInterest ();  True if handler is interested in read events. ;  ; virtual Bool_t HasWriteInterest ();  True if handler is interested in write events. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsReadReady () const;  ; virtual Bool_t IsWriteReady () const;  ; void Remove () override;  Remove file event handler from system file handler list. ;  ; virtual void ResetReadyMask ();  ; void SetFd (int fd);  ; virtual void SetInterest (Int_t mask);  Set interest mask to 'mask'. ;  ; virtual void SetReadReady ();  ; virtual void SetWriteReady ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Bool_t WriteNotify ();  Notify when something can be written to the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be over",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:3494,Modifiability,inherit,inherited,3494," fd);  ; virtual void SetInterest (Int_t mask);  Set interest mask to 'mask'. ;  ; virtual void SetReadReady ();  ; virtual void SetWriteReady ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Bool_t WriteNotify ();  Notify when something can be written to the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:4891,Modifiability,inherit,inheritance,4891,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:7102,Modifiability,inherit,inherits,7102,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:7219,Modifiability,inherit,inherits,7219,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:10917,Modifiability,inherit,inherited,10917," SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const char *signal, const T &arg);  Activate signal with single paramet",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:13135,Modifiability,inherit,inherited,13135,"char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static Int_t GetCmdRtn ();  Static method to get the return code from the execution of a command via the pipe. ;  ; static void SetDefaultPrefix (const char *pfx);  Static method to set the default prefix. ;  ;  Static Public Member Functions inherited from TFileHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:13351,Modifiability,inherit,inherited,13351,"char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static Int_t GetCmdRtn ();  Static method to get the return code from the execution of a command via the pipe. ;  ; static void SetDefaultPrefix (const char *pfx);  Static method to set the default prefix. ;  ;  Static Public Member Functions inherited from TFileHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:13569,Modifiability,inherit,inherited,13569,"char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static Int_t GetCmdRtn ();  Static method to get the return code from the execution of a command via the pipe. ;  ; static void SetDefaultPrefix (const char *pfx);  Static method to set the default prefix. ;  ;  Static Public Member Functions inherited from TFileHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:14087,Modifiability,inherit,inherited,14087,"mber Functions inherited from TFileHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullpt",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:15440,Modifiability,inherit,inherited,15440,"make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Private Attributes; FILE * fFile;  ; TString fPfx;  ; TSocket * fSocket;  . Static Private Attributes; static Int_t fgCmdRtn = 0;  ; static TString fgPfx = """";  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TFileHandler;  TFileHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object.",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:15539,Modifiability,inherit,inherited,15539,"make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Private Attributes; FILE * fFile;  ; TString fPfx;  ; TSocket * fSocket;  . Static Private Attributes; static Int_t fgCmdRtn = 0;  ; static TString fgPfx = """";  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TFileHandler;  TFileHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object.",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:15617,Modifiability,inherit,inherited,15617,"make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Private Attributes; FILE * fFile;  ; TString fPfx;  ; TSocket * fSocket;  . Static Private Attributes; static Int_t fgCmdRtn = 0;  ; static TString fgPfx = """";  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TFileHandler;  TFileHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object.",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:15828,Modifiability,inherit,inherited,15828," const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Private Attributes; FILE * fFile;  ; TString fPfx;  ; TSocket * fSocket;  . Static Private Attributes; static Int_t fgCmdRtn = 0;  ; static TString fgPfx = """";  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TFileHandler;  TFileHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TFileHandler; int fFileNum;  ; int fMask;  ; int fReadyMask;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from t",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:15941,Modifiability,inherit,inherited,15941," const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Private Attributes; FILE * fFile;  ; TString fPfx;  ; TSocket * fSocket;  . Static Private Attributes; static Int_t fgCmdRtn = 0;  ; static TString fgPfx = """";  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TFileHandler;  TFileHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TFileHandler; int fFileNum;  ; int fMask;  ; int fReadyMask;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from t",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:16790,Modifiability,inherit,inherited,16790,"ectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TFileHandler; int fFileNum;  ; int fMask;  ; int fReadyMask;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TProofServ.h>. Inheritance diagram for TProofServLogHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TProofServLogHandler::EStatusBits. EnumeratorkFileIsPipe . Definition at line 385 of file TProofServ.h. Constructor & Destructor Documentation. ◆ TProofServLogHandler() [1/2]. TProofServLogHandler::TProofServLogHandler ; (; const char * ; cmd, . TSocket * ; s, . const char * ; pfx = """" . ). Execute 'cmd' in a pipe and handle output messages from the related file. ; Definition at line 240 of file TProofServ.cxx. ◆ TProofServLogHandler() [2/2]. TProofServLogHandler::TProofServLogHandler ; (; FILE * ; f, . TSocket * ; s, . const char * ; pfx = """" .",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:16891,Modifiability,inherit,inherited,16891,"ectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TFileHandler; int fFileNum;  ; int fMask;  ; int fReadyMask;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TProofServ.h>. Inheritance diagram for TProofServLogHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TProofServLogHandler::EStatusBits. EnumeratorkFileIsPipe . Definition at line 385 of file TProofServ.h. Constructor & Destructor Documentation. ◆ TProofServLogHandler() [1/2]. TProofServLogHandler::TProofServLogHandler ; (; const char * ; cmd, . TSocket * ; s, . const char * ; pfx = """" . ). Execute 'cmd' in a pipe and handle output messages from the related file. ; Definition at line 240 of file TProofServ.cxx. ◆ TProofServLogHandler() [2/2]. TProofServLogHandler::TProofServLogHandler ; (; FILE * ; f, . TSocket * ; s, . const char * ; pfx = """" .",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:17104,Modifiability,inherit,inherited,17104,"ectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TFileHandler; int fFileNum;  ; int fMask;  ; int fReadyMask;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TProofServ.h>. Inheritance diagram for TProofServLogHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TProofServLogHandler::EStatusBits. EnumeratorkFileIsPipe . Definition at line 385 of file TProofServ.h. Constructor & Destructor Documentation. ◆ TProofServLogHandler() [1/2]. TProofServLogHandler::TProofServLogHandler ; (; const char * ; cmd, . TSocket * ; s, . const char * ; pfx = """" . ). Execute 'cmd' in a pipe and handle output messages from the related file. ; Definition at line 240 of file TProofServ.cxx. ◆ TProofServLogHandler() [2/2]. TProofServLogHandler::TProofServLogHandler ; (; FILE * ; f, . TSocket * ; s, . const char * ; pfx = """" .",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:6733,Security,hash,hash,6733," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServLogHandler.html:18485,Testability,log,log,18485," line 385 of file TProofServ.h. Constructor & Destructor Documentation. ◆ TProofServLogHandler() [1/2]. TProofServLogHandler::TProofServLogHandler ; (; const char * ; cmd, . TSocket * ; s, . const char * ; pfx = """" . ). Execute 'cmd' in a pipe and handle output messages from the related file. ; Definition at line 240 of file TProofServ.cxx. ◆ TProofServLogHandler() [2/2]. TProofServLogHandler::TProofServLogHandler ; (; FILE * ; f, . TSocket * ; s, . const char * ; pfx = """" . ). Handle available message from the open file 'f'. ; Definition at line 268 of file TProofServ.cxx. ◆ ~TProofServLogHandler(). TProofServLogHandler::~TProofServLogHandler ; (; ). override . Handle available message in the open file. ; Definition at line 286 of file TProofServ.cxx. Member Function Documentation. ◆ GetCmdRtn(). Int_t TProofServLogHandler::GetCmdRtn ; (; ). static . Static method to get the return code from the execution of a command via the pipe. ; This is always 0 when the log handler is not used with a pipe ; Definition at line 344 of file TProofServ.cxx. ◆ IsValid(). Bool_t TProofServLogHandler::IsValid ; (; ). inline . Definition at line 390 of file TProofServ.h. ◆ Notify(). Bool_t TProofServLogHandler::Notify ; (; ). overridevirtual . Handle available message in the open file. ; Reimplemented from TFileHandler.; Definition at line 303 of file TProofServ.cxx. ◆ ReadNotify(). Bool_t TProofServLogHandler::ReadNotify ; (; ). inlineoverridevirtual . Notify when something can be read from the descriptor associated with this handler. ; Reimplemented from TFileHandler.; Definition at line 393 of file TProofServ.h. ◆ SetDefaultPrefix(). void TProofServLogHandler::SetDefaultPrefix ; (; const char * ; pfx). static . Static method to set the default prefix. ; Definition at line 336 of file TProofServ.cxx. Member Data Documentation. ◆ fFile. FILE* TProofServLogHandler::fFile. private . Definition at line 378 of file TProofServ.h. ◆ fgCmdRtn. Int_t TProofServLogHandler::fgCmdRtn = 0. stati",MatchSource.WIKI,doc/master/classTProofServLogHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html
https://root.cern/doc/master/classTProofServSigPipeHandler.html:3551,Availability,error,error,3551,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTProofServSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServSigPipeHandler.html
https://root.cern/doc/master/classTProofServSigPipeHandler.html:3640,Availability,error,error,3640,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTProofServSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServSigPipeHandler.html
https://root.cern/doc/master/classTProofServSigPipeHandler.html:3795,Availability,error,error,3795,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTProofServSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServSigPipeHandler.html
https://root.cern/doc/master/classTProofServSigPipeHandler.html:4092,Availability,error,error,4092,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTProofServSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServSigPipeHandler.html
https://root.cern/doc/master/classTProofServSigPipeHandler.html:8527,Availability,error,error,8527," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTProofServSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServSigPipeHandler.html
https://root.cern/doc/master/classTProofServSigPipeHandler.html:3557,Integrability,message,message,3557,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTProofServSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServSigPipeHandler.html
https://root.cern/doc/master/classTProofServSigPipeHandler.html:4098,Integrability,message,message,4098,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTProofServSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServSigPipeHandler.html
https://root.cern/doc/master/classTProofServSigPipeHandler.html:5300,Integrability,message,message,5300,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTProofServSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServSigPipeHandler.html
https://root.cern/doc/master/classTProofServSigPipeHandler.html:8533,Integrability,message,message,8533," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTProofServSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServSigPipeHandler.html
https://root.cern/doc/master/classTProofServSigPipeHandler.html:8906,Integrability,message,message,8906," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, voi",MatchSource.WIKI,doc/master/classTProofServSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServSigPipeHandler.html
https://root.cern/doc/master/classTProofServSigPipeHandler.html:465,Modifiability,inherit,inherited,465,". ROOT: TProofServSigPipeHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TProofServSigPipeHandler Class Reference. . Definition at line 196 of file TProofServ.cxx. Public Member Functions;  TProofServSigPipeHandler (TProofServ *s);  ; Bool_t Notify () override;  Handle this signal. ;  ;  Public Member Functions inherited from TSignalHandler;  TSignalHandler (ESignals sig, Bool_t sync=kTRUE);  Create signal event handler. ;  ; virtual ~TSignalHandler ();  ; void Add () override;  Add signal handler to system signal handler list. ;  ; void Delay ();  ; ESignals GetSignal () const;  ; void HandleDelayedSignal ();  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when signal occurs. ;  ; void Remove () override;  Remove signal handler from system signal handler list. ;  ; void SetSignal (ESignals sig);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) ",MatchSource.WIKI,doc/master/classTProofServSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServSigPipeHandler.html
https://root.cern/doc/master/classTProofServSigPipeHandler.html:1210,Modifiability,inherit,inherited,1210,"fServSigPipeHandler Class Reference. . Definition at line 196 of file TProofServ.cxx. Public Member Functions;  TProofServSigPipeHandler (TProofServ *s);  ; Bool_t Notify () override;  Handle this signal. ;  ;  Public Member Functions inherited from TSignalHandler;  TSignalHandler (ESignals sig, Bool_t sync=kTRUE);  Create signal event handler. ;  ; virtual ~TSignalHandler ();  ; void Add () override;  Add signal handler to system signal handler list. ;  ; void Delay ();  ; ESignals GetSignal () const;  ; void HandleDelayedSignal ();  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when signal occurs. ;  ; void Remove () override;  Remove signal handler from system signal handler list. ;  ; void SetSignal (ESignals sig);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser",MatchSource.WIKI,doc/master/classTProofServSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServSigPipeHandler.html
https://root.cern/doc/master/classTProofServSigPipeHandler.html:1790,Modifiability,inherit,inherited,1790,"; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when signal occurs. ;  ; void Remove () override;  Remove signal handler from system signal handler list. ;  ; void SetSignal (ESignals sig);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTProofServSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServSigPipeHandler.html
https://root.cern/doc/master/classTProofServSigPipeHandler.html:3187,Modifiability,inherit,inheritance,3187,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTProofServSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServSigPipeHandler.html
https://root.cern/doc/master/classTProofServSigPipeHandler.html:5398,Modifiability,inherit,inherits,5398,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTProofServSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServSigPipeHandler.html
https://root.cern/doc/master/classTProofServSigPipeHandler.html:5515,Modifiability,inherit,inherits,5515,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTProofServSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServSigPipeHandler.html
https://root.cern/doc/master/classTProofServSigPipeHandler.html:9213,Modifiability,inherit,inherited,9213," SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const char *signal, const T &arg);  Activate signal with single paramet",MatchSource.WIKI,doc/master/classTProofServSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServSigPipeHandler.html
https://root.cern/doc/master/classTProofServSigPipeHandler.html:11243,Modifiability,inherit,inherited,11243,"t, const T &... params);  Emit a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Private Attributes; TProofServ * fServ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TSignalHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  St",MatchSource.WIKI,doc/master/classTProofServSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServSigPipeHandler.html
https://root.cern/doc/master/classTProofServSigPipeHandler.html:11899,Modifiability,inherit,inherited,11899,"d Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TSignalHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (con",MatchSource.WIKI,doc/master/classTProofServSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServSigPipeHandler.html
https://root.cern/doc/master/classTProofServSigPipeHandler.html:12117,Modifiability,inherit,inherited,12117,"d Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TSignalHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (con",MatchSource.WIKI,doc/master/classTProofServSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServSigPipeHandler.html
https://root.cern/doc/master/classTProofServSigPipeHandler.html:12335,Modifiability,inherit,inherited,12335,"d Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TSignalHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (con",MatchSource.WIKI,doc/master/classTProofServSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServSigPipeHandler.html
https://root.cern/doc/master/classTProofServSigPipeHandler.html:12853,Modifiability,inherit,inherited,12853,"er Functions inherited from TSignalHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullpt",MatchSource.WIKI,doc/master/classTProofServSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServSigPipeHandler.html
https://root.cern/doc/master/classTProofServSigPipeHandler.html:14013,Modifiability,inherit,inherited,14013,"t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSignalHandler;  TSignalHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; stat",MatchSource.WIKI,doc/master/classTProofServSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServSigPipeHandler.html
https://root.cern/doc/master/classTProofServSigPipeHandler.html:14112,Modifiability,inherit,inherited,14112,"t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSignalHandler;  TSignalHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; stat",MatchSource.WIKI,doc/master/classTProofServSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServSigPipeHandler.html
https://root.cern/doc/master/classTProofServSigPipeHandler.html:14194,Modifiability,inherit,inherited,14194,"t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSignalHandler;  TSignalHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; stat",MatchSource.WIKI,doc/master/classTProofServSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServSigPipeHandler.html
https://root.cern/doc/master/classTProofServSigPipeHandler.html:14405,Modifiability,inherit,inherited,14405,");  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSignalHandler;  TSignalHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TSignalHandler; Int_t fDelay;  ; ESignals fSignal;  ; Bool_t fSync;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals",MatchSource.WIKI,doc/master/classTProofServSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServSigPipeHandler.html
https://root.cern/doc/master/classTProofServSigPipeHandler.html:14518,Modifiability,inherit,inherited,14518,");  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSignalHandler;  TSignalHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TSignalHandler; Int_t fDelay;  ; ESignals fSignal;  ; Bool_t fSync;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals",MatchSource.WIKI,doc/master/classTProofServSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServSigPipeHandler.html
https://root.cern/doc/master/classTProofServSigPipeHandler.html:15367,Modifiability,inherit,inherited,15367,"rgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TSignalHandler; Int_t fDelay;  ; ESignals fSignal;  ; Bool_t fSync;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TProofServSigPipeHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofServSigPipeHandler(). TProofServSigPipeHandler::TProofServSigPipeHandler ; (; TProofServ * ; s). inline . Definition at line 199 of file TProofServ.cxx. Member Function Documentation. ◆ Notify(). Bool_t TProofServSigPipeHandler::Notify ; (; ). overridevirtual . Handle this signal. ; Implements TSysEvtHandler.; Definition at line 207 of file TProofServ.cxx. Member Data Documentation. ◆ fServ. TProofServ* TProofServSigPipeHandler::fServ. private . Definition at line 197 of file TProofServ.cxx. proof/proof/src/TProofServ.cxx. TProofServSigPipeHandler. ROOT master - Refer",MatchSource.WIKI,doc/master/classTProofServSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServSigPipeHandler.html
https://root.cern/doc/master/classTProofServSigPipeHandler.html:15475,Modifiability,inherit,inherited,15475,"rgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TSignalHandler; Int_t fDelay;  ; ESignals fSignal;  ; Bool_t fSync;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TProofServSigPipeHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofServSigPipeHandler(). TProofServSigPipeHandler::TProofServSigPipeHandler ; (; TProofServ * ; s). inline . Definition at line 199 of file TProofServ.cxx. Member Function Documentation. ◆ Notify(). Bool_t TProofServSigPipeHandler::Notify ; (; ). overridevirtual . Handle this signal. ; Implements TSysEvtHandler.; Definition at line 207 of file TProofServ.cxx. Member Data Documentation. ◆ fServ. TProofServ* TProofServSigPipeHandler::fServ. private . Definition at line 197 of file TProofServ.cxx. proof/proof/src/TProofServ.cxx. TProofServSigPipeHandler. ROOT master - Refer",MatchSource.WIKI,doc/master/classTProofServSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServSigPipeHandler.html
https://root.cern/doc/master/classTProofServSigPipeHandler.html:15688,Modifiability,inherit,inherited,15688,"rgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TSignalHandler; Int_t fDelay;  ; ESignals fSignal;  ; Bool_t fSync;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TProofServSigPipeHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofServSigPipeHandler(). TProofServSigPipeHandler::TProofServSigPipeHandler ; (; TProofServ * ; s). inline . Definition at line 199 of file TProofServ.cxx. Member Function Documentation. ◆ Notify(). Bool_t TProofServSigPipeHandler::Notify ; (; ). overridevirtual . Handle this signal. ; Implements TSysEvtHandler.; Definition at line 207 of file TProofServ.cxx. Member Data Documentation. ◆ fServ. TProofServ* TProofServSigPipeHandler::fServ. private . Definition at line 197 of file TProofServ.cxx. proof/proof/src/TProofServ.cxx. TProofServSigPipeHandler. ROOT master - Refer",MatchSource.WIKI,doc/master/classTProofServSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServSigPipeHandler.html
https://root.cern/doc/master/classTProofServSigPipeHandler.html:5029,Security,hash,hash,5029," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTProofServSigPipeHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServSigPipeHandler.html
https://root.cern/doc/master/classTProofServTerminationHandler.html:3566,Availability,error,error,3566,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTProofServTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServTerminationHandler.html
https://root.cern/doc/master/classTProofServTerminationHandler.html:3655,Availability,error,error,3655,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTProofServTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServTerminationHandler.html
https://root.cern/doc/master/classTProofServTerminationHandler.html:3810,Availability,error,error,3810,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTProofServTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServTerminationHandler.html
https://root.cern/doc/master/classTProofServTerminationHandler.html:4107,Availability,error,error,4107,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTProofServTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServTerminationHandler.html
https://root.cern/doc/master/classTProofServTerminationHandler.html:8542,Availability,error,error,8542," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTProofServTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServTerminationHandler.html
https://root.cern/doc/master/classTProofServTerminationHandler.html:3572,Integrability,message,message,3572,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTProofServTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServTerminationHandler.html
https://root.cern/doc/master/classTProofServTerminationHandler.html:4113,Integrability,message,message,4113,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTProofServTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServTerminationHandler.html
https://root.cern/doc/master/classTProofServTerminationHandler.html:5315,Integrability,message,message,5315,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTProofServTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServTerminationHandler.html
https://root.cern/doc/master/classTProofServTerminationHandler.html:8548,Integrability,message,message,8548," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTProofServTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServTerminationHandler.html
https://root.cern/doc/master/classTProofServTerminationHandler.html:8921,Integrability,message,message,8921," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, voi",MatchSource.WIKI,doc/master/classTProofServTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServTerminationHandler.html
https://root.cern/doc/master/classTProofServTerminationHandler.html:480,Modifiability,inherit,inherited,480,". ROOT: TProofServTerminationHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TProofServTerminationHandler Class Reference. . Definition at line 152 of file TProofServ.cxx. Public Member Functions;  TProofServTerminationHandler (TProofServ *s);  ; Bool_t Notify () override;  Handle this interrupt. ;  ;  Public Member Functions inherited from TSignalHandler;  TSignalHandler (ESignals sig, Bool_t sync=kTRUE);  Create signal event handler. ;  ; virtual ~TSignalHandler ();  ; void Add () override;  Add signal handler to system signal handler list. ;  ; void Delay ();  ; ESignals GetSignal () const;  ; void HandleDelayedSignal ();  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when signal occurs. ;  ; void Remove () override;  Remove signal handler from system signal handler list. ;  ; void SetSignal (ESignals sig);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const",MatchSource.WIKI,doc/master/classTProofServTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServTerminationHandler.html
https://root.cern/doc/master/classTProofServTerminationHandler.html:1225,Modifiability,inherit,inherited,1225,"ationHandler Class Reference. . Definition at line 152 of file TProofServ.cxx. Public Member Functions;  TProofServTerminationHandler (TProofServ *s);  ; Bool_t Notify () override;  Handle this interrupt. ;  ;  Public Member Functions inherited from TSignalHandler;  TSignalHandler (ESignals sig, Bool_t sync=kTRUE);  Create signal event handler. ;  ; virtual ~TSignalHandler ();  ; void Add () override;  Add signal handler to system signal handler list. ;  ; void Delay ();  ; ESignals GetSignal () const;  ; void HandleDelayedSignal ();  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when signal occurs. ;  ; void Remove () override;  Remove signal handler from system signal handler list. ;  ; void SetSignal (ESignals sig);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser",MatchSource.WIKI,doc/master/classTProofServTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServTerminationHandler.html
https://root.cern/doc/master/classTProofServTerminationHandler.html:1805,Modifiability,inherit,inherited,1805,"; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when signal occurs. ;  ; void Remove () override;  Remove signal handler from system signal handler list. ;  ; void SetSignal (ESignals sig);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTProofServTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServTerminationHandler.html
https://root.cern/doc/master/classTProofServTerminationHandler.html:3202,Modifiability,inherit,inheritance,3202,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTProofServTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServTerminationHandler.html
https://root.cern/doc/master/classTProofServTerminationHandler.html:5413,Modifiability,inherit,inherits,5413,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTProofServTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServTerminationHandler.html
https://root.cern/doc/master/classTProofServTerminationHandler.html:5530,Modifiability,inherit,inherits,5530,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTProofServTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServTerminationHandler.html
https://root.cern/doc/master/classTProofServTerminationHandler.html:9228,Modifiability,inherit,inherited,9228," SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const char *signal, const T &arg);  Activate signal with single paramet",MatchSource.WIKI,doc/master/classTProofServTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServTerminationHandler.html
https://root.cern/doc/master/classTProofServTerminationHandler.html:11258,Modifiability,inherit,inherited,11258,"t, const T &... params);  Emit a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Private Attributes; TProofServ * fServ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TSignalHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  St",MatchSource.WIKI,doc/master/classTProofServTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServTerminationHandler.html
https://root.cern/doc/master/classTProofServTerminationHandler.html:11914,Modifiability,inherit,inherited,11914,"d Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TSignalHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (con",MatchSource.WIKI,doc/master/classTProofServTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServTerminationHandler.html
https://root.cern/doc/master/classTProofServTerminationHandler.html:12132,Modifiability,inherit,inherited,12132,"d Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TSignalHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (con",MatchSource.WIKI,doc/master/classTProofServTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServTerminationHandler.html
https://root.cern/doc/master/classTProofServTerminationHandler.html:12350,Modifiability,inherit,inherited,12350,"d Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TSignalHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (con",MatchSource.WIKI,doc/master/classTProofServTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServTerminationHandler.html
https://root.cern/doc/master/classTProofServTerminationHandler.html:12868,Modifiability,inherit,inherited,12868,"er Functions inherited from TSignalHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullpt",MatchSource.WIKI,doc/master/classTProofServTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServTerminationHandler.html
https://root.cern/doc/master/classTProofServTerminationHandler.html:14028,Modifiability,inherit,inherited,14028,"t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSignalHandler;  TSignalHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; stat",MatchSource.WIKI,doc/master/classTProofServTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServTerminationHandler.html
https://root.cern/doc/master/classTProofServTerminationHandler.html:14127,Modifiability,inherit,inherited,14127,"t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSignalHandler;  TSignalHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; stat",MatchSource.WIKI,doc/master/classTProofServTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServTerminationHandler.html
https://root.cern/doc/master/classTProofServTerminationHandler.html:14209,Modifiability,inherit,inherited,14209,"t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSignalHandler;  TSignalHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; stat",MatchSource.WIKI,doc/master/classTProofServTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServTerminationHandler.html
https://root.cern/doc/master/classTProofServTerminationHandler.html:14420,Modifiability,inherit,inherited,14420,");  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSignalHandler;  TSignalHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TSignalHandler; Int_t fDelay;  ; ESignals fSignal;  ; Bool_t fSync;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals",MatchSource.WIKI,doc/master/classTProofServTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServTerminationHandler.html
https://root.cern/doc/master/classTProofServTerminationHandler.html:14533,Modifiability,inherit,inherited,14533,");  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSignalHandler;  TSignalHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TSignalHandler; Int_t fDelay;  ; ESignals fSignal;  ; Bool_t fSync;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals",MatchSource.WIKI,doc/master/classTProofServTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServTerminationHandler.html
https://root.cern/doc/master/classTProofServTerminationHandler.html:15382,Modifiability,inherit,inherited,15382,"rgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TSignalHandler; Int_t fDelay;  ; ESignals fSignal;  ; Bool_t fSync;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TProofServTerminationHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofServTerminationHandler(). TProofServTerminationHandler::TProofServTerminationHandler ; (; TProofServ * ; s). inline . Definition at line 155 of file TProofServ.cxx. Member Function Documentation. ◆ Notify(). Bool_t TProofServTerminationHandler::Notify ; (; ). overridevirtual . Handle this interrupt. ; Implements TSysEvtHandler.; Definition at line 163 of file TProofServ.cxx. Member Data Documentation. ◆ fServ. TProofServ* TProofServTerminationHandler::fServ. private . Definition at line 153 of file TProofServ.cxx. proof/proof/src/TProofServ.cxx. TProofServTerminat",MatchSource.WIKI,doc/master/classTProofServTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServTerminationHandler.html
https://root.cern/doc/master/classTProofServTerminationHandler.html:15490,Modifiability,inherit,inherited,15490,"rgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TSignalHandler; Int_t fDelay;  ; ESignals fSignal;  ; Bool_t fSync;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TProofServTerminationHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofServTerminationHandler(). TProofServTerminationHandler::TProofServTerminationHandler ; (; TProofServ * ; s). inline . Definition at line 155 of file TProofServ.cxx. Member Function Documentation. ◆ Notify(). Bool_t TProofServTerminationHandler::Notify ; (; ). overridevirtual . Handle this interrupt. ; Implements TSysEvtHandler.; Definition at line 163 of file TProofServ.cxx. Member Data Documentation. ◆ fServ. TProofServ* TProofServTerminationHandler::fServ. private . Definition at line 153 of file TProofServ.cxx. proof/proof/src/TProofServ.cxx. TProofServTerminat",MatchSource.WIKI,doc/master/classTProofServTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServTerminationHandler.html
https://root.cern/doc/master/classTProofServTerminationHandler.html:15703,Modifiability,inherit,inherited,15703,"rgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TSignalHandler; Int_t fDelay;  ; ESignals fSignal;  ; Bool_t fSync;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TProofServTerminationHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofServTerminationHandler(). TProofServTerminationHandler::TProofServTerminationHandler ; (; TProofServ * ; s). inline . Definition at line 155 of file TProofServ.cxx. Member Function Documentation. ◆ Notify(). Bool_t TProofServTerminationHandler::Notify ; (; ). overridevirtual . Handle this interrupt. ; Implements TSysEvtHandler.; Definition at line 163 of file TProofServ.cxx. Member Data Documentation. ◆ fServ. TProofServ* TProofServTerminationHandler::fServ. private . Definition at line 153 of file TProofServ.cxx. proof/proof/src/TProofServ.cxx. TProofServTerminat",MatchSource.WIKI,doc/master/classTProofServTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServTerminationHandler.html
https://root.cern/doc/master/classTProofServTerminationHandler.html:5044,Security,hash,hash,5044," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTProofServTerminationHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofServTerminationHandler.html
https://root.cern/doc/master/classTProofSuperMaster.html:6648,Availability,echo,echo,6648," Delete draw feedback object. ;  ; void DeleteParameters (const char *wildcard);  Delete the input list parameters specified by a wildcard (e.g. ;  ; void Detach (Option_t *opt="""");  Detach this instance to its proofserv. ;  ; void DisableGoAsyn ();  Signal to disable related switches. ;  ; Int_t DownloadPackage (const char *par, const char *dstdir=0);  Download a PROOF archive (PAR file) from the master package repository. ;  ; Long64_t DrawSelect (const char *dsetname, const char *varexp, const char *selection="""", Option_t *option="""", Long64_t nentries=-1, Long64_t firstentry=0, TObject *enl=0);  Execute the specified drawing action on a data set which is stored on the master with name 'dsetname'. ;  ; virtual Long64_t DrawSelect (TDSet *dset, const char *varexp, const char *selection="""", Option_t *option="""", Long64_t nentries=-1, Long64_t firstentry=0);  Execute the specified drawing action on a data set (TDSet). ;  ; virtual Int_t Echo (const char *str);  Sends a string to master and workers and expect them to echo it back to the client via a message. ;  ; virtual Int_t Echo (const TObject *obj);  Sends an object to master and workers and expect them to send back a message with the output of its TObject::Print(). ;  ; Int_t EnablePackage (const char *package, Bool_t notOnClient=kFALSE, TList *workers=0);  Enable specified package. ;  ; Int_t EnablePackage (const char *package, const char *loadopts, Bool_t notOnClient=kFALSE, TList *workers=0);  Enable specified package. ;  ; Int_t EnablePackage (const char *package, TList *loadopts, Bool_t notOnClient=kFALSE, TList *workers=0);  Enable specified package. ;  ; Int_t Exec (const char *cmd, Bool_t plusMaster=kFALSE);  Send command to be executed on the PROOF master and/or slaves. ;  ; Int_t Exec (const char *cmd, const char *ord, Bool_t logtomacro=kFALSE);  Send command to be executed on node of ordinal 'ord' (use ""0"" for master). ;  ; virtual Bool_t ExistsDataSet (const char *dataset);  Returns kTRUE if 'dataset' ",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:9281,Availability,avail,available,9281,"r * GetDataPoolUrl () const;  ; virtual TFileCollection * GetDataSet (const char *dataset, const char *optStr="""");  Get a list of TFileInfo objects describing the files of the specified dataset. ;  ; TMap * GetDataSetQuota (const char *optStr="""");  returns a map of the quotas of all groups ;  ; virtual TMap * GetDataSets (const char *uri="""", const char *optStr="""");  Lists all datasets that match given uri. ;  ; TString Getenv (const char *env, const char *ord=""0"");  Get value of environment variable 'env' on node 'ord'. ;  ; TList * GetFeedbackList () const;  Return feedback list. ;  ; const char * GetGroup () const;  ; const char * GetImage () const;  ; TList * GetInputList ();  Get input list. ;  ; TMacro * GetLastLog ();  Fill a TMacro with the log lines since the last reading (fLogFileR) Return (TMacro *)0 if no line was logged. ;  ; TList * GetListOfEnabledPackages ();  Get from the master the list of names of the packages enabled. ;  ; TList * GetListOfPackages ();  Get from the master the list of names of the packages available. ;  ; virtual TList * GetListOfQueries (Option_t *opt="""");  Ask the master for the list of queries. ;  ; TList * GetListOfSlaveInfos ();  Returns list of TSlaveInfo's. In case of error return 0. ;  ; TList * GetLoadedMacros () const;  ; void GetLog (Int_t start=-1, Int_t end=-1);  Ask for remote logs in the range [start, end]. ;  ; Int_t GetLogLevel () const;  ; TMacro * GetMacroLog ();  ; TProofMgr * GetManager ();  ; const char * GetMaster () const;  ; void GetMaxQueries ();  Get max number of queries whose full results are kept in the remote sandbox. ;  ; TFileCollection * GetMissingFiles (TQueryResult *qr=0);  Get a TFileCollection with the files missing in the query described by 'qr' or the last query if qr is null (default). ;  ; Int_t GetNumberOfDrawQueries ();  ; Int_t GetNumberOfQueries ();  Number of queries processed by this session. ;  ; TObject * GetOutput (const char *name);  Get specified object that has been produced dur",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:9470,Availability,error,error,9470,"har *optStr="""");  returns a map of the quotas of all groups ;  ; virtual TMap * GetDataSets (const char *uri="""", const char *optStr="""");  Lists all datasets that match given uri. ;  ; TString Getenv (const char *env, const char *ord=""0"");  Get value of environment variable 'env' on node 'ord'. ;  ; TList * GetFeedbackList () const;  Return feedback list. ;  ; const char * GetGroup () const;  ; const char * GetImage () const;  ; TList * GetInputList ();  Get input list. ;  ; TMacro * GetLastLog ();  Fill a TMacro with the log lines since the last reading (fLogFileR) Return (TMacro *)0 if no line was logged. ;  ; TList * GetListOfEnabledPackages ();  Get from the master the list of names of the packages enabled. ;  ; TList * GetListOfPackages ();  Get from the master the list of names of the packages available. ;  ; virtual TList * GetListOfQueries (Option_t *opt="""");  Ask the master for the list of queries. ;  ; TList * GetListOfSlaveInfos ();  Returns list of TSlaveInfo's. In case of error return 0. ;  ; TList * GetLoadedMacros () const;  ; void GetLog (Int_t start=-1, Int_t end=-1);  Ask for remote logs in the range [start, end]. ;  ; Int_t GetLogLevel () const;  ; TMacro * GetMacroLog ();  ; TProofMgr * GetManager ();  ; const char * GetMaster () const;  ; void GetMaxQueries ();  Get max number of queries whose full results are kept in the remote sandbox. ;  ; TFileCollection * GetMissingFiles (TQueryResult *qr=0);  Get a TFileCollection with the files missing in the query described by 'qr' or the last query if qr is null (default). ;  ; Int_t GetNumberOfDrawQueries ();  ; Int_t GetNumberOfQueries ();  Number of queries processed by this session. ;  ; TObject * GetOutput (const char *name);  Get specified object that has been produced during the processing (see Process()). ;  ; TList * GetOutputList ();  Get list with all object created during processing (see Process()). ;  ; TList * GetOutputNames ();  FIXME: to be written. ;  ; Int_t GetParallel () const;  Return",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:13810,Availability,avail,availability,13810,"TRUE, TList *wrks=0);  Load the specified macro on master, workers and, if notOnClient is kFALSE, on the client. ;  ; void LogMessage (const char *msg, Bool_t all);  Log a message into the appropriate window by emitting a signal. ;  ; Int_t Ping ();  Ping PROOF. Returns 1 if master server responded. ;  ; void Print (Option_t *option="""") const override;  Print status of PROOF cluster. ;  ; void Progress (Long64_t total, Long64_t processed);  Get query progress information. ;  ; void Progress (Long64_t total, Long64_t processed, Long64_t bytesread, Float_t initTime, Float_t procTime, Float_t evtrti, Float_t mbrti);  Get query progress information. ;  ; void Progress (Long64_t total, Long64_t processed, Long64_t bytesread, Float_t initTime, Float_t procTime, Float_t evtrti, Float_t mbrti, Int_t actw, Int_t tses, Float_t eses);  Get query progress information. ;  ; void PutLog (TQueryResult *qr);  Display log of query pq into the log window frame. ;  ; void QueryResultReady (const char *ref);  Notify availability of a query result. ;  ; virtual Bool_t RegisterDataSet (const char *name, TFileCollection *dataset, const char *optStr="""");  Register the 'dataSet' on the cluster under the current user, group and the given 'dataSetName'. ;  ; Int_t Remove (const char *queryref, Bool_t all=kFALSE);  Send remove request for the query specified by ref. ;  ; Int_t Remove (Int_t query, Bool_t all=kFALSE);  Send remove request for the qry-th query in fQueries. ;  ; void RemoveChain (TChain *chain);  Remove chain from data set. ;  ; virtual Int_t RemoveDataSet (const char *dataset, const char *optStr="""");  Remove the specified dataset from the PROOF cluster. ;  ; Int_t RemoveDynamicPath (const char *libpath, Bool_t onClient=kFALSE);  Remove 'libpath' from the lib path search. ;  ; void RemoveFeedback (const char *name);  Remove object from feedback list. ;  ; Int_t RemoveIncludePath (const char *incpath, Bool_t onClient=kFALSE);  Remove 'incpath' from the inc path search. ;  ; virtua",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:16150,Availability,mask,mask,16150," query specified by ref. ;  ; Int_t Retrieve (Int_t query, const char *path=0);  Send retrieve request for the qry-th query in fQueries. ;  ; Int_t SavePerfTree (const char *pf=0, const char *qref=0);  Save performance information from TPerfStats to file 'pf'. ;  ; void SendDataSetStatus (const char *msg, UInt_t n, UInt_t tot, Bool_t st);  Send or notify data set status. ;  ; Bool_t SendingLogToWindow () const;  ; void SendLogToWindow (Bool_t mode);  ; void SetActive (Bool_t=kTRUE);  ; virtual void SetAlias (const char *alias="""");  Set an alias for this session. ;  ; void SetDataPoolUrl (const char *url);  ; virtual Int_t SetDataSetTreeName (const char *dataset, const char *treename);  Set/Change the name of the default tree. ;  ; void SetDrawFeedbackOption (TDrawFeedback *f, Option_t *opt);  Set draw feedback option. ;  ; void SetInputDataFile (const char *datafile);  Set the file to be used to optimally distribute the input data objects. ;  ; void SetLogLevel (Int_t level, UInt_t mask=TProofDebug::kAll);  Set server logging level. ;  ; void SetManager (TProofMgr *mgr);  Set manager and schedule its destruction after this for clean operations. ;  ; void SetMaxDrawQueries (Int_t max);  Set max number of draw queries whose results are saved. ;  ; Int_t SetParallel (Int_t nodes=-1, Bool_t random=kFALSE);  Tell PROOF how many slaves to use in parallel. ;  ; void SetParameter (const char *par, const char *value);  Set input list parameter. ;  ; void SetParameter (const char *par, Double_t value);  Set an input list parameter. ;  ; void SetParameter (const char *par, Int_t value);  Set an input list parameter. ;  ; void SetParameter (const char *par, Long64_t value);  Set an input list parameter. ;  ; void SetParameter (const char *par, Long_t value);  Set an input list parameter. ;  ; void SetPerfTree (const char *pf=""perftree.root"", Bool_t withWrks=kFALSE);  Enable/Disable saving of the performance tree. ;  ; void SetPrintProgress (PrintProgress_t pp);  ; void SetProgre",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:20413,Availability,avail,available,20413,"rs. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Touch ();  Ping PROOF slaves. Returns the number of slaves that responded. ;  ; Int_t UploadDataSet (const char *, const char *, const char *=0, Int_t=0, TList *=0);  *** This function is deprecated and will disappear in future versions *** *** It is just a wrapper around TFile::Cp. ;  ; Int_t UploadDataSet (const char *, TList *, const char *=0, Int_t=0, TList *=0);  *** This function is deprecated and will disappear in future versions *** *** It is just a wrapper around TFile::Cp. ;  ; Int_t UploadDataSetFromFile (const char *, const char *, const char *=0, Int_t=0, TList *=0);  *** This function is deprecated and will disappear in future versions *** *** It is just a wrapper around TFile::Cp. ;  ; Int_t UploadPackage (const char *par, EUploadPackageOpt opt=kUntar, TList *workers=0);  Upload a PROOF archive (PAR file). ;  ; Bool_t UseDynamicStartup () const;  ; virtual Int_t VerifyDataSet (const char *dataset, const char *optStr="""");  Verify if all files in the specified dataset are available. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value f",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:23353,Availability,error,error,23353,"option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:23442,Availability,error,error,23442,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:23597,Availability,error,error,23597,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:23894,Availability,error,error,23894,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:27837,Availability,error,error,27837,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:32394,Availability,failure,failure,32394,"or in the files specified in there. ;  ; static Int_t GetParameter (TCollection *c, const char *par, Double_t &value);  Get the value from the specified parameter from the specified collection. ;  ; static Int_t GetParameter (TCollection *c, const char *par, Int_t &value);  Get the value from the specified parameter from the specified collection. ;  ; static Int_t GetParameter (TCollection *c, const char *par, Long64_t &value);  Get the value from the specified parameter from the specified collection. ;  ; static Int_t GetParameter (TCollection *c, const char *par, Long_t &value);  Get the value from the specified parameter from the specified collection. ;  ; static Int_t GetParameter (TCollection *c, const char *par, TString &value);  Get the value from the specified parameter from the specified collection. ;  ; static void LogViewer (const char *url=0, Int_t sessionidx=0);  Start the log viewer window usign the plugin manager. ;  ; static TProofMgr * Mgr (const char *url);  Get instance of the effective manager for 'url' Return 0 on failure. ;  ; static TProof * Open (const char *url=0, const char *conffile=0, const char *confdir=0, Int_t loglevel=0);  Start a PROOF session on a specific cluster. ;  ; static void Reset (const char *url, Bool_t hard=kFALSE);  Wrapper around TProofMgr::Reset(...). ;  ; static void ResetEnvVars ();  Clear the list of environment variables passed to proofserv on the master and slaves. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ; ",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:37192,Availability,down,down,37192,"g () const;  ; Int_t GetSandbox (TString &sb, Bool_t assert=kFALSE, const char *rc=0);  Set the sandbox path from ' Proof.Sandbox' or the alternative var 'rc'. ;  ; void HandleLibIncPath (const char *what, Bool_t add, const char *dirs);  Handle lib, inc search paths modification request. ;  ; Int_t HandleOutputOptions (TString &opt, TString &target, Int_t action);  Extract from opt information about output handling settings. ;  ; Int_t Init (const char *masterurl, const char *conffile, const char *confdir, Int_t loglevel, const char *alias=0);  Start the PROOF environment. ;  ; void InitMembers ();  Default initializations. ;  ; virtual Int_t PollForNewWorkers ();  Asks the PROOF Serv for new workers in Dynamic Startup mode and activates them. ;  ; void PrepareInputDataFile (TString &dataFile);  Prepare the file with the input data objects to be sent the master; the objects are taken from the dedicated list and / or the specified file. ;  ; Int_t RemoveWorkers (TList *wrks);  Used for shuting down the workres after a query is finished. ;  ; virtual void SaveWorkerInfo ();  Save information about the worker set in the file .workers in the working dir. ;  ; Int_t SendFile (const char *file, Int_t opt=(kBinary|kForward|kCp|kCpBin), const char *rfile=0, TSlave *sl=0);  Send a file to master or slave servers. ;  ; virtual void SendInputDataFile ();  Send the input data objects to the master; the objects are taken from the dedicated list and / or the specified file. ;  ; void SetDSet (TDSet *dset);  ; void SetFeedback (TString &opt, TString &optfb, Int_t action);  Extract from opt in optfb information about wanted feedback settings. ;  ; void SetPlayer (TVirtualProofPlayer *player);  Set a new PROOF player. ;  ; void SetupWorkersEnv (TList *wrks, Bool_t increasingpool=kFALSE);  Set up packages, loaded macros, include and lib paths ... ;  ; void UpdateDialog ();  Final update of the progress dialog. ;  ; Int_t VerifyDataSetParallel (const char *uri, const char *optStr);  I",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:48470,Availability,error,error,48470,"ath is followed by a ',' (i.e. p->Process(""datasets.txt,"",...) with the dataset names listed in 'datasets.txt') in which case they are treated as in 2); the file is open in raw mode with TFile::Open and therefore it cane be remote, e.g. on a Web server. Each <dsetj> has the format specified above for the single dataset processing, included wildcarding (the name of the tree and subdirectory must be same for all the datasets). In the case of multiple datasets, 'elist' is treated a global entry list. It is possible to specify per-dataset entry lists using the syntax ""mydset[#adir/[T]]?enl=entrylist"" or ""mydset[#adir/[T]]<<entrylist"" Here 'entrylist' is a tag identifying, in the order : i. a named entry-list in the input list or in the input data list ii. a named entry-list in memory (in gDirectory) iii. the path of a file containing the entry-list to be used In the case ii) and iii) the entry-list object(s) is(are) added to the input data list. The return value is -1 in case of error and TSelector::GetStatus() in in case of success. ; Reimplemented from TProof.; Definition at line 54 of file TProofSuperMaster.h. ◆ Process() [2/8]. Long64_t TProofSuperMaster::Process ; (; const char * ; dsetname, . TSelector * ; selector, . Option_t * ; option = """", . Long64_t ; nentries = -1, . Long64_t ; firstentry = 0, . TObject * ; enl = 0 . ). inlineoverridevirtual . Process with name of dataset and TSelector object. ; Reimplemented from TProof.; Definition at line 68 of file TProofSuperMaster.h. ◆ Process() [3/8]. Long64_t TProofSuperMaster::Process ; (; const char * ; selector, . Long64_t ; n, . Option_t * ; option = """" . ). inlineoverridevirtual . Generic (non-data based) selector processing: the Process() method of the specified selector (.C) or TSelector object is called 'n' times. ; The return value is -1 in case of error and TSelector::GetStatus() in in case of success. ; Reimplemented from TProof.; Definition at line 58 of file TProofSuperMaster.h. ◆ Process() [4/8]. Long64",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:49318,Availability,error,error,49318,"ntry-list to be used In the case ii) and iii) the entry-list object(s) is(are) added to the input data list. The return value is -1 in case of error and TSelector::GetStatus() in in case of success. ; Reimplemented from TProof.; Definition at line 54 of file TProofSuperMaster.h. ◆ Process() [2/8]. Long64_t TProofSuperMaster::Process ; (; const char * ; dsetname, . TSelector * ; selector, . Option_t * ; option = """", . Long64_t ; nentries = -1, . Long64_t ; firstentry = 0, . TObject * ; enl = 0 . ). inlineoverridevirtual . Process with name of dataset and TSelector object. ; Reimplemented from TProof.; Definition at line 68 of file TProofSuperMaster.h. ◆ Process() [3/8]. Long64_t TProofSuperMaster::Process ; (; const char * ; selector, . Long64_t ; n, . Option_t * ; option = """" . ). inlineoverridevirtual . Generic (non-data based) selector processing: the Process() method of the specified selector (.C) or TSelector object is called 'n' times. ; The return value is -1 in case of error and TSelector::GetStatus() in in case of success. ; Reimplemented from TProof.; Definition at line 58 of file TProofSuperMaster.h. ◆ Process() [4/8]. Long64_t TProofSuperMaster::Process ; (; TDSet * ; set, . const char * ; selector, . Option_t * ; option = """", . Long64_t ; nentries = -1, . Long64_t ; first = 0 . ). overridevirtual . Process a data set (TDSet) using the specified selector (.C) file. ; Entry- or event-lists should be set in the data set object using TDSet::SetEntryList. The return value is -1 in case of error and TSelector::GetStatus() in in case of success. ; Reimplemented from TProof.; Definition at line 229 of file TProofSuperMaster.cxx. ◆ Process() [5/8]. Long64_t TProofSuperMaster::Process ; (; TDSet * ; dset, . TSelector * ; selector, . Option_t * ; option = """", . Long64_t ; nentries = -1, . Long64_t ; first = 0 . ). inlineoverridevirtual . Process a data set (TDSet) using the specified selector object. ; Entry- or event-lists should be set in the data set object usin",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:49848,Availability,error,error,49848,"ess with name of dataset and TSelector object. ; Reimplemented from TProof.; Definition at line 68 of file TProofSuperMaster.h. ◆ Process() [3/8]. Long64_t TProofSuperMaster::Process ; (; const char * ; selector, . Long64_t ; n, . Option_t * ; option = """" . ). inlineoverridevirtual . Generic (non-data based) selector processing: the Process() method of the specified selector (.C) or TSelector object is called 'n' times. ; The return value is -1 in case of error and TSelector::GetStatus() in in case of success. ; Reimplemented from TProof.; Definition at line 58 of file TProofSuperMaster.h. ◆ Process() [4/8]. Long64_t TProofSuperMaster::Process ; (; TDSet * ; set, . const char * ; selector, . Option_t * ; option = """", . Long64_t ; nentries = -1, . Long64_t ; first = 0 . ). overridevirtual . Process a data set (TDSet) using the specified selector (.C) file. ; Entry- or event-lists should be set in the data set object using TDSet::SetEntryList. The return value is -1 in case of error and TSelector::GetStatus() in in case of success. ; Reimplemented from TProof.; Definition at line 229 of file TProofSuperMaster.cxx. ◆ Process() [5/8]. Long64_t TProofSuperMaster::Process ; (; TDSet * ; dset, . TSelector * ; selector, . Option_t * ; option = """", . Long64_t ; nentries = -1, . Long64_t ; first = 0 . ). inlineoverridevirtual . Process a data set (TDSet) using the specified selector object. ; Entry- or event-lists should be set in the data set object using TDSet::SetEntryList. The return value is -1 in case of error and TSelector::GetStatus() in in case of success. ; Reimplemented from TProof.; Definition at line 61 of file TProofSuperMaster.h. ◆ Process() [6/8]. Long64_t TProofSuperMaster::Process ; (; TFileCollection * ; fc, . const char * ; selector, . Option_t * ; option = """", . Long64_t ; nentries = -1, . Long64_t ; first = 0 . ). inlineoverridevirtual . Process a data set (TFileCollection) using the specified selector (.C) file or TSelector object. ; The default tree is",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:50384,Availability,error,error,50384," TProof.; Definition at line 58 of file TProofSuperMaster.h. ◆ Process() [4/8]. Long64_t TProofSuperMaster::Process ; (; TDSet * ; set, . const char * ; selector, . Option_t * ; option = """", . Long64_t ; nentries = -1, . Long64_t ; first = 0 . ). overridevirtual . Process a data set (TDSet) using the specified selector (.C) file. ; Entry- or event-lists should be set in the data set object using TDSet::SetEntryList. The return value is -1 in case of error and TSelector::GetStatus() in in case of success. ; Reimplemented from TProof.; Definition at line 229 of file TProofSuperMaster.cxx. ◆ Process() [5/8]. Long64_t TProofSuperMaster::Process ; (; TDSet * ; dset, . TSelector * ; selector, . Option_t * ; option = """", . Long64_t ; nentries = -1, . Long64_t ; first = 0 . ). inlineoverridevirtual . Process a data set (TDSet) using the specified selector object. ; Entry- or event-lists should be set in the data set object using TDSet::SetEntryList. The return value is -1 in case of error and TSelector::GetStatus() in in case of success. ; Reimplemented from TProof.; Definition at line 61 of file TProofSuperMaster.h. ◆ Process() [6/8]. Long64_t TProofSuperMaster::Process ; (; TFileCollection * ; fc, . const char * ; selector, . Option_t * ; option = """", . Long64_t ; nentries = -1, . Long64_t ; first = 0 . ). inlineoverridevirtual . Process a data set (TFileCollection) using the specified selector (.C) file or TSelector object. ; The default tree is analyzed (i.e. the first one found). To specify another tree, the default tree can be changed using TFileCollection::SetDefaultMetaData . The return value is -1 in case of error and TSelector::GetStatus() in in case of success. ; Reimplemented from TProof.; Definition at line 51 of file TProofSuperMaster.h. ◆ Process() [7/8]. Long64_t TProofSuperMaster::Process ; (; TFileCollection * ; fc, . TSelector * ; selector, . Option_t * ; option = """", . Long64_t ; nentries = -1, . Long64_t ; first = 0 . ). inlineoverridevirtual . Process ",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:51031,Availability,error,error,51031,"s ; (; TDSet * ; dset, . TSelector * ; selector, . Option_t * ; option = """", . Long64_t ; nentries = -1, . Long64_t ; first = 0 . ). inlineoverridevirtual . Process a data set (TDSet) using the specified selector object. ; Entry- or event-lists should be set in the data set object using TDSet::SetEntryList. The return value is -1 in case of error and TSelector::GetStatus() in in case of success. ; Reimplemented from TProof.; Definition at line 61 of file TProofSuperMaster.h. ◆ Process() [6/8]. Long64_t TProofSuperMaster::Process ; (; TFileCollection * ; fc, . const char * ; selector, . Option_t * ; option = """", . Long64_t ; nentries = -1, . Long64_t ; first = 0 . ). inlineoverridevirtual . Process a data set (TFileCollection) using the specified selector (.C) file or TSelector object. ; The default tree is analyzed (i.e. the first one found). To specify another tree, the default tree can be changed using TFileCollection::SetDefaultMetaData . The return value is -1 in case of error and TSelector::GetStatus() in in case of success. ; Reimplemented from TProof.; Definition at line 51 of file TProofSuperMaster.h. ◆ Process() [7/8]. Long64_t TProofSuperMaster::Process ; (; TFileCollection * ; fc, . TSelector * ; selector, . Option_t * ; option = """", . Long64_t ; nentries = -1, . Long64_t ; first = 0 . ). inlineoverridevirtual . Process a data set (TFileCollection) using the specified selector object The default tree is analyzed (i.e. ; the first one found). To specify another tree, the default tree can be changed using TFileCollection::SetDefaultMetaData . The return value is -1 in case of error and TSelector::GetStatus() in in case of success. ; Reimplemented from TProof.; Definition at line 65 of file TProofSuperMaster.h. ◆ Process() [8/8]. Long64_t TProofSuperMaster::Process ; (; TSelector * ; selector, . Long64_t ; n, . Option_t * ; option = """" . ). inlineoverridevirtual . Generic (non-data based) selector processing: the Process() method of the specified selector is",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:51653,Availability,error,error,51653,"ong64_t ; nentries = -1, . Long64_t ; first = 0 . ). inlineoverridevirtual . Process a data set (TFileCollection) using the specified selector (.C) file or TSelector object. ; The default tree is analyzed (i.e. the first one found). To specify another tree, the default tree can be changed using TFileCollection::SetDefaultMetaData . The return value is -1 in case of error and TSelector::GetStatus() in in case of success. ; Reimplemented from TProof.; Definition at line 51 of file TProofSuperMaster.h. ◆ Process() [7/8]. Long64_t TProofSuperMaster::Process ; (; TFileCollection * ; fc, . TSelector * ; selector, . Option_t * ; option = """", . Long64_t ; nentries = -1, . Long64_t ; first = 0 . ). inlineoverridevirtual . Process a data set (TFileCollection) using the specified selector object The default tree is analyzed (i.e. ; the first one found). To specify another tree, the default tree can be changed using TFileCollection::SetDefaultMetaData . The return value is -1 in case of error and TSelector::GetStatus() in in case of success. ; Reimplemented from TProof.; Definition at line 65 of file TProofSuperMaster.h. ◆ Process() [8/8]. Long64_t TProofSuperMaster::Process ; (; TSelector * ; selector, . Long64_t ; n, . Option_t * ; option = """" . ). inlineoverridevirtual . Generic (non-data based) selector processing: the Process() method of the specified selector is called 'n' times. ; The return value is -1 in case of error and TSelector::GetStatus() in in case of success. ; Reimplemented from TProof.; Definition at line 72 of file TProofSuperMaster.h. ◆ StartSlaves(). Bool_t TProofSuperMaster::StartSlaves ; (; Bool_t ; ). overrideprotectedvirtual . Start up PROOF submasters. ; Reimplemented from TProof.; Definition at line 78 of file TProofSuperMaster.cxx. ◆ Streamer(). void TProofSuperMaster::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TProof. ◆ StreamerNVirtual(). void TProofSuperMaster::StreamerNVirtual ; (; ",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:52096,Availability,error,error,52096,"om TProof.; Definition at line 51 of file TProofSuperMaster.h. ◆ Process() [7/8]. Long64_t TProofSuperMaster::Process ; (; TFileCollection * ; fc, . TSelector * ; selector, . Option_t * ; option = """", . Long64_t ; nentries = -1, . Long64_t ; first = 0 . ). inlineoverridevirtual . Process a data set (TFileCollection) using the specified selector object The default tree is analyzed (i.e. ; the first one found). To specify another tree, the default tree can be changed using TFileCollection::SetDefaultMetaData . The return value is -1 in case of error and TSelector::GetStatus() in in case of success. ; Reimplemented from TProof.; Definition at line 65 of file TProofSuperMaster.h. ◆ Process() [8/8]. Long64_t TProofSuperMaster::Process ; (; TSelector * ; selector, . Long64_t ; n, . Option_t * ; option = """" . ). inlineoverridevirtual . Generic (non-data based) selector processing: the Process() method of the specified selector is called 'n' times. ; The return value is -1 in case of error and TSelector::GetStatus() in in case of success. ; Reimplemented from TProof.; Definition at line 72 of file TProofSuperMaster.h. ◆ StartSlaves(). Bool_t TProofSuperMaster::StartSlaves ; (; Bool_t ; ). overrideprotectedvirtual . Start up PROOF submasters. ; Reimplemented from TProof.; Definition at line 78 of file TProofSuperMaster.cxx. ◆ Streamer(). void TProofSuperMaster::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TProof. ◆ StreamerNVirtual(). void TProofSuperMaster::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 75 of file TProofSuperMaster.h. ◆ ValidateDSet(). void TProofSuperMaster::ValidateDSet ; (; TDSet * ; dset). overrideprotectedvirtual . Validate a TDSet. ; Reimplemented from TProof.; Definition at line 246 of file TProofSuperMaster.cxx. Friends And Related Symbol Documentation. ◆ TProofPlayerSuperMaster. friend class TProofPlayerSuperMaster. friend . Definition at line",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:38079,Deployability,update,update,38079,"aken from the dedicated list and / or the specified file. ;  ; Int_t RemoveWorkers (TList *wrks);  Used for shuting down the workres after a query is finished. ;  ; virtual void SaveWorkerInfo ();  Save information about the worker set in the file .workers in the working dir. ;  ; Int_t SendFile (const char *file, Int_t opt=(kBinary|kForward|kCp|kCpBin), const char *rfile=0, TSlave *sl=0);  Send a file to master or slave servers. ;  ; virtual void SendInputDataFile ();  Send the input data objects to the master; the objects are taken from the dedicated list and / or the specified file. ;  ; void SetDSet (TDSet *dset);  ; void SetFeedback (TString &opt, TString &optfb, Int_t action);  Extract from opt in optfb information about wanted feedback settings. ;  ; void SetPlayer (TVirtualProofPlayer *player);  Set a new PROOF player. ;  ; void SetupWorkersEnv (TList *wrks, Bool_t increasingpool=kFALSE);  Set up packages, loaded macros, include and lib paths ... ;  ; void UpdateDialog ();  Final update of the progress dialog. ;  ; Int_t VerifyDataSetParallel (const char *uri, const char *optStr);  Internal function for parallel dataset verification used TProof::VerifyDataSet and TProofLite::VerifyDataSet. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Friends; class TProofPlayerSuperMaster;  . Additional Inherited Members;  Public Types inherited from TProof; enum  EProofClearData { kPurge = 0x1; , kUnregistered = 0x2; , kDataset = 0x4; , kForceClear = 0x8; };  ; enum  EQueryMode { kSync = 0; , kAsync = 1; };  ; enum  ERegisterOpt { kFailIfExists = 0; , kOverwriteIfExists = 1; , kMergeIfExists = 2; };  ; enum  ERunStatus { kRunning = 0; , kStopped = 1; , kAborted = 2; };  ;",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:16258,Energy Efficiency,schedul,schedule,16258,"r the qry-th query in fQueries. ;  ; Int_t SavePerfTree (const char *pf=0, const char *qref=0);  Save performance information from TPerfStats to file 'pf'. ;  ; void SendDataSetStatus (const char *msg, UInt_t n, UInt_t tot, Bool_t st);  Send or notify data set status. ;  ; Bool_t SendingLogToWindow () const;  ; void SendLogToWindow (Bool_t mode);  ; void SetActive (Bool_t=kTRUE);  ; virtual void SetAlias (const char *alias="""");  Set an alias for this session. ;  ; void SetDataPoolUrl (const char *url);  ; virtual Int_t SetDataSetTreeName (const char *dataset, const char *treename);  Set/Change the name of the default tree. ;  ; void SetDrawFeedbackOption (TDrawFeedback *f, Option_t *opt);  Set draw feedback option. ;  ; void SetInputDataFile (const char *datafile);  Set the file to be used to optimally distribute the input data objects. ;  ; void SetLogLevel (Int_t level, UInt_t mask=TProofDebug::kAll);  Set server logging level. ;  ; void SetManager (TProofMgr *mgr);  Set manager and schedule its destruction after this for clean operations. ;  ; void SetMaxDrawQueries (Int_t max);  Set max number of draw queries whose results are saved. ;  ; Int_t SetParallel (Int_t nodes=-1, Bool_t random=kFALSE);  Tell PROOF how many slaves to use in parallel. ;  ; void SetParameter (const char *par, const char *value);  Set input list parameter. ;  ; void SetParameter (const char *par, Double_t value);  Set an input list parameter. ;  ; void SetParameter (const char *par, Int_t value);  Set an input list parameter. ;  ; void SetParameter (const char *par, Long64_t value);  Set an input list parameter. ;  ; void SetParameter (const char *par, Long_t value);  Set an input list parameter. ;  ; void SetPerfTree (const char *pf=""perftree.root"", Bool_t withWrks=kFALSE);  Enable/Disable saving of the performance tree. ;  ; void SetPrintProgress (PrintProgress_t pp);  ; void SetProgressDialog (Bool_t on=kTRUE);  Enable/Disable the graphic progress dialog. ;  ; void SetQueryMode (EQueryM",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:6681,Integrability,message,message,6681," Delete draw feedback object. ;  ; void DeleteParameters (const char *wildcard);  Delete the input list parameters specified by a wildcard (e.g. ;  ; void Detach (Option_t *opt="""");  Detach this instance to its proofserv. ;  ; void DisableGoAsyn ();  Signal to disable related switches. ;  ; Int_t DownloadPackage (const char *par, const char *dstdir=0);  Download a PROOF archive (PAR file) from the master package repository. ;  ; Long64_t DrawSelect (const char *dsetname, const char *varexp, const char *selection="""", Option_t *option="""", Long64_t nentries=-1, Long64_t firstentry=0, TObject *enl=0);  Execute the specified drawing action on a data set which is stored on the master with name 'dsetname'. ;  ; virtual Long64_t DrawSelect (TDSet *dset, const char *varexp, const char *selection="""", Option_t *option="""", Long64_t nentries=-1, Long64_t firstentry=0);  Execute the specified drawing action on a data set (TDSet). ;  ; virtual Int_t Echo (const char *str);  Sends a string to master and workers and expect them to echo it back to the client via a message. ;  ; virtual Int_t Echo (const TObject *obj);  Sends an object to master and workers and expect them to send back a message with the output of its TObject::Print(). ;  ; Int_t EnablePackage (const char *package, Bool_t notOnClient=kFALSE, TList *workers=0);  Enable specified package. ;  ; Int_t EnablePackage (const char *package, const char *loadopts, Bool_t notOnClient=kFALSE, TList *workers=0);  Enable specified package. ;  ; Int_t EnablePackage (const char *package, TList *loadopts, Bool_t notOnClient=kFALSE, TList *workers=0);  Enable specified package. ;  ; Int_t Exec (const char *cmd, Bool_t plusMaster=kFALSE);  Send command to be executed on the PROOF master and/or slaves. ;  ; Int_t Exec (const char *cmd, const char *ord, Bool_t logtomacro=kFALSE);  Send command to be executed on node of ordinal 'ord' (use ""0"" for master). ;  ; virtual Bool_t ExistsDataSet (const char *dataset);  Returns kTRUE if 'dataset' ",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:6806,Integrability,message,message,6806,"d Detach (Option_t *opt="""");  Detach this instance to its proofserv. ;  ; void DisableGoAsyn ();  Signal to disable related switches. ;  ; Int_t DownloadPackage (const char *par, const char *dstdir=0);  Download a PROOF archive (PAR file) from the master package repository. ;  ; Long64_t DrawSelect (const char *dsetname, const char *varexp, const char *selection="""", Option_t *option="""", Long64_t nentries=-1, Long64_t firstentry=0, TObject *enl=0);  Execute the specified drawing action on a data set which is stored on the master with name 'dsetname'. ;  ; virtual Long64_t DrawSelect (TDSet *dset, const char *varexp, const char *selection="""", Option_t *option="""", Long64_t nentries=-1, Long64_t firstentry=0);  Execute the specified drawing action on a data set (TDSet). ;  ; virtual Int_t Echo (const char *str);  Sends a string to master and workers and expect them to echo it back to the client via a message. ;  ; virtual Int_t Echo (const TObject *obj);  Sends an object to master and workers and expect them to send back a message with the output of its TObject::Print(). ;  ; Int_t EnablePackage (const char *package, Bool_t notOnClient=kFALSE, TList *workers=0);  Enable specified package. ;  ; Int_t EnablePackage (const char *package, const char *loadopts, Bool_t notOnClient=kFALSE, TList *workers=0);  Enable specified package. ;  ; Int_t EnablePackage (const char *package, TList *loadopts, Bool_t notOnClient=kFALSE, TList *workers=0);  Enable specified package. ;  ; Int_t Exec (const char *cmd, Bool_t plusMaster=kFALSE);  Send command to be executed on the PROOF master and/or slaves. ;  ; Int_t Exec (const char *cmd, const char *ord, Bool_t logtomacro=kFALSE);  Send command to be executed on node of ordinal 'ord' (use ""0"" for master). ;  ; virtual Bool_t ExistsDataSet (const char *dataset);  Returns kTRUE if 'dataset' exists, kFALSE otherwise. ;  ; void Feedback (TList *objs);  Get list of feedback objects. ;  ; Long64_t Finalize (const char *queryref, Bool_t force=kFAL",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:12204,Integrability,message,message,12204,"_t GetRC (const char *RCenv, Int_t &env, const char *ord=""0"");  Get into 'env' the value of integer RC env variable 'rcenv' on node 'ord'. ;  ; Int_t GetRC (const char *RCenv, TString &env, const char *ord=""0"");  Get into 'env' the value of string RC env variable 'rcenv' on node 'ord'. ;  ; Float_t GetRealTime () const;  ; Int_t GetRemoteProtocol () const;  ; ERunStatus GetRunStatus () const;  ; Int_t GetSeqNum () const;  ; Int_t GetSessionID () const;  ; const char * GetSessionTag () const;  ; virtual TFileCollection * GetStagingStatusDataSet (const char *dataset);  Obtains a TFileCollection showing the staging status of the specified dataset. ;  ; void GetStatistics (Bool_t verbose=kFALSE);  Get statistics about CPU time, real time and bytes read. ;  ; Int_t GetStatus () const;  ; virtual TTree * GetTreeHeader (TDSet *tdset);  Creates a tree header (a tree with nonexisting files) object for the DataSet. ;  ; const char * GetUrl ();  ; const char * GetUser () const;  ; const char * GetWorkDir () const;  ; void GoAsynchronous ();  Send GOASYNC message to the master. ;  ; Bool_t IsDataReady (Long64_t &totalbytes, Long64_t &bytesready);  See if the data is ready to be analyzed. ;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; Bool_t IsIdle () const;  ; Bool_t IsLite () const;  ; Bool_t IsMaster () const;  ; Bool_t IsParallel () const;  ; Bool_t IsProofd () const;  ; Bool_t IsTty () const;  ; Bool_t IsValid () const;  ; Bool_t IsWaiting () const;  ; virtual Int_t Load (const char *macro, Bool_t notOnClient=kFALSE, Bool_t uniqueOnly=kTRUE, TList *wrks=0);  Load the specified macro on master, workers and, if notOnClient is kFALSE, on the client. ;  ; void LogMessage (const char *msg, Bool_t all);  Log a message into the appropriate window by emitting a signal. ;  ; Int_t Ping ();  Ping PROOF. Returns 1 if master server responded. ;  ; void Print (Option_t *option="""") const o",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:12970,Integrability,message,message,12970,"(TDSet *tdset);  Creates a tree header (a tree with nonexisting files) object for the DataSet. ;  ; const char * GetUrl ();  ; const char * GetUser () const;  ; const char * GetWorkDir () const;  ; void GoAsynchronous ();  Send GOASYNC message to the master. ;  ; Bool_t IsDataReady (Long64_t &totalbytes, Long64_t &bytesready);  See if the data is ready to be analyzed. ;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; Bool_t IsIdle () const;  ; Bool_t IsLite () const;  ; Bool_t IsMaster () const;  ; Bool_t IsParallel () const;  ; Bool_t IsProofd () const;  ; Bool_t IsTty () const;  ; Bool_t IsValid () const;  ; Bool_t IsWaiting () const;  ; virtual Int_t Load (const char *macro, Bool_t notOnClient=kFALSE, Bool_t uniqueOnly=kTRUE, TList *wrks=0);  Load the specified macro on master, workers and, if notOnClient is kFALSE, on the client. ;  ; void LogMessage (const char *msg, Bool_t all);  Log a message into the appropriate window by emitting a signal. ;  ; Int_t Ping ();  Ping PROOF. Returns 1 if master server responded. ;  ; void Print (Option_t *option="""") const override;  Print status of PROOF cluster. ;  ; void Progress (Long64_t total, Long64_t processed);  Get query progress information. ;  ; void Progress (Long64_t total, Long64_t processed, Long64_t bytesread, Float_t initTime, Float_t procTime, Float_t evtrti, Float_t mbrti);  Get query progress information. ;  ; void Progress (Long64_t total, Long64_t processed, Long64_t bytesread, Float_t initTime, Float_t procTime, Float_t evtrti, Float_t mbrti, Int_t actw, Int_t tses, Float_t eses);  Get query progress information. ;  ; void PutLog (TQueryResult *qr);  Display log of query pq into the log window frame. ;  ; void QueryResultReady (const char *ref);  Notify availability of a query result. ;  ; virtual Bool_t RegisterDataSet (const char *name, TFileCollection *dataset, const char *optStr="""");  Register the 'dataSet",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:19224,Integrability,message,message,19224,"ist which packages are enabled. ;  ; void ShowFeedback () const;  Show items in feedback list. ;  ; void ShowLog (const char *queryref);  Display on screen the content of the temporary log file for query in reference. ;  ; void ShowLog (Int_t qry=-1);  Display on screen the content of the temporary log file. ;  ; void ShowMissingFiles (TQueryResult *qr=0);  Show information about missing files during query described by 'qr' or the last query if qr is null (default). ;  ; void ShowPackages (Bool_t all=kFALSE, Bool_t redirlog=kFALSE);  List contents of package directory. ;  ; void ShowParameters (const char *wildcard=""PROOF_*"") const;  Show the input list parameters specified by the wildcard. ;  ; void ShowQueries (Option_t *opt="""");  Ask the master for the list of queries. ;  ; virtual void ShowStagingStatusDataSet (const char *dataset, const char *optStr=""filter:SsCc"");  Like GetStagingStatusDataSet, but displays results immediately. ;  ; void StartupMessage (const char *msg, Bool_t status, Int_t done, Int_t total);  Send startup message. ;  ; void StopProcess (Bool_t abort, Int_t timeout=-1);  Send STOPPROCESS message to master and workers. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Touch ();  Ping PROOF slaves. Returns the number of slaves that responded. ;  ; Int_t UploadDataSet (const char *, const char *, const char *=0, Int_t=0, TList *=0);  *** This function is deprecated and will disappear in future versions *** *** It is just a wrapper around TFile::Cp. ;  ; Int_t UploadDataSet (const char *, TList *, const char *=0, Int_t=0, TList *=0);  *** This function is deprecated and will disappear in future versions *** *** It is just a wrapper around TFile::Cp. ;  ; Int_t UploadDataSetFromFile (const char *, const char *, const char *=0, Int_t=0, TList *=0);  *** This function is deprecated and will disappear in future versions *** *** It is just a wrapper around TFile::Cp. ;  ; Int_t UploadPackage (const char *par, EUploadPackageOpt ",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:19307,Integrability,message,message,19307,"howLog (const char *queryref);  Display on screen the content of the temporary log file for query in reference. ;  ; void ShowLog (Int_t qry=-1);  Display on screen the content of the temporary log file. ;  ; void ShowMissingFiles (TQueryResult *qr=0);  Show information about missing files during query described by 'qr' or the last query if qr is null (default). ;  ; void ShowPackages (Bool_t all=kFALSE, Bool_t redirlog=kFALSE);  List contents of package directory. ;  ; void ShowParameters (const char *wildcard=""PROOF_*"") const;  Show the input list parameters specified by the wildcard. ;  ; void ShowQueries (Option_t *opt="""");  Ask the master for the list of queries. ;  ; virtual void ShowStagingStatusDataSet (const char *dataset, const char *optStr=""filter:SsCc"");  Like GetStagingStatusDataSet, but displays results immediately. ;  ; void StartupMessage (const char *msg, Bool_t status, Int_t done, Int_t total);  Send startup message. ;  ; void StopProcess (Bool_t abort, Int_t timeout=-1);  Send STOPPROCESS message to master and workers. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Touch ();  Ping PROOF slaves. Returns the number of slaves that responded. ;  ; Int_t UploadDataSet (const char *, const char *, const char *=0, Int_t=0, TList *=0);  *** This function is deprecated and will disappear in future versions *** *** It is just a wrapper around TFile::Cp. ;  ; Int_t UploadDataSet (const char *, TList *, const char *=0, Int_t=0, TList *=0);  *** This function is deprecated and will disappear in future versions *** *** It is just a wrapper around TFile::Cp. ;  ; Int_t UploadDataSetFromFile (const char *, const char *, const char *=0, Int_t=0, TList *=0);  *** This function is deprecated and will disappear in future versions *** *** It is just a wrapper around TFile::Cp. ;  ; Int_t UploadPackage (const char *par, EUploadPackageOpt opt=kUntar, TList *workers=0);  Upload a PROOF archive (PAR file). ;  ; Bool_t UseDynamicStartup () const;",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:19671,Integrability,wrap,wrapper,19671,"cribed by 'qr' or the last query if qr is null (default). ;  ; void ShowPackages (Bool_t all=kFALSE, Bool_t redirlog=kFALSE);  List contents of package directory. ;  ; void ShowParameters (const char *wildcard=""PROOF_*"") const;  Show the input list parameters specified by the wildcard. ;  ; void ShowQueries (Option_t *opt="""");  Ask the master for the list of queries. ;  ; virtual void ShowStagingStatusDataSet (const char *dataset, const char *optStr=""filter:SsCc"");  Like GetStagingStatusDataSet, but displays results immediately. ;  ; void StartupMessage (const char *msg, Bool_t status, Int_t done, Int_t total);  Send startup message. ;  ; void StopProcess (Bool_t abort, Int_t timeout=-1);  Send STOPPROCESS message to master and workers. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Touch ();  Ping PROOF slaves. Returns the number of slaves that responded. ;  ; Int_t UploadDataSet (const char *, const char *, const char *=0, Int_t=0, TList *=0);  *** This function is deprecated and will disappear in future versions *** *** It is just a wrapper around TFile::Cp. ;  ; Int_t UploadDataSet (const char *, TList *, const char *=0, Int_t=0, TList *=0);  *** This function is deprecated and will disappear in future versions *** *** It is just a wrapper around TFile::Cp. ;  ; Int_t UploadDataSetFromFile (const char *, const char *, const char *=0, Int_t=0, TList *=0);  *** This function is deprecated and will disappear in future versions *** *** It is just a wrapper around TFile::Cp. ;  ; Int_t UploadPackage (const char *par, EUploadPackageOpt opt=kUntar, TList *workers=0);  Upload a PROOF archive (PAR file). ;  ; Bool_t UseDynamicStartup () const;  ; virtual Int_t VerifyDataSet (const char *dataset, const char *optStr="""");  Verify if all files in the specified dataset are available. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:19875,Integrability,wrap,wrapper,19875,"rd=""PROOF_*"") const;  Show the input list parameters specified by the wildcard. ;  ; void ShowQueries (Option_t *opt="""");  Ask the master for the list of queries. ;  ; virtual void ShowStagingStatusDataSet (const char *dataset, const char *optStr=""filter:SsCc"");  Like GetStagingStatusDataSet, but displays results immediately. ;  ; void StartupMessage (const char *msg, Bool_t status, Int_t done, Int_t total);  Send startup message. ;  ; void StopProcess (Bool_t abort, Int_t timeout=-1);  Send STOPPROCESS message to master and workers. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Touch ();  Ping PROOF slaves. Returns the number of slaves that responded. ;  ; Int_t UploadDataSet (const char *, const char *, const char *=0, Int_t=0, TList *=0);  *** This function is deprecated and will disappear in future versions *** *** It is just a wrapper around TFile::Cp. ;  ; Int_t UploadDataSet (const char *, TList *, const char *=0, Int_t=0, TList *=0);  *** This function is deprecated and will disappear in future versions *** *** It is just a wrapper around TFile::Cp. ;  ; Int_t UploadDataSetFromFile (const char *, const char *, const char *=0, Int_t=0, TList *=0);  *** This function is deprecated and will disappear in future versions *** *** It is just a wrapper around TFile::Cp. ;  ; Int_t UploadPackage (const char *par, EUploadPackageOpt opt=kUntar, TList *workers=0);  Upload a PROOF archive (PAR file). ;  ; Bool_t UseDynamicStartup () const;  ; virtual Int_t VerifyDataSet (const char *dataset, const char *optStr="""");  Verify if all files in the specified dataset are available. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject *",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:20092,Integrability,wrap,wrapper,20092,"st char *dataset, const char *optStr=""filter:SsCc"");  Like GetStagingStatusDataSet, but displays results immediately. ;  ; void StartupMessage (const char *msg, Bool_t status, Int_t done, Int_t total);  Send startup message. ;  ; void StopProcess (Bool_t abort, Int_t timeout=-1);  Send STOPPROCESS message to master and workers. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Touch ();  Ping PROOF slaves. Returns the number of slaves that responded. ;  ; Int_t UploadDataSet (const char *, const char *, const char *=0, Int_t=0, TList *=0);  *** This function is deprecated and will disappear in future versions *** *** It is just a wrapper around TFile::Cp. ;  ; Int_t UploadDataSet (const char *, TList *, const char *=0, Int_t=0, TList *=0);  *** This function is deprecated and will disappear in future versions *** *** It is just a wrapper around TFile::Cp. ;  ; Int_t UploadDataSetFromFile (const char *, const char *, const char *=0, Int_t=0, TList *=0);  *** This function is deprecated and will disappear in future versions *** *** It is just a wrapper around TFile::Cp. ;  ; Int_t UploadPackage (const char *par, EUploadPackageOpt opt=kUntar, TList *workers=0);  Upload a PROOF archive (PAR file). ;  ; Bool_t UseDynamicStartup () const;  ; virtual Int_t VerifyDataSet (const char *dataset, const char *optStr="""");  Verify if all files in the specified dataset are available. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObjec",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:23359,Integrability,message,message,23359,"option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:23900,Integrability,message,message,23900,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:24890,Integrability,message,message,24890,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be o",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:27843,Integrability,message,message,27843,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:28216,Integrability,message,message,28216," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, voi",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:2588,Modifiability,inherit,inherited,2588,"n="""", Long64_t nentries=-1, Long64_t firstentry=0) override;  Process a data set (TDSet) using the specified selector object. ;  ; Long64_t Process (TFileCollection *fc, const char *sel, Option_t *o="""", Long64_t nent=-1, Long64_t fst=0) override;  Process a data set (TFileCollection) using the specified selector (.C) file or TSelector object. ;  ; Long64_t Process (TFileCollection *fc, TSelector *sel, Option_t *o="""", Long64_t nent=-1, Long64_t fst=0) override;  Process a data set (TFileCollection) using the specified selector object The default tree is analyzed (i.e. ;  ; Long64_t Process (TSelector *sel, Long64_t nent, Option_t *o="""") override;  Generic (non-data based) selector processing: the Process() method of the specified selector is called 'n' times. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TProof;  TProof (const char *masterurl, const char *conffile=kPROOF_ConfFile, const char *confdir=kPROOF_ConfDir, Int_t loglevel=0, const char *alias=0, TProofMgr *mgr=0);  Create a PROOF environment. ;  ;  ~TProof () override;  Clean up PROOF environment. ;  ; Int_t ActivateWorker (const char *ord, Bool_t save=kTRUE);  Make sure that the worker identified by the ordinal number 'ord' is in the active list. ;  ; void AddChain (TChain *chain);  Add chain to data set. ;  ; Int_t AddDynamicPath (const char *libpath, Bool_t onClient=kFALSE, TList *wrks=0, Bool_t doCollect=kTRUE);  Add 'libpath' to the lib path search. ;  ; void AddFeedback (const char *name);  Add object to feedback list. ;  ; Int_t AddIncludePath (const char *incpath, Bool_t onClient=kFALSE, TList *wrks=0, Bool_t doCollect=kTRUE);  Add 'incpath' to the inc path search. ;  ; void AddInput (TObject *obj);  Add objects that might be needed during the processing of the selector (see Process()). ;  ; void AddInputData (TObject *obj, Bool_t push=kFALSE);  Add data objects ",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:8736,Modifiability,variab,variable,8736,". ;  ; Long64_t Finalize (const char *queryref, Bool_t force=kFALSE);  Finalize query with reference ref. ;  ; Long64_t Finalize (Int_t query=-1, Bool_t force=kFALSE);  Finalize the qry-th query in fQueries. ;  ; TList * FindDataSets (const char *searchString, const char *optStr="""");  Find datasets, returns in a TList all found datasets. ;  ; Long64_t GetBytesRead () const;  ; Int_t GetClientProtocol () const;  ; const char * GetConfDir () const;  ; const char * GetConfFile () const;  ; Float_t GetCpuTime () const;  ; const char * GetDataPoolUrl () const;  ; virtual TFileCollection * GetDataSet (const char *dataset, const char *optStr="""");  Get a list of TFileInfo objects describing the files of the specified dataset. ;  ; TMap * GetDataSetQuota (const char *optStr="""");  returns a map of the quotas of all groups ;  ; virtual TMap * GetDataSets (const char *uri="""", const char *optStr="""");  Lists all datasets that match given uri. ;  ; TString Getenv (const char *env, const char *ord=""0"");  Get value of environment variable 'env' on node 'ord'. ;  ; TList * GetFeedbackList () const;  Return feedback list. ;  ; const char * GetGroup () const;  ; const char * GetImage () const;  ; TList * GetInputList ();  Get input list. ;  ; TMacro * GetLastLog ();  Fill a TMacro with the log lines since the last reading (fLogFileR) Return (TMacro *)0 if no line was logged. ;  ; TList * GetListOfEnabledPackages ();  Get from the master the list of names of the packages enabled. ;  ; TList * GetListOfPackages ();  Get from the master the list of names of the packages available. ;  ; virtual TList * GetListOfQueries (Option_t *opt="""");  Ask the master for the list of queries. ;  ; TList * GetListOfSlaveInfos ();  Returns list of TSlaveInfo's. In case of error return 0. ;  ; TList * GetLoadedMacros () const;  ; void GetLog (Int_t start=-1, Int_t end=-1);  Ask for remote logs in the range [start, end]. ;  ; Int_t GetLogLevel () const;  ; TMacro * GetMacroLog ();  ; TProofMgr * GetManager ",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:9842,Modifiability,sandbox,sandbox,9842,"t variable 'env' on node 'ord'. ;  ; TList * GetFeedbackList () const;  Return feedback list. ;  ; const char * GetGroup () const;  ; const char * GetImage () const;  ; TList * GetInputList ();  Get input list. ;  ; TMacro * GetLastLog ();  Fill a TMacro with the log lines since the last reading (fLogFileR) Return (TMacro *)0 if no line was logged. ;  ; TList * GetListOfEnabledPackages ();  Get from the master the list of names of the packages enabled. ;  ; TList * GetListOfPackages ();  Get from the master the list of names of the packages available. ;  ; virtual TList * GetListOfQueries (Option_t *opt="""");  Ask the master for the list of queries. ;  ; TList * GetListOfSlaveInfos ();  Returns list of TSlaveInfo's. In case of error return 0. ;  ; TList * GetLoadedMacros () const;  ; void GetLog (Int_t start=-1, Int_t end=-1);  Ask for remote logs in the range [start, end]. ;  ; Int_t GetLogLevel () const;  ; TMacro * GetMacroLog ();  ; TProofMgr * GetManager ();  ; const char * GetMaster () const;  ; void GetMaxQueries ();  Get max number of queries whose full results are kept in the remote sandbox. ;  ; TFileCollection * GetMissingFiles (TQueryResult *qr=0);  Get a TFileCollection with the files missing in the query described by 'qr' or the last query if qr is null (default). ;  ; Int_t GetNumberOfDrawQueries ();  ; Int_t GetNumberOfQueries ();  Number of queries processed by this session. ;  ; TObject * GetOutput (const char *name);  Get specified object that has been produced during the processing (see Process()). ;  ; TList * GetOutputList ();  Get list with all object created during processing (see Process()). ;  ; TList * GetOutputNames ();  FIXME: to be written. ;  ; Int_t GetParallel () const;  Returns number of slaves active in parallel mode. ;  ; TObject * GetParameter (const char *par) const;  Get specified parameter. ;  ; Int_t GetPort () const;  ; EQueryMode GetQueryMode (Option_t *mode=0) const;  Find out the query mode based on the current setting and ",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:11104,Modifiability,variab,variable,11104,"eries ();  ; Int_t GetNumberOfQueries ();  Number of queries processed by this session. ;  ; TObject * GetOutput (const char *name);  Get specified object that has been produced during the processing (see Process()). ;  ; TList * GetOutputList ();  Get list with all object created during processing (see Process()). ;  ; TList * GetOutputNames ();  FIXME: to be written. ;  ; Int_t GetParallel () const;  Returns number of slaves active in parallel mode. ;  ; TObject * GetParameter (const char *par) const;  Get specified parameter. ;  ; Int_t GetPort () const;  ; EQueryMode GetQueryMode (Option_t *mode=0) const;  Find out the query mode based on the current setting and 'mode'. ;  ; TQueryResult * GetQueryResult (const char *ref=0);  Return pointer to the full TQueryResult instance owned by the player and referenced by 'ref'. ;  ; TList * GetQueryResults ();  Return pointer to the list of query results in the player. ;  ; Int_t GetRC (const char *RCenv, Double_t &env, const char *ord=""0"");  Get into 'env' the value of double RC env variable 'rcenv' on node 'ord'. ;  ; Int_t GetRC (const char *RCenv, Int_t &env, const char *ord=""0"");  Get into 'env' the value of integer RC env variable 'rcenv' on node 'ord'. ;  ; Int_t GetRC (const char *RCenv, TString &env, const char *ord=""0"");  Get into 'env' the value of string RC env variable 'rcenv' on node 'ord'. ;  ; Float_t GetRealTime () const;  ; Int_t GetRemoteProtocol () const;  ; ERunStatus GetRunStatus () const;  ; Int_t GetSeqNum () const;  ; Int_t GetSessionID () const;  ; const char * GetSessionTag () const;  ; virtual TFileCollection * GetStagingStatusDataSet (const char *dataset);  Obtains a TFileCollection showing the staging status of the specified dataset. ;  ; void GetStatistics (Bool_t verbose=kFALSE);  Get statistics about CPU time, real time and bytes read. ;  ; Int_t GetStatus () const;  ; virtual TTree * GetTreeHeader (TDSet *tdset);  Creates a tree header (a tree with nonexisting files) object for the DataSet",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:11251,Modifiability,variab,variable,11251,"object that has been produced during the processing (see Process()). ;  ; TList * GetOutputList ();  Get list with all object created during processing (see Process()). ;  ; TList * GetOutputNames ();  FIXME: to be written. ;  ; Int_t GetParallel () const;  Returns number of slaves active in parallel mode. ;  ; TObject * GetParameter (const char *par) const;  Get specified parameter. ;  ; Int_t GetPort () const;  ; EQueryMode GetQueryMode (Option_t *mode=0) const;  Find out the query mode based on the current setting and 'mode'. ;  ; TQueryResult * GetQueryResult (const char *ref=0);  Return pointer to the full TQueryResult instance owned by the player and referenced by 'ref'. ;  ; TList * GetQueryResults ();  Return pointer to the list of query results in the player. ;  ; Int_t GetRC (const char *RCenv, Double_t &env, const char *ord=""0"");  Get into 'env' the value of double RC env variable 'rcenv' on node 'ord'. ;  ; Int_t GetRC (const char *RCenv, Int_t &env, const char *ord=""0"");  Get into 'env' the value of integer RC env variable 'rcenv' on node 'ord'. ;  ; Int_t GetRC (const char *RCenv, TString &env, const char *ord=""0"");  Get into 'env' the value of string RC env variable 'rcenv' on node 'ord'. ;  ; Float_t GetRealTime () const;  ; Int_t GetRemoteProtocol () const;  ; ERunStatus GetRunStatus () const;  ; Int_t GetSeqNum () const;  ; Int_t GetSessionID () const;  ; const char * GetSessionTag () const;  ; virtual TFileCollection * GetStagingStatusDataSet (const char *dataset);  Obtains a TFileCollection showing the staging status of the specified dataset. ;  ; void GetStatistics (Bool_t verbose=kFALSE);  Get statistics about CPU time, real time and bytes read. ;  ; Int_t GetStatus () const;  ; virtual TTree * GetTreeHeader (TDSet *tdset);  Creates a tree header (a tree with nonexisting files) object for the DataSet. ;  ; const char * GetUrl ();  ; const char * GetUser () const;  ; const char * GetWorkDir () const;  ; void GoAsynchronous ();  Send GOASYNC messa",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:11399,Modifiability,variab,variable,11399,"ing (see Process()). ;  ; TList * GetOutputNames ();  FIXME: to be written. ;  ; Int_t GetParallel () const;  Returns number of slaves active in parallel mode. ;  ; TObject * GetParameter (const char *par) const;  Get specified parameter. ;  ; Int_t GetPort () const;  ; EQueryMode GetQueryMode (Option_t *mode=0) const;  Find out the query mode based on the current setting and 'mode'. ;  ; TQueryResult * GetQueryResult (const char *ref=0);  Return pointer to the full TQueryResult instance owned by the player and referenced by 'ref'. ;  ; TList * GetQueryResults ();  Return pointer to the list of query results in the player. ;  ; Int_t GetRC (const char *RCenv, Double_t &env, const char *ord=""0"");  Get into 'env' the value of double RC env variable 'rcenv' on node 'ord'. ;  ; Int_t GetRC (const char *RCenv, Int_t &env, const char *ord=""0"");  Get into 'env' the value of integer RC env variable 'rcenv' on node 'ord'. ;  ; Int_t GetRC (const char *RCenv, TString &env, const char *ord=""0"");  Get into 'env' the value of string RC env variable 'rcenv' on node 'ord'. ;  ; Float_t GetRealTime () const;  ; Int_t GetRemoteProtocol () const;  ; ERunStatus GetRunStatus () const;  ; Int_t GetSeqNum () const;  ; Int_t GetSessionID () const;  ; const char * GetSessionTag () const;  ; virtual TFileCollection * GetStagingStatusDataSet (const char *dataset);  Obtains a TFileCollection showing the staging status of the specified dataset. ;  ; void GetStatistics (Bool_t verbose=kFALSE);  Get statistics about CPU time, real time and bytes read. ;  ; Int_t GetStatus () const;  ; virtual TTree * GetTreeHeader (TDSet *tdset);  Creates a tree header (a tree with nonexisting files) object for the DataSet. ;  ; const char * GetUrl ();  ; const char * GetUser () const;  ; const char * GetWorkDir () const;  ; void GoAsynchronous ();  Send GOASYNC message to the master. ;  ; Bool_t IsDataReady (Long64_t &totalbytes, Long64_t &bytesready);  See if the data is ready to be analyzed. ;  ; Bool_t IsFol",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:17573,Modifiability,sandbox,sandbox,17573,"arameter (const char *par, const char *value);  Set input list parameter. ;  ; void SetParameter (const char *par, Double_t value);  Set an input list parameter. ;  ; void SetParameter (const char *par, Int_t value);  Set an input list parameter. ;  ; void SetParameter (const char *par, Long64_t value);  Set an input list parameter. ;  ; void SetParameter (const char *par, Long_t value);  Set an input list parameter. ;  ; void SetPerfTree (const char *pf=""perftree.root"", Bool_t withWrks=kFALSE);  Enable/Disable saving of the performance tree. ;  ; void SetPrintProgress (PrintProgress_t pp);  ; void SetProgressDialog (Bool_t on=kTRUE);  Enable/Disable the graphic progress dialog. ;  ; void SetQueryMode (EQueryMode mode);  Change query running mode to the one specified by 'mode'. ;  ; void SetRealTimeLog (Bool_t on=kTRUE);  Switch ON/OFF the real-time logging facility. ;  ; virtual void ShowCache (Bool_t all=kFALSE);  List contents of file cache. ;  ; virtual void ShowData ();  List contents of the data directory in the sandbox. ;  ; void ShowDataSet (const char *dataset="""", const char *opt=""filter:SsCc"");  display meta-info for given dataset usi ;  ; virtual void ShowDataSetCache (const char *dataset=0);  Display the content of the dataset cache, if any (matching 'dataset', if defined). ;  ; void ShowDataSetQuota (Option_t *opt=0);  shows the quota and usage of all groups if opt contains ""U"" shows also distribution of usage on user-level ;  ; virtual void ShowDataSets (const char *uri="""", const char *optStr="""");  Shows datasets in locations that match the uri. ;  ; void ShowEnabledPackages (Bool_t all=kFALSE);  List which packages are enabled. ;  ; void ShowFeedback () const;  Show items in feedback list. ;  ; void ShowLog (const char *queryref);  Display on screen the content of the temporary log file for query in reference. ;  ; void ShowLog (Int_t qry=-1);  Display on screen the content of the temporary log file. ;  ; void ShowMissingFiles (TQueryResult *qr=0);  S",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:20454,Modifiability,inherit,inherited,20454,"taSet (const char *, const char *, const char *=0, Int_t=0, TList *=0);  *** This function is deprecated and will disappear in future versions *** *** It is just a wrapper around TFile::Cp. ;  ; Int_t UploadDataSet (const char *, TList *, const char *=0, Int_t=0, TList *=0);  *** This function is deprecated and will disappear in future versions *** *** It is just a wrapper around TFile::Cp. ;  ; Int_t UploadDataSetFromFile (const char *, const char *, const char *=0, Int_t=0, TList *=0);  *** This function is deprecated and will disappear in future versions *** *** It is just a wrapper around TFile::Cp. ;  ; Int_t UploadPackage (const char *par, EUploadPackageOpt opt=kUntar, TList *workers=0);  Upload a PROOF archive (PAR file). ;  ; Bool_t UseDynamicStartup () const;  ; virtual Int_t VerifyDataSet (const char *dataset, const char *optStr="""");  Verify if all files in the specified dataset are available. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:21998,Modifiability,inherit,inherited,21998,"bjects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  D",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:22989,Modifiability,inherit,inheritance,22989,"ions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:24988,Modifiability,inherit,inherits,24988,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op).",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:25105,Modifiability,inherit,inherits,25105,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method ",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:28523,Modifiability,inherit,inherited,28523," SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const char *signal, const T &arg);  Activate signal with single paramet",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:30685,Modifiability,inherit,inherited,30685,"ing number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TProof; static void AddEnvVar (const char *name, const char *value);  Add an variable to the list of environment variables passed to proofserv on the master and slaves. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void DelEnvVar (const char *name);  Remove an variable from the list of environment variables passed to proofserv on the master and slaves. ;  ; static const TList * GetEnvVars ();  Get environemnt variables. ;  ; static TObject * GetOutput (const char *name, TList *out);  Find object 'name' in list 'out' or in the files specified in there. ;  ; static Int_t GetParameter (TCollection *c, const char *par, Double_t &value);  Get the value from the specified parameter from the specified collection. ;  ; static Int_t GetParameter (TCollection *c, const char *par, Int_t &value);  Get the value from the specified parameter from t",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:30777,Modifiability,variab,variable,30777,"ing number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TProof; static void AddEnvVar (const char *name, const char *value);  Add an variable to the list of environment variables passed to proofserv on the master and slaves. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void DelEnvVar (const char *name);  Remove an variable from the list of environment variables passed to proofserv on the master and slaves. ;  ; static const TList * GetEnvVars ();  Get environemnt variables. ;  ; static TObject * GetOutput (const char *name, TList *out);  Find object 'name' in list 'out' or in the files specified in there. ;  ; static Int_t GetParameter (TCollection *c, const char *par, Double_t &value);  Get the value from the specified parameter from the specified collection. ;  ; static Int_t GetParameter (TCollection *c, const char *par, Int_t &value);  Get the value from the specified parameter from t",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:30813,Modifiability,variab,variables,30813,"ing number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TProof; static void AddEnvVar (const char *name, const char *value);  Add an variable to the list of environment variables passed to proofserv on the master and slaves. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void DelEnvVar (const char *name);  Remove an variable from the list of environment variables passed to proofserv on the master and slaves. ;  ; static const TList * GetEnvVars ();  Get environemnt variables. ;  ; static TObject * GetOutput (const char *name, TList *out);  Find object 'name' in list 'out' or in the files specified in there. ;  ; static Int_t GetParameter (TCollection *c, const char *par, Double_t &value);  Get the value from the specified parameter from the specified collection. ;  ; static Int_t GetParameter (TCollection *c, const char *par, Int_t &value);  Get the value from the specified parameter from t",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:31082,Modifiability,variab,variable,31082,"ority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TProof; static void AddEnvVar (const char *name, const char *value);  Add an variable to the list of environment variables passed to proofserv on the master and slaves. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void DelEnvVar (const char *name);  Remove an variable from the list of environment variables passed to proofserv on the master and slaves. ;  ; static const TList * GetEnvVars ();  Get environemnt variables. ;  ; static TObject * GetOutput (const char *name, TList *out);  Find object 'name' in list 'out' or in the files specified in there. ;  ; static Int_t GetParameter (TCollection *c, const char *par, Double_t &value);  Get the value from the specified parameter from the specified collection. ;  ; static Int_t GetParameter (TCollection *c, const char *par, Int_t &value);  Get the value from the specified parameter from the specified collection. ;  ; static Int_t GetParameter (TCollection *c, const char *par, Long64_t &value);  Get the value from the specified parameter from the specified collection. ;  ; static Int_t GetParameter (TCollection *c, const char *par, Long_t &value);  Get the value from the specified parameter from the specified collection. ;  ; static Int_",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:31120,Modifiability,variab,variables,31120,"ority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TProof; static void AddEnvVar (const char *name, const char *value);  Add an variable to the list of environment variables passed to proofserv on the master and slaves. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void DelEnvVar (const char *name);  Remove an variable from the list of environment variables passed to proofserv on the master and slaves. ;  ; static const TList * GetEnvVars ();  Get environemnt variables. ;  ; static TObject * GetOutput (const char *name, TList *out);  Find object 'name' in list 'out' or in the files specified in there. ;  ; static Int_t GetParameter (TCollection *c, const char *par, Double_t &value);  Get the value from the specified parameter from the specified collection. ;  ; static Int_t GetParameter (TCollection *c, const char *par, Int_t &value);  Get the value from the specified parameter from the specified collection. ;  ; static Int_t GetParameter (TCollection *c, const char *par, Long64_t &value);  Get the value from the specified parameter from the specified collection. ;  ; static Int_t GetParameter (TCollection *c, const char *par, Long_t &value);  Get the value from the specified parameter from the specified collection. ;  ; static Int_",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:31234,Modifiability,variab,variables,31234,"sg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TProof; static void AddEnvVar (const char *name, const char *value);  Add an variable to the list of environment variables passed to proofserv on the master and slaves. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void DelEnvVar (const char *name);  Remove an variable from the list of environment variables passed to proofserv on the master and slaves. ;  ; static const TList * GetEnvVars ();  Get environemnt variables. ;  ; static TObject * GetOutput (const char *name, TList *out);  Find object 'name' in list 'out' or in the files specified in there. ;  ; static Int_t GetParameter (TCollection *c, const char *par, Double_t &value);  Get the value from the specified parameter from the specified collection. ;  ; static Int_t GetParameter (TCollection *c, const char *par, Int_t &value);  Get the value from the specified parameter from the specified collection. ;  ; static Int_t GetParameter (TCollection *c, const char *par, Long64_t &value);  Get the value from the specified parameter from the specified collection. ;  ; static Int_t GetParameter (TCollection *c, const char *par, Long_t &value);  Get the value from the specified parameter from the specified collection. ;  ; static Int_t GetParameter (TCollection *c, const char *par, TString &value);  Get the value from the specified parameter from the specified collection. ;  ; static void LogViewer (const char *url=0, ",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:32270,Modifiability,plugin,plugin,32270,"nvironemnt variables. ;  ; static TObject * GetOutput (const char *name, TList *out);  Find object 'name' in list 'out' or in the files specified in there. ;  ; static Int_t GetParameter (TCollection *c, const char *par, Double_t &value);  Get the value from the specified parameter from the specified collection. ;  ; static Int_t GetParameter (TCollection *c, const char *par, Int_t &value);  Get the value from the specified parameter from the specified collection. ;  ; static Int_t GetParameter (TCollection *c, const char *par, Long64_t &value);  Get the value from the specified parameter from the specified collection. ;  ; static Int_t GetParameter (TCollection *c, const char *par, Long_t &value);  Get the value from the specified parameter from the specified collection. ;  ; static Int_t GetParameter (TCollection *c, const char *par, TString &value);  Get the value from the specified parameter from the specified collection. ;  ; static void LogViewer (const char *url=0, Int_t sessionidx=0);  Start the log viewer window usign the plugin manager. ;  ; static TProofMgr * Mgr (const char *url);  Get instance of the effective manager for 'url' Return 0 on failure. ;  ; static TProof * Open (const char *url=0, const char *conffile=0, const char *confdir=0, Int_t loglevel=0);  Start a PROOF session on a specific cluster. ;  ; static void Reset (const char *url, Bool_t hard=kFALSE);  Wrapper around TProofMgr::Reset(...). ;  ; static void ResetEnvVars ();  Clear the list of environment variables passed to proofserv on the master and slaves. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:32727,Modifiability,variab,variables,32727,"r (TCollection *c, const char *par, Long64_t &value);  Get the value from the specified parameter from the specified collection. ;  ; static Int_t GetParameter (TCollection *c, const char *par, Long_t &value);  Get the value from the specified parameter from the specified collection. ;  ; static Int_t GetParameter (TCollection *c, const char *par, TString &value);  Get the value from the specified parameter from the specified collection. ;  ; static void LogViewer (const char *url=0, Int_t sessionidx=0);  Start the log viewer window usign the plugin manager. ;  ; static TProofMgr * Mgr (const char *url);  Get instance of the effective manager for 'url' Return 0 on failure. ;  ; static TProof * Open (const char *url=0, const char *conffile=0, const char *confdir=0, Int_t loglevel=0);  Start a PROOF session on a specific cluster. ;  ; static void Reset (const char *url, Bool_t hard=kFALSE);  Wrapper around TProofMgr::Reset(...). ;  ; static void ResetEnvVars ();  Clear the list of environment variables passed to proofserv on the master and slaves. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:32820,Modifiability,inherit,inherited,32820,"tParameter (TCollection *c, const char *par, TString &value);  Get the value from the specified parameter from the specified collection. ;  ; static void LogViewer (const char *url=0, Int_t sessionidx=0);  Start the log viewer window usign the plugin manager. ;  ; static TProofMgr * Mgr (const char *url);  Get instance of the effective manager for 'url' Return 0 on failure. ;  ; static TProof * Open (const char *url=0, const char *conffile=0, const char *confdir=0, Int_t loglevel=0);  Start a PROOF session on a specific cluster. ;  ; static void Reset (const char *url, Bool_t hard=kFALSE);  Wrapper around TProofMgr::Reset(...). ;  ; static void ResetEnvVars ();  Clear the list of environment variables passed to proofserv on the master and slaves. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This me",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:33030,Modifiability,inherit,inherited,33030,"tParameter (TCollection *c, const char *par, TString &value);  Get the value from the specified parameter from the specified collection. ;  ; static void LogViewer (const char *url=0, Int_t sessionidx=0);  Start the log viewer window usign the plugin manager. ;  ; static TProofMgr * Mgr (const char *url);  Get instance of the effective manager for 'url' Return 0 on failure. ;  ; static TProof * Open (const char *url=0, const char *conffile=0, const char *confdir=0, Int_t loglevel=0);  Start a PROOF session on a specific cluster. ;  ; static void Reset (const char *url, Bool_t hard=kFALSE);  Wrapper around TProofMgr::Reset(...). ;  ; static void ResetEnvVars ();  Clear the list of environment variables passed to proofserv on the master and slaves. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This me",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:33548,Modifiability,inherit,inherited,33548,"et (const char *url, Bool_t hard=kFALSE);  Wrapper around TProofMgr::Reset(...). ;  ; static void ResetEnvVars ();  Clear the list of environment variables passed to proofserv on the master and slaves. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullpt",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:35003,Modifiability,inherit,inherited,35003,"t of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; TVirtualProofPlayer * MakePlayer (const char *player=0, TSocket *s=0) override;  Construct a TProofPlayer object. ;  ; Bool_t StartSlaves (Bool_t) override;  Start up PROOF submasters. ;  ; void ValidateDSet (TDSet *dset) override;  Validate a TDSet. ;  ;  Protected Member Functions inherited from TProof;  TProof ();  Protected constructor to be used by classes deriving from TProof (they have to call Init themselves and override StartSlaves appropriately). ;  ; Int_t AddWorkers (TList *wrks);  Works on the master node only. ;  ; Int_t AssertPath (const char *path, Bool_t writable);  Make sure that 'path' exists; if 'writable' is kTRUE, make also sure that the path is writable. ;  ; Int_t Collect (ESlaves list=kActive, Long_t timeout=-1, Int_t endtype=-1, Bool_t deactonfail=kFALSE);  Collect responses from the slave servers. ;  ; Int_t Collect (TList *slaves, Long_t timeout=-1, Int_t endtype=-1, Bool_t deactonfail=kFALSE);  Collect responses from the slave servers. ;  ; TSlave * CreateSlave (const char *url, const char *ord, Int_t perf, const char *image, const char *workdir);  Create a new TSlave of type TSlave::kSlave. ;  ; TSlave * CreateSubmaster (const char *url, const char *ord, const char *image, const char *msd, Int_t nwk=1);  Create a new TSlave of type TSlave::kMaster. ;  ; TList * GetEnabledPackages () const;  ; TList * Get",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:36280,Modifiability,sandbox,sandbox,36280,"es appropriately). ;  ; Int_t AddWorkers (TList *wrks);  Works on the master node only. ;  ; Int_t AssertPath (const char *path, Bool_t writable);  Make sure that 'path' exists; if 'writable' is kTRUE, make also sure that the path is writable. ;  ; Int_t Collect (ESlaves list=kActive, Long_t timeout=-1, Int_t endtype=-1, Bool_t deactonfail=kFALSE);  Collect responses from the slave servers. ;  ; Int_t Collect (TList *slaves, Long_t timeout=-1, Int_t endtype=-1, Bool_t deactonfail=kFALSE);  Collect responses from the slave servers. ;  ; TSlave * CreateSlave (const char *url, const char *ord, Int_t perf, const char *image, const char *workdir);  Create a new TSlave of type TSlave::kSlave. ;  ; TSlave * CreateSubmaster (const char *url, const char *ord, const char *image, const char *msd, Int_t nwk=1);  Create a new TSlave of type TSlave::kMaster. ;  ; TList * GetEnabledPackages () const;  ; TList * GetListOfActiveSlaves () const;  ; TVirtualProofPlayer * GetPlayer () const;  ; TPluginHandler * GetProgressDialog () const;  ; Int_t GetSandbox (TString &sb, Bool_t assert=kFALSE, const char *rc=0);  Set the sandbox path from ' Proof.Sandbox' or the alternative var 'rc'. ;  ; void HandleLibIncPath (const char *what, Bool_t add, const char *dirs);  Handle lib, inc search paths modification request. ;  ; Int_t HandleOutputOptions (TString &opt, TString &target, Int_t action);  Extract from opt information about output handling settings. ;  ; Int_t Init (const char *masterurl, const char *conffile, const char *confdir, Int_t loglevel, const char *alias=0);  Start the PROOF environment. ;  ; void InitMembers ();  Default initializations. ;  ; virtual Int_t PollForNewWorkers ();  Asks the PROOF Serv for new workers in Dynamic Startup mode and activates them. ;  ; void PrepareInputDataFile (TString &dataFile);  Prepare the file with the input data objects to be sent the master; the objects are taken from the dedicated list and / or the specified file. ;  ; Int_t RemoveWorkers (TL",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:38326,Modifiability,inherit,inherited,38326,"file, Int_t opt=(kBinary|kForward|kCp|kCpBin), const char *rfile=0, TSlave *sl=0);  Send a file to master or slave servers. ;  ; virtual void SendInputDataFile ();  Send the input data objects to the master; the objects are taken from the dedicated list and / or the specified file. ;  ; void SetDSet (TDSet *dset);  ; void SetFeedback (TString &opt, TString &optfb, Int_t action);  Extract from opt in optfb information about wanted feedback settings. ;  ; void SetPlayer (TVirtualProofPlayer *player);  Set a new PROOF player. ;  ; void SetupWorkersEnv (TList *wrks, Bool_t increasingpool=kFALSE);  Set up packages, loaded macros, include and lib paths ... ;  ; void UpdateDialog ();  Final update of the progress dialog. ;  ; Int_t VerifyDataSetParallel (const char *uri, const char *optStr);  Internal function for parallel dataset verification used TProof::VerifyDataSet and TProofLite::VerifyDataSet. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Friends; class TProofPlayerSuperMaster;  . Additional Inherited Members;  Public Types inherited from TProof; enum  EProofClearData { kPurge = 0x1; , kUnregistered = 0x2; , kDataset = 0x4; , kForceClear = 0x8; };  ; enum  EQueryMode { kSync = 0; , kAsync = 1; };  ; enum  ERegisterOpt { kFailIfExists = 0; , kOverwriteIfExists = 1; , kMergeIfExists = 2; };  ; enum  ERunStatus { kRunning = 0; , kStopped = 1; , kAborted = 2; };  ; enum  EStatusBits { ;   kUsingSessionGui = (1ULL << ( 14 )); , kNewInputData = (1ULL << ( 15 )); , kIsClient = (1ULL << ( 16 )); , kIsMaster = (1ULL << ( 17 )); , ;   kIsTopMaster = (1ULL << ( 18 )); , kUseProgressDialog = (1ULL << ( 19 )). };  ; enum  ESubMerger { ;   kOutputSize = 1; , kSendOutput = 2; , ",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:38537,Modifiability,inherit,inherited,38537,"ut data objects to the master; the objects are taken from the dedicated list and / or the specified file. ;  ; void SetDSet (TDSet *dset);  ; void SetFeedback (TString &opt, TString &optfb, Int_t action);  Extract from opt in optfb information about wanted feedback settings. ;  ; void SetPlayer (TVirtualProofPlayer *player);  Set a new PROOF player. ;  ; void SetupWorkersEnv (TList *wrks, Bool_t increasingpool=kFALSE);  Set up packages, loaded macros, include and lib paths ... ;  ; void UpdateDialog ();  Final update of the progress dialog. ;  ; Int_t VerifyDataSetParallel (const char *uri, const char *optStr);  Internal function for parallel dataset verification used TProof::VerifyDataSet and TProofLite::VerifyDataSet. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Friends; class TProofPlayerSuperMaster;  . Additional Inherited Members;  Public Types inherited from TProof; enum  EProofClearData { kPurge = 0x1; , kUnregistered = 0x2; , kDataset = 0x4; , kForceClear = 0x8; };  ; enum  EQueryMode { kSync = 0; , kAsync = 1; };  ; enum  ERegisterOpt { kFailIfExists = 0; , kOverwriteIfExists = 1; , kMergeIfExists = 2; };  ; enum  ERunStatus { kRunning = 0; , kStopped = 1; , kAborted = 2; };  ; enum  EStatusBits { ;   kUsingSessionGui = (1ULL << ( 14 )); , kNewInputData = (1ULL << ( 15 )); , kIsClient = (1ULL << ( 16 )); , kIsMaster = (1ULL << ( 17 )); , ;   kIsTopMaster = (1ULL << ( 18 )); , kUseProgressDialog = (1ULL << ( 19 )). };  ; enum  ESubMerger { ;   kOutputSize = 1; , kSendOutput = 2; , kBeMerger = 3; , kMergerDown = 4; , ;   kStopMerging = 5; , kOutputSent = 6. };  ; enum  EUploadOpt { ;   kAppend = 0x1; , kOverwriteDataSet = 0x2; , kNoOverwriteDataSet = 0x4; ",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:38734,Modifiability,inherit,inherited,38734," loaded macros, include and lib paths ... ;  ; void UpdateDialog ();  Final update of the progress dialog. ;  ; Int_t VerifyDataSetParallel (const char *uri, const char *optStr);  Internal function for parallel dataset verification used TProof::VerifyDataSet and TProofLite::VerifyDataSet. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Friends; class TProofPlayerSuperMaster;  . Additional Inherited Members;  Public Types inherited from TProof; enum  EProofClearData { kPurge = 0x1; , kUnregistered = 0x2; , kDataset = 0x4; , kForceClear = 0x8; };  ; enum  EQueryMode { kSync = 0; , kAsync = 1; };  ; enum  ERegisterOpt { kFailIfExists = 0; , kOverwriteIfExists = 1; , kMergeIfExists = 2; };  ; enum  ERunStatus { kRunning = 0; , kStopped = 1; , kAborted = 2; };  ; enum  EStatusBits { ;   kUsingSessionGui = (1ULL << ( 14 )); , kNewInputData = (1ULL << ( 15 )); , kIsClient = (1ULL << ( 16 )); , kIsMaster = (1ULL << ( 17 )); , ;   kIsTopMaster = (1ULL << ( 18 )); , kUseProgressDialog = (1ULL << ( 19 )). };  ; enum  ESubMerger { ;   kOutputSize = 1; , kSendOutput = 2; , kBeMerger = 3; , kMergerDown = 4; , ;   kStopMerging = 5; , kOutputSent = 6. };  ; enum  EUploadOpt { ;   kAppend = 0x1; , kOverwriteDataSet = 0x2; , kNoOverwriteDataSet = 0x4; , kOverwriteAllFiles = 0x8; , ;   kOverwriteNoFiles = 0x10; , kAskUser = 0x0. };  ; enum  EUploadPackageOpt { kUntar = 0x0; , kRemoveOld = 0x1; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 ",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:39727,Modifiability,inherit,inherited,39727,"fClearData { kPurge = 0x1; , kUnregistered = 0x2; , kDataset = 0x4; , kForceClear = 0x8; };  ; enum  EQueryMode { kSync = 0; , kAsync = 1; };  ; enum  ERegisterOpt { kFailIfExists = 0; , kOverwriteIfExists = 1; , kMergeIfExists = 2; };  ; enum  ERunStatus { kRunning = 0; , kStopped = 1; , kAborted = 2; };  ; enum  EStatusBits { ;   kUsingSessionGui = (1ULL << ( 14 )); , kNewInputData = (1ULL << ( 15 )); , kIsClient = (1ULL << ( 16 )); , kIsMaster = (1ULL << ( 17 )); , ;   kIsTopMaster = (1ULL << ( 18 )); , kUseProgressDialog = (1ULL << ( 19 )). };  ; enum  ESubMerger { ;   kOutputSize = 1; , kSendOutput = 2; , kBeMerger = 3; , kMergerDown = 4; , ;   kStopMerging = 5; , kOutputSent = 6. };  ; enum  EUploadOpt { ;   kAppend = 0x1; , kOverwriteDataSet = 0x2; , kNoOverwriteDataSet = 0x4; , kOverwriteAllFiles = 0x8; , ;   kOverwriteNoFiles = 0x10; , kAskUser = 0x0. };  ; enum  EUploadPackageOpt { kUntar = 0x0; , kRemoveOld = 0x1; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TProof; enum  ESlaves { kAll; , kActive; , kUnique; , kAllUnique; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TProof; static Int_t AssertDataSet (TDSet *dset, TList *input, TDataSetManager *mgr, TString &emsg);  Make sure that dataset is in the form to be processed. ;  ; static void As",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:40368,Modifiability,inherit,inherited,40368,"teDataSet = 0x4; , kOverwriteAllFiles = 0x8; , ;   kOverwriteNoFiles = 0x10; , kAskUser = 0x0. };  ; enum  EUploadPackageOpt { kUntar = 0x0; , kRemoveOld = 0x1; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TProof; enum  ESlaves { kAll; , kActive; , kUnique; , kAllUnique; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TProof; static Int_t AssertDataSet (TDSet *dset, TList *input, TDataSetManager *mgr, TString &emsg);  Make sure that dataset is in the form to be processed. ;  ; static void AssertMacroPath (const char *macro);  Make sure that the directory path contained by macro is in the macro path. ;  ; static Bool_t GetFileInCmd (const char *cmd, TString &fn);  Static method to extract the filename (if any) form a CINT command. ;  ; static Int_t GetInputData (TList *input, const char *cachedir, TString &emsg);  Get the input data from the file defined in the input list. ;  ; static Int_t SaveInputData (TQueryResult *qr, const char *cachedir, TString &emsg);  Save input data file from 'cachedir' into the sandbox or create a the file with input data objects. ;  ; static Int_t SendInputData (TQueryResult *qr, TProof *p, TString &emsg);  Send the input data file to the workers. ;  ; static void * SlaveStartupThread (void *arg);  ; static void SystemCmd (co",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:40472,Modifiability,inherit,inherited,40472,"teDataSet = 0x4; , kOverwriteAllFiles = 0x8; , ;   kOverwriteNoFiles = 0x10; , kAskUser = 0x0. };  ; enum  EUploadPackageOpt { kUntar = 0x0; , kRemoveOld = 0x1; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TProof; enum  ESlaves { kAll; , kActive; , kUnique; , kAllUnique; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TProof; static Int_t AssertDataSet (TDSet *dset, TList *input, TDataSetManager *mgr, TString &emsg);  Make sure that dataset is in the form to be processed. ;  ; static void AssertMacroPath (const char *macro);  Make sure that the directory path contained by macro is in the macro path. ;  ; static Bool_t GetFileInCmd (const char *cmd, TString &fn);  Static method to extract the filename (if any) form a CINT command. ;  ; static Int_t GetInputData (TList *input, const char *cachedir, TString &emsg);  Get the input data from the file defined in the input list. ;  ; static Int_t SaveInputData (TQueryResult *qr, const char *cachedir, TString &emsg);  Save input data file from 'cachedir' into the sandbox or create a the file with input data objects. ;  ; static Int_t SendInputData (TQueryResult *qr, TProof *p, TString &emsg);  Send the input data file to the workers. ;  ; static void * SlaveStartupThread (void *arg);  ; static void SystemCmd (co",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:40578,Modifiability,inherit,inherited,40578,"teDataSet = 0x4; , kOverwriteAllFiles = 0x8; , ;   kOverwriteNoFiles = 0x10; , kAskUser = 0x0. };  ; enum  EUploadPackageOpt { kUntar = 0x0; , kRemoveOld = 0x1; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TProof; enum  ESlaves { kAll; , kActive; , kUnique; , kAllUnique; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TProof; static Int_t AssertDataSet (TDSet *dset, TList *input, TDataSetManager *mgr, TString &emsg);  Make sure that dataset is in the form to be processed. ;  ; static void AssertMacroPath (const char *macro);  Make sure that the directory path contained by macro is in the macro path. ;  ; static Bool_t GetFileInCmd (const char *cmd, TString &fn);  Static method to extract the filename (if any) form a CINT command. ;  ; static Int_t GetInputData (TList *input, const char *cachedir, TString &emsg);  Get the input data from the file defined in the input list. ;  ; static Int_t SaveInputData (TQueryResult *qr, const char *cachedir, TString &emsg);  Save input data file from 'cachedir' into the sandbox or create a the file with input data objects. ;  ; static Int_t SendInputData (TQueryResult *qr, TProof *p, TString &emsg);  Send the input data file to the workers. ;  ; static void * SlaveStartupThread (void *arg);  ; static void SystemCmd (co",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:41294,Modifiability,sandbox,sandbox,41294," = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TProof; enum  ESlaves { kAll; , kActive; , kUnique; , kAllUnique; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TProof; static Int_t AssertDataSet (TDSet *dset, TList *input, TDataSetManager *mgr, TString &emsg);  Make sure that dataset is in the form to be processed. ;  ; static void AssertMacroPath (const char *macro);  Make sure that the directory path contained by macro is in the macro path. ;  ; static Bool_t GetFileInCmd (const char *cmd, TString &fn);  Static method to extract the filename (if any) form a CINT command. ;  ; static Int_t GetInputData (TList *input, const char *cachedir, TString &emsg);  Get the input data from the file defined in the input list. ;  ; static Int_t SaveInputData (TQueryResult *qr, const char *cachedir, TString &emsg);  Save input data file from 'cachedir' into the sandbox or create a the file with input data objects. ;  ; static Int_t SendInputData (TQueryResult *qr, TProof *p, TString &emsg);  Send the input data file to the workers. ;  ; static void * SlaveStartupThread (void *arg);  ; static void SystemCmd (const char *cmd, Int_t fdout);  Exec system command 'cmd'. If fdout > -1, append the output to fdout. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows ",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:41687,Modifiability,inherit,inherited,41687,"oPath (const char *macro);  Make sure that the directory path contained by macro is in the macro path. ;  ; static Bool_t GetFileInCmd (const char *cmd, TString &fn);  Static method to extract the filename (if any) form a CINT command. ;  ; static Int_t GetInputData (TList *input, const char *cachedir, TString &emsg);  Get the input data from the file defined in the input list. ;  ; static Int_t SaveInputData (TQueryResult *qr, const char *cachedir, TString &emsg);  Save input data file from 'cachedir' into the sandbox or create a the file with input data objects. ;  ; static Int_t SendInputData (TQueryResult *qr, TProof *p, TString &emsg);  Send the input data file to the workers. ;  ; static void * SlaveStartupThread (void *arg);  ; static void SystemCmd (const char *cmd, Int_t fdout);  Exec system command 'cmd'. If fdout > -1, append the output to fdout. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TProof; TMonitor * fAllMonitor;  ; TList * fAvailablePackages;  ; TList * fBadSlaves;  ; Long64_t fBytesReady;  ; Int_t fCollectTimeout;  ; TString fConfDir;  ; TString fConfFile;  ; TString fDataPoolUrl;  ; Bool_t fDataReady;",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:42536,Modifiability,inherit,inherited,42536,"y typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TProof; TMonitor * fAllMonitor;  ; TList * fAvailablePackages;  ; TList * fBadSlaves;  ; Long64_t fBytesReady;  ; Int_t fCollectTimeout;  ; TString fConfDir;  ; TString fConfFile;  ; TString fDataPoolUrl;  ; Bool_t fDataReady;  ; Bool_t fDynamicStartup;  ; TList * fEnabledPackages;  ; TString fImage;  ; TProofMgr * fManager;  ; Bool_t fMasterServ;  ; Float_t fPrepTime;  ; Int_t fProtocol;  ; EQueryMode fQueryMode;  ; TStopwatch fQuerySTW;  ; TList * fRunningDSets;  ; TSelector * fSelector;  ; TProofMgr::EServType fServType;  ; TList * fSlaves;  ; TList * fTerminatedSlaveInfos;  ; Long64_t fTotalBytes;  ; TUrl fUrl;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TProofSuperMaster.h>. Inheritance diagram for TProofSuperMaster:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofSuperMaster(). TProofSuperMaster::TProofSuperMaster ; (; const char * ; masterurl, . const char * ; conffile = kPROOF_ConfFile, . const char * ; confdir = kPROOF_ConfDir, . Int_t ; loglevel = 0, . const char * ; alias = 0, . TProof",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:43199,Modifiability,inherit,inherited,43199,"y typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TProof; TMonitor * fAllMonitor;  ; TList * fAvailablePackages;  ; TList * fBadSlaves;  ; Long64_t fBytesReady;  ; Int_t fCollectTimeout;  ; TString fConfDir;  ; TString fConfFile;  ; TString fDataPoolUrl;  ; Bool_t fDataReady;  ; Bool_t fDynamicStartup;  ; TList * fEnabledPackages;  ; TString fImage;  ; TProofMgr * fManager;  ; Bool_t fMasterServ;  ; Float_t fPrepTime;  ; Int_t fProtocol;  ; EQueryMode fQueryMode;  ; TStopwatch fQuerySTW;  ; TList * fRunningDSets;  ; TSelector * fSelector;  ; TProofMgr::EServType fServType;  ; TList * fSlaves;  ; TList * fTerminatedSlaveInfos;  ; Long64_t fTotalBytes;  ; TUrl fUrl;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TProofSuperMaster.h>. Inheritance diagram for TProofSuperMaster:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofSuperMaster(). TProofSuperMaster::TProofSuperMaster ; (; const char * ; masterurl, . const char * ; conffile = kPROOF_ConfFile, . const char * ; confdir = kPROOF_ConfDir, . Int_t ; loglevel = 0, . const char * ; alias = 0, . TProof",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:43281,Modifiability,inherit,inherited,43281,"y typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TProof; TMonitor * fAllMonitor;  ; TList * fAvailablePackages;  ; TList * fBadSlaves;  ; Long64_t fBytesReady;  ; Int_t fCollectTimeout;  ; TString fConfDir;  ; TString fConfFile;  ; TString fDataPoolUrl;  ; Bool_t fDataReady;  ; Bool_t fDynamicStartup;  ; TList * fEnabledPackages;  ; TString fImage;  ; TProofMgr * fManager;  ; Bool_t fMasterServ;  ; Float_t fPrepTime;  ; Int_t fProtocol;  ; EQueryMode fQueryMode;  ; TStopwatch fQuerySTW;  ; TList * fRunningDSets;  ; TSelector * fSelector;  ; TProofMgr::EServType fServType;  ; TList * fSlaves;  ; TList * fTerminatedSlaveInfos;  ; Long64_t fTotalBytes;  ; TUrl fUrl;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TProofSuperMaster.h>. Inheritance diagram for TProofSuperMaster:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofSuperMaster(). TProofSuperMaster::TProofSuperMaster ; (; const char * ; masterurl, . const char * ; conffile = kPROOF_ConfFile, . const char * ; confdir = kPROOF_ConfDir, . Int_t ; loglevel = 0, . const char * ; alias = 0, . TProof",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:43494,Modifiability,inherit,inherited,43494,"y typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TProof; TMonitor * fAllMonitor;  ; TList * fAvailablePackages;  ; TList * fBadSlaves;  ; Long64_t fBytesReady;  ; Int_t fCollectTimeout;  ; TString fConfDir;  ; TString fConfFile;  ; TString fDataPoolUrl;  ; Bool_t fDataReady;  ; Bool_t fDynamicStartup;  ; TList * fEnabledPackages;  ; TString fImage;  ; TProofMgr * fManager;  ; Bool_t fMasterServ;  ; Float_t fPrepTime;  ; Int_t fProtocol;  ; EQueryMode fQueryMode;  ; TStopwatch fQuerySTW;  ; TList * fRunningDSets;  ; TSelector * fSelector;  ; TProofMgr::EServType fServType;  ; TList * fSlaves;  ; TList * fTerminatedSlaveInfos;  ; Long64_t fTotalBytes;  ; TUrl fUrl;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TProofSuperMaster.h>. Inheritance diagram for TProofSuperMaster:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofSuperMaster(). TProofSuperMaster::TProofSuperMaster ; (; const char * ; masterurl, . const char * ; conffile = kPROOF_ConfFile, . const char * ; confdir = kPROOF_ConfDir, . Int_t ; loglevel = 0, . const char * ; alias = 0, . TProof",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:46809,Modifiability,flexible,flexible,46809," ). inlineoverridevirtual . Process a dataset which is stored on the master with name 'dsetname'. ; The syntax for dsetname is name[#[dir/]objname], e.g. ""mydset"" analysis of the first tree in the top dir of the dataset named ""mydset"" ""mydset#T"" analysis tree ""T"" in the top dir of the dataset named ""mydset"" ""mydset#adir/T"" analysis tree ""T"" in the dir ""adir"" of the dataset named ""mydset"" ""mydset#adir/"" analysis of the first tree in the dir ""adir"" of the dataset named ""mydset"" The component 'name' in its more general form contains also the group and user name following ""/<group>/<user>/<dsname>"". Each of these components can contain one or more wildcards '*', in which case all the datasets matching the expression are added together as a global dataset (wildcard support has been added in version 5.27/02). The last argument 'elist' specifies an entry- or event-list to be used as event selection. It is also possible (starting w/ version 5.27/02) to run on multiple datasets at once in a more flexible way that the one provided by wildcarding. There are three possibilities: 1) specifying the dataset names separated by the OR operator '|', e.g. dsetname = ""<dset1>|<dset2>|<dset3>|..."" in this case the datasets are a seen as a global unique dataset 2) specifying the dataset names separated by a ',' or a ' ', e.g. dsetname = ""<dset1>,<dset2> <dset3>,..."" in this case the datasets are processed one after the other and the selector is notified when switching dataset via a bit in the current processed element. 3) giving the path of a textfile where the dataset names are specified on one or multiple lines; the lines found are joined as in 1), unless the filepath is followed by a ',' (i.e. p->Process(""datasets.txt,"",...) with the dataset names listed in 'datasets.txt') in which case they are treated as in 2); the file is open in raw mode with TFile::Open and therefore it cane be remote, e.g. on a Web server. Each <dsetj> has the format specified above for the single dataset process",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:4387,Performance,cache,caches,4387,"onClient=kFALSE, TList *wrks=0, Bool_t doCollect=kTRUE);  Add 'incpath' to the inc path search. ;  ; void AddInput (TObject *obj);  Add objects that might be needed during the processing of the selector (see Process()). ;  ; void AddInputData (TObject *obj, Bool_t push=kFALSE);  Add data objects that might be needed during the processing of the selector (see Process()). ;  ; Int_t Archive (const char *queryref, const char *url=0);  Send archive request for the query specified by ref. ;  ; Int_t Archive (Int_t query, const char *url);  Send archive request for the qry-th query in fQueries. ;  ; void Browse (TBrowser *b) override;  Build the PROOF's structure in the browser. ;  ; virtual Bool_t CancelStagingDataSet (const char *dataset);  Cancels a dataset staging request. ;  ; void cd (Int_t id=-1);  Set session with 'id' the default one. ;  ; Int_t CleanupSession (const char *sessiontag);  Send cleanup request for the session specified by tag. ;  ; virtual void ClearCache (const char *file=0);  Remove file from all file caches. ;  ; void ClearData (UInt_t what=kUnregistered, const char *dsname=0);  Remove files for the data directory. ;  ; virtual void ClearDataSetCache (const char *dataset=0);  Clear the content of the dataset cache, if any (matching 'dataset', if defined). ;  ; void ClearFeedback ();  Clear feedback list. ;  ; void ClearInput ();  Clear input object list. ;  ; void ClearInputData (const char *name);  Remove obj 'name' form the input data list;. ;  ; void ClearInputData (TObject *obj=0);  Remove obj form the input data list; if obj is null (default), clear the input data info. ;  ; Int_t ClearPackage (const char *package);  Remove a specific package. ;  ; Int_t ClearPackages ();  Remove all packages. ;  ; void Close (Option_t *option="""");  Close all open slave servers. ;  ; void CloseProgressDialog ();  Close progress dialog. ;  ; TDrawFeedback * CreateDrawFeedback ();  Draw feedback creation proxy. ;  ; void DataSetStatus (const char *msg, Bool_t ",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:4599,Performance,cache,cache,4599,"; void AddInputData (TObject *obj, Bool_t push=kFALSE);  Add data objects that might be needed during the processing of the selector (see Process()). ;  ; Int_t Archive (const char *queryref, const char *url=0);  Send archive request for the query specified by ref. ;  ; Int_t Archive (Int_t query, const char *url);  Send archive request for the qry-th query in fQueries. ;  ; void Browse (TBrowser *b) override;  Build the PROOF's structure in the browser. ;  ; virtual Bool_t CancelStagingDataSet (const char *dataset);  Cancels a dataset staging request. ;  ; void cd (Int_t id=-1);  Set session with 'id' the default one. ;  ; Int_t CleanupSession (const char *sessiontag);  Send cleanup request for the session specified by tag. ;  ; virtual void ClearCache (const char *file=0);  Remove file from all file caches. ;  ; void ClearData (UInt_t what=kUnregistered, const char *dsname=0);  Remove files for the data directory. ;  ; virtual void ClearDataSetCache (const char *dataset=0);  Clear the content of the dataset cache, if any (matching 'dataset', if defined). ;  ; void ClearFeedback ();  Clear feedback list. ;  ; void ClearInput ();  Clear input object list. ;  ; void ClearInputData (const char *name);  Remove obj 'name' form the input data list;. ;  ; void ClearInputData (TObject *obj=0);  Remove obj form the input data list; if obj is null (default), clear the input data info. ;  ; Int_t ClearPackage (const char *package);  Remove a specific package. ;  ; Int_t ClearPackages ();  Remove all packages. ;  ; void Close (Option_t *option="""");  Close all open slave servers. ;  ; void CloseProgressDialog ();  Close progress dialog. ;  ; TDrawFeedback * CreateDrawFeedback ();  Draw feedback creation proxy. ;  ; void DataSetStatus (const char *msg, Bool_t status, Int_t done, Int_t total);  Send dataset preparation status. ;  ; Int_t DeactivateWorker (const char *ord, Bool_t save=kTRUE);  Remove the worker identified by the ordinal number 'ord' from the the active list. ;  ; v",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:7034,Performance,load,loadopts,7034," ;  ; Long64_t DrawSelect (const char *dsetname, const char *varexp, const char *selection="""", Option_t *option="""", Long64_t nentries=-1, Long64_t firstentry=0, TObject *enl=0);  Execute the specified drawing action on a data set which is stored on the master with name 'dsetname'. ;  ; virtual Long64_t DrawSelect (TDSet *dset, const char *varexp, const char *selection="""", Option_t *option="""", Long64_t nentries=-1, Long64_t firstentry=0);  Execute the specified drawing action on a data set (TDSet). ;  ; virtual Int_t Echo (const char *str);  Sends a string to master and workers and expect them to echo it back to the client via a message. ;  ; virtual Int_t Echo (const TObject *obj);  Sends an object to master and workers and expect them to send back a message with the output of its TObject::Print(). ;  ; Int_t EnablePackage (const char *package, Bool_t notOnClient=kFALSE, TList *workers=0);  Enable specified package. ;  ; Int_t EnablePackage (const char *package, const char *loadopts, Bool_t notOnClient=kFALSE, TList *workers=0);  Enable specified package. ;  ; Int_t EnablePackage (const char *package, TList *loadopts, Bool_t notOnClient=kFALSE, TList *workers=0);  Enable specified package. ;  ; Int_t Exec (const char *cmd, Bool_t plusMaster=kFALSE);  Send command to be executed on the PROOF master and/or slaves. ;  ; Int_t Exec (const char *cmd, const char *ord, Bool_t logtomacro=kFALSE);  Send command to be executed on node of ordinal 'ord' (use ""0"" for master). ;  ; virtual Bool_t ExistsDataSet (const char *dataset);  Returns kTRUE if 'dataset' exists, kFALSE otherwise. ;  ; void Feedback (TList *objs);  Get list of feedback objects. ;  ; Long64_t Finalize (const char *queryref, Bool_t force=kFALSE);  Finalize query with reference ref. ;  ; Long64_t Finalize (Int_t query=-1, Bool_t force=kFALSE);  Finalize the qry-th query in fQueries. ;  ; TList * FindDataSets (const char *searchString, const char *optStr="""");  Find datasets, returns in a TList all found datasets",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:7171,Performance,load,loadopts,7171,"ong64_t firstentry=0, TObject *enl=0);  Execute the specified drawing action on a data set which is stored on the master with name 'dsetname'. ;  ; virtual Long64_t DrawSelect (TDSet *dset, const char *varexp, const char *selection="""", Option_t *option="""", Long64_t nentries=-1, Long64_t firstentry=0);  Execute the specified drawing action on a data set (TDSet). ;  ; virtual Int_t Echo (const char *str);  Sends a string to master and workers and expect them to echo it back to the client via a message. ;  ; virtual Int_t Echo (const TObject *obj);  Sends an object to master and workers and expect them to send back a message with the output of its TObject::Print(). ;  ; Int_t EnablePackage (const char *package, Bool_t notOnClient=kFALSE, TList *workers=0);  Enable specified package. ;  ; Int_t EnablePackage (const char *package, const char *loadopts, Bool_t notOnClient=kFALSE, TList *workers=0);  Enable specified package. ;  ; Int_t EnablePackage (const char *package, TList *loadopts, Bool_t notOnClient=kFALSE, TList *workers=0);  Enable specified package. ;  ; Int_t Exec (const char *cmd, Bool_t plusMaster=kFALSE);  Send command to be executed on the PROOF master and/or slaves. ;  ; Int_t Exec (const char *cmd, const char *ord, Bool_t logtomacro=kFALSE);  Send command to be executed on node of ordinal 'ord' (use ""0"" for master). ;  ; virtual Bool_t ExistsDataSet (const char *dataset);  Returns kTRUE if 'dataset' exists, kFALSE otherwise. ;  ; void Feedback (TList *objs);  Get list of feedback objects. ;  ; Long64_t Finalize (const char *queryref, Bool_t force=kFALSE);  Finalize query with reference ref. ;  ; Long64_t Finalize (Int_t query=-1, Bool_t force=kFALSE);  Finalize the qry-th query in fQueries. ;  ; TList * FindDataSets (const char *searchString, const char *optStr="""");  Find datasets, returns in a TList all found datasets. ;  ; Long64_t GetBytesRead () const;  ; Int_t GetClientProtocol () const;  ; const char * GetConfDir () const;  ; const char * GetConfFile",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:15360,Performance,perform,performance,15360,"t RemoveDataSet (const char *dataset, const char *optStr="""");  Remove the specified dataset from the PROOF cluster. ;  ; Int_t RemoveDynamicPath (const char *libpath, Bool_t onClient=kFALSE);  Remove 'libpath' from the lib path search. ;  ; void RemoveFeedback (const char *name);  Remove object from feedback list. ;  ; Int_t RemoveIncludePath (const char *incpath, Bool_t onClient=kFALSE);  Remove 'incpath' from the inc path search. ;  ; virtual Bool_t RequestStagingDataSet (const char *dataset);  Allows users to request staging of a particular dataset. ;  ; void ResetProgressDialog (const char *sel, Int_t sz, Long64_t fst, Long64_t ent);  Reset progress dialog. ;  ; void ResetProgressDialogStatus ();  ; Int_t Retrieve (const char *queryref, const char *path=0);  Send retrieve request for the query specified by ref. ;  ; Int_t Retrieve (Int_t query, const char *path=0);  Send retrieve request for the qry-th query in fQueries. ;  ; Int_t SavePerfTree (const char *pf=0, const char *qref=0);  Save performance information from TPerfStats to file 'pf'. ;  ; void SendDataSetStatus (const char *msg, UInt_t n, UInt_t tot, Bool_t st);  Send or notify data set status. ;  ; Bool_t SendingLogToWindow () const;  ; void SendLogToWindow (Bool_t mode);  ; void SetActive (Bool_t=kTRUE);  ; virtual void SetAlias (const char *alias="""");  Set an alias for this session. ;  ; void SetDataPoolUrl (const char *url);  ; virtual Int_t SetDataSetTreeName (const char *dataset, const char *treename);  Set/Change the name of the default tree. ;  ; void SetDrawFeedbackOption (TDrawFeedback *f, Option_t *opt);  Set draw feedback option. ;  ; void SetInputDataFile (const char *datafile);  Set the file to be used to optimally distribute the input data objects. ;  ; void SetLogLevel (Int_t level, UInt_t mask=TProofDebug::kAll);  Set server logging level. ;  ; void SetManager (TProofMgr *mgr);  Set manager and schedule its destruction after this for clean operations. ;  ; void SetMaxDrawQueries (Int_t ",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:17070,Performance,perform,performance,17070," to be used to optimally distribute the input data objects. ;  ; void SetLogLevel (Int_t level, UInt_t mask=TProofDebug::kAll);  Set server logging level. ;  ; void SetManager (TProofMgr *mgr);  Set manager and schedule its destruction after this for clean operations. ;  ; void SetMaxDrawQueries (Int_t max);  Set max number of draw queries whose results are saved. ;  ; Int_t SetParallel (Int_t nodes=-1, Bool_t random=kFALSE);  Tell PROOF how many slaves to use in parallel. ;  ; void SetParameter (const char *par, const char *value);  Set input list parameter. ;  ; void SetParameter (const char *par, Double_t value);  Set an input list parameter. ;  ; void SetParameter (const char *par, Int_t value);  Set an input list parameter. ;  ; void SetParameter (const char *par, Long64_t value);  Set an input list parameter. ;  ; void SetParameter (const char *par, Long_t value);  Set an input list parameter. ;  ; void SetPerfTree (const char *pf=""perftree.root"", Bool_t withWrks=kFALSE);  Enable/Disable saving of the performance tree. ;  ; void SetPrintProgress (PrintProgress_t pp);  ; void SetProgressDialog (Bool_t on=kTRUE);  Enable/Disable the graphic progress dialog. ;  ; void SetQueryMode (EQueryMode mode);  Change query running mode to the one specified by 'mode'. ;  ; void SetRealTimeLog (Bool_t on=kTRUE);  Switch ON/OFF the real-time logging facility. ;  ; virtual void ShowCache (Bool_t all=kFALSE);  List contents of file cache. ;  ; virtual void ShowData ();  List contents of the data directory in the sandbox. ;  ; void ShowDataSet (const char *dataset="""", const char *opt=""filter:SsCc"");  display meta-info for given dataset usi ;  ; virtual void ShowDataSetCache (const char *dataset=0);  Display the content of the dataset cache, if any (matching 'dataset', if defined). ;  ; void ShowDataSetQuota (Option_t *opt=0);  shows the quota and usage of all groups if opt contains ""U"" shows also distribution of usage on user-level ;  ; virtual void ShowDataSets (const char *uri=",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:17491,Performance,cache,cache,17491,"l_t random=kFALSE);  Tell PROOF how many slaves to use in parallel. ;  ; void SetParameter (const char *par, const char *value);  Set input list parameter. ;  ; void SetParameter (const char *par, Double_t value);  Set an input list parameter. ;  ; void SetParameter (const char *par, Int_t value);  Set an input list parameter. ;  ; void SetParameter (const char *par, Long64_t value);  Set an input list parameter. ;  ; void SetParameter (const char *par, Long_t value);  Set an input list parameter. ;  ; void SetPerfTree (const char *pf=""perftree.root"", Bool_t withWrks=kFALSE);  Enable/Disable saving of the performance tree. ;  ; void SetPrintProgress (PrintProgress_t pp);  ; void SetProgressDialog (Bool_t on=kTRUE);  Enable/Disable the graphic progress dialog. ;  ; void SetQueryMode (EQueryMode mode);  Change query running mode to the one specified by 'mode'. ;  ; void SetRealTimeLog (Bool_t on=kTRUE);  Switch ON/OFF the real-time logging facility. ;  ; virtual void ShowCache (Bool_t all=kFALSE);  List contents of file cache. ;  ; virtual void ShowData ();  List contents of the data directory in the sandbox. ;  ; void ShowDataSet (const char *dataset="""", const char *opt=""filter:SsCc"");  display meta-info for given dataset usi ;  ; virtual void ShowDataSetCache (const char *dataset=0);  Display the content of the dataset cache, if any (matching 'dataset', if defined). ;  ; void ShowDataSetQuota (Option_t *opt=0);  shows the quota and usage of all groups if opt contains ""U"" shows also distribution of usage on user-level ;  ; virtual void ShowDataSets (const char *uri="""", const char *optStr="""");  Shows datasets in locations that match the uri. ;  ; void ShowEnabledPackages (Bool_t all=kFALSE);  List which packages are enabled. ;  ; void ShowFeedback () const;  Show items in feedback list. ;  ; void ShowLog (const char *queryref);  Display on screen the content of the temporary log file for query in reference. ;  ; void ShowLog (Int_t qry=-1);  Display on screen the conte",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:17798,Performance,cache,cache,17798,"tParameter (const char *par, Int_t value);  Set an input list parameter. ;  ; void SetParameter (const char *par, Long64_t value);  Set an input list parameter. ;  ; void SetParameter (const char *par, Long_t value);  Set an input list parameter. ;  ; void SetPerfTree (const char *pf=""perftree.root"", Bool_t withWrks=kFALSE);  Enable/Disable saving of the performance tree. ;  ; void SetPrintProgress (PrintProgress_t pp);  ; void SetProgressDialog (Bool_t on=kTRUE);  Enable/Disable the graphic progress dialog. ;  ; void SetQueryMode (EQueryMode mode);  Change query running mode to the one specified by 'mode'. ;  ; void SetRealTimeLog (Bool_t on=kTRUE);  Switch ON/OFF the real-time logging facility. ;  ; virtual void ShowCache (Bool_t all=kFALSE);  List contents of file cache. ;  ; virtual void ShowData ();  List contents of the data directory in the sandbox. ;  ; void ShowDataSet (const char *dataset="""", const char *opt=""filter:SsCc"");  display meta-info for given dataset usi ;  ; virtual void ShowDataSetCache (const char *dataset=0);  Display the content of the dataset cache, if any (matching 'dataset', if defined). ;  ; void ShowDataSetQuota (Option_t *opt=0);  shows the quota and usage of all groups if opt contains ""U"" shows also distribution of usage on user-level ;  ; virtual void ShowDataSets (const char *uri="""", const char *optStr="""");  Shows datasets in locations that match the uri. ;  ; void ShowEnabledPackages (Bool_t all=kFALSE);  List which packages are enabled. ;  ; void ShowFeedback () const;  Show items in feedback list. ;  ; void ShowLog (const char *queryref);  Display on screen the content of the temporary log file for query in reference. ;  ; void ShowLog (Int_t qry=-1);  Display on screen the content of the temporary log file. ;  ; void ShowMissingFiles (TQueryResult *qr=0);  Show information about missing files during query described by 'qr' or the last query if qr is null (default). ;  ; void ShowPackages (Bool_t all=kFALSE, Bool_t redirlog=kFALS",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:38004,Performance,load,loaded,38004,"&dataFile);  Prepare the file with the input data objects to be sent the master; the objects are taken from the dedicated list and / or the specified file. ;  ; Int_t RemoveWorkers (TList *wrks);  Used for shuting down the workres after a query is finished. ;  ; virtual void SaveWorkerInfo ();  Save information about the worker set in the file .workers in the working dir. ;  ; Int_t SendFile (const char *file, Int_t opt=(kBinary|kForward|kCp|kCpBin), const char *rfile=0, TSlave *sl=0);  Send a file to master or slave servers. ;  ; virtual void SendInputDataFile ();  Send the input data objects to the master; the objects are taken from the dedicated list and / or the specified file. ;  ; void SetDSet (TDSet *dset);  ; void SetFeedback (TString &opt, TString &optfb, Int_t action);  Extract from opt in optfb information about wanted feedback settings. ;  ; void SetPlayer (TVirtualProofPlayer *player);  Set a new PROOF player. ;  ; void SetupWorkersEnv (TList *wrks, Bool_t increasingpool=kFALSE);  Set up packages, loaded macros, include and lib paths ... ;  ; void UpdateDialog ();  Final update of the progress dialog. ;  ; Int_t VerifyDataSetParallel (const char *uri, const char *optStr);  Internal function for parallel dataset verification used TProof::VerifyDataSet and TProofLite::VerifyDataSet. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Friends; class TProofPlayerSuperMaster;  . Additional Inherited Members;  Public Types inherited from TProof; enum  EProofClearData { kPurge = 0x1; , kUnregistered = 0x2; , kDataset = 0x4; , kForceClear = 0x8; };  ; enum  EQueryMode { kSync = 0; , kAsync = 1; };  ; enum  ERegisterOpt { kFailIfExists = 0; , kOverwriteIfExists = 1;",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:41071,Performance,cache,cachedir,41071,"um  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TProof; enum  ESlaves { kAll; , kActive; , kUnique; , kAllUnique; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TProof; static Int_t AssertDataSet (TDSet *dset, TList *input, TDataSetManager *mgr, TString &emsg);  Make sure that dataset is in the form to be processed. ;  ; static void AssertMacroPath (const char *macro);  Make sure that the directory path contained by macro is in the macro path. ;  ; static Bool_t GetFileInCmd (const char *cmd, TString &fn);  Static method to extract the filename (if any) form a CINT command. ;  ; static Int_t GetInputData (TList *input, const char *cachedir, TString &emsg);  Get the input data from the file defined in the input list. ;  ; static Int_t SaveInputData (TQueryResult *qr, const char *cachedir, TString &emsg);  Save input data file from 'cachedir' into the sandbox or create a the file with input data objects. ;  ; static Int_t SendInputData (TQueryResult *qr, TProof *p, TString &emsg);  Send the input data file to the workers. ;  ; static void * SlaveStartupThread (void *arg);  ; static void SystemCmd (const char *cmd, Int_t fdout);  Exec system command 'cmd'. If fdout > -1, append the output to fdout. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method sign",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:41221,Performance,cache,cachedir,41221," = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TProof; enum  ESlaves { kAll; , kActive; , kUnique; , kAllUnique; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TProof; static Int_t AssertDataSet (TDSet *dset, TList *input, TDataSetManager *mgr, TString &emsg);  Make sure that dataset is in the form to be processed. ;  ; static void AssertMacroPath (const char *macro);  Make sure that the directory path contained by macro is in the macro path. ;  ; static Bool_t GetFileInCmd (const char *cmd, TString &fn);  Static method to extract the filename (if any) form a CINT command. ;  ; static Int_t GetInputData (TList *input, const char *cachedir, TString &emsg);  Get the input data from the file defined in the input list. ;  ; static Int_t SaveInputData (TQueryResult *qr, const char *cachedir, TString &emsg);  Save input data file from 'cachedir' into the sandbox or create a the file with input data objects. ;  ; static Int_t SendInputData (TQueryResult *qr, TProof *p, TString &emsg);  Send the input data file to the workers. ;  ; static void * SlaveStartupThread (void *arg);  ; static void SystemCmd (const char *cmd, Int_t fdout);  Exec system command 'cmd'. If fdout > -1, append the output to fdout. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows ",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:41275,Performance,cache,cachedir,41275," = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TProof; enum  ESlaves { kAll; , kActive; , kUnique; , kAllUnique; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TProof; static Int_t AssertDataSet (TDSet *dset, TList *input, TDataSetManager *mgr, TString &emsg);  Make sure that dataset is in the form to be processed. ;  ; static void AssertMacroPath (const char *macro);  Make sure that the directory path contained by macro is in the macro path. ;  ; static Bool_t GetFileInCmd (const char *cmd, TString &fn);  Static method to extract the filename (if any) form a CINT command. ;  ; static Int_t GetInputData (TList *input, const char *cachedir, TString &emsg);  Get the input data from the file defined in the input list. ;  ; static Int_t SaveInputData (TQueryResult *qr, const char *cachedir, TString &emsg);  Save input data file from 'cachedir' into the sandbox or create a the file with input data objects. ;  ; static Int_t SendInputData (TQueryResult *qr, TProof *p, TString &emsg);  Send the input data file to the workers. ;  ; static void * SlaveStartupThread (void *arg);  ; static void SystemCmd (const char *cmd, Int_t fdout);  Exec system command 'cmd'. If fdout > -1, append the output to fdout. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows ",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:19263,Safety,abort,abort,19263,"howLog (const char *queryref);  Display on screen the content of the temporary log file for query in reference. ;  ; void ShowLog (Int_t qry=-1);  Display on screen the content of the temporary log file. ;  ; void ShowMissingFiles (TQueryResult *qr=0);  Show information about missing files during query described by 'qr' or the last query if qr is null (default). ;  ; void ShowPackages (Bool_t all=kFALSE, Bool_t redirlog=kFALSE);  List contents of package directory. ;  ; void ShowParameters (const char *wildcard=""PROOF_*"") const;  Show the input list parameters specified by the wildcard. ;  ; void ShowQueries (Option_t *opt="""");  Ask the master for the list of queries. ;  ; virtual void ShowStagingStatusDataSet (const char *dataset, const char *optStr=""filter:SsCc"");  Like GetStagingStatusDataSet, but displays results immediately. ;  ; void StartupMessage (const char *msg, Bool_t status, Int_t done, Int_t total);  Send startup message. ;  ; void StopProcess (Bool_t abort, Int_t timeout=-1);  Send STOPPROCESS message to master and workers. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Touch ();  Ping PROOF slaves. Returns the number of slaves that responded. ;  ; Int_t UploadDataSet (const char *, const char *, const char *=0, Int_t=0, TList *=0);  *** This function is deprecated and will disappear in future versions *** *** It is just a wrapper around TFile::Cp. ;  ; Int_t UploadDataSet (const char *, TList *, const char *=0, Int_t=0, TList *=0);  *** This function is deprecated and will disappear in future versions *** *** It is just a wrapper around TFile::Cp. ;  ; Int_t UploadDataSetFromFile (const char *, const char *, const char *=0, Int_t=0, TList *=0);  *** This function is deprecated and will disappear in future versions *** *** It is just a wrapper around TFile::Cp. ;  ; Int_t UploadPackage (const char *par, EUploadPackageOpt opt=kUntar, TList *workers=0);  Upload a PROOF archive (PAR file). ;  ; Bool_t UseDynamicStartup () const;",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:19276,Safety,timeout,timeout,19276,"howLog (const char *queryref);  Display on screen the content of the temporary log file for query in reference. ;  ; void ShowLog (Int_t qry=-1);  Display on screen the content of the temporary log file. ;  ; void ShowMissingFiles (TQueryResult *qr=0);  Show information about missing files during query described by 'qr' or the last query if qr is null (default). ;  ; void ShowPackages (Bool_t all=kFALSE, Bool_t redirlog=kFALSE);  List contents of package directory. ;  ; void ShowParameters (const char *wildcard=""PROOF_*"") const;  Show the input list parameters specified by the wildcard. ;  ; void ShowQueries (Option_t *opt="""");  Ask the master for the list of queries. ;  ; virtual void ShowStagingStatusDataSet (const char *dataset, const char *optStr=""filter:SsCc"");  Like GetStagingStatusDataSet, but displays results immediately. ;  ; void StartupMessage (const char *msg, Bool_t status, Int_t done, Int_t total);  Send startup message. ;  ; void StopProcess (Bool_t abort, Int_t timeout=-1);  Send STOPPROCESS message to master and workers. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Touch ();  Ping PROOF slaves. Returns the number of slaves that responded. ;  ; Int_t UploadDataSet (const char *, const char *, const char *=0, Int_t=0, TList *=0);  *** This function is deprecated and will disappear in future versions *** *** It is just a wrapper around TFile::Cp. ;  ; Int_t UploadDataSet (const char *, TList *, const char *=0, Int_t=0, TList *=0);  *** This function is deprecated and will disappear in future versions *** *** It is just a wrapper around TFile::Cp. ;  ; Int_t UploadDataSetFromFile (const char *, const char *, const char *=0, Int_t=0, TList *=0);  *** This function is deprecated and will disappear in future versions *** *** It is just a wrapper around TFile::Cp. ;  ; Int_t UploadPackage (const char *par, EUploadPackageOpt opt=kUntar, TList *workers=0);  Upload a PROOF archive (PAR file). ;  ; Bool_t UseDynamicStartup () const;",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:35454,Safety,timeout,timeout,35454,"al"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; TVirtualProofPlayer * MakePlayer (const char *player=0, TSocket *s=0) override;  Construct a TProofPlayer object. ;  ; Bool_t StartSlaves (Bool_t) override;  Start up PROOF submasters. ;  ; void ValidateDSet (TDSet *dset) override;  Validate a TDSet. ;  ;  Protected Member Functions inherited from TProof;  TProof ();  Protected constructor to be used by classes deriving from TProof (they have to call Init themselves and override StartSlaves appropriately). ;  ; Int_t AddWorkers (TList *wrks);  Works on the master node only. ;  ; Int_t AssertPath (const char *path, Bool_t writable);  Make sure that 'path' exists; if 'writable' is kTRUE, make also sure that the path is writable. ;  ; Int_t Collect (ESlaves list=kActive, Long_t timeout=-1, Int_t endtype=-1, Bool_t deactonfail=kFALSE);  Collect responses from the slave servers. ;  ; Int_t Collect (TList *slaves, Long_t timeout=-1, Int_t endtype=-1, Bool_t deactonfail=kFALSE);  Collect responses from the slave servers. ;  ; TSlave * CreateSlave (const char *url, const char *ord, Int_t perf, const char *image, const char *workdir);  Create a new TSlave of type TSlave::kSlave. ;  ; TSlave * CreateSubmaster (const char *url, const char *ord, const char *image, const char *msd, Int_t nwk=1);  Create a new TSlave of type TSlave::kMaster. ;  ; TList * GetEnabledPackages () const;  ; TList * GetListOfActiveSlaves () const;  ; TVirtualProofPlayer * GetPlayer () const;  ; TPluginHandler * GetProgressDialog () const;  ; Int_t GetSandbox (TString &sb, Bool_t assert=kFALSE, const char *rc=0);  Set the sandbox path from ' Proof.Sandbox' or the alternative var 'rc'. ;  ; void HandleLibIncPath (const char *what, Bool_t add, const char *dirs);  Handle lib, inc search paths modification request. ;  ; I",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:35597,Safety,timeout,timeout,35597,"signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; TVirtualProofPlayer * MakePlayer (const char *player=0, TSocket *s=0) override;  Construct a TProofPlayer object. ;  ; Bool_t StartSlaves (Bool_t) override;  Start up PROOF submasters. ;  ; void ValidateDSet (TDSet *dset) override;  Validate a TDSet. ;  ;  Protected Member Functions inherited from TProof;  TProof ();  Protected constructor to be used by classes deriving from TProof (they have to call Init themselves and override StartSlaves appropriately). ;  ; Int_t AddWorkers (TList *wrks);  Works on the master node only. ;  ; Int_t AssertPath (const char *path, Bool_t writable);  Make sure that 'path' exists; if 'writable' is kTRUE, make also sure that the path is writable. ;  ; Int_t Collect (ESlaves list=kActive, Long_t timeout=-1, Int_t endtype=-1, Bool_t deactonfail=kFALSE);  Collect responses from the slave servers. ;  ; Int_t Collect (TList *slaves, Long_t timeout=-1, Int_t endtype=-1, Bool_t deactonfail=kFALSE);  Collect responses from the slave servers. ;  ; TSlave * CreateSlave (const char *url, const char *ord, Int_t perf, const char *image, const char *workdir);  Create a new TSlave of type TSlave::kSlave. ;  ; TSlave * CreateSubmaster (const char *url, const char *ord, const char *image, const char *msd, Int_t nwk=1);  Create a new TSlave of type TSlave::kMaster. ;  ; TList * GetEnabledPackages () const;  ; TList * GetListOfActiveSlaves () const;  ; TVirtualProofPlayer * GetPlayer () const;  ; TPluginHandler * GetProgressDialog () const;  ; Int_t GetSandbox (TString &sb, Bool_t assert=kFALSE, const char *rc=0);  Set the sandbox path from ' Proof.Sandbox' or the alternative var 'rc'. ;  ; void HandleLibIncPath (const char *what, Bool_t add, const char *dirs);  Handle lib, inc search paths modification request. ;  ; Int_t HandleOutputOptions (TString &opt, TString &target, Int_t action);  Extract from opt information about output handling settings. ;  ; Int_t In",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:21322,Security,hash,hash,21322,"aSet (const char *dataset, const char *optStr="""");  Verify if all files in the specified dataset are available. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:602,Testability,log,loglevel,602,". ROOT: TProofSuperMaster Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Friends |; List of all members ; TProofSuperMaster Class ReferencePROOF » PROOF kernel Libraries. ; Implementation of TProof controlling PROOF federated clusters. ; Definition at line 33 of file TProofSuperMaster.h. Public Member Functions;  TProofSuperMaster (const char *masterurl, const char *conffile=kPROOF_ConfFile, const char *confdir=kPROOF_ConfDir, Int_t loglevel=0, const char *alias=0, TProofMgr *mgr=0);  Start super master PROOF session. ;  ;  ~TProofSuperMaster () override;  ; TClass * IsA () const override;  ; Long64_t Process (const char *dsname, const char *sel, Option_t *o="""", Long64_t nent=-1, Long64_t fst=0, TObject *enl=0) override;  Process a dataset which is stored on the master with name 'dsetname'. ;  ; Long64_t Process (const char *dsname, TSelector *sel, Option_t *o="""", Long64_t nent=-1, Long64_t fst=0, TObject *enl=0) override;  Process with name of dataset and TSelector object. ;  ; Long64_t Process (const char *sel, Long64_t nent, Option_t *o="""") override;  Generic (non-data based) selector processing: the Process() method of the specified selector (.C) or TSelector object is called 'n' times. ;  ; Long64_t Process (TDSet *set, const char *selector, Option_t *option="""", Long64_t nentries=-1, Long64_t firstentry=0) override;  Process a data set (TDSet) using the specified selector (.C) file. ;  ; Long64_t Process (TDSet *set, TSelector *selector, Option_t *option="""", Long64_t nentries=-1, Long64_t firstentry=0) override;  Process a data set (TDSet) using the specified selector object. ;  ; Long64_t Process (TFileCollection *fc, const char *sel, Option_t *o="""", Long64_t nent=-1, Long64_t fst=0) override;  Process a data set (TFileCollection) using the specified selector (.C) file or TSelector object. ;  ; Long",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:2723,Testability,log,loglevel,2723,"n="""", Long64_t nentries=-1, Long64_t firstentry=0) override;  Process a data set (TDSet) using the specified selector object. ;  ; Long64_t Process (TFileCollection *fc, const char *sel, Option_t *o="""", Long64_t nent=-1, Long64_t fst=0) override;  Process a data set (TFileCollection) using the specified selector (.C) file or TSelector object. ;  ; Long64_t Process (TFileCollection *fc, TSelector *sel, Option_t *o="""", Long64_t nent=-1, Long64_t fst=0) override;  Process a data set (TFileCollection) using the specified selector object The default tree is analyzed (i.e. ;  ; Long64_t Process (TSelector *sel, Long64_t nent, Option_t *o="""") override;  Generic (non-data based) selector processing: the Process() method of the specified selector is called 'n' times. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TProof;  TProof (const char *masterurl, const char *conffile=kPROOF_ConfFile, const char *confdir=kPROOF_ConfDir, Int_t loglevel=0, const char *alias=0, TProofMgr *mgr=0);  Create a PROOF environment. ;  ;  ~TProof () override;  Clean up PROOF environment. ;  ; Int_t ActivateWorker (const char *ord, Bool_t save=kTRUE);  Make sure that the worker identified by the ordinal number 'ord' is in the active list. ;  ; void AddChain (TChain *chain);  Add chain to data set. ;  ; Int_t AddDynamicPath (const char *libpath, Bool_t onClient=kFALSE, TList *wrks=0, Bool_t doCollect=kTRUE);  Add 'libpath' to the lib path search. ;  ; void AddFeedback (const char *name);  Add object to feedback list. ;  ; Int_t AddIncludePath (const char *incpath, Bool_t onClient=kFALSE, TList *wrks=0, Bool_t doCollect=kTRUE);  Add 'incpath' to the inc path search. ;  ; void AddInput (TObject *obj);  Add objects that might be needed during the processing of the selector (see Process()). ;  ; void AddInputData (TObject *obj, Bool_t push=kFALSE);  Add data objects ",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:7437,Testability,log,logtomacro,7437,"ies=-1, Long64_t firstentry=0);  Execute the specified drawing action on a data set (TDSet). ;  ; virtual Int_t Echo (const char *str);  Sends a string to master and workers and expect them to echo it back to the client via a message. ;  ; virtual Int_t Echo (const TObject *obj);  Sends an object to master and workers and expect them to send back a message with the output of its TObject::Print(). ;  ; Int_t EnablePackage (const char *package, Bool_t notOnClient=kFALSE, TList *workers=0);  Enable specified package. ;  ; Int_t EnablePackage (const char *package, const char *loadopts, Bool_t notOnClient=kFALSE, TList *workers=0);  Enable specified package. ;  ; Int_t EnablePackage (const char *package, TList *loadopts, Bool_t notOnClient=kFALSE, TList *workers=0);  Enable specified package. ;  ; Int_t Exec (const char *cmd, Bool_t plusMaster=kFALSE);  Send command to be executed on the PROOF master and/or slaves. ;  ; Int_t Exec (const char *cmd, const char *ord, Bool_t logtomacro=kFALSE);  Send command to be executed on node of ordinal 'ord' (use ""0"" for master). ;  ; virtual Bool_t ExistsDataSet (const char *dataset);  Returns kTRUE if 'dataset' exists, kFALSE otherwise. ;  ; void Feedback (TList *objs);  Get list of feedback objects. ;  ; Long64_t Finalize (const char *queryref, Bool_t force=kFALSE);  Finalize query with reference ref. ;  ; Long64_t Finalize (Int_t query=-1, Bool_t force=kFALSE);  Finalize the qry-th query in fQueries. ;  ; TList * FindDataSets (const char *searchString, const char *optStr="""");  Find datasets, returns in a TList all found datasets. ;  ; Long64_t GetBytesRead () const;  ; Int_t GetClientProtocol () const;  ; const char * GetConfDir () const;  ; const char * GetConfFile () const;  ; Float_t GetCpuTime () const;  ; const char * GetDataPoolUrl () const;  ; virtual TFileCollection * GetDataSet (const char *dataset, const char *optStr="""");  Get a list of TFileInfo objects describing the files of the specified dataset. ;  ; TMap * GetDataS",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:8998,Testability,log,log,8998,"s in a TList all found datasets. ;  ; Long64_t GetBytesRead () const;  ; Int_t GetClientProtocol () const;  ; const char * GetConfDir () const;  ; const char * GetConfFile () const;  ; Float_t GetCpuTime () const;  ; const char * GetDataPoolUrl () const;  ; virtual TFileCollection * GetDataSet (const char *dataset, const char *optStr="""");  Get a list of TFileInfo objects describing the files of the specified dataset. ;  ; TMap * GetDataSetQuota (const char *optStr="""");  returns a map of the quotas of all groups ;  ; virtual TMap * GetDataSets (const char *uri="""", const char *optStr="""");  Lists all datasets that match given uri. ;  ; TString Getenv (const char *env, const char *ord=""0"");  Get value of environment variable 'env' on node 'ord'. ;  ; TList * GetFeedbackList () const;  Return feedback list. ;  ; const char * GetGroup () const;  ; const char * GetImage () const;  ; TList * GetInputList ();  Get input list. ;  ; TMacro * GetLastLog ();  Fill a TMacro with the log lines since the last reading (fLogFileR) Return (TMacro *)0 if no line was logged. ;  ; TList * GetListOfEnabledPackages ();  Get from the master the list of names of the packages enabled. ;  ; TList * GetListOfPackages ();  Get from the master the list of names of the packages available. ;  ; virtual TList * GetListOfQueries (Option_t *opt="""");  Ask the master for the list of queries. ;  ; TList * GetListOfSlaveInfos ();  Returns list of TSlaveInfo's. In case of error return 0. ;  ; TList * GetLoadedMacros () const;  ; void GetLog (Int_t start=-1, Int_t end=-1);  Ask for remote logs in the range [start, end]. ;  ; Int_t GetLogLevel () const;  ; TMacro * GetMacroLog ();  ; TProofMgr * GetManager ();  ; const char * GetMaster () const;  ; void GetMaxQueries ();  Get max number of queries whose full results are kept in the remote sandbox. ;  ; TFileCollection * GetMissingFiles (TQueryResult *qr=0);  Get a TFileCollection with the files missing in the query described by 'qr' or the last query if qr i",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:9077,Testability,log,logged,9077,"s in a TList all found datasets. ;  ; Long64_t GetBytesRead () const;  ; Int_t GetClientProtocol () const;  ; const char * GetConfDir () const;  ; const char * GetConfFile () const;  ; Float_t GetCpuTime () const;  ; const char * GetDataPoolUrl () const;  ; virtual TFileCollection * GetDataSet (const char *dataset, const char *optStr="""");  Get a list of TFileInfo objects describing the files of the specified dataset. ;  ; TMap * GetDataSetQuota (const char *optStr="""");  returns a map of the quotas of all groups ;  ; virtual TMap * GetDataSets (const char *uri="""", const char *optStr="""");  Lists all datasets that match given uri. ;  ; TString Getenv (const char *env, const char *ord=""0"");  Get value of environment variable 'env' on node 'ord'. ;  ; TList * GetFeedbackList () const;  Return feedback list. ;  ; const char * GetGroup () const;  ; const char * GetImage () const;  ; TList * GetInputList ();  Get input list. ;  ; TMacro * GetLastLog ();  Fill a TMacro with the log lines since the last reading (fLogFileR) Return (TMacro *)0 if no line was logged. ;  ; TList * GetListOfEnabledPackages ();  Get from the master the list of names of the packages enabled. ;  ; TList * GetListOfPackages ();  Get from the master the list of names of the packages available. ;  ; virtual TList * GetListOfQueries (Option_t *opt="""");  Ask the master for the list of queries. ;  ; TList * GetListOfSlaveInfos ();  Returns list of TSlaveInfo's. In case of error return 0. ;  ; TList * GetLoadedMacros () const;  ; void GetLog (Int_t start=-1, Int_t end=-1);  Ask for remote logs in the range [start, end]. ;  ; Int_t GetLogLevel () const;  ; TMacro * GetMacroLog ();  ; TProofMgr * GetManager ();  ; const char * GetMaster () const;  ; void GetMaxQueries ();  Get max number of queries whose full results are kept in the remote sandbox. ;  ; TFileCollection * GetMissingFiles (TQueryResult *qr=0);  Get a TFileCollection with the files missing in the query described by 'qr' or the last query if qr i",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:9588,Testability,log,logs,9588,"etDataSets (const char *uri="""", const char *optStr="""");  Lists all datasets that match given uri. ;  ; TString Getenv (const char *env, const char *ord=""0"");  Get value of environment variable 'env' on node 'ord'. ;  ; TList * GetFeedbackList () const;  Return feedback list. ;  ; const char * GetGroup () const;  ; const char * GetImage () const;  ; TList * GetInputList ();  Get input list. ;  ; TMacro * GetLastLog ();  Fill a TMacro with the log lines since the last reading (fLogFileR) Return (TMacro *)0 if no line was logged. ;  ; TList * GetListOfEnabledPackages ();  Get from the master the list of names of the packages enabled. ;  ; TList * GetListOfPackages ();  Get from the master the list of names of the packages available. ;  ; virtual TList * GetListOfQueries (Option_t *opt="""");  Ask the master for the list of queries. ;  ; TList * GetListOfSlaveInfos ();  Returns list of TSlaveInfo's. In case of error return 0. ;  ; TList * GetLoadedMacros () const;  ; void GetLog (Int_t start=-1, Int_t end=-1);  Ask for remote logs in the range [start, end]. ;  ; Int_t GetLogLevel () const;  ; TMacro * GetMacroLog ();  ; TProofMgr * GetManager ();  ; const char * GetMaster () const;  ; void GetMaxQueries ();  Get max number of queries whose full results are kept in the remote sandbox. ;  ; TFileCollection * GetMissingFiles (TQueryResult *qr=0);  Get a TFileCollection with the files missing in the query described by 'qr' or the last query if qr is null (default). ;  ; Int_t GetNumberOfDrawQueries ();  ; Int_t GetNumberOfQueries ();  Number of queries processed by this session. ;  ; TObject * GetOutput (const char *name);  Get specified object that has been produced during the processing (see Process()). ;  ; TList * GetOutputList ();  Get list with all object created during processing (see Process()). ;  ; TList * GetOutputNames ();  FIXME: to be written. ;  ; Int_t GetParallel () const;  Returns number of slaves active in parallel mode. ;  ; TObject * GetParameter (const c",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:9842,Testability,sandbox,sandbox,9842,"t variable 'env' on node 'ord'. ;  ; TList * GetFeedbackList () const;  Return feedback list. ;  ; const char * GetGroup () const;  ; const char * GetImage () const;  ; TList * GetInputList ();  Get input list. ;  ; TMacro * GetLastLog ();  Fill a TMacro with the log lines since the last reading (fLogFileR) Return (TMacro *)0 if no line was logged. ;  ; TList * GetListOfEnabledPackages ();  Get from the master the list of names of the packages enabled. ;  ; TList * GetListOfPackages ();  Get from the master the list of names of the packages available. ;  ; virtual TList * GetListOfQueries (Option_t *opt="""");  Ask the master for the list of queries. ;  ; TList * GetListOfSlaveInfos ();  Returns list of TSlaveInfo's. In case of error return 0. ;  ; TList * GetLoadedMacros () const;  ; void GetLog (Int_t start=-1, Int_t end=-1);  Ask for remote logs in the range [start, end]. ;  ; Int_t GetLogLevel () const;  ; TMacro * GetMacroLog ();  ; TProofMgr * GetManager ();  ; const char * GetMaster () const;  ; void GetMaxQueries ();  Get max number of queries whose full results are kept in the remote sandbox. ;  ; TFileCollection * GetMissingFiles (TQueryResult *qr=0);  Get a TFileCollection with the files missing in the query described by 'qr' or the last query if qr is null (default). ;  ; Int_t GetNumberOfDrawQueries ();  ; Int_t GetNumberOfQueries ();  Number of queries processed by this session. ;  ; TObject * GetOutput (const char *name);  Get specified object that has been produced during the processing (see Process()). ;  ; TList * GetOutputList ();  Get list with all object created during processing (see Process()). ;  ; TList * GetOutputNames ();  FIXME: to be written. ;  ; Int_t GetParallel () const;  Returns number of slaves active in parallel mode. ;  ; TObject * GetParameter (const char *par) const;  Get specified parameter. ;  ; Int_t GetPort () const;  ; EQueryMode GetQueryMode (Option_t *mode=0) const;  Find out the query mode based on the current setting and ",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:13713,Testability,log,log,13713," ; virtual Int_t Load (const char *macro, Bool_t notOnClient=kFALSE, Bool_t uniqueOnly=kTRUE, TList *wrks=0);  Load the specified macro on master, workers and, if notOnClient is kFALSE, on the client. ;  ; void LogMessage (const char *msg, Bool_t all);  Log a message into the appropriate window by emitting a signal. ;  ; Int_t Ping ();  Ping PROOF. Returns 1 if master server responded. ;  ; void Print (Option_t *option="""") const override;  Print status of PROOF cluster. ;  ; void Progress (Long64_t total, Long64_t processed);  Get query progress information. ;  ; void Progress (Long64_t total, Long64_t processed, Long64_t bytesread, Float_t initTime, Float_t procTime, Float_t evtrti, Float_t mbrti);  Get query progress information. ;  ; void Progress (Long64_t total, Long64_t processed, Long64_t bytesread, Float_t initTime, Float_t procTime, Float_t evtrti, Float_t mbrti, Int_t actw, Int_t tses, Float_t eses);  Get query progress information. ;  ; void PutLog (TQueryResult *qr);  Display log of query pq into the log window frame. ;  ; void QueryResultReady (const char *ref);  Notify availability of a query result. ;  ; virtual Bool_t RegisterDataSet (const char *name, TFileCollection *dataset, const char *optStr="""");  Register the 'dataSet' on the cluster under the current user, group and the given 'dataSetName'. ;  ; Int_t Remove (const char *queryref, Bool_t all=kFALSE);  Send remove request for the query specified by ref. ;  ; Int_t Remove (Int_t query, Bool_t all=kFALSE);  Send remove request for the qry-th query in fQueries. ;  ; void RemoveChain (TChain *chain);  Remove chain from data set. ;  ; virtual Int_t RemoveDataSet (const char *dataset, const char *optStr="""");  Remove the specified dataset from the PROOF cluster. ;  ; Int_t RemoveDynamicPath (const char *libpath, Bool_t onClient=kFALSE);  Remove 'libpath' from the lib path search. ;  ; void RemoveFeedback (const char *name);  Remove object from feedback list. ;  ; Int_t RemoveIncludePath (const char *in",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:13738,Testability,log,log,13738," ; virtual Int_t Load (const char *macro, Bool_t notOnClient=kFALSE, Bool_t uniqueOnly=kTRUE, TList *wrks=0);  Load the specified macro on master, workers and, if notOnClient is kFALSE, on the client. ;  ; void LogMessage (const char *msg, Bool_t all);  Log a message into the appropriate window by emitting a signal. ;  ; Int_t Ping ();  Ping PROOF. Returns 1 if master server responded. ;  ; void Print (Option_t *option="""") const override;  Print status of PROOF cluster. ;  ; void Progress (Long64_t total, Long64_t processed);  Get query progress information. ;  ; void Progress (Long64_t total, Long64_t processed, Long64_t bytesread, Float_t initTime, Float_t procTime, Float_t evtrti, Float_t mbrti);  Get query progress information. ;  ; void Progress (Long64_t total, Long64_t processed, Long64_t bytesread, Float_t initTime, Float_t procTime, Float_t evtrti, Float_t mbrti, Int_t actw, Int_t tses, Float_t eses);  Get query progress information. ;  ; void PutLog (TQueryResult *qr);  Display log of query pq into the log window frame. ;  ; void QueryResultReady (const char *ref);  Notify availability of a query result. ;  ; virtual Bool_t RegisterDataSet (const char *name, TFileCollection *dataset, const char *optStr="""");  Register the 'dataSet' on the cluster under the current user, group and the given 'dataSetName'. ;  ; Int_t Remove (const char *queryref, Bool_t all=kFALSE);  Send remove request for the query specified by ref. ;  ; Int_t Remove (Int_t query, Bool_t all=kFALSE);  Send remove request for the qry-th query in fQueries. ;  ; void RemoveChain (TChain *chain);  Remove chain from data set. ;  ; virtual Int_t RemoveDataSet (const char *dataset, const char *optStr="""");  Remove the specified dataset from the PROOF cluster. ;  ; Int_t RemoveDynamicPath (const char *libpath, Bool_t onClient=kFALSE);  Remove 'libpath' from the lib path search. ;  ; void RemoveFeedback (const char *name);  Remove object from feedback list. ;  ; Int_t RemoveIncludePath (const char *in",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:16187,Testability,log,logging,16187," query specified by ref. ;  ; Int_t Retrieve (Int_t query, const char *path=0);  Send retrieve request for the qry-th query in fQueries. ;  ; Int_t SavePerfTree (const char *pf=0, const char *qref=0);  Save performance information from TPerfStats to file 'pf'. ;  ; void SendDataSetStatus (const char *msg, UInt_t n, UInt_t tot, Bool_t st);  Send or notify data set status. ;  ; Bool_t SendingLogToWindow () const;  ; void SendLogToWindow (Bool_t mode);  ; void SetActive (Bool_t=kTRUE);  ; virtual void SetAlias (const char *alias="""");  Set an alias for this session. ;  ; void SetDataPoolUrl (const char *url);  ; virtual Int_t SetDataSetTreeName (const char *dataset, const char *treename);  Set/Change the name of the default tree. ;  ; void SetDrawFeedbackOption (TDrawFeedback *f, Option_t *opt);  Set draw feedback option. ;  ; void SetInputDataFile (const char *datafile);  Set the file to be used to optimally distribute the input data objects. ;  ; void SetLogLevel (Int_t level, UInt_t mask=TProofDebug::kAll);  Set server logging level. ;  ; void SetManager (TProofMgr *mgr);  Set manager and schedule its destruction after this for clean operations. ;  ; void SetMaxDrawQueries (Int_t max);  Set max number of draw queries whose results are saved. ;  ; Int_t SetParallel (Int_t nodes=-1, Bool_t random=kFALSE);  Tell PROOF how many slaves to use in parallel. ;  ; void SetParameter (const char *par, const char *value);  Set input list parameter. ;  ; void SetParameter (const char *par, Double_t value);  Set an input list parameter. ;  ; void SetParameter (const char *par, Int_t value);  Set an input list parameter. ;  ; void SetParameter (const char *par, Long64_t value);  Set an input list parameter. ;  ; void SetParameter (const char *par, Long_t value);  Set an input list parameter. ;  ; void SetPerfTree (const char *pf=""perftree.root"", Bool_t withWrks=kFALSE);  Enable/Disable saving of the performance tree. ;  ; void SetPrintProgress (PrintProgress_t pp);  ; void SetProgre",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:17401,Testability,log,logging,17401," of draw queries whose results are saved. ;  ; Int_t SetParallel (Int_t nodes=-1, Bool_t random=kFALSE);  Tell PROOF how many slaves to use in parallel. ;  ; void SetParameter (const char *par, const char *value);  Set input list parameter. ;  ; void SetParameter (const char *par, Double_t value);  Set an input list parameter. ;  ; void SetParameter (const char *par, Int_t value);  Set an input list parameter. ;  ; void SetParameter (const char *par, Long64_t value);  Set an input list parameter. ;  ; void SetParameter (const char *par, Long_t value);  Set an input list parameter. ;  ; void SetPerfTree (const char *pf=""perftree.root"", Bool_t withWrks=kFALSE);  Enable/Disable saving of the performance tree. ;  ; void SetPrintProgress (PrintProgress_t pp);  ; void SetProgressDialog (Bool_t on=kTRUE);  Enable/Disable the graphic progress dialog. ;  ; void SetQueryMode (EQueryMode mode);  Change query running mode to the one specified by 'mode'. ;  ; void SetRealTimeLog (Bool_t on=kTRUE);  Switch ON/OFF the real-time logging facility. ;  ; virtual void ShowCache (Bool_t all=kFALSE);  List contents of file cache. ;  ; virtual void ShowData ();  List contents of the data directory in the sandbox. ;  ; void ShowDataSet (const char *dataset="""", const char *opt=""filter:SsCc"");  display meta-info for given dataset usi ;  ; virtual void ShowDataSetCache (const char *dataset=0);  Display the content of the dataset cache, if any (matching 'dataset', if defined). ;  ; void ShowDataSetQuota (Option_t *opt=0);  shows the quota and usage of all groups if opt contains ""U"" shows also distribution of usage on user-level ;  ; virtual void ShowDataSets (const char *uri="""", const char *optStr="""");  Shows datasets in locations that match the uri. ;  ; void ShowEnabledPackages (Bool_t all=kFALSE);  List which packages are enabled. ;  ; void ShowFeedback () const;  Show items in feedback list. ;  ; void ShowLog (const char *queryref);  Display on screen the content of the temporary log file f",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:17573,Testability,sandbox,sandbox,17573,"arameter (const char *par, const char *value);  Set input list parameter. ;  ; void SetParameter (const char *par, Double_t value);  Set an input list parameter. ;  ; void SetParameter (const char *par, Int_t value);  Set an input list parameter. ;  ; void SetParameter (const char *par, Long64_t value);  Set an input list parameter. ;  ; void SetParameter (const char *par, Long_t value);  Set an input list parameter. ;  ; void SetPerfTree (const char *pf=""perftree.root"", Bool_t withWrks=kFALSE);  Enable/Disable saving of the performance tree. ;  ; void SetPrintProgress (PrintProgress_t pp);  ; void SetProgressDialog (Bool_t on=kTRUE);  Enable/Disable the graphic progress dialog. ;  ; void SetQueryMode (EQueryMode mode);  Change query running mode to the one specified by 'mode'. ;  ; void SetRealTimeLog (Bool_t on=kTRUE);  Switch ON/OFF the real-time logging facility. ;  ; virtual void ShowCache (Bool_t all=kFALSE);  List contents of file cache. ;  ; virtual void ShowData ();  List contents of the data directory in the sandbox. ;  ; void ShowDataSet (const char *dataset="""", const char *opt=""filter:SsCc"");  display meta-info for given dataset usi ;  ; virtual void ShowDataSetCache (const char *dataset=0);  Display the content of the dataset cache, if any (matching 'dataset', if defined). ;  ; void ShowDataSetQuota (Option_t *opt=0);  shows the quota and usage of all groups if opt contains ""U"" shows also distribution of usage on user-level ;  ; virtual void ShowDataSets (const char *uri="""", const char *optStr="""");  Shows datasets in locations that match the uri. ;  ; void ShowEnabledPackages (Bool_t all=kFALSE);  List which packages are enabled. ;  ; void ShowFeedback () const;  Show items in feedback list. ;  ; void ShowLog (const char *queryref);  Display on screen the content of the temporary log file for query in reference. ;  ; void ShowLog (Int_t qry=-1);  Display on screen the content of the temporary log file. ;  ; void ShowMissingFiles (TQueryResult *qr=0);  S",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:18363,Testability,log,log,18363,"void SetRealTimeLog (Bool_t on=kTRUE);  Switch ON/OFF the real-time logging facility. ;  ; virtual void ShowCache (Bool_t all=kFALSE);  List contents of file cache. ;  ; virtual void ShowData ();  List contents of the data directory in the sandbox. ;  ; void ShowDataSet (const char *dataset="""", const char *opt=""filter:SsCc"");  display meta-info for given dataset usi ;  ; virtual void ShowDataSetCache (const char *dataset=0);  Display the content of the dataset cache, if any (matching 'dataset', if defined). ;  ; void ShowDataSetQuota (Option_t *opt=0);  shows the quota and usage of all groups if opt contains ""U"" shows also distribution of usage on user-level ;  ; virtual void ShowDataSets (const char *uri="""", const char *optStr="""");  Shows datasets in locations that match the uri. ;  ; void ShowEnabledPackages (Bool_t all=kFALSE);  List which packages are enabled. ;  ; void ShowFeedback () const;  Show items in feedback list. ;  ; void ShowLog (const char *queryref);  Display on screen the content of the temporary log file for query in reference. ;  ; void ShowLog (Int_t qry=-1);  Display on screen the content of the temporary log file. ;  ; void ShowMissingFiles (TQueryResult *qr=0);  Show information about missing files during query described by 'qr' or the last query if qr is null (default). ;  ; void ShowPackages (Bool_t all=kFALSE, Bool_t redirlog=kFALSE);  List contents of package directory. ;  ; void ShowParameters (const char *wildcard=""PROOF_*"") const;  Show the input list parameters specified by the wildcard. ;  ; void ShowQueries (Option_t *opt="""");  Ask the master for the list of queries. ;  ; virtual void ShowStagingStatusDataSet (const char *dataset, const char *optStr=""filter:SsCc"");  Like GetStagingStatusDataSet, but displays results immediately. ;  ; void StartupMessage (const char *msg, Bool_t status, Int_t done, Int_t total);  Send startup message. ;  ; void StopProcess (Bool_t abort, Int_t timeout=-1);  Send STOPPROCESS message to master and worke",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:18478,Testability,log,log,18478,"Cache (Bool_t all=kFALSE);  List contents of file cache. ;  ; virtual void ShowData ();  List contents of the data directory in the sandbox. ;  ; void ShowDataSet (const char *dataset="""", const char *opt=""filter:SsCc"");  display meta-info for given dataset usi ;  ; virtual void ShowDataSetCache (const char *dataset=0);  Display the content of the dataset cache, if any (matching 'dataset', if defined). ;  ; void ShowDataSetQuota (Option_t *opt=0);  shows the quota and usage of all groups if opt contains ""U"" shows also distribution of usage on user-level ;  ; virtual void ShowDataSets (const char *uri="""", const char *optStr="""");  Shows datasets in locations that match the uri. ;  ; void ShowEnabledPackages (Bool_t all=kFALSE);  List which packages are enabled. ;  ; void ShowFeedback () const;  Show items in feedback list. ;  ; void ShowLog (const char *queryref);  Display on screen the content of the temporary log file for query in reference. ;  ; void ShowLog (Int_t qry=-1);  Display on screen the content of the temporary log file. ;  ; void ShowMissingFiles (TQueryResult *qr=0);  Show information about missing files during query described by 'qr' or the last query if qr is null (default). ;  ; void ShowPackages (Bool_t all=kFALSE, Bool_t redirlog=kFALSE);  List contents of package directory. ;  ; void ShowParameters (const char *wildcard=""PROOF_*"") const;  Show the input list parameters specified by the wildcard. ;  ; void ShowQueries (Option_t *opt="""");  Ask the master for the list of queries. ;  ; virtual void ShowStagingStatusDataSet (const char *dataset, const char *optStr=""filter:SsCc"");  Like GetStagingStatusDataSet, but displays results immediately. ;  ; void StartupMessage (const char *msg, Bool_t status, Int_t done, Int_t total);  Send startup message. ;  ; void StopProcess (Bool_t abort, Int_t timeout=-1);  Send STOPPROCESS message to master and workers. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Touch ();  Ping PROOF slaves",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:32242,Testability,log,log,32242,"nvironemnt variables. ;  ; static TObject * GetOutput (const char *name, TList *out);  Find object 'name' in list 'out' or in the files specified in there. ;  ; static Int_t GetParameter (TCollection *c, const char *par, Double_t &value);  Get the value from the specified parameter from the specified collection. ;  ; static Int_t GetParameter (TCollection *c, const char *par, Int_t &value);  Get the value from the specified parameter from the specified collection. ;  ; static Int_t GetParameter (TCollection *c, const char *par, Long64_t &value);  Get the value from the specified parameter from the specified collection. ;  ; static Int_t GetParameter (TCollection *c, const char *par, Long_t &value);  Get the value from the specified parameter from the specified collection. ;  ; static Int_t GetParameter (TCollection *c, const char *par, TString &value);  Get the value from the specified parameter from the specified collection. ;  ; static void LogViewer (const char *url=0, Int_t sessionidx=0);  Start the log viewer window usign the plugin manager. ;  ; static TProofMgr * Mgr (const char *url);  Get instance of the effective manager for 'url' Return 0 on failure. ;  ; static TProof * Open (const char *url=0, const char *conffile=0, const char *confdir=0, Int_t loglevel=0);  Start a PROOF session on a specific cluster. ;  ; static void Reset (const char *url, Bool_t hard=kFALSE);  Wrapper around TProofMgr::Reset(...). ;  ; static void ResetEnvVars ();  Clear the list of environment variables passed to proofserv on the master and slaves. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:32502,Testability,log,loglevel,32502," the specified parameter from the specified collection. ;  ; static Int_t GetParameter (TCollection *c, const char *par, Int_t &value);  Get the value from the specified parameter from the specified collection. ;  ; static Int_t GetParameter (TCollection *c, const char *par, Long64_t &value);  Get the value from the specified parameter from the specified collection. ;  ; static Int_t GetParameter (TCollection *c, const char *par, Long_t &value);  Get the value from the specified parameter from the specified collection. ;  ; static Int_t GetParameter (TCollection *c, const char *par, TString &value);  Get the value from the specified parameter from the specified collection. ;  ; static void LogViewer (const char *url=0, Int_t sessionidx=0);  Start the log viewer window usign the plugin manager. ;  ; static TProofMgr * Mgr (const char *url);  Get instance of the effective manager for 'url' Return 0 on failure. ;  ; static TProof * Open (const char *url=0, const char *conffile=0, const char *confdir=0, Int_t loglevel=0);  Start a PROOF session on a specific cluster. ;  ; static void Reset (const char *url, Bool_t hard=kFALSE);  Wrapper around TProofMgr::Reset(...). ;  ; static void ResetEnvVars ();  Clear the list of environment variables passed to proofserv on the master and slaves. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:36237,Testability,assert,assert,36237,"es appropriately). ;  ; Int_t AddWorkers (TList *wrks);  Works on the master node only. ;  ; Int_t AssertPath (const char *path, Bool_t writable);  Make sure that 'path' exists; if 'writable' is kTRUE, make also sure that the path is writable. ;  ; Int_t Collect (ESlaves list=kActive, Long_t timeout=-1, Int_t endtype=-1, Bool_t deactonfail=kFALSE);  Collect responses from the slave servers. ;  ; Int_t Collect (TList *slaves, Long_t timeout=-1, Int_t endtype=-1, Bool_t deactonfail=kFALSE);  Collect responses from the slave servers. ;  ; TSlave * CreateSlave (const char *url, const char *ord, Int_t perf, const char *image, const char *workdir);  Create a new TSlave of type TSlave::kSlave. ;  ; TSlave * CreateSubmaster (const char *url, const char *ord, const char *image, const char *msd, Int_t nwk=1);  Create a new TSlave of type TSlave::kMaster. ;  ; TList * GetEnabledPackages () const;  ; TList * GetListOfActiveSlaves () const;  ; TVirtualProofPlayer * GetPlayer () const;  ; TPluginHandler * GetProgressDialog () const;  ; Int_t GetSandbox (TString &sb, Bool_t assert=kFALSE, const char *rc=0);  Set the sandbox path from ' Proof.Sandbox' or the alternative var 'rc'. ;  ; void HandleLibIncPath (const char *what, Bool_t add, const char *dirs);  Handle lib, inc search paths modification request. ;  ; Int_t HandleOutputOptions (TString &opt, TString &target, Int_t action);  Extract from opt information about output handling settings. ;  ; Int_t Init (const char *masterurl, const char *conffile, const char *confdir, Int_t loglevel, const char *alias=0);  Start the PROOF environment. ;  ; void InitMembers ();  Default initializations. ;  ; virtual Int_t PollForNewWorkers ();  Asks the PROOF Serv for new workers in Dynamic Startup mode and activates them. ;  ; void PrepareInputDataFile (TString &dataFile);  Prepare the file with the input data objects to be sent the master; the objects are taken from the dedicated list and / or the specified file. ;  ; Int_t RemoveWorkers (TL",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:36280,Testability,sandbox,sandbox,36280,"es appropriately). ;  ; Int_t AddWorkers (TList *wrks);  Works on the master node only. ;  ; Int_t AssertPath (const char *path, Bool_t writable);  Make sure that 'path' exists; if 'writable' is kTRUE, make also sure that the path is writable. ;  ; Int_t Collect (ESlaves list=kActive, Long_t timeout=-1, Int_t endtype=-1, Bool_t deactonfail=kFALSE);  Collect responses from the slave servers. ;  ; Int_t Collect (TList *slaves, Long_t timeout=-1, Int_t endtype=-1, Bool_t deactonfail=kFALSE);  Collect responses from the slave servers. ;  ; TSlave * CreateSlave (const char *url, const char *ord, Int_t perf, const char *image, const char *workdir);  Create a new TSlave of type TSlave::kSlave. ;  ; TSlave * CreateSubmaster (const char *url, const char *ord, const char *image, const char *msd, Int_t nwk=1);  Create a new TSlave of type TSlave::kMaster. ;  ; TList * GetEnabledPackages () const;  ; TList * GetListOfActiveSlaves () const;  ; TVirtualProofPlayer * GetPlayer () const;  ; TPluginHandler * GetProgressDialog () const;  ; Int_t GetSandbox (TString &sb, Bool_t assert=kFALSE, const char *rc=0);  Set the sandbox path from ' Proof.Sandbox' or the alternative var 'rc'. ;  ; void HandleLibIncPath (const char *what, Bool_t add, const char *dirs);  Handle lib, inc search paths modification request. ;  ; Int_t HandleOutputOptions (TString &opt, TString &target, Int_t action);  Extract from opt information about output handling settings. ;  ; Int_t Init (const char *masterurl, const char *conffile, const char *confdir, Int_t loglevel, const char *alias=0);  Start the PROOF environment. ;  ; void InitMembers ();  Default initializations. ;  ; virtual Int_t PollForNewWorkers ();  Asks the PROOF Serv for new workers in Dynamic Startup mode and activates them. ;  ; void PrepareInputDataFile (TString &dataFile);  Prepare the file with the input data objects to be sent the master; the objects are taken from the dedicated list and / or the specified file. ;  ; Int_t RemoveWorkers (TL",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:36702,Testability,log,loglevel,36702,"e servers. ;  ; TSlave * CreateSlave (const char *url, const char *ord, Int_t perf, const char *image, const char *workdir);  Create a new TSlave of type TSlave::kSlave. ;  ; TSlave * CreateSubmaster (const char *url, const char *ord, const char *image, const char *msd, Int_t nwk=1);  Create a new TSlave of type TSlave::kMaster. ;  ; TList * GetEnabledPackages () const;  ; TList * GetListOfActiveSlaves () const;  ; TVirtualProofPlayer * GetPlayer () const;  ; TPluginHandler * GetProgressDialog () const;  ; Int_t GetSandbox (TString &sb, Bool_t assert=kFALSE, const char *rc=0);  Set the sandbox path from ' Proof.Sandbox' or the alternative var 'rc'. ;  ; void HandleLibIncPath (const char *what, Bool_t add, const char *dirs);  Handle lib, inc search paths modification request. ;  ; Int_t HandleOutputOptions (TString &opt, TString &target, Int_t action);  Extract from opt information about output handling settings. ;  ; Int_t Init (const char *masterurl, const char *conffile, const char *confdir, Int_t loglevel, const char *alias=0);  Start the PROOF environment. ;  ; void InitMembers ();  Default initializations. ;  ; virtual Int_t PollForNewWorkers ();  Asks the PROOF Serv for new workers in Dynamic Startup mode and activates them. ;  ; void PrepareInputDataFile (TString &dataFile);  Prepare the file with the input data objects to be sent the master; the objects are taken from the dedicated list and / or the specified file. ;  ; Int_t RemoveWorkers (TList *wrks);  Used for shuting down the workres after a query is finished. ;  ; virtual void SaveWorkerInfo ();  Save information about the worker set in the file .workers in the working dir. ;  ; Int_t SendFile (const char *file, Int_t opt=(kBinary|kForward|kCp|kCpBin), const char *rfile=0, TSlave *sl=0);  Send a file to master or slave servers. ;  ; virtual void SendInputDataFile ();  Send the input data objects to the master; the objects are taken from the dedicated list and / or the specified file. ;  ; void SetDSet (",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:41294,Testability,sandbox,sandbox,41294," = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TProof; enum  ESlaves { kAll; , kActive; , kUnique; , kAllUnique; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TProof; static Int_t AssertDataSet (TDSet *dset, TList *input, TDataSetManager *mgr, TString &emsg);  Make sure that dataset is in the form to be processed. ;  ; static void AssertMacroPath (const char *macro);  Make sure that the directory path contained by macro is in the macro path. ;  ; static Bool_t GetFileInCmd (const char *cmd, TString &fn);  Static method to extract the filename (if any) form a CINT command. ;  ; static Int_t GetInputData (TList *input, const char *cachedir, TString &emsg);  Get the input data from the file defined in the input list. ;  ; static Int_t SaveInputData (TQueryResult *qr, const char *cachedir, TString &emsg);  Save input data file from 'cachedir' into the sandbox or create a the file with input data objects. ;  ; static Int_t SendInputData (TQueryResult *qr, TProof *p, TString &emsg);  Send the input data file to the workers. ;  ; static void * SlaveStartupThread (void *arg);  ; static void SystemCmd (const char *cmd, Int_t fdout);  Exec system command 'cmd'. If fdout > -1, append the output to fdout. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows ",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:44007,Testability,log,loglevel,44007,"ingDSets;  ; TSelector * fSelector;  ; TProofMgr::EServType fServType;  ; TList * fSlaves;  ; TList * fTerminatedSlaveInfos;  ; Long64_t fTotalBytes;  ; TUrl fUrl;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TProofSuperMaster.h>. Inheritance diagram for TProofSuperMaster:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofSuperMaster(). TProofSuperMaster::TProofSuperMaster ; (; const char * ; masterurl, . const char * ; conffile = kPROOF_ConfFile, . const char * ; confdir = kPROOF_ConfDir, . Int_t ; loglevel = 0, . const char * ; alias = 0, . TProofMgr * ; mgr = 0 . ). Start super master PROOF session. ; Definition at line 44 of file TProofSuperMaster.cxx. ◆ ~TProofSuperMaster(). TProofSuperMaster::~TProofSuperMaster ; (; ). inlineoverride . Definition at line 46 of file TProofSuperMaster.h. Member Function Documentation. ◆ Class(). static TClass * TProofSuperMaster::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TProofSuperMaster::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TProofSuperMaster::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 75 of file TProofSuperMaster.h. ◆ DeclFileName(). static const char * TProofSuperMaster::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 75 of file TProofSuperMaster.h. ◆ IsA(). TClass * TProofSuperMaster::IsA ; (; ); const. inli",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:3281,Usability,feedback,feedback,3281," Long64_t nent, Option_t *o="""") override;  Generic (non-data based) selector processing: the Process() method of the specified selector is called 'n' times. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TProof;  TProof (const char *masterurl, const char *conffile=kPROOF_ConfFile, const char *confdir=kPROOF_ConfDir, Int_t loglevel=0, const char *alias=0, TProofMgr *mgr=0);  Create a PROOF environment. ;  ;  ~TProof () override;  Clean up PROOF environment. ;  ; Int_t ActivateWorker (const char *ord, Bool_t save=kTRUE);  Make sure that the worker identified by the ordinal number 'ord' is in the active list. ;  ; void AddChain (TChain *chain);  Add chain to data set. ;  ; Int_t AddDynamicPath (const char *libpath, Bool_t onClient=kFALSE, TList *wrks=0, Bool_t doCollect=kTRUE);  Add 'libpath' to the lib path search. ;  ; void AddFeedback (const char *name);  Add object to feedback list. ;  ; Int_t AddIncludePath (const char *incpath, Bool_t onClient=kFALSE, TList *wrks=0, Bool_t doCollect=kTRUE);  Add 'incpath' to the inc path search. ;  ; void AddInput (TObject *obj);  Add objects that might be needed during the processing of the selector (see Process()). ;  ; void AddInputData (TObject *obj, Bool_t push=kFALSE);  Add data objects that might be needed during the processing of the selector (see Process()). ;  ; Int_t Archive (const char *queryref, const char *url=0);  Send archive request for the query specified by ref. ;  ; Int_t Archive (Int_t query, const char *url);  Send archive request for the qry-th query in fQueries. ;  ; void Browse (TBrowser *b) override;  Build the PROOF's structure in the browser. ;  ; virtual Bool_t CancelStagingDataSet (const char *dataset);  Cancels a dataset staging request. ;  ; void cd (Int_t id=-1);  Set session with 'id' the default one. ;  ; Int_t CleanupSession (const char *sessiontag);  Send ",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:4682,Usability,feedback,feedback,4682,"ring the processing of the selector (see Process()). ;  ; Int_t Archive (const char *queryref, const char *url=0);  Send archive request for the query specified by ref. ;  ; Int_t Archive (Int_t query, const char *url);  Send archive request for the qry-th query in fQueries. ;  ; void Browse (TBrowser *b) override;  Build the PROOF's structure in the browser. ;  ; virtual Bool_t CancelStagingDataSet (const char *dataset);  Cancels a dataset staging request. ;  ; void cd (Int_t id=-1);  Set session with 'id' the default one. ;  ; Int_t CleanupSession (const char *sessiontag);  Send cleanup request for the session specified by tag. ;  ; virtual void ClearCache (const char *file=0);  Remove file from all file caches. ;  ; void ClearData (UInt_t what=kUnregistered, const char *dsname=0);  Remove files for the data directory. ;  ; virtual void ClearDataSetCache (const char *dataset=0);  Clear the content of the dataset cache, if any (matching 'dataset', if defined). ;  ; void ClearFeedback ();  Clear feedback list. ;  ; void ClearInput ();  Clear input object list. ;  ; void ClearInputData (const char *name);  Remove obj 'name' form the input data list;. ;  ; void ClearInputData (TObject *obj=0);  Remove obj form the input data list; if obj is null (default), clear the input data info. ;  ; Int_t ClearPackage (const char *package);  Remove a specific package. ;  ; Int_t ClearPackages ();  Remove all packages. ;  ; void Close (Option_t *option="""");  Close all open slave servers. ;  ; void CloseProgressDialog ();  Close progress dialog. ;  ; TDrawFeedback * CreateDrawFeedback ();  Draw feedback creation proxy. ;  ; void DataSetStatus (const char *msg, Bool_t status, Int_t done, Int_t total);  Send dataset preparation status. ;  ; Int_t DeactivateWorker (const char *ord, Bool_t save=kTRUE);  Remove the worker identified by the ordinal number 'ord' from the the active list. ;  ; void DeleteDrawFeedback (TDrawFeedback *f);  Delete draw feedback object. ;  ; void DeleteParamet",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:4946,Usability,clear,clear,4946,"request for the qry-th query in fQueries. ;  ; void Browse (TBrowser *b) override;  Build the PROOF's structure in the browser. ;  ; virtual Bool_t CancelStagingDataSet (const char *dataset);  Cancels a dataset staging request. ;  ; void cd (Int_t id=-1);  Set session with 'id' the default one. ;  ; Int_t CleanupSession (const char *sessiontag);  Send cleanup request for the session specified by tag. ;  ; virtual void ClearCache (const char *file=0);  Remove file from all file caches. ;  ; void ClearData (UInt_t what=kUnregistered, const char *dsname=0);  Remove files for the data directory. ;  ; virtual void ClearDataSetCache (const char *dataset=0);  Clear the content of the dataset cache, if any (matching 'dataset', if defined). ;  ; void ClearFeedback ();  Clear feedback list. ;  ; void ClearInput ();  Clear input object list. ;  ; void ClearInputData (const char *name);  Remove obj 'name' form the input data list;. ;  ; void ClearInputData (TObject *obj=0);  Remove obj form the input data list; if obj is null (default), clear the input data info. ;  ; Int_t ClearPackage (const char *package);  Remove a specific package. ;  ; Int_t ClearPackages ();  Remove all packages. ;  ; void Close (Option_t *option="""");  Close all open slave servers. ;  ; void CloseProgressDialog ();  Close progress dialog. ;  ; TDrawFeedback * CreateDrawFeedback ();  Draw feedback creation proxy. ;  ; void DataSetStatus (const char *msg, Bool_t status, Int_t done, Int_t total);  Send dataset preparation status. ;  ; Int_t DeactivateWorker (const char *ord, Bool_t save=kTRUE);  Remove the worker identified by the ordinal number 'ord' from the the active list. ;  ; void DeleteDrawFeedback (TDrawFeedback *f);  Delete draw feedback object. ;  ; void DeleteParameters (const char *wildcard);  Delete the input list parameters specified by a wildcard (e.g. ;  ; void Detach (Option_t *opt="""");  Detach this instance to its proofserv. ;  ; void DisableGoAsyn ();  Signal to disable related switches. ",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:5277,Usability,feedback,feedback,5277,"nup request for the session specified by tag. ;  ; virtual void ClearCache (const char *file=0);  Remove file from all file caches. ;  ; void ClearData (UInt_t what=kUnregistered, const char *dsname=0);  Remove files for the data directory. ;  ; virtual void ClearDataSetCache (const char *dataset=0);  Clear the content of the dataset cache, if any (matching 'dataset', if defined). ;  ; void ClearFeedback ();  Clear feedback list. ;  ; void ClearInput ();  Clear input object list. ;  ; void ClearInputData (const char *name);  Remove obj 'name' form the input data list;. ;  ; void ClearInputData (TObject *obj=0);  Remove obj form the input data list; if obj is null (default), clear the input data info. ;  ; Int_t ClearPackage (const char *package);  Remove a specific package. ;  ; Int_t ClearPackages ();  Remove all packages. ;  ; void Close (Option_t *option="""");  Close all open slave servers. ;  ; void CloseProgressDialog ();  Close progress dialog. ;  ; TDrawFeedback * CreateDrawFeedback ();  Draw feedback creation proxy. ;  ; void DataSetStatus (const char *msg, Bool_t status, Int_t done, Int_t total);  Send dataset preparation status. ;  ; Int_t DeactivateWorker (const char *ord, Bool_t save=kTRUE);  Remove the worker identified by the ordinal number 'ord' from the the active list. ;  ; void DeleteDrawFeedback (TDrawFeedback *f);  Delete draw feedback object. ;  ; void DeleteParameters (const char *wildcard);  Delete the input list parameters specified by a wildcard (e.g. ;  ; void Detach (Option_t *opt="""");  Detach this instance to its proofserv. ;  ; void DisableGoAsyn ();  Signal to disable related switches. ;  ; Int_t DownloadPackage (const char *par, const char *dstdir=0);  Download a PROOF archive (PAR file) from the master package repository. ;  ; Long64_t DrawSelect (const char *dsetname, const char *varexp, const char *selection="""", Option_t *option="""", Long64_t nentries=-1, Long64_t firstentry=0, TObject *enl=0);  Execute the specified drawing action on ",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:5631,Usability,feedback,feedback,5631,"f any (matching 'dataset', if defined). ;  ; void ClearFeedback ();  Clear feedback list. ;  ; void ClearInput ();  Clear input object list. ;  ; void ClearInputData (const char *name);  Remove obj 'name' form the input data list;. ;  ; void ClearInputData (TObject *obj=0);  Remove obj form the input data list; if obj is null (default), clear the input data info. ;  ; Int_t ClearPackage (const char *package);  Remove a specific package. ;  ; Int_t ClearPackages ();  Remove all packages. ;  ; void Close (Option_t *option="""");  Close all open slave servers. ;  ; void CloseProgressDialog ();  Close progress dialog. ;  ; TDrawFeedback * CreateDrawFeedback ();  Draw feedback creation proxy. ;  ; void DataSetStatus (const char *msg, Bool_t status, Int_t done, Int_t total);  Send dataset preparation status. ;  ; Int_t DeactivateWorker (const char *ord, Bool_t save=kTRUE);  Remove the worker identified by the ordinal number 'ord' from the the active list. ;  ; void DeleteDrawFeedback (TDrawFeedback *f);  Delete draw feedback object. ;  ; void DeleteParameters (const char *wildcard);  Delete the input list parameters specified by a wildcard (e.g. ;  ; void Detach (Option_t *opt="""");  Detach this instance to its proofserv. ;  ; void DisableGoAsyn ();  Signal to disable related switches. ;  ; Int_t DownloadPackage (const char *par, const char *dstdir=0);  Download a PROOF archive (PAR file) from the master package repository. ;  ; Long64_t DrawSelect (const char *dsetname, const char *varexp, const char *selection="""", Option_t *option="""", Long64_t nentries=-1, Long64_t firstentry=0, TObject *enl=0);  Execute the specified drawing action on a data set which is stored on the master with name 'dsetname'. ;  ; virtual Long64_t DrawSelect (TDSet *dset, const char *varexp, const char *selection="""", Option_t *option="""", Long64_t nentries=-1, Long64_t firstentry=0);  Execute the specified drawing action on a data set (TDSet). ;  ; virtual Int_t Echo (const char *str);  Sends a string t",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:7691,Usability,feedback,feedback,7691,"via a message. ;  ; virtual Int_t Echo (const TObject *obj);  Sends an object to master and workers and expect them to send back a message with the output of its TObject::Print(). ;  ; Int_t EnablePackage (const char *package, Bool_t notOnClient=kFALSE, TList *workers=0);  Enable specified package. ;  ; Int_t EnablePackage (const char *package, const char *loadopts, Bool_t notOnClient=kFALSE, TList *workers=0);  Enable specified package. ;  ; Int_t EnablePackage (const char *package, TList *loadopts, Bool_t notOnClient=kFALSE, TList *workers=0);  Enable specified package. ;  ; Int_t Exec (const char *cmd, Bool_t plusMaster=kFALSE);  Send command to be executed on the PROOF master and/or slaves. ;  ; Int_t Exec (const char *cmd, const char *ord, Bool_t logtomacro=kFALSE);  Send command to be executed on node of ordinal 'ord' (use ""0"" for master). ;  ; virtual Bool_t ExistsDataSet (const char *dataset);  Returns kTRUE if 'dataset' exists, kFALSE otherwise. ;  ; void Feedback (TList *objs);  Get list of feedback objects. ;  ; Long64_t Finalize (const char *queryref, Bool_t force=kFALSE);  Finalize query with reference ref. ;  ; Long64_t Finalize (Int_t query=-1, Bool_t force=kFALSE);  Finalize the qry-th query in fQueries. ;  ; TList * FindDataSets (const char *searchString, const char *optStr="""");  Find datasets, returns in a TList all found datasets. ;  ; Long64_t GetBytesRead () const;  ; Int_t GetClientProtocol () const;  ; const char * GetConfDir () const;  ; const char * GetConfFile () const;  ; Float_t GetCpuTime () const;  ; const char * GetDataPoolUrl () const;  ; virtual TFileCollection * GetDataSet (const char *dataset, const char *optStr="""");  Get a list of TFileInfo objects describing the files of the specified dataset. ;  ; TMap * GetDataSetQuota (const char *optStr="""");  returns a map of the quotas of all groups ;  ; virtual TMap * GetDataSets (const char *uri="""", const char *optStr="""");  Lists all datasets that match given uri. ;  ; TString Getenv (const",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:8813,Usability,feedback,feedback,8813,"h reference ref. ;  ; Long64_t Finalize (Int_t query=-1, Bool_t force=kFALSE);  Finalize the qry-th query in fQueries. ;  ; TList * FindDataSets (const char *searchString, const char *optStr="""");  Find datasets, returns in a TList all found datasets. ;  ; Long64_t GetBytesRead () const;  ; Int_t GetClientProtocol () const;  ; const char * GetConfDir () const;  ; const char * GetConfFile () const;  ; Float_t GetCpuTime () const;  ; const char * GetDataPoolUrl () const;  ; virtual TFileCollection * GetDataSet (const char *dataset, const char *optStr="""");  Get a list of TFileInfo objects describing the files of the specified dataset. ;  ; TMap * GetDataSetQuota (const char *optStr="""");  returns a map of the quotas of all groups ;  ; virtual TMap * GetDataSets (const char *uri="""", const char *optStr="""");  Lists all datasets that match given uri. ;  ; TString Getenv (const char *env, const char *ord=""0"");  Get value of environment variable 'env' on node 'ord'. ;  ; TList * GetFeedbackList () const;  Return feedback list. ;  ; const char * GetGroup () const;  ; const char * GetImage () const;  ; TList * GetInputList ();  Get input list. ;  ; TMacro * GetLastLog ();  Fill a TMacro with the log lines since the last reading (fLogFileR) Return (TMacro *)0 if no line was logged. ;  ; TList * GetListOfEnabledPackages ();  Get from the master the list of names of the packages enabled. ;  ; TList * GetListOfPackages ();  Get from the master the list of names of the packages available. ;  ; virtual TList * GetListOfQueries (Option_t *opt="""");  Ask the master for the list of queries. ;  ; TList * GetListOfSlaveInfos ();  Returns list of TSlaveInfo's. In case of error return 0. ;  ; TList * GetLoadedMacros () const;  ; void GetLog (Int_t start=-1, Int_t end=-1);  Ask for remote logs in the range [start, end]. ;  ; Int_t GetLogLevel () const;  ; TMacro * GetMacroLog ();  ; TProofMgr * GetManager ();  ; const char * GetMaster () const;  ; void GetMaxQueries ();  Get max number of quer",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:14652,Usability,feedback,feedback,14652," eses);  Get query progress information. ;  ; void PutLog (TQueryResult *qr);  Display log of query pq into the log window frame. ;  ; void QueryResultReady (const char *ref);  Notify availability of a query result. ;  ; virtual Bool_t RegisterDataSet (const char *name, TFileCollection *dataset, const char *optStr="""");  Register the 'dataSet' on the cluster under the current user, group and the given 'dataSetName'. ;  ; Int_t Remove (const char *queryref, Bool_t all=kFALSE);  Send remove request for the query specified by ref. ;  ; Int_t Remove (Int_t query, Bool_t all=kFALSE);  Send remove request for the qry-th query in fQueries. ;  ; void RemoveChain (TChain *chain);  Remove chain from data set. ;  ; virtual Int_t RemoveDataSet (const char *dataset, const char *optStr="""");  Remove the specified dataset from the PROOF cluster. ;  ; Int_t RemoveDynamicPath (const char *libpath, Bool_t onClient=kFALSE);  Remove 'libpath' from the lib path search. ;  ; void RemoveFeedback (const char *name);  Remove object from feedback list. ;  ; Int_t RemoveIncludePath (const char *incpath, Bool_t onClient=kFALSE);  Remove 'incpath' from the inc path search. ;  ; virtual Bool_t RequestStagingDataSet (const char *dataset);  Allows users to request staging of a particular dataset. ;  ; void ResetProgressDialog (const char *sel, Int_t sz, Long64_t fst, Long64_t ent);  Reset progress dialog. ;  ; void ResetProgressDialogStatus ();  ; Int_t Retrieve (const char *queryref, const char *path=0);  Send retrieve request for the query specified by ref. ;  ; Int_t Retrieve (Int_t query, const char *path=0);  Send retrieve request for the qry-th query in fQueries. ;  ; Int_t SavePerfTree (const char *pf=0, const char *qref=0);  Save performance information from TPerfStats to file 'pf'. ;  ; void SendDataSetStatus (const char *msg, UInt_t n, UInt_t tot, Bool_t st);  Send or notify data set status. ;  ; Bool_t SendingLogToWindow () const;  ; void SendLogToWindow (Bool_t mode);  ; void SetActive (",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:15966,Usability,feedback,feedback,15966,"alog (const char *sel, Int_t sz, Long64_t fst, Long64_t ent);  Reset progress dialog. ;  ; void ResetProgressDialogStatus ();  ; Int_t Retrieve (const char *queryref, const char *path=0);  Send retrieve request for the query specified by ref. ;  ; Int_t Retrieve (Int_t query, const char *path=0);  Send retrieve request for the qry-th query in fQueries. ;  ; Int_t SavePerfTree (const char *pf=0, const char *qref=0);  Save performance information from TPerfStats to file 'pf'. ;  ; void SendDataSetStatus (const char *msg, UInt_t n, UInt_t tot, Bool_t st);  Send or notify data set status. ;  ; Bool_t SendingLogToWindow () const;  ; void SendLogToWindow (Bool_t mode);  ; void SetActive (Bool_t=kTRUE);  ; virtual void SetAlias (const char *alias="""");  Set an alias for this session. ;  ; void SetDataPoolUrl (const char *url);  ; virtual Int_t SetDataSetTreeName (const char *dataset, const char *treename);  Set/Change the name of the default tree. ;  ; void SetDrawFeedbackOption (TDrawFeedback *f, Option_t *opt);  Set draw feedback option. ;  ; void SetInputDataFile (const char *datafile);  Set the file to be used to optimally distribute the input data objects. ;  ; void SetLogLevel (Int_t level, UInt_t mask=TProofDebug::kAll);  Set server logging level. ;  ; void SetManager (TProofMgr *mgr);  Set manager and schedule its destruction after this for clean operations. ;  ; void SetMaxDrawQueries (Int_t max);  Set max number of draw queries whose results are saved. ;  ; Int_t SetParallel (Int_t nodes=-1, Bool_t random=kFALSE);  Tell PROOF how many slaves to use in parallel. ;  ; void SetParameter (const char *par, const char *value);  Set input list parameter. ;  ; void SetParameter (const char *par, Double_t value);  Set an input list parameter. ;  ; void SetParameter (const char *par, Int_t value);  Set an input list parameter. ;  ; void SetParameter (const char *par, Long64_t value);  Set an input list parameter. ;  ; void SetParameter (const char *par, Long_t value);  Set ",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:18258,Usability,feedback,feedback,18258,"QueryMode (EQueryMode mode);  Change query running mode to the one specified by 'mode'. ;  ; void SetRealTimeLog (Bool_t on=kTRUE);  Switch ON/OFF the real-time logging facility. ;  ; virtual void ShowCache (Bool_t all=kFALSE);  List contents of file cache. ;  ; virtual void ShowData ();  List contents of the data directory in the sandbox. ;  ; void ShowDataSet (const char *dataset="""", const char *opt=""filter:SsCc"");  display meta-info for given dataset usi ;  ; virtual void ShowDataSetCache (const char *dataset=0);  Display the content of the dataset cache, if any (matching 'dataset', if defined). ;  ; void ShowDataSetQuota (Option_t *opt=0);  shows the quota and usage of all groups if opt contains ""U"" shows also distribution of usage on user-level ;  ; virtual void ShowDataSets (const char *uri="""", const char *optStr="""");  Shows datasets in locations that match the uri. ;  ; void ShowEnabledPackages (Bool_t all=kFALSE);  List which packages are enabled. ;  ; void ShowFeedback () const;  Show items in feedback list. ;  ; void ShowLog (const char *queryref);  Display on screen the content of the temporary log file for query in reference. ;  ; void ShowLog (Int_t qry=-1);  Display on screen the content of the temporary log file. ;  ; void ShowMissingFiles (TQueryResult *qr=0);  Show information about missing files during query described by 'qr' or the last query if qr is null (default). ;  ; void ShowPackages (Bool_t all=kFALSE, Bool_t redirlog=kFALSE);  List contents of package directory. ;  ; void ShowParameters (const char *wildcard=""PROOF_*"") const;  Show the input list parameters specified by the wildcard. ;  ; void ShowQueries (Option_t *opt="""");  Ask the master for the list of queries. ;  ; virtual void ShowStagingStatusDataSet (const char *dataset, const char *optStr=""filter:SsCc"");  Like GetStagingStatusDataSet, but displays results immediately. ;  ; void StartupMessage (const char *msg, Bool_t status, Int_t done, Int_t total);  Send startup message. ;  ; voi",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofSuperMaster.html:37820,Usability,feedback,feedback,37820,"vironment. ;  ; void InitMembers ();  Default initializations. ;  ; virtual Int_t PollForNewWorkers ();  Asks the PROOF Serv for new workers in Dynamic Startup mode and activates them. ;  ; void PrepareInputDataFile (TString &dataFile);  Prepare the file with the input data objects to be sent the master; the objects are taken from the dedicated list and / or the specified file. ;  ; Int_t RemoveWorkers (TList *wrks);  Used for shuting down the workres after a query is finished. ;  ; virtual void SaveWorkerInfo ();  Save information about the worker set in the file .workers in the working dir. ;  ; Int_t SendFile (const char *file, Int_t opt=(kBinary|kForward|kCp|kCpBin), const char *rfile=0, TSlave *sl=0);  Send a file to master or slave servers. ;  ; virtual void SendInputDataFile ();  Send the input data objects to the master; the objects are taken from the dedicated list and / or the specified file. ;  ; void SetDSet (TDSet *dset);  ; void SetFeedback (TString &opt, TString &optfb, Int_t action);  Extract from opt in optfb information about wanted feedback settings. ;  ; void SetPlayer (TVirtualProofPlayer *player);  Set a new PROOF player. ;  ; void SetupWorkersEnv (TList *wrks, Bool_t increasingpool=kFALSE);  Set up packages, loaded macros, include and lib paths ... ;  ; void UpdateDialog ();  Final update of the progress dialog. ;  ; Int_t VerifyDataSetParallel (const char *uri, const char *optStr);  Internal function for parallel dataset verification used TProof::VerifyDataSet and TProofLite::VerifyDataSet. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Friends; class TProofPlayerSuperMaster;  . Additional Inherited Members;  Public Types inherited from TPro",MatchSource.WIKI,doc/master/classTProofSuperMaster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html
https://root.cern/doc/master/classTProofVectorContainer.html:3947,Availability,error,error,3947,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTProofVectorContainer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofVectorContainer.html
https://root.cern/doc/master/classTProofVectorContainer.html:4036,Availability,error,error,4036,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTProofVectorContainer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofVectorContainer.html
https://root.cern/doc/master/classTProofVectorContainer.html:4191,Availability,error,error,4191,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTProofVectorContainer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofVectorContainer.html
https://root.cern/doc/master/classTProofVectorContainer.html:4488,Availability,error,error,4488,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTProofVectorContainer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofVectorContainer.html
https://root.cern/doc/master/classTProofVectorContainer.html:8572,Availability,error,error,8572,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t",MatchSource.WIKI,doc/master/classTProofVectorContainer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofVectorContainer.html
https://root.cern/doc/master/classTProofVectorContainer.html:3953,Integrability,message,message,3953,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTProofVectorContainer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofVectorContainer.html
https://root.cern/doc/master/classTProofVectorContainer.html:4494,Integrability,message,message,4494,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTProofVectorContainer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofVectorContainer.html
https://root.cern/doc/master/classTProofVectorContainer.html:5484,Integrability,message,message,5484,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTProofVectorContainer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofVectorContainer.html
https://root.cern/doc/master/classTProofVectorContainer.html:8578,Integrability,message,message,8578,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t",MatchSource.WIKI,doc/master/classTProofVectorContainer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofVectorContainer.html
https://root.cern/doc/master/classTProofVectorContainer.html:8951,Integrability,message,message,8951," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  G",MatchSource.WIKI,doc/master/classTProofVectorContainer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofVectorContainer.html
https://root.cern/doc/master/classTProofVectorContainer.html:862,Modifiability,inherit,inherited,862,". ROOT: TProofVectorContainer< T > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TProofVectorContainer< T > Class Template Reference. ; template<typename T>; class TProofVectorContainer< T >; Definition at line 239 of file TProofDraw.h. Public Member Functions;  TProofVectorContainer ();  ;  TProofVectorContainer (std::vector< T > *anVector);  ;  ~TProofVectorContainer () override;  ; std::vector< T > * GetVector () const;  ; TClass * IsA () const override;  ; Long64_t Merge (TCollection *list);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const overr",MatchSource.WIKI,doc/master/classTProofVectorContainer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofVectorContainer.html
https://root.cern/doc/master/classTProofVectorContainer.html:2490,Modifiability,inherit,inherited,2490,"ual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,doc/master/classTProofVectorContainer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofVectorContainer.html
https://root.cern/doc/master/classTProofVectorContainer.html:3583,Modifiability,inherit,inheritance,3583,"  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTProofVectorContainer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofVectorContainer.html
https://root.cern/doc/master/classTProofVectorContainer.html:5582,Modifiability,inherit,inherits,5582,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTProofVectorContainer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofVectorContainer.html
https://root.cern/doc/master/classTProofVectorContainer.html:5699,Modifiability,inherit,inherits,5699,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTProofVectorContainer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofVectorContainer.html
https://root.cern/doc/master/classTProofVectorContainer.html:9452,Modifiability,inherit,inherited,9452,"stem error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; std::vector< T > * fVector;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( ",MatchSource.WIKI,doc/master/classTProofVectorContainer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofVectorContainer.html
https://root.cern/doc/master/classTProofVectorContainer.html:9662,Modifiability,inherit,inherited,9662,"stem error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; std::vector< T > * fVector;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( ",MatchSource.WIKI,doc/master/classTProofVectorContainer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofVectorContainer.html
https://root.cern/doc/master/classTProofVectorContainer.html:10223,Modifiability,inherit,inherited,10223,"nt directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; std::vector< T > * fVector;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (prote",MatchSource.WIKI,doc/master/classTProofVectorContainer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofVectorContainer.html
https://root.cern/doc/master/classTProofVectorContainer.html:10327,Modifiability,inherit,inherited,10327,"nst char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; std::vector< T > * fVector;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TProofDraw.h>. Inheritance diagram for TProofVectorContainer< T >:. This browser is not able to show SVG: try Firefox, Chrome, Saf",MatchSource.WIKI,doc/master/classTProofVectorContainer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofVectorContainer.html
https://root.cern/doc/master/classTProofVectorContainer.html:10968,Modifiability,inherit,inherited,10968,"stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; std::vector< T > * fVector;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TProofDraw.h>. Inheritance diagram for TProofVectorContainer< T >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofVectorContainer() [1/2]. template<typename T > . TProofVectorContainer< T >::TProofVectorContainer ; (; std::vector< T > * ; anVector). inline . Definition at line 247 of file TProofDraw.h. ◆ TProofVectorContainer() [2/2]. template<typename T > . TProofVectorContainer< T >::TProofVectorContainer ; (; ). inline . Definition at line 248 of file TProofDraw.h. ◆ ~TProofVectorContainer(). template<typename T > . TProofVectorContainer< T >::~TProofVectorContainer ; (; ). inlineoverride . Definition at line 249 of file TProofDraw.h. Member Function Documentation. ◆ Class(). template<typename T > . static TClass",MatchSource.WIKI,doc/master/classTProofVectorContainer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofVectorContainer.html
https://root.cern/doc/master/classTProofVectorContainer.html:11067,Modifiability,inherit,inherited,11067,"stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; std::vector< T > * fVector;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TProofDraw.h>. Inheritance diagram for TProofVectorContainer< T >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofVectorContainer() [1/2]. template<typename T > . TProofVectorContainer< T >::TProofVectorContainer ; (; std::vector< T > * ; anVector). inline . Definition at line 247 of file TProofDraw.h. ◆ TProofVectorContainer() [2/2]. template<typename T > . TProofVectorContainer< T >::TProofVectorContainer ; (; ). inline . Definition at line 248 of file TProofDraw.h. ◆ ~TProofVectorContainer(). template<typename T > . TProofVectorContainer< T >::~TProofVectorContainer ; (; ). inlineoverride . Definition at line 249 of file TProofDraw.h. Member Function Documentation. ◆ Class(). template<typename T > . static TClass",MatchSource.WIKI,doc/master/classTProofVectorContainer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofVectorContainer.html
https://root.cern/doc/master/classTProofVectorContainer.html:1730,Security,hash,hash,1730," override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this met",MatchSource.WIKI,doc/master/classTProofVectorContainer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProofVectorContainer.html
https://root.cern/doc/master/classTProtoClass.html:4320,Availability,error,error,4320,"ct to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTProtoClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProtoClass.html
https://root.cern/doc/master/classTProtoClass.html:4409,Availability,error,error,4409,"for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTProtoClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProtoClass.html
https://root.cern/doc/master/classTProtoClass.html:4564,Availability,error,error,4564,"e regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTProtoClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProtoClass.html
https://root.cern/doc/master/classTProtoClass.html:4861,Availability,error,error,4861,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTProtoClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProtoClass.html
https://root.cern/doc/master/classTProtoClass.html:8945,Availability,error,error,8945,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t",MatchSource.WIKI,doc/master/classTProtoClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProtoClass.html
https://root.cern/doc/master/classTProtoClass.html:4326,Integrability,message,message,4326,"ct to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTProtoClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProtoClass.html
https://root.cern/doc/master/classTProtoClass.html:4867,Integrability,message,message,4867,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTProtoClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProtoClass.html
https://root.cern/doc/master/classTProtoClass.html:5857,Integrability,message,message,5857,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTProtoClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProtoClass.html
https://root.cern/doc/master/classTProtoClass.html:8951,Integrability,message,message,8951,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t",MatchSource.WIKI,doc/master/classTProtoClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProtoClass.html
https://root.cern/doc/master/classTProtoClass.html:9324,Integrability,message,message,9324," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  G",MatchSource.WIKI,doc/master/classTProtoClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProtoClass.html
https://root.cern/doc/master/classTProtoClass.html:1304,Modifiability,inherit,inherited,1304,"toClass Class Reference. ; Persistent version of a TClass. ; Definition at line 38 of file TProtoClass.h. Classes; struct  TProtoRealData;  . Public Member Functions;  TProtoClass ();  ;  TProtoClass (TClass *cl);  Initialize a TProtoClass from a TClass. ;  ;  TProtoClass (TProtoClass *pc);  ; virtual ~TProtoClass ();  Destructor. ;  ; void Delete (Option_t *opt="""") override;  Delete the containers that are usually owned by their TClass. ;  ; Bool_t FillTClass (TClass *pcl);  Move data from this TProtoClass into cl. ;  ; TList * GetBaseList ();  ; std::vector< TDataMember * > & GetData ();  ; std::vector< TString > & GetDepClasses ();  ; TList * GetEnumList ();  ; const TList * GetListOfEnums ();  ; std::vector< TProtoRealData > & GetPRDList ();  ; int GetSize ();  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; ",MatchSource.WIKI,doc/master/classTProtoClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProtoClass.html
https://root.cern/doc/master/classTProtoClass.html:2932,Modifiability,inherit,inherited,2932,"ual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; vi",MatchSource.WIKI,doc/master/classTProtoClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProtoClass.html
https://root.cern/doc/master/classTProtoClass.html:3956,Modifiability,inherit,inheritance,3956,"ject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTProtoClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProtoClass.html
https://root.cern/doc/master/classTProtoClass.html:5955,Modifiability,inherit,inherits,5955,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTProtoClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProtoClass.html
https://root.cern/doc/master/classTProtoClass.html:6072,Modifiability,inherit,inherits,6072,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTProtoClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProtoClass.html
https://root.cern/doc/master/classTProtoClass.html:9825,Modifiability,inherit,inherited,9825,"stem error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TProtoClass (const TProtoClass &)=delete;  ; const char * GetClassName (Int_t index) const;  ; TProtoClass & operator= (const TProtoClass &)=delete;  . Static Private Member Functions; static Int_t DataMemberIndex (TClass *cl, const char *name);  ; static TDataMember * FindDataMember (TClass *cl, Int_t index);  . Private Attributes; TList * fBase;  ; Int_t fCanSplit;  ; UInt_t fCheckSum;  ;",MatchSource.WIKI,doc/master/classTProtoClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProtoClass.html
https://root.cern/doc/master/classTProtoClass.html:10035,Modifiability,inherit,inherited,10035,"stem error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TProtoClass (const TProtoClass &)=delete;  ; const char * GetClassName (Int_t index) const;  ; TProtoClass & operator= (const TProtoClass &)=delete;  . Static Private Member Functions; static Int_t DataMemberIndex (TClass *cl, const char *name);  ; static TDataMember * FindDataMember (TClass *cl, Int_t index);  . Private Attributes; TList * fBase;  ; Int_t fCanSplit;  ; UInt_t fCheckSum;  ;",MatchSource.WIKI,doc/master/classTProtoClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProtoClass.html
https://root.cern/doc/master/classTProtoClass.html:11244,Modifiability,inherit,inherited,11244,"tat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TProtoClass (const TProtoClass &)=delete;  ; const char * GetClassName (Int_t index) const;  ; TProtoClass & operator= (const TProtoClass &)=delete;  . Static Private Member Functions; static Int_t DataMemberIndex (TClass *cl, const char *name);  ; static TDataMember * FindDataMember (TClass *cl, Int_t index);  . Private Attributes; TList * fBase;  ; Int_t fCanSplit;  ; UInt_t fCheckSum;  ; Long_t fClassProperty;  ; std::vector< TDataMember * > fData;  ; std::vector< TString > fDepClasses;  ; TList * fEnums;  ; Long_t fOffsetStreamer;  ; std::vector< TProtoRealData > fPRealData;  ; Long_t fProperty;  ; Int_t fSizeof;  ; Int_t fStreamerType;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TProtoClass.h>. Inheritance diagram for TProtoCl",MatchSource.WIKI,doc/master/classTProtoClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProtoClass.html
https://root.cern/doc/master/classTProtoClass.html:11885,Modifiability,inherit,inherited,11885,"ata;  ; std::vector< TString > fDepClasses;  ; TList * fEnums;  ; Long_t fOffsetStreamer;  ; std::vector< TProtoRealData > fPRealData;  ; Long_t fProperty;  ; Int_t fSizeof;  ; Int_t fStreamerType;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TProtoClass.h>. Inheritance diagram for TProtoClass:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProtoClass() [1/4]. TProtoClass::TProtoClass ; (; const TProtoClass & ; ). privatedelete . ◆ TProtoClass() [2/4]. TProtoClass::TProtoClass ; (; ). inline . Definition at line 97 of file TProtoClass.h. ◆ TProtoClass() [3/4]. TProtoClass::TProtoClass ; (; TProtoClass * ; pc). ◆ TProtoClass() [4/4]. TProtoClass::TProtoClass ; (; TClass * ; cl). Initialize a TProtoClass from a TClass. ; Definition at line 54 of file TProtoClass.cxx. ◆ ~TProtoClass(). TProtoClass::~TProtoClass ; (; ). virtual . Destructor. ; Definition at line 159 of file TProtoCl",MatchSource.WIKI,doc/master/classTProtoClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProtoClass.html
https://root.cern/doc/master/classTProtoClass.html:11984,Modifiability,inherit,inherited,11984,"ata;  ; std::vector< TString > fDepClasses;  ; TList * fEnums;  ; Long_t fOffsetStreamer;  ; std::vector< TProtoRealData > fPRealData;  ; Long_t fProperty;  ; Int_t fSizeof;  ; Int_t fStreamerType;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TProtoClass.h>. Inheritance diagram for TProtoClass:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProtoClass() [1/4]. TProtoClass::TProtoClass ; (; const TProtoClass & ; ). privatedelete . ◆ TProtoClass() [2/4]. TProtoClass::TProtoClass ; (; ). inline . Definition at line 97 of file TProtoClass.h. ◆ TProtoClass() [3/4]. TProtoClass::TProtoClass ; (; TProtoClass * ; pc). ◆ TProtoClass() [4/4]. TProtoClass::TProtoClass ; (; TClass * ; cl). Initialize a TProtoClass from a TClass. ; Definition at line 54 of file TProtoClass.cxx. ◆ ~TProtoClass(). TProtoClass::~TProtoClass ; (; ). virtual . Destructor. ; Definition at line 159 of file TProtoCl",MatchSource.WIKI,doc/master/classTProtoClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProtoClass.html
https://root.cern/doc/master/classTProtoClass.html:12189,Modifiability,inherit,inherited,12189,"pe;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TProtoClass.h>. Inheritance diagram for TProtoClass:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProtoClass() [1/4]. TProtoClass::TProtoClass ; (; const TProtoClass & ; ). privatedelete . ◆ TProtoClass() [2/4]. TProtoClass::TProtoClass ; (; ). inline . Definition at line 97 of file TProtoClass.h. ◆ TProtoClass() [3/4]. TProtoClass::TProtoClass ; (; TProtoClass * ; pc). ◆ TProtoClass() [4/4]. TProtoClass::TProtoClass ; (; TClass * ; cl). Initialize a TProtoClass from a TClass. ; Definition at line 54 of file TProtoClass.cxx. ◆ ~TProtoClass(). TProtoClass::~TProtoClass ; (; ). virtual . Destructor. ; Definition at line 159 of file TProtoClass.cxx. Member Function Documentation. ◆ Class(). static TClass * TProtoClass::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TProtoClass::Cla",MatchSource.WIKI,doc/master/classTProtoClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProtoClass.html
https://root.cern/doc/master/classTProtoClass.html:2172,Security,hash,hash,2172," override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this met",MatchSource.WIKI,doc/master/classTProtoClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTProtoClass.html
https://root.cern/doc/master/classTPServerSocket.html:1749,Availability,error,error,1749,"verSocket ();  ; TPSocket * Accept (UChar_t Opt=kSrvNoAuth) override;  Accept a connection on a parallel server socket. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TServerSocket;  TServerSocket (const char *service, Bool_t reuse=kFALSE, Int_t backlog=kDefaultBacklog, Int_t tcpwindowsize=-1);  Create a server socket object for a named service. ;  ;  TServerSocket (Int_t port, Bool_t reuse=kFALSE, Int_t backlog=kDefaultBacklog, Int_t tcpwindowsize=-1);  Create a server socket object on a specified port. ;  ; virtual ~TServerSocket ();  Destructor: cleanup authentication stuff (if any) and close. ;  ; TInetAddress GetLocalInetAddress () override;  Return internet address of host to which the server socket is bound, i.e. ;  ; Int_t GetLocalPort () override;  Get port # to which server socket is bound. In case of error returns -1. ;  ; TClass * IsA () const override;  ; Int_t Recv (char *, Int_t) override;  Receive a character string message of maximum max length. ;  ; Int_t Recv (char *, Int_t, Int_t &) override;  Receive a character string message of maximum max length. ;  ; Int_t Recv (Int_t &, Int_t &) override;  Receives a status and a message type. ;  ; Int_t Recv (TMessage *&) override;  Receive a TMessage object. ;  ; Int_t RecvRaw (void *, Int_t, ESendRecvOptions=kDefault) override;  Receive a raw buffer of specified length bytes. ;  ; Int_t Send (const char *, Int_t=kMESS_STRING) override;  Send a character string buffer. ;  ; Int_t Send (const TMessage &) override;  Send a TMessage object. ;  ; Int_t Send (Int_t) override;  Send a single message opcode. ;  ; Int_t Send (Int_t, Int_t) override;  Send a status and a single message opcode. ;  ; Int_t SendObject (const TObject *, Int_t=kMESS_OBJECT) override;  Send an object. ;  ; Int_t SendRaw (const void *, Int_t, ESendRecvOptions=kDefaul",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:4046,Availability,error,error,4046,"fer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSocket;  TSocket (const char *host, const char *service, Int_t tcpwindowsize=-1);  Create a socket. ;  ;  TSocket (const char *host, Int_t port, Int_t tcpwindowsize=-1);  Create a socket; see CreateAuthSocket for the form of url. ;  ;  TSocket (const char *sockpath);  Create a socket in the Unix domain on 'sockpath'. ;  ;  TSocket (const TSocket &s);  TSocket copy ctor. ;  ;  TSocket (Int_t descriptor);  Create a socket. ;  ;  TSocket (Int_t descriptor, const char *sockpath);  Create a socket. ;  ;  TSocket (TInetAddress address, const char *service, Int_t tcpwindowsize=-1);  Create a socket. ;  ;  TSocket (TInetAddress address, Int_t port, Int_t tcpwindowsize=-1);  Create a socket. ;  ; virtual ~TSocket ();  ; virtual void Close (Option_t *opt="""");  Close the socket. ;  ; UInt_t GetBytesRecv () const;  ; UInt_t GetBytesSent () const;  ; Int_t GetCompressionAlgorithm () const;  ; Int_t GetCompressionLevel () const;  ; Int_t GetCompressionSettings () const;  ; virtual Int_t GetDescriptor () const;  ; Int_t GetErrorCode () const;  Returns error code. ;  ; TInetAddress GetInetAddress () const;  ; TTimeStamp GetLastUsage ();  ; virtual Int_t GetOption (ESockOptions opt, Int_t &val);  Get socket options. Returns -1 in case of error. ;  ; Int_t GetPort () const;  ; Int_t GetRemoteProtocol () const;  ; TSecContext * GetSecContext () const;  ; const char * GetService () const;  ; Int_t GetServType () const;  ; Int_t GetTcpWindowSize () const;  ; const char * GetUrl () const;  ; TClass * IsA () const override;  ; virtual Bool_t IsAuthenticated () const;  ; virtual Bool_t IsValid () const;  ; virtual Int_t Reconnect ();  ; virtual Int_t Select (Int_t interest=kRead, Long_t timeout=-1);  Waits for this socket to change status. ;  ; void SetCompressionAlgorithm (Int_t algorithm=ROOT::RCompressionSetting::EAlgorithm::kUseGlobal);  See comments for function SetCompressionSettings. ;  ; void SetCompress",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:4234,Availability,error,error,4234," ;  TSocket (const char *sockpath);  Create a socket in the Unix domain on 'sockpath'. ;  ;  TSocket (const TSocket &s);  TSocket copy ctor. ;  ;  TSocket (Int_t descriptor);  Create a socket. ;  ;  TSocket (Int_t descriptor, const char *sockpath);  Create a socket. ;  ;  TSocket (TInetAddress address, const char *service, Int_t tcpwindowsize=-1);  Create a socket. ;  ;  TSocket (TInetAddress address, Int_t port, Int_t tcpwindowsize=-1);  Create a socket. ;  ; virtual ~TSocket ();  ; virtual void Close (Option_t *opt="""");  Close the socket. ;  ; UInt_t GetBytesRecv () const;  ; UInt_t GetBytesSent () const;  ; Int_t GetCompressionAlgorithm () const;  ; Int_t GetCompressionLevel () const;  ; Int_t GetCompressionSettings () const;  ; virtual Int_t GetDescriptor () const;  ; Int_t GetErrorCode () const;  Returns error code. ;  ; TInetAddress GetInetAddress () const;  ; TTimeStamp GetLastUsage ();  ; virtual Int_t GetOption (ESockOptions opt, Int_t &val);  Get socket options. Returns -1 in case of error. ;  ; Int_t GetPort () const;  ; Int_t GetRemoteProtocol () const;  ; TSecContext * GetSecContext () const;  ; const char * GetService () const;  ; Int_t GetServType () const;  ; Int_t GetTcpWindowSize () const;  ; const char * GetUrl () const;  ; TClass * IsA () const override;  ; virtual Bool_t IsAuthenticated () const;  ; virtual Bool_t IsValid () const;  ; virtual Int_t Reconnect ();  ; virtual Int_t Select (Int_t interest=kRead, Long_t timeout=-1);  Waits for this socket to change status. ;  ; void SetCompressionAlgorithm (Int_t algorithm=ROOT::RCompressionSetting::EAlgorithm::kUseGlobal);  See comments for function SetCompressionSettings. ;  ; void SetCompressionLevel (Int_t level=ROOT::RCompressionSetting::ELevel::kUseMin);  See comments for function SetCompressionSettings. ;  ; void SetCompressionSettings (Int_t settings=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Used to specify the compression level and algorithm: settings = 100 * algorithm + le",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:8779,Availability,error,error,8779,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:8868,Availability,error,error,8868,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:9023,Availability,error,error,9023,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:9320,Availability,error,error,9320,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom ",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:13362,Availability,error,error,13362,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TServerSocket; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Ve",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:15737,Availability,error,error,15737,"Socket; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TSocket * CreateAuthSocket (const char *url, Int_t size=0, Int_t tcpwindowsize=-1, TSocket *s=nullptr, Int_t *err=nullptr);  Creates a socket or a parallel socket and authenticates to the remote server. ;  ; static TSocket * CreateAuthSocket (const char *user, const char *host, Int_t port, Int_t size=0, Int_t tcpwindowsize=-1, TSocket *s=nullptr, Int_t *err=nullptr);  Creates a socket or a parallel socket and authenticates to the remote server specified in 'url' on remote 'port' as 'user'. ;  ; static const char * DeclFileName ();  ; static Int_t GetClientProtocol ();  Static method returning supported client protocol. ;  ; static ULong64_t GetSocketBytesRecv ();  Get total number of bytes received via all sockets. ;  ; static ULong64_t GetSocketBytesSent ();  Get total number of bytes sent via all sockets. ;  ; static void NetError (const char *where, Int_t error);  Print error string depending on error code. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TPServerSocket (const TPServerSocket &)=delete;  ; void operator= (const TPServerSocket &)=delete;  . Private Attributes; Int_t fTcpWindowSize;  . Additional Inherited Members;  Public Ty",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:15752,Availability,error,error,15752,"Socket; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TSocket * CreateAuthSocket (const char *url, Int_t size=0, Int_t tcpwindowsize=-1, TSocket *s=nullptr, Int_t *err=nullptr);  Creates a socket or a parallel socket and authenticates to the remote server. ;  ; static TSocket * CreateAuthSocket (const char *user, const char *host, Int_t port, Int_t size=0, Int_t tcpwindowsize=-1, TSocket *s=nullptr, Int_t *err=nullptr);  Creates a socket or a parallel socket and authenticates to the remote server specified in 'url' on remote 'port' as 'user'. ;  ; static const char * DeclFileName ();  ; static Int_t GetClientProtocol ();  Static method returning supported client protocol. ;  ; static ULong64_t GetSocketBytesRecv ();  Get total number of bytes received via all sockets. ;  ; static ULong64_t GetSocketBytesSent ();  Get total number of bytes sent via all sockets. ;  ; static void NetError (const char *where, Int_t error);  Print error string depending on error code. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TPServerSocket (const TPServerSocket &)=delete;  ; void operator= (const TPServerSocket &)=delete;  . Private Attributes; Int_t fTcpWindowSize;  . Additional Inherited Members;  Public Ty",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:15778,Availability,error,error,15778,"Socket; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TSocket * CreateAuthSocket (const char *url, Int_t size=0, Int_t tcpwindowsize=-1, TSocket *s=nullptr, Int_t *err=nullptr);  Creates a socket or a parallel socket and authenticates to the remote server. ;  ; static TSocket * CreateAuthSocket (const char *user, const char *host, Int_t port, Int_t size=0, Int_t tcpwindowsize=-1, TSocket *s=nullptr, Int_t *err=nullptr);  Creates a socket or a parallel socket and authenticates to the remote server specified in 'url' on remote 'port' as 'user'. ;  ; static const char * DeclFileName ();  ; static Int_t GetClientProtocol ();  Static method returning supported client protocol. ;  ; static ULong64_t GetSocketBytesRecv ();  Get total number of bytes received via all sockets. ;  ; static ULong64_t GetSocketBytesSent ();  Get total number of bytes sent via all sockets. ;  ; static void NetError (const char *where, Int_t error);  Print error string depending on error code. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TPServerSocket (const TPServerSocket &)=delete;  ; void operator= (const TPServerSocket &)=delete;  . Private Attributes; Int_t fTcpWindowSize;  . Additional Inherited Members;  Public Ty",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:20476,Availability,error,error,20476,"eritance diagram for TPServerSocket:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TPServerSocket() [1/3]. TPServerSocket::TPServerSocket ; (; const TPServerSocket & ; ). privatedelete . ◆ TPServerSocket() [2/3]. TPServerSocket::TPServerSocket ; (; Int_t ; port, . Bool_t ; reuse = kFALSE, . Int_t ; backlog = kDefaultBacklog, . Int_t ; tcpwindowsize = -1 . ). Create a parallel server socket object on a specified port. ; Set reuse to true to force reuse of the server socket (i.e. do not wait for the time out to pass). Using backlog one can set the desirable queue length for pending connections. Use tcpwindowsize to specify the size of the receive buffer, it has to be specified here to make sure the window scale option is set (for tcpwindowsize > 65KB and for platforms supporting window scaling). Use IsValid() to check the validity of the server socket. In case server socket is not valid use GetErrorCode() to obtain the specific error value. These values are: 0 = no error (socket is valid) -1 = low level socket() call failed -2 = low level bind() call failed -3 = low level listen() call failed Every valid server socket is added to the TROOT sockets list which will make sure that any open sockets are properly closed on program termination. ; Definition at line 49 of file TPServerSocket.cxx. ◆ TPServerSocket() [3/3]. TPServerSocket::TPServerSocket ; (; const char * ; service, . Bool_t ; reuse = kFALSE, . Int_t ; backlog = kDefaultBacklog, . Int_t ; tcpwindowsize = -1 . ). Create a parallel server socket object for a named service. ; Set reuse to true to force reuse of the server socket (i.e. do not wait for the time out to pass). Using backlog one can set the desirable queue length for pending connections. Use tcpwindowsize to specify the size of the receive buffer, it has to be specified here to make sure the window scale option is set (for tcpwindowsize > 65KB and for platforms",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:20514,Availability,error,error,20514,"3]. TPServerSocket::TPServerSocket ; (; const TPServerSocket & ; ). privatedelete . ◆ TPServerSocket() [2/3]. TPServerSocket::TPServerSocket ; (; Int_t ; port, . Bool_t ; reuse = kFALSE, . Int_t ; backlog = kDefaultBacklog, . Int_t ; tcpwindowsize = -1 . ). Create a parallel server socket object on a specified port. ; Set reuse to true to force reuse of the server socket (i.e. do not wait for the time out to pass). Using backlog one can set the desirable queue length for pending connections. Use tcpwindowsize to specify the size of the receive buffer, it has to be specified here to make sure the window scale option is set (for tcpwindowsize > 65KB and for platforms supporting window scaling). Use IsValid() to check the validity of the server socket. In case server socket is not valid use GetErrorCode() to obtain the specific error value. These values are: 0 = no error (socket is valid) -1 = low level socket() call failed -2 = low level bind() call failed -3 = low level listen() call failed Every valid server socket is added to the TROOT sockets list which will make sure that any open sockets are properly closed on program termination. ; Definition at line 49 of file TPServerSocket.cxx. ◆ TPServerSocket() [3/3]. TPServerSocket::TPServerSocket ; (; const char * ; service, . Bool_t ; reuse = kFALSE, . Int_t ; backlog = kDefaultBacklog, . Int_t ; tcpwindowsize = -1 . ). Create a parallel server socket object for a named service. ; Set reuse to true to force reuse of the server socket (i.e. do not wait for the time out to pass). Using backlog one can set the desirable queue length for pending connections. Use tcpwindowsize to specify the size of the receive buffer, it has to be specified here to make sure the window scale option is set (for tcpwindowsize > 65KB and for platforms supporting window scaling). Use IsValid() to check the validity of the server socket. In case server socket is not valid use GetErrorCode() to obtain the specific error value. These values are: 0 ",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:21607,Availability,error,error,21607,"-2 = low level bind() call failed -3 = low level listen() call failed Every valid server socket is added to the TROOT sockets list which will make sure that any open sockets are properly closed on program termination. ; Definition at line 49 of file TPServerSocket.cxx. ◆ TPServerSocket() [3/3]. TPServerSocket::TPServerSocket ; (; const char * ; service, . Bool_t ; reuse = kFALSE, . Int_t ; backlog = kDefaultBacklog, . Int_t ; tcpwindowsize = -1 . ). Create a parallel server socket object for a named service. ; Set reuse to true to force reuse of the server socket (i.e. do not wait for the time out to pass). Using backlog one can set the desirable queue length for pending connections. Use tcpwindowsize to specify the size of the receive buffer, it has to be specified here to make sure the window scale option is set (for tcpwindowsize > 65KB and for platforms supporting window scaling). Use IsValid() to check the validity of the server socket. In case server socket is not valid use GetErrorCode() to obtain the specific error value. These values are: 0 = no error (socket is valid) -1 = low level socket() call failed -2 = low level bind() call failed -3 = low level listen() call failed Every valid server socket is added to the TROOT sockets list which will make sure that any open sockets are properly closed on program termination. ; Definition at line 76 of file TPServerSocket.cxx. ◆ ~TPServerSocket(). virtual TPServerSocket::~TPServerSocket ; (; ). inlinevirtual . Definition at line 47 of file TPServerSocket.h. Member Function Documentation. ◆ Accept(). TPSocket * TPServerSocket::Accept ; (; UChar_t ; Opt = kSrvNoAuth). overridevirtual . Accept a connection on a parallel server socket. ; Returns a full-duplex parallel communication TPSocket object. If no pending connections are present on the queue and nonblocking mode has not been enabled with SetOption(kNoBlock,1) the call blocks until a connection is present. The returned socket must be deleted by the user. The sock",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:21645,Availability,error,error,21645," program termination. ; Definition at line 49 of file TPServerSocket.cxx. ◆ TPServerSocket() [3/3]. TPServerSocket::TPServerSocket ; (; const char * ; service, . Bool_t ; reuse = kFALSE, . Int_t ; backlog = kDefaultBacklog, . Int_t ; tcpwindowsize = -1 . ). Create a parallel server socket object for a named service. ; Set reuse to true to force reuse of the server socket (i.e. do not wait for the time out to pass). Using backlog one can set the desirable queue length for pending connections. Use tcpwindowsize to specify the size of the receive buffer, it has to be specified here to make sure the window scale option is set (for tcpwindowsize > 65KB and for platforms supporting window scaling). Use IsValid() to check the validity of the server socket. In case server socket is not valid use GetErrorCode() to obtain the specific error value. These values are: 0 = no error (socket is valid) -1 = low level socket() call failed -2 = low level bind() call failed -3 = low level listen() call failed Every valid server socket is added to the TROOT sockets list which will make sure that any open sockets are properly closed on program termination. ; Definition at line 76 of file TPServerSocket.cxx. ◆ ~TPServerSocket(). virtual TPServerSocket::~TPServerSocket ; (; ). inlinevirtual . Definition at line 47 of file TPServerSocket.h. Member Function Documentation. ◆ Accept(). TPSocket * TPServerSocket::Accept ; (; UChar_t ; Opt = kSrvNoAuth). overridevirtual . Accept a connection on a parallel server socket. ; Returns a full-duplex parallel communication TPSocket object. If no pending connections are present on the queue and nonblocking mode has not been enabled with SetOption(kNoBlock,1) the call blocks until a connection is present. The returned socket must be deleted by the user. The socket is also added to the TROOT sockets list which will make sure that any open sockets are properly closed on program termination. In case of error 0 is returned and in case non-blocking I/O is enab",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:22715,Availability,error,error,22715,"call failed Every valid server socket is added to the TROOT sockets list which will make sure that any open sockets are properly closed on program termination. ; Definition at line 76 of file TPServerSocket.cxx. ◆ ~TPServerSocket(). virtual TPServerSocket::~TPServerSocket ; (; ). inlinevirtual . Definition at line 47 of file TPServerSocket.h. Member Function Documentation. ◆ Accept(). TPSocket * TPServerSocket::Accept ; (; UChar_t ; Opt = kSrvNoAuth). overridevirtual . Accept a connection on a parallel server socket. ; Returns a full-duplex parallel communication TPSocket object. If no pending connections are present on the queue and nonblocking mode has not been enabled with SetOption(kNoBlock,1) the call blocks until a connection is present. The returned socket must be deleted by the user. The socket is also added to the TROOT sockets list which will make sure that any open sockets are properly closed on program termination. In case of error 0 is returned and in case non-blocking I/O is enabled and no connections are available -1 is returned. ; Reimplemented from TServerSocket.; Definition at line 95 of file TPServerSocket.cxx. ◆ Class(). static TClass * TPServerSocket::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TPServerSocket::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TPServerSocket::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 51 of file TPServerSocket.h. ◆ DeclFileName(). static const char * TPServerSocket::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 51 of file TPServerSocket.h. ◆ IsA(). TClass * TPServerSocket::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TNamed.; Definition at line 51 of file TPServerSocket.h. ◆ operator=(). void TPServerSocket::operator= ; (; const TPSe",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:22798,Availability,avail,available,22798,"call failed Every valid server socket is added to the TROOT sockets list which will make sure that any open sockets are properly closed on program termination. ; Definition at line 76 of file TPServerSocket.cxx. ◆ ~TPServerSocket(). virtual TPServerSocket::~TPServerSocket ; (; ). inlinevirtual . Definition at line 47 of file TPServerSocket.h. Member Function Documentation. ◆ Accept(). TPSocket * TPServerSocket::Accept ; (; UChar_t ; Opt = kSrvNoAuth). overridevirtual . Accept a connection on a parallel server socket. ; Returns a full-duplex parallel communication TPSocket object. If no pending connections are present on the queue and nonblocking mode has not been enabled with SetOption(kNoBlock,1) the call blocks until a connection is present. The returned socket must be deleted by the user. The socket is also added to the TROOT sockets list which will make sure that any open sockets are properly closed on program termination. In case of error 0 is returned and in case non-blocking I/O is enabled and no connections are available -1 is returned. ; Reimplemented from TServerSocket.; Definition at line 95 of file TPServerSocket.cxx. ◆ Class(). static TClass * TPServerSocket::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TPServerSocket::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TPServerSocket::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 51 of file TPServerSocket.h. ◆ DeclFileName(). static const char * TPServerSocket::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 51 of file TPServerSocket.h. ◆ IsA(). TClass * TPServerSocket::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TNamed.; Definition at line 51 of file TPServerSocket.h. ◆ operator=(). void TPServerSocket::operator= ; (; const TPSe",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:1872,Integrability,message,message,1872,"nection on a parallel server socket. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TServerSocket;  TServerSocket (const char *service, Bool_t reuse=kFALSE, Int_t backlog=kDefaultBacklog, Int_t tcpwindowsize=-1);  Create a server socket object for a named service. ;  ;  TServerSocket (Int_t port, Bool_t reuse=kFALSE, Int_t backlog=kDefaultBacklog, Int_t tcpwindowsize=-1);  Create a server socket object on a specified port. ;  ; virtual ~TServerSocket ();  Destructor: cleanup authentication stuff (if any) and close. ;  ; TInetAddress GetLocalInetAddress () override;  Return internet address of host to which the server socket is bound, i.e. ;  ; Int_t GetLocalPort () override;  Get port # to which server socket is bound. In case of error returns -1. ;  ; TClass * IsA () const override;  ; Int_t Recv (char *, Int_t) override;  Receive a character string message of maximum max length. ;  ; Int_t Recv (char *, Int_t, Int_t &) override;  Receive a character string message of maximum max length. ;  ; Int_t Recv (Int_t &, Int_t &) override;  Receives a status and a message type. ;  ; Int_t Recv (TMessage *&) override;  Receive a TMessage object. ;  ; Int_t RecvRaw (void *, Int_t, ESendRecvOptions=kDefault) override;  Receive a raw buffer of specified length bytes. ;  ; Int_t Send (const char *, Int_t=kMESS_STRING) override;  Send a character string buffer. ;  ; Int_t Send (const TMessage &) override;  Send a TMessage object. ;  ; Int_t Send (Int_t) override;  Send a single message opcode. ;  ; Int_t Send (Int_t, Int_t) override;  Send a status and a single message opcode. ;  ; Int_t SendObject (const TObject *, Int_t=kMESS_OBJECT) override;  Send an object. ;  ; Int_t SendRaw (const void *, Int_t, ESendRecvOptions=kDefault) override;  Send a raw buffer of specified length. ;  ; void Streamer (TBuffer &",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:1982,Integrability,message,message,1982," object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TServerSocket;  TServerSocket (const char *service, Bool_t reuse=kFALSE, Int_t backlog=kDefaultBacklog, Int_t tcpwindowsize=-1);  Create a server socket object for a named service. ;  ;  TServerSocket (Int_t port, Bool_t reuse=kFALSE, Int_t backlog=kDefaultBacklog, Int_t tcpwindowsize=-1);  Create a server socket object on a specified port. ;  ; virtual ~TServerSocket ();  Destructor: cleanup authentication stuff (if any) and close. ;  ; TInetAddress GetLocalInetAddress () override;  Return internet address of host to which the server socket is bound, i.e. ;  ; Int_t GetLocalPort () override;  Get port # to which server socket is bound. In case of error returns -1. ;  ; TClass * IsA () const override;  ; Int_t Recv (char *, Int_t) override;  Receive a character string message of maximum max length. ;  ; Int_t Recv (char *, Int_t, Int_t &) override;  Receive a character string message of maximum max length. ;  ; Int_t Recv (Int_t &, Int_t &) override;  Receives a status and a message type. ;  ; Int_t Recv (TMessage *&) override;  Receive a TMessage object. ;  ; Int_t RecvRaw (void *, Int_t, ESendRecvOptions=kDefault) override;  Receive a raw buffer of specified length bytes. ;  ; Int_t Send (const char *, Int_t=kMESS_STRING) override;  Send a character string buffer. ;  ; Int_t Send (const TMessage &) override;  Send a TMessage object. ;  ; Int_t Send (Int_t) override;  Send a single message opcode. ;  ; Int_t Send (Int_t, Int_t) override;  Send a status and a single message opcode. ;  ; Int_t SendObject (const TObject *, Int_t=kMESS_OBJECT) override;  Send an object. ;  ; Int_t SendRaw (const void *, Int_t, ESendRecvOptions=kDefault) override;  Send a raw buffer of specified length. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Publ",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:2083,Integrability,message,message,2083,"Public Member Functions inherited from TServerSocket;  TServerSocket (const char *service, Bool_t reuse=kFALSE, Int_t backlog=kDefaultBacklog, Int_t tcpwindowsize=-1);  Create a server socket object for a named service. ;  ;  TServerSocket (Int_t port, Bool_t reuse=kFALSE, Int_t backlog=kDefaultBacklog, Int_t tcpwindowsize=-1);  Create a server socket object on a specified port. ;  ; virtual ~TServerSocket ();  Destructor: cleanup authentication stuff (if any) and close. ;  ; TInetAddress GetLocalInetAddress () override;  Return internet address of host to which the server socket is bound, i.e. ;  ; Int_t GetLocalPort () override;  Get port # to which server socket is bound. In case of error returns -1. ;  ; TClass * IsA () const override;  ; Int_t Recv (char *, Int_t) override;  Receive a character string message of maximum max length. ;  ; Int_t Recv (char *, Int_t, Int_t &) override;  Receive a character string message of maximum max length. ;  ; Int_t Recv (Int_t &, Int_t &) override;  Receives a status and a message type. ;  ; Int_t Recv (TMessage *&) override;  Receive a TMessage object. ;  ; Int_t RecvRaw (void *, Int_t, ESendRecvOptions=kDefault) override;  Receive a raw buffer of specified length bytes. ;  ; Int_t Send (const char *, Int_t=kMESS_STRING) override;  Send a character string buffer. ;  ; Int_t Send (const TMessage &) override;  Send a TMessage object. ;  ; Int_t Send (Int_t) override;  Send a single message opcode. ;  ; Int_t Send (Int_t, Int_t) override;  Send a status and a single message opcode. ;  ; Int_t SendObject (const TObject *, Int_t=kMESS_OBJECT) override;  Send an object. ;  ; Int_t SendRaw (const void *, Int_t, ESendRecvOptions=kDefault) override;  Send a raw buffer of specified length. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSocket;  TSocket (const char *host, const char *service, Int_",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:2499,Integrability,message,message,2499,"cleanup authentication stuff (if any) and close. ;  ; TInetAddress GetLocalInetAddress () override;  Return internet address of host to which the server socket is bound, i.e. ;  ; Int_t GetLocalPort () override;  Get port # to which server socket is bound. In case of error returns -1. ;  ; TClass * IsA () const override;  ; Int_t Recv (char *, Int_t) override;  Receive a character string message of maximum max length. ;  ; Int_t Recv (char *, Int_t, Int_t &) override;  Receive a character string message of maximum max length. ;  ; Int_t Recv (Int_t &, Int_t &) override;  Receives a status and a message type. ;  ; Int_t Recv (TMessage *&) override;  Receive a TMessage object. ;  ; Int_t RecvRaw (void *, Int_t, ESendRecvOptions=kDefault) override;  Receive a raw buffer of specified length bytes. ;  ; Int_t Send (const char *, Int_t=kMESS_STRING) override;  Send a character string buffer. ;  ; Int_t Send (const TMessage &) override;  Send a TMessage object. ;  ; Int_t Send (Int_t) override;  Send a single message opcode. ;  ; Int_t Send (Int_t, Int_t) override;  Send a status and a single message opcode. ;  ; Int_t SendObject (const TObject *, Int_t=kMESS_OBJECT) override;  Send an object. ;  ; Int_t SendRaw (const void *, Int_t, ESendRecvOptions=kDefault) override;  Send a raw buffer of specified length. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSocket;  TSocket (const char *host, const char *service, Int_t tcpwindowsize=-1);  Create a socket. ;  ;  TSocket (const char *host, Int_t port, Int_t tcpwindowsize=-1);  Create a socket; see CreateAuthSocket for the form of url. ;  ;  TSocket (const char *sockpath);  Create a socket in the Unix domain on 'sockpath'. ;  ;  TSocket (const TSocket &s);  TSocket copy ctor. ;  ;  TSocket (Int_t descriptor);  Create a socket. ;  ;  TSocket (Int_t descriptor, const char *sockpath);  Create ",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:2584,Integrability,message,message,2584,"InetAddress () override;  Return internet address of host to which the server socket is bound, i.e. ;  ; Int_t GetLocalPort () override;  Get port # to which server socket is bound. In case of error returns -1. ;  ; TClass * IsA () const override;  ; Int_t Recv (char *, Int_t) override;  Receive a character string message of maximum max length. ;  ; Int_t Recv (char *, Int_t, Int_t &) override;  Receive a character string message of maximum max length. ;  ; Int_t Recv (Int_t &, Int_t &) override;  Receives a status and a message type. ;  ; Int_t Recv (TMessage *&) override;  Receive a TMessage object. ;  ; Int_t RecvRaw (void *, Int_t, ESendRecvOptions=kDefault) override;  Receive a raw buffer of specified length bytes. ;  ; Int_t Send (const char *, Int_t=kMESS_STRING) override;  Send a character string buffer. ;  ; Int_t Send (const TMessage &) override;  Send a TMessage object. ;  ; Int_t Send (Int_t) override;  Send a single message opcode. ;  ; Int_t Send (Int_t, Int_t) override;  Send a status and a single message opcode. ;  ; Int_t SendObject (const TObject *, Int_t=kMESS_OBJECT) override;  Send an object. ;  ; Int_t SendRaw (const void *, Int_t, ESendRecvOptions=kDefault) override;  Send a raw buffer of specified length. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSocket;  TSocket (const char *host, const char *service, Int_t tcpwindowsize=-1);  Create a socket. ;  ;  TSocket (const char *host, Int_t port, Int_t tcpwindowsize=-1);  Create a socket; see CreateAuthSocket for the form of url. ;  ;  TSocket (const char *sockpath);  Create a socket in the Unix domain on 'sockpath'. ;  ;  TSocket (const TSocket &s);  TSocket copy ctor. ;  ;  TSocket (Int_t descriptor);  Create a socket. ;  ;  TSocket (Int_t descriptor, const char *sockpath);  Create a socket. ;  ;  TSocket (TInetAddress address, const char *service, Int_t t",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:8785,Integrability,message,message,8785,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:9326,Integrability,message,message,9326,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom ",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:10274,Integrability,message,message,10274,"*method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:13368,Integrability,message,message,13368,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TServerSocket; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Ve",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:13741,Integrability,message,message,13741," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TServerSocket; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static UChar_t GetAcceptOptions ();  Return default options for Accept. ;  ; static void SetAcceptOptions (UChar_t Opt);  Set default options for Accept according to modifier 'mod'. ;  ; static void ShowAcceptOptions ();  Print default options for Accept. ;  ;  Static Public Member Functions inherited fro",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:15483,Integrability,protocol,protocol,15483," static UChar_t GetAcceptOptions ();  Return default options for Accept. ;  ; static void SetAcceptOptions (UChar_t Opt);  Set default options for Accept according to modifier 'mod'. ;  ; static void ShowAcceptOptions ();  Print default options for Accept. ;  ;  Static Public Member Functions inherited from TSocket; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TSocket * CreateAuthSocket (const char *url, Int_t size=0, Int_t tcpwindowsize=-1, TSocket *s=nullptr, Int_t *err=nullptr);  Creates a socket or a parallel socket and authenticates to the remote server. ;  ; static TSocket * CreateAuthSocket (const char *user, const char *host, Int_t port, Int_t size=0, Int_t tcpwindowsize=-1, TSocket *s=nullptr, Int_t *err=nullptr);  Creates a socket or a parallel socket and authenticates to the remote server specified in 'url' on remote 'port' as 'user'. ;  ; static const char * DeclFileName ();  ; static Int_t GetClientProtocol ();  Static method returning supported client protocol. ;  ; static ULong64_t GetSocketBytesRecv ();  Get total number of bytes received via all sockets. ;  ; static ULong64_t GetSocketBytesSent ();  Get total number of bytes sent via all sockets. ;  ; static void NetError (const char *where, Int_t error);  Print error string depending on error code. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; sta",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:15765,Integrability,depend,depending,15765,"Socket; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TSocket * CreateAuthSocket (const char *url, Int_t size=0, Int_t tcpwindowsize=-1, TSocket *s=nullptr, Int_t *err=nullptr);  Creates a socket or a parallel socket and authenticates to the remote server. ;  ; static TSocket * CreateAuthSocket (const char *user, const char *host, Int_t port, Int_t size=0, Int_t tcpwindowsize=-1, TSocket *s=nullptr, Int_t *err=nullptr);  Creates a socket or a parallel socket and authenticates to the remote server specified in 'url' on remote 'port' as 'user'. ;  ; static const char * DeclFileName ();  ; static Int_t GetClientProtocol ();  Static method returning supported client protocol. ;  ; static ULong64_t GetSocketBytesRecv ();  Get total number of bytes received via all sockets. ;  ; static ULong64_t GetSocketBytesSent ();  Get total number of bytes sent via all sockets. ;  ; static void NetError (const char *where, Int_t error);  Print error string depending on error code. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TPServerSocket (const TPServerSocket &)=delete;  ; void operator= (const TPServerSocket &)=delete;  . Private Attributes; Int_t fTcpWindowSize;  . Additional Inherited Members;  Public Ty",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:18180,Integrability,message,message,18180,"Inconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TSocket; enum  ESocketErrors { kInvalid = -1; , kInvalidStillInList = -2; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSocket;  TSocket ();  ; Bool_t Authenticate (const char *user);  Authenticated the socket with specified user. ;  ; void MarkBrokenConnection ();  Close the socket and mark as due to a broken connection. ;  ; Bool_t RecvProcessIDs (TMessage *mess);  Receive a message containing process ids. ;  ; Bool_t RecvStreamerInfos (TMessage *mess);  Receive a message containing streamer infos. ;  ; void SendProcessIDs (const TMessage &mess);  Check if TProcessIDs must be sent. ;  ; void SendStreamerInfos (const TMessage &mess);  Check if TStreamerInfo must be sent. ;  ; void SetDescriptor (Int_t desc);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TSocket; TInetAddress fAddress;  ; TBits fBitsInfo;  ; UInt_t fBytesRecv;  ; UInt_t fBytesSent;  ; Int_t fCompress;  ; TTimeStamp fLastUsage;  ; TVirtualMutex * fLastUsageMtx;  ; TInetAddress fLocalAddress;  ; Int_t fRemoteProtocol;  ; TSecContext * fSecContext;  ; TString fService;  ; EServiceType fServType;  ; Int_t fSocket;  ; Int_t fTcpWindowSize;  ; TString fUrl;  ; TList * fUUIDs;  ;  Pro",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:18271,Integrability,message,message,18271," ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TSocket; enum  ESocketErrors { kInvalid = -1; , kInvalidStillInList = -2; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSocket;  TSocket ();  ; Bool_t Authenticate (const char *user);  Authenticated the socket with specified user. ;  ; void MarkBrokenConnection ();  Close the socket and mark as due to a broken connection. ;  ; Bool_t RecvProcessIDs (TMessage *mess);  Receive a message containing process ids. ;  ; Bool_t RecvStreamerInfos (TMessage *mess);  Receive a message containing streamer infos. ;  ; void SendProcessIDs (const TMessage &mess);  Check if TProcessIDs must be sent. ;  ; void SendStreamerInfos (const TMessage &mess);  Check if TStreamerInfo must be sent. ;  ; void SetDescriptor (Int_t desc);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TSocket; TInetAddress fAddress;  ; TBits fBitsInfo;  ; UInt_t fBytesRecv;  ; UInt_t fBytesSent;  ; Int_t fCompress;  ; TTimeStamp fLastUsage;  ; TVirtualMutex * fLastUsageMtx;  ; TInetAddress fLocalAddress;  ; Int_t fRemoteProtocol;  ; TSecContext * fSecContext;  ; TString fService;  ; EServiceType fServType;  ; Int_t fSocket;  ; Int_t fTcpWindowSize;  ; TString fUrl;  ; TList * fUUIDs;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Prote",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:1078,Modifiability,inherit,inherited,1078,"f all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TPServerSocket Class Reference. . Definition at line 31 of file TPServerSocket.h. Public Member Functions;  TPServerSocket (const char *service, Bool_t reuse=kFALSE, Int_t backlog=kDefaultBacklog, Int_t tcpwindowsize=-1);  Create a parallel server socket object for a named service. ;  ;  TPServerSocket (Int_t port, Bool_t reuse=kFALSE, Int_t backlog=kDefaultBacklog, Int_t tcpwindowsize=-1);  Create a parallel server socket object on a specified port. ;  ; virtual ~TPServerSocket ();  ; TPSocket * Accept (UChar_t Opt=kSrvNoAuth) override;  Accept a connection on a parallel server socket. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TServerSocket;  TServerSocket (const char *service, Bool_t reuse=kFALSE, Int_t backlog=kDefaultBacklog, Int_t tcpwindowsize=-1);  Create a server socket object for a named service. ;  ;  TServerSocket (Int_t port, Bool_t reuse=kFALSE, Int_t backlog=kDefaultBacklog, Int_t tcpwindowsize=-1);  Create a server socket object on a specified port. ;  ; virtual ~TServerSocket ();  Destructor: cleanup authentication stuff (if any) and close. ;  ; TInetAddress GetLocalInetAddress () override;  Return internet address of host to which the server socket is bound, i.e. ;  ; Int_t GetLocalPort () override;  Get port # to which server socket is bound. In case of error returns -1. ;  ; TClass * IsA () const override;  ; Int_t Recv (char *, Int_t) override;  Receive a character string message of maximum max length. ;  ; Int_t Recv (char *, Int_t, Int_t &) override;  Receive a character string message of maximum max length. ;  ; Int_t Recv (Int_t &, Int_t &) override;  Receives a status and a message type. ;  ; Int_t Recv (TMessage *&) o",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:2977,Modifiability,inherit,inherited,2977,"age of maximum max length. ;  ; Int_t Recv (Int_t &, Int_t &) override;  Receives a status and a message type. ;  ; Int_t Recv (TMessage *&) override;  Receive a TMessage object. ;  ; Int_t RecvRaw (void *, Int_t, ESendRecvOptions=kDefault) override;  Receive a raw buffer of specified length bytes. ;  ; Int_t Send (const char *, Int_t=kMESS_STRING) override;  Send a character string buffer. ;  ; Int_t Send (const TMessage &) override;  Send a TMessage object. ;  ; Int_t Send (Int_t) override;  Send a single message opcode. ;  ; Int_t Send (Int_t, Int_t) override;  Send a status and a single message opcode. ;  ; Int_t SendObject (const TObject *, Int_t=kMESS_OBJECT) override;  Send an object. ;  ; Int_t SendRaw (const void *, Int_t, ESendRecvOptions=kDefault) override;  Send a raw buffer of specified length. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSocket;  TSocket (const char *host, const char *service, Int_t tcpwindowsize=-1);  Create a socket. ;  ;  TSocket (const char *host, Int_t port, Int_t tcpwindowsize=-1);  Create a socket; see CreateAuthSocket for the form of url. ;  ;  TSocket (const char *sockpath);  Create a socket in the Unix domain on 'sockpath'. ;  ;  TSocket (const TSocket &s);  TSocket copy ctor. ;  ;  TSocket (Int_t descriptor);  Create a socket. ;  ;  TSocket (Int_t descriptor, const char *sockpath);  Create a socket. ;  ;  TSocket (TInetAddress address, const char *service, Int_t tcpwindowsize=-1);  Create a socket. ;  ;  TSocket (TInetAddress address, Int_t port, Int_t tcpwindowsize=-1);  Create a socket. ;  ; virtual ~TSocket ();  ; virtual void Close (Option_t *opt="""");  Close the socket. ;  ; UInt_t GetBytesRecv () const;  ; UInt_t GetBytesSent () const;  ; Int_t GetCompressionAlgorithm () const;  ; Int_t GetCompressionLevel () const;  ; Int_t GetCompressionSettings () const;  ; virtual Int_t GetDes",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:5694,Modifiability,inherit,inherited,5694,"for this socket to change status. ;  ; void SetCompressionAlgorithm (Int_t algorithm=ROOT::RCompressionSetting::EAlgorithm::kUseGlobal);  See comments for function SetCompressionSettings. ;  ; void SetCompressionLevel (Int_t level=ROOT::RCompressionSetting::ELevel::kUseMin);  See comments for function SetCompressionSettings. ;  ; void SetCompressionSettings (Int_t settings=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Used to specify the compression level and algorithm: settings = 100 * algorithm + level. ;  ; virtual Int_t SetOption (ESockOptions opt, Int_t val);  Set socket options. ;  ; void SetRemoteProtocol (Int_t rproto);  ; void SetSecContext (TSecContext *ctx);  ; void SetService (const char *service);  ; void SetServType (Int_t st);  ; void SetUrl (const char *url);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Touch ();  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and tit",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:7322,Modifiability,inherit,inherited,7322,"ual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:8415,Modifiability,inherit,inheritance,8415,"  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:10372,Modifiability,inherit,inherits,10372,"tual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:10489,Modifiability,inherit,inherits,10489,"indObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:14242,Modifiability,inherit,inherited,14242,"irtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TServerSocket; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static UChar_t GetAcceptOptions ();  Return default options for Accept. ;  ; static void SetAcceptOptions (UChar_t Opt);  Set default options for Accept according to modifier 'mod'. ;  ; static void ShowAcceptOptions ();  Print default options for Accept. ;  ;  Static Public Member Functions inherited from TSocket; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TSocket * CreateAuthSocket (const char *url, Int_t size=0, Int_t tcpwindowsize=-1, TSocket *s=nullptr, Int_t *err=nullptr);  Creates a socket or a parallel socket and authenticates to the remote server. ;  ; static TSocket * CreateAuthSocket (const char *user, const char *host, Int_t port, Int_t size=0, Int_t tcpwindowsize=-1, TSocket *s=nullptr, Int_t *err=nullptr);  Creates a socket or a p",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:14720,Modifiability,inherit,inherited,14720,"tory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TServerSocket; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static UChar_t GetAcceptOptions ();  Return default options for Accept. ;  ; static void SetAcceptOptions (UChar_t Opt);  Set default options for Accept according to modifier 'mod'. ;  ; static void ShowAcceptOptions ();  Print default options for Accept. ;  ;  Static Public Member Functions inherited from TSocket; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TSocket * CreateAuthSocket (const char *url, Int_t size=0, Int_t tcpwindowsize=-1, TSocket *s=nullptr, Int_t *err=nullptr);  Creates a socket or a parallel socket and authenticates to the remote server. ;  ; static TSocket * CreateAuthSocket (const char *user, const char *host, Int_t port, Int_t size=0, Int_t tcpwindowsize=-1, TSocket *s=nullptr, Int_t *err=nullptr);  Creates a socket or a parallel socket and authenticates to the remote server specified in 'url' on remote 'port' as 'user'. ;  ; static const char * DeclFileName ();  ; static Int_t GetClientProtocol ();  Static method returning supported client protocol. ;  ; static ULong64_t GetSocketBytesRecv ();  Get total number of bytes received via all sockets. ;  ; static ULong64_t GetSocketBytesSent ();  Get total number of bytes sent via all sockets. ;  ; static void NetError (const char *where, Int_t error);  Print error string depending on error code. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:15827,Modifiability,inherit,inherited,15827,"authenticates to the remote server. ;  ; static TSocket * CreateAuthSocket (const char *user, const char *host, Int_t port, Int_t size=0, Int_t tcpwindowsize=-1, TSocket *s=nullptr, Int_t *err=nullptr);  Creates a socket or a parallel socket and authenticates to the remote server specified in 'url' on remote 'port' as 'user'. ;  ; static const char * DeclFileName ();  ; static Int_t GetClientProtocol ();  Static method returning supported client protocol. ;  ; static ULong64_t GetSocketBytesRecv ();  Get total number of bytes received via all sockets. ;  ; static ULong64_t GetSocketBytesSent ();  Get total number of bytes sent via all sockets. ;  ; static void NetError (const char *where, Int_t error);  Print error string depending on error code. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TPServerSocket (const TPServerSocket &)=delete;  ; void operator= (const TPServerSocket &)=delete;  . Private Attributes; Int_t fTcpWindowSize;  . Additional Inherited Members;  Public Types inherited from TServerSocket; enum  { kDefaultBacklog = 10; };  ;  Public Types inherited from TSocket; enum  EInterest { kRead = 1; , kWrite = 2; };  ; enum  EServiceType { kSOCKD; , kROOTD; , kPROOFD; };  ; enum  EStatusBits { kIsUnix = (1ULL << ( 16 )); , kBrokenConn = (1ULL << ( 17 )); };",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:16037,Modifiability,inherit,inherited,16037,"authenticates to the remote server. ;  ; static TSocket * CreateAuthSocket (const char *user, const char *host, Int_t port, Int_t size=0, Int_t tcpwindowsize=-1, TSocket *s=nullptr, Int_t *err=nullptr);  Creates a socket or a parallel socket and authenticates to the remote server specified in 'url' on remote 'port' as 'user'. ;  ; static const char * DeclFileName ();  ; static Int_t GetClientProtocol ();  Static method returning supported client protocol. ;  ; static ULong64_t GetSocketBytesRecv ();  Get total number of bytes received via all sockets. ;  ; static ULong64_t GetSocketBytesSent ();  Get total number of bytes sent via all sockets. ;  ; static void NetError (const char *where, Int_t error);  Print error string depending on error code. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TPServerSocket (const TPServerSocket &)=delete;  ; void operator= (const TPServerSocket &)=delete;  . Private Attributes; Int_t fTcpWindowSize;  . Additional Inherited Members;  Public Types inherited from TServerSocket; enum  { kDefaultBacklog = 10; };  ;  Public Types inherited from TSocket; enum  EInterest { kRead = 1; , kWrite = 2; };  ; enum  EServiceType { kSOCKD; , kROOTD; , kPROOFD; };  ; enum  EStatusBits { kIsUnix = (1ULL << ( 16 )); , kBrokenConn = (1ULL << ( 17 )); };",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:16741,Modifiability,inherit,inherited,16741,");  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TPServerSocket (const TPServerSocket &)=delete;  ; void operator= (const TPServerSocket &)=delete;  . Private Attributes; Int_t fTcpWindowSize;  . Additional Inherited Members;  Public Types inherited from TServerSocket; enum  { kDefaultBacklog = 10; };  ;  Public Types inherited from TSocket; enum  EInterest { kRead = 1; , kWrite = 2; };  ; enum  EServiceType { kSOCKD; , kROOTD; , kPROOFD; };  ; enum  EStatusBits { kIsUnix = (1ULL << ( 16 )); , kBrokenConn = (1ULL << ( 17 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TSocket; enum  ESocketErrors { kInvalid = -1; , kInvalidStillInList = -2; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSocket;  TSocket ();  ; Bool_t Authenti",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:16821,Modifiability,inherit,inherited,16821,");  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TPServerSocket (const TPServerSocket &)=delete;  ; void operator= (const TPServerSocket &)=delete;  . Private Attributes; Int_t fTcpWindowSize;  . Additional Inherited Members;  Public Types inherited from TServerSocket; enum  { kDefaultBacklog = 10; };  ;  Public Types inherited from TSocket; enum  EInterest { kRead = 1; , kWrite = 2; };  ; enum  EServiceType { kSOCKD; , kROOTD; , kPROOFD; };  ; enum  EStatusBits { kIsUnix = (1ULL << ( 16 )); , kBrokenConn = (1ULL << ( 17 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TSocket; enum  ESocketErrors { kInvalid = -1; , kInvalidStillInList = -2; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSocket;  TSocket ();  ; Bool_t Authenti",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:17052,Modifiability,inherit,inherited,17052,");  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TPServerSocket (const TPServerSocket &)=delete;  ; void operator= (const TPServerSocket &)=delete;  . Private Attributes; Int_t fTcpWindowSize;  . Additional Inherited Members;  Public Types inherited from TServerSocket; enum  { kDefaultBacklog = 10; };  ;  Public Types inherited from TSocket; enum  EInterest { kRead = 1; , kWrite = 2; };  ; enum  EServiceType { kSOCKD; , kROOTD; , kPROOFD; };  ; enum  EStatusBits { kIsUnix = (1ULL << ( 16 )); , kBrokenConn = (1ULL << ( 17 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TSocket; enum  ESocketErrors { kInvalid = -1; , kInvalidStillInList = -2; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSocket;  TSocket ();  ; Bool_t Authenti",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:17693,Modifiability,inherit,inherited,17693,"  EInterest { kRead = 1; , kWrite = 2; };  ; enum  EServiceType { kSOCKD; , kROOTD; , kPROOFD; };  ; enum  EStatusBits { kIsUnix = (1ULL << ( 16 )); , kBrokenConn = (1ULL << ( 17 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TSocket; enum  ESocketErrors { kInvalid = -1; , kInvalidStillInList = -2; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSocket;  TSocket ();  ; Bool_t Authenticate (const char *user);  Authenticated the socket with specified user. ;  ; void MarkBrokenConnection ();  Close the socket and mark as due to a broken connection. ;  ; Bool_t RecvProcessIDs (TMessage *mess);  Receive a message containing process ids. ;  ; Bool_t RecvStreamerInfos (TMessage *mess);  Receive a message containing streamer infos. ;  ; void SendProcessIDs (const TMessage &mess);  Check if TProcessIDs must be sent. ;  ; void SendStreamerInfos (const TMessage &mess);  Check if TStreamerInfo must be sent. ;  ; void SetDescriptor (Int_t desc);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TSocket; TInetAddress fAddress;  ; TBits fBitsInfo;  ; UInt_t fBytesRecv;  ; UIn",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:17805,Modifiability,inherit,inherited,17805,"  EInterest { kRead = 1; , kWrite = 2; };  ; enum  EServiceType { kSOCKD; , kROOTD; , kPROOFD; };  ; enum  EStatusBits { kIsUnix = (1ULL << ( 16 )); , kBrokenConn = (1ULL << ( 17 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TSocket; enum  ESocketErrors { kInvalid = -1; , kInvalidStillInList = -2; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSocket;  TSocket ();  ; Bool_t Authenticate (const char *user);  Authenticated the socket with specified user. ;  ; void MarkBrokenConnection ();  Close the socket and mark as due to a broken connection. ;  ; Bool_t RecvProcessIDs (TMessage *mess);  Receive a message containing process ids. ;  ; Bool_t RecvStreamerInfos (TMessage *mess);  Receive a message containing streamer infos. ;  ; void SendProcessIDs (const TMessage &mess);  Check if TProcessIDs must be sent. ;  ; void SendStreamerInfos (const TMessage &mess);  Check if TStreamerInfo must be sent. ;  ; void SetDescriptor (Int_t desc);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TSocket; TInetAddress fAddress;  ; TBits fBitsInfo;  ; UInt_t fBytesRecv;  ; UIn",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:17904,Modifiability,inherit,inherited,17904,"  EInterest { kRead = 1; , kWrite = 2; };  ; enum  EServiceType { kSOCKD; , kROOTD; , kPROOFD; };  ; enum  EStatusBits { kIsUnix = (1ULL << ( 16 )); , kBrokenConn = (1ULL << ( 17 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TSocket; enum  ESocketErrors { kInvalid = -1; , kInvalidStillInList = -2; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSocket;  TSocket ();  ; Bool_t Authenticate (const char *user);  Authenticated the socket with specified user. ;  ; void MarkBrokenConnection ();  Close the socket and mark as due to a broken connection. ;  ; Bool_t RecvProcessIDs (TMessage *mess);  Receive a message containing process ids. ;  ; Bool_t RecvStreamerInfos (TMessage *mess);  Receive a message containing streamer infos. ;  ; void SendProcessIDs (const TMessage &mess);  Check if TProcessIDs must be sent. ;  ; void SendStreamerInfos (const TMessage &mess);  Check if TStreamerInfo must be sent. ;  ; void SetDescriptor (Int_t desc);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TSocket; TInetAddress fAddress;  ; TBits fBitsInfo;  ; UInt_t fBytesRecv;  ; UIn",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:18550,Modifiability,inherit,inherited,18550," )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TSocket; enum  ESocketErrors { kInvalid = -1; , kInvalidStillInList = -2; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSocket;  TSocket ();  ; Bool_t Authenticate (const char *user);  Authenticated the socket with specified user. ;  ; void MarkBrokenConnection ();  Close the socket and mark as due to a broken connection. ;  ; Bool_t RecvProcessIDs (TMessage *mess);  Receive a message containing process ids. ;  ; Bool_t RecvStreamerInfos (TMessage *mess);  Receive a message containing streamer infos. ;  ; void SendProcessIDs (const TMessage &mess);  Check if TProcessIDs must be sent. ;  ; void SendStreamerInfos (const TMessage &mess);  Check if TStreamerInfo must be sent. ;  ; void SetDescriptor (Int_t desc);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TSocket; TInetAddress fAddress;  ; TBits fBitsInfo;  ; UInt_t fBytesRecv;  ; UInt_t fBytesSent;  ; Int_t fCompress;  ; TTimeStamp fLastUsage;  ; TVirtualMutex * fLastUsageMtx;  ; TInetAddress fLocalAddress;  ; Int_t fRemoteProtocol;  ; TSecContext * fSecContext;  ; TString fService;  ; EServiceType fServType;  ; Int_t fSocket;  ; Int_t fTcpWindowSize;  ; TString fUrl;  ; TList * fUUIDs;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from TSocket; static ULong64_t fgBytesRecv = 0;  ; static ULong64_t fgBytesSent = 0;  ; static Int_t fgClientProtocol = 17;  . #include <TPServerSocket.h>. Inheritance diagram for TPServerSocket:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & D",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:18755,Modifiability,inherit,inherited,18755,"tion ();  Close the socket and mark as due to a broken connection. ;  ; Bool_t RecvProcessIDs (TMessage *mess);  Receive a message containing process ids. ;  ; Bool_t RecvStreamerInfos (TMessage *mess);  Receive a message containing streamer infos. ;  ; void SendProcessIDs (const TMessage &mess);  Check if TProcessIDs must be sent. ;  ; void SendStreamerInfos (const TMessage &mess);  Check if TStreamerInfo must be sent. ;  ; void SetDescriptor (Int_t desc);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TSocket; TInetAddress fAddress;  ; TBits fBitsInfo;  ; UInt_t fBytesRecv;  ; UInt_t fBytesSent;  ; Int_t fCompress;  ; TTimeStamp fLastUsage;  ; TVirtualMutex * fLastUsageMtx;  ; TInetAddress fLocalAddress;  ; Int_t fRemoteProtocol;  ; TSecContext * fSecContext;  ; TString fService;  ; EServiceType fServType;  ; Int_t fSocket;  ; Int_t fTcpWindowSize;  ; TString fUrl;  ; TList * fUUIDs;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from TSocket; static ULong64_t fgBytesRecv = 0;  ; static ULong64_t fgBytesSent = 0;  ; static Int_t fgClientProtocol = 17;  . #include <TPServerSocket.h>. Inheritance diagram for TPServerSocket:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TPServerSocket() [1/3]. TPServerSocket::TPServerSocket ; (; const TPServerSocket & ; ). privatedelete . ◆ TPServerSocket() [2/3]. TPServerSocket::TPServerSocket ; (; Int_t ; port, . Bool_t ; reuse = kFALSE, . Int_t ; backlog = kDefaultBacklog, . Int_t ; tcpwindowsize = -1 . ). Create a parallel server socket object on a specified port. ; Set reuse to true to force reuse of the server socket (i.e. do not wait for the time out to pass).",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:19185,Modifiability,inherit,inherited,19185,"tion ();  Close the socket and mark as due to a broken connection. ;  ; Bool_t RecvProcessIDs (TMessage *mess);  Receive a message containing process ids. ;  ; Bool_t RecvStreamerInfos (TMessage *mess);  Receive a message containing streamer infos. ;  ; void SendProcessIDs (const TMessage &mess);  Check if TProcessIDs must be sent. ;  ; void SendStreamerInfos (const TMessage &mess);  Check if TStreamerInfo must be sent. ;  ; void SetDescriptor (Int_t desc);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TSocket; TInetAddress fAddress;  ; TBits fBitsInfo;  ; UInt_t fBytesRecv;  ; UInt_t fBytesSent;  ; Int_t fCompress;  ; TTimeStamp fLastUsage;  ; TVirtualMutex * fLastUsageMtx;  ; TInetAddress fLocalAddress;  ; Int_t fRemoteProtocol;  ; TSecContext * fSecContext;  ; TString fService;  ; EServiceType fServType;  ; Int_t fSocket;  ; Int_t fTcpWindowSize;  ; TString fUrl;  ; TList * fUUIDs;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from TSocket; static ULong64_t fgBytesRecv = 0;  ; static ULong64_t fgBytesSent = 0;  ; static Int_t fgClientProtocol = 17;  . #include <TPServerSocket.h>. Inheritance diagram for TPServerSocket:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TPServerSocket() [1/3]. TPServerSocket::TPServerSocket ; (; const TPServerSocket & ; ). privatedelete . ◆ TPServerSocket() [2/3]. TPServerSocket::TPServerSocket ; (; Int_t ; port, . Bool_t ; reuse = kFALSE, . Int_t ; backlog = kDefaultBacklog, . Int_t ; tcpwindowsize = -1 . ). Create a parallel server socket object on a specified port. ; Set reuse to true to force reuse of the server socket (i.e. do not wait for the time out to pass).",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:19274,Modifiability,inherit,inherited,19274,"tion ();  Close the socket and mark as due to a broken connection. ;  ; Bool_t RecvProcessIDs (TMessage *mess);  Receive a message containing process ids. ;  ; Bool_t RecvStreamerInfos (TMessage *mess);  Receive a message containing streamer infos. ;  ; void SendProcessIDs (const TMessage &mess);  Check if TProcessIDs must be sent. ;  ; void SendStreamerInfos (const TMessage &mess);  Check if TStreamerInfo must be sent. ;  ; void SetDescriptor (Int_t desc);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TSocket; TInetAddress fAddress;  ; TBits fBitsInfo;  ; UInt_t fBytesRecv;  ; UInt_t fBytesSent;  ; Int_t fCompress;  ; TTimeStamp fLastUsage;  ; TVirtualMutex * fLastUsageMtx;  ; TInetAddress fLocalAddress;  ; Int_t fRemoteProtocol;  ; TSecContext * fSecContext;  ; TString fService;  ; EServiceType fServType;  ; Int_t fSocket;  ; Int_t fTcpWindowSize;  ; TString fUrl;  ; TList * fUUIDs;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from TSocket; static ULong64_t fgBytesRecv = 0;  ; static ULong64_t fgBytesSent = 0;  ; static Int_t fgClientProtocol = 17;  . #include <TPServerSocket.h>. Inheritance diagram for TPServerSocket:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TPServerSocket() [1/3]. TPServerSocket::TPServerSocket ; (; const TPServerSocket & ; ). privatedelete . ◆ TPServerSocket() [2/3]. TPServerSocket::TPServerSocket ; (; Int_t ; port, . Bool_t ; reuse = kFALSE, . Int_t ; backlog = kDefaultBacklog, . Int_t ; tcpwindowsize = -1 . ). Create a parallel server socket object on a specified port. ; Set reuse to true to force reuse of the server socket (i.e. do not wait for the time out to pass).",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:20098,Performance,queue,queue,20098,"t;  ; Int_t fTcpWindowSize;  ; TString fUrl;  ; TList * fUUIDs;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from TSocket; static ULong64_t fgBytesRecv = 0;  ; static ULong64_t fgBytesSent = 0;  ; static Int_t fgClientProtocol = 17;  . #include <TPServerSocket.h>. Inheritance diagram for TPServerSocket:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TPServerSocket() [1/3]. TPServerSocket::TPServerSocket ; (; const TPServerSocket & ; ). privatedelete . ◆ TPServerSocket() [2/3]. TPServerSocket::TPServerSocket ; (; Int_t ; port, . Bool_t ; reuse = kFALSE, . Int_t ; backlog = kDefaultBacklog, . Int_t ; tcpwindowsize = -1 . ). Create a parallel server socket object on a specified port. ; Set reuse to true to force reuse of the server socket (i.e. do not wait for the time out to pass). Using backlog one can set the desirable queue length for pending connections. Use tcpwindowsize to specify the size of the receive buffer, it has to be specified here to make sure the window scale option is set (for tcpwindowsize > 65KB and for platforms supporting window scaling). Use IsValid() to check the validity of the server socket. In case server socket is not valid use GetErrorCode() to obtain the specific error value. These values are: 0 = no error (socket is valid) -1 = low level socket() call failed -2 = low level bind() call failed -3 = low level listen() call failed Every valid server socket is added to the TROOT sockets list which will make sure that any open sockets are properly closed on program termination. ; Definition at line 49 of file TPServerSocket.cxx. ◆ TPServerSocket() [3/3]. TPServerSocket::TPServerSocket ; (; const char * ; service, . Bool_t ; reuse = kFALSE, . Int_t ; backlog = kDefaultBacklog, . Int_t ; tcpwindowsize = -1 . ). Create a parallel server socket object for a named service. ; Set re",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:21229,Performance,queue,queue,21229," make sure the window scale option is set (for tcpwindowsize > 65KB and for platforms supporting window scaling). Use IsValid() to check the validity of the server socket. In case server socket is not valid use GetErrorCode() to obtain the specific error value. These values are: 0 = no error (socket is valid) -1 = low level socket() call failed -2 = low level bind() call failed -3 = low level listen() call failed Every valid server socket is added to the TROOT sockets list which will make sure that any open sockets are properly closed on program termination. ; Definition at line 49 of file TPServerSocket.cxx. ◆ TPServerSocket() [3/3]. TPServerSocket::TPServerSocket ; (; const char * ; service, . Bool_t ; reuse = kFALSE, . Int_t ; backlog = kDefaultBacklog, . Int_t ; tcpwindowsize = -1 . ). Create a parallel server socket object for a named service. ; Set reuse to true to force reuse of the server socket (i.e. do not wait for the time out to pass). Using backlog one can set the desirable queue length for pending connections. Use tcpwindowsize to specify the size of the receive buffer, it has to be specified here to make sure the window scale option is set (for tcpwindowsize > 65KB and for platforms supporting window scaling). Use IsValid() to check the validity of the server socket. In case server socket is not valid use GetErrorCode() to obtain the specific error value. These values are: 0 = no error (socket is valid) -1 = low level socket() call failed -2 = low level bind() call failed -3 = low level listen() call failed Every valid server socket is added to the TROOT sockets list which will make sure that any open sockets are properly closed on program termination. ; Definition at line 76 of file TPServerSocket.cxx. ◆ ~TPServerSocket(). virtual TPServerSocket::~TPServerSocket ; (; ). inlinevirtual . Definition at line 47 of file TPServerSocket.h. Member Function Documentation. ◆ Accept(). TPSocket * TPServerSocket::Accept ; (; UChar_t ; Opt = kSrvNoAuth). override",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:22395,Performance,queue,queue,22395,"r platforms supporting window scaling). Use IsValid() to check the validity of the server socket. In case server socket is not valid use GetErrorCode() to obtain the specific error value. These values are: 0 = no error (socket is valid) -1 = low level socket() call failed -2 = low level bind() call failed -3 = low level listen() call failed Every valid server socket is added to the TROOT sockets list which will make sure that any open sockets are properly closed on program termination. ; Definition at line 76 of file TPServerSocket.cxx. ◆ ~TPServerSocket(). virtual TPServerSocket::~TPServerSocket ; (; ). inlinevirtual . Definition at line 47 of file TPServerSocket.h. Member Function Documentation. ◆ Accept(). TPSocket * TPServerSocket::Accept ; (; UChar_t ; Opt = kSrvNoAuth). overridevirtual . Accept a connection on a parallel server socket. ; Returns a full-duplex parallel communication TPSocket object. If no pending connections are present on the queue and nonblocking mode has not been enabled with SetOption(kNoBlock,1) the call blocks until a connection is present. The returned socket must be deleted by the user. The socket is also added to the TROOT sockets list which will make sure that any open sockets are properly closed on program termination. In case of error 0 is returned and in case non-blocking I/O is enabled and no connections are available -1 is returned. ; Reimplemented from TServerSocket.; Definition at line 95 of file TPServerSocket.cxx. ◆ Class(). static TClass * TPServerSocket::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TPServerSocket::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TPServerSocket::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 51 of file TPServerSocket.h. ◆ DeclFileName(). static const char * TPServerSocket::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containin",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:4685,Safety,timeout,timeout,4685,"t. ;  ;  TSocket (TInetAddress address, const char *service, Int_t tcpwindowsize=-1);  Create a socket. ;  ;  TSocket (TInetAddress address, Int_t port, Int_t tcpwindowsize=-1);  Create a socket. ;  ; virtual ~TSocket ();  ; virtual void Close (Option_t *opt="""");  Close the socket. ;  ; UInt_t GetBytesRecv () const;  ; UInt_t GetBytesSent () const;  ; Int_t GetCompressionAlgorithm () const;  ; Int_t GetCompressionLevel () const;  ; Int_t GetCompressionSettings () const;  ; virtual Int_t GetDescriptor () const;  ; Int_t GetErrorCode () const;  Returns error code. ;  ; TInetAddress GetInetAddress () const;  ; TTimeStamp GetLastUsage ();  ; virtual Int_t GetOption (ESockOptions opt, Int_t &val);  Get socket options. Returns -1 in case of error. ;  ; Int_t GetPort () const;  ; Int_t GetRemoteProtocol () const;  ; TSecContext * GetSecContext () const;  ; const char * GetService () const;  ; Int_t GetServType () const;  ; Int_t GetTcpWindowSize () const;  ; const char * GetUrl () const;  ; TClass * IsA () const override;  ; virtual Bool_t IsAuthenticated () const;  ; virtual Bool_t IsValid () const;  ; virtual Int_t Reconnect ();  ; virtual Int_t Select (Int_t interest=kRead, Long_t timeout=-1);  Waits for this socket to change status. ;  ; void SetCompressionAlgorithm (Int_t algorithm=ROOT::RCompressionSetting::EAlgorithm::kUseGlobal);  See comments for function SetCompressionSettings. ;  ; void SetCompressionLevel (Int_t level=ROOT::RCompressionSetting::ELevel::kUseMin);  See comments for function SetCompressionSettings. ;  ; void SetCompressionSettings (Int_t settings=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Used to specify the compression level and algorithm: settings = 100 * algorithm + level. ;  ; virtual Int_t SetOption (ESockOptions opt, Int_t val);  Set socket options. ;  ; void SetRemoteProtocol (Int_t rproto);  ; void SetSecContext (TSecContext *ctx);  ; void SetService (const char *service);  ; void SetServType (Int_t st);  ; void SetUrl (c",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:1489,Security,authenticat,authentication,1489,"pwindowsize=-1);  Create a parallel server socket object for a named service. ;  ;  TPServerSocket (Int_t port, Bool_t reuse=kFALSE, Int_t backlog=kDefaultBacklog, Int_t tcpwindowsize=-1);  Create a parallel server socket object on a specified port. ;  ; virtual ~TPServerSocket ();  ; TPSocket * Accept (UChar_t Opt=kSrvNoAuth) override;  Accept a connection on a parallel server socket. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TServerSocket;  TServerSocket (const char *service, Bool_t reuse=kFALSE, Int_t backlog=kDefaultBacklog, Int_t tcpwindowsize=-1);  Create a server socket object for a named service. ;  ;  TServerSocket (Int_t port, Bool_t reuse=kFALSE, Int_t backlog=kDefaultBacklog, Int_t tcpwindowsize=-1);  Create a server socket object on a specified port. ;  ; virtual ~TServerSocket ();  Destructor: cleanup authentication stuff (if any) and close. ;  ; TInetAddress GetLocalInetAddress () override;  Return internet address of host to which the server socket is bound, i.e. ;  ; Int_t GetLocalPort () override;  Get port # to which server socket is bound. In case of error returns -1. ;  ; TClass * IsA () const override;  ; Int_t Recv (char *, Int_t) override;  Receive a character string message of maximum max length. ;  ; Int_t Recv (char *, Int_t, Int_t &) override;  Receive a character string message of maximum max length. ;  ; Int_t Recv (Int_t &, Int_t &) override;  Receives a status and a message type. ;  ; Int_t Recv (TMessage *&) override;  Receive a TMessage object. ;  ; Int_t RecvRaw (void *, Int_t, ESendRecvOptions=kDefault) override;  Receive a raw buffer of specified length bytes. ;  ; Int_t Send (const char *, Int_t=kMESS_STRING) override;  Send a character string buffer. ;  ; Int_t Send (const TMessage &) override;  Send a TMessage object. ;  ; Int_t Send (Int_t) override",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:6562,Security,hash,hash,6562," an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Touch ();  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this met",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:15033,Security,authenticat,authenticates,15033,"tory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TServerSocket; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static UChar_t GetAcceptOptions ();  Return default options for Accept. ;  ; static void SetAcceptOptions (UChar_t Opt);  Set default options for Accept according to modifier 'mod'. ;  ; static void ShowAcceptOptions ();  Print default options for Accept. ;  ;  Static Public Member Functions inherited from TSocket; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TSocket * CreateAuthSocket (const char *url, Int_t size=0, Int_t tcpwindowsize=-1, TSocket *s=nullptr, Int_t *err=nullptr);  Creates a socket or a parallel socket and authenticates to the remote server. ;  ; static TSocket * CreateAuthSocket (const char *user, const char *host, Int_t port, Int_t size=0, Int_t tcpwindowsize=-1, TSocket *s=nullptr, Int_t *err=nullptr);  Creates a socket or a parallel socket and authenticates to the remote server specified in 'url' on remote 'port' as 'user'. ;  ; static const char * DeclFileName ();  ; static Int_t GetClientProtocol ();  Static method returning supported client protocol. ;  ; static ULong64_t GetSocketBytesRecv ();  Get total number of bytes received via all sockets. ;  ; static ULong64_t GetSocketBytesSent ();  Get total number of bytes sent via all sockets. ;  ; static void NetError (const char *where, Int_t error);  Print error string depending on error code. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPServerSocket.html:15279,Security,authenticat,authenticates,15279,"tic Public Member Functions inherited from TServerSocket; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static UChar_t GetAcceptOptions ();  Return default options for Accept. ;  ; static void SetAcceptOptions (UChar_t Opt);  Set default options for Accept according to modifier 'mod'. ;  ; static void ShowAcceptOptions ();  Print default options for Accept. ;  ;  Static Public Member Functions inherited from TSocket; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TSocket * CreateAuthSocket (const char *url, Int_t size=0, Int_t tcpwindowsize=-1, TSocket *s=nullptr, Int_t *err=nullptr);  Creates a socket or a parallel socket and authenticates to the remote server. ;  ; static TSocket * CreateAuthSocket (const char *user, const char *host, Int_t port, Int_t size=0, Int_t tcpwindowsize=-1, TSocket *s=nullptr, Int_t *err=nullptr);  Creates a socket or a parallel socket and authenticates to the remote server specified in 'url' on remote 'port' as 'user'. ;  ; static const char * DeclFileName ();  ; static Int_t GetClientProtocol ();  Static method returning supported client protocol. ;  ; static ULong64_t GetSocketBytesRecv ();  Get total number of bytes received via all sockets. ;  ; static ULong64_t GetSocketBytesSent ();  Get total number of bytes sent via all sockets. ;  ; static void NetError (const char *where, Int_t error);  Print error string depending on error code. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ",MatchSource.WIKI,doc/master/classTPServerSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html
https://root.cern/doc/master/classTPSocket.html:1229,Availability,error,error,1229,"r Functions |; Private Attributes |; Friends |; List of all members ; TPSocket Class Reference. . Definition at line 33 of file TPSocket.h. Public Member Functions;  TPSocket (const char *host, const char *service, Int_t size, Int_t tcpwindowsize=-1);  Create a parallel socket. ;  ;  TPSocket (const char *host, Int_t port, Int_t size, Int_t tcpwindowsize=-1);  Create a parallel socket. ;  ;  TPSocket (const char *host, Int_t port, Int_t size, TSocket *sock);  Create a parallel socket on a connection already opened via TSocket sock. ;  ;  TPSocket (TInetAddress address, const char *service, Int_t size, Int_t tcpwindowsize=-1);  Create a parallel socket. ;  ;  TPSocket (TInetAddress address, Int_t port, Int_t size, Int_t tcpwindowsize=-1);  Create a parallel socket. ;  ; virtual ~TPSocket ();  Cleanup the parallel socket. ;  ; void Close (Option_t *opt="""") override;  Close a parallel socket. ;  ; Int_t GetDescriptor () const override;  Return socket descriptor. ;  ; Int_t GetErrorCode () const;  Returns error code. ;  ; TInetAddress GetLocalInetAddress () override;  Return internet address of local host to which the socket is bound. ;  ; Int_t GetOption (ESockOptions opt, Int_t &val) override;  Get socket options. Returns -1 in case of error. ;  ; Int_t GetSize () const;  ; TClass * IsA () const override;  ; Bool_t IsValid () const override;  ; Int_t Recv (char *mess, Int_t max) override;  Receive a character string message of maximum max length. ;  ; Int_t Recv (char *mess, Int_t max, Int_t &kind) override;  Receive a character string message of maximum max length. ;  ; Int_t Recv (Int_t &status, Int_t &kind) override;  Receives a status and a message type. ;  ; Int_t Recv (TMessage *&mess) override;  Receive a TMessage object. ;  ; Int_t RecvRaw (void *buffer, Int_t length, ESendRecvOptions opt=kDefault) override;  Send a raw buffer of specified length. ;  ; Int_t Send (const char *mess, Int_t kind=kMESS_STRING) override;  Send a character string buffer. ;  ; Int_t S",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:1466,Availability,error,error,1466,"e=-1);  Create a parallel socket. ;  ;  TPSocket (const char *host, Int_t port, Int_t size, Int_t tcpwindowsize=-1);  Create a parallel socket. ;  ;  TPSocket (const char *host, Int_t port, Int_t size, TSocket *sock);  Create a parallel socket on a connection already opened via TSocket sock. ;  ;  TPSocket (TInetAddress address, const char *service, Int_t size, Int_t tcpwindowsize=-1);  Create a parallel socket. ;  ;  TPSocket (TInetAddress address, Int_t port, Int_t size, Int_t tcpwindowsize=-1);  Create a parallel socket. ;  ; virtual ~TPSocket ();  Cleanup the parallel socket. ;  ; void Close (Option_t *opt="""") override;  Close a parallel socket. ;  ; Int_t GetDescriptor () const override;  Return socket descriptor. ;  ; Int_t GetErrorCode () const;  Returns error code. ;  ; TInetAddress GetLocalInetAddress () override;  Return internet address of local host to which the socket is bound. ;  ; Int_t GetOption (ESockOptions opt, Int_t &val) override;  Get socket options. Returns -1 in case of error. ;  ; Int_t GetSize () const;  ; TClass * IsA () const override;  ; Bool_t IsValid () const override;  ; Int_t Recv (char *mess, Int_t max) override;  Receive a character string message of maximum max length. ;  ; Int_t Recv (char *mess, Int_t max, Int_t &kind) override;  Receive a character string message of maximum max length. ;  ; Int_t Recv (Int_t &status, Int_t &kind) override;  Receives a status and a message type. ;  ; Int_t Recv (TMessage *&mess) override;  Receive a TMessage object. ;  ; Int_t RecvRaw (void *buffer, Int_t length, ESendRecvOptions opt=kDefault) override;  Send a raw buffer of specified length. ;  ; Int_t Send (const char *mess, Int_t kind=kMESS_STRING) override;  Send a character string buffer. ;  ; Int_t Send (const TMessage &mess) override;  Send a TMessage object. ;  ; Int_t Send (Int_t kind) override;  Send a single message opcode. ;  ; Int_t Send (Int_t status, Int_t kind) override;  Send a status and a single message opcode. ;  ; Int_t SendR",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:3796,Availability,error,error,3796,"eamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSocket;  TSocket (const char *host, const char *service, Int_t tcpwindowsize=-1);  Create a socket. ;  ;  TSocket (const char *host, Int_t port, Int_t tcpwindowsize=-1);  Create a socket; see CreateAuthSocket for the form of url. ;  ;  TSocket (const char *sockpath);  Create a socket in the Unix domain on 'sockpath'. ;  ;  TSocket (const TSocket &s);  TSocket copy ctor. ;  ;  TSocket (Int_t descriptor);  Create a socket. ;  ;  TSocket (Int_t descriptor, const char *sockpath);  Create a socket. ;  ;  TSocket (TInetAddress address, const char *service, Int_t tcpwindowsize=-1);  Create a socket. ;  ;  TSocket (TInetAddress address, Int_t port, Int_t tcpwindowsize=-1);  Create a socket. ;  ; virtual ~TSocket ();  ; UInt_t GetBytesRecv () const;  ; UInt_t GetBytesSent () const;  ; Int_t GetCompressionAlgorithm () const;  ; Int_t GetCompressionLevel () const;  ; Int_t GetCompressionSettings () const;  ; Int_t GetErrorCode () const;  Returns error code. ;  ; TInetAddress GetInetAddress () const;  ; TTimeStamp GetLastUsage ();  ; virtual Int_t GetLocalPort ();  Return the local port # to which the socket is bound. ;  ; Int_t GetPort () const;  ; Int_t GetRemoteProtocol () const;  ; TSecContext * GetSecContext () const;  ; const char * GetService () const;  ; Int_t GetServType () const;  ; Int_t GetTcpWindowSize () const;  ; const char * GetUrl () const;  ; TClass * IsA () const override;  ; virtual Bool_t IsAuthenticated () const;  ; virtual Int_t Reconnect ();  ; virtual Int_t Select (Int_t interest=kRead, Long_t timeout=-1);  Waits for this socket to change status. ;  ; virtual Int_t SendObject (const TObject *obj, Int_t kind=kMESS_OBJECT);  Send an object. ;  ; void SetCompressionAlgorithm (Int_t algorithm=ROOT::RCompressionSetting::EAlgorithm::kUseGlobal);  See comments for function SetCompressionSe",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:8486,Availability,error,error,8486,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:8575,Availability,error,error,8575,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:8730,Availability,error,error,8730,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:9027,Availability,error,error,9027,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom ",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:13069,Availability,error,error,13069,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSocket; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:14966,Availability,error,error,14966,"Socket; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TSocket * CreateAuthSocket (const char *url, Int_t size=0, Int_t tcpwindowsize=-1, TSocket *s=nullptr, Int_t *err=nullptr);  Creates a socket or a parallel socket and authenticates to the remote server. ;  ; static TSocket * CreateAuthSocket (const char *user, const char *host, Int_t port, Int_t size=0, Int_t tcpwindowsize=-1, TSocket *s=nullptr, Int_t *err=nullptr);  Creates a socket or a parallel socket and authenticates to the remote server specified in 'url' on remote 'port' as 'user'. ;  ; static const char * DeclFileName ();  ; static Int_t GetClientProtocol ();  Static method returning supported client protocol. ;  ; static ULong64_t GetSocketBytesRecv ();  Get total number of bytes received via all sockets. ;  ; static ULong64_t GetSocketBytesSent ();  Get total number of bytes sent via all sockets. ;  ; static void NetError (const char *where, Int_t error);  Print error string depending on error code. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TPSocket (const TPSocket &)=delete;  ;  TPSocket (TSocket *pSockets[], Int_t size);  Create a parallel socket. This ctor is called by TPServerSocket. ;  ; Option_t * GetOption () const ov",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:14981,Availability,error,error,14981,"Socket; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TSocket * CreateAuthSocket (const char *url, Int_t size=0, Int_t tcpwindowsize=-1, TSocket *s=nullptr, Int_t *err=nullptr);  Creates a socket or a parallel socket and authenticates to the remote server. ;  ; static TSocket * CreateAuthSocket (const char *user, const char *host, Int_t port, Int_t size=0, Int_t tcpwindowsize=-1, TSocket *s=nullptr, Int_t *err=nullptr);  Creates a socket or a parallel socket and authenticates to the remote server specified in 'url' on remote 'port' as 'user'. ;  ; static const char * DeclFileName ();  ; static Int_t GetClientProtocol ();  Static method returning supported client protocol. ;  ; static ULong64_t GetSocketBytesRecv ();  Get total number of bytes received via all sockets. ;  ; static ULong64_t GetSocketBytesSent ();  Get total number of bytes sent via all sockets. ;  ; static void NetError (const char *where, Int_t error);  Print error string depending on error code. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TPSocket (const TPSocket &)=delete;  ;  TPSocket (TSocket *pSockets[], Int_t size);  Create a parallel socket. This ctor is called by TPServerSocket. ;  ; Option_t * GetOption () const ov",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:15007,Availability,error,error,15007,"Socket; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TSocket * CreateAuthSocket (const char *url, Int_t size=0, Int_t tcpwindowsize=-1, TSocket *s=nullptr, Int_t *err=nullptr);  Creates a socket or a parallel socket and authenticates to the remote server. ;  ; static TSocket * CreateAuthSocket (const char *user, const char *host, Int_t port, Int_t size=0, Int_t tcpwindowsize=-1, TSocket *s=nullptr, Int_t *err=nullptr);  Creates a socket or a parallel socket and authenticates to the remote server specified in 'url' on remote 'port' as 'user'. ;  ; static const char * DeclFileName ();  ; static Int_t GetClientProtocol ();  Static method returning supported client protocol. ;  ; static ULong64_t GetSocketBytesRecv ();  Get total number of bytes received via all sockets. ;  ; static ULong64_t GetSocketBytesSent ();  Get total number of bytes sent via all sockets. ;  ; static void NetError (const char *where, Int_t error);  Print error string depending on error code. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TPSocket (const TPSocket &)=delete;  ;  TPSocket (TSocket *pSockets[], Int_t size);  Create a parallel socket. This ctor is called by TPServerSocket. ;  ; Option_t * GetOption () const ov",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:23680,Availability,down,down,23680,"ted via a call to TNetXNGFile. Returns when connection has been accepted by remote side. Use IsValid() to check the validity of the socket. Every socket is added to the TROOT sockets list which will make sure that any open sockets are properly closed on program termination. ; Definition at line 171 of file TPSocket.cxx. ◆ ~TPSocket(). TPSocket::~TPSocket ; (; ). virtual . Cleanup the parallel socket. ; Definition at line 308 of file TPSocket.cxx. Member Function Documentation. ◆ Class(). static TClass * TPSocket::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TPSocket::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TPSocket::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 85 of file TPSocket.h. ◆ Close(). void TPSocket::Close ; (; Option_t * ; option = """"). overridevirtual . Close a parallel socket. ; If option is ""force"", calls shutdown(id,2) to shut down the connection. This will close the connection also for the parent of this process. Also called via the dtor (without option ""force"", call explicitly Close(""force"") if this is desired). ; Reimplemented from TSocket.; Definition at line 326 of file TPSocket.cxx. ◆ DeclFileName(). static const char * TPSocket::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 85 of file TPSocket.h. ◆ GetDescriptor(). Int_t TPSocket::GetDescriptor ; (; ); const. overridevirtual . Return socket descriptor. ; Reimplemented from TSocket.; Definition at line 467 of file TPSocket.cxx. ◆ GetErrorCode(). Int_t TPSocket::GetErrorCode ; (; ); const. Returns error code. ; Meaning depends on context where it is called. If no error condition returns 0 else a value < 0. ; Definition at line 783 of file TPSocket.cxx. ◆ GetLocalInetAddress(). TInetAddress TPSocket::GetLocalInetAddress ; (; ). overridevirtual . Return internet address o",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:24386,Availability,error,error,24386,"n_t TPSocket::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 85 of file TPSocket.h. ◆ Close(). void TPSocket::Close ; (; Option_t * ; option = """"). overridevirtual . Close a parallel socket. ; If option is ""force"", calls shutdown(id,2) to shut down the connection. This will close the connection also for the parent of this process. Also called via the dtor (without option ""force"", call explicitly Close(""force"") if this is desired). ; Reimplemented from TSocket.; Definition at line 326 of file TPSocket.cxx. ◆ DeclFileName(). static const char * TPSocket::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 85 of file TPSocket.h. ◆ GetDescriptor(). Int_t TPSocket::GetDescriptor ; (; ); const. overridevirtual . Return socket descriptor. ; Reimplemented from TSocket.; Definition at line 467 of file TPSocket.cxx. ◆ GetErrorCode(). Int_t TPSocket::GetErrorCode ; (; ); const. Returns error code. ; Meaning depends on context where it is called. If no error condition returns 0 else a value < 0. ; Definition at line 783 of file TPSocket.cxx. ◆ GetLocalInetAddress(). TInetAddress TPSocket::GetLocalInetAddress ; (; ). overridevirtual . Return internet address of local host to which the socket is bound. ; In case of error TInetAddress::IsValid() returns kFALSE. ; Reimplemented from TSocket.; Definition at line 451 of file TPSocket.cxx. ◆ GetOption() [1/2]. Option_t * TPSocket::GetOption ; (; ); const. inlineoverrideprivatevirtual . Reimplemented from TObject.; Definition at line 51 of file TPSocket.h. ◆ GetOption() [2/2]. Int_t TPSocket::GetOption ; (; ESockOptions ; opt, . Int_t & ; val . ). overridevirtual . Get socket options. Returns -1 in case of error. ; Reimplemented from TSocket.; Definition at line 768 of file TPSocket.cxx. ◆ GetSize(). Int_t TPSocket::GetSize ; (; ); const. inline . Definition at line 83 of file TPSocket.h. ◆ Init(). void TPSocket::Init ; (; Int",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:24453,Availability,error,error,24453,"lass ; Definition at line 85 of file TPSocket.h. ◆ Close(). void TPSocket::Close ; (; Option_t * ; option = """"). overridevirtual . Close a parallel socket. ; If option is ""force"", calls shutdown(id,2) to shut down the connection. This will close the connection also for the parent of this process. Also called via the dtor (without option ""force"", call explicitly Close(""force"") if this is desired). ; Reimplemented from TSocket.; Definition at line 326 of file TPSocket.cxx. ◆ DeclFileName(). static const char * TPSocket::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 85 of file TPSocket.h. ◆ GetDescriptor(). Int_t TPSocket::GetDescriptor ; (; ); const. overridevirtual . Return socket descriptor. ; Reimplemented from TSocket.; Definition at line 467 of file TPSocket.cxx. ◆ GetErrorCode(). Int_t TPSocket::GetErrorCode ; (; ); const. Returns error code. ; Meaning depends on context where it is called. If no error condition returns 0 else a value < 0. ; Definition at line 783 of file TPSocket.cxx. ◆ GetLocalInetAddress(). TInetAddress TPSocket::GetLocalInetAddress ; (; ). overridevirtual . Return internet address of local host to which the socket is bound. ; In case of error TInetAddress::IsValid() returns kFALSE. ; Reimplemented from TSocket.; Definition at line 451 of file TPSocket.cxx. ◆ GetOption() [1/2]. Option_t * TPSocket::GetOption ; (; ); const. inlineoverrideprivatevirtual . Reimplemented from TObject.; Definition at line 51 of file TPSocket.h. ◆ GetOption() [2/2]. Int_t TPSocket::GetOption ; (; ESockOptions ; opt, . Int_t & ; val . ). overridevirtual . Get socket options. Returns -1 in case of error. ; Reimplemented from TSocket.; Definition at line 768 of file TPSocket.cxx. ◆ GetSize(). Int_t TPSocket::GetSize ; (; ); const. inline . Definition at line 83 of file TPSocket.h. ◆ Init(). void TPSocket::Init ; (; Int_t ; tcpwindowsize, . TSocket * ; sock = nullptr . ). private . Create a parallel so",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:24719,Availability,error,error,24719,"so for the parent of this process. Also called via the dtor (without option ""force"", call explicitly Close(""force"") if this is desired). ; Reimplemented from TSocket.; Definition at line 326 of file TPSocket.cxx. ◆ DeclFileName(). static const char * TPSocket::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 85 of file TPSocket.h. ◆ GetDescriptor(). Int_t TPSocket::GetDescriptor ; (; ); const. overridevirtual . Return socket descriptor. ; Reimplemented from TSocket.; Definition at line 467 of file TPSocket.cxx. ◆ GetErrorCode(). Int_t TPSocket::GetErrorCode ; (; ); const. Returns error code. ; Meaning depends on context where it is called. If no error condition returns 0 else a value < 0. ; Definition at line 783 of file TPSocket.cxx. ◆ GetLocalInetAddress(). TInetAddress TPSocket::GetLocalInetAddress ; (; ). overridevirtual . Return internet address of local host to which the socket is bound. ; In case of error TInetAddress::IsValid() returns kFALSE. ; Reimplemented from TSocket.; Definition at line 451 of file TPSocket.cxx. ◆ GetOption() [1/2]. Option_t * TPSocket::GetOption ; (; ); const. inlineoverrideprivatevirtual . Reimplemented from TObject.; Definition at line 51 of file TPSocket.h. ◆ GetOption() [2/2]. Int_t TPSocket::GetOption ; (; ESockOptions ; opt, . Int_t & ; val . ). overridevirtual . Get socket options. Returns -1 in case of error. ; Reimplemented from TSocket.; Definition at line 768 of file TPSocket.cxx. ◆ GetSize(). Int_t TPSocket::GetSize ; (; ); const. inline . Definition at line 83 of file TPSocket.h. ◆ Init(). void TPSocket::Init ; (; Int_t ; tcpwindowsize, . TSocket * ; sock = nullptr . ). private . Create a parallel socket to the specified host. ; Definition at line 356 of file TPSocket.cxx. ◆ IsA(). TClass * TPSocket::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TNamed.; Definition at line 85 of file TPSocket.h. ◆ IsVa",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:25163,Availability,error,error,25163,"_t TPSocket::GetDescriptor ; (; ); const. overridevirtual . Return socket descriptor. ; Reimplemented from TSocket.; Definition at line 467 of file TPSocket.cxx. ◆ GetErrorCode(). Int_t TPSocket::GetErrorCode ; (; ); const. Returns error code. ; Meaning depends on context where it is called. If no error condition returns 0 else a value < 0. ; Definition at line 783 of file TPSocket.cxx. ◆ GetLocalInetAddress(). TInetAddress TPSocket::GetLocalInetAddress ; (; ). overridevirtual . Return internet address of local host to which the socket is bound. ; In case of error TInetAddress::IsValid() returns kFALSE. ; Reimplemented from TSocket.; Definition at line 451 of file TPSocket.cxx. ◆ GetOption() [1/2]. Option_t * TPSocket::GetOption ; (; ); const. inlineoverrideprivatevirtual . Reimplemented from TObject.; Definition at line 51 of file TPSocket.h. ◆ GetOption() [2/2]. Int_t TPSocket::GetOption ; (; ESockOptions ; opt, . Int_t & ; val . ). overridevirtual . Get socket options. Returns -1 in case of error. ; Reimplemented from TSocket.; Definition at line 768 of file TPSocket.cxx. ◆ GetSize(). Int_t TPSocket::GetSize ; (; ); const. inline . Definition at line 83 of file TPSocket.h. ◆ Init(). void TPSocket::Init ; (; Int_t ; tcpwindowsize, . TSocket * ; sock = nullptr . ). private . Create a parallel socket to the specified host. ; Definition at line 356 of file TPSocket.cxx. ◆ IsA(). TClass * TPSocket::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TNamed.; Definition at line 85 of file TPSocket.h. ◆ IsValid(). Bool_t TPSocket::IsValid ; (; ); const. inlineoverridevirtual . Reimplemented from TSocket.; Definition at line 79 of file TPSocket.h. ◆ operator=(). void TPSocket::operator= ; (; const TPSocket & ; ). privatedelete . ◆ Recv() [1/4]. Int_t TPSocket::Recv ; (; char * ; str, . Int_t ; max . ). inlineoverridevirtual . Receive a character string message of maximum max length. ; The expected message must be of type",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:26269,Availability,error,error,26269," GetSize(). Int_t TPSocket::GetSize ; (; ); const. inline . Definition at line 83 of file TPSocket.h. ◆ Init(). void TPSocket::Init ; (; Int_t ; tcpwindowsize, . TSocket * ; sock = nullptr . ). private . Create a parallel socket to the specified host. ; Definition at line 356 of file TPSocket.cxx. ◆ IsA(). TClass * TPSocket::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TNamed.; Definition at line 85 of file TPSocket.h. ◆ IsValid(). Bool_t TPSocket::IsValid ; (; ); const. inlineoverridevirtual . Reimplemented from TSocket.; Definition at line 79 of file TPSocket.h. ◆ operator=(). void TPSocket::operator= ; (; const TPSocket & ; ). privatedelete . ◆ Recv() [1/4]. Int_t TPSocket::Recv ; (; char * ; str, . Int_t ; max . ). inlineoverridevirtual . Receive a character string message of maximum max length. ; The expected message must be of type kMESS_STRING. Returns length of received string (can be 0 if otherside of connection is closed) or -1 in case of error or -4 in case a non-blocking socket would block (i.e. there is nothing to be read). ; Reimplemented from TSocket.; Definition at line 75 of file TPSocket.h. ◆ Recv() [2/4]. Int_t TPSocket::Recv ; (; char * ; str, . Int_t ; max, . Int_t & ; kind . ). inlineoverridevirtual . Receive a character string message of maximum max length. ; Returns in kind the message type. Returns length of received string+4 (can be 0 if other side of connection is closed) or -1 in case of error or -4 in case a non-blocking socket would block (i.e. there is nothing to be read). ; Reimplemented from TSocket.; Definition at line 76 of file TPSocket.h. ◆ Recv() [3/4]. Int_t TPSocket::Recv ; (; Int_t & ; status, . Int_t & ; kind . ). inlineoverridevirtual . Receives a status and a message type. ; Returns length of received integers, 2*sizeof(Int_t) (can be 0 if other side of connection is closed) or -1 in case of error or -4 in case a non-blocking socket would block (i.e. there is nothin",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:26745,Availability,error,error,26745,"ket.h. ◆ IsValid(). Bool_t TPSocket::IsValid ; (; ); const. inlineoverridevirtual . Reimplemented from TSocket.; Definition at line 79 of file TPSocket.h. ◆ operator=(). void TPSocket::operator= ; (; const TPSocket & ; ). privatedelete . ◆ Recv() [1/4]. Int_t TPSocket::Recv ; (; char * ; str, . Int_t ; max . ). inlineoverridevirtual . Receive a character string message of maximum max length. ; The expected message must be of type kMESS_STRING. Returns length of received string (can be 0 if otherside of connection is closed) or -1 in case of error or -4 in case a non-blocking socket would block (i.e. there is nothing to be read). ; Reimplemented from TSocket.; Definition at line 75 of file TPSocket.h. ◆ Recv() [2/4]. Int_t TPSocket::Recv ; (; char * ; str, . Int_t ; max, . Int_t & ; kind . ). inlineoverridevirtual . Receive a character string message of maximum max length. ; Returns in kind the message type. Returns length of received string+4 (can be 0 if other side of connection is closed) or -1 in case of error or -4 in case a non-blocking socket would block (i.e. there is nothing to be read). ; Reimplemented from TSocket.; Definition at line 76 of file TPSocket.h. ◆ Recv() [3/4]. Int_t TPSocket::Recv ; (; Int_t & ; status, . Int_t & ; kind . ). inlineoverridevirtual . Receives a status and a message type. ; Returns length of received integers, 2*sizeof(Int_t) (can be 0 if other side of connection is closed) or -1 in case of error or -4 in case a non-blocking socket would block (i.e. there is nothing to be read). ; Reimplemented from TSocket.; Definition at line 74 of file TPSocket.h. ◆ Recv() [4/4]. Int_t TPSocket::Recv ; (; TMessage *& ; mess). overridevirtual . Receive a TMessage object. ; The user must delete the TMessage object. Returns length of message in bytes (can be 0 if other side of connection is closed) or -1 in case of error or -4 in case a non-blocking socket would block (i.e. there is nothing to be read). In those case mess == 0. ; Reimplemented fr",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:27173,Availability,error,error,27173,"must be of type kMESS_STRING. Returns length of received string (can be 0 if otherside of connection is closed) or -1 in case of error or -4 in case a non-blocking socket would block (i.e. there is nothing to be read). ; Reimplemented from TSocket.; Definition at line 75 of file TPSocket.h. ◆ Recv() [2/4]. Int_t TPSocket::Recv ; (; char * ; str, . Int_t ; max, . Int_t & ; kind . ). inlineoverridevirtual . Receive a character string message of maximum max length. ; Returns in kind the message type. Returns length of received string+4 (can be 0 if other side of connection is closed) or -1 in case of error or -4 in case a non-blocking socket would block (i.e. there is nothing to be read). ; Reimplemented from TSocket.; Definition at line 76 of file TPSocket.h. ◆ Recv() [3/4]. Int_t TPSocket::Recv ; (; Int_t & ; status, . Int_t & ; kind . ). inlineoverridevirtual . Receives a status and a message type. ; Returns length of received integers, 2*sizeof(Int_t) (can be 0 if other side of connection is closed) or -1 in case of error or -4 in case a non-blocking socket would block (i.e. there is nothing to be read). ; Reimplemented from TSocket.; Definition at line 74 of file TPSocket.h. ◆ Recv() [4/4]. Int_t TPSocket::Recv ; (; TMessage *& ; mess). overridevirtual . Receive a TMessage object. ; The user must delete the TMessage object. Returns length of message in bytes (can be 0 if other side of connection is closed) or -1 in case of error or -4 in case a non-blocking socket would block (i.e. there is nothing to be read). In those case mess == 0. ; Reimplemented from TSocket.; Definition at line 626 of file TPSocket.cxx. ◆ RecvRaw(). Int_t TPSocket::RecvRaw ; (; void * ; buffer, . Int_t ; length, . ESendRecvOptions ; opt = kDefault . ). overridevirtual . Send a raw buffer of specified length. ; Returns the number of bytes sent or -1 in case of error. ; Reimplemented from TSocket.; Definition at line 679 of file TPSocket.cxx. ◆ Send() [1/4]. Int_t TPSocket::Send ; (; const cha",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:27589,Availability,error,error,27589,"er string message of maximum max length. ; Returns in kind the message type. Returns length of received string+4 (can be 0 if other side of connection is closed) or -1 in case of error or -4 in case a non-blocking socket would block (i.e. there is nothing to be read). ; Reimplemented from TSocket.; Definition at line 76 of file TPSocket.h. ◆ Recv() [3/4]. Int_t TPSocket::Recv ; (; Int_t & ; status, . Int_t & ; kind . ). inlineoverridevirtual . Receives a status and a message type. ; Returns length of received integers, 2*sizeof(Int_t) (can be 0 if other side of connection is closed) or -1 in case of error or -4 in case a non-blocking socket would block (i.e. there is nothing to be read). ; Reimplemented from TSocket.; Definition at line 74 of file TPSocket.h. ◆ Recv() [4/4]. Int_t TPSocket::Recv ; (; TMessage *& ; mess). overridevirtual . Receive a TMessage object. ; The user must delete the TMessage object. Returns length of message in bytes (can be 0 if other side of connection is closed) or -1 in case of error or -4 in case a non-blocking socket would block (i.e. there is nothing to be read). In those case mess == 0. ; Reimplemented from TSocket.; Definition at line 626 of file TPSocket.cxx. ◆ RecvRaw(). Int_t TPSocket::RecvRaw ; (; void * ; buffer, . Int_t ; length, . ESendRecvOptions ; opt = kDefault . ). overridevirtual . Send a raw buffer of specified length. ; Returns the number of bytes sent or -1 in case of error. ; Reimplemented from TSocket.; Definition at line 679 of file TPSocket.cxx. ◆ Send() [1/4]. Int_t TPSocket::Send ; (; const char * ; str, . Int_t ; kind = kMESS_STRING . ). inlineoverridevirtual . Send a character string buffer. ; Use kind to set the TMessage ""what"" field. Returns the number of bytes in the string str that were sent and -1 in case of error. In case the kind has been or'ed with kMESS_ACK, the call will only return after having received an acknowledgement, making the sending process synchronous. ; Reimplemented from TSocket.; Defini",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:28007,Availability,error,error,28007,"d . ). inlineoverridevirtual . Receives a status and a message type. ; Returns length of received integers, 2*sizeof(Int_t) (can be 0 if other side of connection is closed) or -1 in case of error or -4 in case a non-blocking socket would block (i.e. there is nothing to be read). ; Reimplemented from TSocket.; Definition at line 74 of file TPSocket.h. ◆ Recv() [4/4]. Int_t TPSocket::Recv ; (; TMessage *& ; mess). overridevirtual . Receive a TMessage object. ; The user must delete the TMessage object. Returns length of message in bytes (can be 0 if other side of connection is closed) or -1 in case of error or -4 in case a non-blocking socket would block (i.e. there is nothing to be read). In those case mess == 0. ; Reimplemented from TSocket.; Definition at line 626 of file TPSocket.cxx. ◆ RecvRaw(). Int_t TPSocket::RecvRaw ; (; void * ; buffer, . Int_t ; length, . ESendRecvOptions ; opt = kDefault . ). overridevirtual . Send a raw buffer of specified length. ; Returns the number of bytes sent or -1 in case of error. ; Reimplemented from TSocket.; Definition at line 679 of file TPSocket.cxx. ◆ Send() [1/4]. Int_t TPSocket::Send ; (; const char * ; str, . Int_t ; kind = kMESS_STRING . ). inlineoverridevirtual . Send a character string buffer. ; Use kind to set the TMessage ""what"" field. Returns the number of bytes in the string str that were sent and -1 in case of error. In case the kind has been or'ed with kMESS_ACK, the call will only return after having received an acknowledgement, making the sending process synchronous. ; Reimplemented from TSocket.; Definition at line 71 of file TPSocket.h. ◆ Send() [2/4]. Int_t TPSocket::Send ; (; const TMessage & ; mess). overridevirtual . Send a TMessage object. ; Returns the number of bytes in the TMessage that were sent and -1 in case of error. In case the TMessage::What has been or'ed with kMESS_ACK, the call will only return after having received an acknowledgement, making the sending process synchronous. Returns -4 in case ",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:28367,Availability,error,error,28367,"et.h. ◆ Recv() [4/4]. Int_t TPSocket::Recv ; (; TMessage *& ; mess). overridevirtual . Receive a TMessage object. ; The user must delete the TMessage object. Returns length of message in bytes (can be 0 if other side of connection is closed) or -1 in case of error or -4 in case a non-blocking socket would block (i.e. there is nothing to be read). In those case mess == 0. ; Reimplemented from TSocket.; Definition at line 626 of file TPSocket.cxx. ◆ RecvRaw(). Int_t TPSocket::RecvRaw ; (; void * ; buffer, . Int_t ; length, . ESendRecvOptions ; opt = kDefault . ). overridevirtual . Send a raw buffer of specified length. ; Returns the number of bytes sent or -1 in case of error. ; Reimplemented from TSocket.; Definition at line 679 of file TPSocket.cxx. ◆ Send() [1/4]. Int_t TPSocket::Send ; (; const char * ; str, . Int_t ; kind = kMESS_STRING . ). inlineoverridevirtual . Send a character string buffer. ; Use kind to set the TMessage ""what"" field. Returns the number of bytes in the string str that were sent and -1 in case of error. In case the kind has been or'ed with kMESS_ACK, the call will only return after having received an acknowledgement, making the sending process synchronous. ; Reimplemented from TSocket.; Definition at line 71 of file TPSocket.h. ◆ Send() [2/4]. Int_t TPSocket::Send ; (; const TMessage & ; mess). overridevirtual . Send a TMessage object. ; Returns the number of bytes in the TMessage that were sent and -1 in case of error. In case the TMessage::What has been or'ed with kMESS_ACK, the call will only return after having received an acknowledgement, making the sending process synchronous. Returns -4 in case of kNoBlock and errno == EWOULDBLOCK. ; Reimplemented from TSocket.; Definition at line 483 of file TPSocket.cxx. ◆ Send() [3/4]. Int_t TPSocket::Send ; (; Int_t ; kind). inlineoverridevirtual . Send a single message opcode. ; Use kind (opcode) to set the TMessage ""what"" field. Returns the number of bytes that were sent (always sizeof(Int_t)) a",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:28792,Availability,error,error,28792,"26 of file TPSocket.cxx. ◆ RecvRaw(). Int_t TPSocket::RecvRaw ; (; void * ; buffer, . Int_t ; length, . ESendRecvOptions ; opt = kDefault . ). overridevirtual . Send a raw buffer of specified length. ; Returns the number of bytes sent or -1 in case of error. ; Reimplemented from TSocket.; Definition at line 679 of file TPSocket.cxx. ◆ Send() [1/4]. Int_t TPSocket::Send ; (; const char * ; str, . Int_t ; kind = kMESS_STRING . ). inlineoverridevirtual . Send a character string buffer. ; Use kind to set the TMessage ""what"" field. Returns the number of bytes in the string str that were sent and -1 in case of error. In case the kind has been or'ed with kMESS_ACK, the call will only return after having received an acknowledgement, making the sending process synchronous. ; Reimplemented from TSocket.; Definition at line 71 of file TPSocket.h. ◆ Send() [2/4]. Int_t TPSocket::Send ; (; const TMessage & ; mess). overridevirtual . Send a TMessage object. ; Returns the number of bytes in the TMessage that were sent and -1 in case of error. In case the TMessage::What has been or'ed with kMESS_ACK, the call will only return after having received an acknowledgement, making the sending process synchronous. Returns -4 in case of kNoBlock and errno == EWOULDBLOCK. ; Reimplemented from TSocket.; Definition at line 483 of file TPSocket.cxx. ◆ Send() [3/4]. Int_t TPSocket::Send ; (; Int_t ; kind). inlineoverridevirtual . Send a single message opcode. ; Use kind (opcode) to set the TMessage ""what"" field. Returns the number of bytes that were sent (always sizeof(Int_t)) and -1 in case of error. In case the kind has been or'ed with kMESS_ACK, the call will only return after having received an acknowledgement, making the sending process synchronous. ; Reimplemented from TSocket.; Definition at line 69 of file TPSocket.h. ◆ Send() [4/4]. Int_t TPSocket::Send ; (; Int_t ; status, . Int_t ; kind . ). inlineoverridevirtual . Send a status and a single message opcode. ; Use kind (opcode) to set ",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:29347,Availability,error,error,29347,"of bytes in the string str that were sent and -1 in case of error. In case the kind has been or'ed with kMESS_ACK, the call will only return after having received an acknowledgement, making the sending process synchronous. ; Reimplemented from TSocket.; Definition at line 71 of file TPSocket.h. ◆ Send() [2/4]. Int_t TPSocket::Send ; (; const TMessage & ; mess). overridevirtual . Send a TMessage object. ; Returns the number of bytes in the TMessage that were sent and -1 in case of error. In case the TMessage::What has been or'ed with kMESS_ACK, the call will only return after having received an acknowledgement, making the sending process synchronous. Returns -4 in case of kNoBlock and errno == EWOULDBLOCK. ; Reimplemented from TSocket.; Definition at line 483 of file TPSocket.cxx. ◆ Send() [3/4]. Int_t TPSocket::Send ; (; Int_t ; kind). inlineoverridevirtual . Send a single message opcode. ; Use kind (opcode) to set the TMessage ""what"" field. Returns the number of bytes that were sent (always sizeof(Int_t)) and -1 in case of error. In case the kind has been or'ed with kMESS_ACK, the call will only return after having received an acknowledgement, making the sending process synchronous. ; Reimplemented from TSocket.; Definition at line 69 of file TPSocket.h. ◆ Send() [4/4]. Int_t TPSocket::Send ; (; Int_t ; status, . Int_t ; kind . ). inlineoverridevirtual . Send a status and a single message opcode. ; Use kind (opcode) to set the TMessage ""what"" field. Returns the number of bytes that were sent (always 2*sizeof(Int_t)) and -1 in case of error. In case the kind has been or'ed with kMESS_ACK, the call will only return after having received an acknowledgement, making the sending process synchronous. ; Reimplemented from TSocket.; Definition at line 70 of file TPSocket.h. ◆ SendRaw(). Int_t TPSocket::SendRaw ; (; const void * ; buffer, . Int_t ; length, . ESendRecvOptions ; opt = kDefault . ). overridevirtual . Send a raw buffer of specified length. ; Returns the number of",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:29868,Availability,error,error,29868,"as been or'ed with kMESS_ACK, the call will only return after having received an acknowledgement, making the sending process synchronous. Returns -4 in case of kNoBlock and errno == EWOULDBLOCK. ; Reimplemented from TSocket.; Definition at line 483 of file TPSocket.cxx. ◆ Send() [3/4]. Int_t TPSocket::Send ; (; Int_t ; kind). inlineoverridevirtual . Send a single message opcode. ; Use kind (opcode) to set the TMessage ""what"" field. Returns the number of bytes that were sent (always sizeof(Int_t)) and -1 in case of error. In case the kind has been or'ed with kMESS_ACK, the call will only return after having received an acknowledgement, making the sending process synchronous. ; Reimplemented from TSocket.; Definition at line 69 of file TPSocket.h. ◆ Send() [4/4]. Int_t TPSocket::Send ; (; Int_t ; status, . Int_t ; kind . ). inlineoverridevirtual . Send a status and a single message opcode. ; Use kind (opcode) to set the TMessage ""what"" field. Returns the number of bytes that were sent (always 2*sizeof(Int_t)) and -1 in case of error. In case the kind has been or'ed with kMESS_ACK, the call will only return after having received an acknowledgement, making the sending process synchronous. ; Reimplemented from TSocket.; Definition at line 70 of file TPSocket.h. ◆ SendRaw(). Int_t TPSocket::SendRaw ; (; const void * ; buffer, . Int_t ; length, . ESendRecvOptions ; opt = kDefault . ). overridevirtual . Send a raw buffer of specified length. ; Returns the number of bytes send and -1 in case of error. ; Reimplemented from TSocket.; Definition at line 545 of file TPSocket.cxx. ◆ SetOption(). Int_t TPSocket::SetOption ; (; ESockOptions ; opt, . Int_t ; val . ). overridevirtual . Set socket options. ; Reimplemented from TSocket.; Definition at line 754 of file TPSocket.cxx. ◆ Streamer(). void TPSocket::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TNamed. ◆ StreamerNVirtual(). void TPSocket::StreamerNVirtual ; (; TBuff",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:30338,Availability,error,error,30338,"sizeof(Int_t)) and -1 in case of error. In case the kind has been or'ed with kMESS_ACK, the call will only return after having received an acknowledgement, making the sending process synchronous. ; Reimplemented from TSocket.; Definition at line 69 of file TPSocket.h. ◆ Send() [4/4]. Int_t TPSocket::Send ; (; Int_t ; status, . Int_t ; kind . ). inlineoverridevirtual . Send a status and a single message opcode. ; Use kind (opcode) to set the TMessage ""what"" field. Returns the number of bytes that were sent (always 2*sizeof(Int_t)) and -1 in case of error. In case the kind has been or'ed with kMESS_ACK, the call will only return after having received an acknowledgement, making the sending process synchronous. ; Reimplemented from TSocket.; Definition at line 70 of file TPSocket.h. ◆ SendRaw(). Int_t TPSocket::SendRaw ; (; const void * ; buffer, . Int_t ; length, . ESendRecvOptions ; opt = kDefault . ). overridevirtual . Send a raw buffer of specified length. ; Returns the number of bytes send and -1 in case of error. ; Reimplemented from TSocket.; Definition at line 545 of file TPSocket.cxx. ◆ SetOption(). Int_t TPSocket::SetOption ; (; ESockOptions ; opt, . Int_t ; val . ). overridevirtual . Set socket options. ; Reimplemented from TSocket.; Definition at line 754 of file TPSocket.cxx. ◆ Streamer(). void TPSocket::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TNamed. ◆ StreamerNVirtual(). void TPSocket::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 85 of file TPSocket.h. Friends And Related Symbol Documentation. ◆ TPServerSocket. friend class TPServerSocket. friend . Definition at line 35 of file TPSocket.h. Member Data Documentation. ◆ fReadBytesLeft. Int_t* TPSocket::fReadBytesLeft = nullptr. private . Definition at line 43 of file TPSocket.h. ◆ fReadMonitor. TMonitor* TPSocket::fReadMonitor = nullptr. private . Definition at line 40 of file TPSocket.h. ◆ fRea",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:1650,Integrability,message,message,1650,"reate a parallel socket. ;  ;  TPSocket (const char *host, Int_t port, Int_t size, TSocket *sock);  Create a parallel socket on a connection already opened via TSocket sock. ;  ;  TPSocket (TInetAddress address, const char *service, Int_t size, Int_t tcpwindowsize=-1);  Create a parallel socket. ;  ;  TPSocket (TInetAddress address, Int_t port, Int_t size, Int_t tcpwindowsize=-1);  Create a parallel socket. ;  ; virtual ~TPSocket ();  Cleanup the parallel socket. ;  ; void Close (Option_t *opt="""") override;  Close a parallel socket. ;  ; Int_t GetDescriptor () const override;  Return socket descriptor. ;  ; Int_t GetErrorCode () const;  Returns error code. ;  ; TInetAddress GetLocalInetAddress () override;  Return internet address of local host to which the socket is bound. ;  ; Int_t GetOption (ESockOptions opt, Int_t &val) override;  Get socket options. Returns -1 in case of error. ;  ; Int_t GetSize () const;  ; TClass * IsA () const override;  ; Bool_t IsValid () const override;  ; Int_t Recv (char *mess, Int_t max) override;  Receive a character string message of maximum max length. ;  ; Int_t Recv (char *mess, Int_t max, Int_t &kind) override;  Receive a character string message of maximum max length. ;  ; Int_t Recv (Int_t &status, Int_t &kind) override;  Receives a status and a message type. ;  ; Int_t Recv (TMessage *&mess) override;  Receive a TMessage object. ;  ; Int_t RecvRaw (void *buffer, Int_t length, ESendRecvOptions opt=kDefault) override;  Send a raw buffer of specified length. ;  ; Int_t Send (const char *mess, Int_t kind=kMESS_STRING) override;  Send a character string buffer. ;  ; Int_t Send (const TMessage &mess) override;  Send a TMessage object. ;  ; Int_t Send (Int_t kind) override;  Send a single message opcode. ;  ; Int_t Send (Int_t status, Int_t kind) override;  Send a status and a single message opcode. ;  ; Int_t SendRaw (const void *buffer, Int_t length, ESendRecvOptions opt=kDefault) override;  Send a raw buffer of specified length.",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:1772,Integrability,message,message,1772,"et sock. ;  ;  TPSocket (TInetAddress address, const char *service, Int_t size, Int_t tcpwindowsize=-1);  Create a parallel socket. ;  ;  TPSocket (TInetAddress address, Int_t port, Int_t size, Int_t tcpwindowsize=-1);  Create a parallel socket. ;  ; virtual ~TPSocket ();  Cleanup the parallel socket. ;  ; void Close (Option_t *opt="""") override;  Close a parallel socket. ;  ; Int_t GetDescriptor () const override;  Return socket descriptor. ;  ; Int_t GetErrorCode () const;  Returns error code. ;  ; TInetAddress GetLocalInetAddress () override;  Return internet address of local host to which the socket is bound. ;  ; Int_t GetOption (ESockOptions opt, Int_t &val) override;  Get socket options. Returns -1 in case of error. ;  ; Int_t GetSize () const;  ; TClass * IsA () const override;  ; Bool_t IsValid () const override;  ; Int_t Recv (char *mess, Int_t max) override;  Receive a character string message of maximum max length. ;  ; Int_t Recv (char *mess, Int_t max, Int_t &kind) override;  Receive a character string message of maximum max length. ;  ; Int_t Recv (Int_t &status, Int_t &kind) override;  Receives a status and a message type. ;  ; Int_t Recv (TMessage *&mess) override;  Receive a TMessage object. ;  ; Int_t RecvRaw (void *buffer, Int_t length, ESendRecvOptions opt=kDefault) override;  Send a raw buffer of specified length. ;  ; Int_t Send (const char *mess, Int_t kind=kMESS_STRING) override;  Send a character string buffer. ;  ; Int_t Send (const TMessage &mess) override;  Send a TMessage object. ;  ; Int_t Send (Int_t kind) override;  Send a single message opcode. ;  ; Int_t Send (Int_t status, Int_t kind) override;  Send a status and a single message opcode. ;  ; Int_t SendRaw (const void *buffer, Int_t length, ESendRecvOptions opt=kDefault) override;  Send a raw buffer of specified length. ;  ; Int_t SetOption (ESockOptions opt, Int_t val) override;  Set socket options. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; ",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:1883,Integrability,message,message,1883,"eate a parallel socket. ;  ;  TPSocket (TInetAddress address, Int_t port, Int_t size, Int_t tcpwindowsize=-1);  Create a parallel socket. ;  ; virtual ~TPSocket ();  Cleanup the parallel socket. ;  ; void Close (Option_t *opt="""") override;  Close a parallel socket. ;  ; Int_t GetDescriptor () const override;  Return socket descriptor. ;  ; Int_t GetErrorCode () const;  Returns error code. ;  ; TInetAddress GetLocalInetAddress () override;  Return internet address of local host to which the socket is bound. ;  ; Int_t GetOption (ESockOptions opt, Int_t &val) override;  Get socket options. Returns -1 in case of error. ;  ; Int_t GetSize () const;  ; TClass * IsA () const override;  ; Bool_t IsValid () const override;  ; Int_t Recv (char *mess, Int_t max) override;  Receive a character string message of maximum max length. ;  ; Int_t Recv (char *mess, Int_t max, Int_t &kind) override;  Receive a character string message of maximum max length. ;  ; Int_t Recv (Int_t &status, Int_t &kind) override;  Receives a status and a message type. ;  ; Int_t Recv (TMessage *&mess) override;  Receive a TMessage object. ;  ; Int_t RecvRaw (void *buffer, Int_t length, ESendRecvOptions opt=kDefault) override;  Send a raw buffer of specified length. ;  ; Int_t Send (const char *mess, Int_t kind=kMESS_STRING) override;  Send a character string buffer. ;  ; Int_t Send (const TMessage &mess) override;  Send a TMessage object. ;  ; Int_t Send (Int_t kind) override;  Send a single message opcode. ;  ; Int_t Send (Int_t status, Int_t kind) override;  Send a status and a single message opcode. ;  ; Int_t SendRaw (const void *buffer, Int_t length, ESendRecvOptions opt=kDefault) override;  Send a raw buffer of specified length. ;  ; Int_t SetOption (ESockOptions opt, Int_t val) override;  Set socket options. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSo",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:2329,Integrability,message,message,2329,"address of local host to which the socket is bound. ;  ; Int_t GetOption (ESockOptions opt, Int_t &val) override;  Get socket options. Returns -1 in case of error. ;  ; Int_t GetSize () const;  ; TClass * IsA () const override;  ; Bool_t IsValid () const override;  ; Int_t Recv (char *mess, Int_t max) override;  Receive a character string message of maximum max length. ;  ; Int_t Recv (char *mess, Int_t max, Int_t &kind) override;  Receive a character string message of maximum max length. ;  ; Int_t Recv (Int_t &status, Int_t &kind) override;  Receives a status and a message type. ;  ; Int_t Recv (TMessage *&mess) override;  Receive a TMessage object. ;  ; Int_t RecvRaw (void *buffer, Int_t length, ESendRecvOptions opt=kDefault) override;  Send a raw buffer of specified length. ;  ; Int_t Send (const char *mess, Int_t kind=kMESS_STRING) override;  Send a character string buffer. ;  ; Int_t Send (const TMessage &mess) override;  Send a TMessage object. ;  ; Int_t Send (Int_t kind) override;  Send a single message opcode. ;  ; Int_t Send (Int_t status, Int_t kind) override;  Send a status and a single message opcode. ;  ; Int_t SendRaw (const void *buffer, Int_t length, ESendRecvOptions opt=kDefault) override;  Send a raw buffer of specified length. ;  ; Int_t SetOption (ESockOptions opt, Int_t val) override;  Set socket options. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSocket;  TSocket (const char *host, const char *service, Int_t tcpwindowsize=-1);  Create a socket. ;  ;  TSocket (const char *host, Int_t port, Int_t tcpwindowsize=-1);  Create a socket; see CreateAuthSocket for the form of url. ;  ;  TSocket (const char *sockpath);  Create a socket in the Unix domain on 'sockpath'. ;  ;  TSocket (const TSocket &s);  TSocket copy ctor. ;  ;  TSocket (Int_t descriptor);  Create a socket. ;  ;  TSocket (Int_t descriptor, cons",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:2426,Integrability,message,message,2426,"ons opt, Int_t &val) override;  Get socket options. Returns -1 in case of error. ;  ; Int_t GetSize () const;  ; TClass * IsA () const override;  ; Bool_t IsValid () const override;  ; Int_t Recv (char *mess, Int_t max) override;  Receive a character string message of maximum max length. ;  ; Int_t Recv (char *mess, Int_t max, Int_t &kind) override;  Receive a character string message of maximum max length. ;  ; Int_t Recv (Int_t &status, Int_t &kind) override;  Receives a status and a message type. ;  ; Int_t Recv (TMessage *&mess) override;  Receive a TMessage object. ;  ; Int_t RecvRaw (void *buffer, Int_t length, ESendRecvOptions opt=kDefault) override;  Send a raw buffer of specified length. ;  ; Int_t Send (const char *mess, Int_t kind=kMESS_STRING) override;  Send a character string buffer. ;  ; Int_t Send (const TMessage &mess) override;  Send a TMessage object. ;  ; Int_t Send (Int_t kind) override;  Send a single message opcode. ;  ; Int_t Send (Int_t status, Int_t kind) override;  Send a status and a single message opcode. ;  ; Int_t SendRaw (const void *buffer, Int_t length, ESendRecvOptions opt=kDefault) override;  Send a raw buffer of specified length. ;  ; Int_t SetOption (ESockOptions opt, Int_t val) override;  Set socket options. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSocket;  TSocket (const char *host, const char *service, Int_t tcpwindowsize=-1);  Create a socket. ;  ;  TSocket (const char *host, Int_t port, Int_t tcpwindowsize=-1);  Create a socket; see CreateAuthSocket for the form of url. ;  ;  TSocket (const char *sockpath);  Create a socket in the Unix domain on 'sockpath'. ;  ;  TSocket (const TSocket &s);  TSocket copy ctor. ;  ;  TSocket (Int_t descriptor);  Create a socket. ;  ;  TSocket (Int_t descriptor, const char *sockpath);  Create a socket. ;  ;  TSocket (TInetAddress address, const char",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:8492,Integrability,message,message,8492,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:9033,Integrability,message,message,9033,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom ",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:9981,Integrability,message,message,9981,"*method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:13075,Integrability,message,message,13075,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSocket; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:13448,Integrability,message,message,13448," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSocket; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TSocket * CreateAuthSocket (const char *url, Int_t size=0, Int_t tcpwindowsize=-1, TSocket *s=nullptr, Int_t *err=nullptr);  Creates a socket or a parallel socket and authenticates to the remote server. ;  ; static TSocket * CreateAuthSocket (const char *user, const char *host, Int_t port, Int_t size=0, Int_t tcpwindowsize=-1, TSocket *s=nullp",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:14712,Integrability,protocol,protocol,14712," Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSocket; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TSocket * CreateAuthSocket (const char *url, Int_t size=0, Int_t tcpwindowsize=-1, TSocket *s=nullptr, Int_t *err=nullptr);  Creates a socket or a parallel socket and authenticates to the remote server. ;  ; static TSocket * CreateAuthSocket (const char *user, const char *host, Int_t port, Int_t size=0, Int_t tcpwindowsize=-1, TSocket *s=nullptr, Int_t *err=nullptr);  Creates a socket or a parallel socket and authenticates to the remote server specified in 'url' on remote 'port' as 'user'. ;  ; static const char * DeclFileName ();  ; static Int_t GetClientProtocol ();  Static method returning supported client protocol. ;  ; static ULong64_t GetSocketBytesRecv ();  Get total number of bytes received via all sockets. ;  ; static ULong64_t GetSocketBytesSent ();  Get total number of bytes sent via all sockets. ;  ; static void NetError (const char *where, Int_t error);  Print error string depending on error code. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; sta",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:14994,Integrability,depend,depending,14994,"Socket; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TSocket * CreateAuthSocket (const char *url, Int_t size=0, Int_t tcpwindowsize=-1, TSocket *s=nullptr, Int_t *err=nullptr);  Creates a socket or a parallel socket and authenticates to the remote server. ;  ; static TSocket * CreateAuthSocket (const char *user, const char *host, Int_t port, Int_t size=0, Int_t tcpwindowsize=-1, TSocket *s=nullptr, Int_t *err=nullptr);  Creates a socket or a parallel socket and authenticates to the remote server specified in 'url' on remote 'port' as 'user'. ;  ; static const char * DeclFileName ();  ; static Int_t GetClientProtocol ();  Static method returning supported client protocol. ;  ; static ULong64_t GetSocketBytesRecv ();  Get total number of bytes received via all sockets. ;  ; static ULong64_t GetSocketBytesSent ();  Get total number of bytes sent via all sockets. ;  ; static void NetError (const char *where, Int_t error);  Print error string depending on error code. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TPSocket (const TPSocket &)=delete;  ;  TPSocket (TSocket *pSockets[], Int_t size);  Create a parallel socket. This ctor is called by TPServerSocket. ;  ; Option_t * GetOption () const ov",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:17854,Integrability,message,message,17854,"Inconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TSocket; enum  ESocketErrors { kInvalid = -1; , kInvalidStillInList = -2; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSocket;  TSocket ();  ; Bool_t Authenticate (const char *user);  Authenticated the socket with specified user. ;  ; void MarkBrokenConnection ();  Close the socket and mark as due to a broken connection. ;  ; Bool_t RecvProcessIDs (TMessage *mess);  Receive a message containing process ids. ;  ; Bool_t RecvStreamerInfos (TMessage *mess);  Receive a message containing streamer infos. ;  ; void SendProcessIDs (const TMessage &mess);  Check if TProcessIDs must be sent. ;  ; void SendStreamerInfos (const TMessage &mess);  Check if TStreamerInfo must be sent. ;  ; void SetDescriptor (Int_t desc);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TSocket; TInetAddress fAddress;  ; TBits fBitsInfo;  ; UInt_t fBytesRecv;  ; UInt_t fBytesSent;  ; Int_t fCompress;  ; TTimeStamp fLastUsage;  ; TVirtualMutex * fLastUsageMtx;  ; TInetAddress fLocalAddress;  ; Int_t fRemoteProtocol;  ; TSecContext * fSecContext;  ; TString fService;  ; EServiceType fServType;  ; Int_t fSocket;  ; Int_t fTcpWindowSize;  ; TString fUrl;  ; TList * fUUIDs;  ;  Pro",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:17945,Integrability,message,message,17945," ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TSocket; enum  ESocketErrors { kInvalid = -1; , kInvalidStillInList = -2; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSocket;  TSocket ();  ; Bool_t Authenticate (const char *user);  Authenticated the socket with specified user. ;  ; void MarkBrokenConnection ();  Close the socket and mark as due to a broken connection. ;  ; Bool_t RecvProcessIDs (TMessage *mess);  Receive a message containing process ids. ;  ; Bool_t RecvStreamerInfos (TMessage *mess);  Receive a message containing streamer infos. ;  ; void SendProcessIDs (const TMessage &mess);  Check if TProcessIDs must be sent. ;  ; void SendStreamerInfos (const TMessage &mess);  Check if TStreamerInfo must be sent. ;  ; void SetDescriptor (Int_t desc);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TSocket; TInetAddress fAddress;  ; TBits fBitsInfo;  ; UInt_t fBytesRecv;  ; UInt_t fBytesSent;  ; Int_t fCompress;  ; TTimeStamp fLastUsage;  ; TVirtualMutex * fLastUsageMtx;  ; TInetAddress fLocalAddress;  ; Int_t fRemoteProtocol;  ; TSecContext * fSecContext;  ; TString fService;  ; EServiceType fServType;  ; Int_t fSocket;  ; Int_t fTcpWindowSize;  ; TString fUrl;  ; TList * fUUIDs;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Prote",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:24408,Integrability,depend,depends,24408,". inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 85 of file TPSocket.h. ◆ Close(). void TPSocket::Close ; (; Option_t * ; option = """"). overridevirtual . Close a parallel socket. ; If option is ""force"", calls shutdown(id,2) to shut down the connection. This will close the connection also for the parent of this process. Also called via the dtor (without option ""force"", call explicitly Close(""force"") if this is desired). ; Reimplemented from TSocket.; Definition at line 326 of file TPSocket.cxx. ◆ DeclFileName(). static const char * TPSocket::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 85 of file TPSocket.h. ◆ GetDescriptor(). Int_t TPSocket::GetDescriptor ; (; ); const. overridevirtual . Return socket descriptor. ; Reimplemented from TSocket.; Definition at line 467 of file TPSocket.cxx. ◆ GetErrorCode(). Int_t TPSocket::GetErrorCode ; (; ); const. Returns error code. ; Meaning depends on context where it is called. If no error condition returns 0 else a value < 0. ; Definition at line 783 of file TPSocket.cxx. ◆ GetLocalInetAddress(). TInetAddress TPSocket::GetLocalInetAddress ; (; ). overridevirtual . Return internet address of local host to which the socket is bound. ; In case of error TInetAddress::IsValid() returns kFALSE. ; Reimplemented from TSocket.; Definition at line 451 of file TPSocket.cxx. ◆ GetOption() [1/2]. Option_t * TPSocket::GetOption ; (; ); const. inlineoverrideprivatevirtual . Reimplemented from TObject.; Definition at line 51 of file TPSocket.h. ◆ GetOption() [2/2]. Int_t TPSocket::GetOption ; (; ESockOptions ; opt, . Int_t & ; val . ). overridevirtual . Get socket options. Returns -1 in case of error. ; Reimplemented from TSocket.; Definition at line 768 of file TPSocket.cxx. ◆ GetSize(). Int_t TPSocket::GetSize ; (; ); const. inline . Definition at line 83 of file TPSocket.h. ◆ Init(). void TPSocket::Init ; (; Int_t ; tcpwindowsize, . TSocket * ; s",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:26086,Integrability,message,message,26086,"_t & ; val . ). overridevirtual . Get socket options. Returns -1 in case of error. ; Reimplemented from TSocket.; Definition at line 768 of file TPSocket.cxx. ◆ GetSize(). Int_t TPSocket::GetSize ; (; ); const. inline . Definition at line 83 of file TPSocket.h. ◆ Init(). void TPSocket::Init ; (; Int_t ; tcpwindowsize, . TSocket * ; sock = nullptr . ). private . Create a parallel socket to the specified host. ; Definition at line 356 of file TPSocket.cxx. ◆ IsA(). TClass * TPSocket::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TNamed.; Definition at line 85 of file TPSocket.h. ◆ IsValid(). Bool_t TPSocket::IsValid ; (; ); const. inlineoverridevirtual . Reimplemented from TSocket.; Definition at line 79 of file TPSocket.h. ◆ operator=(). void TPSocket::operator= ; (; const TPSocket & ; ). privatedelete . ◆ Recv() [1/4]. Int_t TPSocket::Recv ; (; char * ; str, . Int_t ; max . ). inlineoverridevirtual . Receive a character string message of maximum max length. ; The expected message must be of type kMESS_STRING. Returns length of received string (can be 0 if otherside of connection is closed) or -1 in case of error or -4 in case a non-blocking socket would block (i.e. there is nothing to be read). ; Reimplemented from TSocket.; Definition at line 75 of file TPSocket.h. ◆ Recv() [2/4]. Int_t TPSocket::Recv ; (; char * ; str, . Int_t ; max, . Int_t & ; kind . ). inlineoverridevirtual . Receive a character string message of maximum max length. ; Returns in kind the message type. Returns length of received string+4 (can be 0 if other side of connection is closed) or -1 in case of error or -4 in case a non-blocking socket would block (i.e. there is nothing to be read). ; Reimplemented from TSocket.; Definition at line 76 of file TPSocket.h. ◆ Recv() [3/4]. Int_t TPSocket::Recv ; (; Int_t & ; status, . Int_t & ; kind . ). inlineoverridevirtual . Receives a status and a message type. ; Returns length of received intege",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:26132,Integrability,message,message,26132,"eturns -1 in case of error. ; Reimplemented from TSocket.; Definition at line 768 of file TPSocket.cxx. ◆ GetSize(). Int_t TPSocket::GetSize ; (; ); const. inline . Definition at line 83 of file TPSocket.h. ◆ Init(). void TPSocket::Init ; (; Int_t ; tcpwindowsize, . TSocket * ; sock = nullptr . ). private . Create a parallel socket to the specified host. ; Definition at line 356 of file TPSocket.cxx. ◆ IsA(). TClass * TPSocket::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TNamed.; Definition at line 85 of file TPSocket.h. ◆ IsValid(). Bool_t TPSocket::IsValid ; (; ); const. inlineoverridevirtual . Reimplemented from TSocket.; Definition at line 79 of file TPSocket.h. ◆ operator=(). void TPSocket::operator= ; (; const TPSocket & ; ). privatedelete . ◆ Recv() [1/4]. Int_t TPSocket::Recv ; (; char * ; str, . Int_t ; max . ). inlineoverridevirtual . Receive a character string message of maximum max length. ; The expected message must be of type kMESS_STRING. Returns length of received string (can be 0 if otherside of connection is closed) or -1 in case of error or -4 in case a non-blocking socket would block (i.e. there is nothing to be read). ; Reimplemented from TSocket.; Definition at line 75 of file TPSocket.h. ◆ Recv() [2/4]. Int_t TPSocket::Recv ; (; char * ; str, . Int_t ; max, . Int_t & ; kind . ). inlineoverridevirtual . Receive a character string message of maximum max length. ; Returns in kind the message type. Returns length of received string+4 (can be 0 if other side of connection is closed) or -1 in case of error or -4 in case a non-blocking socket would block (i.e. there is nothing to be read). ; Reimplemented from TSocket.; Definition at line 76 of file TPSocket.h. ◆ Recv() [3/4]. Int_t TPSocket::Recv ; (; Int_t & ; status, . Int_t & ; kind . ). inlineoverridevirtual . Receives a status and a message type. ; Returns length of received integers, 2*sizeof(Int_t) (can be 0 if other side of connectio",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:26576,Integrability,message,message,26576," ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TNamed.; Definition at line 85 of file TPSocket.h. ◆ IsValid(). Bool_t TPSocket::IsValid ; (; ); const. inlineoverridevirtual . Reimplemented from TSocket.; Definition at line 79 of file TPSocket.h. ◆ operator=(). void TPSocket::operator= ; (; const TPSocket & ; ). privatedelete . ◆ Recv() [1/4]. Int_t TPSocket::Recv ; (; char * ; str, . Int_t ; max . ). inlineoverridevirtual . Receive a character string message of maximum max length. ; The expected message must be of type kMESS_STRING. Returns length of received string (can be 0 if otherside of connection is closed) or -1 in case of error or -4 in case a non-blocking socket would block (i.e. there is nothing to be read). ; Reimplemented from TSocket.; Definition at line 75 of file TPSocket.h. ◆ Recv() [2/4]. Int_t TPSocket::Recv ; (; char * ; str, . Int_t ; max, . Int_t & ; kind . ). inlineoverridevirtual . Receive a character string message of maximum max length. ; Returns in kind the message type. Returns length of received string+4 (can be 0 if other side of connection is closed) or -1 in case of error or -4 in case a non-blocking socket would block (i.e. there is nothing to be read). ; Reimplemented from TSocket.; Definition at line 76 of file TPSocket.h. ◆ Recv() [3/4]. Int_t TPSocket::Recv ; (; Int_t & ; status, . Int_t & ; kind . ). inlineoverridevirtual . Receives a status and a message type. ; Returns length of received integers, 2*sizeof(Int_t) (can be 0 if other side of connection is closed) or -1 in case of error or -4 in case a non-blocking socket would block (i.e. there is nothing to be read). ; Reimplemented from TSocket.; Definition at line 74 of file TPSocket.h. ◆ Recv() [4/4]. Int_t TPSocket::Recv ; (; TMessage *& ; mess). overridevirtual . Receive a TMessage object. ; The user must delete the TMessage object. Returns length of message in bytes (can be 0 if other side of connection is closed) or -1",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:26629,Integrability,message,message,26629,"TClass describing current object ; Reimplemented from TNamed.; Definition at line 85 of file TPSocket.h. ◆ IsValid(). Bool_t TPSocket::IsValid ; (; ); const. inlineoverridevirtual . Reimplemented from TSocket.; Definition at line 79 of file TPSocket.h. ◆ operator=(). void TPSocket::operator= ; (; const TPSocket & ; ). privatedelete . ◆ Recv() [1/4]. Int_t TPSocket::Recv ; (; char * ; str, . Int_t ; max . ). inlineoverridevirtual . Receive a character string message of maximum max length. ; The expected message must be of type kMESS_STRING. Returns length of received string (can be 0 if otherside of connection is closed) or -1 in case of error or -4 in case a non-blocking socket would block (i.e. there is nothing to be read). ; Reimplemented from TSocket.; Definition at line 75 of file TPSocket.h. ◆ Recv() [2/4]. Int_t TPSocket::Recv ; (; char * ; str, . Int_t ; max, . Int_t & ; kind . ). inlineoverridevirtual . Receive a character string message of maximum max length. ; Returns in kind the message type. Returns length of received string+4 (can be 0 if other side of connection is closed) or -1 in case of error or -4 in case a non-blocking socket would block (i.e. there is nothing to be read). ; Reimplemented from TSocket.; Definition at line 76 of file TPSocket.h. ◆ Recv() [3/4]. Int_t TPSocket::Recv ; (; Int_t & ; status, . Int_t & ; kind . ). inlineoverridevirtual . Receives a status and a message type. ; Returns length of received integers, 2*sizeof(Int_t) (can be 0 if other side of connection is closed) or -1 in case of error or -4 in case a non-blocking socket would block (i.e. there is nothing to be read). ; Reimplemented from TSocket.; Definition at line 74 of file TPSocket.h. ◆ Recv() [4/4]. Int_t TPSocket::Recv ; (; TMessage *& ; mess). overridevirtual . Receive a TMessage object. ; The user must delete the TMessage object. Returns length of message in bytes (can be 0 if other side of connection is closed) or -1 in case of error or -4 in case a non-blocking ",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:27038,Integrability,message,message,27038,"). inlineoverridevirtual . Receive a character string message of maximum max length. ; The expected message must be of type kMESS_STRING. Returns length of received string (can be 0 if otherside of connection is closed) or -1 in case of error or -4 in case a non-blocking socket would block (i.e. there is nothing to be read). ; Reimplemented from TSocket.; Definition at line 75 of file TPSocket.h. ◆ Recv() [2/4]. Int_t TPSocket::Recv ; (; char * ; str, . Int_t ; max, . Int_t & ; kind . ). inlineoverridevirtual . Receive a character string message of maximum max length. ; Returns in kind the message type. Returns length of received string+4 (can be 0 if other side of connection is closed) or -1 in case of error or -4 in case a non-blocking socket would block (i.e. there is nothing to be read). ; Reimplemented from TSocket.; Definition at line 76 of file TPSocket.h. ◆ Recv() [3/4]. Int_t TPSocket::Recv ; (; Int_t & ; status, . Int_t & ; kind . ). inlineoverridevirtual . Receives a status and a message type. ; Returns length of received integers, 2*sizeof(Int_t) (can be 0 if other side of connection is closed) or -1 in case of error or -4 in case a non-blocking socket would block (i.e. there is nothing to be read). ; Reimplemented from TSocket.; Definition at line 74 of file TPSocket.h. ◆ Recv() [4/4]. Int_t TPSocket::Recv ; (; TMessage *& ; mess). overridevirtual . Receive a TMessage object. ; The user must delete the TMessage object. Returns length of message in bytes (can be 0 if other side of connection is closed) or -1 in case of error or -4 in case a non-blocking socket would block (i.e. there is nothing to be read). In those case mess == 0. ; Reimplemented from TSocket.; Definition at line 626 of file TPSocket.cxx. ◆ RecvRaw(). Int_t TPSocket::RecvRaw ; (; void * ; buffer, . Int_t ; length, . ESendRecvOptions ; opt = kDefault . ). overridevirtual . Send a raw buffer of specified length. ; Returns the number of bytes sent or -1 in case of error. ; Reimplemented fr",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:27506,Integrability,message,message,27506,"er string message of maximum max length. ; Returns in kind the message type. Returns length of received string+4 (can be 0 if other side of connection is closed) or -1 in case of error or -4 in case a non-blocking socket would block (i.e. there is nothing to be read). ; Reimplemented from TSocket.; Definition at line 76 of file TPSocket.h. ◆ Recv() [3/4]. Int_t TPSocket::Recv ; (; Int_t & ; status, . Int_t & ; kind . ). inlineoverridevirtual . Receives a status and a message type. ; Returns length of received integers, 2*sizeof(Int_t) (can be 0 if other side of connection is closed) or -1 in case of error or -4 in case a non-blocking socket would block (i.e. there is nothing to be read). ; Reimplemented from TSocket.; Definition at line 74 of file TPSocket.h. ◆ Recv() [4/4]. Int_t TPSocket::Recv ; (; TMessage *& ; mess). overridevirtual . Receive a TMessage object. ; The user must delete the TMessage object. Returns length of message in bytes (can be 0 if other side of connection is closed) or -1 in case of error or -4 in case a non-blocking socket would block (i.e. there is nothing to be read). In those case mess == 0. ; Reimplemented from TSocket.; Definition at line 626 of file TPSocket.cxx. ◆ RecvRaw(). Int_t TPSocket::RecvRaw ; (; void * ; buffer, . Int_t ; length, . ESendRecvOptions ; opt = kDefault . ). overridevirtual . Send a raw buffer of specified length. ; Returns the number of bytes sent or -1 in case of error. ; Reimplemented from TSocket.; Definition at line 679 of file TPSocket.cxx. ◆ Send() [1/4]. Int_t TPSocket::Send ; (; const char * ; str, . Int_t ; kind = kMESS_STRING . ). inlineoverridevirtual . Send a character string buffer. ; Use kind to set the TMessage ""what"" field. Returns the number of bytes in the string str that were sent and -1 in case of error. In case the kind has been or'ed with kMESS_ACK, the call will only return after having received an acknowledgement, making the sending process synchronous. ; Reimplemented from TSocket.; Defini",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:29193,Integrability,message,message,29193,"overridevirtual . Send a character string buffer. ; Use kind to set the TMessage ""what"" field. Returns the number of bytes in the string str that were sent and -1 in case of error. In case the kind has been or'ed with kMESS_ACK, the call will only return after having received an acknowledgement, making the sending process synchronous. ; Reimplemented from TSocket.; Definition at line 71 of file TPSocket.h. ◆ Send() [2/4]. Int_t TPSocket::Send ; (; const TMessage & ; mess). overridevirtual . Send a TMessage object. ; Returns the number of bytes in the TMessage that were sent and -1 in case of error. In case the TMessage::What has been or'ed with kMESS_ACK, the call will only return after having received an acknowledgement, making the sending process synchronous. Returns -4 in case of kNoBlock and errno == EWOULDBLOCK. ; Reimplemented from TSocket.; Definition at line 483 of file TPSocket.cxx. ◆ Send() [3/4]. Int_t TPSocket::Send ; (; Int_t ; kind). inlineoverridevirtual . Send a single message opcode. ; Use kind (opcode) to set the TMessage ""what"" field. Returns the number of bytes that were sent (always sizeof(Int_t)) and -1 in case of error. In case the kind has been or'ed with kMESS_ACK, the call will only return after having received an acknowledgement, making the sending process synchronous. ; Reimplemented from TSocket.; Definition at line 69 of file TPSocket.h. ◆ Send() [4/4]. Int_t TPSocket::Send ; (; Int_t ; status, . Int_t ; kind . ). inlineoverridevirtual . Send a status and a single message opcode. ; Use kind (opcode) to set the TMessage ""what"" field. Returns the number of bytes that were sent (always 2*sizeof(Int_t)) and -1 in case of error. In case the kind has been or'ed with kMESS_ACK, the call will only return after having received an acknowledgement, making the sending process synchronous. ; Reimplemented from TSocket.; Definition at line 70 of file TPSocket.h. ◆ SendRaw(). Int_t TPSocket::SendRaw ; (; const void * ; buffer, . Int_t ; length, . ESen",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:29712,Integrability,message,message,29712,"object. ; Returns the number of bytes in the TMessage that were sent and -1 in case of error. In case the TMessage::What has been or'ed with kMESS_ACK, the call will only return after having received an acknowledgement, making the sending process synchronous. Returns -4 in case of kNoBlock and errno == EWOULDBLOCK. ; Reimplemented from TSocket.; Definition at line 483 of file TPSocket.cxx. ◆ Send() [3/4]. Int_t TPSocket::Send ; (; Int_t ; kind). inlineoverridevirtual . Send a single message opcode. ; Use kind (opcode) to set the TMessage ""what"" field. Returns the number of bytes that were sent (always sizeof(Int_t)) and -1 in case of error. In case the kind has been or'ed with kMESS_ACK, the call will only return after having received an acknowledgement, making the sending process synchronous. ; Reimplemented from TSocket.; Definition at line 69 of file TPSocket.h. ◆ Send() [4/4]. Int_t TPSocket::Send ; (; Int_t ; status, . Int_t ; kind . ). inlineoverridevirtual . Send a status and a single message opcode. ; Use kind (opcode) to set the TMessage ""what"" field. Returns the number of bytes that were sent (always 2*sizeof(Int_t)) and -1 in case of error. In case the kind has been or'ed with kMESS_ACK, the call will only return after having received an acknowledgement, making the sending process synchronous. ; Reimplemented from TSocket.; Definition at line 70 of file TPSocket.h. ◆ SendRaw(). Int_t TPSocket::SendRaw ; (; const void * ; buffer, . Int_t ; length, . ESendRecvOptions ; opt = kDefault . ). overridevirtual . Send a raw buffer of specified length. ; Returns the number of bytes send and -1 in case of error. ; Reimplemented from TSocket.; Definition at line 545 of file TPSocket.cxx. ◆ SetOption(). Int_t TPSocket::SetOption ; (; ESockOptions ; opt, . Int_t ; val . ). overridevirtual . Set socket options. ; Reimplemented from TSocket.; Definition at line 754 of file TPSocket.cxx. ◆ Streamer(). void TPSocket::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:2831,Modifiability,inherit,inherited,2831," &kind) override;  Receives a status and a message type. ;  ; Int_t Recv (TMessage *&mess) override;  Receive a TMessage object. ;  ; Int_t RecvRaw (void *buffer, Int_t length, ESendRecvOptions opt=kDefault) override;  Send a raw buffer of specified length. ;  ; Int_t Send (const char *mess, Int_t kind=kMESS_STRING) override;  Send a character string buffer. ;  ; Int_t Send (const TMessage &mess) override;  Send a TMessage object. ;  ; Int_t Send (Int_t kind) override;  Send a single message opcode. ;  ; Int_t Send (Int_t status, Int_t kind) override;  Send a status and a single message opcode. ;  ; Int_t SendRaw (const void *buffer, Int_t length, ESendRecvOptions opt=kDefault) override;  Send a raw buffer of specified length. ;  ; Int_t SetOption (ESockOptions opt, Int_t val) override;  Set socket options. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSocket;  TSocket (const char *host, const char *service, Int_t tcpwindowsize=-1);  Create a socket. ;  ;  TSocket (const char *host, Int_t port, Int_t tcpwindowsize=-1);  Create a socket; see CreateAuthSocket for the form of url. ;  ;  TSocket (const char *sockpath);  Create a socket in the Unix domain on 'sockpath'. ;  ;  TSocket (const TSocket &s);  TSocket copy ctor. ;  ;  TSocket (Int_t descriptor);  Create a socket. ;  ;  TSocket (Int_t descriptor, const char *sockpath);  Create a socket. ;  ;  TSocket (TInetAddress address, const char *service, Int_t tcpwindowsize=-1);  Create a socket. ;  ;  TSocket (TInetAddress address, Int_t port, Int_t tcpwindowsize=-1);  Create a socket. ;  ; virtual ~TSocket ();  ; UInt_t GetBytesRecv () const;  ; UInt_t GetBytesSent () const;  ; Int_t GetCompressionAlgorithm () const;  ; Int_t GetCompressionLevel () const;  ; Int_t GetCompressionSettings () const;  ; Int_t GetErrorCode () const;  Returns error code. ;  ; TInetAddress GetInetAddress ",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:5401,Modifiability,inherit,inherited,5401,"et to change status. ;  ; virtual Int_t SendObject (const TObject *obj, Int_t kind=kMESS_OBJECT);  Send an object. ;  ; void SetCompressionAlgorithm (Int_t algorithm=ROOT::RCompressionSetting::EAlgorithm::kUseGlobal);  See comments for function SetCompressionSettings. ;  ; void SetCompressionLevel (Int_t level=ROOT::RCompressionSetting::ELevel::kUseMin);  See comments for function SetCompressionSettings. ;  ; void SetCompressionSettings (Int_t settings=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Used to specify the compression level and algorithm: settings = 100 * algorithm + level. ;  ; void SetRemoteProtocol (Int_t rproto);  ; void SetSecContext (TSecContext *ctx);  ; void SetService (const char *service);  ; void SetServType (Int_t st);  ; void SetUrl (const char *url);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Touch ();  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and tit",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:7029,Modifiability,inherit,inherited,7029,"ual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:8122,Modifiability,inherit,inheritance,8122,"  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:10079,Modifiability,inherit,inherits,10079,"tual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:10196,Modifiability,inherit,inherits,10196,"indObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:13949,Modifiability,inherit,inherited,13949,"r *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSocket; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TSocket * CreateAuthSocket (const char *url, Int_t size=0, Int_t tcpwindowsize=-1, TSocket *s=nullptr, Int_t *err=nullptr);  Creates a socket or a parallel socket and authenticates to the remote server. ;  ; static TSocket * CreateAuthSocket (const char *user, const char *host, Int_t port, Int_t size=0, Int_t tcpwindowsize=-1, TSocket *s=nullptr, Int_t *err=nullptr);  Creates a socket or a parallel socket and authenticates to the remote server specified in 'url' on remote 'port' as 'user'. ;  ; static const char * DeclFileName ();  ; static Int_t GetClientProtocol ();  Static method returning supported client protocol. ;  ; static ULong64_t GetSocketBytesRecv ();  Get total number of bytes received via all sockets. ;  ; static ULong64_t GetSocketBytesSent ();  Get total number of bytes sent via all sockets. ;  ; static void NetError (const char *where, Int_t error);  Print error string depending on error ",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:15056,Modifiability,inherit,inherited,15056,"authenticates to the remote server. ;  ; static TSocket * CreateAuthSocket (const char *user, const char *host, Int_t port, Int_t size=0, Int_t tcpwindowsize=-1, TSocket *s=nullptr, Int_t *err=nullptr);  Creates a socket or a parallel socket and authenticates to the remote server specified in 'url' on remote 'port' as 'user'. ;  ; static const char * DeclFileName ();  ; static Int_t GetClientProtocol ();  Static method returning supported client protocol. ;  ; static ULong64_t GetSocketBytesRecv ();  Get total number of bytes received via all sockets. ;  ; static ULong64_t GetSocketBytesSent ();  Get total number of bytes sent via all sockets. ;  ; static void NetError (const char *where, Int_t error);  Print error string depending on error code. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TPSocket (const TPSocket &)=delete;  ;  TPSocket (TSocket *pSockets[], Int_t size);  Create a parallel socket. This ctor is called by TPServerSocket. ;  ; Option_t * GetOption () const override;  ; void Init (Int_t tcpwindowsize, TSocket *sock=nullptr);  Create a parallel socket to the specified host. ;  ; void operator= (const TPSocket &)=delete;  . Private Attributes; Int_t * fReadBytesLeft = nullptr;  ; TMonitor * fReadMonitor = nullptr;  ; char ** fReadPtr = nullptr;  ; Int_t",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:15266,Modifiability,inherit,inherited,15266,"authenticates to the remote server. ;  ; static TSocket * CreateAuthSocket (const char *user, const char *host, Int_t port, Int_t size=0, Int_t tcpwindowsize=-1, TSocket *s=nullptr, Int_t *err=nullptr);  Creates a socket or a parallel socket and authenticates to the remote server specified in 'url' on remote 'port' as 'user'. ;  ; static const char * DeclFileName ();  ; static Int_t GetClientProtocol ();  Static method returning supported client protocol. ;  ; static ULong64_t GetSocketBytesRecv ();  Get total number of bytes received via all sockets. ;  ; static ULong64_t GetSocketBytesSent ();  Get total number of bytes sent via all sockets. ;  ; static void NetError (const char *where, Int_t error);  Print error string depending on error code. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TPSocket (const TPSocket &)=delete;  ;  TPSocket (TSocket *pSockets[], Int_t size);  Create a parallel socket. This ctor is called by TPServerSocket. ;  ; Option_t * GetOption () const override;  ; void Init (Int_t tcpwindowsize, TSocket *sock=nullptr);  Create a parallel socket to the specified host. ;  ; void operator= (const TPSocket &)=delete;  . Private Attributes; Int_t * fReadBytesLeft = nullptr;  ; TMonitor * fReadMonitor = nullptr;  ; char ** fReadPtr = nullptr;  ; Int_t",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:16495,Modifiability,inherit,inherited,16495,"Stat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TPSocket (const TPSocket &)=delete;  ;  TPSocket (TSocket *pSockets[], Int_t size);  Create a parallel socket. This ctor is called by TPServerSocket. ;  ; Option_t * GetOption () const override;  ; void Init (Int_t tcpwindowsize, TSocket *sock=nullptr);  Create a parallel socket to the specified host. ;  ; void operator= (const TPSocket &)=delete;  . Private Attributes; Int_t * fReadBytesLeft = nullptr;  ; TMonitor * fReadMonitor = nullptr;  ; char ** fReadPtr = nullptr;  ; Int_t fSize;  ; TSocket ** fSockets = nullptr;  ; Int_t * fWriteBytesLeft = nullptr;  ; TMonitor * fWriteMonitor = nullptr;  ; char ** fWritePtr = nullptr;  . Friends; class TPServerSocket;  . Additional Inherited Members;  Public Types inherited from TSocket; enum  EInterest { kRead = 1; , kWrite = 2; };  ; enum  EServiceType { kSOCKD; , kROOTD; , kPROOFD; };  ; enum  EStatusBits { kIsUnix = (1ULL << ( 16 )); , kBrokenConn = (1ULL << ( 17 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TSocket; enum  ESocketErrors { kInvalid = -1; , kInvalidStillInList = -2; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSocket;  TSocket ();  ; Bool_t Authenticate (const char *user);  Authenticated ",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:16726,Modifiability,inherit,inherited,16726,"Stat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TPSocket (const TPSocket &)=delete;  ;  TPSocket (TSocket *pSockets[], Int_t size);  Create a parallel socket. This ctor is called by TPServerSocket. ;  ; Option_t * GetOption () const override;  ; void Init (Int_t tcpwindowsize, TSocket *sock=nullptr);  Create a parallel socket to the specified host. ;  ; void operator= (const TPSocket &)=delete;  . Private Attributes; Int_t * fReadBytesLeft = nullptr;  ; TMonitor * fReadMonitor = nullptr;  ; char ** fReadPtr = nullptr;  ; Int_t fSize;  ; TSocket ** fSockets = nullptr;  ; Int_t * fWriteBytesLeft = nullptr;  ; TMonitor * fWriteMonitor = nullptr;  ; char ** fWritePtr = nullptr;  . Friends; class TPServerSocket;  . Additional Inherited Members;  Public Types inherited from TSocket; enum  EInterest { kRead = 1; , kWrite = 2; };  ; enum  EServiceType { kSOCKD; , kROOTD; , kPROOFD; };  ; enum  EStatusBits { kIsUnix = (1ULL << ( 16 )); , kBrokenConn = (1ULL << ( 17 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TSocket; enum  ESocketErrors { kInvalid = -1; , kInvalidStillInList = -2; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSocket;  TSocket ();  ; Bool_t Authenticate (const char *user);  Authenticated ",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:17367,Modifiability,inherit,inherited,17367,"  EInterest { kRead = 1; , kWrite = 2; };  ; enum  EServiceType { kSOCKD; , kROOTD; , kPROOFD; };  ; enum  EStatusBits { kIsUnix = (1ULL << ( 16 )); , kBrokenConn = (1ULL << ( 17 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TSocket; enum  ESocketErrors { kInvalid = -1; , kInvalidStillInList = -2; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSocket;  TSocket ();  ; Bool_t Authenticate (const char *user);  Authenticated the socket with specified user. ;  ; void MarkBrokenConnection ();  Close the socket and mark as due to a broken connection. ;  ; Bool_t RecvProcessIDs (TMessage *mess);  Receive a message containing process ids. ;  ; Bool_t RecvStreamerInfos (TMessage *mess);  Receive a message containing streamer infos. ;  ; void SendProcessIDs (const TMessage &mess);  Check if TProcessIDs must be sent. ;  ; void SendStreamerInfos (const TMessage &mess);  Check if TStreamerInfo must be sent. ;  ; void SetDescriptor (Int_t desc);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TSocket; TInetAddress fAddress;  ; TBits fBitsInfo;  ; UInt_t fBytesRecv;  ; UIn",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:17479,Modifiability,inherit,inherited,17479,"  EInterest { kRead = 1; , kWrite = 2; };  ; enum  EServiceType { kSOCKD; , kROOTD; , kPROOFD; };  ; enum  EStatusBits { kIsUnix = (1ULL << ( 16 )); , kBrokenConn = (1ULL << ( 17 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TSocket; enum  ESocketErrors { kInvalid = -1; , kInvalidStillInList = -2; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSocket;  TSocket ();  ; Bool_t Authenticate (const char *user);  Authenticated the socket with specified user. ;  ; void MarkBrokenConnection ();  Close the socket and mark as due to a broken connection. ;  ; Bool_t RecvProcessIDs (TMessage *mess);  Receive a message containing process ids. ;  ; Bool_t RecvStreamerInfos (TMessage *mess);  Receive a message containing streamer infos. ;  ; void SendProcessIDs (const TMessage &mess);  Check if TProcessIDs must be sent. ;  ; void SendStreamerInfos (const TMessage &mess);  Check if TStreamerInfo must be sent. ;  ; void SetDescriptor (Int_t desc);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TSocket; TInetAddress fAddress;  ; TBits fBitsInfo;  ; UInt_t fBytesRecv;  ; UIn",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:17578,Modifiability,inherit,inherited,17578,"  EInterest { kRead = 1; , kWrite = 2; };  ; enum  EServiceType { kSOCKD; , kROOTD; , kPROOFD; };  ; enum  EStatusBits { kIsUnix = (1ULL << ( 16 )); , kBrokenConn = (1ULL << ( 17 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TSocket; enum  ESocketErrors { kInvalid = -1; , kInvalidStillInList = -2; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSocket;  TSocket ();  ; Bool_t Authenticate (const char *user);  Authenticated the socket with specified user. ;  ; void MarkBrokenConnection ();  Close the socket and mark as due to a broken connection. ;  ; Bool_t RecvProcessIDs (TMessage *mess);  Receive a message containing process ids. ;  ; Bool_t RecvStreamerInfos (TMessage *mess);  Receive a message containing streamer infos. ;  ; void SendProcessIDs (const TMessage &mess);  Check if TProcessIDs must be sent. ;  ; void SendStreamerInfos (const TMessage &mess);  Check if TStreamerInfo must be sent. ;  ; void SetDescriptor (Int_t desc);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TSocket; TInetAddress fAddress;  ; TBits fBitsInfo;  ; UInt_t fBytesRecv;  ; UIn",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:18224,Modifiability,inherit,inherited,18224," )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TSocket; enum  ESocketErrors { kInvalid = -1; , kInvalidStillInList = -2; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSocket;  TSocket ();  ; Bool_t Authenticate (const char *user);  Authenticated the socket with specified user. ;  ; void MarkBrokenConnection ();  Close the socket and mark as due to a broken connection. ;  ; Bool_t RecvProcessIDs (TMessage *mess);  Receive a message containing process ids. ;  ; Bool_t RecvStreamerInfos (TMessage *mess);  Receive a message containing streamer infos. ;  ; void SendProcessIDs (const TMessage &mess);  Check if TProcessIDs must be sent. ;  ; void SendStreamerInfos (const TMessage &mess);  Check if TStreamerInfo must be sent. ;  ; void SetDescriptor (Int_t desc);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TSocket; TInetAddress fAddress;  ; TBits fBitsInfo;  ; UInt_t fBytesRecv;  ; UInt_t fBytesSent;  ; Int_t fCompress;  ; TTimeStamp fLastUsage;  ; TVirtualMutex * fLastUsageMtx;  ; TInetAddress fLocalAddress;  ; Int_t fRemoteProtocol;  ; TSecContext * fSecContext;  ; TString fService;  ; EServiceType fServType;  ; Int_t fSocket;  ; Int_t fTcpWindowSize;  ; TString fUrl;  ; TList * fUUIDs;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from TSocket; static ULong64_t fgBytesRecv = 0;  ; static ULong64_t fgBytesSent = 0;  ; static Int_t fgClientProtocol = 17;  . #include <TPSocket.h>. Inheritance diagram for TPSocket:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Do",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:18429,Modifiability,inherit,inherited,18429,"tion ();  Close the socket and mark as due to a broken connection. ;  ; Bool_t RecvProcessIDs (TMessage *mess);  Receive a message containing process ids. ;  ; Bool_t RecvStreamerInfos (TMessage *mess);  Receive a message containing streamer infos. ;  ; void SendProcessIDs (const TMessage &mess);  Check if TProcessIDs must be sent. ;  ; void SendStreamerInfos (const TMessage &mess);  Check if TStreamerInfo must be sent. ;  ; void SetDescriptor (Int_t desc);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TSocket; TInetAddress fAddress;  ; TBits fBitsInfo;  ; UInt_t fBytesRecv;  ; UInt_t fBytesSent;  ; Int_t fCompress;  ; TTimeStamp fLastUsage;  ; TVirtualMutex * fLastUsageMtx;  ; TInetAddress fLocalAddress;  ; Int_t fRemoteProtocol;  ; TSecContext * fSecContext;  ; TString fService;  ; EServiceType fServType;  ; Int_t fSocket;  ; Int_t fTcpWindowSize;  ; TString fUrl;  ; TList * fUUIDs;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from TSocket; static ULong64_t fgBytesRecv = 0;  ; static ULong64_t fgBytesSent = 0;  ; static Int_t fgClientProtocol = 17;  . #include <TPSocket.h>. Inheritance diagram for TPSocket:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TPSocket() [1/7]. TPSocket::TPSocket ; (; TSocket * ; pSockets[], . Int_t ; size . ). private . Create a parallel socket. This ctor is called by TPServerSocket. ; Definition at line 266 of file TPSocket.cxx. ◆ TPSocket() [2/7]. TPSocket::TPSocket ; (; const TPSocket & ; ). privatedelete . ◆ TPSocket() [3/7]. TPSocket::TPSocket ; (; TInetAddress ; addr, . const char * ; service, . Int_t ; size, . Int_t ; tcpwindowsize = -1 . ). Create a parallel s",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:18859,Modifiability,inherit,inherited,18859,"tion ();  Close the socket and mark as due to a broken connection. ;  ; Bool_t RecvProcessIDs (TMessage *mess);  Receive a message containing process ids. ;  ; Bool_t RecvStreamerInfos (TMessage *mess);  Receive a message containing streamer infos. ;  ; void SendProcessIDs (const TMessage &mess);  Check if TProcessIDs must be sent. ;  ; void SendStreamerInfos (const TMessage &mess);  Check if TStreamerInfo must be sent. ;  ; void SetDescriptor (Int_t desc);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TSocket; TInetAddress fAddress;  ; TBits fBitsInfo;  ; UInt_t fBytesRecv;  ; UInt_t fBytesSent;  ; Int_t fCompress;  ; TTimeStamp fLastUsage;  ; TVirtualMutex * fLastUsageMtx;  ; TInetAddress fLocalAddress;  ; Int_t fRemoteProtocol;  ; TSecContext * fSecContext;  ; TString fService;  ; EServiceType fServType;  ; Int_t fSocket;  ; Int_t fTcpWindowSize;  ; TString fUrl;  ; TList * fUUIDs;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from TSocket; static ULong64_t fgBytesRecv = 0;  ; static ULong64_t fgBytesSent = 0;  ; static Int_t fgClientProtocol = 17;  . #include <TPSocket.h>. Inheritance diagram for TPSocket:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TPSocket() [1/7]. TPSocket::TPSocket ; (; TSocket * ; pSockets[], . Int_t ; size . ). private . Create a parallel socket. This ctor is called by TPServerSocket. ; Definition at line 266 of file TPSocket.cxx. ◆ TPSocket() [2/7]. TPSocket::TPSocket ; (; const TPSocket & ; ). privatedelete . ◆ TPSocket() [3/7]. TPSocket::TPSocket ; (; TInetAddress ; addr, . const char * ; service, . Int_t ; size, . Int_t ; tcpwindowsize = -1 . ). Create a parallel s",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:18948,Modifiability,inherit,inherited,18948,"tion ();  Close the socket and mark as due to a broken connection. ;  ; Bool_t RecvProcessIDs (TMessage *mess);  Receive a message containing process ids. ;  ; Bool_t RecvStreamerInfos (TMessage *mess);  Receive a message containing streamer infos. ;  ; void SendProcessIDs (const TMessage &mess);  Check if TProcessIDs must be sent. ;  ; void SendStreamerInfos (const TMessage &mess);  Check if TStreamerInfo must be sent. ;  ; void SetDescriptor (Int_t desc);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TSocket; TInetAddress fAddress;  ; TBits fBitsInfo;  ; UInt_t fBytesRecv;  ; UInt_t fBytesSent;  ; Int_t fCompress;  ; TTimeStamp fLastUsage;  ; TVirtualMutex * fLastUsageMtx;  ; TInetAddress fLocalAddress;  ; Int_t fRemoteProtocol;  ; TSecContext * fSecContext;  ; TString fService;  ; EServiceType fServType;  ; Int_t fSocket;  ; Int_t fTcpWindowSize;  ; TString fUrl;  ; TList * fUUIDs;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from TSocket; static ULong64_t fgBytesRecv = 0;  ; static ULong64_t fgBytesSent = 0;  ; static Int_t fgClientProtocol = 17;  . #include <TPSocket.h>. Inheritance diagram for TPSocket:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TPSocket() [1/7]. TPSocket::TPSocket ; (; TSocket * ; pSockets[], . Int_t ; size . ). private . Create a parallel socket. This ctor is called by TPServerSocket. ; Definition at line 266 of file TPSocket.cxx. ◆ TPSocket() [2/7]. TPSocket::TPSocket ; (; const TPSocket & ; ). privatedelete . ◆ TPSocket() [3/7]. TPSocket::TPSocket ; (; TInetAddress ; addr, . const char * ; service, . Int_t ; size, . Int_t ; tcpwindowsize = -1 . ). Create a parallel s",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:22624,Performance,optimiz,optimize,22624,"tion. ; Definition at line 81 of file TPSocket.cxx. ◆ TPSocket() [6/7]. TPSocket::TPSocket ; (; const char * ; host, . Int_t ; port, . Int_t ; size, . Int_t ; tcpwindowsize = -1 . ). Create a parallel socket. ; Connect to specified port # on the remote host. Use tcpwindowsize to specify the size of the receive buffer, it has to be specified here to make sure the window scale option is set (for tcpwindowsize > 65KB and for platforms supporting window scaling). Returns when connection has been accepted by remote side. Use IsValid() to check the validity of the socket. Every socket is added to the TROOT sockets list which will make sure that any open sockets are properly closed on program termination. ; Definition at line 98 of file TPSocket.cxx. ◆ TPSocket() [7/7]. TPSocket::TPSocket ; (; const char * ; host, . Int_t ; port, . Int_t ; size, . TSocket * ; sock . ). Create a parallel socket on a connection already opened via TSocket sock. ; This constructor is provided to optimize TNetFile opening when instatiated via a call to TNetXNGFile. Returns when connection has been accepted by remote side. Use IsValid() to check the validity of the socket. Every socket is added to the TROOT sockets list which will make sure that any open sockets are properly closed on program termination. ; Definition at line 171 of file TPSocket.cxx. ◆ ~TPSocket(). TPSocket::~TPSocket ; (; ). virtual . Cleanup the parallel socket. ; Definition at line 308 of file TPSocket.cxx. Member Function Documentation. ◆ Class(). static TClass * TPSocket::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TPSocket::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TPSocket::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 85 of file TPSocket.h. ◆ Close(). void TPSocket::Close ; (; Option_t * ; option = """"). overridevirtual . Close a parallel socket. ; If option is",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:4379,Safety,timeout,timeout,4379,"TSocket copy ctor. ;  ;  TSocket (Int_t descriptor);  Create a socket. ;  ;  TSocket (Int_t descriptor, const char *sockpath);  Create a socket. ;  ;  TSocket (TInetAddress address, const char *service, Int_t tcpwindowsize=-1);  Create a socket. ;  ;  TSocket (TInetAddress address, Int_t port, Int_t tcpwindowsize=-1);  Create a socket. ;  ; virtual ~TSocket ();  ; UInt_t GetBytesRecv () const;  ; UInt_t GetBytesSent () const;  ; Int_t GetCompressionAlgorithm () const;  ; Int_t GetCompressionLevel () const;  ; Int_t GetCompressionSettings () const;  ; Int_t GetErrorCode () const;  Returns error code. ;  ; TInetAddress GetInetAddress () const;  ; TTimeStamp GetLastUsage ();  ; virtual Int_t GetLocalPort ();  Return the local port # to which the socket is bound. ;  ; Int_t GetPort () const;  ; Int_t GetRemoteProtocol () const;  ; TSecContext * GetSecContext () const;  ; const char * GetService () const;  ; Int_t GetServType () const;  ; Int_t GetTcpWindowSize () const;  ; const char * GetUrl () const;  ; TClass * IsA () const override;  ; virtual Bool_t IsAuthenticated () const;  ; virtual Int_t Reconnect ();  ; virtual Int_t Select (Int_t interest=kRead, Long_t timeout=-1);  Waits for this socket to change status. ;  ; virtual Int_t SendObject (const TObject *obj, Int_t kind=kMESS_OBJECT);  Send an object. ;  ; void SetCompressionAlgorithm (Int_t algorithm=ROOT::RCompressionSetting::EAlgorithm::kUseGlobal);  See comments for function SetCompressionSettings. ;  ; void SetCompressionLevel (Int_t level=ROOT::RCompressionSetting::ELevel::kUseMin);  See comments for function SetCompressionSettings. ;  ; void SetCompressionSettings (Int_t settings=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Used to specify the compression level and algorithm: settings = 100 * algorithm + level. ;  ; void SetRemoteProtocol (Int_t rproto);  ; void SetSecContext (TSecContext *ctx);  ; void SetService (const char *service);  ; void SetServType (Int_t st);  ; void SetUrl (const ",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:6269,Security,hash,hash,6269," an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Touch ();  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this met",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:14262,Security,authenticat,authenticates,14262,"r *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSocket; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TSocket * CreateAuthSocket (const char *url, Int_t size=0, Int_t tcpwindowsize=-1, TSocket *s=nullptr, Int_t *err=nullptr);  Creates a socket or a parallel socket and authenticates to the remote server. ;  ; static TSocket * CreateAuthSocket (const char *user, const char *host, Int_t port, Int_t size=0, Int_t tcpwindowsize=-1, TSocket *s=nullptr, Int_t *err=nullptr);  Creates a socket or a parallel socket and authenticates to the remote server specified in 'url' on remote 'port' as 'user'. ;  ; static const char * DeclFileName ();  ; static Int_t GetClientProtocol ();  Static method returning supported client protocol. ;  ; static ULong64_t GetSocketBytesRecv ();  Get total number of bytes received via all sockets. ;  ; static ULong64_t GetSocketBytesSent ();  Get total number of bytes sent via all sockets. ;  ; static void NetError (const char *where, Int_t error);  Print error string depending on error ",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPSocket.html:14508,Security,authenticat,authenticates,14508,"ning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSocket; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TSocket * CreateAuthSocket (const char *url, Int_t size=0, Int_t tcpwindowsize=-1, TSocket *s=nullptr, Int_t *err=nullptr);  Creates a socket or a parallel socket and authenticates to the remote server. ;  ; static TSocket * CreateAuthSocket (const char *user, const char *host, Int_t port, Int_t size=0, Int_t tcpwindowsize=-1, TSocket *s=nullptr, Int_t *err=nullptr);  Creates a socket or a parallel socket and authenticates to the remote server specified in 'url' on remote 'port' as 'user'. ;  ; static const char * DeclFileName ();  ; static Int_t GetClientProtocol ();  Static method returning supported client protocol. ;  ; static ULong64_t GetSocketBytesRecv ();  Get total number of bytes received via all sockets. ;  ; static ULong64_t GetSocketBytesSent ();  Get total number of bytes sent via all sockets. ;  ; static void NetError (const char *where, Int_t error);  Print error string depending on error code. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ",MatchSource.WIKI,doc/master/classTPSocket.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPSocket.html
https://root.cern/doc/master/classTPyDispatcher.html:2213,Availability,mask,mask,2213,"t_t x, Int_t y, TObject *selected);  ; PyObject * Dispatch (Int_t param);  ; PyObject * Dispatch (Int_t x, Int_t y);  ; PyObject * Dispatch (Long64_t param);  ; PyObject * Dispatch (Long64_t total, Long64_t processed);  ; PyObject * Dispatch (Long64_t total, Long64_t processed, Long64_t bytesread, Float_t initTime, Float_t procTime, Float_t evtrti, Float_t mbrti);  ; PyObject * Dispatch (Long64_t total, Long64_t processed, Long64_t bytesread, Float_t initTime, Float_t procTime, Float_t evtrti, Float_t mbrti, Int_t actw, Int_t tses, Float_t eses);  ; PyObject * Dispatch (Long_t param);  ; PyObject * Dispatch (TEveDigitSet *qs, Int_t idx);  ; PyObject * Dispatch (TEveElement *el);  ; PyObject * Dispatch (TEveTrack *et);  ; PyObject * Dispatch (TEveWindow *window);  ; PyObject * Dispatch (TGFrame *frame);  ; PyObject * Dispatch (TGFrame *frame, Int_t btn);  ; PyObject * Dispatch (TGFrame *frame, Int_t btn, Int_t x, Int_t y);  ; PyObject * Dispatch (TGFrame *frame, UInt_t keysym, UInt_t mask);  ; PyObject * Dispatch (TGListTreeItem *entry);  ; PyObject * Dispatch (TGListTreeItem *entry, Int_t btn);  ; PyObject * Dispatch (TGListTreeItem *entry, Int_t btn, Int_t x, Int_t y);  ; PyObject * Dispatch (TGListTreeItem *entry, UInt_t keysym, UInt_t mask);  ; PyObject * Dispatch (TGListTreeItem *entry, UInt_t mask);  ; PyObject * Dispatch (TGListTreeItem *item, TDNDData *data);  ; PyObject * Dispatch (TGLPhysicalShape *shape);  ; PyObject * Dispatch (TGLPhysicalShape *shape, UInt_t u1, UInt_t u2);  ; PyObject * Dispatch (TGLVEntry *entry, Int_t btn);  ; PyObject * Dispatch (TGLVEntry *entry, Int_t btn, Int_t x, Int_t y);  ; PyObject * Dispatch (TGLViewerBase *viewer);  ; PyObject * Dispatch (TGMdiFrame *frame);  ; PyObject * Dispatch (TGShutterItem *item);  ; PyObject * Dispatch (TGVFileSplitter *frame);  ; PyObject * Dispatch (TList *objs);  ; PyObject * Dispatch (TObject *obj);  ; PyObject * Dispatch (TObject *obj, Bool_t check);  ; PyObject * Dispatch (TObject *obj, UInt_t bu",MatchSource.WIKI,doc/master/classTPyDispatcher.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPyDispatcher.html
https://root.cern/doc/master/classTPyDispatcher.html:2473,Availability,mask,mask,2473,"ong64_t processed, Long64_t bytesread, Float_t initTime, Float_t procTime, Float_t evtrti, Float_t mbrti);  ; PyObject * Dispatch (Long64_t total, Long64_t processed, Long64_t bytesread, Float_t initTime, Float_t procTime, Float_t evtrti, Float_t mbrti, Int_t actw, Int_t tses, Float_t eses);  ; PyObject * Dispatch (Long_t param);  ; PyObject * Dispatch (TEveDigitSet *qs, Int_t idx);  ; PyObject * Dispatch (TEveElement *el);  ; PyObject * Dispatch (TEveTrack *et);  ; PyObject * Dispatch (TEveWindow *window);  ; PyObject * Dispatch (TGFrame *frame);  ; PyObject * Dispatch (TGFrame *frame, Int_t btn);  ; PyObject * Dispatch (TGFrame *frame, Int_t btn, Int_t x, Int_t y);  ; PyObject * Dispatch (TGFrame *frame, UInt_t keysym, UInt_t mask);  ; PyObject * Dispatch (TGListTreeItem *entry);  ; PyObject * Dispatch (TGListTreeItem *entry, Int_t btn);  ; PyObject * Dispatch (TGListTreeItem *entry, Int_t btn, Int_t x, Int_t y);  ; PyObject * Dispatch (TGListTreeItem *entry, UInt_t keysym, UInt_t mask);  ; PyObject * Dispatch (TGListTreeItem *entry, UInt_t mask);  ; PyObject * Dispatch (TGListTreeItem *item, TDNDData *data);  ; PyObject * Dispatch (TGLPhysicalShape *shape);  ; PyObject * Dispatch (TGLPhysicalShape *shape, UInt_t u1, UInt_t u2);  ; PyObject * Dispatch (TGLVEntry *entry, Int_t btn);  ; PyObject * Dispatch (TGLVEntry *entry, Int_t btn, Int_t x, Int_t y);  ; PyObject * Dispatch (TGLViewerBase *viewer);  ; PyObject * Dispatch (TGMdiFrame *frame);  ; PyObject * Dispatch (TGShutterItem *item);  ; PyObject * Dispatch (TGVFileSplitter *frame);  ; PyObject * Dispatch (TList *objs);  ; PyObject * Dispatch (TObject *obj);  ; PyObject * Dispatch (TObject *obj, Bool_t check);  ; PyObject * Dispatch (TObject *obj, UInt_t button, UInt_t state);  ; PyObject * Dispatch (TObject *obj, UInt_t state);  ; PyObject * Dispatch (TPad *selpad, TObject *selected, Int_t event);  ; PyObject * Dispatch (TProofProgressInfo *pi);  ; PyObject * Dispatch (TSlave *slave);  ; PyObject * Dispatch (TS",MatchSource.WIKI,doc/master/classTPyDispatcher.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPyDispatcher.html
https://root.cern/doc/master/classTPyDispatcher.html:2534,Availability,mask,mask,2534,"t_t procTime, Float_t evtrti, Float_t mbrti);  ; PyObject * Dispatch (Long64_t total, Long64_t processed, Long64_t bytesread, Float_t initTime, Float_t procTime, Float_t evtrti, Float_t mbrti, Int_t actw, Int_t tses, Float_t eses);  ; PyObject * Dispatch (Long_t param);  ; PyObject * Dispatch (TEveDigitSet *qs, Int_t idx);  ; PyObject * Dispatch (TEveElement *el);  ; PyObject * Dispatch (TEveTrack *et);  ; PyObject * Dispatch (TEveWindow *window);  ; PyObject * Dispatch (TGFrame *frame);  ; PyObject * Dispatch (TGFrame *frame, Int_t btn);  ; PyObject * Dispatch (TGFrame *frame, Int_t btn, Int_t x, Int_t y);  ; PyObject * Dispatch (TGFrame *frame, UInt_t keysym, UInt_t mask);  ; PyObject * Dispatch (TGListTreeItem *entry);  ; PyObject * Dispatch (TGListTreeItem *entry, Int_t btn);  ; PyObject * Dispatch (TGListTreeItem *entry, Int_t btn, Int_t x, Int_t y);  ; PyObject * Dispatch (TGListTreeItem *entry, UInt_t keysym, UInt_t mask);  ; PyObject * Dispatch (TGListTreeItem *entry, UInt_t mask);  ; PyObject * Dispatch (TGListTreeItem *item, TDNDData *data);  ; PyObject * Dispatch (TGLPhysicalShape *shape);  ; PyObject * Dispatch (TGLPhysicalShape *shape, UInt_t u1, UInt_t u2);  ; PyObject * Dispatch (TGLVEntry *entry, Int_t btn);  ; PyObject * Dispatch (TGLVEntry *entry, Int_t btn, Int_t x, Int_t y);  ; PyObject * Dispatch (TGLViewerBase *viewer);  ; PyObject * Dispatch (TGMdiFrame *frame);  ; PyObject * Dispatch (TGShutterItem *item);  ; PyObject * Dispatch (TGVFileSplitter *frame);  ; PyObject * Dispatch (TList *objs);  ; PyObject * Dispatch (TObject *obj);  ; PyObject * Dispatch (TObject *obj, Bool_t check);  ; PyObject * Dispatch (TObject *obj, UInt_t button, UInt_t state);  ; PyObject * Dispatch (TObject *obj, UInt_t state);  ; PyObject * Dispatch (TPad *selpad, TObject *selected, Int_t event);  ; PyObject * Dispatch (TProofProgressInfo *pi);  ; PyObject * Dispatch (TSlave *slave);  ; PyObject * Dispatch (TSlave *slave, Long64_t total, Long64_t processed);  ; PyObject",MatchSource.WIKI,doc/master/classTPyDispatcher.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPyDispatcher.html
https://root.cern/doc/master/classTPyDispatcher.html:5828,Availability,error,error,5828,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTPyDispatcher.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPyDispatcher.html
https://root.cern/doc/master/classTPyDispatcher.html:5917,Availability,error,error,5917,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTPyDispatcher.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPyDispatcher.html
https://root.cern/doc/master/classTPyDispatcher.html:6072,Availability,error,error,6072,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTPyDispatcher.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPyDispatcher.html
https://root.cern/doc/master/classTPyDispatcher.html:6369,Availability,error,error,6369,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTPyDispatcher.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPyDispatcher.html
https://root.cern/doc/master/classTPyDispatcher.html:11043,Availability,error,error,11043,"ead (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Attributes; PyObject * fCallable;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 ));",MatchSource.WIKI,doc/master/classTPyDispatcher.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPyDispatcher.html
https://root.cern/doc/master/classTPyDispatcher.html:18461,Availability,mask,mask,18461,"ispatch() [22/56]. PyObject * TPyDispatcher::Dispatch ; (; TEveElement * ; el). inline . Definition at line 86 of file TPyDispatcher.h. ◆ Dispatch() [23/56]. PyObject * TPyDispatcher::Dispatch ; (; TEveTrack * ; et). inline . Definition at line 87 of file TPyDispatcher.h. ◆ Dispatch() [24/56]. PyObject * TPyDispatcher::Dispatch ; (; TEveWindow * ; window). inline . Definition at line 88 of file TPyDispatcher.h. ◆ Dispatch() [25/56]. PyObject * TPyDispatcher::Dispatch ; (; TGFrame * ; frame). inline . Definition at line 89 of file TPyDispatcher.h. ◆ Dispatch() [26/56]. PyObject * TPyDispatcher::Dispatch ; (; TGFrame * ; frame, . Int_t ; btn . ). inline . Definition at line 90 of file TPyDispatcher.h. ◆ Dispatch() [27/56]. PyObject * TPyDispatcher::Dispatch ; (; TGFrame * ; frame, . Int_t ; btn, . Int_t ; x, . Int_t ; y . ). inline . Definition at line 91 of file TPyDispatcher.h. ◆ Dispatch() [28/56]. PyObject * TPyDispatcher::Dispatch ; (; TGFrame * ; frame, . UInt_t ; keysym, . UInt_t ; mask . ). inline . Definition at line 95 of file TPyDispatcher.h. ◆ Dispatch() [29/56]. PyObject * TPyDispatcher::Dispatch ; (; TGListTreeItem * ; entry). inline . Definition at line 99 of file TPyDispatcher.h. ◆ Dispatch() [30/56]. PyObject * TPyDispatcher::Dispatch ; (; TGListTreeItem * ; entry, . Int_t ; btn . ). inline . Definition at line 105 of file TPyDispatcher.h. ◆ Dispatch() [31/56]. PyObject * TPyDispatcher::Dispatch ; (; TGListTreeItem * ; entry, . Int_t ; btn, . Int_t ; x, . Int_t ; y . ). inline . Definition at line 106 of file TPyDispatcher.h. ◆ Dispatch() [32/56]. PyObject * TPyDispatcher::Dispatch ; (; TGListTreeItem * ; entry, . UInt_t ; keysym, . UInt_t ; mask . ). inline . Definition at line 101 of file TPyDispatcher.h. ◆ Dispatch() [33/56]. PyObject * TPyDispatcher::Dispatch ; (; TGListTreeItem * ; entry, . UInt_t ; mask . ). inline . Definition at line 100 of file TPyDispatcher.h. ◆ Dispatch() [34/56]. PyObject * TPyDispatcher::Dispatch ; (; TGListTreeItem * ; i",MatchSource.WIKI,doc/master/classTPyDispatcher.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPyDispatcher.html
https://root.cern/doc/master/classTPyDispatcher.html:19144,Availability,mask,mask,19144," of file TPyDispatcher.h. ◆ Dispatch() [27/56]. PyObject * TPyDispatcher::Dispatch ; (; TGFrame * ; frame, . Int_t ; btn, . Int_t ; x, . Int_t ; y . ). inline . Definition at line 91 of file TPyDispatcher.h. ◆ Dispatch() [28/56]. PyObject * TPyDispatcher::Dispatch ; (; TGFrame * ; frame, . UInt_t ; keysym, . UInt_t ; mask . ). inline . Definition at line 95 of file TPyDispatcher.h. ◆ Dispatch() [29/56]. PyObject * TPyDispatcher::Dispatch ; (; TGListTreeItem * ; entry). inline . Definition at line 99 of file TPyDispatcher.h. ◆ Dispatch() [30/56]. PyObject * TPyDispatcher::Dispatch ; (; TGListTreeItem * ; entry, . Int_t ; btn . ). inline . Definition at line 105 of file TPyDispatcher.h. ◆ Dispatch() [31/56]. PyObject * TPyDispatcher::Dispatch ; (; TGListTreeItem * ; entry, . Int_t ; btn, . Int_t ; x, . Int_t ; y . ). inline . Definition at line 106 of file TPyDispatcher.h. ◆ Dispatch() [32/56]. PyObject * TPyDispatcher::Dispatch ; (; TGListTreeItem * ; entry, . UInt_t ; keysym, . UInt_t ; mask . ). inline . Definition at line 101 of file TPyDispatcher.h. ◆ Dispatch() [33/56]. PyObject * TPyDispatcher::Dispatch ; (; TGListTreeItem * ; entry, . UInt_t ; mask . ). inline . Definition at line 100 of file TPyDispatcher.h. ◆ Dispatch() [34/56]. PyObject * TPyDispatcher::Dispatch ; (; TGListTreeItem * ; item, . TDNDData * ; data . ). Definition at line 232 of file TPyDispatcher.cxx. ◆ Dispatch() [35/56]. PyObject * TPyDispatcher::Dispatch ; (; TGLPhysicalShape * ; shape). inline . Definition at line 116 of file TPyDispatcher.h. ◆ Dispatch() [36/56]. PyObject * TPyDispatcher::Dispatch ; (; TGLPhysicalShape * ; shape, . UInt_t ; u1, . UInt_t ; u2 . ). inline . Definition at line 117 of file TPyDispatcher.h. ◆ Dispatch() [37/56]. PyObject * TPyDispatcher::Dispatch ; (; TGLVEntry * ; entry, . Int_t ; btn . ). inline . Definition at line 110 of file TPyDispatcher.h. ◆ Dispatch() [38/56]. PyObject * TPyDispatcher::Dispatch ; (; TGLVEntry * ; entry, . Int_t ; btn, . Int_t ; x, . In",MatchSource.WIKI,doc/master/classTPyDispatcher.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPyDispatcher.html
https://root.cern/doc/master/classTPyDispatcher.html:19310,Availability,mask,mask,19310,"ition at line 91 of file TPyDispatcher.h. ◆ Dispatch() [28/56]. PyObject * TPyDispatcher::Dispatch ; (; TGFrame * ; frame, . UInt_t ; keysym, . UInt_t ; mask . ). inline . Definition at line 95 of file TPyDispatcher.h. ◆ Dispatch() [29/56]. PyObject * TPyDispatcher::Dispatch ; (; TGListTreeItem * ; entry). inline . Definition at line 99 of file TPyDispatcher.h. ◆ Dispatch() [30/56]. PyObject * TPyDispatcher::Dispatch ; (; TGListTreeItem * ; entry, . Int_t ; btn . ). inline . Definition at line 105 of file TPyDispatcher.h. ◆ Dispatch() [31/56]. PyObject * TPyDispatcher::Dispatch ; (; TGListTreeItem * ; entry, . Int_t ; btn, . Int_t ; x, . Int_t ; y . ). inline . Definition at line 106 of file TPyDispatcher.h. ◆ Dispatch() [32/56]. PyObject * TPyDispatcher::Dispatch ; (; TGListTreeItem * ; entry, . UInt_t ; keysym, . UInt_t ; mask . ). inline . Definition at line 101 of file TPyDispatcher.h. ◆ Dispatch() [33/56]. PyObject * TPyDispatcher::Dispatch ; (; TGListTreeItem * ; entry, . UInt_t ; mask . ). inline . Definition at line 100 of file TPyDispatcher.h. ◆ Dispatch() [34/56]. PyObject * TPyDispatcher::Dispatch ; (; TGListTreeItem * ; item, . TDNDData * ; data . ). Definition at line 232 of file TPyDispatcher.cxx. ◆ Dispatch() [35/56]. PyObject * TPyDispatcher::Dispatch ; (; TGLPhysicalShape * ; shape). inline . Definition at line 116 of file TPyDispatcher.h. ◆ Dispatch() [36/56]. PyObject * TPyDispatcher::Dispatch ; (; TGLPhysicalShape * ; shape, . UInt_t ; u1, . UInt_t ; u2 . ). inline . Definition at line 117 of file TPyDispatcher.h. ◆ Dispatch() [37/56]. PyObject * TPyDispatcher::Dispatch ; (; TGLVEntry * ; entry, . Int_t ; btn . ). inline . Definition at line 110 of file TPyDispatcher.h. ◆ Dispatch() [38/56]. PyObject * TPyDispatcher::Dispatch ; (; TGLVEntry * ; entry, . Int_t ; btn, . Int_t ; x, . Int_t ; y . ). inline . Definition at line 111 of file TPyDispatcher.h. ◆ Dispatch() [39/56]. PyObject * TPyDispatcher::Dispatch ; (; TGLViewerBase * ; viewer). inline ",MatchSource.WIKI,doc/master/classTPyDispatcher.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPyDispatcher.html
https://root.cern/doc/master/classTPyDispatcher.html:5834,Integrability,message,message,5834,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTPyDispatcher.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPyDispatcher.html
https://root.cern/doc/master/classTPyDispatcher.html:6375,Integrability,message,message,6375,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTPyDispatcher.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPyDispatcher.html
https://root.cern/doc/master/classTPyDispatcher.html:7577,Integrability,message,message,7577,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const ch",MatchSource.WIKI,doc/master/classTPyDispatcher.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPyDispatcher.html
https://root.cern/doc/master/classTPyDispatcher.html:11049,Integrability,message,message,11049,"ead (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Attributes; PyObject * fCallable;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 ));",MatchSource.WIKI,doc/master/classTPyDispatcher.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPyDispatcher.html
https://root.cern/doc/master/classTPyDispatcher.html:11422,Integrability,message,message,11422,"rimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Attributes; PyObject * fCallable;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). }; ",MatchSource.WIKI,doc/master/classTPyDispatcher.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPyDispatcher.html
https://root.cern/doc/master/classTPyDispatcher.html:4067,Modifiability,inherit,inherited,4067,"PyObject * Dispatch (TObject *obj);  ; PyObject * Dispatch (TObject *obj, Bool_t check);  ; PyObject * Dispatch (TObject *obj, UInt_t button, UInt_t state);  ; PyObject * Dispatch (TObject *obj, UInt_t state);  ; PyObject * Dispatch (TPad *selpad, TObject *selected, Int_t event);  ; PyObject * Dispatch (TProofProgressInfo *pi);  ; PyObject * Dispatch (TSlave *slave);  ; PyObject * Dispatch (TSlave *slave, Long64_t total, Long64_t processed);  ; PyObject * Dispatch (TSlave *slave, TProofProgressInfo *pi);  ; PyObject * Dispatch (TSocket *sock);  ; PyObject * Dispatch (TVirtualPad *pad);  ; PyObject * Dispatch (TVirtualPad *pad, TObject *obj, Int_t event);  ; PyObject * Dispatch (ULong_t param);  ; PyObject * DispatchVA (const char *format=0,...);  ; PyObject * DispatchVA1 (const char *clname, void *obj, const char *format,...);  ; TPyDispatcher & operator= (const TPyDispatcher &);  Assignment operator. Applies python object reference counting. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;",MatchSource.WIKI,doc/master/classTPyDispatcher.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPyDispatcher.html
https://root.cern/doc/master/classTPyDispatcher.html:5464,Modifiability,inherit,inheritance,5464,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTPyDispatcher.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPyDispatcher.html
https://root.cern/doc/master/classTPyDispatcher.html:7675,Modifiability,inherit,inherits,7675,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a b",MatchSource.WIKI,doc/master/classTPyDispatcher.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPyDispatcher.html
https://root.cern/doc/master/classTPyDispatcher.html:7792,Modifiability,inherit,inherits,7792,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not pro",MatchSource.WIKI,doc/master/classTPyDispatcher.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPyDispatcher.html
https://root.cern/doc/master/classTPyDispatcher.html:11793,Modifiability,inherit,inherited,11793,"m an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Attributes; PyObject * fCallable;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObject",MatchSource.WIKI,doc/master/classTPyDispatcher.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPyDispatcher.html
https://root.cern/doc/master/classTPyDispatcher.html:12449,Modifiability,inherit,inherited,12449," directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Attributes; PyObject * fCallable;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TPyDispatcher.h>. Inheritance diagram for TPyDispatcher:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TPyDispatcher() [1/2]. TPyDispatcher::TPyDispatcher ; (; PyObject * ; callable). Definition at line 32 of file",MatchSource.WIKI,doc/master/classTPyDispatcher.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPyDispatcher.html
https://root.cern/doc/master/classTPyDispatcher.html:12952,Modifiability,inherit,inherited,12952," 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TPyDispatcher.h>. Inheritance diagram for TPyDispatcher:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TPyDispatcher() [1/2]. TPyDispatcher::TPyDispatcher ; (; PyObject * ; callable). Definition at line 32 of file TPyDispatcher.cxx. ◆ TPyDispatcher() [2/2]. TPyDispatcher::TPyDispatcher ; (; const TPyDispatcher & ; other). Copy constructor. Applies python object reference counting. ; Definition at line 43 of file TPyDispatcher.cxx. ◆ ~TPyDispatcher(). TPyDispatcher::~TPyDispatcher ; (; ). Destructor. Reference counting for the held python object is in effect. ; Definition at line 68 of file TPyDispatcher.cxx. Member Function Documentation. ◆ Dispatch() [1/56]. PyObject * TPyDispatcher::Dispatch ; (; ). inline . Definition",MatchSource.WIKI,doc/master/classTPyDispatcher.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPyDispatcher.html
https://root.cern/doc/master/classTPyDispatcher.html:13051,Modifiability,inherit,inherited,13051," 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TPyDispatcher.h>. Inheritance diagram for TPyDispatcher:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TPyDispatcher() [1/2]. TPyDispatcher::TPyDispatcher ; (; PyObject * ; callable). Definition at line 32 of file TPyDispatcher.cxx. ◆ TPyDispatcher() [2/2]. TPyDispatcher::TPyDispatcher ; (; const TPyDispatcher & ; other). Copy constructor. Applies python object reference counting. ; Definition at line 43 of file TPyDispatcher.cxx. ◆ ~TPyDispatcher(). TPyDispatcher::~TPyDispatcher ; (; ). Destructor. Reference counting for the held python object is in effect. ; Definition at line 68 of file TPyDispatcher.cxx. Member Function Documentation. ◆ Dispatch() [1/56]. PyObject * TPyDispatcher::Dispatch ; (; ). inline . Definition",MatchSource.WIKI,doc/master/classTPyDispatcher.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPyDispatcher.html
https://root.cern/doc/master/classTPyDispatcher.html:7306,Security,hash,hash,7306," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other obje",MatchSource.WIKI,doc/master/classTPyDispatcher.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPyDispatcher.html
https://root.cern/doc/master/classTPython-members.html:187,Modifiability,inherit,inherited,187,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TPython Member List. This is the complete list of members for TPython, including all inherited members. Eval(const char *expr) R__DEPRECATED(6TPythonstatic; Exec(const char *cmd, std::any *result=nullptr, std::string const &resultName=""_anyresult"")TPythonstatic; ExecScript(const char *name, int argc=0, const char **argv=nullptr)TPythonstatic; Import(const char *name)TPythonstatic; Initialize()TPythonprivatestatic; LoadMacro(const char *name)TPythonstatic. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:18 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/classTPython-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPython-members.html
https://root.cern/doc/master/classTPython.html:3815,Availability,avail,available,3815,"s verifying that you deal with a PyROOT python object in the first place (CPPInstance_Check for CPPInstance and any derived types, as well as CPPInstance_CheckExact for CPPInstance's only); and it allows conversions of void* to an CPPInstance and vice versa. ; Definition at line 44 of file TPython.h. Static Public Member Functions; static const TPyReturn Eval (const char *expr) R__DEPRECATED(6;  Evaluate a python expression (e.g. ;  ; static Bool_t Exec (const char *cmd, std::any *result=nullptr, std::string const &resultName=""_anyresult"");  Executes a Python command within the current Python environment. ;  ; static void ExecScript (const char *name, int argc=0, const char **argv=nullptr);  Execute a python stand-alone script, with argv CLI arguments. ;  ; static Bool_t Import (const char *name);  Import the named python module and create Cling equivalents for its classes and methods. ;  ; static void LoadMacro (const char *name);  Execute the give python script as if it were a macro (effectively an execfile in main), and create Cling equivalents for any newly available python classes. ;  . Static Private Member Functions; static Bool_t Initialize ();  Initialization method: setup the python interpreter and load the ROOT module. ;  . #include <TPython.h>; Member Function Documentation. ◆ Eval(). const TPyReturn TPython::Eval ; (; const char * ; expr). static . Evaluate a python expression (e.g. ; ""ROOT.TBrowser()"").; Caution: do not hold on to the return value: either store it in a builtin type (implicit casting will work), or in a pointer to a ROOT object (explicit casting to a void* is required).; Deprecated:Use TPython::Exec() with an std::any output parameter instead. ; Definition at line 465 of file TPython.cxx. ◆ Exec(). Bool_t TPython::Exec ; (; const char * ; cmd, . std::any * ; result = nullptr, . std::string const & ; resultName = ""_anyresult"" . ). static . Executes a Python command within the current Python environment. ; This function initializes the Pyt",MatchSource.WIKI,doc/master/classTPython.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPython.html
https://root.cern/doc/master/classTPython.html:6684,Availability,avail,available,6684,"zero, the result parameter will be swapped with a std::any variable on the Python side. You need to define this variable yourself, and it needs to be of type std::any and its name needs to be ""_anyresult"" by default. Like this, you can pass information from Python back to C++.; Parameters. cmdThe Python command to be executed as a string. ; resultOptional pointer to a std::any object that can be used to transfer results from Python to C++. ; resultNameName of the Python variable that is swapped over to the std::any result. The default value is ""_anyresult"". . Returnsbool Returns true if the command was successfully executed, otherwise returns false. ; Definition at line 425 of file TPython.cxx. ◆ ExecScript(). void TPython::ExecScript ; (; const char * ; name, . int ; argc = 0, . const char ** ; argv = nullptr . ). static . Execute a python stand-alone script, with argv CLI arguments. ; example of use: const char* argv[] = { ""1"", ""2"", ""3"" }; TPython::ExecScript( ""test.py"", sizeof(argv)/sizeof(argv[0]), argv ); ; Definition at line 381 of file TPython.cxx. ◆ Import(). Bool_t TPython::Import ; (; const char * ; name). static . Import the named python module and create Cling equivalents for its classes and methods. ; Definition at line 237 of file TPython.cxx. ◆ Initialize(). Bool_t TPython::Initialize ; (; ). staticprivate . Initialization method: setup the python interpreter and load the ROOT module. ; Definition at line 137 of file TPython.cxx. ◆ LoadMacro(). void TPython::LoadMacro ; (; const char * ; name). static . Execute the give python script as if it were a macro (effectively an execfile in main), and create Cling equivalents for any newly available python classes. ; Definition at line 305 of file TPython.cxx. The documentation for this class was generated from the following files:; bindings/tpython/inc/TPython.h; bindings/tpython/src/TPython.cxx. TPython. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:18 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/classTPython.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPython.html
https://root.cern/doc/master/classTPython.html:5068,Modifiability,variab,variable,5068,"cumentation. ◆ Eval(). const TPyReturn TPython::Eval ; (; const char * ; expr). static . Evaluate a python expression (e.g. ; ""ROOT.TBrowser()"").; Caution: do not hold on to the return value: either store it in a builtin type (implicit casting will work), or in a pointer to a ROOT object (explicit casting to a void* is required).; Deprecated:Use TPython::Exec() with an std::any output parameter instead. ; Definition at line 465 of file TPython.cxx. ◆ Exec(). Bool_t TPython::Exec ; (; const char * ; cmd, . std::any * ; result = nullptr, . std::string const & ; resultName = ""_anyresult"" . ). static . Executes a Python command within the current Python environment. ; This function initializes the Python environment if it is not already initialized. It then executes the specified Python command string using the Python C API.; In the Python command, you can change the value of a special TPyResult object returned by TPyBuffer(). If the optional result parameter is non-zero, the result parameter will be swapped with a std::any variable on the Python side. You need to define this variable yourself, and it needs to be of type std::any and its name needs to be ""_anyresult"" by default. Like this, you can pass information from Python back to C++.; Parameters. cmdThe Python command to be executed as a string. ; resultOptional pointer to a std::any object that can be used to transfer results from Python to C++. ; resultNameName of the Python variable that is swapped over to the std::any result. The default value is ""_anyresult"". . Returnsbool Returns true if the command was successfully executed, otherwise returns false. ; Definition at line 425 of file TPython.cxx. ◆ ExecScript(). void TPython::ExecScript ; (; const char * ; name, . int ; argc = 0, . const char ** ; argv = nullptr . ). static . Execute a python stand-alone script, with argv CLI arguments. ; example of use: const char* argv[] = { ""1"", ""2"", ""3"" }; TPython::ExecScript( ""test.py"", sizeof(argv)/sizeof(argv[0]), argv ",MatchSource.WIKI,doc/master/classTPython.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPython.html
https://root.cern/doc/master/classTPython.html:5121,Modifiability,variab,variable,5121,"OOT.TBrowser()"").; Caution: do not hold on to the return value: either store it in a builtin type (implicit casting will work), or in a pointer to a ROOT object (explicit casting to a void* is required).; Deprecated:Use TPython::Exec() with an std::any output parameter instead. ; Definition at line 465 of file TPython.cxx. ◆ Exec(). Bool_t TPython::Exec ; (; const char * ; cmd, . std::any * ; result = nullptr, . std::string const & ; resultName = ""_anyresult"" . ). static . Executes a Python command within the current Python environment. ; This function initializes the Python environment if it is not already initialized. It then executes the specified Python command string using the Python C API.; In the Python command, you can change the value of a special TPyResult object returned by TPyBuffer(). If the optional result parameter is non-zero, the result parameter will be swapped with a std::any variable on the Python side. You need to define this variable yourself, and it needs to be of type std::any and its name needs to be ""_anyresult"" by default. Like this, you can pass information from Python back to C++.; Parameters. cmdThe Python command to be executed as a string. ; resultOptional pointer to a std::any object that can be used to transfer results from Python to C++. ; resultNameName of the Python variable that is swapped over to the std::any result. The default value is ""_anyresult"". . Returnsbool Returns true if the command was successfully executed, otherwise returns false. ; Definition at line 425 of file TPython.cxx. ◆ ExecScript(). void TPython::ExecScript ; (; const char * ; name, . int ; argc = 0, . const char ** ; argv = nullptr . ). static . Execute a python stand-alone script, with argv CLI arguments. ; example of use: const char* argv[] = { ""1"", ""2"", ""3"" }; TPython::ExecScript( ""test.py"", sizeof(argv)/sizeof(argv[0]), argv ); ; Definition at line 381 of file TPython.cxx. ◆ Import(). Bool_t TPython::Import ; (; const char * ; name). static . Import th",MatchSource.WIKI,doc/master/classTPython.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPython.html
https://root.cern/doc/master/classTPython.html:5484,Modifiability,variab,variable,5484," Bool_t TPython::Exec ; (; const char * ; cmd, . std::any * ; result = nullptr, . std::string const & ; resultName = ""_anyresult"" . ). static . Executes a Python command within the current Python environment. ; This function initializes the Python environment if it is not already initialized. It then executes the specified Python command string using the Python C API.; In the Python command, you can change the value of a special TPyResult object returned by TPyBuffer(). If the optional result parameter is non-zero, the result parameter will be swapped with a std::any variable on the Python side. You need to define this variable yourself, and it needs to be of type std::any and its name needs to be ""_anyresult"" by default. Like this, you can pass information from Python back to C++.; Parameters. cmdThe Python command to be executed as a string. ; resultOptional pointer to a std::any object that can be used to transfer results from Python to C++. ; resultNameName of the Python variable that is swapped over to the std::any result. The default value is ""_anyresult"". . Returnsbool Returns true if the command was successfully executed, otherwise returns false. ; Definition at line 425 of file TPython.cxx. ◆ ExecScript(). void TPython::ExecScript ; (; const char * ; name, . int ; argc = 0, . const char ** ; argv = nullptr . ). static . Execute a python stand-alone script, with argv CLI arguments. ; example of use: const char* argv[] = { ""1"", ""2"", ""3"" }; TPython::ExecScript( ""test.py"", sizeof(argv)/sizeof(argv[0]), argv ); ; Definition at line 381 of file TPython.cxx. ◆ Import(). Bool_t TPython::Import ; (; const char * ; name). static . Import the named python module and create Cling equivalents for its classes and methods. ; Definition at line 237 of file TPython.cxx. ◆ Initialize(). Bool_t TPython::Initialize ; (; ). staticprivate . Initialization method: setup the python interpreter and load the ROOT module. ; Definition at line 137 of file TPython.cxx. ◆ LoadMacro(). vo",MatchSource.WIKI,doc/master/classTPython.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPython.html
https://root.cern/doc/master/classTPython.html:1886,Performance,load,load,1886,"ot [2] TPython::Exec(""_anyresult = ROOT.std.make_any['TNamed']('hello', '')"", &res1);; root [3] TPython::Bind(&std::any_cast<TNamed&>(res1), ""n"");; root [4] std::any res2;; root [5] TPython::Exec(""_anyresult = ROOT.std.make_any['TNamed*', 'TNamed*'](n)"", &res2);; root [6] (&std::any_cast<TNamed&>(res1) == std::any_cast<TNamed*>(res2)); (bool) true; ; // Variables can cross-over by using an `std::any` with a specific name.; root [6] TPython::Exec(""_anyresult = ROOT.std.make_any['Int_t'](1 + 1)"", &res1);; root [7] std::any_cast<int>(res1); (int) 2; TPython::Execstatic Bool_t Exec(const char *cmd, std::any *result=nullptr, std::string const &resultName=""_anyresult"")Executes a Python command within the current Python environment.Definition TPython.cxx:425; int; lTLine lDefinition textangle.C:4; And with a python file MyPyClass.py like this: print 'creating class MyPyClass ... '; ; class MyPyClass:; def __init__( self ):; print 'in MyPyClass.__init__'; ; def gime( self, what ):; return what; one can load a python module, and use the class. Casts are necessary as the type information can not be otherwise derived. root [6] TPython::LoadMacro( ""MyPyClass.py"" );; creating class MyPyClass ...; root [7] MyPyClass m;; in MyPyClass.__init__; root [8] std::string s = (char*)m.gime( ""aap"" );; root [9] s; (class TString)""aap""; TPython::LoadMacrostatic void LoadMacro(const char *name)Execute the give python script as if it were a macro (effectively an execfile in main),...Definition TPython.cxx:305; TStringBasic string class.Definition TString.h:139; mTMarker mDefinition textangle.C:8; It is possible to switch between interpreters by calling TPython::Prompt() on the Cling side, while returning with ^D (EOF). State is preserved between successive switches.; The API part provides (direct) C++ access to the bindings functionality of PyROOT. It allows verifying that you deal with a PyROOT python object in the first place (CPPInstance_Check for CPPInstance and any derived types, as well a",MatchSource.WIKI,doc/master/classTPython.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPython.html
https://root.cern/doc/master/classTPython.html:3965,Performance,load,load,3965,"ce's only); and it allows conversions of void* to an CPPInstance and vice versa. ; Definition at line 44 of file TPython.h. Static Public Member Functions; static const TPyReturn Eval (const char *expr) R__DEPRECATED(6;  Evaluate a python expression (e.g. ;  ; static Bool_t Exec (const char *cmd, std::any *result=nullptr, std::string const &resultName=""_anyresult"");  Executes a Python command within the current Python environment. ;  ; static void ExecScript (const char *name, int argc=0, const char **argv=nullptr);  Execute a python stand-alone script, with argv CLI arguments. ;  ; static Bool_t Import (const char *name);  Import the named python module and create Cling equivalents for its classes and methods. ;  ; static void LoadMacro (const char *name);  Execute the give python script as if it were a macro (effectively an execfile in main), and create Cling equivalents for any newly available python classes. ;  . Static Private Member Functions; static Bool_t Initialize ();  Initialization method: setup the python interpreter and load the ROOT module. ;  . #include <TPython.h>; Member Function Documentation. ◆ Eval(). const TPyReturn TPython::Eval ; (; const char * ; expr). static . Evaluate a python expression (e.g. ; ""ROOT.TBrowser()"").; Caution: do not hold on to the return value: either store it in a builtin type (implicit casting will work), or in a pointer to a ROOT object (explicit casting to a void* is required).; Deprecated:Use TPython::Exec() with an std::any output parameter instead. ; Definition at line 465 of file TPython.cxx. ◆ Exec(). Bool_t TPython::Exec ; (; const char * ; cmd, . std::any * ; result = nullptr, . std::string const & ; resultName = ""_anyresult"" . ). static . Executes a Python command within the current Python environment. ; This function initializes the Python environment if it is not already initialized. It then executes the specified Python command string using the Python C API.; In the Python command, you can change the value of",MatchSource.WIKI,doc/master/classTPython.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPython.html
https://root.cern/doc/master/classTPython.html:6410,Performance,load,load,6410,"zero, the result parameter will be swapped with a std::any variable on the Python side. You need to define this variable yourself, and it needs to be of type std::any and its name needs to be ""_anyresult"" by default. Like this, you can pass information from Python back to C++.; Parameters. cmdThe Python command to be executed as a string. ; resultOptional pointer to a std::any object that can be used to transfer results from Python to C++. ; resultNameName of the Python variable that is swapped over to the std::any result. The default value is ""_anyresult"". . Returnsbool Returns true if the command was successfully executed, otherwise returns false. ; Definition at line 425 of file TPython.cxx. ◆ ExecScript(). void TPython::ExecScript ; (; const char * ; name, . int ; argc = 0, . const char ** ; argv = nullptr . ). static . Execute a python stand-alone script, with argv CLI arguments. ; example of use: const char* argv[] = { ""1"", ""2"", ""3"" }; TPython::ExecScript( ""test.py"", sizeof(argv)/sizeof(argv[0]), argv ); ; Definition at line 381 of file TPython.cxx. ◆ Import(). Bool_t TPython::Import ; (; const char * ; name). static . Import the named python module and create Cling equivalents for its classes and methods. ; Definition at line 237 of file TPython.cxx. ◆ Initialize(). Bool_t TPython::Initialize ; (; ). staticprivate . Initialization method: setup the python interpreter and load the ROOT module. ; Definition at line 137 of file TPython.cxx. ◆ LoadMacro(). void TPython::LoadMacro ; (; const char * ; name). static . Execute the give python script as if it were a macro (effectively an execfile in main), and create Cling equivalents for any newly available python classes. ; Definition at line 305 of file TPython.cxx. The documentation for this class was generated from the following files:; bindings/tpython/inc/TPython.h; bindings/tpython/src/TPython.cxx. TPython. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:18 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/classTPython.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPython.html
https://root.cern/doc/master/classTPython.html:329,Security,access,access,329,". ROOT: TPython Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; Static Private Member Functions |; List of all members ; TPython Class Reference. ; Accessing the Python interpreter from C++. ; The TPython class allows for access to python objects from Cling. The current functionality is only basic: ROOT objects and builtin types can freely cross the boundary between the two interpreters, python objects can be instantiated and their methods can be called. All other cross-coding is based on strings that are run on the python interpreter.; Examples:; $ root -l; // Execute a string of python code.; root [0] TPython::Exec( ""print('Hello World!')"" );; Hello World!; ; // Create a TNamed on the python side, and transfer it back and forth.; root [1] std::any res1;; root [2] TPython::Exec(""_anyresult = ROOT.std.make_any['TNamed']('hello', '')"", &res1);; root [3] TPython::Bind(&std::any_cast<TNamed&>(res1), ""n"");; root [4] std::any res2;; root [5] TPython::Exec(""_anyresult = ROOT.std.make_any['TNamed*', 'TNamed*'](n)"", &res2);; root [6] (&std::any_cast<TNamed&>(res1) == std::any_cast<TNamed*>(res2)); (bool) true; ; // Variables can cross-over by using an `std::any` with a specific name.; root [6] TPython::Exec(""_anyresult = ROOT.std.make_any['Int_t'](1 + 1)"", &res1);; root [7] std::any_cast<int>(res1); (int) 2; TPython::Execstatic Bool_t Exec(const char *cmd, std::any *result=nullptr, std::string const &resultName=""_anyresult"")Executes a Python command within the current Python environment.Definition TPython.cxx:425; int; lTLine lDefinition textangle.C:4; And with a python file MyPyClass.py like this: print 'creating class MyPyClass ... '; ; class MyPyClass:; def __init__( self ):; print 'in MyPyClass.__init__'; ; def gime( self, what ):; return what; one can load a python module, and use the class. Casts are necessary as the type information can not be otherwise derived. ",MatchSource.WIKI,doc/master/classTPython.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPython.html
https://root.cern/doc/master/classTPython.html:2681,Security,access,access,2681," a python file MyPyClass.py like this: print 'creating class MyPyClass ... '; ; class MyPyClass:; def __init__( self ):; print 'in MyPyClass.__init__'; ; def gime( self, what ):; return what; one can load a python module, and use the class. Casts are necessary as the type information can not be otherwise derived. root [6] TPython::LoadMacro( ""MyPyClass.py"" );; creating class MyPyClass ...; root [7] MyPyClass m;; in MyPyClass.__init__; root [8] std::string s = (char*)m.gime( ""aap"" );; root [9] s; (class TString)""aap""; TPython::LoadMacrostatic void LoadMacro(const char *name)Execute the give python script as if it were a macro (effectively an execfile in main),...Definition TPython.cxx:305; TStringBasic string class.Definition TString.h:139; mTMarker mDefinition textangle.C:8; It is possible to switch between interpreters by calling TPython::Prompt() on the Cling side, while returning with ^D (EOF). State is preserved between successive switches.; The API part provides (direct) C++ access to the bindings functionality of PyROOT. It allows verifying that you deal with a PyROOT python object in the first place (CPPInstance_Check for CPPInstance and any derived types, as well as CPPInstance_CheckExact for CPPInstance's only); and it allows conversions of void* to an CPPInstance and vice versa. ; Definition at line 44 of file TPython.h. Static Public Member Functions; static const TPyReturn Eval (const char *expr) R__DEPRECATED(6;  Evaluate a python expression (e.g. ;  ; static Bool_t Exec (const char *cmd, std::any *result=nullptr, std::string const &resultName=""_anyresult"");  Executes a Python command within the current Python environment. ;  ; static void ExecScript (const char *name, int argc=0, const char **argv=nullptr);  Execute a python stand-alone script, with argv CLI arguments. ;  ; static Bool_t Import (const char *name);  Import the named python module and create Cling equivalents for its classes and methods. ;  ; static void LoadMacro (const char *name);  Ex",MatchSource.WIKI,doc/master/classTPython.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPython.html
https://root.cern/doc/master/classTPython.html:5987,Testability,test,test,5987,"ned by TPyBuffer(). If the optional result parameter is non-zero, the result parameter will be swapped with a std::any variable on the Python side. You need to define this variable yourself, and it needs to be of type std::any and its name needs to be ""_anyresult"" by default. Like this, you can pass information from Python back to C++.; Parameters. cmdThe Python command to be executed as a string. ; resultOptional pointer to a std::any object that can be used to transfer results from Python to C++. ; resultNameName of the Python variable that is swapped over to the std::any result. The default value is ""_anyresult"". . Returnsbool Returns true if the command was successfully executed, otherwise returns false. ; Definition at line 425 of file TPython.cxx. ◆ ExecScript(). void TPython::ExecScript ; (; const char * ; name, . int ; argc = 0, . const char ** ; argv = nullptr . ). static . Execute a python stand-alone script, with argv CLI arguments. ; example of use: const char* argv[] = { ""1"", ""2"", ""3"" }; TPython::ExecScript( ""test.py"", sizeof(argv)/sizeof(argv[0]), argv ); ; Definition at line 381 of file TPython.cxx. ◆ Import(). Bool_t TPython::Import ; (; const char * ; name). static . Import the named python module and create Cling equivalents for its classes and methods. ; Definition at line 237 of file TPython.cxx. ◆ Initialize(). Bool_t TPython::Initialize ; (; ). staticprivate . Initialization method: setup the python interpreter and load the ROOT module. ; Definition at line 137 of file TPython.cxx. ◆ LoadMacro(). void TPython::LoadMacro ; (; const char * ; name). static . Execute the give python script as if it were a macro (effectively an execfile in main), and create Cling equivalents for any newly available python classes. ; Definition at line 305 of file TPython.cxx. The documentation for this class was generated from the following files:; bindings/tpython/inc/TPython.h; bindings/tpython/src/TPython.cxx. TPython. ROOT master - Reference Guide Generated on T",MatchSource.WIKI,doc/master/classTPython.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTPython.html
https://root.cern/doc/master/classTQClass.html:26502,Availability,error,error,26502," *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:26591,Availability,error,error,26591,"ave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:26746,Availability,error,error,26746,"hether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:27043,Availability,error,error,27043,"ct. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:30755,Availability,error,error,30755,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; stati",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:21683,Deployability,install,installs,21683,";  Create the collection proxy object (and the streamer object) from using the information in the TCollectionProxyInfo. ;  ; void SetContextMenuTitle (const char *title);  Change (i.e. set) the title of the TNamed. ;  ; void SetConvStreamerFunc (ClassConvStreamerFunc_t strm);  Set a wrapper/accessor function around this class custom conversion streamer. ;  ; void SetCurrentStreamerInfo (TVirtualStreamerInfo *info);  Set pointer to current TVirtualStreamerInfo. ;  ; void SetDeclFile (const char *name, Short_t line);  ; void SetDelete (ROOT::DelFunc_t deleteFunc);  Install a new wrapper around 'delete'. ;  ; void SetDeleteArray (ROOT::DelArrFunc_t deleteArrayFunc);  Install a new wrapper around 'delete []'. ;  ; void SetDestructor (ROOT::DesFunc_t destructorFunc);  Install a new wrapper around the destructor. ;  ; void SetDirectoryAutoAdd (ROOT::DirAutoAdd_t dirAutoAddFunc);  Install a new wrapper around the directory auto add function. ;  ; void SetGlobalIsA (IsAGlobalFunc_t);  This function installs a global IsA function for this class. ;  ; void SetImplFileName (const char *implFileName);  ; void SetLastReadInfo (TVirtualStreamerInfo *info);  ; void SetMemberStreamer (const char *name, MemberStreamerFunc_t strm);  Install a new member streamer (p will be copied). ;  ; void SetMerge (ROOT::MergeFunc_t mergeFunc);  Install a new wrapper around 'Merge'. ;  ; void SetNew (ROOT::NewFunc_t newFunc);  Install a new wrapper around 'new'. ;  ; void SetNewArray (ROOT::NewArrFunc_t newArrayFunc);  Install a new wrapper around 'new []'. ;  ; void SetResetAfterMerge (ROOT::ResetAfterMergeFunc_t resetFunc);  Install a new wrapper around 'ResetAfterMerge'. ;  ; void SetStreamerFunc (ClassStreamerFunc_t strm);  Set a wrapper/accessor function around this class custom streamer. ;  ; TVirtualStreamerInfo * SetStreamerInfo (Int_t version, const char *info="""");  Info is a string describing the names and types of attributes written by the class Streamer function. ;  ; void SetUnloaded ",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:40120,Deployability,update,updated,40120,"();  ; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TClass; TVirtualStreamerInfo * FindStreamerInfo (TObjArray *arr, UInt_t checksum) const;  Find the TVirtualStreamerInfo in the StreamerInfos corresponding to checksum. ;  ; void GetMissingDictionariesForBaseClasses (TCollection &result, TCollection &visited, bool recurse);  Verify the base classes always. ;  ; void GetMissingDictionariesForMembers (TCollection &result, TCollection &visited, bool recurse);  Verify the Data Members. ;  ; void GetMissingDictionariesForPairElements (TCollection &result, TCollection &visited, bool recurse);  ; void GetMissingDictionariesWithRecursionCheck (TCollection &result, TCollection &visited, bool recurse);  From the second level of recursion onwards it is different state check. ;  ;  Protected Member Functions inherited from TDictionary; Bool_t UpdateInterpreterStateMarker ();  the Cling ID of the transaction that last updated the object ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const ",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:18231,Energy Efficiency,allocate,allocated,18231," this class is currently in the a process's memory. ;  ; Bool_t IsStartingWithTObject () const;  Returns true if this class inherits from TObject and if the start of the TObject parts is at the very beginning of the objects. ;  ; Bool_t IsSyntheticPair () const;  ; Bool_t IsTObject () const;  Return kTRUE is the class inherits from TObject. ;  ; Bool_t IsVersioned () const;  ; void ls (Option_t *opt="""") const override;  The ls function lists the contents of a class on stdout. ;  ; void MakeCustomMenuList ();  Makes a customizable version of the popup menu list, i.e. ;  ; Bool_t MatchLegacyCheckSum (UInt_t checksum) const;  Return true if the checksum passed as argument is one of the checksum value produced by the older checksum calculation algorithm. ;  ; void Move (void *arenaFrom, void *arenaTo) const;  Register the fact that an object was moved from the memory location 'arenaFrom' to the memory location 'arenaTo'. ;  ; void * New (ENewType defConstructor=kClassNew, Bool_t quiet=kFALSE) const;  Return a pointer to a newly allocated object of this class. ;  ; void * New (void *arena, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated object of this class. ;  ; void * NewArray (Long_t nElements, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated array of objects of this class. ;  ; void * NewArray (Long_t nElements, void *arena, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated object of this class. ;  ; ObjectPtr NewObject (ENewType defConstructor=kClassNew, Bool_t quiet=kFALSE) const;  ; ObjectPtr NewObject (void *arena, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated object of this class. ;  ; ObjectPtr NewObjectArray (Long_t nElements, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated array of objects of this class. ;  ; ObjectPtr NewObjectArray (Long_t nElements, void *arena, ENewType defConstructor=kClassNew)",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:18364,Energy Efficiency,allocate,allocated,18364," TObject and if the start of the TObject parts is at the very beginning of the objects. ;  ; Bool_t IsSyntheticPair () const;  ; Bool_t IsTObject () const;  Return kTRUE is the class inherits from TObject. ;  ; Bool_t IsVersioned () const;  ; void ls (Option_t *opt="""") const override;  The ls function lists the contents of a class on stdout. ;  ; void MakeCustomMenuList ();  Makes a customizable version of the popup menu list, i.e. ;  ; Bool_t MatchLegacyCheckSum (UInt_t checksum) const;  Return true if the checksum passed as argument is one of the checksum value produced by the older checksum calculation algorithm. ;  ; void Move (void *arenaFrom, void *arenaTo) const;  Register the fact that an object was moved from the memory location 'arenaFrom' to the memory location 'arenaTo'. ;  ; void * New (ENewType defConstructor=kClassNew, Bool_t quiet=kFALSE) const;  Return a pointer to a newly allocated object of this class. ;  ; void * New (void *arena, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated object of this class. ;  ; void * NewArray (Long_t nElements, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated array of objects of this class. ;  ; void * NewArray (Long_t nElements, void *arena, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated object of this class. ;  ; ObjectPtr NewObject (ENewType defConstructor=kClassNew, Bool_t quiet=kFALSE) const;  ; ObjectPtr NewObject (void *arena, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated object of this class. ;  ; ObjectPtr NewObjectArray (Long_t nElements, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated array of objects of this class. ;  ; ObjectPtr NewObjectArray (Long_t nElements, void *arena, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated object of this class. ;  ; virtual void PostLoadCheck ();  Do the initialization that can ",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:18507,Energy Efficiency,allocate,allocated,18507,"ct () const;  Return kTRUE is the class inherits from TObject. ;  ; Bool_t IsVersioned () const;  ; void ls (Option_t *opt="""") const override;  The ls function lists the contents of a class on stdout. ;  ; void MakeCustomMenuList ();  Makes a customizable version of the popup menu list, i.e. ;  ; Bool_t MatchLegacyCheckSum (UInt_t checksum) const;  Return true if the checksum passed as argument is one of the checksum value produced by the older checksum calculation algorithm. ;  ; void Move (void *arenaFrom, void *arenaTo) const;  Register the fact that an object was moved from the memory location 'arenaFrom' to the memory location 'arenaTo'. ;  ; void * New (ENewType defConstructor=kClassNew, Bool_t quiet=kFALSE) const;  Return a pointer to a newly allocated object of this class. ;  ; void * New (void *arena, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated object of this class. ;  ; void * NewArray (Long_t nElements, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated array of objects of this class. ;  ; void * NewArray (Long_t nElements, void *arena, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated object of this class. ;  ; ObjectPtr NewObject (ENewType defConstructor=kClassNew, Bool_t quiet=kFALSE) const;  ; ObjectPtr NewObject (void *arena, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated object of this class. ;  ; ObjectPtr NewObjectArray (Long_t nElements, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated array of objects of this class. ;  ; ObjectPtr NewObjectArray (Long_t nElements, void *arena, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated object of this class. ;  ; virtual void PostLoadCheck ();  Do the initialization that can only be done after the CINT dictionary has been fully populated and can not be delayed efficiently. ;  ; Long_t Property () const override;  Re",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:18673,Energy Efficiency,allocate,allocated,18673,"tion lists the contents of a class on stdout. ;  ; void MakeCustomMenuList ();  Makes a customizable version of the popup menu list, i.e. ;  ; Bool_t MatchLegacyCheckSum (UInt_t checksum) const;  Return true if the checksum passed as argument is one of the checksum value produced by the older checksum calculation algorithm. ;  ; void Move (void *arenaFrom, void *arenaTo) const;  Register the fact that an object was moved from the memory location 'arenaFrom' to the memory location 'arenaTo'. ;  ; void * New (ENewType defConstructor=kClassNew, Bool_t quiet=kFALSE) const;  Return a pointer to a newly allocated object of this class. ;  ; void * New (void *arena, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated object of this class. ;  ; void * NewArray (Long_t nElements, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated array of objects of this class. ;  ; void * NewArray (Long_t nElements, void *arena, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated object of this class. ;  ; ObjectPtr NewObject (ENewType defConstructor=kClassNew, Bool_t quiet=kFALSE) const;  ; ObjectPtr NewObject (void *arena, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated object of this class. ;  ; ObjectPtr NewObjectArray (Long_t nElements, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated array of objects of this class. ;  ; ObjectPtr NewObjectArray (Long_t nElements, void *arena, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated object of this class. ;  ; virtual void PostLoadCheck ();  Do the initialization that can only be done after the CINT dictionary has been fully populated and can not be delayed efficiently. ;  ; Long_t Property () const override;  Returns the properties of the TClass as a bit field stored as a Long_t value. ;  ; Int_t ReadBuffer (TBuffer &b, void *pointer);  Function called by the Str",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:18902,Energy Efficiency,allocate,allocated,18902,"t;  Return true if the checksum passed as argument is one of the checksum value produced by the older checksum calculation algorithm. ;  ; void Move (void *arenaFrom, void *arenaTo) const;  Register the fact that an object was moved from the memory location 'arenaFrom' to the memory location 'arenaTo'. ;  ; void * New (ENewType defConstructor=kClassNew, Bool_t quiet=kFALSE) const;  Return a pointer to a newly allocated object of this class. ;  ; void * New (void *arena, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated object of this class. ;  ; void * NewArray (Long_t nElements, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated array of objects of this class. ;  ; void * NewArray (Long_t nElements, void *arena, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated object of this class. ;  ; ObjectPtr NewObject (ENewType defConstructor=kClassNew, Bool_t quiet=kFALSE) const;  ; ObjectPtr NewObject (void *arena, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated object of this class. ;  ; ObjectPtr NewObjectArray (Long_t nElements, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated array of objects of this class. ;  ; ObjectPtr NewObjectArray (Long_t nElements, void *arena, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated object of this class. ;  ; virtual void PostLoadCheck ();  Do the initialization that can only be done after the CINT dictionary has been fully populated and can not be delayed efficiently. ;  ; Long_t Property () const override;  Returns the properties of the TClass as a bit field stored as a Long_t value. ;  ; Int_t ReadBuffer (TBuffer &b, void *pointer);  Function called by the Streamer functions to deserialize information from buffer b into object at p. ;  ; Int_t ReadBuffer (TBuffer &b, void *pointer, Int_t version, UInt_t start, UInt_t count);  Function called by the ",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:19054,Energy Efficiency,allocate,allocated,19054,"er the fact that an object was moved from the memory location 'arenaFrom' to the memory location 'arenaTo'. ;  ; void * New (ENewType defConstructor=kClassNew, Bool_t quiet=kFALSE) const;  Return a pointer to a newly allocated object of this class. ;  ; void * New (void *arena, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated object of this class. ;  ; void * NewArray (Long_t nElements, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated array of objects of this class. ;  ; void * NewArray (Long_t nElements, void *arena, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated object of this class. ;  ; ObjectPtr NewObject (ENewType defConstructor=kClassNew, Bool_t quiet=kFALSE) const;  ; ObjectPtr NewObject (void *arena, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated object of this class. ;  ; ObjectPtr NewObjectArray (Long_t nElements, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated array of objects of this class. ;  ; ObjectPtr NewObjectArray (Long_t nElements, void *arena, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated object of this class. ;  ; virtual void PostLoadCheck ();  Do the initialization that can only be done after the CINT dictionary has been fully populated and can not be delayed efficiently. ;  ; Long_t Property () const override;  Returns the properties of the TClass as a bit field stored as a Long_t value. ;  ; Int_t ReadBuffer (TBuffer &b, void *pointer);  Function called by the Streamer functions to deserialize information from buffer b into object at p. ;  ; Int_t ReadBuffer (TBuffer &b, void *pointer, Int_t version, UInt_t start, UInt_t count);  Function called by the Streamer functions to deserialize information from buffer b into object at p. ;  ; void RegisterStreamerInfo (TVirtualStreamerInfo *info);  Register the StreamerInfo in the given slot, change the",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:19229,Energy Efficiency,allocate,allocated,19229,"l_t quiet=kFALSE) const;  Return a pointer to a newly allocated object of this class. ;  ; void * New (void *arena, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated object of this class. ;  ; void * NewArray (Long_t nElements, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated array of objects of this class. ;  ; void * NewArray (Long_t nElements, void *arena, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated object of this class. ;  ; ObjectPtr NewObject (ENewType defConstructor=kClassNew, Bool_t quiet=kFALSE) const;  ; ObjectPtr NewObject (void *arena, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated object of this class. ;  ; ObjectPtr NewObjectArray (Long_t nElements, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated array of objects of this class. ;  ; ObjectPtr NewObjectArray (Long_t nElements, void *arena, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated object of this class. ;  ; virtual void PostLoadCheck ();  Do the initialization that can only be done after the CINT dictionary has been fully populated and can not be delayed efficiently. ;  ; Long_t Property () const override;  Returns the properties of the TClass as a bit field stored as a Long_t value. ;  ; Int_t ReadBuffer (TBuffer &b, void *pointer);  Function called by the Streamer functions to deserialize information from buffer b into object at p. ;  ; Int_t ReadBuffer (TBuffer &b, void *pointer, Int_t version, UInt_t start, UInt_t count);  Function called by the Streamer functions to deserialize information from buffer b into object at p. ;  ; void RegisterStreamerInfo (TVirtualStreamerInfo *info);  Register the StreamerInfo in the given slot, change the State of the TClass as appropriate. ;  ; void RemoveStreamerInfo (Int_t slot);  Remove and delete the StreamerInfo in the given slot. ;  ; void ReplaceWith (TClass",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:19416,Energy Efficiency,efficient,efficiently,19416," pointer to a newly allocated object of this class. ;  ; void * NewArray (Long_t nElements, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated array of objects of this class. ;  ; void * NewArray (Long_t nElements, void *arena, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated object of this class. ;  ; ObjectPtr NewObject (ENewType defConstructor=kClassNew, Bool_t quiet=kFALSE) const;  ; ObjectPtr NewObject (void *arena, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated object of this class. ;  ; ObjectPtr NewObjectArray (Long_t nElements, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated array of objects of this class. ;  ; ObjectPtr NewObjectArray (Long_t nElements, void *arena, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated object of this class. ;  ; virtual void PostLoadCheck ();  Do the initialization that can only be done after the CINT dictionary has been fully populated and can not be delayed efficiently. ;  ; Long_t Property () const override;  Returns the properties of the TClass as a bit field stored as a Long_t value. ;  ; Int_t ReadBuffer (TBuffer &b, void *pointer);  Function called by the Streamer functions to deserialize information from buffer b into object at p. ;  ; Int_t ReadBuffer (TBuffer &b, void *pointer, Int_t version, UInt_t start, UInt_t count);  Function called by the Streamer functions to deserialize information from buffer b into object at p. ;  ; void RegisterStreamerInfo (TVirtualStreamerInfo *info);  Register the StreamerInfo in the given slot, change the State of the TClass as appropriate. ;  ; void RemoveStreamerInfo (Int_t slot);  Remove and delete the StreamerInfo in the given slot. ;  ; void ReplaceWith (TClass *newcl) const;  ; void ResetCaches ();  To clean out all caches. ;  ; void ResetClassInfo ();  Make sure that the current ClassInfo is up to date. ;  ; void ResetCla",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:9858,Integrability,wrap,wrapper,9858," const char *proto, Bool_t objectIsConst=kFALSE, ROOT::EFunctionMatchMode mode=ROOT::kConversionMatch);  Find the method with a given prototype. ;  ; Int_t GetClassSize () const;  ; Version_t GetClassVersion () const;  ; TVirtualCollectionProxy * GetCollectionProxy () const;  Return the proxy describing the collection (if any). ;  ; ROOT::ESTLType GetCollectionType () const;  Return the 'type' of the STL the TClass is representing. ;  ; const char * GetContextMenuTitle () const;  ; TVirtualStreamerInfo * GetConversionStreamerInfo (const char *onfile_classname, Int_t version) const;  Return a Conversion StreamerInfo from the class 'classname' for version number 'version' to this class, if any. ;  ; TVirtualStreamerInfo * GetConversionStreamerInfo (const TClass *onfile_cl, Int_t version) const;  Return a Conversion StreamerInfo from the class represented by cl for version number 'version' to this class, if any. ;  ; ClassConvStreamerFunc_t GetConvStreamerFunc () const;  Get a wrapper/accessor function around this class custom conversion streamer (member function). ;  ; TVirtualStreamerInfo * GetCurrentStreamerInfo ();  ; TDataMember * GetDataMember (const char *datamember) const;  Return pointer to datamember object with name ""datamember"". ;  ; Longptr_t GetDataMemberOffset (const char *membername) const;  return offset for member name. ;  ; Short_t GetDeclFileLine () const;  ; const char * GetDeclFileName () const;  Return name of the file containing the declaration of this class. ;  ; ROOT::DelFunc_t GetDelete () const;  Return the wrapper around delete ThiObject. ;  ; ROOT::DelArrFunc_t GetDeleteArray () const;  Return the wrapper around delete [] ThiObject. ;  ; ROOT::DesFunc_t GetDestructor () const;  Return the wrapper around the destructor. ;  ; ROOT::DirAutoAdd_t GetDirectoryAutoAdd () const;  Return the wrapper around the directory auto add function. ;  ; TFunctionTemplate * GetFunctionTemplate (const char *name);  ; UInt_t GetHeapInstanceCount () const;  ; S",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:10427,Integrability,wrap,wrapper,10427," *onfile_classname, Int_t version) const;  Return a Conversion StreamerInfo from the class 'classname' for version number 'version' to this class, if any. ;  ; TVirtualStreamerInfo * GetConversionStreamerInfo (const TClass *onfile_cl, Int_t version) const;  Return a Conversion StreamerInfo from the class represented by cl for version number 'version' to this class, if any. ;  ; ClassConvStreamerFunc_t GetConvStreamerFunc () const;  Get a wrapper/accessor function around this class custom conversion streamer (member function). ;  ; TVirtualStreamerInfo * GetCurrentStreamerInfo ();  ; TDataMember * GetDataMember (const char *datamember) const;  Return pointer to datamember object with name ""datamember"". ;  ; Longptr_t GetDataMemberOffset (const char *membername) const;  return offset for member name. ;  ; Short_t GetDeclFileLine () const;  ; const char * GetDeclFileName () const;  Return name of the file containing the declaration of this class. ;  ; ROOT::DelFunc_t GetDelete () const;  Return the wrapper around delete ThiObject. ;  ; ROOT::DelArrFunc_t GetDeleteArray () const;  Return the wrapper around delete [] ThiObject. ;  ; ROOT::DesFunc_t GetDestructor () const;  Return the wrapper around the destructor. ;  ; ROOT::DirAutoAdd_t GetDirectoryAutoAdd () const;  Return the wrapper around the directory auto add function. ;  ; TFunctionTemplate * GetFunctionTemplate (const char *name);  ; UInt_t GetHeapInstanceCount () const;  ; Short_t GetImplFileLine () const;  ; const char * GetImplFileName () const;  ; UInt_t GetInstanceCount () const;  ; TVirtualIsAProxy * GetIsAProxy () const;  Return the proxy implementing the IsA functionality. ;  ; TVirtualStreamerInfo * GetLastReadInfo () const;  ; TList * GetListOfAllPublicDataMembers (Bool_t load=kTRUE);  Returns a list of all public data members of this class and its base classes. ;  ; const TList * GetListOfAllPublicMethods (Bool_t load=kTRUE);  Returns a list of all public methods of this class and its base classes. ; ",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:10521,Integrability,wrap,wrapper,10521,"'classname' for version number 'version' to this class, if any. ;  ; TVirtualStreamerInfo * GetConversionStreamerInfo (const TClass *onfile_cl, Int_t version) const;  Return a Conversion StreamerInfo from the class represented by cl for version number 'version' to this class, if any. ;  ; ClassConvStreamerFunc_t GetConvStreamerFunc () const;  Get a wrapper/accessor function around this class custom conversion streamer (member function). ;  ; TVirtualStreamerInfo * GetCurrentStreamerInfo ();  ; TDataMember * GetDataMember (const char *datamember) const;  Return pointer to datamember object with name ""datamember"". ;  ; Longptr_t GetDataMemberOffset (const char *membername) const;  return offset for member name. ;  ; Short_t GetDeclFileLine () const;  ; const char * GetDeclFileName () const;  Return name of the file containing the declaration of this class. ;  ; ROOT::DelFunc_t GetDelete () const;  Return the wrapper around delete ThiObject. ;  ; ROOT::DelArrFunc_t GetDeleteArray () const;  Return the wrapper around delete [] ThiObject. ;  ; ROOT::DesFunc_t GetDestructor () const;  Return the wrapper around the destructor. ;  ; ROOT::DirAutoAdd_t GetDirectoryAutoAdd () const;  Return the wrapper around the directory auto add function. ;  ; TFunctionTemplate * GetFunctionTemplate (const char *name);  ; UInt_t GetHeapInstanceCount () const;  ; Short_t GetImplFileLine () const;  ; const char * GetImplFileName () const;  ; UInt_t GetInstanceCount () const;  ; TVirtualIsAProxy * GetIsAProxy () const;  Return the proxy implementing the IsA functionality. ;  ; TVirtualStreamerInfo * GetLastReadInfo () const;  ; TList * GetListOfAllPublicDataMembers (Bool_t load=kTRUE);  Returns a list of all public data members of this class and its base classes. ;  ; const TList * GetListOfAllPublicMethods (Bool_t load=kTRUE);  Returns a list of all public methods of this class and its base classes. ;  ; TList * GetListOfBases ();  Return list containing the TBaseClass(es) of a class. ;  ; TL",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:10614,Integrability,wrap,wrapper,10614,"etConversionStreamerInfo (const TClass *onfile_cl, Int_t version) const;  Return a Conversion StreamerInfo from the class represented by cl for version number 'version' to this class, if any. ;  ; ClassConvStreamerFunc_t GetConvStreamerFunc () const;  Get a wrapper/accessor function around this class custom conversion streamer (member function). ;  ; TVirtualStreamerInfo * GetCurrentStreamerInfo ();  ; TDataMember * GetDataMember (const char *datamember) const;  Return pointer to datamember object with name ""datamember"". ;  ; Longptr_t GetDataMemberOffset (const char *membername) const;  return offset for member name. ;  ; Short_t GetDeclFileLine () const;  ; const char * GetDeclFileName () const;  Return name of the file containing the declaration of this class. ;  ; ROOT::DelFunc_t GetDelete () const;  Return the wrapper around delete ThiObject. ;  ; ROOT::DelArrFunc_t GetDeleteArray () const;  Return the wrapper around delete [] ThiObject. ;  ; ROOT::DesFunc_t GetDestructor () const;  Return the wrapper around the destructor. ;  ; ROOT::DirAutoAdd_t GetDirectoryAutoAdd () const;  Return the wrapper around the directory auto add function. ;  ; TFunctionTemplate * GetFunctionTemplate (const char *name);  ; UInt_t GetHeapInstanceCount () const;  ; Short_t GetImplFileLine () const;  ; const char * GetImplFileName () const;  ; UInt_t GetInstanceCount () const;  ; TVirtualIsAProxy * GetIsAProxy () const;  Return the proxy implementing the IsA functionality. ;  ; TVirtualStreamerInfo * GetLastReadInfo () const;  ; TList * GetListOfAllPublicDataMembers (Bool_t load=kTRUE);  Returns a list of all public data members of this class and its base classes. ;  ; const TList * GetListOfAllPublicMethods (Bool_t load=kTRUE);  Returns a list of all public methods of this class and its base classes. ;  ; TList * GetListOfBases ();  Return list containing the TBaseClass(es) of a class. ;  ; TList * GetListOfDataMembers (Bool_t load=kTRUE);  Return list containing the TDataMembers of ",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:10711,Integrability,wrap,wrapper,10711,"rInfo from the class represented by cl for version number 'version' to this class, if any. ;  ; ClassConvStreamerFunc_t GetConvStreamerFunc () const;  Get a wrapper/accessor function around this class custom conversion streamer (member function). ;  ; TVirtualStreamerInfo * GetCurrentStreamerInfo ();  ; TDataMember * GetDataMember (const char *datamember) const;  Return pointer to datamember object with name ""datamember"". ;  ; Longptr_t GetDataMemberOffset (const char *membername) const;  return offset for member name. ;  ; Short_t GetDeclFileLine () const;  ; const char * GetDeclFileName () const;  Return name of the file containing the declaration of this class. ;  ; ROOT::DelFunc_t GetDelete () const;  Return the wrapper around delete ThiObject. ;  ; ROOT::DelArrFunc_t GetDeleteArray () const;  Return the wrapper around delete [] ThiObject. ;  ; ROOT::DesFunc_t GetDestructor () const;  Return the wrapper around the destructor. ;  ; ROOT::DirAutoAdd_t GetDirectoryAutoAdd () const;  Return the wrapper around the directory auto add function. ;  ; TFunctionTemplate * GetFunctionTemplate (const char *name);  ; UInt_t GetHeapInstanceCount () const;  ; Short_t GetImplFileLine () const;  ; const char * GetImplFileName () const;  ; UInt_t GetInstanceCount () const;  ; TVirtualIsAProxy * GetIsAProxy () const;  Return the proxy implementing the IsA functionality. ;  ; TVirtualStreamerInfo * GetLastReadInfo () const;  ; TList * GetListOfAllPublicDataMembers (Bool_t load=kTRUE);  Returns a list of all public data members of this class and its base classes. ;  ; const TList * GetListOfAllPublicMethods (Bool_t load=kTRUE);  Returns a list of all public methods of this class and its base classes. ;  ; TList * GetListOfBases ();  Return list containing the TBaseClass(es) of a class. ;  ; TList * GetListOfDataMembers (Bool_t load=kTRUE);  Return list containing the TDataMembers of a class. ;  ; TList * GetListOfEnums (Bool_t load=kTRUE);  Return a list containing the TEnums of a c",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:12451,Integrability,wrap,wrapper,12451,"OfBases ();  Return list containing the TBaseClass(es) of a class. ;  ; TList * GetListOfDataMembers (Bool_t load=kTRUE);  Return list containing the TDataMembers of a class. ;  ; TList * GetListOfEnums (Bool_t load=kTRUE);  Return a list containing the TEnums of a class. ;  ; TList * GetListOfFunctionTemplates (Bool_t load=kTRUE);  Return TListOfFunctionTemplates for a class. ;  ; TCollection * GetListOfMethodOverloads (const char *name) const;  Return the collection of functions named ""name"". ;  ; TList * GetListOfMethods (Bool_t load=kTRUE);  Return list containing the TMethods of a class. ;  ; TList * GetListOfRealData () const;  ; TList * GetListOfUsingDataMembers (Bool_t load=kTRUE);  Return list containing the TDataMembers of using declarations of a class. ;  ; void GetMenuItems (TList *listitems);  Returns list of methods accessible by context menu. ;  ; TList * GetMenuList () const;  Return the list of menu items associated with the class. ;  ; ROOT::MergeFunc_t GetMerge () const;  Return the wrapper around Merge. ;  ; TMethod * GetMethod (const char *method, const char *params, Bool_t objectIsConst=kFALSE);  Find the best method (if there is one) matching the parameters. ;  ; TMethod * GetMethodAllAny (const char *method);  Return pointer to method without looking at parameters. ;  ; TMethod * GetMethodAny (const char *method);  Return pointer to method without looking at parameters. ;  ; TMethod * GetMethodWithPrototype (const char *method, const char *proto, Bool_t objectIsConst=kFALSE, ROOT::EFunctionMatchMode mode=ROOT::kConversionMatch);  Find the method with a given prototype. ;  ; void GetMissingDictionaries (THashTable &result, bool recurse=false);  Get the classes that have a missing dictionary starting from this one. ;  ; Int_t GetNdata ();  Return the number of data members of this class Note that in case the list of data members is not yet created, it will be done by GetListOfDataMembers(). ;  ; ROOT::NewFunc_t GetNew () const;  Return the wrap",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:13430,Integrability,wrap,wrapper,13430,"GetMerge () const;  Return the wrapper around Merge. ;  ; TMethod * GetMethod (const char *method, const char *params, Bool_t objectIsConst=kFALSE);  Find the best method (if there is one) matching the parameters. ;  ; TMethod * GetMethodAllAny (const char *method);  Return pointer to method without looking at parameters. ;  ; TMethod * GetMethodAny (const char *method);  Return pointer to method without looking at parameters. ;  ; TMethod * GetMethodWithPrototype (const char *method, const char *proto, Bool_t objectIsConst=kFALSE, ROOT::EFunctionMatchMode mode=ROOT::kConversionMatch);  Find the method with a given prototype. ;  ; void GetMissingDictionaries (THashTable &result, bool recurse=false);  Get the classes that have a missing dictionary starting from this one. ;  ; Int_t GetNdata ();  Return the number of data members of this class Note that in case the list of data members is not yet created, it will be done by GetListOfDataMembers(). ;  ; ROOT::NewFunc_t GetNew () const;  Return the wrapper around new ThisClass(). ;  ; ROOT::NewArrFunc_t GetNewArray () const;  Return the wrapper around new ThisClass[]. ;  ; Int_t GetNmethods ();  Return the number of methods of this class Note that in case the list of methods is not yet created, it will be done by GetListOfMethods(). ;  ; TClass *const * GetPersistentRef () const;  ; TRealData * GetRealData (const char *name) const;  Return pointer to TRealData element with name ""name"". ;  ; TVirtualRefProxy * GetReferenceProxy () const;  ; ROOT::ResetAfterMergeFunc_t GetResetAfterMerge () const;  Return the wrapper around Merge. ;  ; const ROOT::Detail::TSchemaRuleSet * GetSchemaRules () const;  Return the set of the schema rules if any. ;  ; ROOT::Detail::TSchemaRuleSet * GetSchemaRules (Bool_t create=kFALSE);  Return the set of the schema rules if any. ;  ; const char * GetSharedLibs ();  Get the list of shared libraries containing the code for class cls. ;  ; ShowMembersFunc_t GetShowMembersWrapper () const;  ; EStat",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:13520,Integrability,wrap,wrapper,13520,"har *method, const char *params, Bool_t objectIsConst=kFALSE);  Find the best method (if there is one) matching the parameters. ;  ; TMethod * GetMethodAllAny (const char *method);  Return pointer to method without looking at parameters. ;  ; TMethod * GetMethodAny (const char *method);  Return pointer to method without looking at parameters. ;  ; TMethod * GetMethodWithPrototype (const char *method, const char *proto, Bool_t objectIsConst=kFALSE, ROOT::EFunctionMatchMode mode=ROOT::kConversionMatch);  Find the method with a given prototype. ;  ; void GetMissingDictionaries (THashTable &result, bool recurse=false);  Get the classes that have a missing dictionary starting from this one. ;  ; Int_t GetNdata ();  Return the number of data members of this class Note that in case the list of data members is not yet created, it will be done by GetListOfDataMembers(). ;  ; ROOT::NewFunc_t GetNew () const;  Return the wrapper around new ThisClass(). ;  ; ROOT::NewArrFunc_t GetNewArray () const;  Return the wrapper around new ThisClass[]. ;  ; Int_t GetNmethods ();  Return the number of methods of this class Note that in case the list of methods is not yet created, it will be done by GetListOfMethods(). ;  ; TClass *const * GetPersistentRef () const;  ; TRealData * GetRealData (const char *name) const;  Return pointer to TRealData element with name ""name"". ;  ; TVirtualRefProxy * GetReferenceProxy () const;  ; ROOT::ResetAfterMergeFunc_t GetResetAfterMerge () const;  Return the wrapper around Merge. ;  ; const ROOT::Detail::TSchemaRuleSet * GetSchemaRules () const;  Return the set of the schema rules if any. ;  ; ROOT::Detail::TSchemaRuleSet * GetSchemaRules (Bool_t create=kFALSE);  Return the set of the schema rules if any. ;  ; const char * GetSharedLibs ();  Get the list of shared libraries containing the code for class cls. ;  ; ShowMembersFunc_t GetShowMembersWrapper () const;  ; EState GetState () const;  ; TClassStreamer * GetStreamer () const;  Return the Streamer Cl",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:14000,Integrability,wrap,wrapper,14000,"t=kFALSE, ROOT::EFunctionMatchMode mode=ROOT::kConversionMatch);  Find the method with a given prototype. ;  ; void GetMissingDictionaries (THashTable &result, bool recurse=false);  Get the classes that have a missing dictionary starting from this one. ;  ; Int_t GetNdata ();  Return the number of data members of this class Note that in case the list of data members is not yet created, it will be done by GetListOfDataMembers(). ;  ; ROOT::NewFunc_t GetNew () const;  Return the wrapper around new ThisClass(). ;  ; ROOT::NewArrFunc_t GetNewArray () const;  Return the wrapper around new ThisClass[]. ;  ; Int_t GetNmethods ();  Return the number of methods of this class Note that in case the list of methods is not yet created, it will be done by GetListOfMethods(). ;  ; TClass *const * GetPersistentRef () const;  ; TRealData * GetRealData (const char *name) const;  Return pointer to TRealData element with name ""name"". ;  ; TVirtualRefProxy * GetReferenceProxy () const;  ; ROOT::ResetAfterMergeFunc_t GetResetAfterMerge () const;  Return the wrapper around Merge. ;  ; const ROOT::Detail::TSchemaRuleSet * GetSchemaRules () const;  Return the set of the schema rules if any. ;  ; ROOT::Detail::TSchemaRuleSet * GetSchemaRules (Bool_t create=kFALSE);  Return the set of the schema rules if any. ;  ; const char * GetSharedLibs ();  Get the list of shared libraries containing the code for class cls. ;  ; ShowMembersFunc_t GetShowMembersWrapper () const;  ; EState GetState () const;  ; TClassStreamer * GetStreamer () const;  Return the Streamer Class allowing streaming (if any). ;  ; ClassStreamerFunc_t GetStreamerFunc () const;  Get a wrapper/accessor function around this class custom streamer (member function). ;  ; TVirtualStreamerInfo * GetStreamerInfo (Int_t version=0, Bool_t isTransient=kFALSE) const;  returns a pointer to the TVirtualStreamerInfo object for version If the object does not exist, it is created ;  ; TVirtualStreamerInfo * GetStreamerInfoAbstractEmulated (Int_t",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:14597,Integrability,wrap,wrapper,14597,"ds of this class Note that in case the list of methods is not yet created, it will be done by GetListOfMethods(). ;  ; TClass *const * GetPersistentRef () const;  ; TRealData * GetRealData (const char *name) const;  Return pointer to TRealData element with name ""name"". ;  ; TVirtualRefProxy * GetReferenceProxy () const;  ; ROOT::ResetAfterMergeFunc_t GetResetAfterMerge () const;  Return the wrapper around Merge. ;  ; const ROOT::Detail::TSchemaRuleSet * GetSchemaRules () const;  Return the set of the schema rules if any. ;  ; ROOT::Detail::TSchemaRuleSet * GetSchemaRules (Bool_t create=kFALSE);  Return the set of the schema rules if any. ;  ; const char * GetSharedLibs ();  Get the list of shared libraries containing the code for class cls. ;  ; ShowMembersFunc_t GetShowMembersWrapper () const;  ; EState GetState () const;  ; TClassStreamer * GetStreamer () const;  Return the Streamer Class allowing streaming (if any). ;  ; ClassStreamerFunc_t GetStreamerFunc () const;  Get a wrapper/accessor function around this class custom streamer (member function). ;  ; TVirtualStreamerInfo * GetStreamerInfo (Int_t version=0, Bool_t isTransient=kFALSE) const;  returns a pointer to the TVirtualStreamerInfo object for version If the object does not exist, it is created ;  ; TVirtualStreamerInfo * GetStreamerInfoAbstractEmulated (Int_t version=0) const;  For the case where the requestor class is emulated and this class is abstract, returns a pointer to the TVirtualStreamerInfo object for version with an emulated representation whether or not the class is loaded. ;  ; const TObjArray * GetStreamerInfos () const;  ; const std::type_info * GetTypeInfo () const;  ; Bool_t HasConsistentHashMember ();  Return 'true' if we can guarantee that if this class (or any class in this class inheritance hierarchy) overload TObject::Hash it also starts the RecursiveRemove process from its own destructor. ;  ; Bool_t HasCustomStreamerMember () const;  The class has a Streamer method and it is implem",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:20961,Integrability,wrap,wrapper,20961,"gister the StreamerInfo in the given slot, change the State of the TClass as appropriate. ;  ; void RemoveStreamerInfo (Int_t slot);  Remove and delete the StreamerInfo in the given slot. ;  ; void ReplaceWith (TClass *newcl) const;  ; void ResetCaches ();  To clean out all caches. ;  ; void ResetClassInfo ();  Make sure that the current ClassInfo is up to date. ;  ; void ResetClassInfo (Long_t tagnum);  Make sure that the current ClassInfo is up to date. ;  ; void ResetInstanceCount ();  ; void ResetMenuList ();  Resets the menu list to it's standard value. ;  ; void SetCanSplit (Int_t splitmode);  Set the splitability of this class: ;  ; void SetCollectionProxy (const ROOT::Detail::TCollectionProxyInfo &);  Create the collection proxy object (and the streamer object) from using the information in the TCollectionProxyInfo. ;  ; void SetContextMenuTitle (const char *title);  Change (i.e. set) the title of the TNamed. ;  ; void SetConvStreamerFunc (ClassConvStreamerFunc_t strm);  Set a wrapper/accessor function around this class custom conversion streamer. ;  ; void SetCurrentStreamerInfo (TVirtualStreamerInfo *info);  Set pointer to current TVirtualStreamerInfo. ;  ; void SetDeclFile (const char *name, Short_t line);  ; void SetDelete (ROOT::DelFunc_t deleteFunc);  Install a new wrapper around 'delete'. ;  ; void SetDeleteArray (ROOT::DelArrFunc_t deleteArrayFunc);  Install a new wrapper around 'delete []'. ;  ; void SetDestructor (ROOT::DesFunc_t destructorFunc);  Install a new wrapper around the destructor. ;  ; void SetDirectoryAutoAdd (ROOT::DirAutoAdd_t dirAutoAddFunc);  Install a new wrapper around the directory auto add function. ;  ; void SetGlobalIsA (IsAGlobalFunc_t);  This function installs a global IsA function for this class. ;  ; void SetImplFileName (const char *implFileName);  ; void SetLastReadInfo (TVirtualStreamerInfo *info);  ; void SetMemberStreamer (const char *name, MemberStreamerFunc_t strm);  Install a new member streamer (p will be copied). ",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:21261,Integrability,wrap,wrapper,21261," ();  To clean out all caches. ;  ; void ResetClassInfo ();  Make sure that the current ClassInfo is up to date. ;  ; void ResetClassInfo (Long_t tagnum);  Make sure that the current ClassInfo is up to date. ;  ; void ResetInstanceCount ();  ; void ResetMenuList ();  Resets the menu list to it's standard value. ;  ; void SetCanSplit (Int_t splitmode);  Set the splitability of this class: ;  ; void SetCollectionProxy (const ROOT::Detail::TCollectionProxyInfo &);  Create the collection proxy object (and the streamer object) from using the information in the TCollectionProxyInfo. ;  ; void SetContextMenuTitle (const char *title);  Change (i.e. set) the title of the TNamed. ;  ; void SetConvStreamerFunc (ClassConvStreamerFunc_t strm);  Set a wrapper/accessor function around this class custom conversion streamer. ;  ; void SetCurrentStreamerInfo (TVirtualStreamerInfo *info);  Set pointer to current TVirtualStreamerInfo. ;  ; void SetDeclFile (const char *name, Short_t line);  ; void SetDelete (ROOT::DelFunc_t deleteFunc);  Install a new wrapper around 'delete'. ;  ; void SetDeleteArray (ROOT::DelArrFunc_t deleteArrayFunc);  Install a new wrapper around 'delete []'. ;  ; void SetDestructor (ROOT::DesFunc_t destructorFunc);  Install a new wrapper around the destructor. ;  ; void SetDirectoryAutoAdd (ROOT::DirAutoAdd_t dirAutoAddFunc);  Install a new wrapper around the directory auto add function. ;  ; void SetGlobalIsA (IsAGlobalFunc_t);  This function installs a global IsA function for this class. ;  ; void SetImplFileName (const char *implFileName);  ; void SetLastReadInfo (TVirtualStreamerInfo *info);  ; void SetMemberStreamer (const char *name, MemberStreamerFunc_t strm);  Install a new member streamer (p will be copied). ;  ; void SetMerge (ROOT::MergeFunc_t mergeFunc);  Install a new wrapper around 'Merge'. ;  ; void SetNew (ROOT::NewFunc_t newFunc);  Install a new wrapper around 'new'. ;  ; void SetNewArray (ROOT::NewArrFunc_t newArrayFunc);  Install a new wrapper a",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:21364,Integrability,wrap,wrapper,21364,"setClassInfo (Long_t tagnum);  Make sure that the current ClassInfo is up to date. ;  ; void ResetInstanceCount ();  ; void ResetMenuList ();  Resets the menu list to it's standard value. ;  ; void SetCanSplit (Int_t splitmode);  Set the splitability of this class: ;  ; void SetCollectionProxy (const ROOT::Detail::TCollectionProxyInfo &);  Create the collection proxy object (and the streamer object) from using the information in the TCollectionProxyInfo. ;  ; void SetContextMenuTitle (const char *title);  Change (i.e. set) the title of the TNamed. ;  ; void SetConvStreamerFunc (ClassConvStreamerFunc_t strm);  Set a wrapper/accessor function around this class custom conversion streamer. ;  ; void SetCurrentStreamerInfo (TVirtualStreamerInfo *info);  Set pointer to current TVirtualStreamerInfo. ;  ; void SetDeclFile (const char *name, Short_t line);  ; void SetDelete (ROOT::DelFunc_t deleteFunc);  Install a new wrapper around 'delete'. ;  ; void SetDeleteArray (ROOT::DelArrFunc_t deleteArrayFunc);  Install a new wrapper around 'delete []'. ;  ; void SetDestructor (ROOT::DesFunc_t destructorFunc);  Install a new wrapper around the destructor. ;  ; void SetDirectoryAutoAdd (ROOT::DirAutoAdd_t dirAutoAddFunc);  Install a new wrapper around the directory auto add function. ;  ; void SetGlobalIsA (IsAGlobalFunc_t);  This function installs a global IsA function for this class. ;  ; void SetImplFileName (const char *implFileName);  ; void SetLastReadInfo (TVirtualStreamerInfo *info);  ; void SetMemberStreamer (const char *name, MemberStreamerFunc_t strm);  Install a new member streamer (p will be copied). ;  ; void SetMerge (ROOT::MergeFunc_t mergeFunc);  Install a new wrapper around 'Merge'. ;  ; void SetNew (ROOT::NewFunc_t newFunc);  Install a new wrapper around 'new'. ;  ; void SetNewArray (ROOT::NewArrFunc_t newArrayFunc);  Install a new wrapper around 'new []'. ;  ; void SetResetAfterMerge (ROOT::ResetAfterMergeFunc_t resetFunc);  Install a new wrapper around 'ResetAft",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:21465,Integrability,wrap,wrapper,21465,"eCount ();  ; void ResetMenuList ();  Resets the menu list to it's standard value. ;  ; void SetCanSplit (Int_t splitmode);  Set the splitability of this class: ;  ; void SetCollectionProxy (const ROOT::Detail::TCollectionProxyInfo &);  Create the collection proxy object (and the streamer object) from using the information in the TCollectionProxyInfo. ;  ; void SetContextMenuTitle (const char *title);  Change (i.e. set) the title of the TNamed. ;  ; void SetConvStreamerFunc (ClassConvStreamerFunc_t strm);  Set a wrapper/accessor function around this class custom conversion streamer. ;  ; void SetCurrentStreamerInfo (TVirtualStreamerInfo *info);  Set pointer to current TVirtualStreamerInfo. ;  ; void SetDeclFile (const char *name, Short_t line);  ; void SetDelete (ROOT::DelFunc_t deleteFunc);  Install a new wrapper around 'delete'. ;  ; void SetDeleteArray (ROOT::DelArrFunc_t deleteArrayFunc);  Install a new wrapper around 'delete []'. ;  ; void SetDestructor (ROOT::DesFunc_t destructorFunc);  Install a new wrapper around the destructor. ;  ; void SetDirectoryAutoAdd (ROOT::DirAutoAdd_t dirAutoAddFunc);  Install a new wrapper around the directory auto add function. ;  ; void SetGlobalIsA (IsAGlobalFunc_t);  This function installs a global IsA function for this class. ;  ; void SetImplFileName (const char *implFileName);  ; void SetLastReadInfo (TVirtualStreamerInfo *info);  ; void SetMemberStreamer (const char *name, MemberStreamerFunc_t strm);  Install a new member streamer (p will be copied). ;  ; void SetMerge (ROOT::MergeFunc_t mergeFunc);  Install a new wrapper around 'Merge'. ;  ; void SetNew (ROOT::NewFunc_t newFunc);  Install a new wrapper around 'new'. ;  ; void SetNewArray (ROOT::NewArrFunc_t newArrayFunc);  Install a new wrapper around 'new []'. ;  ; void SetResetAfterMerge (ROOT::ResetAfterMergeFunc_t resetFunc);  Install a new wrapper around 'ResetAfterMerge'. ;  ; void SetStreamerFunc (ClassStreamerFunc_t strm);  Set a wrapper/accessor function around t",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:21578,Integrability,wrap,wrapper,21578,"mode);  Set the splitability of this class: ;  ; void SetCollectionProxy (const ROOT::Detail::TCollectionProxyInfo &);  Create the collection proxy object (and the streamer object) from using the information in the TCollectionProxyInfo. ;  ; void SetContextMenuTitle (const char *title);  Change (i.e. set) the title of the TNamed. ;  ; void SetConvStreamerFunc (ClassConvStreamerFunc_t strm);  Set a wrapper/accessor function around this class custom conversion streamer. ;  ; void SetCurrentStreamerInfo (TVirtualStreamerInfo *info);  Set pointer to current TVirtualStreamerInfo. ;  ; void SetDeclFile (const char *name, Short_t line);  ; void SetDelete (ROOT::DelFunc_t deleteFunc);  Install a new wrapper around 'delete'. ;  ; void SetDeleteArray (ROOT::DelArrFunc_t deleteArrayFunc);  Install a new wrapper around 'delete []'. ;  ; void SetDestructor (ROOT::DesFunc_t destructorFunc);  Install a new wrapper around the destructor. ;  ; void SetDirectoryAutoAdd (ROOT::DirAutoAdd_t dirAutoAddFunc);  Install a new wrapper around the directory auto add function. ;  ; void SetGlobalIsA (IsAGlobalFunc_t);  This function installs a global IsA function for this class. ;  ; void SetImplFileName (const char *implFileName);  ; void SetLastReadInfo (TVirtualStreamerInfo *info);  ; void SetMemberStreamer (const char *name, MemberStreamerFunc_t strm);  Install a new member streamer (p will be copied). ;  ; void SetMerge (ROOT::MergeFunc_t mergeFunc);  Install a new wrapper around 'Merge'. ;  ; void SetNew (ROOT::NewFunc_t newFunc);  Install a new wrapper around 'new'. ;  ; void SetNewArray (ROOT::NewArrFunc_t newArrayFunc);  Install a new wrapper around 'new []'. ;  ; void SetResetAfterMerge (ROOT::ResetAfterMergeFunc_t resetFunc);  Install a new wrapper around 'ResetAfterMerge'. ;  ; void SetStreamerFunc (ClassStreamerFunc_t strm);  Set a wrapper/accessor function around this class custom streamer. ;  ; TVirtualStreamerInfo * SetStreamerInfo (Int_t version, const char *info="""");  Info is",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:22027,Integrability,wrap,wrapper,22027,"custom conversion streamer. ;  ; void SetCurrentStreamerInfo (TVirtualStreamerInfo *info);  Set pointer to current TVirtualStreamerInfo. ;  ; void SetDeclFile (const char *name, Short_t line);  ; void SetDelete (ROOT::DelFunc_t deleteFunc);  Install a new wrapper around 'delete'. ;  ; void SetDeleteArray (ROOT::DelArrFunc_t deleteArrayFunc);  Install a new wrapper around 'delete []'. ;  ; void SetDestructor (ROOT::DesFunc_t destructorFunc);  Install a new wrapper around the destructor. ;  ; void SetDirectoryAutoAdd (ROOT::DirAutoAdd_t dirAutoAddFunc);  Install a new wrapper around the directory auto add function. ;  ; void SetGlobalIsA (IsAGlobalFunc_t);  This function installs a global IsA function for this class. ;  ; void SetImplFileName (const char *implFileName);  ; void SetLastReadInfo (TVirtualStreamerInfo *info);  ; void SetMemberStreamer (const char *name, MemberStreamerFunc_t strm);  Install a new member streamer (p will be copied). ;  ; void SetMerge (ROOT::MergeFunc_t mergeFunc);  Install a new wrapper around 'Merge'. ;  ; void SetNew (ROOT::NewFunc_t newFunc);  Install a new wrapper around 'new'. ;  ; void SetNewArray (ROOT::NewArrFunc_t newArrayFunc);  Install a new wrapper around 'new []'. ;  ; void SetResetAfterMerge (ROOT::ResetAfterMergeFunc_t resetFunc);  Install a new wrapper around 'ResetAfterMerge'. ;  ; void SetStreamerFunc (ClassStreamerFunc_t strm);  Set a wrapper/accessor function around this class custom streamer. ;  ; TVirtualStreamerInfo * SetStreamerInfo (Int_t version, const char *info="""");  Info is a string describing the names and types of attributes written by the class Streamer function. ;  ; void SetUnloaded ();  Call this method to indicate that the shared library containing this class's code has been removed (unloaded) from the process's memory. ;  ; Int_t Size () const;  Return size of object of this class. ;  ; void Store (TBuffer &b) const;  Store class description on I/O buffer. ;  ; void Streamer (void *obj, TBuffer &b, cons",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:22110,Integrability,wrap,wrapper,22110,"nfo);  Set pointer to current TVirtualStreamerInfo. ;  ; void SetDeclFile (const char *name, Short_t line);  ; void SetDelete (ROOT::DelFunc_t deleteFunc);  Install a new wrapper around 'delete'. ;  ; void SetDeleteArray (ROOT::DelArrFunc_t deleteArrayFunc);  Install a new wrapper around 'delete []'. ;  ; void SetDestructor (ROOT::DesFunc_t destructorFunc);  Install a new wrapper around the destructor. ;  ; void SetDirectoryAutoAdd (ROOT::DirAutoAdd_t dirAutoAddFunc);  Install a new wrapper around the directory auto add function. ;  ; void SetGlobalIsA (IsAGlobalFunc_t);  This function installs a global IsA function for this class. ;  ; void SetImplFileName (const char *implFileName);  ; void SetLastReadInfo (TVirtualStreamerInfo *info);  ; void SetMemberStreamer (const char *name, MemberStreamerFunc_t strm);  Install a new member streamer (p will be copied). ;  ; void SetMerge (ROOT::MergeFunc_t mergeFunc);  Install a new wrapper around 'Merge'. ;  ; void SetNew (ROOT::NewFunc_t newFunc);  Install a new wrapper around 'new'. ;  ; void SetNewArray (ROOT::NewArrFunc_t newArrayFunc);  Install a new wrapper around 'new []'. ;  ; void SetResetAfterMerge (ROOT::ResetAfterMergeFunc_t resetFunc);  Install a new wrapper around 'ResetAfterMerge'. ;  ; void SetStreamerFunc (ClassStreamerFunc_t strm);  Set a wrapper/accessor function around this class custom streamer. ;  ; TVirtualStreamerInfo * SetStreamerInfo (Int_t version, const char *info="""");  Info is a string describing the names and types of attributes written by the class Streamer function. ;  ; void SetUnloaded ();  Call this method to indicate that the shared library containing this class's code has been removed (unloaded) from the process's memory. ;  ; Int_t Size () const;  Return size of object of this class. ;  ; void Store (TBuffer &b) const;  Store class description on I/O buffer. ;  ; void Streamer (void *obj, TBuffer &b, const TClass *onfile_class=nullptr) const;  ; void StreamerNVirtual (TBuffer &ClassDef_St",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:22204,Integrability,wrap,wrapper,22204,"me, Short_t line);  ; void SetDelete (ROOT::DelFunc_t deleteFunc);  Install a new wrapper around 'delete'. ;  ; void SetDeleteArray (ROOT::DelArrFunc_t deleteArrayFunc);  Install a new wrapper around 'delete []'. ;  ; void SetDestructor (ROOT::DesFunc_t destructorFunc);  Install a new wrapper around the destructor. ;  ; void SetDirectoryAutoAdd (ROOT::DirAutoAdd_t dirAutoAddFunc);  Install a new wrapper around the directory auto add function. ;  ; void SetGlobalIsA (IsAGlobalFunc_t);  This function installs a global IsA function for this class. ;  ; void SetImplFileName (const char *implFileName);  ; void SetLastReadInfo (TVirtualStreamerInfo *info);  ; void SetMemberStreamer (const char *name, MemberStreamerFunc_t strm);  Install a new member streamer (p will be copied). ;  ; void SetMerge (ROOT::MergeFunc_t mergeFunc);  Install a new wrapper around 'Merge'. ;  ; void SetNew (ROOT::NewFunc_t newFunc);  Install a new wrapper around 'new'. ;  ; void SetNewArray (ROOT::NewArrFunc_t newArrayFunc);  Install a new wrapper around 'new []'. ;  ; void SetResetAfterMerge (ROOT::ResetAfterMergeFunc_t resetFunc);  Install a new wrapper around 'ResetAfterMerge'. ;  ; void SetStreamerFunc (ClassStreamerFunc_t strm);  Set a wrapper/accessor function around this class custom streamer. ;  ; TVirtualStreamerInfo * SetStreamerInfo (Int_t version, const char *info="""");  Info is a string describing the names and types of attributes written by the class Streamer function. ;  ; void SetUnloaded ();  Call this method to indicate that the shared library containing this class's code has been removed (unloaded) from the process's memory. ;  ; Int_t Size () const;  Return size of object of this class. ;  ; void Store (TBuffer &b) const;  Store class description on I/O buffer. ;  ; void Streamer (void *obj, TBuffer &b, const TClass *onfile_class=nullptr) const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t WriteBuffer (TBuffer &b, void *pointer, const char *info="""");",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:22314,Integrability,wrap,wrapper,22314,"  ; void SetDeleteArray (ROOT::DelArrFunc_t deleteArrayFunc);  Install a new wrapper around 'delete []'. ;  ; void SetDestructor (ROOT::DesFunc_t destructorFunc);  Install a new wrapper around the destructor. ;  ; void SetDirectoryAutoAdd (ROOT::DirAutoAdd_t dirAutoAddFunc);  Install a new wrapper around the directory auto add function. ;  ; void SetGlobalIsA (IsAGlobalFunc_t);  This function installs a global IsA function for this class. ;  ; void SetImplFileName (const char *implFileName);  ; void SetLastReadInfo (TVirtualStreamerInfo *info);  ; void SetMemberStreamer (const char *name, MemberStreamerFunc_t strm);  Install a new member streamer (p will be copied). ;  ; void SetMerge (ROOT::MergeFunc_t mergeFunc);  Install a new wrapper around 'Merge'. ;  ; void SetNew (ROOT::NewFunc_t newFunc);  Install a new wrapper around 'new'. ;  ; void SetNewArray (ROOT::NewArrFunc_t newArrayFunc);  Install a new wrapper around 'new []'. ;  ; void SetResetAfterMerge (ROOT::ResetAfterMergeFunc_t resetFunc);  Install a new wrapper around 'ResetAfterMerge'. ;  ; void SetStreamerFunc (ClassStreamerFunc_t strm);  Set a wrapper/accessor function around this class custom streamer. ;  ; TVirtualStreamerInfo * SetStreamerInfo (Int_t version, const char *info="""");  Info is a string describing the names and types of attributes written by the class Streamer function. ;  ; void SetUnloaded ();  Call this method to indicate that the shared library containing this class's code has been removed (unloaded) from the process's memory. ;  ; Int_t Size () const;  Return size of object of this class. ;  ; void Store (TBuffer &b) const;  Store class description on I/O buffer. ;  ; void Streamer (void *obj, TBuffer &b, const TClass *onfile_class=nullptr) const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t WriteBuffer (TBuffer &b, void *pointer, const char *info="""");  Function called by the Streamer functions to serialize object at p to buffer b. ;  ;  Public Member Functi",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:22409,Integrability,wrap,wrapper,22409,"tructor (ROOT::DesFunc_t destructorFunc);  Install a new wrapper around the destructor. ;  ; void SetDirectoryAutoAdd (ROOT::DirAutoAdd_t dirAutoAddFunc);  Install a new wrapper around the directory auto add function. ;  ; void SetGlobalIsA (IsAGlobalFunc_t);  This function installs a global IsA function for this class. ;  ; void SetImplFileName (const char *implFileName);  ; void SetLastReadInfo (TVirtualStreamerInfo *info);  ; void SetMemberStreamer (const char *name, MemberStreamerFunc_t strm);  Install a new member streamer (p will be copied). ;  ; void SetMerge (ROOT::MergeFunc_t mergeFunc);  Install a new wrapper around 'Merge'. ;  ; void SetNew (ROOT::NewFunc_t newFunc);  Install a new wrapper around 'new'. ;  ; void SetNewArray (ROOT::NewArrFunc_t newArrayFunc);  Install a new wrapper around 'new []'. ;  ; void SetResetAfterMerge (ROOT::ResetAfterMergeFunc_t resetFunc);  Install a new wrapper around 'ResetAfterMerge'. ;  ; void SetStreamerFunc (ClassStreamerFunc_t strm);  Set a wrapper/accessor function around this class custom streamer. ;  ; TVirtualStreamerInfo * SetStreamerInfo (Int_t version, const char *info="""");  Info is a string describing the names and types of attributes written by the class Streamer function. ;  ; void SetUnloaded ();  Call this method to indicate that the shared library containing this class's code has been removed (unloaded) from the process's memory. ;  ; Int_t Size () const;  Return size of object of this class. ;  ; void Store (TBuffer &b) const;  Store class description on I/O buffer. ;  ; void Streamer (void *obj, TBuffer &b, const TClass *onfile_class=nullptr) const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t WriteBuffer (TBuffer &b, void *pointer, const char *info="""");  Function called by the Streamer functions to serialize object at p to buffer b. ;  ;  Public Member Functions inherited from TDictionary;  TDictionary ();  ;  TDictionary (const char *name);  ;  TDictionary (const TDictionary ",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:26508,Integrability,message,message,26508," *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:27049,Integrability,message,message,27049,"ct. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:28039,Integrability,message,message,28039,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method to declare a method obsolete. ;  ; void ",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:30761,Integrability,message,message,30761,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; stati",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:31134,Integrability,message,message,31134," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows ",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:758,Modifiability,inherit,inherited,758,". ROOT: TQClass Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Friends |; List of all members ; TQClass Class Reference. . Definition at line 33 of file TQClass.h. Public Member Functions;  TQClass (const char *name, Version_t cversion, const std::type_info &info, TVirtualIsAProxy *isa, const char *dfil=nullptr, const char *ifil=nullptr, Int_t dl=0, Int_t il=0);  ; virtual ~TQClass ();  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TQObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const char *signal, const T &arg);  Activate signal with single parameter. ;  ; template<typename... T> ; void EmitVA (const char *signal_name, Int_t, const T &... params);  Emit a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of si",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:2726,Modifiability,inherit,inherited,2726,"r *signal, const T &arg);  Activate signal with single parameter. ;  ; template<typename... T> ; void EmitVA (const char *signal_name, Int_t, const T &... params);  Emit a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TClass;  TClass ();  Internal, default constructor. ;  ;  TClass (ClassInfo_t *info, Version_t cversion, const char *dfil, const char *ifil=nullptr, Int_t dl=0, Int_t il=0, Bool_t silent=kFALSE);  Internal constructor. ;  ;  TClass (const char *name, Bool_t silent=kFALSE);  Create a TClass object. ;  ;  TClass (const char *name, Version_t cversion, Bool_t silent=kFALSE);  Internal constructor. ;  ;  TClass (const char *name, Version_t cversion, const char *dfil, const char *ifil=nullptr, Int_t dl=0, Int_t il=0, Bool_t silent=kFALSE);  Internal constructor. ;  ;  TClass (const char *name, Version_t cversion, const std::type_info &info, TVirtualIsAProxy *isa, const char *dfil, const char *ifil, Int_t dl, Int_t il, Bool_t silent=kFALSE);  Internal constructor. ;  ;  TClass (const char *name, Version_t cversion, EState theState, Bool_t silent=kFALSE);  Internal constructor, mimicing the case of a class fwd declared in the interpreter. ;  ; virtual ~TClass (); ",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:6155,Modifiability,inherit,inheritance,6155," of this class type, passing insp and parent. ;  ; Bool_t CanIgnoreTObjectStreamer ();  ; Bool_t CanSplit () const;  Return true if the data member of this TClass can be saved separately. ;  ; Long_t ClassProperty () const;  Return the C++ property of this class, eg. ;  ; TObject * Clone (const char *newname="""") const override;  Create a Clone of this TClass object using a different name but using the same 'dictionary'. ;  ; void CopyCollectionProxy (const TVirtualCollectionProxy &);  Replaces the collection proxy for this class. ;  ; void DeleteArray (ObjectPtr ary, Bool_t dtorOnly=kFALSE);  Explicitly call operator delete[] for an array. ;  ; void DeleteArray (void *ary, Bool_t dtorOnly=kFALSE);  Explicitly call operator delete[] for an array. ;  ; void Destructor (ObjectPtr obj, Bool_t dtorOnly=kFALSE);  Explicitly call destructor for object. ;  ; void Destructor (void *obj, Bool_t dtorOnly=kFALSE);  Explicitly call destructor for object. ;  ; void Draw (Option_t *option="""") override;  Draw detailed class inheritance structure. ;  ; void Dump () const override;  Dump contents of object on stdout. ;  ; void Dump (const void *obj, Bool_t noAddr=kFALSE) const;  Dump contents of object on stdout. ;  ; const void * DynamicCast (const TClass *base, const void *obj, Bool_t up=kTRUE);  Cast obj of this class type up to baseclass cl if up is true. ;  ; void * DynamicCast (const TClass *base, void *obj, Bool_t up=kTRUE);  Cast obj of this class type up to baseclass cl if up is true. ;  ; char * EscapeChars (const char *text) const;  Introduce an escape character (@) in front of a special chars. ;  ; TVirtualStreamerInfo * FindConversionStreamerInfo (const char *onfile_classname, UInt_t checksum) const;  Return a Conversion StreamerInfo from the class 'classname' for the layout represented by 'checksum' to this class, if any. ;  ; TVirtualStreamerInfo * FindConversionStreamerInfo (const TClass *onfile_cl, UInt_t checksum) const;  Return a Conversion StreamerInfo from the cla",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:15398,Modifiability,inherit,inheritance,15398," class cls. ;  ; ShowMembersFunc_t GetShowMembersWrapper () const;  ; EState GetState () const;  ; TClassStreamer * GetStreamer () const;  Return the Streamer Class allowing streaming (if any). ;  ; ClassStreamerFunc_t GetStreamerFunc () const;  Get a wrapper/accessor function around this class custom streamer (member function). ;  ; TVirtualStreamerInfo * GetStreamerInfo (Int_t version=0, Bool_t isTransient=kFALSE) const;  returns a pointer to the TVirtualStreamerInfo object for version If the object does not exist, it is created ;  ; TVirtualStreamerInfo * GetStreamerInfoAbstractEmulated (Int_t version=0) const;  For the case where the requestor class is emulated and this class is abstract, returns a pointer to the TVirtualStreamerInfo object for version with an emulated representation whether or not the class is loaded. ;  ; const TObjArray * GetStreamerInfos () const;  ; const std::type_info * GetTypeInfo () const;  ; Bool_t HasConsistentHashMember ();  Return 'true' if we can guarantee that if this class (or any class in this class inheritance hierarchy) overload TObject::Hash it also starts the RecursiveRemove process from its own destructor. ;  ; Bool_t HasCustomStreamerMember () const;  The class has a Streamer method and it is implemented by the user or an older (not StreamerInfo based) automatic streamer. ;  ; Bool_t HasDataMemberInfo () const;  ; Bool_t HasDefaultConstructor (Bool_t testio=kFALSE) const;  Return true if we have access to a constructor usable for I/O. ;  ; Bool_t HasDictionary () const;  Check whether a class has a dictionary or not. ;  ; Bool_t HasInterpreterInfo () const;  ; Bool_t HasInterpreterInfoInMemory () const;  ; Bool_t HasLocalHashMember () const;  Returns true if this class has an definition and/or overload of the member function Hash. ;  ; void IgnoreTObjectStreamer (Bool_t ignore=kTRUE);  When the class kIgnoreTObjectStreamer bit is set, the automatically generated Streamer will not call TObject::Streamer. ;  ; Bool_t Inherit",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:16412,Modifiability,inherit,inherits,16412,"s class inheritance hierarchy) overload TObject::Hash it also starts the RecursiveRemove process from its own destructor. ;  ; Bool_t HasCustomStreamerMember () const;  The class has a Streamer method and it is implemented by the user or an older (not StreamerInfo based) automatic streamer. ;  ; Bool_t HasDataMemberInfo () const;  ; Bool_t HasDefaultConstructor (Bool_t testio=kFALSE) const;  Return true if we have access to a constructor usable for I/O. ;  ; Bool_t HasDictionary () const;  Check whether a class has a dictionary or not. ;  ; Bool_t HasInterpreterInfo () const;  ; Bool_t HasInterpreterInfoInMemory () const;  ; Bool_t HasLocalHashMember () const;  Returns true if this class has an definition and/or overload of the member function Hash. ;  ; void IgnoreTObjectStreamer (Bool_t ignore=kTRUE);  When the class kIgnoreTObjectStreamer bit is set, the automatically generated Streamer will not call TObject::Streamer. ;  ; Bool_t InheritsFrom (const char *cl) const override;  Return kTRUE if this class inherits from a class with name ""classname"". ;  ; Bool_t InheritsFrom (const TClass *cl) const override;  Return kTRUE if this class inherits from class cl. ;  ; void InterpretedShowMembers (void *obj, TMemberInspector &insp, Bool_t isTransient);  Do a ShowMembers() traversal of all members and base classes' members using the reflection information from the interpreter. ;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; Bool_t IsFolder (void *obj) const;  Return kTRUE if the class has elements. ;  ; Bool_t IsForeign () const;  Return kTRUE is the class is Foreign (the class does not have a Streamer method). ;  ; Bool_t IsLoaded () const;  Return true if the shared library of this class is currently in the a process's memory. ;  ; Bool_t IsStartingWithTObject () const;  Returns true if this class inherits from TObject and if the start of the TObject parts is at the very b",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:16545,Modifiability,inherit,inherits,16545,";  ; Bool_t HasCustomStreamerMember () const;  The class has a Streamer method and it is implemented by the user or an older (not StreamerInfo based) automatic streamer. ;  ; Bool_t HasDataMemberInfo () const;  ; Bool_t HasDefaultConstructor (Bool_t testio=kFALSE) const;  Return true if we have access to a constructor usable for I/O. ;  ; Bool_t HasDictionary () const;  Check whether a class has a dictionary or not. ;  ; Bool_t HasInterpreterInfo () const;  ; Bool_t HasInterpreterInfoInMemory () const;  ; Bool_t HasLocalHashMember () const;  Returns true if this class has an definition and/or overload of the member function Hash. ;  ; void IgnoreTObjectStreamer (Bool_t ignore=kTRUE);  When the class kIgnoreTObjectStreamer bit is set, the automatically generated Streamer will not call TObject::Streamer. ;  ; Bool_t InheritsFrom (const char *cl) const override;  Return kTRUE if this class inherits from a class with name ""classname"". ;  ; Bool_t InheritsFrom (const TClass *cl) const override;  Return kTRUE if this class inherits from class cl. ;  ; void InterpretedShowMembers (void *obj, TMemberInspector &insp, Bool_t isTransient);  Do a ShowMembers() traversal of all members and base classes' members using the reflection information from the interpreter. ;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; Bool_t IsFolder (void *obj) const;  Return kTRUE if the class has elements. ;  ; Bool_t IsForeign () const;  Return kTRUE is the class is Foreign (the class does not have a Streamer method). ;  ; Bool_t IsLoaded () const;  Return true if the shared library of this class is currently in the a process's memory. ;  ; Bool_t IsStartingWithTObject () const;  Returns true if this class inherits from TObject and if the start of the TObject parts is at the very beginning of the objects. ;  ; Bool_t IsSyntheticPair () const;  ; Bool_t IsTObject () const;  Return kTRUE is the class i",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:17315,Modifiability,inherit,inherits,17315," ; Bool_t InheritsFrom (const char *cl) const override;  Return kTRUE if this class inherits from a class with name ""classname"". ;  ; Bool_t InheritsFrom (const TClass *cl) const override;  Return kTRUE if this class inherits from class cl. ;  ; void InterpretedShowMembers (void *obj, TMemberInspector &insp, Bool_t isTransient);  Do a ShowMembers() traversal of all members and base classes' members using the reflection information from the interpreter. ;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; Bool_t IsFolder (void *obj) const;  Return kTRUE if the class has elements. ;  ; Bool_t IsForeign () const;  Return kTRUE is the class is Foreign (the class does not have a Streamer method). ;  ; Bool_t IsLoaded () const;  Return true if the shared library of this class is currently in the a process's memory. ;  ; Bool_t IsStartingWithTObject () const;  Returns true if this class inherits from TObject and if the start of the TObject parts is at the very beginning of the objects. ;  ; Bool_t IsSyntheticPair () const;  ; Bool_t IsTObject () const;  Return kTRUE is the class inherits from TObject. ;  ; Bool_t IsVersioned () const;  ; void ls (Option_t *opt="""") const override;  The ls function lists the contents of a class on stdout. ;  ; void MakeCustomMenuList ();  Makes a customizable version of the popup menu list, i.e. ;  ; Bool_t MatchLegacyCheckSum (UInt_t checksum) const;  Return true if the checksum passed as argument is one of the checksum value produced by the older checksum calculation algorithm. ;  ; void Move (void *arenaFrom, void *arenaTo) const;  Register the fact that an object was moved from the memory location 'arenaFrom' to the memory location 'arenaTo'. ;  ; void * New (ENewType defConstructor=kClassNew, Bool_t quiet=kFALSE) const;  Return a pointer to a newly allocated object of this class. ;  ; void * New (void *arena, ENewType defConstructor=kClassNew) c",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:17511,Modifiability,inherit,inherits,17511,"itsFrom (const TClass *cl) const override;  Return kTRUE if this class inherits from class cl. ;  ; void InterpretedShowMembers (void *obj, TMemberInspector &insp, Bool_t isTransient);  Do a ShowMembers() traversal of all members and base classes' members using the reflection information from the interpreter. ;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; Bool_t IsFolder (void *obj) const;  Return kTRUE if the class has elements. ;  ; Bool_t IsForeign () const;  Return kTRUE is the class is Foreign (the class does not have a Streamer method). ;  ; Bool_t IsLoaded () const;  Return true if the shared library of this class is currently in the a process's memory. ;  ; Bool_t IsStartingWithTObject () const;  Returns true if this class inherits from TObject and if the start of the TObject parts is at the very beginning of the objects. ;  ; Bool_t IsSyntheticPair () const;  ; Bool_t IsTObject () const;  Return kTRUE is the class inherits from TObject. ;  ; Bool_t IsVersioned () const;  ; void ls (Option_t *opt="""") const override;  The ls function lists the contents of a class on stdout. ;  ; void MakeCustomMenuList ();  Makes a customizable version of the popup menu list, i.e. ;  ; Bool_t MatchLegacyCheckSum (UInt_t checksum) const;  Return true if the checksum passed as argument is one of the checksum value produced by the older checksum calculation algorithm. ;  ; void Move (void *arenaFrom, void *arenaTo) const;  Register the fact that an object was moved from the memory location 'arenaFrom' to the memory location 'arenaTo'. ;  ; void * New (ENewType defConstructor=kClassNew, Bool_t quiet=kFALSE) const;  Return a pointer to a newly allocated object of this class. ;  ; void * New (void *arena, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated object of this class. ;  ; void * NewArray (Long_t nElements, ENewType defConstructor=kClassNew) con",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:23292,Modifiability,inherit,inherited,23292," char *info="""");  Info is a string describing the names and types of attributes written by the class Streamer function. ;  ; void SetUnloaded ();  Call this method to indicate that the shared library containing this class's code has been removed (unloaded) from the process's memory. ;  ; Int_t Size () const;  Return size of object of this class. ;  ; void Store (TBuffer &b) const;  Store class description on I/O buffer. ;  ; void Streamer (void *obj, TBuffer &b, const TClass *onfile_class=nullptr) const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t WriteBuffer (TBuffer &b, void *pointer, const char *info="""");  Function called by the Streamer functions to serialize object at p to buffer b. ;  ;  Public Member Functions inherited from TDictionary;  TDictionary ();  ;  TDictionary (const char *name);  ;  TDictionary (const TDictionary &dict);  ; virtual ~TDictionary ();  ; void CreateAttributeMap ();  ; TDictAttributeMap * GetAttributeMap () const;  ; TDictionary & operator= (const TDictionary &other);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Re",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:23672,Modifiability,inherit,inherited,23672," char *info="""");  Info is a string describing the names and types of attributes written by the class Streamer function. ;  ; void SetUnloaded ();  Call this method to indicate that the shared library containing this class's code has been removed (unloaded) from the process's memory. ;  ; Int_t Size () const;  Return size of object of this class. ;  ; void Store (TBuffer &b) const;  Store class description on I/O buffer. ;  ; void Streamer (void *obj, TBuffer &b, const TClass *onfile_class=nullptr) const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t WriteBuffer (TBuffer &b, void *pointer, const char *info="""");  Function called by the Streamer functions to serialize object at p to buffer b. ;  ;  Public Member Functions inherited from TDictionary;  TDictionary ();  ;  TDictionary (const char *name);  ;  TDictionary (const TDictionary &dict);  ; virtual ~TDictionary ();  ; void CreateAttributeMap ();  ; TDictAttributeMap * GetAttributeMap () const;  ; TDictionary & operator= (const TDictionary &other);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Re",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:25300,Modifiability,inherit,inherited,25300,"ual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual T",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:26207,Modifiability,inherit,inheritance,26207,"oid StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj)",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:31635,Modifiability,inherit,inherited,31635,"e unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; st",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:32810,Modifiability,inherit,inherited,32810,"status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Static Public Member Functions inherited from TClass; static void AddClass (TClass *cl);  static: Add a class to the list and map of classes. ;  ; static void AddClassToDeclIdMap (TDictionary::DeclId_t id, TClass *cl);  static: Add a TClass* to the map of classes. ;  ; static Bool_t AddRule (const char *rule);  Add a schema evolution customization rule. ;  ; static Int_t AutoBrowse (TObject *obj, TBrowser *browser);  Browse external object inherited from TObject. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; template<typename T > ; static TClass * GetClass (Bool_t load=kTRUE, Bool_t silent=kFALSE);  ; static TClass * GetClass (ClassInfo_t *info, Bool_t load=kTRUE, Bool_t silent=kFALSE);  Static method returning pointer to TClass of the specified ClassInfo. ;  ; static TClass * GetClass (const char *name, Bool_t load, Bool_t silent, size_t hint_pair_offset, size_t hint_pair_size);  ; static TClass * GetClass (const char *name, Bool_t load=k",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:33223,Modifiability,inherit,inherited,33223,"le slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Static Public Member Functions inherited from TClass; static void AddClass (TClass *cl);  static: Add a class to the list and map of classes. ;  ; static void AddClassToDeclIdMap (TDictionary::DeclId_t id, TClass *cl);  static: Add a TClass* to the map of classes. ;  ; static Bool_t AddRule (const char *rule);  Add a schema evolution customization rule. ;  ; static Int_t AutoBrowse (TObject *obj, TBrowser *browser);  Browse external object inherited from TObject. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; template<typename T > ; static TClass * GetClass (Bool_t load=kTRUE, Bool_t silent=kFALSE);  ; static TClass * GetClass (ClassInfo_t *info, Bool_t load=kTRUE, Bool_t silent=kFALSE);  Static method returning pointer to TClass of the specified ClassInfo. ;  ; static TClass * GetClass (const char *name, Bool_t load, Bool_t silent, size_t hint_pair_offset, size_t hint_pair_size);  ; static TClass * GetClass (const char *name, Bool_t load=kTRUE, Bool_t silent=kFALSE);  Static method returning pointer to TClass of the specified class name. ;  ; static TClass * GetClass (const std::type_info &typeinfo, Bool_t load=kTRUE, Bool_t silent=kFALSE, size_t hint_pair_offset=0, size_t hint_pair_size=0);  Return pointer to class with name. ;  ; static Bool_t GetClass (DeclId_t id, std::vec",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:35377,Modifiability,inherit,inherited,35377,"he dictionary loading function generated by rootcint. ;  ; static Bool_t HasDictionarySelection (const char *clname);  Check whether a class has a dictionary or ROOT can load one. ;  ; static ENewType IsCallingNew ();  Static method returning the defConstructor flag passed to TClass::New(). ;  ; static TClass * Load (TBuffer &b);  Load class description from I/O buffer and return class object. ;  ; static TClass * LoadClass (const char *requestedname, Bool_t silent);  Helper function used by TClass::GetClass(). ;  ; static Int_t ReadRules ();  Read the class.rules files from the default location:. ;  ; static Int_t ReadRules (const char *filename);  Read a class.rules file which contains one rule per line with comment starting with a #. ;  ; static void RemoveClass (TClass *cl);  static: Remove a class from the list and map of classes ;  ; static void RemoveClassDeclId (TDictionary::DeclId_t id);  ;  Static Public Member Functions inherited from TDictionary; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TDictionary * GetDictionary (const char *name);  Retrieve the type (class, fundamental type, typedef etc) named ""name"". ;  ; static TDictionary * GetDictionary (const std::type_info &typeinfo);  ; static bool WantsRegularMembers (EMemberSelection sel);  ; static bool WantsUsingDecls (EMemberSelection sel);  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:35910,Modifiability,inherit,inherited,35910,"lt location:. ;  ; static Int_t ReadRules (const char *filename);  Read a class.rules file which contains one rule per line with comment starting with a #. ;  ; static void RemoveClass (TClass *cl);  static: Remove a class from the list and map of classes ;  ; static void RemoveClassDeclId (TDictionary::DeclId_t id);  ;  Static Public Member Functions inherited from TDictionary; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TDictionary * GetDictionary (const char *name);  Retrieve the type (class, fundamental type, typedef etc) named ""name"". ;  ; static TDictionary * GetDictionary (const std::type_info &typeinfo);  ; static bool WantsRegularMembers (EMemberSelection sel);  ; static bool WantsUsingDecls (EMemberSelection sel);  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TQClass (const TClass &)=delete;  ; TQClass & operator= (const TQClass &)=delete;  . Friends; class TQObject;  . Additional Inherited Members;  Public Types inherited from TClass; enum  ECheckSum { ;   kCurrentCheckSum = 0; , kNoEnum = 1; , kReflexNoComment = 2; , kNoRange = 3; , ;   kWithTypeDef = 4; , kReflex = 5; , kNoRangeCheck = 6; , kNoBaseCheckSum = 7; , ;   kLatestCheckSum = 8. };",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:36120,Modifiability,inherit,inherited,36120,"lt location:. ;  ; static Int_t ReadRules (const char *filename);  Read a class.rules file which contains one rule per line with comment starting with a #. ;  ; static void RemoveClass (TClass *cl);  static: Remove a class from the list and map of classes ;  ; static void RemoveClassDeclId (TDictionary::DeclId_t id);  ;  Static Public Member Functions inherited from TDictionary; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TDictionary * GetDictionary (const char *name);  Retrieve the type (class, fundamental type, typedef etc) named ""name"". ;  ; static TDictionary * GetDictionary (const std::type_info &typeinfo);  ; static bool WantsRegularMembers (EMemberSelection sel);  ; static bool WantsUsingDecls (EMemberSelection sel);  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TQClass (const TClass &)=delete;  ; TQClass & operator= (const TQClass &)=delete;  . Friends; class TQObject;  . Additional Inherited Members;  Public Types inherited from TClass; enum  ECheckSum { ;   kCurrentCheckSum = 0; , kNoEnum = 1; , kReflexNoComment = 2; , kNoRange = 3; , ;   kWithTypeDef = 4; , kReflex = 5; , kNoRangeCheck = 6; , kNoBaseCheckSum = 7; , ;   kLatestCheckSum = 8. };",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:36790,Modifiability,inherit,inherited,36790,"ic Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TQClass (const TClass &)=delete;  ; TQClass & operator= (const TQClass &)=delete;  . Friends; class TQObject;  . Additional Inherited Members;  Public Types inherited from TClass; enum  ECheckSum { ;   kCurrentCheckSum = 0; , kNoEnum = 1; , kReflexNoComment = 2; , kNoRange = 3; , ;   kWithTypeDef = 4; , kReflex = 5; , kNoRangeCheck = 6; , kNoBaseCheckSum = 7; , ;   kLatestCheckSum = 8. };  ; enum  ENewType { kRealNew = 0; , kClassNew; , kDummyNew; };  ; enum  EState { ;   kNoInfo; , kForwardDeclared; , kEmulated; , kInterpreted; , ;   kHasTClassInit; , kLoaded = kHasTClassInit; , kNamespaceForMeta. };  ; enum  EStatusBits { ;   kReservedLoading = (1ULL << ( 7 )); , kHasLocalHashMember = (1ULL << ( 14 )); , kIgnoreTObjectStreamer = (1ULL << ( 15 )); , kUnloaded = (1ULL << ( 16 )); , ;   kIsTObject = (1ULL << ( 17 )); , kIsForeign = (1ULL << ( 18 )); , kStartWithTObject = (1ULL << ( 20 )); , kWarned = (1ULL << ( 21 )); , ;   kHasNameMapNode = (1ULL << ( 22 )). };  ;  Public Types inherited from TDictionary; typedef const void * DeclId_t;  ; enum class  EMemberSelection { kNoUsingDecls; , kOnlyUsingDecls; , kAlsoUsingDecls; };  Kinds of members to include in lists. More...;  ; enum  ESTLType { ;   kNone = ROOT::kNotSTL; , kVector = R",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:37626,Modifiability,inherit,inherited,37626,"lete;  . Friends; class TQObject;  . Additional Inherited Members;  Public Types inherited from TClass; enum  ECheckSum { ;   kCurrentCheckSum = 0; , kNoEnum = 1; , kReflexNoComment = 2; , kNoRange = 3; , ;   kWithTypeDef = 4; , kReflex = 5; , kNoRangeCheck = 6; , kNoBaseCheckSum = 7; , ;   kLatestCheckSum = 8. };  ; enum  ENewType { kRealNew = 0; , kClassNew; , kDummyNew; };  ; enum  EState { ;   kNoInfo; , kForwardDeclared; , kEmulated; , kInterpreted; , ;   kHasTClassInit; , kLoaded = kHasTClassInit; , kNamespaceForMeta. };  ; enum  EStatusBits { ;   kReservedLoading = (1ULL << ( 7 )); , kHasLocalHashMember = (1ULL << ( 14 )); , kIgnoreTObjectStreamer = (1ULL << ( 15 )); , kUnloaded = (1ULL << ( 16 )); , ;   kIsTObject = (1ULL << ( 17 )); , kIsForeign = (1ULL << ( 18 )); , kStartWithTObject = (1ULL << ( 20 )); , kWarned = (1ULL << ( 21 )); , ;   kHasNameMapNode = (1ULL << ( 22 )). };  ;  Public Types inherited from TDictionary; typedef const void * DeclId_t;  ; enum class  EMemberSelection { kNoUsingDecls; , kOnlyUsingDecls; , kAlsoUsingDecls; };  Kinds of members to include in lists. More...;  ; enum  ESTLType { ;   kNone = ROOT::kNotSTL; , kVector = ROOT::kSTLvector; , kList = ROOT::kSTLlist; , kForwardlist = ROOT::kSTLforwardlist; , ;   kDeque = ROOT::kSTLdeque; , kMap = ROOT::kSTLmap; , kMultimap = ROOT::kSTLmultimap; , kSet = ROOT::kSTLset; , ;   kMultiset = ROOT::kSTLmultiset; , kUnorderedSet = ROOT::kSTLunorderedset; , kUnorderedMultiset = ROOT::kSTLunorderedmultiset; , kUnorderedMap = ROOT::kSTLunorderedmap; , ;   kUnorderedMultimap = ROOT::kSTLunorderedmultimap; , kBitset = ROOT::kSTLbitset. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); ",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:38360,Modifiability,inherit,inherited,38360,"Object = (1ULL << ( 17 )); , kIsForeign = (1ULL << ( 18 )); , kStartWithTObject = (1ULL << ( 20 )); , kWarned = (1ULL << ( 21 )); , ;   kHasNameMapNode = (1ULL << ( 22 )). };  ;  Public Types inherited from TDictionary; typedef const void * DeclId_t;  ; enum class  EMemberSelection { kNoUsingDecls; , kOnlyUsingDecls; , kAlsoUsingDecls; };  Kinds of members to include in lists. More...;  ; enum  ESTLType { ;   kNone = ROOT::kNotSTL; , kVector = ROOT::kSTLvector; , kList = ROOT::kSTLlist; , kForwardlist = ROOT::kSTLforwardlist; , ;   kDeque = ROOT::kSTLdeque; , kMap = ROOT::kSTLmap; , kMultimap = ROOT::kSTLmultimap; , kSet = ROOT::kSTLset; , ;   kMultiset = ROOT::kSTLmultiset; , kUnorderedSet = ROOT::kSTLunorderedset; , kUnorderedMultiset = ROOT::kSTLunorderedmultiset; , kUnorderedMap = ROOT::kSTLunorderedmap; , ;   kUnorderedMultimap = ROOT::kSTLunorderedmultimap; , kBitset = ROOT::kSTLbitset. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TClass; TVirtualStreamerInfo * FindStreamerInfo (TObjArray *arr, UInt_t checksum) const;  Find the TVirtualStreamerInfo in the StreamerInfos corresponding to checksum. ;  ; void GetM",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:39001,Modifiability,inherit,inherited,39001,"eredmultiset; , kUnorderedMap = ROOT::kSTLunorderedmap; , ;   kUnorderedMultimap = ROOT::kSTLunorderedmultimap; , kBitset = ROOT::kSTLbitset. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TClass; TVirtualStreamerInfo * FindStreamerInfo (TObjArray *arr, UInt_t checksum) const;  Find the TVirtualStreamerInfo in the StreamerInfos corresponding to checksum. ;  ; void GetMissingDictionariesForBaseClasses (TCollection &result, TCollection &visited, bool recurse);  Verify the base classes always. ;  ; void GetMissingDictionariesForMembers (TCollection &result, TCollection &visited, bool recurse);  Verify the Data Members. ;  ; void GetMissingDictionariesForPairElements (TCollection &result, TCollection &visited, bool recurse);  ; void GetMissingDictionariesWithRecursionCheck (TCollection &result, TCollection &visited, bool recurse);  From the second level of recursion onwards it is different state check. ;  ;  Protected Member Functions inherited from TDictionary; Bool_t UpdateInterpreterStateMarker ();  the Cling ID of the transaction that last updated the object ;  ;  Protected Member Functions inherited from TObject; vir",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:39100,Modifiability,inherit,inherited,39100,"eredmultiset; , kUnorderedMap = ROOT::kSTLunorderedmap; , ;   kUnorderedMultimap = ROOT::kSTLunorderedmultimap; , kBitset = ROOT::kSTLbitset. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TClass; TVirtualStreamerInfo * FindStreamerInfo (TObjArray *arr, UInt_t checksum) const;  Find the TVirtualStreamerInfo in the StreamerInfos corresponding to checksum. ;  ; void GetMissingDictionariesForBaseClasses (TCollection &result, TCollection &visited, bool recurse);  Verify the base classes always. ;  ; void GetMissingDictionariesForMembers (TCollection &result, TCollection &visited, bool recurse);  Verify the Data Members. ;  ; void GetMissingDictionariesForPairElements (TCollection &result, TCollection &visited, bool recurse);  ; void GetMissingDictionariesWithRecursionCheck (TCollection &result, TCollection &visited, bool recurse);  From the second level of recursion onwards it is different state check. ;  ;  Protected Member Functions inherited from TDictionary; Bool_t UpdateInterpreterStateMarker ();  the Cling ID of the transaction that last updated the object ;  ;  Protected Member Functions inherited from TObject; vir",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:39238,Modifiability,inherit,inherited,39238,"eredmultiset; , kUnorderedMap = ROOT::kSTLunorderedmap; , ;   kUnorderedMultimap = ROOT::kSTLunorderedmultimap; , kBitset = ROOT::kSTLbitset. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TClass; TVirtualStreamerInfo * FindStreamerInfo (TObjArray *arr, UInt_t checksum) const;  Find the TVirtualStreamerInfo in the StreamerInfos corresponding to checksum. ;  ; void GetMissingDictionariesForBaseClasses (TCollection &result, TCollection &visited, bool recurse);  Verify the base classes always. ;  ; void GetMissingDictionariesForMembers (TCollection &result, TCollection &visited, bool recurse);  Verify the Data Members. ;  ; void GetMissingDictionariesForPairElements (TCollection &result, TCollection &visited, bool recurse);  ; void GetMissingDictionariesWithRecursionCheck (TCollection &result, TCollection &visited, bool recurse);  From the second level of recursion onwards it is different state check. ;  ;  Protected Member Functions inherited from TDictionary; Bool_t UpdateInterpreterStateMarker ();  the Cling ID of the transaction that last updated the object ;  ;  Protected Member Functions inherited from TObject; vir",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:40009,Modifiability,inherit,inherited,40009,"();  ; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TClass; TVirtualStreamerInfo * FindStreamerInfo (TObjArray *arr, UInt_t checksum) const;  Find the TVirtualStreamerInfo in the StreamerInfos corresponding to checksum. ;  ; void GetMissingDictionariesForBaseClasses (TCollection &result, TCollection &visited, bool recurse);  Verify the base classes always. ;  ; void GetMissingDictionariesForMembers (TCollection &result, TCollection &visited, bool recurse);  Verify the Data Members. ;  ; void GetMissingDictionariesForPairElements (TCollection &result, TCollection &visited, bool recurse);  ; void GetMissingDictionariesWithRecursionCheck (TCollection &result, TCollection &visited, bool recurse);  From the second level of recursion onwards it is different state check. ;  ;  Protected Member Functions inherited from TDictionary; Bool_t UpdateInterpreterStateMarker ();  the Cling ID of the transaction that last updated the object ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const ",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:40172,Modifiability,inherit,inherited,40172,"();  ; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TClass; TVirtualStreamerInfo * FindStreamerInfo (TObjArray *arr, UInt_t checksum) const;  Find the TVirtualStreamerInfo in the StreamerInfos corresponding to checksum. ;  ; void GetMissingDictionariesForBaseClasses (TCollection &result, TCollection &visited, bool recurse);  Verify the base classes always. ;  ; void GetMissingDictionariesForMembers (TCollection &result, TCollection &visited, bool recurse);  Verify the Data Members. ;  ; void GetMissingDictionariesForPairElements (TCollection &result, TCollection &visited, bool recurse);  ; void GetMissingDictionariesWithRecursionCheck (TCollection &result, TCollection &visited, bool recurse);  From the second level of recursion onwards it is different state check. ;  ;  Protected Member Functions inherited from TDictionary; Bool_t UpdateInterpreterStateMarker ();  the Cling ID of the transaction that last updated the object ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const ",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:40390,Modifiability,inherit,inherited,40390,"(TCollection &result, TCollection &visited, bool recurse);  Verify the base classes always. ;  ; void GetMissingDictionariesForMembers (TCollection &result, TCollection &visited, bool recurse);  Verify the Data Members. ;  ; void GetMissingDictionariesForPairElements (TCollection &result, TCollection &visited, bool recurse);  ; void GetMissingDictionariesWithRecursionCheck (TCollection &result, TCollection &visited, bool recurse);  From the second level of recursion onwards it is different state check. ;  ;  Protected Member Functions inherited from TDictionary; Bool_t UpdateInterpreterStateMarker ();  the Cling ID of the transaction that last updated the object ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TNamed; T",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:41239,Modifiability,inherit,inherited,41239,"CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TQClass.h>. Inheritance diagram for TQClass:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQClass() [1/2]. TQClass::TQClass ; (; const TClass & ; ). privatedelete . ◆ TQClass() [2/2]. TQClass::TQClass ; (; const char * ; name, . Version_t ; cversion, . const std::type_info & ; info, . TVirtualIsAProxy * ; isa, . const char * ; dfil = nullptr, . const char * ; ifil = nullptr, . Int_t ; dl = 0, . Int_t ; il = 0 . ). inline . Definition at line 42 of file TQClass.h. ◆ ~TQClass(). virtual TQClass::~TQClass ; (; ). inlinevirtual . Definition at line 49 of file TQClass.h. Member Function Documentation. ◆ Class(). static TClass * TQClass::Class ; (; ). static . ReturnsTClass d",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:41445,Modifiability,inherit,inherited,41445,"CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TQClass.h>. Inheritance diagram for TQClass:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQClass() [1/2]. TQClass::TQClass ; (; const TClass & ; ). privatedelete . ◆ TQClass() [2/2]. TQClass::TQClass ; (; const char * ; name, . Version_t ; cversion, . const std::type_info & ; info, . TVirtualIsAProxy * ; isa, . const char * ; dfil = nullptr, . const char * ; ifil = nullptr, . Int_t ; dl = 0, . Int_t ; il = 0 . ). inline . Definition at line 42 of file TQClass.h. ◆ ~TQClass(). virtual TQClass::~TQClass ; (; ). inlinevirtual . Definition at line 49 of file TQClass.h. Member Function Documentation. ◆ Class(). static TClass * TQClass::Class ; (; ). static . ReturnsTClass d",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:41534,Modifiability,inherit,inherited,41534,"CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TQClass.h>. Inheritance diagram for TQClass:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQClass() [1/2]. TQClass::TQClass ; (; const TClass & ; ). privatedelete . ◆ TQClass() [2/2]. TQClass::TQClass ; (; const char * ; name, . Version_t ; cversion, . const std::type_info & ; info, . TVirtualIsAProxy * ; isa, . const char * ; dfil = nullptr, . const char * ; ifil = nullptr, . Int_t ; dl = 0, . Int_t ; il = 0 . ). inline . Definition at line 42 of file TQClass.h. ◆ ~TQClass(). virtual TQClass::~TQClass ; (; ). inlinevirtual . Definition at line 49 of file TQClass.h. Member Function Documentation. ◆ Class(). static TClass * TQClass::Class ; (; ). static . ReturnsTClass d",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:7684,Performance,load,loaded,7684,"oid *obj, Bool_t up=kTRUE);  Cast obj of this class type up to baseclass cl if up is true. ;  ; char * EscapeChars (const char *text) const;  Introduce an escape character (@) in front of a special chars. ;  ; TVirtualStreamerInfo * FindConversionStreamerInfo (const char *onfile_classname, UInt_t checksum) const;  Return a Conversion StreamerInfo from the class 'classname' for the layout represented by 'checksum' to this class, if any. ;  ; TVirtualStreamerInfo * FindConversionStreamerInfo (const TClass *onfile_cl, UInt_t checksum) const;  Return a Conversion StreamerInfo from the class represented by cl for the layout represented by 'checksum' to this class, if any. ;  ; TVirtualStreamerInfo * FindStreamerInfo (UInt_t checksum, Bool_t isTransient=kFALSE) const;  Find the TVirtualStreamerInfo in the StreamerInfos corresponding to checksum. ;  ; TVirtualStreamerInfo * FindStreamerInfoAbstractEmulated (UInt_t checksum) const;  For the case where the requestor class is emulated and this class is abstract, returns a pointer to the TVirtualStreamerInfo object for version with an emulated representation whether or not the class is loaded. ;  ; void ForceReload (TClass *oldcl);  we found at least one equivalent. ;  ; TClass * GetActualClass (const void *object) const;  Return a pointer to the real class of the object. ;  ; TClass * GetBaseClass (const char *classname);  Return pointer to the base class ""classname"". ;  ; TClass * GetBaseClass (const TClass *base);  Return pointer to the base class ""cl"". ;  ; Int_t GetBaseClassOffset (const TClass *toBase, void *address=nullptr, bool isDerivedObject=true);  ; TClass * GetBaseDataMember (const char *datamember);  Return pointer to (base) class that contains datamember. ;  ; UInt_t GetCheckSum (Bool_t &isvalid) const;  Return GetCheckSum(kCurrentCheckSum,isvalid);. ;  ; UInt_t GetCheckSum (ECheckSum code, Bool_t &isvalid) const;  Compute and/or return the class check sum. ;  ; UInt_t GetCheckSum (ECheckSum code=kCurrentCheckSum",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:11182,Performance,load,load,11182,"membername) const;  return offset for member name. ;  ; Short_t GetDeclFileLine () const;  ; const char * GetDeclFileName () const;  Return name of the file containing the declaration of this class. ;  ; ROOT::DelFunc_t GetDelete () const;  Return the wrapper around delete ThiObject. ;  ; ROOT::DelArrFunc_t GetDeleteArray () const;  Return the wrapper around delete [] ThiObject. ;  ; ROOT::DesFunc_t GetDestructor () const;  Return the wrapper around the destructor. ;  ; ROOT::DirAutoAdd_t GetDirectoryAutoAdd () const;  Return the wrapper around the directory auto add function. ;  ; TFunctionTemplate * GetFunctionTemplate (const char *name);  ; UInt_t GetHeapInstanceCount () const;  ; Short_t GetImplFileLine () const;  ; const char * GetImplFileName () const;  ; UInt_t GetInstanceCount () const;  ; TVirtualIsAProxy * GetIsAProxy () const;  Return the proxy implementing the IsA functionality. ;  ; TVirtualStreamerInfo * GetLastReadInfo () const;  ; TList * GetListOfAllPublicDataMembers (Bool_t load=kTRUE);  Returns a list of all public data members of this class and its base classes. ;  ; const TList * GetListOfAllPublicMethods (Bool_t load=kTRUE);  Returns a list of all public methods of this class and its base classes. ;  ; TList * GetListOfBases ();  Return list containing the TBaseClass(es) of a class. ;  ; TList * GetListOfDataMembers (Bool_t load=kTRUE);  Return list containing the TDataMembers of a class. ;  ; TList * GetListOfEnums (Bool_t load=kTRUE);  Return a list containing the TEnums of a class. ;  ; TList * GetListOfFunctionTemplates (Bool_t load=kTRUE);  Return TListOfFunctionTemplates for a class. ;  ; TCollection * GetListOfMethodOverloads (const char *name) const;  Return the collection of functions named ""name"". ;  ; TList * GetListOfMethods (Bool_t load=kTRUE);  Return list containing the TMethods of a class. ;  ; TList * GetListOfRealData () const;  ; TList * GetListOfUsingDataMembers (Bool_t load=kTRUE);  Return list containing the TDataMembers of",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:11327,Performance,load,load,11327,"the declaration of this class. ;  ; ROOT::DelFunc_t GetDelete () const;  Return the wrapper around delete ThiObject. ;  ; ROOT::DelArrFunc_t GetDeleteArray () const;  Return the wrapper around delete [] ThiObject. ;  ; ROOT::DesFunc_t GetDestructor () const;  Return the wrapper around the destructor. ;  ; ROOT::DirAutoAdd_t GetDirectoryAutoAdd () const;  Return the wrapper around the directory auto add function. ;  ; TFunctionTemplate * GetFunctionTemplate (const char *name);  ; UInt_t GetHeapInstanceCount () const;  ; Short_t GetImplFileLine () const;  ; const char * GetImplFileName () const;  ; UInt_t GetInstanceCount () const;  ; TVirtualIsAProxy * GetIsAProxy () const;  Return the proxy implementing the IsA functionality. ;  ; TVirtualStreamerInfo * GetLastReadInfo () const;  ; TList * GetListOfAllPublicDataMembers (Bool_t load=kTRUE);  Returns a list of all public data members of this class and its base classes. ;  ; const TList * GetListOfAllPublicMethods (Bool_t load=kTRUE);  Returns a list of all public methods of this class and its base classes. ;  ; TList * GetListOfBases ();  Return list containing the TBaseClass(es) of a class. ;  ; TList * GetListOfDataMembers (Bool_t load=kTRUE);  Return list containing the TDataMembers of a class. ;  ; TList * GetListOfEnums (Bool_t load=kTRUE);  Return a list containing the TEnums of a class. ;  ; TList * GetListOfFunctionTemplates (Bool_t load=kTRUE);  Return TListOfFunctionTemplates for a class. ;  ; TCollection * GetListOfMethodOverloads (const char *name) const;  Return the collection of functions named ""name"". ;  ; TList * GetListOfMethods (Bool_t load=kTRUE);  Return list containing the TMethods of a class. ;  ; TList * GetListOfRealData () const;  ; TList * GetListOfUsingDataMembers (Bool_t load=kTRUE);  Return list containing the TDataMembers of using declarations of a class. ;  ; void GetMenuItems (TList *listitems);  Returns list of methods accessible by context menu. ;  ; TList * GetMenuList () const;  Ret",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:11543,Performance,load,load,11543,"t. ;  ; ROOT::DesFunc_t GetDestructor () const;  Return the wrapper around the destructor. ;  ; ROOT::DirAutoAdd_t GetDirectoryAutoAdd () const;  Return the wrapper around the directory auto add function. ;  ; TFunctionTemplate * GetFunctionTemplate (const char *name);  ; UInt_t GetHeapInstanceCount () const;  ; Short_t GetImplFileLine () const;  ; const char * GetImplFileName () const;  ; UInt_t GetInstanceCount () const;  ; TVirtualIsAProxy * GetIsAProxy () const;  Return the proxy implementing the IsA functionality. ;  ; TVirtualStreamerInfo * GetLastReadInfo () const;  ; TList * GetListOfAllPublicDataMembers (Bool_t load=kTRUE);  Returns a list of all public data members of this class and its base classes. ;  ; const TList * GetListOfAllPublicMethods (Bool_t load=kTRUE);  Returns a list of all public methods of this class and its base classes. ;  ; TList * GetListOfBases ();  Return list containing the TBaseClass(es) of a class. ;  ; TList * GetListOfDataMembers (Bool_t load=kTRUE);  Return list containing the TDataMembers of a class. ;  ; TList * GetListOfEnums (Bool_t load=kTRUE);  Return a list containing the TEnums of a class. ;  ; TList * GetListOfFunctionTemplates (Bool_t load=kTRUE);  Return TListOfFunctionTemplates for a class. ;  ; TCollection * GetListOfMethodOverloads (const char *name) const;  Return the collection of functions named ""name"". ;  ; TList * GetListOfMethods (Bool_t load=kTRUE);  Return list containing the TMethods of a class. ;  ; TList * GetListOfRealData () const;  ; TList * GetListOfUsingDataMembers (Bool_t load=kTRUE);  Return list containing the TDataMembers of using declarations of a class. ;  ; void GetMenuItems (TList *listitems);  Returns list of methods accessible by context menu. ;  ; TList * GetMenuList () const;  Return the list of menu items associated with the class. ;  ; ROOT::MergeFunc_t GetMerge () const;  Return the wrapper around Merge. ;  ; TMethod * GetMethod (const char *method, const char *params, Bool_t objectIs",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:11645,Performance,load,load,11645,"irAutoAdd_t GetDirectoryAutoAdd () const;  Return the wrapper around the directory auto add function. ;  ; TFunctionTemplate * GetFunctionTemplate (const char *name);  ; UInt_t GetHeapInstanceCount () const;  ; Short_t GetImplFileLine () const;  ; const char * GetImplFileName () const;  ; UInt_t GetInstanceCount () const;  ; TVirtualIsAProxy * GetIsAProxy () const;  Return the proxy implementing the IsA functionality. ;  ; TVirtualStreamerInfo * GetLastReadInfo () const;  ; TList * GetListOfAllPublicDataMembers (Bool_t load=kTRUE);  Returns a list of all public data members of this class and its base classes. ;  ; const TList * GetListOfAllPublicMethods (Bool_t load=kTRUE);  Returns a list of all public methods of this class and its base classes. ;  ; TList * GetListOfBases ();  Return list containing the TBaseClass(es) of a class. ;  ; TList * GetListOfDataMembers (Bool_t load=kTRUE);  Return list containing the TDataMembers of a class. ;  ; TList * GetListOfEnums (Bool_t load=kTRUE);  Return a list containing the TEnums of a class. ;  ; TList * GetListOfFunctionTemplates (Bool_t load=kTRUE);  Return TListOfFunctionTemplates for a class. ;  ; TCollection * GetListOfMethodOverloads (const char *name) const;  Return the collection of functions named ""name"". ;  ; TList * GetListOfMethods (Bool_t load=kTRUE);  Return list containing the TMethods of a class. ;  ; TList * GetListOfRealData () const;  ; TList * GetListOfUsingDataMembers (Bool_t load=kTRUE);  Return list containing the TDataMembers of using declarations of a class. ;  ; void GetMenuItems (TList *listitems);  Returns list of methods accessible by context menu. ;  ; TList * GetMenuList () const;  Return the list of menu items associated with the class. ;  ; ROOT::MergeFunc_t GetMerge () const;  Return the wrapper around Merge. ;  ; TMethod * GetMethod (const char *method, const char *params, Bool_t objectIsConst=kFALSE);  Find the best method (if there is one) matching the parameters. ;  ; TMethod * GetMetho",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:11755,Performance,load,load,11755,";  ; TFunctionTemplate * GetFunctionTemplate (const char *name);  ; UInt_t GetHeapInstanceCount () const;  ; Short_t GetImplFileLine () const;  ; const char * GetImplFileName () const;  ; UInt_t GetInstanceCount () const;  ; TVirtualIsAProxy * GetIsAProxy () const;  Return the proxy implementing the IsA functionality. ;  ; TVirtualStreamerInfo * GetLastReadInfo () const;  ; TList * GetListOfAllPublicDataMembers (Bool_t load=kTRUE);  Returns a list of all public data members of this class and its base classes. ;  ; const TList * GetListOfAllPublicMethods (Bool_t load=kTRUE);  Returns a list of all public methods of this class and its base classes. ;  ; TList * GetListOfBases ();  Return list containing the TBaseClass(es) of a class. ;  ; TList * GetListOfDataMembers (Bool_t load=kTRUE);  Return list containing the TDataMembers of a class. ;  ; TList * GetListOfEnums (Bool_t load=kTRUE);  Return a list containing the TEnums of a class. ;  ; TList * GetListOfFunctionTemplates (Bool_t load=kTRUE);  Return TListOfFunctionTemplates for a class. ;  ; TCollection * GetListOfMethodOverloads (const char *name) const;  Return the collection of functions named ""name"". ;  ; TList * GetListOfMethods (Bool_t load=kTRUE);  Return list containing the TMethods of a class. ;  ; TList * GetListOfRealData () const;  ; TList * GetListOfUsingDataMembers (Bool_t load=kTRUE);  Return list containing the TDataMembers of using declarations of a class. ;  ; void GetMenuItems (TList *listitems);  Returns list of methods accessible by context menu. ;  ; TList * GetMenuList () const;  Return the list of menu items associated with the class. ;  ; ROOT::MergeFunc_t GetMerge () const;  Return the wrapper around Merge. ;  ; TMethod * GetMethod (const char *method, const char *params, Bool_t objectIsConst=kFALSE);  Find the best method (if there is one) matching the parameters. ;  ; TMethod * GetMethodAllAny (const char *method);  Return pointer to method without looking at parameters. ;  ; TMethod * G",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:11972,Performance,load,load,11972," TVirtualIsAProxy * GetIsAProxy () const;  Return the proxy implementing the IsA functionality. ;  ; TVirtualStreamerInfo * GetLastReadInfo () const;  ; TList * GetListOfAllPublicDataMembers (Bool_t load=kTRUE);  Returns a list of all public data members of this class and its base classes. ;  ; const TList * GetListOfAllPublicMethods (Bool_t load=kTRUE);  Returns a list of all public methods of this class and its base classes. ;  ; TList * GetListOfBases ();  Return list containing the TBaseClass(es) of a class. ;  ; TList * GetListOfDataMembers (Bool_t load=kTRUE);  Return list containing the TDataMembers of a class. ;  ; TList * GetListOfEnums (Bool_t load=kTRUE);  Return a list containing the TEnums of a class. ;  ; TList * GetListOfFunctionTemplates (Bool_t load=kTRUE);  Return TListOfFunctionTemplates for a class. ;  ; TCollection * GetListOfMethodOverloads (const char *name) const;  Return the collection of functions named ""name"". ;  ; TList * GetListOfMethods (Bool_t load=kTRUE);  Return list containing the TMethods of a class. ;  ; TList * GetListOfRealData () const;  ; TList * GetListOfUsingDataMembers (Bool_t load=kTRUE);  Return list containing the TDataMembers of using declarations of a class. ;  ; void GetMenuItems (TList *listitems);  Returns list of methods accessible by context menu. ;  ; TList * GetMenuList () const;  Return the list of menu items associated with the class. ;  ; ROOT::MergeFunc_t GetMerge () const;  Return the wrapper around Merge. ;  ; TMethod * GetMethod (const char *method, const char *params, Bool_t objectIsConst=kFALSE);  Find the best method (if there is one) matching the parameters. ;  ; TMethod * GetMethodAllAny (const char *method);  Return pointer to method without looking at parameters. ;  ; TMethod * GetMethodAny (const char *method);  Return pointer to method without looking at parameters. ;  ; TMethod * GetMethodWithPrototype (const char *method, const char *proto, Bool_t objectIsConst=kFALSE, ROOT::EFunctionMatchMode ",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:12120,Performance,load,load,12120,"fo () const;  ; TList * GetListOfAllPublicDataMembers (Bool_t load=kTRUE);  Returns a list of all public data members of this class and its base classes. ;  ; const TList * GetListOfAllPublicMethods (Bool_t load=kTRUE);  Returns a list of all public methods of this class and its base classes. ;  ; TList * GetListOfBases ();  Return list containing the TBaseClass(es) of a class. ;  ; TList * GetListOfDataMembers (Bool_t load=kTRUE);  Return list containing the TDataMembers of a class. ;  ; TList * GetListOfEnums (Bool_t load=kTRUE);  Return a list containing the TEnums of a class. ;  ; TList * GetListOfFunctionTemplates (Bool_t load=kTRUE);  Return TListOfFunctionTemplates for a class. ;  ; TCollection * GetListOfMethodOverloads (const char *name) const;  Return the collection of functions named ""name"". ;  ; TList * GetListOfMethods (Bool_t load=kTRUE);  Return list containing the TMethods of a class. ;  ; TList * GetListOfRealData () const;  ; TList * GetListOfUsingDataMembers (Bool_t load=kTRUE);  Return list containing the TDataMembers of using declarations of a class. ;  ; void GetMenuItems (TList *listitems);  Returns list of methods accessible by context menu. ;  ; TList * GetMenuList () const;  Return the list of menu items associated with the class. ;  ; ROOT::MergeFunc_t GetMerge () const;  Return the wrapper around Merge. ;  ; TMethod * GetMethod (const char *method, const char *params, Bool_t objectIsConst=kFALSE);  Find the best method (if there is one) matching the parameters. ;  ; TMethod * GetMethodAllAny (const char *method);  Return pointer to method without looking at parameters. ;  ; TMethod * GetMethodAny (const char *method);  Return pointer to method without looking at parameters. ;  ; TMethod * GetMethodWithPrototype (const char *method, const char *proto, Bool_t objectIsConst=kFALSE, ROOT::EFunctionMatchMode mode=ROOT::kConversionMatch);  Find the method with a given prototype. ;  ; void GetMissingDictionaries (THashTable &result, bool recurse",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:15172,Performance,load,loaded,15172,"  ; ROOT::ResetAfterMergeFunc_t GetResetAfterMerge () const;  Return the wrapper around Merge. ;  ; const ROOT::Detail::TSchemaRuleSet * GetSchemaRules () const;  Return the set of the schema rules if any. ;  ; ROOT::Detail::TSchemaRuleSet * GetSchemaRules (Bool_t create=kFALSE);  Return the set of the schema rules if any. ;  ; const char * GetSharedLibs ();  Get the list of shared libraries containing the code for class cls. ;  ; ShowMembersFunc_t GetShowMembersWrapper () const;  ; EState GetState () const;  ; TClassStreamer * GetStreamer () const;  Return the Streamer Class allowing streaming (if any). ;  ; ClassStreamerFunc_t GetStreamerFunc () const;  Get a wrapper/accessor function around this class custom streamer (member function). ;  ; TVirtualStreamerInfo * GetStreamerInfo (Int_t version=0, Bool_t isTransient=kFALSE) const;  returns a pointer to the TVirtualStreamerInfo object for version If the object does not exist, it is created ;  ; TVirtualStreamerInfo * GetStreamerInfoAbstractEmulated (Int_t version=0) const;  For the case where the requestor class is emulated and this class is abstract, returns a pointer to the TVirtualStreamerInfo object for version with an emulated representation whether or not the class is loaded. ;  ; const TObjArray * GetStreamerInfos () const;  ; const std::type_info * GetTypeInfo () const;  ; Bool_t HasConsistentHashMember ();  Return 'true' if we can guarantee that if this class (or any class in this class inheritance hierarchy) overload TObject::Hash it also starts the RecursiveRemove process from its own destructor. ;  ; Bool_t HasCustomStreamerMember () const;  The class has a Streamer method and it is implemented by the user or an older (not StreamerInfo based) automatic streamer. ;  ; Bool_t HasDataMemberInfo () const;  ; Bool_t HasDefaultConstructor (Bool_t testio=kFALSE) const;  Return true if we have access to a constructor usable for I/O. ;  ; Bool_t HasDictionary () const;  Check whether a class has a dictionary or ",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:20236,Performance,cache,caches,20236,"nst;  Return a pointer to a newly allocated object of this class. ;  ; virtual void PostLoadCheck ();  Do the initialization that can only be done after the CINT dictionary has been fully populated and can not be delayed efficiently. ;  ; Long_t Property () const override;  Returns the properties of the TClass as a bit field stored as a Long_t value. ;  ; Int_t ReadBuffer (TBuffer &b, void *pointer);  Function called by the Streamer functions to deserialize information from buffer b into object at p. ;  ; Int_t ReadBuffer (TBuffer &b, void *pointer, Int_t version, UInt_t start, UInt_t count);  Function called by the Streamer functions to deserialize information from buffer b into object at p. ;  ; void RegisterStreamerInfo (TVirtualStreamerInfo *info);  Register the StreamerInfo in the given slot, change the State of the TClass as appropriate. ;  ; void RemoveStreamerInfo (Int_t slot);  Remove and delete the StreamerInfo in the given slot. ;  ; void ReplaceWith (TClass *newcl) const;  ; void ResetCaches ();  To clean out all caches. ;  ; void ResetClassInfo ();  Make sure that the current ClassInfo is up to date. ;  ; void ResetClassInfo (Long_t tagnum);  Make sure that the current ClassInfo is up to date. ;  ; void ResetInstanceCount ();  ; void ResetMenuList ();  Resets the menu list to it's standard value. ;  ; void SetCanSplit (Int_t splitmode);  Set the splitability of this class: ;  ; void SetCollectionProxy (const ROOT::Detail::TCollectionProxyInfo &);  Create the collection proxy object (and the streamer object) from using the information in the TCollectionProxyInfo. ;  ; void SetContextMenuTitle (const char *title);  Change (i.e. set) the title of the TNamed. ;  ; void SetConvStreamerFunc (ClassConvStreamerFunc_t strm);  Set a wrapper/accessor function around this class custom conversion streamer. ;  ; void SetCurrentStreamerInfo (TVirtualStreamerInfo *info);  Set pointer to current TVirtualStreamerInfo. ;  ; void SetDeclFile (const char *name, Short_t line)",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:33464,Performance,load,load,33464," char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Static Public Member Functions inherited from TClass; static void AddClass (TClass *cl);  static: Add a class to the list and map of classes. ;  ; static void AddClassToDeclIdMap (TDictionary::DeclId_t id, TClass *cl);  static: Add a TClass* to the map of classes. ;  ; static Bool_t AddRule (const char *rule);  Add a schema evolution customization rule. ;  ; static Int_t AutoBrowse (TObject *obj, TBrowser *browser);  Browse external object inherited from TObject. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; template<typename T > ; static TClass * GetClass (Bool_t load=kTRUE, Bool_t silent=kFALSE);  ; static TClass * GetClass (ClassInfo_t *info, Bool_t load=kTRUE, Bool_t silent=kFALSE);  Static method returning pointer to TClass of the specified ClassInfo. ;  ; static TClass * GetClass (const char *name, Bool_t load, Bool_t silent, size_t hint_pair_offset, size_t hint_pair_size);  ; static TClass * GetClass (const char *name, Bool_t load=kTRUE, Bool_t silent=kFALSE);  Static method returning pointer to TClass of the specified class name. ;  ; static TClass * GetClass (const std::type_info &typeinfo, Bool_t load=kTRUE, Bool_t silent=kFALSE, size_t hint_pair_offset=0, size_t hint_pair_size=0);  Return pointer to class with name. ;  ; static Bool_t GetClass (DeclId_t id, std::vector< TClass * > &classes);  ; static DictFuncPtr_t GetDict (const char *cname);  Return a pointer to the dictionary loading function generated by rootcint. ;  ; static DictFuncPtr_t GetDict (const std::type_info &info);  Return a pointer to the dictionary loading",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:33554,Performance,load,load,33554," char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Static Public Member Functions inherited from TClass; static void AddClass (TClass *cl);  static: Add a class to the list and map of classes. ;  ; static void AddClassToDeclIdMap (TDictionary::DeclId_t id, TClass *cl);  static: Add a TClass* to the map of classes. ;  ; static Bool_t AddRule (const char *rule);  Add a schema evolution customization rule. ;  ; static Int_t AutoBrowse (TObject *obj, TBrowser *browser);  Browse external object inherited from TObject. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; template<typename T > ; static TClass * GetClass (Bool_t load=kTRUE, Bool_t silent=kFALSE);  ; static TClass * GetClass (ClassInfo_t *info, Bool_t load=kTRUE, Bool_t silent=kFALSE);  Static method returning pointer to TClass of the specified ClassInfo. ;  ; static TClass * GetClass (const char *name, Bool_t load, Bool_t silent, size_t hint_pair_offset, size_t hint_pair_size);  ; static TClass * GetClass (const char *name, Bool_t load=kTRUE, Bool_t silent=kFALSE);  Static method returning pointer to TClass of the specified class name. ;  ; static TClass * GetClass (const std::type_info &typeinfo, Bool_t load=kTRUE, Bool_t silent=kFALSE, size_t hint_pair_offset=0, size_t hint_pair_size=0);  Return pointer to class with name. ;  ; static Bool_t GetClass (DeclId_t id, std::vector< TClass * > &classes);  ; static DictFuncPtr_t GetDict (const char *cname);  Return a pointer to the dictionary loading function generated by rootcint. ;  ; static DictFuncPtr_t GetDict (const std::type_info &info);  Return a pointer to the dictionary loading",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:33716,Performance,load,load,33716,"nctions inherited from TClass; static void AddClass (TClass *cl);  static: Add a class to the list and map of classes. ;  ; static void AddClassToDeclIdMap (TDictionary::DeclId_t id, TClass *cl);  static: Add a TClass* to the map of classes. ;  ; static Bool_t AddRule (const char *rule);  Add a schema evolution customization rule. ;  ; static Int_t AutoBrowse (TObject *obj, TBrowser *browser);  Browse external object inherited from TObject. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; template<typename T > ; static TClass * GetClass (Bool_t load=kTRUE, Bool_t silent=kFALSE);  ; static TClass * GetClass (ClassInfo_t *info, Bool_t load=kTRUE, Bool_t silent=kFALSE);  Static method returning pointer to TClass of the specified ClassInfo. ;  ; static TClass * GetClass (const char *name, Bool_t load, Bool_t silent, size_t hint_pair_offset, size_t hint_pair_size);  ; static TClass * GetClass (const char *name, Bool_t load=kTRUE, Bool_t silent=kFALSE);  Static method returning pointer to TClass of the specified class name. ;  ; static TClass * GetClass (const std::type_info &typeinfo, Bool_t load=kTRUE, Bool_t silent=kFALSE, size_t hint_pair_offset=0, size_t hint_pair_size=0);  Return pointer to class with name. ;  ; static Bool_t GetClass (DeclId_t id, std::vector< TClass * > &classes);  ; static DictFuncPtr_t GetDict (const char *cname);  Return a pointer to the dictionary loading function generated by rootcint. ;  ; static DictFuncPtr_t GetDict (const std::type_info &info);  Return a pointer to the dictionary loading function generated by rootcint. ;  ; static Bool_t HasDictionarySelection (const char *clname);  Check whether a class has a dictionary or ROOT can load one. ;  ; static ENewType IsCallingNew ();  Static method returning the defConstructor flag passed to TClass::New(). ;  ; static TClass * Load (TBuffer &b);  Load class description from I/O buffer",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:33840,Performance,load,load,33840,"nctions inherited from TClass; static void AddClass (TClass *cl);  static: Add a class to the list and map of classes. ;  ; static void AddClassToDeclIdMap (TDictionary::DeclId_t id, TClass *cl);  static: Add a TClass* to the map of classes. ;  ; static Bool_t AddRule (const char *rule);  Add a schema evolution customization rule. ;  ; static Int_t AutoBrowse (TObject *obj, TBrowser *browser);  Browse external object inherited from TObject. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; template<typename T > ; static TClass * GetClass (Bool_t load=kTRUE, Bool_t silent=kFALSE);  ; static TClass * GetClass (ClassInfo_t *info, Bool_t load=kTRUE, Bool_t silent=kFALSE);  Static method returning pointer to TClass of the specified ClassInfo. ;  ; static TClass * GetClass (const char *name, Bool_t load, Bool_t silent, size_t hint_pair_offset, size_t hint_pair_size);  ; static TClass * GetClass (const char *name, Bool_t load=kTRUE, Bool_t silent=kFALSE);  Static method returning pointer to TClass of the specified class name. ;  ; static TClass * GetClass (const std::type_info &typeinfo, Bool_t load=kTRUE, Bool_t silent=kFALSE, size_t hint_pair_offset=0, size_t hint_pair_size=0);  Return pointer to class with name. ;  ; static Bool_t GetClass (DeclId_t id, std::vector< TClass * > &classes);  ; static DictFuncPtr_t GetDict (const char *cname);  Return a pointer to the dictionary loading function generated by rootcint. ;  ; static DictFuncPtr_t GetDict (const std::type_info &info);  Return a pointer to the dictionary loading function generated by rootcint. ;  ; static Bool_t HasDictionarySelection (const char *clname);  Check whether a class has a dictionary or ROOT can load one. ;  ; static ENewType IsCallingNew ();  Static method returning the defConstructor flag passed to TClass::New(). ;  ; static TClass * Load (TBuffer &b);  Load class description from I/O buffer",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:34017,Performance,load,load,34017,". ;  ; static Bool_t AddRule (const char *rule);  Add a schema evolution customization rule. ;  ; static Int_t AutoBrowse (TObject *obj, TBrowser *browser);  Browse external object inherited from TObject. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; template<typename T > ; static TClass * GetClass (Bool_t load=kTRUE, Bool_t silent=kFALSE);  ; static TClass * GetClass (ClassInfo_t *info, Bool_t load=kTRUE, Bool_t silent=kFALSE);  Static method returning pointer to TClass of the specified ClassInfo. ;  ; static TClass * GetClass (const char *name, Bool_t load, Bool_t silent, size_t hint_pair_offset, size_t hint_pair_size);  ; static TClass * GetClass (const char *name, Bool_t load=kTRUE, Bool_t silent=kFALSE);  Static method returning pointer to TClass of the specified class name. ;  ; static TClass * GetClass (const std::type_info &typeinfo, Bool_t load=kTRUE, Bool_t silent=kFALSE, size_t hint_pair_offset=0, size_t hint_pair_size=0);  Return pointer to class with name. ;  ; static Bool_t GetClass (DeclId_t id, std::vector< TClass * > &classes);  ; static DictFuncPtr_t GetDict (const char *cname);  Return a pointer to the dictionary loading function generated by rootcint. ;  ; static DictFuncPtr_t GetDict (const std::type_info &info);  Return a pointer to the dictionary loading function generated by rootcint. ;  ; static Bool_t HasDictionarySelection (const char *clname);  Check whether a class has a dictionary or ROOT can load one. ;  ; static ENewType IsCallingNew ();  Static method returning the defConstructor flag passed to TClass::New(). ;  ; static TClass * Load (TBuffer &b);  Load class description from I/O buffer and return class object. ;  ; static TClass * LoadClass (const char *requestedname, Bool_t silent);  Helper function used by TClass::GetClass(). ;  ; static Int_t ReadRules ();  Read the class.rules files from the default location:. ;  ; s",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:34306,Performance,load,loading,34306,"ect. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; template<typename T > ; static TClass * GetClass (Bool_t load=kTRUE, Bool_t silent=kFALSE);  ; static TClass * GetClass (ClassInfo_t *info, Bool_t load=kTRUE, Bool_t silent=kFALSE);  Static method returning pointer to TClass of the specified ClassInfo. ;  ; static TClass * GetClass (const char *name, Bool_t load, Bool_t silent, size_t hint_pair_offset, size_t hint_pair_size);  ; static TClass * GetClass (const char *name, Bool_t load=kTRUE, Bool_t silent=kFALSE);  Static method returning pointer to TClass of the specified class name. ;  ; static TClass * GetClass (const std::type_info &typeinfo, Bool_t load=kTRUE, Bool_t silent=kFALSE, size_t hint_pair_offset=0, size_t hint_pair_size=0);  Return pointer to class with name. ;  ; static Bool_t GetClass (DeclId_t id, std::vector< TClass * > &classes);  ; static DictFuncPtr_t GetDict (const char *cname);  Return a pointer to the dictionary loading function generated by rootcint. ;  ; static DictFuncPtr_t GetDict (const std::type_info &info);  Return a pointer to the dictionary loading function generated by rootcint. ;  ; static Bool_t HasDictionarySelection (const char *clname);  Check whether a class has a dictionary or ROOT can load one. ;  ; static ENewType IsCallingNew ();  Static method returning the defConstructor flag passed to TClass::New(). ;  ; static TClass * Load (TBuffer &b);  Load class description from I/O buffer and return class object. ;  ; static TClass * LoadClass (const char *requestedname, Bool_t silent);  Helper function used by TClass::GetClass(). ;  ; static Int_t ReadRules ();  Read the class.rules files from the default location:. ;  ; static Int_t ReadRules (const char *filename);  Read a class.rules file which contains one rule per line with comment starting with a #. ;  ; static void RemoveClass (TClass *cl);  static: Remove a cl",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:34446,Performance,load,loading,34446,"<typename T > ; static TClass * GetClass (Bool_t load=kTRUE, Bool_t silent=kFALSE);  ; static TClass * GetClass (ClassInfo_t *info, Bool_t load=kTRUE, Bool_t silent=kFALSE);  Static method returning pointer to TClass of the specified ClassInfo. ;  ; static TClass * GetClass (const char *name, Bool_t load, Bool_t silent, size_t hint_pair_offset, size_t hint_pair_size);  ; static TClass * GetClass (const char *name, Bool_t load=kTRUE, Bool_t silent=kFALSE);  Static method returning pointer to TClass of the specified class name. ;  ; static TClass * GetClass (const std::type_info &typeinfo, Bool_t load=kTRUE, Bool_t silent=kFALSE, size_t hint_pair_offset=0, size_t hint_pair_size=0);  Return pointer to class with name. ;  ; static Bool_t GetClass (DeclId_t id, std::vector< TClass * > &classes);  ; static DictFuncPtr_t GetDict (const char *cname);  Return a pointer to the dictionary loading function generated by rootcint. ;  ; static DictFuncPtr_t GetDict (const std::type_info &info);  Return a pointer to the dictionary loading function generated by rootcint. ;  ; static Bool_t HasDictionarySelection (const char *clname);  Check whether a class has a dictionary or ROOT can load one. ;  ; static ENewType IsCallingNew ();  Static method returning the defConstructor flag passed to TClass::New(). ;  ; static TClass * Load (TBuffer &b);  Load class description from I/O buffer and return class object. ;  ; static TClass * LoadClass (const char *requestedname, Bool_t silent);  Helper function used by TClass::GetClass(). ;  ; static Int_t ReadRules ();  Read the class.rules files from the default location:. ;  ; static Int_t ReadRules (const char *filename);  Read a class.rules file which contains one rule per line with comment starting with a #. ;  ; static void RemoveClass (TClass *cl);  static: Remove a class from the list and map of classes ;  ; static void RemoveClassDeclId (TDictionary::DeclId_t id);  ;  Static Public Member Functions inherited from TDictionary; static TCl",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:34602,Performance,load,load,34602,"ool_t load=kTRUE, Bool_t silent=kFALSE);  Static method returning pointer to TClass of the specified ClassInfo. ;  ; static TClass * GetClass (const char *name, Bool_t load, Bool_t silent, size_t hint_pair_offset, size_t hint_pair_size);  ; static TClass * GetClass (const char *name, Bool_t load=kTRUE, Bool_t silent=kFALSE);  Static method returning pointer to TClass of the specified class name. ;  ; static TClass * GetClass (const std::type_info &typeinfo, Bool_t load=kTRUE, Bool_t silent=kFALSE, size_t hint_pair_offset=0, size_t hint_pair_size=0);  Return pointer to class with name. ;  ; static Bool_t GetClass (DeclId_t id, std::vector< TClass * > &classes);  ; static DictFuncPtr_t GetDict (const char *cname);  Return a pointer to the dictionary loading function generated by rootcint. ;  ; static DictFuncPtr_t GetDict (const std::type_info &info);  Return a pointer to the dictionary loading function generated by rootcint. ;  ; static Bool_t HasDictionarySelection (const char *clname);  Check whether a class has a dictionary or ROOT can load one. ;  ; static ENewType IsCallingNew ();  Static method returning the defConstructor flag passed to TClass::New(). ;  ; static TClass * Load (TBuffer &b);  Load class description from I/O buffer and return class object. ;  ; static TClass * LoadClass (const char *requestedname, Bool_t silent);  Helper function used by TClass::GetClass(). ;  ; static Int_t ReadRules ();  Read the class.rules files from the default location:. ;  ; static Int_t ReadRules (const char *filename);  Read a class.rules file which contains one rule per line with comment starting with a #. ;  ; static void RemoveClass (TClass *cl);  static: Remove a class from the list and map of classes ;  ; static void RemoveClassDeclId (TDictionary::DeclId_t id);  ;  Static Public Member Functions inherited from TDictionary; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFile",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:6839,Security,checksum,checksum,6839,"r delete[] for an array. ;  ; void Destructor (ObjectPtr obj, Bool_t dtorOnly=kFALSE);  Explicitly call destructor for object. ;  ; void Destructor (void *obj, Bool_t dtorOnly=kFALSE);  Explicitly call destructor for object. ;  ; void Draw (Option_t *option="""") override;  Draw detailed class inheritance structure. ;  ; void Dump () const override;  Dump contents of object on stdout. ;  ; void Dump (const void *obj, Bool_t noAddr=kFALSE) const;  Dump contents of object on stdout. ;  ; const void * DynamicCast (const TClass *base, const void *obj, Bool_t up=kTRUE);  Cast obj of this class type up to baseclass cl if up is true. ;  ; void * DynamicCast (const TClass *base, void *obj, Bool_t up=kTRUE);  Cast obj of this class type up to baseclass cl if up is true. ;  ; char * EscapeChars (const char *text) const;  Introduce an escape character (@) in front of a special chars. ;  ; TVirtualStreamerInfo * FindConversionStreamerInfo (const char *onfile_classname, UInt_t checksum) const;  Return a Conversion StreamerInfo from the class 'classname' for the layout represented by 'checksum' to this class, if any. ;  ; TVirtualStreamerInfo * FindConversionStreamerInfo (const TClass *onfile_cl, UInt_t checksum) const;  Return a Conversion StreamerInfo from the class represented by cl for the layout represented by 'checksum' to this class, if any. ;  ; TVirtualStreamerInfo * FindStreamerInfo (UInt_t checksum, Bool_t isTransient=kFALSE) const;  Find the TVirtualStreamerInfo in the StreamerInfos corresponding to checksum. ;  ; TVirtualStreamerInfo * FindStreamerInfoAbstractEmulated (UInt_t checksum) const;  For the case where the requestor class is emulated and this class is abstract, returns a pointer to the TVirtualStreamerInfo object for version with an emulated representation whether or not the class is loaded. ;  ; void ForceReload (TClass *oldcl);  we found at least one equivalent. ;  ; TClass * GetActualClass (const void *object) const;  Return a pointer to the real class of t",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:6948,Security,checksum,checksum,6948,"r delete[] for an array. ;  ; void Destructor (ObjectPtr obj, Bool_t dtorOnly=kFALSE);  Explicitly call destructor for object. ;  ; void Destructor (void *obj, Bool_t dtorOnly=kFALSE);  Explicitly call destructor for object. ;  ; void Draw (Option_t *option="""") override;  Draw detailed class inheritance structure. ;  ; void Dump () const override;  Dump contents of object on stdout. ;  ; void Dump (const void *obj, Bool_t noAddr=kFALSE) const;  Dump contents of object on stdout. ;  ; const void * DynamicCast (const TClass *base, const void *obj, Bool_t up=kTRUE);  Cast obj of this class type up to baseclass cl if up is true. ;  ; void * DynamicCast (const TClass *base, void *obj, Bool_t up=kTRUE);  Cast obj of this class type up to baseclass cl if up is true. ;  ; char * EscapeChars (const char *text) const;  Introduce an escape character (@) in front of a special chars. ;  ; TVirtualStreamerInfo * FindConversionStreamerInfo (const char *onfile_classname, UInt_t checksum) const;  Return a Conversion StreamerInfo from the class 'classname' for the layout represented by 'checksum' to this class, if any. ;  ; TVirtualStreamerInfo * FindConversionStreamerInfo (const TClass *onfile_cl, UInt_t checksum) const;  Return a Conversion StreamerInfo from the class represented by cl for the layout represented by 'checksum' to this class, if any. ;  ; TVirtualStreamerInfo * FindStreamerInfo (UInt_t checksum, Bool_t isTransient=kFALSE) const;  Find the TVirtualStreamerInfo in the StreamerInfos corresponding to checksum. ;  ; TVirtualStreamerInfo * FindStreamerInfoAbstractEmulated (UInt_t checksum) const;  For the case where the requestor class is emulated and this class is abstract, returns a pointer to the TVirtualStreamerInfo object for version with an emulated representation whether or not the class is loaded. ;  ; void ForceReload (TClass *oldcl);  we found at least one equivalent. ;  ; TClass * GetActualClass (const void *object) const;  Return a pointer to the real class of t",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:7069,Security,checksum,checksum,7069,"raw (Option_t *option="""") override;  Draw detailed class inheritance structure. ;  ; void Dump () const override;  Dump contents of object on stdout. ;  ; void Dump (const void *obj, Bool_t noAddr=kFALSE) const;  Dump contents of object on stdout. ;  ; const void * DynamicCast (const TClass *base, const void *obj, Bool_t up=kTRUE);  Cast obj of this class type up to baseclass cl if up is true. ;  ; void * DynamicCast (const TClass *base, void *obj, Bool_t up=kTRUE);  Cast obj of this class type up to baseclass cl if up is true. ;  ; char * EscapeChars (const char *text) const;  Introduce an escape character (@) in front of a special chars. ;  ; TVirtualStreamerInfo * FindConversionStreamerInfo (const char *onfile_classname, UInt_t checksum) const;  Return a Conversion StreamerInfo from the class 'classname' for the layout represented by 'checksum' to this class, if any. ;  ; TVirtualStreamerInfo * FindConversionStreamerInfo (const TClass *onfile_cl, UInt_t checksum) const;  Return a Conversion StreamerInfo from the class represented by cl for the layout represented by 'checksum' to this class, if any. ;  ; TVirtualStreamerInfo * FindStreamerInfo (UInt_t checksum, Bool_t isTransient=kFALSE) const;  Find the TVirtualStreamerInfo in the StreamerInfos corresponding to checksum. ;  ; TVirtualStreamerInfo * FindStreamerInfoAbstractEmulated (UInt_t checksum) const;  For the case where the requestor class is emulated and this class is abstract, returns a pointer to the TVirtualStreamerInfo object for version with an emulated representation whether or not the class is loaded. ;  ; void ForceReload (TClass *oldcl);  we found at least one equivalent. ;  ; TClass * GetActualClass (const void *object) const;  Return a pointer to the real class of the object. ;  ; TClass * GetBaseClass (const char *classname);  Return pointer to the base class ""classname"". ;  ; TClass * GetBaseClass (const TClass *base);  Return pointer to the base class ""cl"". ;  ; Int_t GetBaseClassOffset (const",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:7184,Security,checksum,checksum,7184,"raw (Option_t *option="""") override;  Draw detailed class inheritance structure. ;  ; void Dump () const override;  Dump contents of object on stdout. ;  ; void Dump (const void *obj, Bool_t noAddr=kFALSE) const;  Dump contents of object on stdout. ;  ; const void * DynamicCast (const TClass *base, const void *obj, Bool_t up=kTRUE);  Cast obj of this class type up to baseclass cl if up is true. ;  ; void * DynamicCast (const TClass *base, void *obj, Bool_t up=kTRUE);  Cast obj of this class type up to baseclass cl if up is true. ;  ; char * EscapeChars (const char *text) const;  Introduce an escape character (@) in front of a special chars. ;  ; TVirtualStreamerInfo * FindConversionStreamerInfo (const char *onfile_classname, UInt_t checksum) const;  Return a Conversion StreamerInfo from the class 'classname' for the layout represented by 'checksum' to this class, if any. ;  ; TVirtualStreamerInfo * FindConversionStreamerInfo (const TClass *onfile_cl, UInt_t checksum) const;  Return a Conversion StreamerInfo from the class represented by cl for the layout represented by 'checksum' to this class, if any. ;  ; TVirtualStreamerInfo * FindStreamerInfo (UInt_t checksum, Bool_t isTransient=kFALSE) const;  Find the TVirtualStreamerInfo in the StreamerInfos corresponding to checksum. ;  ; TVirtualStreamerInfo * FindStreamerInfoAbstractEmulated (UInt_t checksum) const;  For the case where the requestor class is emulated and this class is abstract, returns a pointer to the TVirtualStreamerInfo object for version with an emulated representation whether or not the class is loaded. ;  ; void ForceReload (TClass *oldcl);  we found at least one equivalent. ;  ; TClass * GetActualClass (const void *object) const;  Return a pointer to the real class of the object. ;  ; TClass * GetBaseClass (const char *classname);  Return pointer to the base class ""classname"". ;  ; TClass * GetBaseClass (const TClass *base);  Return pointer to the base class ""cl"". ;  ; Int_t GetBaseClassOffset (const",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:7270,Security,checksum,checksum,7270,"onst;  Dump contents of object on stdout. ;  ; const void * DynamicCast (const TClass *base, const void *obj, Bool_t up=kTRUE);  Cast obj of this class type up to baseclass cl if up is true. ;  ; void * DynamicCast (const TClass *base, void *obj, Bool_t up=kTRUE);  Cast obj of this class type up to baseclass cl if up is true. ;  ; char * EscapeChars (const char *text) const;  Introduce an escape character (@) in front of a special chars. ;  ; TVirtualStreamerInfo * FindConversionStreamerInfo (const char *onfile_classname, UInt_t checksum) const;  Return a Conversion StreamerInfo from the class 'classname' for the layout represented by 'checksum' to this class, if any. ;  ; TVirtualStreamerInfo * FindConversionStreamerInfo (const TClass *onfile_cl, UInt_t checksum) const;  Return a Conversion StreamerInfo from the class represented by cl for the layout represented by 'checksum' to this class, if any. ;  ; TVirtualStreamerInfo * FindStreamerInfo (UInt_t checksum, Bool_t isTransient=kFALSE) const;  Find the TVirtualStreamerInfo in the StreamerInfos corresponding to checksum. ;  ; TVirtualStreamerInfo * FindStreamerInfoAbstractEmulated (UInt_t checksum) const;  For the case where the requestor class is emulated and this class is abstract, returns a pointer to the TVirtualStreamerInfo object for version with an emulated representation whether or not the class is loaded. ;  ; void ForceReload (TClass *oldcl);  we found at least one equivalent. ;  ; TClass * GetActualClass (const void *object) const;  Return a pointer to the real class of the object. ;  ; TClass * GetBaseClass (const char *classname);  Return pointer to the base class ""classname"". ;  ; TClass * GetBaseClass (const TClass *base);  Return pointer to the base class ""cl"". ;  ; Int_t GetBaseClassOffset (const TClass *toBase, void *address=nullptr, bool isDerivedObject=true);  ; TClass * GetBaseDataMember (const char *datamember);  Return pointer to (base) class that contains datamember. ;  ; UInt_t GetCheckSum ",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:7383,Security,checksum,checksum,7383,"onst;  Dump contents of object on stdout. ;  ; const void * DynamicCast (const TClass *base, const void *obj, Bool_t up=kTRUE);  Cast obj of this class type up to baseclass cl if up is true. ;  ; void * DynamicCast (const TClass *base, void *obj, Bool_t up=kTRUE);  Cast obj of this class type up to baseclass cl if up is true. ;  ; char * EscapeChars (const char *text) const;  Introduce an escape character (@) in front of a special chars. ;  ; TVirtualStreamerInfo * FindConversionStreamerInfo (const char *onfile_classname, UInt_t checksum) const;  Return a Conversion StreamerInfo from the class 'classname' for the layout represented by 'checksum' to this class, if any. ;  ; TVirtualStreamerInfo * FindConversionStreamerInfo (const TClass *onfile_cl, UInt_t checksum) const;  Return a Conversion StreamerInfo from the class represented by cl for the layout represented by 'checksum' to this class, if any. ;  ; TVirtualStreamerInfo * FindStreamerInfo (UInt_t checksum, Bool_t isTransient=kFALSE) const;  Find the TVirtualStreamerInfo in the StreamerInfos corresponding to checksum. ;  ; TVirtualStreamerInfo * FindStreamerInfoAbstractEmulated (UInt_t checksum) const;  For the case where the requestor class is emulated and this class is abstract, returns a pointer to the TVirtualStreamerInfo object for version with an emulated representation whether or not the class is loaded. ;  ; void ForceReload (TClass *oldcl);  we found at least one equivalent. ;  ; TClass * GetActualClass (const void *object) const;  Return a pointer to the real class of the object. ;  ; TClass * GetBaseClass (const char *classname);  Return pointer to the base class ""classname"". ;  ; TClass * GetBaseClass (const TClass *base);  Return pointer to the base class ""cl"". ;  ; Int_t GetBaseClassOffset (const TClass *toBase, void *address=nullptr, bool isDerivedObject=true);  ; TClass * GetBaseDataMember (const char *datamember);  Return pointer to (base) class that contains datamember. ;  ; UInt_t GetCheckSum ",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:7462,Security,checksum,checksum,7462,"oid *obj, Bool_t up=kTRUE);  Cast obj of this class type up to baseclass cl if up is true. ;  ; char * EscapeChars (const char *text) const;  Introduce an escape character (@) in front of a special chars. ;  ; TVirtualStreamerInfo * FindConversionStreamerInfo (const char *onfile_classname, UInt_t checksum) const;  Return a Conversion StreamerInfo from the class 'classname' for the layout represented by 'checksum' to this class, if any. ;  ; TVirtualStreamerInfo * FindConversionStreamerInfo (const TClass *onfile_cl, UInt_t checksum) const;  Return a Conversion StreamerInfo from the class represented by cl for the layout represented by 'checksum' to this class, if any. ;  ; TVirtualStreamerInfo * FindStreamerInfo (UInt_t checksum, Bool_t isTransient=kFALSE) const;  Find the TVirtualStreamerInfo in the StreamerInfos corresponding to checksum. ;  ; TVirtualStreamerInfo * FindStreamerInfoAbstractEmulated (UInt_t checksum) const;  For the case where the requestor class is emulated and this class is abstract, returns a pointer to the TVirtualStreamerInfo object for version with an emulated representation whether or not the class is loaded. ;  ; void ForceReload (TClass *oldcl);  we found at least one equivalent. ;  ; TClass * GetActualClass (const void *object) const;  Return a pointer to the real class of the object. ;  ; TClass * GetBaseClass (const char *classname);  Return pointer to the base class ""classname"". ;  ; TClass * GetBaseClass (const TClass *base);  Return pointer to the base class ""cl"". ;  ; Int_t GetBaseClassOffset (const TClass *toBase, void *address=nullptr, bool isDerivedObject=true);  ; TClass * GetBaseDataMember (const char *datamember);  Return pointer to (base) class that contains datamember. ;  ; UInt_t GetCheckSum (Bool_t &isvalid) const;  Return GetCheckSum(kCurrentCheckSum,isvalid);. ;  ; UInt_t GetCheckSum (ECheckSum code, Bool_t &isvalid) const;  Compute and/or return the class check sum. ;  ; UInt_t GetCheckSum (ECheckSum code=kCurrentCheckSum",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:9866,Security,access,accessor,9866," const char *proto, Bool_t objectIsConst=kFALSE, ROOT::EFunctionMatchMode mode=ROOT::kConversionMatch);  Find the method with a given prototype. ;  ; Int_t GetClassSize () const;  ; Version_t GetClassVersion () const;  ; TVirtualCollectionProxy * GetCollectionProxy () const;  Return the proxy describing the collection (if any). ;  ; ROOT::ESTLType GetCollectionType () const;  Return the 'type' of the STL the TClass is representing. ;  ; const char * GetContextMenuTitle () const;  ; TVirtualStreamerInfo * GetConversionStreamerInfo (const char *onfile_classname, Int_t version) const;  Return a Conversion StreamerInfo from the class 'classname' for version number 'version' to this class, if any. ;  ; TVirtualStreamerInfo * GetConversionStreamerInfo (const TClass *onfile_cl, Int_t version) const;  Return a Conversion StreamerInfo from the class represented by cl for version number 'version' to this class, if any. ;  ; ClassConvStreamerFunc_t GetConvStreamerFunc () const;  Get a wrapper/accessor function around this class custom conversion streamer (member function). ;  ; TVirtualStreamerInfo * GetCurrentStreamerInfo ();  ; TDataMember * GetDataMember (const char *datamember) const;  Return pointer to datamember object with name ""datamember"". ;  ; Longptr_t GetDataMemberOffset (const char *membername) const;  return offset for member name. ;  ; Short_t GetDeclFileLine () const;  ; const char * GetDeclFileName () const;  Return name of the file containing the declaration of this class. ;  ; ROOT::DelFunc_t GetDelete () const;  Return the wrapper around delete ThiObject. ;  ; ROOT::DelArrFunc_t GetDeleteArray () const;  Return the wrapper around delete [] ThiObject. ;  ; ROOT::DesFunc_t GetDestructor () const;  Return the wrapper around the destructor. ;  ; ROOT::DirAutoAdd_t GetDirectoryAutoAdd () const;  Return the wrapper around the directory auto add function. ;  ; TFunctionTemplate * GetFunctionTemplate (const char *name);  ; UInt_t GetHeapInstanceCount () const;  ; S",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:12276,Security,access,accessible,12276," its base classes. ;  ; const TList * GetListOfAllPublicMethods (Bool_t load=kTRUE);  Returns a list of all public methods of this class and its base classes. ;  ; TList * GetListOfBases ();  Return list containing the TBaseClass(es) of a class. ;  ; TList * GetListOfDataMembers (Bool_t load=kTRUE);  Return list containing the TDataMembers of a class. ;  ; TList * GetListOfEnums (Bool_t load=kTRUE);  Return a list containing the TEnums of a class. ;  ; TList * GetListOfFunctionTemplates (Bool_t load=kTRUE);  Return TListOfFunctionTemplates for a class. ;  ; TCollection * GetListOfMethodOverloads (const char *name) const;  Return the collection of functions named ""name"". ;  ; TList * GetListOfMethods (Bool_t load=kTRUE);  Return list containing the TMethods of a class. ;  ; TList * GetListOfRealData () const;  ; TList * GetListOfUsingDataMembers (Bool_t load=kTRUE);  Return list containing the TDataMembers of using declarations of a class. ;  ; void GetMenuItems (TList *listitems);  Returns list of methods accessible by context menu. ;  ; TList * GetMenuList () const;  Return the list of menu items associated with the class. ;  ; ROOT::MergeFunc_t GetMerge () const;  Return the wrapper around Merge. ;  ; TMethod * GetMethod (const char *method, const char *params, Bool_t objectIsConst=kFALSE);  Find the best method (if there is one) matching the parameters. ;  ; TMethod * GetMethodAllAny (const char *method);  Return pointer to method without looking at parameters. ;  ; TMethod * GetMethodAny (const char *method);  Return pointer to method without looking at parameters. ;  ; TMethod * GetMethodWithPrototype (const char *method, const char *proto, Bool_t objectIsConst=kFALSE, ROOT::EFunctionMatchMode mode=ROOT::kConversionMatch);  Find the method with a given prototype. ;  ; void GetMissingDictionaries (THashTable &result, bool recurse=false);  Get the classes that have a missing dictionary starting from this one. ;  ; Int_t GetNdata ();  Return the number of data mem",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:14605,Security,access,accessor,14605,"ds of this class Note that in case the list of methods is not yet created, it will be done by GetListOfMethods(). ;  ; TClass *const * GetPersistentRef () const;  ; TRealData * GetRealData (const char *name) const;  Return pointer to TRealData element with name ""name"". ;  ; TVirtualRefProxy * GetReferenceProxy () const;  ; ROOT::ResetAfterMergeFunc_t GetResetAfterMerge () const;  Return the wrapper around Merge. ;  ; const ROOT::Detail::TSchemaRuleSet * GetSchemaRules () const;  Return the set of the schema rules if any. ;  ; ROOT::Detail::TSchemaRuleSet * GetSchemaRules (Bool_t create=kFALSE);  Return the set of the schema rules if any. ;  ; const char * GetSharedLibs ();  Get the list of shared libraries containing the code for class cls. ;  ; ShowMembersFunc_t GetShowMembersWrapper () const;  ; EState GetState () const;  ; TClassStreamer * GetStreamer () const;  Return the Streamer Class allowing streaming (if any). ;  ; ClassStreamerFunc_t GetStreamerFunc () const;  Get a wrapper/accessor function around this class custom streamer (member function). ;  ; TVirtualStreamerInfo * GetStreamerInfo (Int_t version=0, Bool_t isTransient=kFALSE) const;  returns a pointer to the TVirtualStreamerInfo object for version If the object does not exist, it is created ;  ; TVirtualStreamerInfo * GetStreamerInfoAbstractEmulated (Int_t version=0) const;  For the case where the requestor class is emulated and this class is abstract, returns a pointer to the TVirtualStreamerInfo object for version with an emulated representation whether or not the class is loaded. ;  ; const TObjArray * GetStreamerInfos () const;  ; const std::type_info * GetTypeInfo () const;  ; Bool_t HasConsistentHashMember ();  Return 'true' if we can guarantee that if this class (or any class in this class inheritance hierarchy) overload TObject::Hash it also starts the RecursiveRemove process from its own destructor. ;  ; Bool_t HasCustomStreamerMember () const;  The class has a Streamer method and it is implem",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:15808,Security,access,access,15808," const;  returns a pointer to the TVirtualStreamerInfo object for version If the object does not exist, it is created ;  ; TVirtualStreamerInfo * GetStreamerInfoAbstractEmulated (Int_t version=0) const;  For the case where the requestor class is emulated and this class is abstract, returns a pointer to the TVirtualStreamerInfo object for version with an emulated representation whether or not the class is loaded. ;  ; const TObjArray * GetStreamerInfos () const;  ; const std::type_info * GetTypeInfo () const;  ; Bool_t HasConsistentHashMember ();  Return 'true' if we can guarantee that if this class (or any class in this class inheritance hierarchy) overload TObject::Hash it also starts the RecursiveRemove process from its own destructor. ;  ; Bool_t HasCustomStreamerMember () const;  The class has a Streamer method and it is implemented by the user or an older (not StreamerInfo based) automatic streamer. ;  ; Bool_t HasDataMemberInfo () const;  ; Bool_t HasDefaultConstructor (Bool_t testio=kFALSE) const;  Return true if we have access to a constructor usable for I/O. ;  ; Bool_t HasDictionary () const;  Check whether a class has a dictionary or not. ;  ; Bool_t HasInterpreterInfo () const;  ; Bool_t HasInterpreterInfoInMemory () const;  ; Bool_t HasLocalHashMember () const;  Returns true if this class has an definition and/or overload of the member function Hash. ;  ; void IgnoreTObjectStreamer (Bool_t ignore=kTRUE);  When the class kIgnoreTObjectStreamer bit is set, the automatically generated Streamer will not call TObject::Streamer. ;  ; Bool_t InheritsFrom (const char *cl) const override;  Return kTRUE if this class inherits from a class with name ""classname"". ;  ; Bool_t InheritsFrom (const TClass *cl) const override;  Return kTRUE if this class inherits from class cl. ;  ; void InterpretedShowMembers (void *obj, TMemberInspector &insp, Bool_t isTransient);  Do a ShowMembers() traversal of all members and base classes' members using the reflection information f",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:17804,Security,checksum,checksum,17804,"ntains browsable objects (like containers or lists of other objects). ;  ; Bool_t IsFolder (void *obj) const;  Return kTRUE if the class has elements. ;  ; Bool_t IsForeign () const;  Return kTRUE is the class is Foreign (the class does not have a Streamer method). ;  ; Bool_t IsLoaded () const;  Return true if the shared library of this class is currently in the a process's memory. ;  ; Bool_t IsStartingWithTObject () const;  Returns true if this class inherits from TObject and if the start of the TObject parts is at the very beginning of the objects. ;  ; Bool_t IsSyntheticPair () const;  ; Bool_t IsTObject () const;  Return kTRUE is the class inherits from TObject. ;  ; Bool_t IsVersioned () const;  ; void ls (Option_t *opt="""") const override;  The ls function lists the contents of a class on stdout. ;  ; void MakeCustomMenuList ();  Makes a customizable version of the popup menu list, i.e. ;  ; Bool_t MatchLegacyCheckSum (UInt_t checksum) const;  Return true if the checksum passed as argument is one of the checksum value produced by the older checksum calculation algorithm. ;  ; void Move (void *arenaFrom, void *arenaTo) const;  Register the fact that an object was moved from the memory location 'arenaFrom' to the memory location 'arenaTo'. ;  ; void * New (ENewType defConstructor=kClassNew, Bool_t quiet=kFALSE) const;  Return a pointer to a newly allocated object of this class. ;  ; void * New (void *arena, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated object of this class. ;  ; void * NewArray (Long_t nElements, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated array of objects of this class. ;  ; void * NewArray (Long_t nElements, void *arena, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated object of this class. ;  ; ObjectPtr NewObject (ENewType defConstructor=kClassNew, Bool_t quiet=kFALSE) const;  ; ObjectPtr NewObject (void *arena, ENewType defConstructor=kC",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:17841,Security,checksum,checksum,17841,"ntains browsable objects (like containers or lists of other objects). ;  ; Bool_t IsFolder (void *obj) const;  Return kTRUE if the class has elements. ;  ; Bool_t IsForeign () const;  Return kTRUE is the class is Foreign (the class does not have a Streamer method). ;  ; Bool_t IsLoaded () const;  Return true if the shared library of this class is currently in the a process's memory. ;  ; Bool_t IsStartingWithTObject () const;  Returns true if this class inherits from TObject and if the start of the TObject parts is at the very beginning of the objects. ;  ; Bool_t IsSyntheticPair () const;  ; Bool_t IsTObject () const;  Return kTRUE is the class inherits from TObject. ;  ; Bool_t IsVersioned () const;  ; void ls (Option_t *opt="""") const override;  The ls function lists the contents of a class on stdout. ;  ; void MakeCustomMenuList ();  Makes a customizable version of the popup menu list, i.e. ;  ; Bool_t MatchLegacyCheckSum (UInt_t checksum) const;  Return true if the checksum passed as argument is one of the checksum value produced by the older checksum calculation algorithm. ;  ; void Move (void *arenaFrom, void *arenaTo) const;  Register the fact that an object was moved from the memory location 'arenaFrom' to the memory location 'arenaTo'. ;  ; void * New (ENewType defConstructor=kClassNew, Bool_t quiet=kFALSE) const;  Return a pointer to a newly allocated object of this class. ;  ; void * New (void *arena, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated object of this class. ;  ; void * NewArray (Long_t nElements, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated array of objects of this class. ;  ; void * NewArray (Long_t nElements, void *arena, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated object of this class. ;  ; ObjectPtr NewObject (ENewType defConstructor=kClassNew, Bool_t quiet=kFALSE) const;  ; ObjectPtr NewObject (void *arena, ENewType defConstructor=kC",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:17883,Security,checksum,checksum,17883,"ntains browsable objects (like containers or lists of other objects). ;  ; Bool_t IsFolder (void *obj) const;  Return kTRUE if the class has elements. ;  ; Bool_t IsForeign () const;  Return kTRUE is the class is Foreign (the class does not have a Streamer method). ;  ; Bool_t IsLoaded () const;  Return true if the shared library of this class is currently in the a process's memory. ;  ; Bool_t IsStartingWithTObject () const;  Returns true if this class inherits from TObject and if the start of the TObject parts is at the very beginning of the objects. ;  ; Bool_t IsSyntheticPair () const;  ; Bool_t IsTObject () const;  Return kTRUE is the class inherits from TObject. ;  ; Bool_t IsVersioned () const;  ; void ls (Option_t *opt="""") const override;  The ls function lists the contents of a class on stdout. ;  ; void MakeCustomMenuList ();  Makes a customizable version of the popup menu list, i.e. ;  ; Bool_t MatchLegacyCheckSum (UInt_t checksum) const;  Return true if the checksum passed as argument is one of the checksum value produced by the older checksum calculation algorithm. ;  ; void Move (void *arenaFrom, void *arenaTo) const;  Register the fact that an object was moved from the memory location 'arenaFrom' to the memory location 'arenaTo'. ;  ; void * New (ENewType defConstructor=kClassNew, Bool_t quiet=kFALSE) const;  Return a pointer to a newly allocated object of this class. ;  ; void * New (void *arena, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated object of this class. ;  ; void * NewArray (Long_t nElements, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated array of objects of this class. ;  ; void * NewArray (Long_t nElements, void *arena, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated object of this class. ;  ; ObjectPtr NewObject (ENewType defConstructor=kClassNew, Bool_t quiet=kFALSE) const;  ; ObjectPtr NewObject (void *arena, ENewType defConstructor=kC",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:17920,Security,checksum,checksum,17920,"ntains browsable objects (like containers or lists of other objects). ;  ; Bool_t IsFolder (void *obj) const;  Return kTRUE if the class has elements. ;  ; Bool_t IsForeign () const;  Return kTRUE is the class is Foreign (the class does not have a Streamer method). ;  ; Bool_t IsLoaded () const;  Return true if the shared library of this class is currently in the a process's memory. ;  ; Bool_t IsStartingWithTObject () const;  Returns true if this class inherits from TObject and if the start of the TObject parts is at the very beginning of the objects. ;  ; Bool_t IsSyntheticPair () const;  ; Bool_t IsTObject () const;  Return kTRUE is the class inherits from TObject. ;  ; Bool_t IsVersioned () const;  ; void ls (Option_t *opt="""") const override;  The ls function lists the contents of a class on stdout. ;  ; void MakeCustomMenuList ();  Makes a customizable version of the popup menu list, i.e. ;  ; Bool_t MatchLegacyCheckSum (UInt_t checksum) const;  Return true if the checksum passed as argument is one of the checksum value produced by the older checksum calculation algorithm. ;  ; void Move (void *arenaFrom, void *arenaTo) const;  Register the fact that an object was moved from the memory location 'arenaFrom' to the memory location 'arenaTo'. ;  ; void * New (ENewType defConstructor=kClassNew, Bool_t quiet=kFALSE) const;  Return a pointer to a newly allocated object of this class. ;  ; void * New (void *arena, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated object of this class. ;  ; void * NewArray (Long_t nElements, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated array of objects of this class. ;  ; void * NewArray (Long_t nElements, void *arena, ENewType defConstructor=kClassNew) const;  Return a pointer to a newly allocated object of this class. ;  ; ObjectPtr NewObject (ENewType defConstructor=kClassNew, Bool_t quiet=kFALSE) const;  ; ObjectPtr NewObject (void *arena, ENewType defConstructor=kC",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:20969,Security,access,accessor,20969,"gister the StreamerInfo in the given slot, change the State of the TClass as appropriate. ;  ; void RemoveStreamerInfo (Int_t slot);  Remove and delete the StreamerInfo in the given slot. ;  ; void ReplaceWith (TClass *newcl) const;  ; void ResetCaches ();  To clean out all caches. ;  ; void ResetClassInfo ();  Make sure that the current ClassInfo is up to date. ;  ; void ResetClassInfo (Long_t tagnum);  Make sure that the current ClassInfo is up to date. ;  ; void ResetInstanceCount ();  ; void ResetMenuList ();  Resets the menu list to it's standard value. ;  ; void SetCanSplit (Int_t splitmode);  Set the splitability of this class: ;  ; void SetCollectionProxy (const ROOT::Detail::TCollectionProxyInfo &);  Create the collection proxy object (and the streamer object) from using the information in the TCollectionProxyInfo. ;  ; void SetContextMenuTitle (const char *title);  Change (i.e. set) the title of the TNamed. ;  ; void SetConvStreamerFunc (ClassConvStreamerFunc_t strm);  Set a wrapper/accessor function around this class custom conversion streamer. ;  ; void SetCurrentStreamerInfo (TVirtualStreamerInfo *info);  Set pointer to current TVirtualStreamerInfo. ;  ; void SetDeclFile (const char *name, Short_t line);  ; void SetDelete (ROOT::DelFunc_t deleteFunc);  Install a new wrapper around 'delete'. ;  ; void SetDeleteArray (ROOT::DelArrFunc_t deleteArrayFunc);  Install a new wrapper around 'delete []'. ;  ; void SetDestructor (ROOT::DesFunc_t destructorFunc);  Install a new wrapper around the destructor. ;  ; void SetDirectoryAutoAdd (ROOT::DirAutoAdd_t dirAutoAddFunc);  Install a new wrapper around the directory auto add function. ;  ; void SetGlobalIsA (IsAGlobalFunc_t);  This function installs a global IsA function for this class. ;  ; void SetImplFileName (const char *implFileName);  ; void SetLastReadInfo (TVirtualStreamerInfo *info);  ; void SetMemberStreamer (const char *name, MemberStreamerFunc_t strm);  Install a new member streamer (p will be copied). ",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:22417,Security,access,accessor,22417,"tructor (ROOT::DesFunc_t destructorFunc);  Install a new wrapper around the destructor. ;  ; void SetDirectoryAutoAdd (ROOT::DirAutoAdd_t dirAutoAddFunc);  Install a new wrapper around the directory auto add function. ;  ; void SetGlobalIsA (IsAGlobalFunc_t);  This function installs a global IsA function for this class. ;  ; void SetImplFileName (const char *implFileName);  ; void SetLastReadInfo (TVirtualStreamerInfo *info);  ; void SetMemberStreamer (const char *name, MemberStreamerFunc_t strm);  Install a new member streamer (p will be copied). ;  ; void SetMerge (ROOT::MergeFunc_t mergeFunc);  Install a new wrapper around 'Merge'. ;  ; void SetNew (ROOT::NewFunc_t newFunc);  Install a new wrapper around 'new'. ;  ; void SetNewArray (ROOT::NewArrFunc_t newArrayFunc);  Install a new wrapper around 'new []'. ;  ; void SetResetAfterMerge (ROOT::ResetAfterMergeFunc_t resetFunc);  Install a new wrapper around 'ResetAfterMerge'. ;  ; void SetStreamerFunc (ClassStreamerFunc_t strm);  Set a wrapper/accessor function around this class custom streamer. ;  ; TVirtualStreamerInfo * SetStreamerInfo (Int_t version, const char *info="""");  Info is a string describing the names and types of attributes written by the class Streamer function. ;  ; void SetUnloaded ();  Call this method to indicate that the shared library containing this class's code has been removed (unloaded) from the process's memory. ;  ; Int_t Size () const;  Return size of object of this class. ;  ; void Store (TBuffer &b) const;  Store class description on I/O buffer. ;  ; void Streamer (void *obj, TBuffer &b, const TClass *onfile_class=nullptr) const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t WriteBuffer (TBuffer &b, void *pointer, const char *info="""");  Function called by the Streamer functions to serialize object at p to buffer b. ;  ;  Public Member Functions inherited from TDictionary;  TDictionary ();  ;  TDictionary (const char *name);  ;  TDictionary (const TDictionary ",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:24540,Security,hash,hash,24540,"ctionary & operator= (const TDictionary &other);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this met",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:39325,Security,checksum,checksum,39325,"eredmultiset; , kUnorderedMap = ROOT::kSTLunorderedmap; , ;   kUnorderedMultimap = ROOT::kSTLunorderedmultimap; , kBitset = ROOT::kSTLbitset. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TClass; TVirtualStreamerInfo * FindStreamerInfo (TObjArray *arr, UInt_t checksum) const;  Find the TVirtualStreamerInfo in the StreamerInfos corresponding to checksum. ;  ; void GetMissingDictionariesForBaseClasses (TCollection &result, TCollection &visited, bool recurse);  Verify the base classes always. ;  ; void GetMissingDictionariesForMembers (TCollection &result, TCollection &visited, bool recurse);  Verify the Data Members. ;  ; void GetMissingDictionariesForPairElements (TCollection &result, TCollection &visited, bool recurse);  ; void GetMissingDictionariesWithRecursionCheck (TCollection &result, TCollection &visited, bool recurse);  From the second level of recursion onwards it is different state check. ;  ;  Protected Member Functions inherited from TDictionary; Bool_t UpdateInterpreterStateMarker ();  the Cling ID of the transaction that last updated the object ;  ;  Protected Member Functions inherited from TObject; vir",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:39411,Security,checksum,checksum,39411,"eredmultiset; , kUnorderedMap = ROOT::kSTLunorderedmap; , ;   kUnorderedMultimap = ROOT::kSTLunorderedmultimap; , kBitset = ROOT::kSTLbitset. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TClass; TVirtualStreamerInfo * FindStreamerInfo (TObjArray *arr, UInt_t checksum) const;  Find the TVirtualStreamerInfo in the StreamerInfos corresponding to checksum. ;  ; void GetMissingDictionariesForBaseClasses (TCollection &result, TCollection &visited, bool recurse);  Verify the base classes always. ;  ; void GetMissingDictionariesForMembers (TCollection &result, TCollection &visited, bool recurse);  Verify the Data Members. ;  ; void GetMissingDictionariesForPairElements (TCollection &result, TCollection &visited, bool recurse);  ; void GetMissingDictionariesWithRecursionCheck (TCollection &result, TCollection &visited, bool recurse);  From the second level of recursion onwards it is different state check. ;  ;  Protected Member Functions inherited from TDictionary; Bool_t UpdateInterpreterStateMarker ();  the Cling ID of the transaction that last updated the object ;  ;  Protected Member Functions inherited from TObject; vir",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:15762,Testability,test,testio,15762," const;  returns a pointer to the TVirtualStreamerInfo object for version If the object does not exist, it is created ;  ; TVirtualStreamerInfo * GetStreamerInfoAbstractEmulated (Int_t version=0) const;  For the case where the requestor class is emulated and this class is abstract, returns a pointer to the TVirtualStreamerInfo object for version with an emulated representation whether or not the class is loaded. ;  ; const TObjArray * GetStreamerInfos () const;  ; const std::type_info * GetTypeInfo () const;  ; Bool_t HasConsistentHashMember ();  Return 'true' if we can guarantee that if this class (or any class in this class inheritance hierarchy) overload TObject::Hash it also starts the RecursiveRemove process from its own destructor. ;  ; Bool_t HasCustomStreamerMember () const;  The class has a Streamer method and it is implemented by the user or an older (not StreamerInfo based) automatic streamer. ;  ; Bool_t HasDataMemberInfo () const;  ; Bool_t HasDefaultConstructor (Bool_t testio=kFALSE) const;  Return true if we have access to a constructor usable for I/O. ;  ; Bool_t HasDictionary () const;  Check whether a class has a dictionary or not. ;  ; Bool_t HasInterpreterInfo () const;  ; Bool_t HasInterpreterInfoInMemory () const;  ; Bool_t HasLocalHashMember () const;  Returns true if this class has an definition and/or overload of the member function Hash. ;  ; void IgnoreTObjectStreamer (Bool_t ignore=kTRUE);  When the class kIgnoreTObjectStreamer bit is set, the automatically generated Streamer will not call TObject::Streamer. ;  ; Bool_t InheritsFrom (const char *cl) const override;  Return kTRUE if this class inherits from a class with name ""classname"". ;  ; Bool_t InheritsFrom (const TClass *cl) const override;  Return kTRUE if this class inherits from class cl. ;  ; void InterpretedShowMembers (void *obj, TMemberInspector &insp, Bool_t isTransient);  Do a ShowMembers() traversal of all members and base classes' members using the reflection information f",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQClass.html:15832,Usability,usab,usable,15832," const;  returns a pointer to the TVirtualStreamerInfo object for version If the object does not exist, it is created ;  ; TVirtualStreamerInfo * GetStreamerInfoAbstractEmulated (Int_t version=0) const;  For the case where the requestor class is emulated and this class is abstract, returns a pointer to the TVirtualStreamerInfo object for version with an emulated representation whether or not the class is loaded. ;  ; const TObjArray * GetStreamerInfos () const;  ; const std::type_info * GetTypeInfo () const;  ; Bool_t HasConsistentHashMember ();  Return 'true' if we can guarantee that if this class (or any class in this class inheritance hierarchy) overload TObject::Hash it also starts the RecursiveRemove process from its own destructor. ;  ; Bool_t HasCustomStreamerMember () const;  The class has a Streamer method and it is implemented by the user or an older (not StreamerInfo based) automatic streamer. ;  ; Bool_t HasDataMemberInfo () const;  ; Bool_t HasDefaultConstructor (Bool_t testio=kFALSE) const;  Return true if we have access to a constructor usable for I/O. ;  ; Bool_t HasDictionary () const;  Check whether a class has a dictionary or not. ;  ; Bool_t HasInterpreterInfo () const;  ; Bool_t HasInterpreterInfoInMemory () const;  ; Bool_t HasLocalHashMember () const;  Returns true if this class has an definition and/or overload of the member function Hash. ;  ; void IgnoreTObjectStreamer (Bool_t ignore=kTRUE);  When the class kIgnoreTObjectStreamer bit is set, the automatically generated Streamer will not call TObject::Streamer. ;  ; Bool_t InheritsFrom (const char *cl) const override;  Return kTRUE if this class inherits from a class with name ""classname"". ;  ; Bool_t InheritsFrom (const TClass *cl) const override;  Return kTRUE if this class inherits from class cl. ;  ; void InterpretedShowMembers (void *obj, TMemberInspector &insp, Bool_t isTransient);  Do a ShowMembers() traversal of all members and base classes' members using the reflection information f",MatchSource.WIKI,doc/master/classTQClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQClass.html
https://root.cern/doc/master/classTQCommand.html:892,Availability,down,downwards,892,". ROOT: TQCommand Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; Friends |; List of all members ; TQCommand Class ReferenceCore ROOT classes » Base ROOT classes. ; The Command design pattern is based on the idea, that all editing in an application is done by creating instances of command objects. ; Command objects apply changes to the edited object and then are stored on a command stack. Furthermore, each command knows how to undo its changes to bring the edited object back to its previous state. As long as the application only uses command objects to change the state of the edited object, it is possible to undo a sequence of commands by traversing the command stack downwards and calling the ""undo"" method of each command in turn. It is also possible to redo a sequence of commands by traversing the command stack upwards and calling the ""redo"" method of each command.; Examples:. Create a new command TQCommand *com = new TQCommand(""TH1"", hpx, ""SetFillColor(Color_t)""; ""SetFillColor(Color_t)"");; TQCommandThe Command design pattern is based on the idea, that all editing in an application is done by creati...Definition TQCommand.h:27. 1st parameter - the name of class; 2nd parameter - object; 3rd parameter - the name of do/redo method; 4th parameter - the name of undo method Since redo,undo methods are the same, undo name can be omitted, e.g. TQCommand *com = new TQCommand(""TH1"", hpx, ""SetFillColor(Color_t)"");; For objects derived from TObject class name can be omitted, e.g. TQCommand *com = new TQCommand(hpx, ""SetFillColor(Color_t)"");. Setting undo, redo parameters. Color_t old_color = hpx->GetFillColor();; Color_t new_color = 4; // blue color; ; com->SetRedoArgs(1, new_color);; com->SetUndoArgs(1, old_color);; Color_tshort Color_tDefinition RtypesCore.h:85; T",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:16643,Availability,error,error,16643,"ar *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; ",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:16732,Availability,error,error,16732,"leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out.",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:16887,Availability,error,error,16887," whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ; ",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:17184,Availability,error,error,17184,"bj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns k",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:20447,Availability,error,error,20447," operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Co",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:3024,Deployability,update,update,3024,"Args(Int_t nargs,...)Set undo parameters.Definition TQCommand.cxx:542; 1st argument - the number of undo, redo parameters the other arguments - undo, redo values Since the number of undo,redo parameters is the same one can use com->SetArgs(1, new_color, old_color);; TQCommand::SetArgsvirtual void SetArgs(Int_t nargs,...)Set do/redo and undo parameters.Definition TQCommand.cxx:465. Undo, redo method execution com->Redo(); // execute redo method; com->Undo(); // execute undo method; TQCommand::Undovirtual void Undo(Option_t *option="""")Un-execute all merged commands and the command.Definition TQCommand.cxx:626; TQCommand::Redovirtual void Redo(Option_t *option="""")Execute command and then merge commands.Definition TQCommand.cxx:588. Merged commands It possible to group several commands together so an end user can undo and redo them with one command. TQCommand *update = new TQCommand(gPad, ""Modified()"");; com->Add(update);; updatestatic void update(gsl_integration_workspace *workspace, double a1, double b1, double area1, double error1, double a2, double b2, double area2, double error2)Definition RooAdaptiveGaussKronrodIntegrator1D.cxx:633; gPad#define gPadDefinition TVirtualPad.h:308; TQCommand::Addvoid Add(TObject *obj, Option_t *opt) overrideAdd command to the list of merged commands.Definition TQCommand.cxx:360. Macro commands ""Merging"" allows to create macro commands, e.g. TQCommand *macro = new TQCommand(""my macro"");; macro->Add(com1);; macro->Add(com2);; ...; During Redo operation commands composing macro command are executed sequentially in direct order (first in first out). During Undo, they are executed in reverse order (last in first out).; Undo manager. TQUndoManager is recorder of undo and redo operations. This is command history list which can be traversed backwards and upwards performing undo and redo operations. To register command TQUndoManager::Add(TObject*) method is used. TQUndoManager *history = new TQUndoManager();; history->Add(com);; TQCommand::TQUn",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:3078,Deployability,update,update,3078,"Args(Int_t nargs,...)Set undo parameters.Definition TQCommand.cxx:542; 1st argument - the number of undo, redo parameters the other arguments - undo, redo values Since the number of undo,redo parameters is the same one can use com->SetArgs(1, new_color, old_color);; TQCommand::SetArgsvirtual void SetArgs(Int_t nargs,...)Set do/redo and undo parameters.Definition TQCommand.cxx:465. Undo, redo method execution com->Redo(); // execute redo method; com->Undo(); // execute undo method; TQCommand::Undovirtual void Undo(Option_t *option="""")Un-execute all merged commands and the command.Definition TQCommand.cxx:626; TQCommand::Redovirtual void Redo(Option_t *option="""")Execute command and then merge commands.Definition TQCommand.cxx:588. Merged commands It possible to group several commands together so an end user can undo and redo them with one command. TQCommand *update = new TQCommand(gPad, ""Modified()"");; com->Add(update);; updatestatic void update(gsl_integration_workspace *workspace, double a1, double b1, double area1, double error1, double a2, double b2, double area2, double error2)Definition RooAdaptiveGaussKronrodIntegrator1D.cxx:633; gPad#define gPadDefinition TVirtualPad.h:308; TQCommand::Addvoid Add(TObject *obj, Option_t *opt) overrideAdd command to the list of merged commands.Definition TQCommand.cxx:360. Macro commands ""Merging"" allows to create macro commands, e.g. TQCommand *macro = new TQCommand(""my macro"");; macro->Add(com1);; macro->Add(com2);; ...; During Redo operation commands composing macro command are executed sequentially in direct order (first in first out). During Undo, they are executed in reverse order (last in first out).; Undo manager. TQUndoManager is recorder of undo and redo operations. This is command history list which can be traversed backwards and upwards performing undo and redo operations. To register command TQUndoManager::Add(TObject*) method is used. TQUndoManager *history = new TQUndoManager();; history->Add(com);; TQCommand::TQUn",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:3088,Deployability,update,updatestatic,3088,"Args(Int_t nargs,...)Set undo parameters.Definition TQCommand.cxx:542; 1st argument - the number of undo, redo parameters the other arguments - undo, redo values Since the number of undo,redo parameters is the same one can use com->SetArgs(1, new_color, old_color);; TQCommand::SetArgsvirtual void SetArgs(Int_t nargs,...)Set do/redo and undo parameters.Definition TQCommand.cxx:465. Undo, redo method execution com->Redo(); // execute redo method; com->Undo(); // execute undo method; TQCommand::Undovirtual void Undo(Option_t *option="""")Un-execute all merged commands and the command.Definition TQCommand.cxx:626; TQCommand::Redovirtual void Redo(Option_t *option="""")Execute command and then merge commands.Definition TQCommand.cxx:588. Merged commands It possible to group several commands together so an end user can undo and redo them with one command. TQCommand *update = new TQCommand(gPad, ""Modified()"");; com->Add(update);; updatestatic void update(gsl_integration_workspace *workspace, double a1, double b1, double area1, double error1, double a2, double b2, double area2, double error2)Definition RooAdaptiveGaussKronrodIntegrator1D.cxx:633; gPad#define gPadDefinition TVirtualPad.h:308; TQCommand::Addvoid Add(TObject *obj, Option_t *opt) overrideAdd command to the list of merged commands.Definition TQCommand.cxx:360. Macro commands ""Merging"" allows to create macro commands, e.g. TQCommand *macro = new TQCommand(""my macro"");; macro->Add(com1);; macro->Add(com2);; ...; During Redo operation commands composing macro command are executed sequentially in direct order (first in first out). During Undo, they are executed in reverse order (last in first out).; Undo manager. TQUndoManager is recorder of undo and redo operations. This is command history list which can be traversed backwards and upwards performing undo and redo operations. To register command TQUndoManager::Add(TObject*) method is used. TQUndoManager *history = new TQUndoManager();; history->Add(com);; TQCommand::TQUn",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:3106,Deployability,update,update,3106,"Args(Int_t nargs,...)Set undo parameters.Definition TQCommand.cxx:542; 1st argument - the number of undo, redo parameters the other arguments - undo, redo values Since the number of undo,redo parameters is the same one can use com->SetArgs(1, new_color, old_color);; TQCommand::SetArgsvirtual void SetArgs(Int_t nargs,...)Set do/redo and undo parameters.Definition TQCommand.cxx:465. Undo, redo method execution com->Redo(); // execute redo method; com->Undo(); // execute undo method; TQCommand::Undovirtual void Undo(Option_t *option="""")Un-execute all merged commands and the command.Definition TQCommand.cxx:626; TQCommand::Redovirtual void Redo(Option_t *option="""")Execute command and then merge commands.Definition TQCommand.cxx:588. Merged commands It possible to group several commands together so an end user can undo and redo them with one command. TQCommand *update = new TQCommand(gPad, ""Modified()"");; com->Add(update);; updatestatic void update(gsl_integration_workspace *workspace, double a1, double b1, double area1, double error1, double a2, double b2, double area2, double error2)Definition RooAdaptiveGaussKronrodIntegrator1D.cxx:633; gPad#define gPadDefinition TVirtualPad.h:308; TQCommand::Addvoid Add(TObject *obj, Option_t *opt) overrideAdd command to the list of merged commands.Definition TQCommand.cxx:360. Macro commands ""Merging"" allows to create macro commands, e.g. TQCommand *macro = new TQCommand(""my macro"");; macro->Add(com1);; macro->Add(com2);; ...; During Redo operation commands composing macro command are executed sequentially in direct order (first in first out). During Undo, they are executed in reverse order (last in first out).; Undo manager. TQUndoManager is recorder of undo and redo operations. This is command history list which can be traversed backwards and upwards performing undo and redo operations. To register command TQUndoManager::Add(TObject*) method is used. TQUndoManager *history = new TQUndoManager();; history->Add(com);; TQCommand::TQUn",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:16649,Integrability,message,message,16649,"ar *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; ",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:17190,Integrability,message,message,17190,"bj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns k",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:17980,Integrability,message,message,17980,". ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method to declare a method obsolete. ;  ; void operator delete (void *ptr);  Operator de",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:20453,Integrability,message,message,20453," operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Co",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:20826,Integrability,message,message,20826," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const cha",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:8227,Modifiability,inherit,inherited,8227,"mand and merged commands ;  ; virtual Long64_t Merge (TCollection *, TFileMergeInfo *);  Merge a collection of TQCommand. ;  ; virtual void Merge (TQCommand *c);  Add command to the list of merged commands. ;  ; virtual void Redo (Option_t *option="""");  Execute command and then merge commands. ;  ; virtual void SetArgs (Int_t nargs,...);  Set do/redo and undo parameters. ;  ; virtual void SetName (const char *name);  Sets name of the command. ;  ; virtual void SetRedoArgs (Int_t nargs,...);  Set redo parameters. ;  ; virtual void SetTitle (const char *title);  Sets description of the command. ;  ; virtual void SetUndoArgs (Int_t nargs,...);  Set undo parameters. ;  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Undo (Option_t *option="""");  Un-execute all merged commands and the command. ;  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void AddAfter (const TObject *after, TObject *obj) override;  Insert object after object after in the list. ;  ; virtual void AddAfter (TObjLink *after, TObject *obj);  Insert object after the specified ObjLink object. ;  ; void AddAt (TObject *obj, Int_t idx) override;  Insert object at position idx in the list. ;  ; void AddBefore (const TObject *before, TObject *obj) override;  Insert object before object before in the list. ;  ; virtual void AddBefore (TObjLink *before, TObject *obj);  Insert object before the specified ObjLink object. ;  ; void AddFirst (TObject *obj) override;  Add object at the beginning of the list. ;  ; virtual void AddFirst (TObject *obj, Option_t *opt);  Add object at the beginning of the list and also store option. ;  ; void AddLast (TObject *obj) override;  Add object at the end of the list. ;  ; virtual v",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:11168,Modifiability,inherit,inherited,11168,erride;  Return address of pointer to obj. ;  ; Bool_t IsAscending ();  ; TObject * Last () const override;  Return the last object in the list. Returns 0 when list is empty. ;  ; virtual TObjLink * LastLink () const;  ; TIterator * MakeIterator (Bool_t dir=kIterForward) const override;  Return a list iterator. ;  ; void RecursiveRemove (TObject *obj) override;  Remove object from this collection and recursively remove the object from all other objects (and collections). ;  ; TObject * Remove (const TObjLinkPtr_t &lnk);  ; TObject * Remove (TObject *obj) override;  Remove object from the list. ;  ; virtual TObject * Remove (TObjLink *lnk);  Remove object link (and therefore the object it contains) from the list. ;  ; void RemoveLast () override;  Remove the last object of the list. ;  ; virtual void Sort (Bool_t order=kSortAscending);  Sort linked list. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSeqCollection; virtual ~TSeqCollection ();  ; void Add (TObject *obj) override;  ; virtual Int_t GetLast () const;  Returns index of last object in collection. ;  ; virtual Int_t IndexOf (const TObject *obj) const;  Return index of object in collection. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual TObject * RemoveAt (Int_t idx);  ; virtual void RemoveBefore (TObject *before);  ; virtual void RemoveFirst ();  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnSort ();  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this ,MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:12039,Modifiability,inherit,inherited,12039," Sort (Bool_t order=kSortAscending);  Sort linked list. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSeqCollection; virtual ~TSeqCollection ();  ; void Add (TObject *obj) override;  ; virtual Int_t GetLast () const;  Returns index of last object in collection. ;  ; virtual Int_t IndexOf (const TObject *obj) const;  Return index of object in collection. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual TObject * RemoveAt (Int_t idx);  ; virtual void RemoveBefore (TObject *before);  ; virtual void RemoveFirst ();  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnSort ();  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this collection. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIte",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:12385,Modifiability,inherit,inherit,12385,"tual Int_t IndexOf (const TObject *obj) const;  Return index of object in collection. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual TObject * RemoveAt (Int_t idx);  ; virtual void RemoveBefore (TObject *before);  ; virtual void RemoveFirst ();  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnSort ();  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this collection. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIter end () const;  ; virtual Int_t GetEntries () const;  ; virtual Int_t GetSize () const;  Return the capacity of the collection, i.e. ;  ; virtual Int_t GrowBy (Int_t delta) const;  Increase the collection's capacity by delta slots. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsArgNull (const ",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:15443,Modifiability,inherit,inherited,15443," the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool UseRWLock (Bool_t enable=true);  Set this collection to use a RW lock upon access, making it thread safe. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *optio",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:16348,Modifiability,inherit,inheritance,16348," bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () con",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:18078,Modifiability,inherit,inherits,18078," action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method to declare a method obsolete. ;  ; void operator delete (void *ptr);  Operator delete. ;  ; void operator delete (void *ptr, void *vp);  Only called by plac",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:18195,Modifiability,inherit,inherits,18195,"const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method to declare a method obsolete. ;  ; void operator delete (void *ptr);  Operator delete. ;  ; void operator delete (void *ptr, void *vp);  Only called by placement new when throwing an exception. ;  ; void operator delete[] (void *ptr);  Operator delete []. ;  ; void operat",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:20865,Modifiability,inherit,inherited,20865,"ual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const char *signal, const T &arg);  Activate signal with single paramet",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:23117,Modifiability,inherit,inherited,23117,"  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TQCommand * GetCommand ();  Return a command which is doing redo/undo action. ;  ;  Static Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of t",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:23326,Modifiability,inherit,inherited,23326,"  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TQCommand * GetCommand ();  Return a command which is doing redo/undo action. ;  ;  Static Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of t",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:24021,Modifiability,inherit,inherited,24021,"tic Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions ",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:24572,Modifiability,inherit,inherited,24572,"nt_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t C",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:25090,Modifiability,inherit,inherited,25090,"constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullpt",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:26528,Modifiability,inherit,inherited,26528,");  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; virtual void Init (const char *cl, void *object, const char *redo, const char *undo);  Common protected method used in several constructors. ;  ; void PrintCollectionHeader (Option_t *option) const override;  Print collection header. ;  ;  Protected Member Functions inherited from TList; TObjLinkPtr_t * DoSort (TObjLinkPtr_t *head, Int_t n);  Sort linked list. ;  ; TObjLink * FindLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjLink that also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollect",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:27516,Modifiability,inherit,inherited,27516,"dLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjLink that also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Protected Attributes; TString fName;  ; Bool_t fNewDelete;  ; Int_t fNRargs;  ; Int_t fNUargs;  ; void * fObject;  ; TQConnection * fRedo;  ; Long_t * fRedoArgs;  ; Int_t fState;  ; Int_t fStatus;  ; TString fTitle;  ; TQConnection * fUndo;  ; Long_t * fUndoArgs;  ;  Protected Attrib",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:27626,Modifiability,inherit,inherited,27626,"dLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjLink that also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Protected Attributes; TString fName;  ; Bool_t fNewDelete;  ; Int_t fNRargs;  ; Int_t fNUargs;  ; void * fObject;  ; TQConnection * fRedo;  ; Long_t * fRedoArgs;  ; Int_t fState;  ; Int_t fStatus;  ; TString fTitle;  ; TQConnection * fUndo;  ; Long_t * fUndoArgs;  ;  Protected Attrib",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:28038,Modifiability,inherit,inherited,28038,"Ptr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjLink that also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Protected Attributes; TString fName;  ; Bool_t fNewDelete;  ; Int_t fNRargs;  ; Int_t fNUargs;  ; void * fObject;  ; TQConnection * fRedo;  ; Long_t * fRedoArgs;  ; Int_t fState;  ; Int_t fStatus;  ; TString fTitle;  ; TQConnection * fUndo;  ; Long_t * fUndoArgs;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  ;  Protected Attribu",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:28249,Modifiability,inherit,inherited,28249,"TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjLink that also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Protected Attributes; TString fName;  ; Bool_t fNewDelete;  ; Int_t fNRargs;  ; Int_t fNUargs;  ; void * fObject;  ; TQConnection * fRedo;  ; Long_t * fRedoArgs;  ; Int_t fState;  ; Int_t fStatus;  ; TString fTitle;  ; TQConnection * fUndo;  ; Long_t * fUndoArgs;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this o",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:28648,Modifiability,inherit,inherited,28648,"ct and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Protected Attributes; TString fName;  ; Bool_t fNewDelete;  ; Int_t fNRargs;  ; Int_t fNUargs;  ; void * fObject;  ; TQConnection * fRedo;  ; Long_t * fRedoArgs;  ; Int_t fState;  ; Int_t fStatus;  ; TString fTitle;  ; TQConnection * fUndo;  ; Long_t * fUndoArgs;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions; TQCommand & operator= (const TQCommand &);  . Friends; class TQUndoManager;  . Additional Inherited Members;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 ",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:28946,Modifiability,inherit,inherited,28946,"ct and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Protected Attributes; TString fName;  ; Bool_t fNewDelete;  ; Int_t fNRargs;  ; Int_t fNUargs;  ; void * fObject;  ; TQConnection * fRedo;  ; Long_t * fRedoArgs;  ; Int_t fState;  ; Int_t fStatus;  ; TString fTitle;  ; TQConnection * fUndo;  ; Long_t * fUndoArgs;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions; TQCommand & operator= (const TQCommand &);  . Friends; class TQUndoManager;  . Additional Inherited Members;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 ",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:29018,Modifiability,inherit,inherited,29018,"ct and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Protected Attributes; TString fName;  ; Bool_t fNewDelete;  ; Int_t fNRargs;  ; Int_t fNUargs;  ; void * fObject;  ; TQConnection * fRedo;  ; Long_t * fRedoArgs;  ; Int_t fState;  ; Int_t fStatus;  ; TString fTitle;  ; TQConnection * fUndo;  ; Long_t * fUndoArgs;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions; TQCommand & operator= (const TQCommand &);  . Friends; class TQUndoManager;  . Additional Inherited Members;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 ",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:29102,Modifiability,inherit,inherited,29102,"ct and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Protected Attributes; TString fName;  ; Bool_t fNewDelete;  ; Int_t fNRargs;  ; Int_t fNUargs;  ; void * fObject;  ; TQConnection * fRedo;  ; Long_t * fRedoArgs;  ; Int_t fState;  ; Int_t fStatus;  ; TString fTitle;  ; TQConnection * fUndo;  ; Long_t * fUndoArgs;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions; TQCommand & operator= (const TQCommand &);  . Friends; class TQUndoManager;  . Additional Inherited Members;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 ",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:29435,Modifiability,inherit,inherited,29435,"ction * fUndo;  ; Long_t * fUndoArgs;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions; TQCommand & operator= (const TQCommand &);  . Friends; class TQUndoManager;  . Additional Inherited Members;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1UL",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:29504,Modifiability,inherit,inherited,29504,"ction * fUndo;  ; Long_t * fUndoArgs;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions; TQCommand & operator= (const TQCommand &);  . Friends; class TQUndoManager;  . Additional Inherited Members;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1UL",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:29611,Modifiability,inherit,inherited,29611,"ction * fUndo;  ; Long_t * fUndoArgs;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions; TQCommand & operator= (const TQCommand &);  . Friends; class TQUndoManager;  . Additional Inherited Members;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1UL",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:30252,Modifiability,inherit,inherited,30252,"tCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSigna",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:30401,Modifiability,inherit,inherited,30401,"tCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSigna",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:30534,Modifiability,inherit,inherited,30534,"tCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSigna",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:30640,Modifiability,inherit,inherited,30640,"tCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSigna",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:31496,Modifiability,inherit,inherited,31496,"inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TQCommand.h>. Inheritance diagram for TQCommand:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQCommand() [1/3]. TQCommand::TQCommand ; (; const char * ; clname = nullptr, . void * ; obj = nullptr, . const char * ; redo = nullptr, . const char * ; undo = nullptr . ). Constructor. ; Input parameters:; clname - class name.; obj - an object; redo - method or function to do/redo operation; undo - method or function to undo operation. Comments:; if either clname or obj is NULL that means that redo/undo is function; to specify default arguments for redo/undo method/function '=' must precede to argument value. Example: TQCommand(""TPad"", gPad, ""SetEditable(=kTRUE)"", ""SetEditable(=kFALSE)"");; undo method can be same as redo one. In that case undo parameter can be omitted.; Example: TQCommand(""TPad"", gPad, ""SetFillStyle(",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:35870,Modifiability,inherit,inherited,35870,"do action is possible. ; Reimplemented in TQUndoManager.; Definition at line 571 of file TQCommand.cxx. ◆ CanUndo(). Bool_t TQCommand::CanUndo ; (; ); const. virtual . Returns kTRUE if Undo action is possible, kFALSE if it's not. ; By default, only single trial undo action is possible. ; Reimplemented in TQUndoManager.; Definition at line 580 of file TQCommand.cxx. ◆ Class(). static TClass * TQCommand::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TQCommand::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TQCommand::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 98 of file TQCommand.h. ◆ Compress(). void TQCommand::Compress ; (; TQCommand * ; c). virtual . Compress command. ; Compression is analogous to arithmetic ""addition operation"".; Note:; The compressed command will be deleted.; Execution Compress method invokes Redo action with new redo arguments inherited from compressed command. More complicated commands might want to override this function. ; Definition at line 402 of file TQCommand.cxx. ◆ DeclFileName(). static const char * TQCommand::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 98 of file TQCommand.h. ◆ Delete(). void TQCommand::Delete ; (; Option_t * ; opt = """"). overridevirtual . If ""opt"" is not zero delete every merged command which option string is equal to ""opt"". ; If ""opt"" is zero - delete all merged commands. ; Reimplemented from TList.; Definition at line 285 of file TQCommand.cxx. ◆ GetCommand(). TQCommand * TQCommand::GetCommand ; (; ). static . Return a command which is doing redo/undo action. ; This static method allows to set undo parameters dynamically, i.e. during execution of Redo function.; Example: For redo actions like TGTextEdit::DelChar() it is not possible to know ahead what character will be deleted. To set argume",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:3972,Performance,perform,performing,3972,"ther so an end user can undo and redo them with one command. TQCommand *update = new TQCommand(gPad, ""Modified()"");; com->Add(update);; updatestatic void update(gsl_integration_workspace *workspace, double a1, double b1, double area1, double error1, double a2, double b2, double area2, double error2)Definition RooAdaptiveGaussKronrodIntegrator1D.cxx:633; gPad#define gPadDefinition TVirtualPad.h:308; TQCommand::Addvoid Add(TObject *obj, Option_t *opt) overrideAdd command to the list of merged commands.Definition TQCommand.cxx:360. Macro commands ""Merging"" allows to create macro commands, e.g. TQCommand *macro = new TQCommand(""my macro"");; macro->Add(com1);; macro->Add(com2);; ...; During Redo operation commands composing macro command are executed sequentially in direct order (first in first out). During Undo, they are executed in reverse order (last in first out).; Undo manager. TQUndoManager is recorder of undo and redo operations. This is command history list which can be traversed backwards and upwards performing undo and redo operations. To register command TQUndoManager::Add(TObject*) method is used. TQUndoManager *history = new TQUndoManager();; history->Add(com);; TQCommand::TQUndoManagerfriend class TQUndoManagerDefinition TQCommand.h:29; TQUndoManagerRecorder of operations for undo and redo.Definition TQCommand.h:103; TQUndoManager::Addvoid Add(TObject *obj, Option_t *opt) overrideAdd command to the stack of commands.Definition TQCommand.cxx:959; TQUndoManager::Add automatically invokes execution of command's Redo method. Use TQUndoManager::Undo to undo commands in history list. Redo is Undo for undo action. Use TQUndoManager::Redo method for that ; Definition at line 27 of file TQCommand.h. Public Member Functions;  TQCommand (const char *cl=nullptr, void *object=nullptr, const char *redo=nullptr, const char *undo=nullptr);  Constructor. ;  ;  TQCommand (const TQCommand &com);  Copy constructor. ;  ;  TQCommand (TObject *obj, const char *redo=nullptr, const ",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:27842,Performance,perform,perform,27842,"dLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjLink that also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Protected Attributes; TString fName;  ; Bool_t fNewDelete;  ; Int_t fNRargs;  ; Int_t fNUargs;  ; void * fObject;  ; TQConnection * fRedo;  ; Long_t * fRedoArgs;  ; Int_t fState;  ; Int_t fStatus;  ; TString fTitle;  ; TQConnection * fUndo;  ; Long_t * fUndoArgs;  ;  Protected Attrib",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:28690,Performance,cache,cache,28690,"ct and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Protected Attributes; TString fName;  ; Bool_t fNewDelete;  ; Int_t fNRargs;  ; Int_t fNUargs;  ; void * fObject;  ; TQConnection * fRedo;  ; Long_t * fRedoArgs;  ; Int_t fState;  ; Int_t fStatus;  ; TString fTitle;  ; TQConnection * fUndo;  ; Long_t * fUndoArgs;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions; TQCommand & operator= (const TQCommand &);  . Friends; class TQUndoManager;  . Additional Inherited Members;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 ",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:15149,Safety,safe,safe,15149,"d Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the wildcard. ;  ; virtual void Print (Option_t *option, Int_t recurse) const;  Print the collection header and its elements. ;  ; virtual void Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool UseRWLock (Bool_t enable=true);  Set this collection to use a RW lock upon access, making it thread safe. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () co",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:13296,Security,hash,hash,13296," collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIter end () const;  ; virtual Int_t GetEntries () const;  ; virtual Int_t GetSize () const;  Return the capacity of the collection, i.e. ;  ; virtual Int_t GrowBy (Int_t delta) const;  Increase the collection's capacity by delta slots. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsArgNull (const char *where, const TObject *obj) const;  Returns true if object is a null pointer. ;  ; virtual Bool_t IsEmpty () const;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; Bool_t IsOwner () const;  ; Bool_t IsSortable () const override;  ; R__ALWAYS_INLINE Bool_t IsUsingRWLock () const;  ; virtual TIterator * MakeReverseIterator () const;  ; Bool_t Notify () override;  'Notify' all objects in this collection. ;  ; TObject * operator() (const char *name) const;  Find an object in this collection by name. ;  ; void Paint (Option_t *option="""") override;  Paint all objects in this collection. ;  ; virtual void Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the wildcard. ;  ; virtual void Print (Option_t *option, Int_t recurse) const;  Print the collecti",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:14784,Security,access,accessible,14784," MakeReverseIterator () const;  ; Bool_t Notify () override;  'Notify' all objects in this collection. ;  ; TObject * operator() (const char *name) const;  Find an object in this collection by name. ;  ; void Paint (Option_t *option="""") override;  Paint all objects in this collection. ;  ; virtual void Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the wildcard. ;  ; virtual void Print (Option_t *option, Int_t recurse) const;  Print the collection header and its elements. ;  ; virtual void Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool UseRWLock (Bool_t enable=true);  Set this collection to use a RW lock upon access, making it thread safe. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract.",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:15124,Security,access,access,15124,"d Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the wildcard. ;  ; virtual void Print (Option_t *option, Int_t recurse) const;  Print the collection header and its elements. ;  ; virtual void Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool UseRWLock (Bool_t enable=true);  Set this collection to use a RW lock upon access, making it thread safe. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () co",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:24436,Security,access,accessible,24436,"s_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Cla",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:41886,Testability,log,logical,41886,"rride this function. ; Definition at line 440 of file TQCommand.cxx. ◆ IsUndoing(). Bool_t TQCommand::IsUndoing ; (; ); const. Undo action is in progress. ; Definition at line 808 of file TQCommand.cxx. ◆ ls(). void TQCommand::ls ; (; Option_t * ; option = """"); const. overridevirtual . ls this command and merged commands ; Reimplemented from TCollection.; Reimplemented in TQUndoManager.; Definition at line 848 of file TQCommand.cxx. ◆ Merge() [1/2]. Long64_t TQCommand::Merge ; (; TCollection * ; collection, . TFileMergeInfo * ;  . ). virtual . Merge a collection of TQCommand. ; Definition at line 337 of file TQCommand.cxx. ◆ Merge() [2/2]. void TQCommand::Merge ; (; TQCommand * ; c). virtual . Add command to the list of merged commands. ; This make it possible to group complex actions together so an end user can undo and redo them with one command. Execution of TQUndoManager::Undo(), TQUndoManager::Redo() methods only invokes the top level command as a whole.; Merge method is analogous to logical join operation.; Note: Merge method invokes redo action. ; Definition at line 329 of file TQCommand.cxx. ◆ operator=(). TQCommand & TQCommand::operator= ; (; const TQCommand & ; ). private . ◆ PrintCollectionHeader(). void TQCommand::PrintCollectionHeader ; (; Option_t * ; option); const. overrideprotectedvirtual . Print collection header. ; Reimplemented from TCollection.; Definition at line 864 of file TQCommand.cxx. ◆ Redo(). void TQCommand::Redo ; (; Option_t * ; option = """"). virtual . Execute command and then merge commands. ; Reimplemented in TQUndoManager.; Definition at line 588 of file TQCommand.cxx. ◆ SetArgs(). void TQCommand::SetArgs ; (; Int_t ; narg, .  ; ... . ). virtual . Set do/redo and undo parameters. ; The format is SetArgs(number_of_params, redo_params, undo_params); Example: move_command->SetArgs(2, 100, 100, 200, 200);; 2 params, (100,100) - do/redo position, (200,200) - undo position ; Definition at line 465 of file TQCommand.cxx. ◆ SetName(). void ",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:647,Usability,undo,undo,647,". ROOT: TQCommand Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; Friends |; List of all members ; TQCommand Class ReferenceCore ROOT classes » Base ROOT classes. ; The Command design pattern is based on the idea, that all editing in an application is done by creating instances of command objects. ; Command objects apply changes to the edited object and then are stored on a command stack. Furthermore, each command knows how to undo its changes to bring the edited object back to its previous state. As long as the application only uses command objects to change the state of the edited object, it is possible to undo a sequence of commands by traversing the command stack downwards and calling the ""undo"" method of each command in turn. It is also possible to redo a sequence of commands by traversing the command stack upwards and calling the ""redo"" method of each command.; Examples:. Create a new command TQCommand *com = new TQCommand(""TH1"", hpx, ""SetFillColor(Color_t)""; ""SetFillColor(Color_t)"");; TQCommandThe Command design pattern is based on the idea, that all editing in an application is done by creati...Definition TQCommand.h:27. 1st parameter - the name of class; 2nd parameter - object; 3rd parameter - the name of do/redo method; 4th parameter - the name of undo method Since redo,undo methods are the same, undo name can be omitted, e.g. TQCommand *com = new TQCommand(""TH1"", hpx, ""SetFillColor(Color_t)"");; For objects derived from TObject class name can be omitted, e.g. TQCommand *com = new TQCommand(hpx, ""SetFillColor(Color_t)"");. Setting undo, redo parameters. Color_t old_color = hpx->GetFillColor();; Color_t new_color = 4; // blue color; ; com->SetRedoArgs(1, new_color);; com->SetUndoArgs(1, old_color);; Color_tshort Color_tDefinition RtypesCore.h:85; T",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:832,Usability,undo,undo,832,". ROOT: TQCommand Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; Friends |; List of all members ; TQCommand Class ReferenceCore ROOT classes » Base ROOT classes. ; The Command design pattern is based on the idea, that all editing in an application is done by creating instances of command objects. ; Command objects apply changes to the edited object and then are stored on a command stack. Furthermore, each command knows how to undo its changes to bring the edited object back to its previous state. As long as the application only uses command objects to change the state of the edited object, it is possible to undo a sequence of commands by traversing the command stack downwards and calling the ""undo"" method of each command in turn. It is also possible to redo a sequence of commands by traversing the command stack upwards and calling the ""redo"" method of each command.; Examples:. Create a new command TQCommand *com = new TQCommand(""TH1"", hpx, ""SetFillColor(Color_t)""; ""SetFillColor(Color_t)"");; TQCommandThe Command design pattern is based on the idea, that all editing in an application is done by creati...Definition TQCommand.h:27. 1st parameter - the name of class; 2nd parameter - object; 3rd parameter - the name of do/redo method; 4th parameter - the name of undo method Since redo,undo methods are the same, undo name can be omitted, e.g. TQCommand *com = new TQCommand(""TH1"", hpx, ""SetFillColor(Color_t)"");; For objects derived from TObject class name can be omitted, e.g. TQCommand *com = new TQCommand(hpx, ""SetFillColor(Color_t)"");. Setting undo, redo parameters. Color_t old_color = hpx->GetFillColor();; Color_t new_color = 4; // blue color; ; com->SetRedoArgs(1, new_color);; com->SetUndoArgs(1, old_color);; Color_tshort Color_tDefinition RtypesCore.h:85; T",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:919,Usability,undo,undo,919,". ROOT: TQCommand Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; Friends |; List of all members ; TQCommand Class ReferenceCore ROOT classes » Base ROOT classes. ; The Command design pattern is based on the idea, that all editing in an application is done by creating instances of command objects. ; Command objects apply changes to the edited object and then are stored on a command stack. Furthermore, each command knows how to undo its changes to bring the edited object back to its previous state. As long as the application only uses command objects to change the state of the edited object, it is possible to undo a sequence of commands by traversing the command stack downwards and calling the ""undo"" method of each command in turn. It is also possible to redo a sequence of commands by traversing the command stack upwards and calling the ""redo"" method of each command.; Examples:. Create a new command TQCommand *com = new TQCommand(""TH1"", hpx, ""SetFillColor(Color_t)""; ""SetFillColor(Color_t)"");; TQCommandThe Command design pattern is based on the idea, that all editing in an application is done by creati...Definition TQCommand.h:27. 1st parameter - the name of class; 2nd parameter - object; 3rd parameter - the name of do/redo method; 4th parameter - the name of undo method Since redo,undo methods are the same, undo name can be omitted, e.g. TQCommand *com = new TQCommand(""TH1"", hpx, ""SetFillColor(Color_t)"");; For objects derived from TObject class name can be omitted, e.g. TQCommand *com = new TQCommand(hpx, ""SetFillColor(Color_t)"");. Setting undo, redo parameters. Color_t old_color = hpx->GetFillColor();; Color_t new_color = 4; // blue color; ; com->SetRedoArgs(1, new_color);; com->SetUndoArgs(1, old_color);; Color_tshort Color_tDefinition RtypesCore.h:85; T",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:1494,Usability,undo,undo,1494," done by creating instances of command objects. ; Command objects apply changes to the edited object and then are stored on a command stack. Furthermore, each command knows how to undo its changes to bring the edited object back to its previous state. As long as the application only uses command objects to change the state of the edited object, it is possible to undo a sequence of commands by traversing the command stack downwards and calling the ""undo"" method of each command in turn. It is also possible to redo a sequence of commands by traversing the command stack upwards and calling the ""redo"" method of each command.; Examples:. Create a new command TQCommand *com = new TQCommand(""TH1"", hpx, ""SetFillColor(Color_t)""; ""SetFillColor(Color_t)"");; TQCommandThe Command design pattern is based on the idea, that all editing in an application is done by creati...Definition TQCommand.h:27. 1st parameter - the name of class; 2nd parameter - object; 3rd parameter - the name of do/redo method; 4th parameter - the name of undo method Since redo,undo methods are the same, undo name can be omitted, e.g. TQCommand *com = new TQCommand(""TH1"", hpx, ""SetFillColor(Color_t)"");; For objects derived from TObject class name can be omitted, e.g. TQCommand *com = new TQCommand(hpx, ""SetFillColor(Color_t)"");. Setting undo, redo parameters. Color_t old_color = hpx->GetFillColor();; Color_t new_color = 4; // blue color; ; com->SetRedoArgs(1, new_color);; com->SetUndoArgs(1, old_color);; Color_tshort Color_tDefinition RtypesCore.h:85; TQCommand::SetRedoArgsvirtual void SetRedoArgs(Int_t nargs,...)Set redo parameters.Definition TQCommand.cxx:508; TQCommand::SetUndoArgsvirtual void SetUndoArgs(Int_t nargs,...)Set undo parameters.Definition TQCommand.cxx:542; 1st argument - the number of undo, redo parameters the other arguments - undo, redo values Since the number of undo,redo parameters is the same one can use com->SetArgs(1, new_color, old_color);; TQCommand::SetArgsvirtual void SetArgs(Int_t ",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:1517,Usability,undo,undo,1517," done by creating instances of command objects. ; Command objects apply changes to the edited object and then are stored on a command stack. Furthermore, each command knows how to undo its changes to bring the edited object back to its previous state. As long as the application only uses command objects to change the state of the edited object, it is possible to undo a sequence of commands by traversing the command stack downwards and calling the ""undo"" method of each command in turn. It is also possible to redo a sequence of commands by traversing the command stack upwards and calling the ""redo"" method of each command.; Examples:. Create a new command TQCommand *com = new TQCommand(""TH1"", hpx, ""SetFillColor(Color_t)""; ""SetFillColor(Color_t)"");; TQCommandThe Command design pattern is based on the idea, that all editing in an application is done by creati...Definition TQCommand.h:27. 1st parameter - the name of class; 2nd parameter - object; 3rd parameter - the name of do/redo method; 4th parameter - the name of undo method Since redo,undo methods are the same, undo name can be omitted, e.g. TQCommand *com = new TQCommand(""TH1"", hpx, ""SetFillColor(Color_t)"");; For objects derived from TObject class name can be omitted, e.g. TQCommand *com = new TQCommand(hpx, ""SetFillColor(Color_t)"");. Setting undo, redo parameters. Color_t old_color = hpx->GetFillColor();; Color_t new_color = 4; // blue color; ; com->SetRedoArgs(1, new_color);; com->SetUndoArgs(1, old_color);; Color_tshort Color_tDefinition RtypesCore.h:85; TQCommand::SetRedoArgsvirtual void SetRedoArgs(Int_t nargs,...)Set redo parameters.Definition TQCommand.cxx:508; TQCommand::SetUndoArgsvirtual void SetUndoArgs(Int_t nargs,...)Set undo parameters.Definition TQCommand.cxx:542; 1st argument - the number of undo, redo parameters the other arguments - undo, redo values Since the number of undo,redo parameters is the same one can use com->SetArgs(1, new_color, old_color);; TQCommand::SetArgsvirtual void SetArgs(Int_t ",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:1544,Usability,undo,undo,1544," done by creating instances of command objects. ; Command objects apply changes to the edited object and then are stored on a command stack. Furthermore, each command knows how to undo its changes to bring the edited object back to its previous state. As long as the application only uses command objects to change the state of the edited object, it is possible to undo a sequence of commands by traversing the command stack downwards and calling the ""undo"" method of each command in turn. It is also possible to redo a sequence of commands by traversing the command stack upwards and calling the ""redo"" method of each command.; Examples:. Create a new command TQCommand *com = new TQCommand(""TH1"", hpx, ""SetFillColor(Color_t)""; ""SetFillColor(Color_t)"");; TQCommandThe Command design pattern is based on the idea, that all editing in an application is done by creati...Definition TQCommand.h:27. 1st parameter - the name of class; 2nd parameter - object; 3rd parameter - the name of do/redo method; 4th parameter - the name of undo method Since redo,undo methods are the same, undo name can be omitted, e.g. TQCommand *com = new TQCommand(""TH1"", hpx, ""SetFillColor(Color_t)"");; For objects derived from TObject class name can be omitted, e.g. TQCommand *com = new TQCommand(hpx, ""SetFillColor(Color_t)"");. Setting undo, redo parameters. Color_t old_color = hpx->GetFillColor();; Color_t new_color = 4; // blue color; ; com->SetRedoArgs(1, new_color);; com->SetUndoArgs(1, old_color);; Color_tshort Color_tDefinition RtypesCore.h:85; TQCommand::SetRedoArgsvirtual void SetRedoArgs(Int_t nargs,...)Set redo parameters.Definition TQCommand.cxx:508; TQCommand::SetUndoArgsvirtual void SetUndoArgs(Int_t nargs,...)Set undo parameters.Definition TQCommand.cxx:542; 1st argument - the number of undo, redo parameters the other arguments - undo, redo values Since the number of undo,redo parameters is the same one can use com->SetArgs(1, new_color, old_color);; TQCommand::SetArgsvirtual void SetArgs(Int_t ",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:1781,Usability,undo,undo,1781,"tate of the edited object, it is possible to undo a sequence of commands by traversing the command stack downwards and calling the ""undo"" method of each command in turn. It is also possible to redo a sequence of commands by traversing the command stack upwards and calling the ""redo"" method of each command.; Examples:. Create a new command TQCommand *com = new TQCommand(""TH1"", hpx, ""SetFillColor(Color_t)""; ""SetFillColor(Color_t)"");; TQCommandThe Command design pattern is based on the idea, that all editing in an application is done by creati...Definition TQCommand.h:27. 1st parameter - the name of class; 2nd parameter - object; 3rd parameter - the name of do/redo method; 4th parameter - the name of undo method Since redo,undo methods are the same, undo name can be omitted, e.g. TQCommand *com = new TQCommand(""TH1"", hpx, ""SetFillColor(Color_t)"");; For objects derived from TObject class name can be omitted, e.g. TQCommand *com = new TQCommand(hpx, ""SetFillColor(Color_t)"");. Setting undo, redo parameters. Color_t old_color = hpx->GetFillColor();; Color_t new_color = 4; // blue color; ; com->SetRedoArgs(1, new_color);; com->SetUndoArgs(1, old_color);; Color_tshort Color_tDefinition RtypesCore.h:85; TQCommand::SetRedoArgsvirtual void SetRedoArgs(Int_t nargs,...)Set redo parameters.Definition TQCommand.cxx:508; TQCommand::SetUndoArgsvirtual void SetUndoArgs(Int_t nargs,...)Set undo parameters.Definition TQCommand.cxx:542; 1st argument - the number of undo, redo parameters the other arguments - undo, redo values Since the number of undo,redo parameters is the same one can use com->SetArgs(1, new_color, old_color);; TQCommand::SetArgsvirtual void SetArgs(Int_t nargs,...)Set do/redo and undo parameters.Definition TQCommand.cxx:465. Undo, redo method execution com->Redo(); // execute redo method; com->Undo(); // execute undo method; TQCommand::Undovirtual void Undo(Option_t *option="""")Un-execute all merged commands and the command.Definition TQCommand.cxx:626; TQCommand::Redovi",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:2180,Usability,undo,undo,2180,"Color_t)""; ""SetFillColor(Color_t)"");; TQCommandThe Command design pattern is based on the idea, that all editing in an application is done by creati...Definition TQCommand.h:27. 1st parameter - the name of class; 2nd parameter - object; 3rd parameter - the name of do/redo method; 4th parameter - the name of undo method Since redo,undo methods are the same, undo name can be omitted, e.g. TQCommand *com = new TQCommand(""TH1"", hpx, ""SetFillColor(Color_t)"");; For objects derived from TObject class name can be omitted, e.g. TQCommand *com = new TQCommand(hpx, ""SetFillColor(Color_t)"");. Setting undo, redo parameters. Color_t old_color = hpx->GetFillColor();; Color_t new_color = 4; // blue color; ; com->SetRedoArgs(1, new_color);; com->SetUndoArgs(1, old_color);; Color_tshort Color_tDefinition RtypesCore.h:85; TQCommand::SetRedoArgsvirtual void SetRedoArgs(Int_t nargs,...)Set redo parameters.Definition TQCommand.cxx:508; TQCommand::SetUndoArgsvirtual void SetUndoArgs(Int_t nargs,...)Set undo parameters.Definition TQCommand.cxx:542; 1st argument - the number of undo, redo parameters the other arguments - undo, redo values Since the number of undo,redo parameters is the same one can use com->SetArgs(1, new_color, old_color);; TQCommand::SetArgsvirtual void SetArgs(Int_t nargs,...)Set do/redo and undo parameters.Definition TQCommand.cxx:465. Undo, redo method execution com->Redo(); // execute redo method; com->Undo(); // execute undo method; TQCommand::Undovirtual void Undo(Option_t *option="""")Un-execute all merged commands and the command.Definition TQCommand.cxx:626; TQCommand::Redovirtual void Redo(Option_t *option="""")Execute command and then merge commands.Definition TQCommand.cxx:588. Merged commands It possible to group several commands together so an end user can undo and redo them with one command. TQCommand *update = new TQCommand(gPad, ""Modified()"");; com->Add(update);; updatestatic void update(gsl_integration_workspace *workspace, double a1, double b1, double area1,",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:2255,Usability,undo,undo,2255,"n TQCommand.h:27. 1st parameter - the name of class; 2nd parameter - object; 3rd parameter - the name of do/redo method; 4th parameter - the name of undo method Since redo,undo methods are the same, undo name can be omitted, e.g. TQCommand *com = new TQCommand(""TH1"", hpx, ""SetFillColor(Color_t)"");; For objects derived from TObject class name can be omitted, e.g. TQCommand *com = new TQCommand(hpx, ""SetFillColor(Color_t)"");. Setting undo, redo parameters. Color_t old_color = hpx->GetFillColor();; Color_t new_color = 4; // blue color; ; com->SetRedoArgs(1, new_color);; com->SetUndoArgs(1, old_color);; Color_tshort Color_tDefinition RtypesCore.h:85; TQCommand::SetRedoArgsvirtual void SetRedoArgs(Int_t nargs,...)Set redo parameters.Definition TQCommand.cxx:508; TQCommand::SetUndoArgsvirtual void SetUndoArgs(Int_t nargs,...)Set undo parameters.Definition TQCommand.cxx:542; 1st argument - the number of undo, redo parameters the other arguments - undo, redo values Since the number of undo,redo parameters is the same one can use com->SetArgs(1, new_color, old_color);; TQCommand::SetArgsvirtual void SetArgs(Int_t nargs,...)Set do/redo and undo parameters.Definition TQCommand.cxx:465. Undo, redo method execution com->Redo(); // execute redo method; com->Undo(); // execute undo method; TQCommand::Undovirtual void Undo(Option_t *option="""")Un-execute all merged commands and the command.Definition TQCommand.cxx:626; TQCommand::Redovirtual void Redo(Option_t *option="""")Execute command and then merge commands.Definition TQCommand.cxx:588. Merged commands It possible to group several commands together so an end user can undo and redo them with one command. TQCommand *update = new TQCommand(gPad, ""Modified()"");; com->Add(update);; updatestatic void update(gsl_integration_workspace *workspace, double a1, double b1, double area1, double error1, double a2, double b2, double area2, double error2)Definition RooAdaptiveGaussKronrodIntegrator1D.cxx:633; gPad#define gPadDefinition TVirtualPad",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:2299,Usability,undo,undo,2299,"n TQCommand.h:27. 1st parameter - the name of class; 2nd parameter - object; 3rd parameter - the name of do/redo method; 4th parameter - the name of undo method Since redo,undo methods are the same, undo name can be omitted, e.g. TQCommand *com = new TQCommand(""TH1"", hpx, ""SetFillColor(Color_t)"");; For objects derived from TObject class name can be omitted, e.g. TQCommand *com = new TQCommand(hpx, ""SetFillColor(Color_t)"");. Setting undo, redo parameters. Color_t old_color = hpx->GetFillColor();; Color_t new_color = 4; // blue color; ; com->SetRedoArgs(1, new_color);; com->SetUndoArgs(1, old_color);; Color_tshort Color_tDefinition RtypesCore.h:85; TQCommand::SetRedoArgsvirtual void SetRedoArgs(Int_t nargs,...)Set redo parameters.Definition TQCommand.cxx:508; TQCommand::SetUndoArgsvirtual void SetUndoArgs(Int_t nargs,...)Set undo parameters.Definition TQCommand.cxx:542; 1st argument - the number of undo, redo parameters the other arguments - undo, redo values Since the number of undo,redo parameters is the same one can use com->SetArgs(1, new_color, old_color);; TQCommand::SetArgsvirtual void SetArgs(Int_t nargs,...)Set do/redo and undo parameters.Definition TQCommand.cxx:465. Undo, redo method execution com->Redo(); // execute redo method; com->Undo(); // execute undo method; TQCommand::Undovirtual void Undo(Option_t *option="""")Un-execute all merged commands and the command.Definition TQCommand.cxx:626; TQCommand::Redovirtual void Redo(Option_t *option="""")Execute command and then merge commands.Definition TQCommand.cxx:588. Merged commands It possible to group several commands together so an end user can undo and redo them with one command. TQCommand *update = new TQCommand(gPad, ""Modified()"");; com->Add(update);; updatestatic void update(gsl_integration_workspace *workspace, double a1, double b1, double area1, double error1, double a2, double b2, double area2, double error2)Definition RooAdaptiveGaussKronrodIntegrator1D.cxx:633; gPad#define gPadDefinition TVirtualPad",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:2337,Usability,undo,undo,2337,"n TQCommand.h:27. 1st parameter - the name of class; 2nd parameter - object; 3rd parameter - the name of do/redo method; 4th parameter - the name of undo method Since redo,undo methods are the same, undo name can be omitted, e.g. TQCommand *com = new TQCommand(""TH1"", hpx, ""SetFillColor(Color_t)"");; For objects derived from TObject class name can be omitted, e.g. TQCommand *com = new TQCommand(hpx, ""SetFillColor(Color_t)"");. Setting undo, redo parameters. Color_t old_color = hpx->GetFillColor();; Color_t new_color = 4; // blue color; ; com->SetRedoArgs(1, new_color);; com->SetUndoArgs(1, old_color);; Color_tshort Color_tDefinition RtypesCore.h:85; TQCommand::SetRedoArgsvirtual void SetRedoArgs(Int_t nargs,...)Set redo parameters.Definition TQCommand.cxx:508; TQCommand::SetUndoArgsvirtual void SetUndoArgs(Int_t nargs,...)Set undo parameters.Definition TQCommand.cxx:542; 1st argument - the number of undo, redo parameters the other arguments - undo, redo values Since the number of undo,redo parameters is the same one can use com->SetArgs(1, new_color, old_color);; TQCommand::SetArgsvirtual void SetArgs(Int_t nargs,...)Set do/redo and undo parameters.Definition TQCommand.cxx:465. Undo, redo method execution com->Redo(); // execute redo method; com->Undo(); // execute undo method; TQCommand::Undovirtual void Undo(Option_t *option="""")Un-execute all merged commands and the command.Definition TQCommand.cxx:626; TQCommand::Redovirtual void Redo(Option_t *option="""")Execute command and then merge commands.Definition TQCommand.cxx:588. Merged commands It possible to group several commands together so an end user can undo and redo them with one command. TQCommand *update = new TQCommand(gPad, ""Modified()"");; com->Add(update);; updatestatic void update(gsl_integration_workspace *workspace, double a1, double b1, double area1, double error1, double a2, double b2, double area2, double error2)Definition RooAdaptiveGaussKronrodIntegrator1D.cxx:633; gPad#define gPadDefinition TVirtualPad",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:2493,Usability,undo,undo,2493,"f undo method Since redo,undo methods are the same, undo name can be omitted, e.g. TQCommand *com = new TQCommand(""TH1"", hpx, ""SetFillColor(Color_t)"");; For objects derived from TObject class name can be omitted, e.g. TQCommand *com = new TQCommand(hpx, ""SetFillColor(Color_t)"");. Setting undo, redo parameters. Color_t old_color = hpx->GetFillColor();; Color_t new_color = 4; // blue color; ; com->SetRedoArgs(1, new_color);; com->SetUndoArgs(1, old_color);; Color_tshort Color_tDefinition RtypesCore.h:85; TQCommand::SetRedoArgsvirtual void SetRedoArgs(Int_t nargs,...)Set redo parameters.Definition TQCommand.cxx:508; TQCommand::SetUndoArgsvirtual void SetUndoArgs(Int_t nargs,...)Set undo parameters.Definition TQCommand.cxx:542; 1st argument - the number of undo, redo parameters the other arguments - undo, redo values Since the number of undo,redo parameters is the same one can use com->SetArgs(1, new_color, old_color);; TQCommand::SetArgsvirtual void SetArgs(Int_t nargs,...)Set do/redo and undo parameters.Definition TQCommand.cxx:465. Undo, redo method execution com->Redo(); // execute redo method; com->Undo(); // execute undo method; TQCommand::Undovirtual void Undo(Option_t *option="""")Un-execute all merged commands and the command.Definition TQCommand.cxx:626; TQCommand::Redovirtual void Redo(Option_t *option="""")Execute command and then merge commands.Definition TQCommand.cxx:588. Merged commands It possible to group several commands together so an end user can undo and redo them with one command. TQCommand *update = new TQCommand(gPad, ""Modified()"");; com->Add(update);; updatestatic void update(gsl_integration_workspace *workspace, double a1, double b1, double area1, double error1, double a2, double b2, double area2, double error2)Definition RooAdaptiveGaussKronrodIntegrator1D.cxx:633; gPad#define gPadDefinition TVirtualPad.h:308; TQCommand::Addvoid Add(TObject *obj, Option_t *opt) overrideAdd command to the list of merged commands.Definition TQCommand.cxx:360. Macro ",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:2628,Usability,undo,undo,2628,")"");; For objects derived from TObject class name can be omitted, e.g. TQCommand *com = new TQCommand(hpx, ""SetFillColor(Color_t)"");. Setting undo, redo parameters. Color_t old_color = hpx->GetFillColor();; Color_t new_color = 4; // blue color; ; com->SetRedoArgs(1, new_color);; com->SetUndoArgs(1, old_color);; Color_tshort Color_tDefinition RtypesCore.h:85; TQCommand::SetRedoArgsvirtual void SetRedoArgs(Int_t nargs,...)Set redo parameters.Definition TQCommand.cxx:508; TQCommand::SetUndoArgsvirtual void SetUndoArgs(Int_t nargs,...)Set undo parameters.Definition TQCommand.cxx:542; 1st argument - the number of undo, redo parameters the other arguments - undo, redo values Since the number of undo,redo parameters is the same one can use com->SetArgs(1, new_color, old_color);; TQCommand::SetArgsvirtual void SetArgs(Int_t nargs,...)Set do/redo and undo parameters.Definition TQCommand.cxx:465. Undo, redo method execution com->Redo(); // execute redo method; com->Undo(); // execute undo method; TQCommand::Undovirtual void Undo(Option_t *option="""")Un-execute all merged commands and the command.Definition TQCommand.cxx:626; TQCommand::Redovirtual void Redo(Option_t *option="""")Execute command and then merge commands.Definition TQCommand.cxx:588. Merged commands It possible to group several commands together so an end user can undo and redo them with one command. TQCommand *update = new TQCommand(gPad, ""Modified()"");; com->Add(update);; updatestatic void update(gsl_integration_workspace *workspace, double a1, double b1, double area1, double error1, double a2, double b2, double area2, double error2)Definition RooAdaptiveGaussKronrodIntegrator1D.cxx:633; gPad#define gPadDefinition TVirtualPad.h:308; TQCommand::Addvoid Add(TObject *obj, Option_t *opt) overrideAdd command to the list of merged commands.Definition TQCommand.cxx:360. Macro commands ""Merging"" allows to create macro commands, e.g. TQCommand *macro = new TQCommand(""my macro"");; macro->Add(com1);; macro->Add(com2);; ...; ",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:2976,Usability,undo,undo,2976,"Color_tshort Color_tDefinition RtypesCore.h:85; TQCommand::SetRedoArgsvirtual void SetRedoArgs(Int_t nargs,...)Set redo parameters.Definition TQCommand.cxx:508; TQCommand::SetUndoArgsvirtual void SetUndoArgs(Int_t nargs,...)Set undo parameters.Definition TQCommand.cxx:542; 1st argument - the number of undo, redo parameters the other arguments - undo, redo values Since the number of undo,redo parameters is the same one can use com->SetArgs(1, new_color, old_color);; TQCommand::SetArgsvirtual void SetArgs(Int_t nargs,...)Set do/redo and undo parameters.Definition TQCommand.cxx:465. Undo, redo method execution com->Redo(); // execute redo method; com->Undo(); // execute undo method; TQCommand::Undovirtual void Undo(Option_t *option="""")Un-execute all merged commands and the command.Definition TQCommand.cxx:626; TQCommand::Redovirtual void Redo(Option_t *option="""")Execute command and then merge commands.Definition TQCommand.cxx:588. Merged commands It possible to group several commands together so an end user can undo and redo them with one command. TQCommand *update = new TQCommand(gPad, ""Modified()"");; com->Add(update);; updatestatic void update(gsl_integration_workspace *workspace, double a1, double b1, double area1, double error1, double a2, double b2, double area2, double error2)Definition RooAdaptiveGaussKronrodIntegrator1D.cxx:633; gPad#define gPadDefinition TVirtualPad.h:308; TQCommand::Addvoid Add(TObject *obj, Option_t *opt) overrideAdd command to the list of merged commands.Definition TQCommand.cxx:360. Macro commands ""Merging"" allows to create macro commands, e.g. TQCommand *macro = new TQCommand(""my macro"");; macro->Add(com1);; macro->Add(com2);; ...; During Redo operation commands composing macro command are executed sequentially in direct order (first in first out). During Undo, they are executed in reverse order (last in first out).; Undo manager. TQUndoManager is recorder of undo and redo operations. This is command history list which can be traversed bac",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:3872,Usability,undo,undo,3872,"ition TQCommand.cxx:588. Merged commands It possible to group several commands together so an end user can undo and redo them with one command. TQCommand *update = new TQCommand(gPad, ""Modified()"");; com->Add(update);; updatestatic void update(gsl_integration_workspace *workspace, double a1, double b1, double area1, double error1, double a2, double b2, double area2, double error2)Definition RooAdaptiveGaussKronrodIntegrator1D.cxx:633; gPad#define gPadDefinition TVirtualPad.h:308; TQCommand::Addvoid Add(TObject *obj, Option_t *opt) overrideAdd command to the list of merged commands.Definition TQCommand.cxx:360. Macro commands ""Merging"" allows to create macro commands, e.g. TQCommand *macro = new TQCommand(""my macro"");; macro->Add(com1);; macro->Add(com2);; ...; During Redo operation commands composing macro command are executed sequentially in direct order (first in first out). During Undo, they are executed in reverse order (last in first out).; Undo manager. TQUndoManager is recorder of undo and redo operations. This is command history list which can be traversed backwards and upwards performing undo and redo operations. To register command TQUndoManager::Add(TObject*) method is used. TQUndoManager *history = new TQUndoManager();; history->Add(com);; TQCommand::TQUndoManagerfriend class TQUndoManagerDefinition TQCommand.h:29; TQUndoManagerRecorder of operations for undo and redo.Definition TQCommand.h:103; TQUndoManager::Addvoid Add(TObject *obj, Option_t *opt) overrideAdd command to the stack of commands.Definition TQCommand.cxx:959; TQUndoManager::Add automatically invokes execution of command's Redo method. Use TQUndoManager::Undo to undo commands in history list. Redo is Undo for undo action. Use TQUndoManager::Redo method for that ; Definition at line 27 of file TQCommand.h. Public Member Functions;  TQCommand (const char *cl=nullptr, void *object=nullptr, const char *redo=nullptr, const char *undo=nullptr);  Constructor. ;  ;  TQCommand (const TQCommand &com);",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:3983,Usability,undo,undo,3983,"ther so an end user can undo and redo them with one command. TQCommand *update = new TQCommand(gPad, ""Modified()"");; com->Add(update);; updatestatic void update(gsl_integration_workspace *workspace, double a1, double b1, double area1, double error1, double a2, double b2, double area2, double error2)Definition RooAdaptiveGaussKronrodIntegrator1D.cxx:633; gPad#define gPadDefinition TVirtualPad.h:308; TQCommand::Addvoid Add(TObject *obj, Option_t *opt) overrideAdd command to the list of merged commands.Definition TQCommand.cxx:360. Macro commands ""Merging"" allows to create macro commands, e.g. TQCommand *macro = new TQCommand(""my macro"");; macro->Add(com1);; macro->Add(com2);; ...; During Redo operation commands composing macro command are executed sequentially in direct order (first in first out). During Undo, they are executed in reverse order (last in first out).; Undo manager. TQUndoManager is recorder of undo and redo operations. This is command history list which can be traversed backwards and upwards performing undo and redo operations. To register command TQUndoManager::Add(TObject*) method is used. TQUndoManager *history = new TQUndoManager();; history->Add(com);; TQCommand::TQUndoManagerfriend class TQUndoManagerDefinition TQCommand.h:29; TQUndoManagerRecorder of operations for undo and redo.Definition TQCommand.h:103; TQUndoManager::Addvoid Add(TObject *obj, Option_t *opt) overrideAdd command to the stack of commands.Definition TQCommand.cxx:959; TQUndoManager::Add automatically invokes execution of command's Redo method. Use TQUndoManager::Undo to undo commands in history list. Redo is Undo for undo action. Use TQUndoManager::Redo method for that ; Definition at line 27 of file TQCommand.h. Public Member Functions;  TQCommand (const char *cl=nullptr, void *object=nullptr, const char *redo=nullptr, const char *undo=nullptr);  Constructor. ;  ;  TQCommand (const TQCommand &com);  Copy constructor. ;  ;  TQCommand (TObject *obj, const char *redo=nullptr, const ",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:4258,Usability,undo,undo,4258,"le error2)Definition RooAdaptiveGaussKronrodIntegrator1D.cxx:633; gPad#define gPadDefinition TVirtualPad.h:308; TQCommand::Addvoid Add(TObject *obj, Option_t *opt) overrideAdd command to the list of merged commands.Definition TQCommand.cxx:360. Macro commands ""Merging"" allows to create macro commands, e.g. TQCommand *macro = new TQCommand(""my macro"");; macro->Add(com1);; macro->Add(com2);; ...; During Redo operation commands composing macro command are executed sequentially in direct order (first in first out). During Undo, they are executed in reverse order (last in first out).; Undo manager. TQUndoManager is recorder of undo and redo operations. This is command history list which can be traversed backwards and upwards performing undo and redo operations. To register command TQUndoManager::Add(TObject*) method is used. TQUndoManager *history = new TQUndoManager();; history->Add(com);; TQCommand::TQUndoManagerfriend class TQUndoManagerDefinition TQCommand.h:29; TQUndoManagerRecorder of operations for undo and redo.Definition TQCommand.h:103; TQUndoManager::Addvoid Add(TObject *obj, Option_t *opt) overrideAdd command to the stack of commands.Definition TQCommand.cxx:959; TQUndoManager::Add automatically invokes execution of command's Redo method. Use TQUndoManager::Undo to undo commands in history list. Redo is Undo for undo action. Use TQUndoManager::Redo method for that ; Definition at line 27 of file TQCommand.h. Public Member Functions;  TQCommand (const char *cl=nullptr, void *object=nullptr, const char *redo=nullptr, const char *undo=nullptr);  Constructor. ;  ;  TQCommand (const TQCommand &com);  Copy constructor. ;  ;  TQCommand (TObject *obj, const char *redo=nullptr, const char *undo=nullptr);  Constructor. ;  ; virtual ~TQCommand ();  dtor. ;  ; void Add (TObject *obj) override;  ; void Add (TObject *obj, Option_t *opt) override;  Add command to the list of merged commands. ;  ; virtual Bool_t CanCompress (TQCommand *c) const;  By default, commands can be ",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:4535,Usability,undo,undo,4535,"ommands, e.g. TQCommand *macro = new TQCommand(""my macro"");; macro->Add(com1);; macro->Add(com2);; ...; During Redo operation commands composing macro command are executed sequentially in direct order (first in first out). During Undo, they are executed in reverse order (last in first out).; Undo manager. TQUndoManager is recorder of undo and redo operations. This is command history list which can be traversed backwards and upwards performing undo and redo operations. To register command TQUndoManager::Add(TObject*) method is used. TQUndoManager *history = new TQUndoManager();; history->Add(com);; TQCommand::TQUndoManagerfriend class TQUndoManagerDefinition TQCommand.h:29; TQUndoManagerRecorder of operations for undo and redo.Definition TQCommand.h:103; TQUndoManager::Addvoid Add(TObject *obj, Option_t *opt) overrideAdd command to the stack of commands.Definition TQCommand.cxx:959; TQUndoManager::Add automatically invokes execution of command's Redo method. Use TQUndoManager::Undo to undo commands in history list. Redo is Undo for undo action. Use TQUndoManager::Redo method for that ; Definition at line 27 of file TQCommand.h. Public Member Functions;  TQCommand (const char *cl=nullptr, void *object=nullptr, const char *redo=nullptr, const char *undo=nullptr);  Constructor. ;  ;  TQCommand (const TQCommand &com);  Copy constructor. ;  ;  TQCommand (TObject *obj, const char *redo=nullptr, const char *undo=nullptr);  Constructor. ;  ; virtual ~TQCommand ();  dtor. ;  ; void Add (TObject *obj) override;  ; void Add (TObject *obj, Option_t *opt) override;  Add command to the list of merged commands. ;  ; virtual Bool_t CanCompress (TQCommand *c) const;  By default, commands can be compressed if they are: ;  ; virtual Bool_t CanMerge (TQCommand *c) const;  Two commands can be merged if they can be composed into a single command (Macro command). ;  ; virtual Bool_t CanRedo () const;  Returns kTRUE if Redo action is possible, kFALSE if it's not. ;  ; virtual Bool_t CanUndo",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:4583,Usability,undo,undo,4583,"nd(""my macro"");; macro->Add(com1);; macro->Add(com2);; ...; During Redo operation commands composing macro command are executed sequentially in direct order (first in first out). During Undo, they are executed in reverse order (last in first out).; Undo manager. TQUndoManager is recorder of undo and redo operations. This is command history list which can be traversed backwards and upwards performing undo and redo operations. To register command TQUndoManager::Add(TObject*) method is used. TQUndoManager *history = new TQUndoManager();; history->Add(com);; TQCommand::TQUndoManagerfriend class TQUndoManagerDefinition TQCommand.h:29; TQUndoManagerRecorder of operations for undo and redo.Definition TQCommand.h:103; TQUndoManager::Addvoid Add(TObject *obj, Option_t *opt) overrideAdd command to the stack of commands.Definition TQCommand.cxx:959; TQUndoManager::Add automatically invokes execution of command's Redo method. Use TQUndoManager::Undo to undo commands in history list. Redo is Undo for undo action. Use TQUndoManager::Redo method for that ; Definition at line 27 of file TQCommand.h. Public Member Functions;  TQCommand (const char *cl=nullptr, void *object=nullptr, const char *redo=nullptr, const char *undo=nullptr);  Constructor. ;  ;  TQCommand (const TQCommand &com);  Copy constructor. ;  ;  TQCommand (TObject *obj, const char *redo=nullptr, const char *undo=nullptr);  Constructor. ;  ; virtual ~TQCommand ();  dtor. ;  ; void Add (TObject *obj) override;  ; void Add (TObject *obj, Option_t *opt) override;  Add command to the list of merged commands. ;  ; virtual Bool_t CanCompress (TQCommand *c) const;  By default, commands can be compressed if they are: ;  ; virtual Bool_t CanMerge (TQCommand *c) const;  Two commands can be merged if they can be composed into a single command (Macro command). ;  ; virtual Bool_t CanRedo () const;  Returns kTRUE if Redo action is possible, kFALSE if it's not. ;  ; virtual Bool_t CanUndo () const;  Returns kTRUE if Undo action is ",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:4802,Usability,undo,undo,4802,"t). During Undo, they are executed in reverse order (last in first out).; Undo manager. TQUndoManager is recorder of undo and redo operations. This is command history list which can be traversed backwards and upwards performing undo and redo operations. To register command TQUndoManager::Add(TObject*) method is used. TQUndoManager *history = new TQUndoManager();; history->Add(com);; TQCommand::TQUndoManagerfriend class TQUndoManagerDefinition TQCommand.h:29; TQUndoManagerRecorder of operations for undo and redo.Definition TQCommand.h:103; TQUndoManager::Addvoid Add(TObject *obj, Option_t *opt) overrideAdd command to the stack of commands.Definition TQCommand.cxx:959; TQUndoManager::Add automatically invokes execution of command's Redo method. Use TQUndoManager::Undo to undo commands in history list. Redo is Undo for undo action. Use TQUndoManager::Redo method for that ; Definition at line 27 of file TQCommand.h. Public Member Functions;  TQCommand (const char *cl=nullptr, void *object=nullptr, const char *redo=nullptr, const char *undo=nullptr);  Constructor. ;  ;  TQCommand (const TQCommand &com);  Copy constructor. ;  ;  TQCommand (TObject *obj, const char *redo=nullptr, const char *undo=nullptr);  Constructor. ;  ; virtual ~TQCommand ();  dtor. ;  ; void Add (TObject *obj) override;  ; void Add (TObject *obj, Option_t *opt) override;  Add command to the list of merged commands. ;  ; virtual Bool_t CanCompress (TQCommand *c) const;  By default, commands can be compressed if they are: ;  ; virtual Bool_t CanMerge (TQCommand *c) const;  Two commands can be merged if they can be composed into a single command (Macro command). ;  ; virtual Bool_t CanRedo () const;  Returns kTRUE if Redo action is possible, kFALSE if it's not. ;  ; virtual Bool_t CanUndo () const;  Returns kTRUE if Undo action is possible, kFALSE if it's not. ;  ; virtual void Compress (TQCommand *c);  Compress command. ;  ; void Delete (Option_t *option="""") override;  If ""opt"" is not zero delete every",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:4959,Usability,undo,undo,4959,"e traversed backwards and upwards performing undo and redo operations. To register command TQUndoManager::Add(TObject*) method is used. TQUndoManager *history = new TQUndoManager();; history->Add(com);; TQCommand::TQUndoManagerfriend class TQUndoManagerDefinition TQCommand.h:29; TQUndoManagerRecorder of operations for undo and redo.Definition TQCommand.h:103; TQUndoManager::Addvoid Add(TObject *obj, Option_t *opt) overrideAdd command to the stack of commands.Definition TQCommand.cxx:959; TQUndoManager::Add automatically invokes execution of command's Redo method. Use TQUndoManager::Undo to undo commands in history list. Redo is Undo for undo action. Use TQUndoManager::Redo method for that ; Definition at line 27 of file TQCommand.h. Public Member Functions;  TQCommand (const char *cl=nullptr, void *object=nullptr, const char *redo=nullptr, const char *undo=nullptr);  Constructor. ;  ;  TQCommand (const TQCommand &com);  Copy constructor. ;  ;  TQCommand (TObject *obj, const char *redo=nullptr, const char *undo=nullptr);  Constructor. ;  ; virtual ~TQCommand ();  dtor. ;  ; void Add (TObject *obj) override;  ; void Add (TObject *obj, Option_t *opt) override;  Add command to the list of merged commands. ;  ; virtual Bool_t CanCompress (TQCommand *c) const;  By default, commands can be compressed if they are: ;  ; virtual Bool_t CanMerge (TQCommand *c) const;  Two commands can be merged if they can be composed into a single command (Macro command). ;  ; virtual Bool_t CanRedo () const;  Returns kTRUE if Redo action is possible, kFALSE if it's not. ;  ; virtual Bool_t CanUndo () const;  Returns kTRUE if Undo action is possible, kFALSE if it's not. ;  ; virtual void Compress (TQCommand *c);  Compress command. ;  ; void Delete (Option_t *option="""") override;  If ""opt"" is not zero delete every merged command which option string is equal to ""opt"". ;  ; const char * GetName () const override;  Returns the command name. ;  ; Int_t GetNRargs () const;  Returns a number of redo",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:6002,Usability,undo,undo,6002,"tor. ;  ; virtual ~TQCommand ();  dtor. ;  ; void Add (TObject *obj) override;  ; void Add (TObject *obj, Option_t *opt) override;  Add command to the list of merged commands. ;  ; virtual Bool_t CanCompress (TQCommand *c) const;  By default, commands can be compressed if they are: ;  ; virtual Bool_t CanMerge (TQCommand *c) const;  Two commands can be merged if they can be composed into a single command (Macro command). ;  ; virtual Bool_t CanRedo () const;  Returns kTRUE if Redo action is possible, kFALSE if it's not. ;  ; virtual Bool_t CanUndo () const;  Returns kTRUE if Undo action is possible, kFALSE if it's not. ;  ; virtual void Compress (TQCommand *c);  Compress command. ;  ; void Delete (Option_t *option="""") override;  If ""opt"" is not zero delete every merged command which option string is equal to ""opt"". ;  ; const char * GetName () const override;  Returns the command name. ;  ; Int_t GetNRargs () const;  Returns a number of redo arguments. ;  ; Int_t GetNUargs () const;  Returns a number of undo arguments. ;  ; void * GetObject () const;  Returns an object for which undo redo actions are applied. ;  ; TQConnection * GetRedo () const;  ; Long_t * GetRedoArgs () const;  Returns a pointer to array of redo arguments. ;  ; const char * GetRedoName () const;  Returns the name of redo command. ;  ; Int_t GetStatus () const;  Returns a number of sequential undo or redo operations. ;  ; const char * GetTitle () const override;  Returns command description. ;  ; TQConnection * GetUndo () const;  ; Long_t * GetUndoArgs () const;  Returns a pointer to array of undo arguments. ;  ; const char * GetUndoName () const;  Returns the name of undo command. ;  ; TClass * IsA () const override;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison. ;  ; Bool_t IsExecuting () const;  Returns kTRUE if command execution is in progress. ;  ; Bool_t IsMacro () const;  Returns kTRUE if neither redo nor undo action specified. ;  ; Bool_t IsRedoing () const;  Red",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:6079,Usability,undo,undo,6079,"; void Add (TObject *obj, Option_t *opt) override;  Add command to the list of merged commands. ;  ; virtual Bool_t CanCompress (TQCommand *c) const;  By default, commands can be compressed if they are: ;  ; virtual Bool_t CanMerge (TQCommand *c) const;  Two commands can be merged if they can be composed into a single command (Macro command). ;  ; virtual Bool_t CanRedo () const;  Returns kTRUE if Redo action is possible, kFALSE if it's not. ;  ; virtual Bool_t CanUndo () const;  Returns kTRUE if Undo action is possible, kFALSE if it's not. ;  ; virtual void Compress (TQCommand *c);  Compress command. ;  ; void Delete (Option_t *option="""") override;  If ""opt"" is not zero delete every merged command which option string is equal to ""opt"". ;  ; const char * GetName () const override;  Returns the command name. ;  ; Int_t GetNRargs () const;  Returns a number of redo arguments. ;  ; Int_t GetNUargs () const;  Returns a number of undo arguments. ;  ; void * GetObject () const;  Returns an object for which undo redo actions are applied. ;  ; TQConnection * GetRedo () const;  ; Long_t * GetRedoArgs () const;  Returns a pointer to array of redo arguments. ;  ; const char * GetRedoName () const;  Returns the name of redo command. ;  ; Int_t GetStatus () const;  Returns a number of sequential undo or redo operations. ;  ; const char * GetTitle () const override;  Returns command description. ;  ; TQConnection * GetUndo () const;  ; Long_t * GetUndoArgs () const;  Returns a pointer to array of undo arguments. ;  ; const char * GetUndoName () const;  Returns the name of undo command. ;  ; TClass * IsA () const override;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison. ;  ; Bool_t IsExecuting () const;  Returns kTRUE if command execution is in progress. ;  ; Bool_t IsMacro () const;  Returns kTRUE if neither redo nor undo action specified. ;  ; Bool_t IsRedoing () const;  Redo action is in progress. ;  ; virtual Bool_t IsSetter () const;  Returns kTRUE i",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:6367,Usability,undo,undo,6367," they can be composed into a single command (Macro command). ;  ; virtual Bool_t CanRedo () const;  Returns kTRUE if Redo action is possible, kFALSE if it's not. ;  ; virtual Bool_t CanUndo () const;  Returns kTRUE if Undo action is possible, kFALSE if it's not. ;  ; virtual void Compress (TQCommand *c);  Compress command. ;  ; void Delete (Option_t *option="""") override;  If ""opt"" is not zero delete every merged command which option string is equal to ""opt"". ;  ; const char * GetName () const override;  Returns the command name. ;  ; Int_t GetNRargs () const;  Returns a number of redo arguments. ;  ; Int_t GetNUargs () const;  Returns a number of undo arguments. ;  ; void * GetObject () const;  Returns an object for which undo redo actions are applied. ;  ; TQConnection * GetRedo () const;  ; Long_t * GetRedoArgs () const;  Returns a pointer to array of redo arguments. ;  ; const char * GetRedoName () const;  Returns the name of redo command. ;  ; Int_t GetStatus () const;  Returns a number of sequential undo or redo operations. ;  ; const char * GetTitle () const override;  Returns command description. ;  ; TQConnection * GetUndo () const;  ; Long_t * GetUndoArgs () const;  Returns a pointer to array of undo arguments. ;  ; const char * GetUndoName () const;  Returns the name of undo command. ;  ; TClass * IsA () const override;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison. ;  ; Bool_t IsExecuting () const;  Returns kTRUE if command execution is in progress. ;  ; Bool_t IsMacro () const;  Returns kTRUE if neither redo nor undo action specified. ;  ; Bool_t IsRedoing () const;  Redo action is in progress. ;  ; virtual Bool_t IsSetter () const;  Returns kTRUE is command if Redo is the same as Undo function and is the setter action. ;  ; Bool_t IsUndoing () const;  Undo action is in progress. ;  ; void ls (Option_t *option="""") const override;  ls this command and merged commands ;  ; virtual Long64_t Merge (TCollection *, TFileMergeInfo *);",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:6571,Usability,undo,undo,6571,"_t CanUndo () const;  Returns kTRUE if Undo action is possible, kFALSE if it's not. ;  ; virtual void Compress (TQCommand *c);  Compress command. ;  ; void Delete (Option_t *option="""") override;  If ""opt"" is not zero delete every merged command which option string is equal to ""opt"". ;  ; const char * GetName () const override;  Returns the command name. ;  ; Int_t GetNRargs () const;  Returns a number of redo arguments. ;  ; Int_t GetNUargs () const;  Returns a number of undo arguments. ;  ; void * GetObject () const;  Returns an object for which undo redo actions are applied. ;  ; TQConnection * GetRedo () const;  ; Long_t * GetRedoArgs () const;  Returns a pointer to array of redo arguments. ;  ; const char * GetRedoName () const;  Returns the name of redo command. ;  ; Int_t GetStatus () const;  Returns a number of sequential undo or redo operations. ;  ; const char * GetTitle () const override;  Returns command description. ;  ; TQConnection * GetUndo () const;  ; Long_t * GetUndoArgs () const;  Returns a pointer to array of undo arguments. ;  ; const char * GetUndoName () const;  Returns the name of undo command. ;  ; TClass * IsA () const override;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison. ;  ; Bool_t IsExecuting () const;  Returns kTRUE if command execution is in progress. ;  ; Bool_t IsMacro () const;  Returns kTRUE if neither redo nor undo action specified. ;  ; Bool_t IsRedoing () const;  Redo action is in progress. ;  ; virtual Bool_t IsSetter () const;  Returns kTRUE is command if Redo is the same as Undo function and is the setter action. ;  ; Bool_t IsUndoing () const;  Undo action is in progress. ;  ; void ls (Option_t *option="""") const override;  ls this command and merged commands ;  ; virtual Long64_t Merge (TCollection *, TFileMergeInfo *);  Merge a collection of TQCommand. ;  ; virtual void Merge (TQCommand *c);  Add command to the list of merged commands. ;  ; virtual void Redo (Option_t *option="""");  Execute comma",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:6648,Usability,undo,undo,6648,"void Compress (TQCommand *c);  Compress command. ;  ; void Delete (Option_t *option="""") override;  If ""opt"" is not zero delete every merged command which option string is equal to ""opt"". ;  ; const char * GetName () const override;  Returns the command name. ;  ; Int_t GetNRargs () const;  Returns a number of redo arguments. ;  ; Int_t GetNUargs () const;  Returns a number of undo arguments. ;  ; void * GetObject () const;  Returns an object for which undo redo actions are applied. ;  ; TQConnection * GetRedo () const;  ; Long_t * GetRedoArgs () const;  Returns a pointer to array of redo arguments. ;  ; const char * GetRedoName () const;  Returns the name of redo command. ;  ; Int_t GetStatus () const;  Returns a number of sequential undo or redo operations. ;  ; const char * GetTitle () const override;  Returns command description. ;  ; TQConnection * GetUndo () const;  ; Long_t * GetUndoArgs () const;  Returns a pointer to array of undo arguments. ;  ; const char * GetUndoName () const;  Returns the name of undo command. ;  ; TClass * IsA () const override;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison. ;  ; Bool_t IsExecuting () const;  Returns kTRUE if command execution is in progress. ;  ; Bool_t IsMacro () const;  Returns kTRUE if neither redo nor undo action specified. ;  ; Bool_t IsRedoing () const;  Redo action is in progress. ;  ; virtual Bool_t IsSetter () const;  Returns kTRUE is command if Redo is the same as Undo function and is the setter action. ;  ; Bool_t IsUndoing () const;  Undo action is in progress. ;  ; void ls (Option_t *option="""") const override;  ls this command and merged commands ;  ; virtual Long64_t Merge (TCollection *, TFileMergeInfo *);  Merge a collection of TQCommand. ;  ; virtual void Merge (TQCommand *c);  Add command to the list of merged commands. ;  ; virtual void Redo (Option_t *option="""");  Execute command and then merge commands. ;  ; virtual void SetArgs (Int_t nargs,...);  Set do/redo and undo pa",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:6924,Usability,undo,undo,6924," () const;  Returns a number of redo arguments. ;  ; Int_t GetNUargs () const;  Returns a number of undo arguments. ;  ; void * GetObject () const;  Returns an object for which undo redo actions are applied. ;  ; TQConnection * GetRedo () const;  ; Long_t * GetRedoArgs () const;  Returns a pointer to array of redo arguments. ;  ; const char * GetRedoName () const;  Returns the name of redo command. ;  ; Int_t GetStatus () const;  Returns a number of sequential undo or redo operations. ;  ; const char * GetTitle () const override;  Returns command description. ;  ; TQConnection * GetUndo () const;  ; Long_t * GetUndoArgs () const;  Returns a pointer to array of undo arguments. ;  ; const char * GetUndoName () const;  Returns the name of undo command. ;  ; TClass * IsA () const override;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison. ;  ; Bool_t IsExecuting () const;  Returns kTRUE if command execution is in progress. ;  ; Bool_t IsMacro () const;  Returns kTRUE if neither redo nor undo action specified. ;  ; Bool_t IsRedoing () const;  Redo action is in progress. ;  ; virtual Bool_t IsSetter () const;  Returns kTRUE is command if Redo is the same as Undo function and is the setter action. ;  ; Bool_t IsUndoing () const;  Undo action is in progress. ;  ; void ls (Option_t *option="""") const override;  ls this command and merged commands ;  ; virtual Long64_t Merge (TCollection *, TFileMergeInfo *);  Merge a collection of TQCommand. ;  ; virtual void Merge (TQCommand *c);  Add command to the list of merged commands. ;  ; virtual void Redo (Option_t *option="""");  Execute command and then merge commands. ;  ; virtual void SetArgs (Int_t nargs,...);  Set do/redo and undo parameters. ;  ; virtual void SetName (const char *name);  Sets name of the command. ;  ; virtual void SetRedoArgs (Int_t nargs,...);  Set redo parameters. ;  ; virtual void SetTitle (const char *title);  Sets description of the command. ;  ; virtual void SetUndoArgs (Int_t nargs",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:7617,Usability,undo,undo,7617,"e () const;  Returns the name of undo command. ;  ; TClass * IsA () const override;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison. ;  ; Bool_t IsExecuting () const;  Returns kTRUE if command execution is in progress. ;  ; Bool_t IsMacro () const;  Returns kTRUE if neither redo nor undo action specified. ;  ; Bool_t IsRedoing () const;  Redo action is in progress. ;  ; virtual Bool_t IsSetter () const;  Returns kTRUE is command if Redo is the same as Undo function and is the setter action. ;  ; Bool_t IsUndoing () const;  Undo action is in progress. ;  ; void ls (Option_t *option="""") const override;  ls this command and merged commands ;  ; virtual Long64_t Merge (TCollection *, TFileMergeInfo *);  Merge a collection of TQCommand. ;  ; virtual void Merge (TQCommand *c);  Add command to the list of merged commands. ;  ; virtual void Redo (Option_t *option="""");  Execute command and then merge commands. ;  ; virtual void SetArgs (Int_t nargs,...);  Set do/redo and undo parameters. ;  ; virtual void SetName (const char *name);  Sets name of the command. ;  ; virtual void SetRedoArgs (Int_t nargs,...);  Set redo parameters. ;  ; virtual void SetTitle (const char *title);  Sets description of the command. ;  ; virtual void SetUndoArgs (Int_t nargs,...);  Set undo parameters. ;  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Undo (Option_t *option="""");  Un-execute all merged commands and the command. ;  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void AddAfter (const TObject *after, TObject *obj) override;  Insert object after object after in the list. ;  ; virtual void AddAfter (TObjLink *after, TObject *obj);  Insert object after the specified",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:7914,Usability,undo,undo,7914,"o nor undo action specified. ;  ; Bool_t IsRedoing () const;  Redo action is in progress. ;  ; virtual Bool_t IsSetter () const;  Returns kTRUE is command if Redo is the same as Undo function and is the setter action. ;  ; Bool_t IsUndoing () const;  Undo action is in progress. ;  ; void ls (Option_t *option="""") const override;  ls this command and merged commands ;  ; virtual Long64_t Merge (TCollection *, TFileMergeInfo *);  Merge a collection of TQCommand. ;  ; virtual void Merge (TQCommand *c);  Add command to the list of merged commands. ;  ; virtual void Redo (Option_t *option="""");  Execute command and then merge commands. ;  ; virtual void SetArgs (Int_t nargs,...);  Set do/redo and undo parameters. ;  ; virtual void SetName (const char *name);  Sets name of the command. ;  ; virtual void SetRedoArgs (Int_t nargs,...);  Set redo parameters. ;  ; virtual void SetTitle (const char *title);  Sets description of the command. ;  ; virtual void SetUndoArgs (Int_t nargs,...);  Set undo parameters. ;  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Undo (Option_t *option="""");  Un-execute all merged commands and the command. ;  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void AddAfter (const TObject *after, TObject *obj) override;  Insert object after object after in the list. ;  ; virtual void AddAfter (TObjLink *after, TObject *obj);  Insert object after the specified ObjLink object. ;  ; void AddAt (TObject *obj, Int_t idx) override;  Insert object at position idx in the list. ;  ; void AddBefore (const TObject *before, TObject *obj) override;  Insert object before object before in the list. ;  ; virtual void AddBefore (TObjLink *before, TObject *obj);  Insert obj",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:23067,Usability,undo,undo,23067,"nal_name, Int_t, const T &... params);  Emit a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TQCommand * GetCommand ();  Return a command which is doing redo/undo action. ;  ;  Static Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject *",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:26340,Usability,undo,undo,26340,"atic TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; virtual void Init (const char *cl, void *object, const char *redo, const char *undo);  Common protected method used in several constructors. ;  ; void PrintCollectionHeader (Option_t *option) const override;  Print collection header. ;  ;  Protected Member Functions inherited from TList; TObjLinkPtr_t * DoSort (TObjLinkPtr_t *head, Int_t n);  Sort linked list. ;  ; TObjLink * FindLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLin",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:31960,Usability,undo,undo,31960," full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TQCommand.h>. Inheritance diagram for TQCommand:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQCommand() [1/3]. TQCommand::TQCommand ; (; const char * ; clname = nullptr, . void * ; obj = nullptr, . const char * ; redo = nullptr, . const char * ; undo = nullptr . ). Constructor. ; Input parameters:; clname - class name.; obj - an object; redo - method or function to do/redo operation; undo - method or function to undo operation. Comments:; if either clname or obj is NULL that means that redo/undo is function; to specify default arguments for redo/undo method/function '=' must precede to argument value. Example: TQCommand(""TPad"", gPad, ""SetEditable(=kTRUE)"", ""SetEditable(=kFALSE)"");; undo method can be same as redo one. In that case undo parameter can be omitted.; Example: TQCommand(""TPad"", gPad, ""SetFillStyle(Style_t)"");. Definition at line 168 of file TQCommand.cxx. ◆ TQCommand() [2/3]. TQCommand::TQCommand ; (; TObject * ; obj, . const char * ; redo = nullptr, . const char * ; undo = nullptr . ). Constructor. ; Input parameters:; obj - an object; redo - method or function to do/redo operation; undo - method or function to undo operation. Comments: to specify default arguments for redo/undo method/function '=' must precede to ",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:32101,Usability,undo,undo,32101,"r *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TQCommand.h>. Inheritance diagram for TQCommand:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQCommand() [1/3]. TQCommand::TQCommand ; (; const char * ; clname = nullptr, . void * ; obj = nullptr, . const char * ; redo = nullptr, . const char * ; undo = nullptr . ). Constructor. ; Input parameters:; clname - class name.; obj - an object; redo - method or function to do/redo operation; undo - method or function to undo operation. Comments:; if either clname or obj is NULL that means that redo/undo is function; to specify default arguments for redo/undo method/function '=' must precede to argument value. Example: TQCommand(""TPad"", gPad, ""SetEditable(=kTRUE)"", ""SetEditable(=kFALSE)"");; undo method can be same as redo one. In that case undo parameter can be omitted.; Example: TQCommand(""TPad"", gPad, ""SetFillStyle(Style_t)"");. Definition at line 168 of file TQCommand.cxx. ◆ TQCommand() [2/3]. TQCommand::TQCommand ; (; TObject * ; obj, . const char * ; redo = nullptr, . const char * ; undo = nullptr . ). Constructor. ; Input parameters:; obj - an object; redo - method or function to do/redo operation; undo - method or function to undo operation. Comments: to specify default arguments for redo/undo method/function '=' must precede to argument value.; Example: TQCommand(gPad, ""SetEditable(=kTRUE)"", ""SetEditable(=kFALSE)"");; undo method can be same as redo one. In",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:32130,Usability,undo,undo,32130,"r *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TQCommand.h>. Inheritance diagram for TQCommand:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQCommand() [1/3]. TQCommand::TQCommand ; (; const char * ; clname = nullptr, . void * ; obj = nullptr, . const char * ; redo = nullptr, . const char * ; undo = nullptr . ). Constructor. ; Input parameters:; clname - class name.; obj - an object; redo - method or function to do/redo operation; undo - method or function to undo operation. Comments:; if either clname or obj is NULL that means that redo/undo is function; to specify default arguments for redo/undo method/function '=' must precede to argument value. Example: TQCommand(""TPad"", gPad, ""SetEditable(=kTRUE)"", ""SetEditable(=kFALSE)"");; undo method can be same as redo one. In that case undo parameter can be omitted.; Example: TQCommand(""TPad"", gPad, ""SetFillStyle(Style_t)"");. Definition at line 168 of file TQCommand.cxx. ◆ TQCommand() [2/3]. TQCommand::TQCommand ; (; TObject * ; obj, . const char * ; redo = nullptr, . const char * ; undo = nullptr . ). Constructor. ; Input parameters:; obj - an object; redo - method or function to do/redo operation; undo - method or function to undo operation. Comments: to specify default arguments for redo/undo method/function '=' must precede to argument value.; Example: TQCommand(gPad, ""SetEditable(=kTRUE)"", ""SetEditable(=kFALSE)"");; undo method can be same as redo one. In",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:32210,Usability,undo,undo,32210,"object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TQCommand.h>. Inheritance diagram for TQCommand:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQCommand() [1/3]. TQCommand::TQCommand ; (; const char * ; clname = nullptr, . void * ; obj = nullptr, . const char * ; redo = nullptr, . const char * ; undo = nullptr . ). Constructor. ; Input parameters:; clname - class name.; obj - an object; redo - method or function to do/redo operation; undo - method or function to undo operation. Comments:; if either clname or obj is NULL that means that redo/undo is function; to specify default arguments for redo/undo method/function '=' must precede to argument value. Example: TQCommand(""TPad"", gPad, ""SetEditable(=kTRUE)"", ""SetEditable(=kFALSE)"");; undo method can be same as redo one. In that case undo parameter can be omitted.; Example: TQCommand(""TPad"", gPad, ""SetFillStyle(Style_t)"");. Definition at line 168 of file TQCommand.cxx. ◆ TQCommand() [2/3]. TQCommand::TQCommand ; (; TObject * ; obj, . const char * ; redo = nullptr, . const char * ; undo = nullptr . ). Constructor. ; Input parameters:; obj - an object; redo - method or function to do/redo operation; undo - method or function to undo operation. Comments: to specify default arguments for redo/undo method/function '=' must precede to argument value.; Example: TQCommand(gPad, ""SetEditable(=kTRUE)"", ""SetEditable(=kFALSE)"");; undo method can be same as redo one. In that case ""undo"" can parameter be omitted.; Example: TQCommand(gPad, ""SetFillStyle(Style_t)"");. Definition at line 199 of file TQCommand.cxx. ◆",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:32266,Usability,undo,undo,32266,"object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TQCommand.h>. Inheritance diagram for TQCommand:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQCommand() [1/3]. TQCommand::TQCommand ; (; const char * ; clname = nullptr, . void * ; obj = nullptr, . const char * ; redo = nullptr, . const char * ; undo = nullptr . ). Constructor. ; Input parameters:; clname - class name.; obj - an object; redo - method or function to do/redo operation; undo - method or function to undo operation. Comments:; if either clname or obj is NULL that means that redo/undo is function; to specify default arguments for redo/undo method/function '=' must precede to argument value. Example: TQCommand(""TPad"", gPad, ""SetEditable(=kTRUE)"", ""SetEditable(=kFALSE)"");; undo method can be same as redo one. In that case undo parameter can be omitted.; Example: TQCommand(""TPad"", gPad, ""SetFillStyle(Style_t)"");. Definition at line 168 of file TQCommand.cxx. ◆ TQCommand() [2/3]. TQCommand::TQCommand ; (; TObject * ; obj, . const char * ; redo = nullptr, . const char * ; undo = nullptr . ). Constructor. ; Input parameters:; obj - an object; redo - method or function to do/redo operation; undo - method or function to undo operation. Comments: to specify default arguments for redo/undo method/function '=' must precede to argument value.; Example: TQCommand(gPad, ""SetEditable(=kTRUE)"", ""SetEditable(=kFALSE)"");; undo method can be same as redo one. In that case ""undo"" can parameter be omitted.; Example: TQCommand(gPad, ""SetFillStyle(Style_t)"");. Definition at line 199 of file TQCommand.cxx. ◆",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:32405,Usability,undo,undo,32405,"id *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TQCommand.h>. Inheritance diagram for TQCommand:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQCommand() [1/3]. TQCommand::TQCommand ; (; const char * ; clname = nullptr, . void * ; obj = nullptr, . const char * ; redo = nullptr, . const char * ; undo = nullptr . ). Constructor. ; Input parameters:; clname - class name.; obj - an object; redo - method or function to do/redo operation; undo - method or function to undo operation. Comments:; if either clname or obj is NULL that means that redo/undo is function; to specify default arguments for redo/undo method/function '=' must precede to argument value. Example: TQCommand(""TPad"", gPad, ""SetEditable(=kTRUE)"", ""SetEditable(=kFALSE)"");; undo method can be same as redo one. In that case undo parameter can be omitted.; Example: TQCommand(""TPad"", gPad, ""SetFillStyle(Style_t)"");. Definition at line 168 of file TQCommand.cxx. ◆ TQCommand() [2/3]. TQCommand::TQCommand ; (; TObject * ; obj, . const char * ; redo = nullptr, . const char * ; undo = nullptr . ). Constructor. ; Input parameters:; obj - an object; redo - method or function to do/redo operation; undo - method or function to undo operation. Comments: to specify default arguments for redo/undo method/function '=' must precede to argument value.; Example: TQCommand(gPad, ""SetEditable(=kTRUE)"", ""SetEditable(=kFALSE)"");; undo method can be same as redo one. In that case ""undo"" can parameter be omitted.; Example: TQCommand(gPad, ""SetFillStyle(Style_t)"");. Definition at line 199 of file TQCommand.cxx. ◆ TQCommand() [3/3]. TQCommand::TQCommand ; (; const TQCommand & ; com). Copy constructor. ; Definition at line 209 of file TQCommand.cxx. ◆ ~TQComma",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:32455,Usability,undo,undo,32455,"  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TQCommand.h>. Inheritance diagram for TQCommand:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQCommand() [1/3]. TQCommand::TQCommand ; (; const char * ; clname = nullptr, . void * ; obj = nullptr, . const char * ; redo = nullptr, . const char * ; undo = nullptr . ). Constructor. ; Input parameters:; clname - class name.; obj - an object; redo - method or function to do/redo operation; undo - method or function to undo operation. Comments:; if either clname or obj is NULL that means that redo/undo is function; to specify default arguments for redo/undo method/function '=' must precede to argument value. Example: TQCommand(""TPad"", gPad, ""SetEditable(=kTRUE)"", ""SetEditable(=kFALSE)"");; undo method can be same as redo one. In that case undo parameter can be omitted.; Example: TQCommand(""TPad"", gPad, ""SetFillStyle(Style_t)"");. Definition at line 168 of file TQCommand.cxx. ◆ TQCommand() [2/3]. TQCommand::TQCommand ; (; TObject * ; obj, . const char * ; redo = nullptr, . const char * ; undo = nullptr . ). Constructor. ; Input parameters:; obj - an object; redo - method or function to do/redo operation; undo - method or function to undo operation. Comments: to specify default arguments for redo/undo method/function '=' must precede to argument value.; Example: TQCommand(gPad, ""SetEditable(=kTRUE)"", ""SetEditable(=kFALSE)"");; undo method can be same as redo one. In that case ""undo"" can parameter be omitted.; Example: TQCommand(gPad, ""SetFillStyle(Style_t)"");. Definition at line 199 of file TQCommand.cxx. ◆ TQCommand() [3/3]. TQCommand::TQCommand ; (; const TQCommand & ; com). Copy constructor. ; Definition at line 209 of file TQCommand.cxx. ◆ ~TQCommand(). TQCommand::~TQCommand ; (; ). virtual . dtor. ; Definition at line 249 of f",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:32707,Usability,undo,undo,32707,"ry Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQCommand() [1/3]. TQCommand::TQCommand ; (; const char * ; clname = nullptr, . void * ; obj = nullptr, . const char * ; redo = nullptr, . const char * ; undo = nullptr . ). Constructor. ; Input parameters:; clname - class name.; obj - an object; redo - method or function to do/redo operation; undo - method or function to undo operation. Comments:; if either clname or obj is NULL that means that redo/undo is function; to specify default arguments for redo/undo method/function '=' must precede to argument value. Example: TQCommand(""TPad"", gPad, ""SetEditable(=kTRUE)"", ""SetEditable(=kFALSE)"");; undo method can be same as redo one. In that case undo parameter can be omitted.; Example: TQCommand(""TPad"", gPad, ""SetFillStyle(Style_t)"");. Definition at line 168 of file TQCommand.cxx. ◆ TQCommand() [2/3]. TQCommand::TQCommand ; (; TObject * ; obj, . const char * ; redo = nullptr, . const char * ; undo = nullptr . ). Constructor. ; Input parameters:; obj - an object; redo - method or function to do/redo operation; undo - method or function to undo operation. Comments: to specify default arguments for redo/undo method/function '=' must precede to argument value.; Example: TQCommand(gPad, ""SetEditable(=kTRUE)"", ""SetEditable(=kFALSE)"");; undo method can be same as redo one. In that case ""undo"" can parameter be omitted.; Example: TQCommand(gPad, ""SetFillStyle(Style_t)"");. Definition at line 199 of file TQCommand.cxx. ◆ TQCommand() [3/3]. TQCommand::TQCommand ; (; const TQCommand & ; com). Copy constructor. ; Definition at line 209 of file TQCommand.cxx. ◆ ~TQCommand(). TQCommand::~TQCommand ; (; ). virtual . dtor. ; Definition at line 249 of file TQCommand.cxx. Member Function Documentation. ◆ Add() [1/2]. void TQCommand::Add ; (; TObject * ; obj). inlineoverridevirtual . Reimplemented from TList.; Reimplemented in TQUndoManager.; Definition at line 91 of file TQCommand.h. ◆ Add() [",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:32826,Usability,undo,undo,32826,"◆ TQCommand() [1/3]. TQCommand::TQCommand ; (; const char * ; clname = nullptr, . void * ; obj = nullptr, . const char * ; redo = nullptr, . const char * ; undo = nullptr . ). Constructor. ; Input parameters:; clname - class name.; obj - an object; redo - method or function to do/redo operation; undo - method or function to undo operation. Comments:; if either clname or obj is NULL that means that redo/undo is function; to specify default arguments for redo/undo method/function '=' must precede to argument value. Example: TQCommand(""TPad"", gPad, ""SetEditable(=kTRUE)"", ""SetEditable(=kFALSE)"");; undo method can be same as redo one. In that case undo parameter can be omitted.; Example: TQCommand(""TPad"", gPad, ""SetFillStyle(Style_t)"");. Definition at line 168 of file TQCommand.cxx. ◆ TQCommand() [2/3]. TQCommand::TQCommand ; (; TObject * ; obj, . const char * ; redo = nullptr, . const char * ; undo = nullptr . ). Constructor. ; Input parameters:; obj - an object; redo - method or function to do/redo operation; undo - method or function to undo operation. Comments: to specify default arguments for redo/undo method/function '=' must precede to argument value.; Example: TQCommand(gPad, ""SetEditable(=kTRUE)"", ""SetEditable(=kFALSE)"");; undo method can be same as redo one. In that case ""undo"" can parameter be omitted.; Example: TQCommand(gPad, ""SetFillStyle(Style_t)"");. Definition at line 199 of file TQCommand.cxx. ◆ TQCommand() [3/3]. TQCommand::TQCommand ; (; const TQCommand & ; com). Copy constructor. ; Definition at line 209 of file TQCommand.cxx. ◆ ~TQCommand(). TQCommand::~TQCommand ; (; ). virtual . dtor. ; Definition at line 249 of file TQCommand.cxx. Member Function Documentation. ◆ Add() [1/2]. void TQCommand::Add ; (; TObject * ; obj). inlineoverridevirtual . Reimplemented from TList.; Reimplemented in TQUndoManager.; Definition at line 91 of file TQCommand.h. ◆ Add() [2/2]. void TQCommand::Add ; (; TObject * ; obj, . Option_t * ; opt . ). overridevirtual . Add comm",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:32855,Usability,undo,undo,32855,"◆ TQCommand() [1/3]. TQCommand::TQCommand ; (; const char * ; clname = nullptr, . void * ; obj = nullptr, . const char * ; redo = nullptr, . const char * ; undo = nullptr . ). Constructor. ; Input parameters:; clname - class name.; obj - an object; redo - method or function to do/redo operation; undo - method or function to undo operation. Comments:; if either clname or obj is NULL that means that redo/undo is function; to specify default arguments for redo/undo method/function '=' must precede to argument value. Example: TQCommand(""TPad"", gPad, ""SetEditable(=kTRUE)"", ""SetEditable(=kFALSE)"");; undo method can be same as redo one. In that case undo parameter can be omitted.; Example: TQCommand(""TPad"", gPad, ""SetFillStyle(Style_t)"");. Definition at line 168 of file TQCommand.cxx. ◆ TQCommand() [2/3]. TQCommand::TQCommand ; (; TObject * ; obj, . const char * ; redo = nullptr, . const char * ; undo = nullptr . ). Constructor. ; Input parameters:; obj - an object; redo - method or function to do/redo operation; undo - method or function to undo operation. Comments: to specify default arguments for redo/undo method/function '=' must precede to argument value.; Example: TQCommand(gPad, ""SetEditable(=kTRUE)"", ""SetEditable(=kFALSE)"");; undo method can be same as redo one. In that case ""undo"" can parameter be omitted.; Example: TQCommand(gPad, ""SetFillStyle(Style_t)"");. Definition at line 199 of file TQCommand.cxx. ◆ TQCommand() [3/3]. TQCommand::TQCommand ; (; const TQCommand & ; com). Copy constructor. ; Definition at line 209 of file TQCommand.cxx. ◆ ~TQCommand(). TQCommand::~TQCommand ; (; ). virtual . dtor. ; Definition at line 249 of file TQCommand.cxx. Member Function Documentation. ◆ Add() [1/2]. void TQCommand::Add ; (; TObject * ; obj). inlineoverridevirtual . Reimplemented from TList.; Reimplemented in TQUndoManager.; Definition at line 91 of file TQCommand.h. ◆ Add() [2/2]. void TQCommand::Add ; (; TObject * ; obj, . Option_t * ; opt . ). overridevirtual . Add comm",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:32919,Usability,undo,undo,32919," * ; redo = nullptr, . const char * ; undo = nullptr . ). Constructor. ; Input parameters:; clname - class name.; obj - an object; redo - method or function to do/redo operation; undo - method or function to undo operation. Comments:; if either clname or obj is NULL that means that redo/undo is function; to specify default arguments for redo/undo method/function '=' must precede to argument value. Example: TQCommand(""TPad"", gPad, ""SetEditable(=kTRUE)"", ""SetEditable(=kFALSE)"");; undo method can be same as redo one. In that case undo parameter can be omitted.; Example: TQCommand(""TPad"", gPad, ""SetFillStyle(Style_t)"");. Definition at line 168 of file TQCommand.cxx. ◆ TQCommand() [2/3]. TQCommand::TQCommand ; (; TObject * ; obj, . const char * ; redo = nullptr, . const char * ; undo = nullptr . ). Constructor. ; Input parameters:; obj - an object; redo - method or function to do/redo operation; undo - method or function to undo operation. Comments: to specify default arguments for redo/undo method/function '=' must precede to argument value.; Example: TQCommand(gPad, ""SetEditable(=kTRUE)"", ""SetEditable(=kFALSE)"");; undo method can be same as redo one. In that case ""undo"" can parameter be omitted.; Example: TQCommand(gPad, ""SetFillStyle(Style_t)"");. Definition at line 199 of file TQCommand.cxx. ◆ TQCommand() [3/3]. TQCommand::TQCommand ; (; const TQCommand & ; com). Copy constructor. ; Definition at line 209 of file TQCommand.cxx. ◆ ~TQCommand(). TQCommand::~TQCommand ; (; ). virtual . dtor. ; Definition at line 249 of file TQCommand.cxx. Member Function Documentation. ◆ Add() [1/2]. void TQCommand::Add ; (; TObject * ; obj). inlineoverridevirtual . Reimplemented from TList.; Reimplemented in TQUndoManager.; Definition at line 91 of file TQCommand.h. ◆ Add() [2/2]. void TQCommand::Add ; (; TObject * ; obj, . Option_t * ; opt . ). overridevirtual . Add command to the list of merged commands. ; Option string can contain substrings:; ""compress"" - try to compress input comman",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:33051,Usability,undo,undo,33051,"me.; obj - an object; redo - method or function to do/redo operation; undo - method or function to undo operation. Comments:; if either clname or obj is NULL that means that redo/undo is function; to specify default arguments for redo/undo method/function '=' must precede to argument value. Example: TQCommand(""TPad"", gPad, ""SetEditable(=kTRUE)"", ""SetEditable(=kFALSE)"");; undo method can be same as redo one. In that case undo parameter can be omitted.; Example: TQCommand(""TPad"", gPad, ""SetFillStyle(Style_t)"");. Definition at line 168 of file TQCommand.cxx. ◆ TQCommand() [2/3]. TQCommand::TQCommand ; (; TObject * ; obj, . const char * ; redo = nullptr, . const char * ; undo = nullptr . ). Constructor. ; Input parameters:; obj - an object; redo - method or function to do/redo operation; undo - method or function to undo operation. Comments: to specify default arguments for redo/undo method/function '=' must precede to argument value.; Example: TQCommand(gPad, ""SetEditable(=kTRUE)"", ""SetEditable(=kFALSE)"");; undo method can be same as redo one. In that case ""undo"" can parameter be omitted.; Example: TQCommand(gPad, ""SetFillStyle(Style_t)"");. Definition at line 199 of file TQCommand.cxx. ◆ TQCommand() [3/3]. TQCommand::TQCommand ; (; const TQCommand & ; com). Copy constructor. ; Definition at line 209 of file TQCommand.cxx. ◆ ~TQCommand(). TQCommand::~TQCommand ; (; ). virtual . dtor. ; Definition at line 249 of file TQCommand.cxx. Member Function Documentation. ◆ Add() [1/2]. void TQCommand::Add ; (; TObject * ; obj). inlineoverridevirtual . Reimplemented from TList.; Reimplemented in TQUndoManager.; Definition at line 91 of file TQCommand.h. ◆ Add() [2/2]. void TQCommand::Add ; (; TObject * ; obj, . Option_t * ; opt . ). overridevirtual . Add command to the list of merged commands. ; Option string can contain substrings:; ""compress"" - try to compress input command; ""radd"" - execute redo action of input command; ""uadd"" - execute undo action of input command . Reimplemen",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:33102,Usability,undo,undo,33102,"thod or function to undo operation. Comments:; if either clname or obj is NULL that means that redo/undo is function; to specify default arguments for redo/undo method/function '=' must precede to argument value. Example: TQCommand(""TPad"", gPad, ""SetEditable(=kTRUE)"", ""SetEditable(=kFALSE)"");; undo method can be same as redo one. In that case undo parameter can be omitted.; Example: TQCommand(""TPad"", gPad, ""SetFillStyle(Style_t)"");. Definition at line 168 of file TQCommand.cxx. ◆ TQCommand() [2/3]. TQCommand::TQCommand ; (; TObject * ; obj, . const char * ; redo = nullptr, . const char * ; undo = nullptr . ). Constructor. ; Input parameters:; obj - an object; redo - method or function to do/redo operation; undo - method or function to undo operation. Comments: to specify default arguments for redo/undo method/function '=' must precede to argument value.; Example: TQCommand(gPad, ""SetEditable(=kTRUE)"", ""SetEditable(=kFALSE)"");; undo method can be same as redo one. In that case ""undo"" can parameter be omitted.; Example: TQCommand(gPad, ""SetFillStyle(Style_t)"");. Definition at line 199 of file TQCommand.cxx. ◆ TQCommand() [3/3]. TQCommand::TQCommand ; (; const TQCommand & ; com). Copy constructor. ; Definition at line 209 of file TQCommand.cxx. ◆ ~TQCommand(). TQCommand::~TQCommand ; (; ). virtual . dtor. ; Definition at line 249 of file TQCommand.cxx. Member Function Documentation. ◆ Add() [1/2]. void TQCommand::Add ; (; TObject * ; obj). inlineoverridevirtual . Reimplemented from TList.; Reimplemented in TQUndoManager.; Definition at line 91 of file TQCommand.h. ◆ Add() [2/2]. void TQCommand::Add ; (; TObject * ; obj, . Option_t * ; opt . ). overridevirtual . Add command to the list of merged commands. ; Option string can contain substrings:; ""compress"" - try to compress input command; ""radd"" - execute redo action of input command; ""uadd"" - execute undo action of input command . Reimplemented from TList.; Reimplemented in TQUndoManager.; Definition at line 360 of fil",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:33990,Usability,undo,undo,33990,"/function '=' must precede to argument value.; Example: TQCommand(gPad, ""SetEditable(=kTRUE)"", ""SetEditable(=kFALSE)"");; undo method can be same as redo one. In that case ""undo"" can parameter be omitted.; Example: TQCommand(gPad, ""SetFillStyle(Style_t)"");. Definition at line 199 of file TQCommand.cxx. ◆ TQCommand() [3/3]. TQCommand::TQCommand ; (; const TQCommand & ; com). Copy constructor. ; Definition at line 209 of file TQCommand.cxx. ◆ ~TQCommand(). TQCommand::~TQCommand ; (; ). virtual . dtor. ; Definition at line 249 of file TQCommand.cxx. Member Function Documentation. ◆ Add() [1/2]. void TQCommand::Add ; (; TObject * ; obj). inlineoverridevirtual . Reimplemented from TList.; Reimplemented in TQUndoManager.; Definition at line 91 of file TQCommand.h. ◆ Add() [2/2]. void TQCommand::Add ; (; TObject * ; obj, . Option_t * ; opt . ). overridevirtual . Add command to the list of merged commands. ; Option string can contain substrings:; ""compress"" - try to compress input command; ""radd"" - execute redo action of input command; ""uadd"" - execute undo action of input command . Reimplemented from TList.; Reimplemented in TQUndoManager.; Definition at line 360 of file TQCommand.cxx. ◆ CanCompress(). Bool_t TQCommand::CanCompress ; (; TQCommand * ; c); const. virtual . By default, commands can be compressed if they are: . equal; setter commands. More complicated commands might want to override this function. ; Definition at line 387 of file TQCommand.cxx. ◆ CanMerge(). Bool_t TQCommand::CanMerge ; (; TQCommand * ; c); const. virtual . Two commands can be merged if they can be composed into a single command (Macro command). ; To allow merging commands user might override this function. ; Definition at line 314 of file TQCommand.cxx. ◆ CanRedo(). Bool_t TQCommand::CanRedo ; (; ); const. virtual . Returns kTRUE if Redo action is possible, kFALSE if it's not. ; By default, only single sequential redo action is possible. ; Reimplemented in TQUndoManager.; Definition at line 57",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:35113,Usability,undo,undo,35113,"ile TQCommand.cxx. ◆ CanCompress(). Bool_t TQCommand::CanCompress ; (; TQCommand * ; c); const. virtual . By default, commands can be compressed if they are: . equal; setter commands. More complicated commands might want to override this function. ; Definition at line 387 of file TQCommand.cxx. ◆ CanMerge(). Bool_t TQCommand::CanMerge ; (; TQCommand * ; c); const. virtual . Two commands can be merged if they can be composed into a single command (Macro command). ; To allow merging commands user might override this function. ; Definition at line 314 of file TQCommand.cxx. ◆ CanRedo(). Bool_t TQCommand::CanRedo ; (; ); const. virtual . Returns kTRUE if Redo action is possible, kFALSE if it's not. ; By default, only single sequential redo action is possible. ; Reimplemented in TQUndoManager.; Definition at line 571 of file TQCommand.cxx. ◆ CanUndo(). Bool_t TQCommand::CanUndo ; (; ); const. virtual . Returns kTRUE if Undo action is possible, kFALSE if it's not. ; By default, only single trial undo action is possible. ; Reimplemented in TQUndoManager.; Definition at line 580 of file TQCommand.cxx. ◆ Class(). static TClass * TQCommand::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TQCommand::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TQCommand::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 98 of file TQCommand.h. ◆ Compress(). void TQCommand::Compress ; (; TQCommand * ; c). virtual . Compress command. ; Compression is analogous to arithmetic ""addition operation"".; Note:; The compressed command will be deleted.; Execution Compress method invokes Redo action with new redo arguments inherited from compressed command. More complicated commands might want to override this function. ; Definition at line 402 of file TQCommand.cxx. ◆ DeclFileName(). static const char * TQCommand::DeclFileName ; (; ). inlinestatic . Returns",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:36602,Usability,undo,undo,36602,"mmand.h. ◆ Compress(). void TQCommand::Compress ; (; TQCommand * ; c). virtual . Compress command. ; Compression is analogous to arithmetic ""addition operation"".; Note:; The compressed command will be deleted.; Execution Compress method invokes Redo action with new redo arguments inherited from compressed command. More complicated commands might want to override this function. ; Definition at line 402 of file TQCommand.cxx. ◆ DeclFileName(). static const char * TQCommand::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 98 of file TQCommand.h. ◆ Delete(). void TQCommand::Delete ; (; Option_t * ; opt = """"). overridevirtual . If ""opt"" is not zero delete every merged command which option string is equal to ""opt"". ; If ""opt"" is zero - delete all merged commands. ; Reimplemented from TList.; Definition at line 285 of file TQCommand.cxx. ◆ GetCommand(). TQCommand * TQCommand::GetCommand ; (; ). static . Return a command which is doing redo/undo action. ; This static method allows to set undo parameters dynamically, i.e. during execution of Redo function.; Example: For redo actions like TGTextEdit::DelChar() it is not possible to know ahead what character will be deleted. To set arguments for undo action ( e.g. TGTextEdit::InsChar(char)), one needs to call TQCommand::SetUndoArgs(1, character) from inside of TGTextEdit::DelChar() method, i.e. TQCommand::GetCommand()->SetUndoArgs(1, somechar);; TQCommand::GetCommandstatic TQCommand * GetCommand()Return a command which is doing redo/undo action.Definition TQCommand.cxx:276. Definition at line 276 of file TQCommand.cxx. ◆ GetName(). const char * TQCommand::GetName ; (; ); const. overridevirtual . Returns the command name. ; Default name is ""ClassName::RedoName(args)"" If list of merged commands is not empty the name is ""ClassName::RedoName(args):cname1:cname2 ..."" ; Reimplemented from TCollection.; Definition at line 670 of file TQCommand.cxx. ◆ GetNRargs(). Int_t",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:36650,Usability,undo,undo,36650,"mand * ; c). virtual . Compress command. ; Compression is analogous to arithmetic ""addition operation"".; Note:; The compressed command will be deleted.; Execution Compress method invokes Redo action with new redo arguments inherited from compressed command. More complicated commands might want to override this function. ; Definition at line 402 of file TQCommand.cxx. ◆ DeclFileName(). static const char * TQCommand::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 98 of file TQCommand.h. ◆ Delete(). void TQCommand::Delete ; (; Option_t * ; opt = """"). overridevirtual . If ""opt"" is not zero delete every merged command which option string is equal to ""opt"". ; If ""opt"" is zero - delete all merged commands. ; Reimplemented from TList.; Definition at line 285 of file TQCommand.cxx. ◆ GetCommand(). TQCommand * TQCommand::GetCommand ; (; ). static . Return a command which is doing redo/undo action. ; This static method allows to set undo parameters dynamically, i.e. during execution of Redo function.; Example: For redo actions like TGTextEdit::DelChar() it is not possible to know ahead what character will be deleted. To set arguments for undo action ( e.g. TGTextEdit::InsChar(char)), one needs to call TQCommand::SetUndoArgs(1, character) from inside of TGTextEdit::DelChar() method, i.e. TQCommand::GetCommand()->SetUndoArgs(1, somechar);; TQCommand::GetCommandstatic TQCommand * GetCommand()Return a command which is doing redo/undo action.Definition TQCommand.cxx:276. Definition at line 276 of file TQCommand.cxx. ◆ GetName(). const char * TQCommand::GetName ; (; ); const. overridevirtual . Returns the command name. ; Default name is ""ClassName::RedoName(args)"" If list of merged commands is not empty the name is ""ClassName::RedoName(args):cname1:cname2 ..."" ; Reimplemented from TCollection.; Definition at line 670 of file TQCommand.cxx. ◆ GetNRargs(). Int_t TQCommand::GetNRargs ; (; ); const. Returns a number of re",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:36859,Usability,undo,undo,36859,"edo arguments inherited from compressed command. More complicated commands might want to override this function. ; Definition at line 402 of file TQCommand.cxx. ◆ DeclFileName(). static const char * TQCommand::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 98 of file TQCommand.h. ◆ Delete(). void TQCommand::Delete ; (; Option_t * ; opt = """"). overridevirtual . If ""opt"" is not zero delete every merged command which option string is equal to ""opt"". ; If ""opt"" is zero - delete all merged commands. ; Reimplemented from TList.; Definition at line 285 of file TQCommand.cxx. ◆ GetCommand(). TQCommand * TQCommand::GetCommand ; (; ). static . Return a command which is doing redo/undo action. ; This static method allows to set undo parameters dynamically, i.e. during execution of Redo function.; Example: For redo actions like TGTextEdit::DelChar() it is not possible to know ahead what character will be deleted. To set arguments for undo action ( e.g. TGTextEdit::InsChar(char)), one needs to call TQCommand::SetUndoArgs(1, character) from inside of TGTextEdit::DelChar() method, i.e. TQCommand::GetCommand()->SetUndoArgs(1, somechar);; TQCommand::GetCommandstatic TQCommand * GetCommand()Return a command which is doing redo/undo action.Definition TQCommand.cxx:276. Definition at line 276 of file TQCommand.cxx. ◆ GetName(). const char * TQCommand::GetName ; (; ); const. overridevirtual . Returns the command name. ; Default name is ""ClassName::RedoName(args)"" If list of merged commands is not empty the name is ""ClassName::RedoName(args):cname1:cname2 ..."" ; Reimplemented from TCollection.; Definition at line 670 of file TQCommand.cxx. ◆ GetNRargs(). Int_t TQCommand::GetNRargs ; (; ); const. Returns a number of redo arguments. ; Definition at line 768 of file TQCommand.cxx. ◆ GetNUargs(). Int_t TQCommand::GetNUargs ; (; ); const. Returns a number of undo arguments. ; Definition at line 776 of file TQCommand.cxx. ◆ Get",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:37152,Usability,undo,undo,37152,"inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 98 of file TQCommand.h. ◆ Delete(). void TQCommand::Delete ; (; Option_t * ; opt = """"). overridevirtual . If ""opt"" is not zero delete every merged command which option string is equal to ""opt"". ; If ""opt"" is zero - delete all merged commands. ; Reimplemented from TList.; Definition at line 285 of file TQCommand.cxx. ◆ GetCommand(). TQCommand * TQCommand::GetCommand ; (; ). static . Return a command which is doing redo/undo action. ; This static method allows to set undo parameters dynamically, i.e. during execution of Redo function.; Example: For redo actions like TGTextEdit::DelChar() it is not possible to know ahead what character will be deleted. To set arguments for undo action ( e.g. TGTextEdit::InsChar(char)), one needs to call TQCommand::SetUndoArgs(1, character) from inside of TGTextEdit::DelChar() method, i.e. TQCommand::GetCommand()->SetUndoArgs(1, somechar);; TQCommand::GetCommandstatic TQCommand * GetCommand()Return a command which is doing redo/undo action.Definition TQCommand.cxx:276. Definition at line 276 of file TQCommand.cxx. ◆ GetName(). const char * TQCommand::GetName ; (; ); const. overridevirtual . Returns the command name. ; Default name is ""ClassName::RedoName(args)"" If list of merged commands is not empty the name is ""ClassName::RedoName(args):cname1:cname2 ..."" ; Reimplemented from TCollection.; Definition at line 670 of file TQCommand.cxx. ◆ GetNRargs(). Int_t TQCommand::GetNRargs ; (; ); const. Returns a number of redo arguments. ; Definition at line 768 of file TQCommand.cxx. ◆ GetNUargs(). Int_t TQCommand::GetNUargs ; (; ); const. Returns a number of undo arguments. ; Definition at line 776 of file TQCommand.cxx. ◆ GetObject(). void * TQCommand::GetObject ; (; ); const. Returns an object for which undo redo actions are applied. ; Definition at line 784 of file TQCommand.cxx. ◆ GetRedo(). TQConnection * TQCommand::GetRedo ; (; ); const. inline . ",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:37787,Usability,undo,undo,37787,"ossible to know ahead what character will be deleted. To set arguments for undo action ( e.g. TGTextEdit::InsChar(char)), one needs to call TQCommand::SetUndoArgs(1, character) from inside of TGTextEdit::DelChar() method, i.e. TQCommand::GetCommand()->SetUndoArgs(1, somechar);; TQCommand::GetCommandstatic TQCommand * GetCommand()Return a command which is doing redo/undo action.Definition TQCommand.cxx:276. Definition at line 276 of file TQCommand.cxx. ◆ GetName(). const char * TQCommand::GetName ; (; ); const. overridevirtual . Returns the command name. ; Default name is ""ClassName::RedoName(args)"" If list of merged commands is not empty the name is ""ClassName::RedoName(args):cname1:cname2 ..."" ; Reimplemented from TCollection.; Definition at line 670 of file TQCommand.cxx. ◆ GetNRargs(). Int_t TQCommand::GetNRargs ; (; ); const. Returns a number of redo arguments. ; Definition at line 768 of file TQCommand.cxx. ◆ GetNUargs(). Int_t TQCommand::GetNUargs ; (; ); const. Returns a number of undo arguments. ; Definition at line 776 of file TQCommand.cxx. ◆ GetObject(). void * TQCommand::GetObject ; (; ); const. Returns an object for which undo redo actions are applied. ; Definition at line 784 of file TQCommand.cxx. ◆ GetRedo(). TQConnection * TQCommand::GetRedo ; (; ); const. inline . Definition at line 75 of file TQCommand.h. ◆ GetRedoArgs(). Long_t * TQCommand::GetRedoArgs ; (; ); const. Returns a pointer to array of redo arguments. ; Definition at line 752 of file TQCommand.cxx. ◆ GetRedoName(). const char * TQCommand::GetRedoName ; (; ); const. Returns the name of redo command. ; Definition at line 736 of file TQCommand.cxx. ◆ GetStatus(). Int_t TQCommand::GetStatus ; (; ); const. Returns a number of sequential undo or redo operations. ; Definition at line 792 of file TQCommand.cxx. ◆ GetTitle(). const char * TQCommand::GetTitle ; (; ); const. overridevirtual . Returns command description. ; By default, ""ClassName::RedoName(args)_ClassName::UndoName(args)"" ; Reimpl",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:37937,Usability,undo,undo,37937,"tUndoArgs(1, character) from inside of TGTextEdit::DelChar() method, i.e. TQCommand::GetCommand()->SetUndoArgs(1, somechar);; TQCommand::GetCommandstatic TQCommand * GetCommand()Return a command which is doing redo/undo action.Definition TQCommand.cxx:276. Definition at line 276 of file TQCommand.cxx. ◆ GetName(). const char * TQCommand::GetName ; (; ); const. overridevirtual . Returns the command name. ; Default name is ""ClassName::RedoName(args)"" If list of merged commands is not empty the name is ""ClassName::RedoName(args):cname1:cname2 ..."" ; Reimplemented from TCollection.; Definition at line 670 of file TQCommand.cxx. ◆ GetNRargs(). Int_t TQCommand::GetNRargs ; (; ); const. Returns a number of redo arguments. ; Definition at line 768 of file TQCommand.cxx. ◆ GetNUargs(). Int_t TQCommand::GetNUargs ; (; ); const. Returns a number of undo arguments. ; Definition at line 776 of file TQCommand.cxx. ◆ GetObject(). void * TQCommand::GetObject ; (; ); const. Returns an object for which undo redo actions are applied. ; Definition at line 784 of file TQCommand.cxx. ◆ GetRedo(). TQConnection * TQCommand::GetRedo ; (; ); const. inline . Definition at line 75 of file TQCommand.h. ◆ GetRedoArgs(). Long_t * TQCommand::GetRedoArgs ; (; ); const. Returns a pointer to array of redo arguments. ; Definition at line 752 of file TQCommand.cxx. ◆ GetRedoName(). const char * TQCommand::GetRedoName ; (; ); const. Returns the name of redo command. ; Definition at line 736 of file TQCommand.cxx. ◆ GetStatus(). Int_t TQCommand::GetStatus ; (; ); const. Returns a number of sequential undo or redo operations. ; Definition at line 792 of file TQCommand.cxx. ◆ GetTitle(). const char * TQCommand::GetTitle ; (; ); const. overridevirtual . Returns command description. ; By default, ""ClassName::RedoName(args)_ClassName::UndoName(args)"" ; Reimplemented from TObject.; Definition at line 713 of file TQCommand.cxx. ◆ GetUndo(). TQConnection * TQCommand::GetUndo ; (; ); const. inline . Definition at ",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:38526,Usability,undo,undo,38526," Definition at line 670 of file TQCommand.cxx. ◆ GetNRargs(). Int_t TQCommand::GetNRargs ; (; ); const. Returns a number of redo arguments. ; Definition at line 768 of file TQCommand.cxx. ◆ GetNUargs(). Int_t TQCommand::GetNUargs ; (; ); const. Returns a number of undo arguments. ; Definition at line 776 of file TQCommand.cxx. ◆ GetObject(). void * TQCommand::GetObject ; (; ); const. Returns an object for which undo redo actions are applied. ; Definition at line 784 of file TQCommand.cxx. ◆ GetRedo(). TQConnection * TQCommand::GetRedo ; (; ); const. inline . Definition at line 75 of file TQCommand.h. ◆ GetRedoArgs(). Long_t * TQCommand::GetRedoArgs ; (; ); const. Returns a pointer to array of redo arguments. ; Definition at line 752 of file TQCommand.cxx. ◆ GetRedoName(). const char * TQCommand::GetRedoName ; (; ); const. Returns the name of redo command. ; Definition at line 736 of file TQCommand.cxx. ◆ GetStatus(). Int_t TQCommand::GetStatus ; (; ); const. Returns a number of sequential undo or redo operations. ; Definition at line 792 of file TQCommand.cxx. ◆ GetTitle(). const char * TQCommand::GetTitle ; (; ); const. overridevirtual . Returns command description. ; By default, ""ClassName::RedoName(args)_ClassName::UndoName(args)"" ; Reimplemented from TObject.; Definition at line 713 of file TQCommand.cxx. ◆ GetUndo(). TQConnection * TQCommand::GetUndo ; (; ); const. inline . Definition at line 76 of file TQCommand.h. ◆ GetUndoArgs(). Long_t * TQCommand::GetUndoArgs ; (; ); const. Returns a pointer to array of undo arguments. ; Definition at line 760 of file TQCommand.cxx. ◆ GetUndoName(). const char * TQCommand::GetUndoName ; (; ); const. Returns the name of undo command. ; Definition at line 744 of file TQCommand.cxx. ◆ Init(). void TQCommand::Init ; (; const char * ; cl, . void * ; object, . const char * ; redo, . const char * ; undo . ). protectedvirtual . Common protected method used in several constructors. ; Definition at line 120 of file TQCommand.cxx. ◆ ",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:39061,Usability,undo,undo,39061,"::GetRedo ; (; ); const. inline . Definition at line 75 of file TQCommand.h. ◆ GetRedoArgs(). Long_t * TQCommand::GetRedoArgs ; (; ); const. Returns a pointer to array of redo arguments. ; Definition at line 752 of file TQCommand.cxx. ◆ GetRedoName(). const char * TQCommand::GetRedoName ; (; ); const. Returns the name of redo command. ; Definition at line 736 of file TQCommand.cxx. ◆ GetStatus(). Int_t TQCommand::GetStatus ; (; ); const. Returns a number of sequential undo or redo operations. ; Definition at line 792 of file TQCommand.cxx. ◆ GetTitle(). const char * TQCommand::GetTitle ; (; ); const. overridevirtual . Returns command description. ; By default, ""ClassName::RedoName(args)_ClassName::UndoName(args)"" ; Reimplemented from TObject.; Definition at line 713 of file TQCommand.cxx. ◆ GetUndo(). TQConnection * TQCommand::GetUndo ; (; ); const. inline . Definition at line 76 of file TQCommand.h. ◆ GetUndoArgs(). Long_t * TQCommand::GetUndoArgs ; (; ); const. Returns a pointer to array of undo arguments. ; Definition at line 760 of file TQCommand.cxx. ◆ GetUndoName(). const char * TQCommand::GetUndoName ; (; ); const. Returns the name of undo command. ; Definition at line 744 of file TQCommand.cxx. ◆ Init(). void TQCommand::Init ; (; const char * ; cl, . void * ; object, . const char * ; redo, . const char * ; undo . ). protectedvirtual . Common protected method used in several constructors. ; Definition at line 120 of file TQCommand.cxx. ◆ IsA(). TClass * TQCommand::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TList.; Reimplemented in TQUndoManager.; Definition at line 98 of file TQCommand.h. ◆ IsEqual(). Bool_t TQCommand::IsEqual ; (; const TObject * ; obj); const. overridevirtual . Equal comparison. ; The commands are equal if they are applied to the same object and have the same Redo/Undo actions; More complicated commands might want to override this function. ; Reimplemented from TObject.; Definitio",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:39213,Usability,undo,undo,39213,"er to array of redo arguments. ; Definition at line 752 of file TQCommand.cxx. ◆ GetRedoName(). const char * TQCommand::GetRedoName ; (; ); const. Returns the name of redo command. ; Definition at line 736 of file TQCommand.cxx. ◆ GetStatus(). Int_t TQCommand::GetStatus ; (; ); const. Returns a number of sequential undo or redo operations. ; Definition at line 792 of file TQCommand.cxx. ◆ GetTitle(). const char * TQCommand::GetTitle ; (; ); const. overridevirtual . Returns command description. ; By default, ""ClassName::RedoName(args)_ClassName::UndoName(args)"" ; Reimplemented from TObject.; Definition at line 713 of file TQCommand.cxx. ◆ GetUndo(). TQConnection * TQCommand::GetUndo ; (; ); const. inline . Definition at line 76 of file TQCommand.h. ◆ GetUndoArgs(). Long_t * TQCommand::GetUndoArgs ; (; ); const. Returns a pointer to array of undo arguments. ; Definition at line 760 of file TQCommand.cxx. ◆ GetUndoName(). const char * TQCommand::GetUndoName ; (; ); const. Returns the name of undo command. ; Definition at line 744 of file TQCommand.cxx. ◆ Init(). void TQCommand::Init ; (; const char * ; cl, . void * ; object, . const char * ; redo, . const char * ; undo . ). protectedvirtual . Common protected method used in several constructors. ; Definition at line 120 of file TQCommand.cxx. ◆ IsA(). TClass * TQCommand::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TList.; Reimplemented in TQUndoManager.; Definition at line 98 of file TQCommand.h. ◆ IsEqual(). Bool_t TQCommand::IsEqual ; (; const TObject * ; obj); const. overridevirtual . Equal comparison. ; The commands are equal if they are applied to the same object and have the same Redo/Undo actions; More complicated commands might want to override this function. ; Reimplemented from TObject.; Definition at line 418 of file TQCommand.cxx. ◆ IsExecuting(). Bool_t TQCommand::IsExecuting ; (; ); const. Returns kTRUE if command execution is in progress. ; Defi",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:39389,Usability,undo,undo,39389,"mand. ; Definition at line 736 of file TQCommand.cxx. ◆ GetStatus(). Int_t TQCommand::GetStatus ; (; ); const. Returns a number of sequential undo or redo operations. ; Definition at line 792 of file TQCommand.cxx. ◆ GetTitle(). const char * TQCommand::GetTitle ; (; ); const. overridevirtual . Returns command description. ; By default, ""ClassName::RedoName(args)_ClassName::UndoName(args)"" ; Reimplemented from TObject.; Definition at line 713 of file TQCommand.cxx. ◆ GetUndo(). TQConnection * TQCommand::GetUndo ; (; ); const. inline . Definition at line 76 of file TQCommand.h. ◆ GetUndoArgs(). Long_t * TQCommand::GetUndoArgs ; (; ); const. Returns a pointer to array of undo arguments. ; Definition at line 760 of file TQCommand.cxx. ◆ GetUndoName(). const char * TQCommand::GetUndoName ; (; ); const. Returns the name of undo command. ; Definition at line 744 of file TQCommand.cxx. ◆ Init(). void TQCommand::Init ; (; const char * ; cl, . void * ; object, . const char * ; redo, . const char * ; undo . ). protectedvirtual . Common protected method used in several constructors. ; Definition at line 120 of file TQCommand.cxx. ◆ IsA(). TClass * TQCommand::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TList.; Reimplemented in TQUndoManager.; Definition at line 98 of file TQCommand.h. ◆ IsEqual(). Bool_t TQCommand::IsEqual ; (; const TObject * ; obj); const. overridevirtual . Equal comparison. ; The commands are equal if they are applied to the same object and have the same Redo/Undo actions; More complicated commands might want to override this function. ; Reimplemented from TObject.; Definition at line 418 of file TQCommand.cxx. ◆ IsExecuting(). Bool_t TQCommand::IsExecuting ; (; ); const. Returns kTRUE if command execution is in progress. ; Definition at line 824 of file TQCommand.cxx. ◆ IsMacro(). Bool_t TQCommand::IsMacro ; (; ); const. Returns kTRUE if neither redo nor undo action specified. ; Definition at line 8",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:40339,Usability,undo,undo,40339,"void * ; object, . const char * ; redo, . const char * ; undo . ). protectedvirtual . Common protected method used in several constructors. ; Definition at line 120 of file TQCommand.cxx. ◆ IsA(). TClass * TQCommand::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TList.; Reimplemented in TQUndoManager.; Definition at line 98 of file TQCommand.h. ◆ IsEqual(). Bool_t TQCommand::IsEqual ; (; const TObject * ; obj); const. overridevirtual . Equal comparison. ; The commands are equal if they are applied to the same object and have the same Redo/Undo actions; More complicated commands might want to override this function. ; Reimplemented from TObject.; Definition at line 418 of file TQCommand.cxx. ◆ IsExecuting(). Bool_t TQCommand::IsExecuting ; (; ); const. Returns kTRUE if command execution is in progress. ; Definition at line 824 of file TQCommand.cxx. ◆ IsMacro(). Bool_t TQCommand::IsMacro ; (; ); const. Returns kTRUE if neither redo nor undo action specified. ; Definition at line 800 of file TQCommand.cxx. ◆ IsRedoing(). Bool_t TQCommand::IsRedoing ; (; ); const. Redo action is in progress. ; Definition at line 816 of file TQCommand.cxx. ◆ IsSetter(). Bool_t TQCommand::IsSetter ; (; ); const. virtual . Returns kTRUE is command if Redo is the same as Undo function and is the setter action. ; By default, all functions with names like ""SetXXX"" or ""setXXX"" considered as setters. Another type of setters are Move, Resize operations; More complicated commands might want to override this function. ; Definition at line 440 of file TQCommand.cxx. ◆ IsUndoing(). Bool_t TQCommand::IsUndoing ; (; ); const. Undo action is in progress. ; Definition at line 808 of file TQCommand.cxx. ◆ ls(). void TQCommand::ls ; (; Option_t * ; option = """"); const. overridevirtual . ls this command and merged commands ; Reimplemented from TCollection.; Reimplemented in TQUndoManager.; Definition at line 848 of file TQCommand.cxx. ◆ Merge() [1/2",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:41706,Usability,undo,undo,41706,"tter action. ; By default, all functions with names like ""SetXXX"" or ""setXXX"" considered as setters. Another type of setters are Move, Resize operations; More complicated commands might want to override this function. ; Definition at line 440 of file TQCommand.cxx. ◆ IsUndoing(). Bool_t TQCommand::IsUndoing ; (; ); const. Undo action is in progress. ; Definition at line 808 of file TQCommand.cxx. ◆ ls(). void TQCommand::ls ; (; Option_t * ; option = """"); const. overridevirtual . ls this command and merged commands ; Reimplemented from TCollection.; Reimplemented in TQUndoManager.; Definition at line 848 of file TQCommand.cxx. ◆ Merge() [1/2]. Long64_t TQCommand::Merge ; (; TCollection * ; collection, . TFileMergeInfo * ;  . ). virtual . Merge a collection of TQCommand. ; Definition at line 337 of file TQCommand.cxx. ◆ Merge() [2/2]. void TQCommand::Merge ; (; TQCommand * ; c). virtual . Add command to the list of merged commands. ; This make it possible to group complex actions together so an end user can undo and redo them with one command. Execution of TQUndoManager::Undo(), TQUndoManager::Redo() methods only invokes the top level command as a whole.; Merge method is analogous to logical join operation.; Note: Merge method invokes redo action. ; Definition at line 329 of file TQCommand.cxx. ◆ operator=(). TQCommand & TQCommand::operator= ; (; const TQCommand & ; ). private . ◆ PrintCollectionHeader(). void TQCommand::PrintCollectionHeader ; (; Option_t * ; option); const. overrideprotectedvirtual . Print collection header. ; Reimplemented from TCollection.; Definition at line 864 of file TQCommand.cxx. ◆ Redo(). void TQCommand::Redo ; (; Option_t * ; option = """"). virtual . Execute command and then merge commands. ; Reimplemented in TQUndoManager.; Definition at line 588 of file TQCommand.cxx. ◆ SetArgs(). void TQCommand::SetArgs ; (; Int_t ; narg, .  ; ... . ). virtual . Set do/redo and undo parameters. ; The format is SetArgs(number_of_params, redo_params, undo_",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:42608,Usability,undo,undo,42608,"t of merged commands. ; This make it possible to group complex actions together so an end user can undo and redo them with one command. Execution of TQUndoManager::Undo(), TQUndoManager::Redo() methods only invokes the top level command as a whole.; Merge method is analogous to logical join operation.; Note: Merge method invokes redo action. ; Definition at line 329 of file TQCommand.cxx. ◆ operator=(). TQCommand & TQCommand::operator= ; (; const TQCommand & ; ). private . ◆ PrintCollectionHeader(). void TQCommand::PrintCollectionHeader ; (; Option_t * ; option); const. overrideprotectedvirtual . Print collection header. ; Reimplemented from TCollection.; Definition at line 864 of file TQCommand.cxx. ◆ Redo(). void TQCommand::Redo ; (; Option_t * ; option = """"). virtual . Execute command and then merge commands. ; Reimplemented in TQUndoManager.; Definition at line 588 of file TQCommand.cxx. ◆ SetArgs(). void TQCommand::SetArgs ; (; Int_t ; narg, .  ; ... . ). virtual . Set do/redo and undo parameters. ; The format is SetArgs(number_of_params, redo_params, undo_params); Example: move_command->SetArgs(2, 100, 100, 200, 200);; 2 params, (100,100) - do/redo position, (200,200) - undo position ; Definition at line 465 of file TQCommand.cxx. ◆ SetName(). void TQCommand::SetName ; (; const char * ; name). virtual . Sets name of the command. ; Definition at line 832 of file TQCommand.cxx. ◆ SetRedoArgs(). void TQCommand::SetRedoArgs ; (; Int_t ; narg, .  ; ... . ). virtual . Set redo parameters. ; The format is SetRedoArgs(number_of_params, params); Example: move_command->SetRedoArgs(2, 100, 100);. Definition at line 508 of file TQCommand.cxx. ◆ SetTitle(). void TQCommand::SetTitle ; (; const char * ; title). virtual . Sets description of the command. ; Definition at line 840 of file TQCommand.cxx. ◆ SetUndoArgs(). void TQCommand::SetUndoArgs ; (; Int_t ; narg, .  ; ... . ). virtual . Set undo parameters. ; The format is SetUndoArgs(number_of_params, params); Example: move_",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:42802,Usability,undo,undo,42802,". Execution of TQUndoManager::Undo(), TQUndoManager::Redo() methods only invokes the top level command as a whole.; Merge method is analogous to logical join operation.; Note: Merge method invokes redo action. ; Definition at line 329 of file TQCommand.cxx. ◆ operator=(). TQCommand & TQCommand::operator= ; (; const TQCommand & ; ). private . ◆ PrintCollectionHeader(). void TQCommand::PrintCollectionHeader ; (; Option_t * ; option); const. overrideprotectedvirtual . Print collection header. ; Reimplemented from TCollection.; Definition at line 864 of file TQCommand.cxx. ◆ Redo(). void TQCommand::Redo ; (; Option_t * ; option = """"). virtual . Execute command and then merge commands. ; Reimplemented in TQUndoManager.; Definition at line 588 of file TQCommand.cxx. ◆ SetArgs(). void TQCommand::SetArgs ; (; Int_t ; narg, .  ; ... . ). virtual . Set do/redo and undo parameters. ; The format is SetArgs(number_of_params, redo_params, undo_params); Example: move_command->SetArgs(2, 100, 100, 200, 200);; 2 params, (100,100) - do/redo position, (200,200) - undo position ; Definition at line 465 of file TQCommand.cxx. ◆ SetName(). void TQCommand::SetName ; (; const char * ; name). virtual . Sets name of the command. ; Definition at line 832 of file TQCommand.cxx. ◆ SetRedoArgs(). void TQCommand::SetRedoArgs ; (; Int_t ; narg, .  ; ... . ). virtual . Set redo parameters. ; The format is SetRedoArgs(number_of_params, params); Example: move_command->SetRedoArgs(2, 100, 100);. Definition at line 508 of file TQCommand.cxx. ◆ SetTitle(). void TQCommand::SetTitle ; (; const char * ; title). virtual . Sets description of the command. ; Definition at line 840 of file TQCommand.cxx. ◆ SetUndoArgs(). void TQCommand::SetUndoArgs ; (; Int_t ; narg, .  ; ... . ). virtual . Set undo parameters. ; The format is SetUndoArgs(number_of_params, params); Example: move_command->SetUndoArgs(2, 200, 200);. Definition at line 542 of file TQCommand.cxx. ◆ Streamer(). void TQCommand::Streamer ; (; TBuffer ",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQCommand.html:43522,Usability,undo,undo,43522,"id TQCommand::SetArgs ; (; Int_t ; narg, .  ; ... . ). virtual . Set do/redo and undo parameters. ; The format is SetArgs(number_of_params, redo_params, undo_params); Example: move_command->SetArgs(2, 100, 100, 200, 200);; 2 params, (100,100) - do/redo position, (200,200) - undo position ; Definition at line 465 of file TQCommand.cxx. ◆ SetName(). void TQCommand::SetName ; (; const char * ; name). virtual . Sets name of the command. ; Definition at line 832 of file TQCommand.cxx. ◆ SetRedoArgs(). void TQCommand::SetRedoArgs ; (; Int_t ; narg, .  ; ... . ). virtual . Set redo parameters. ; The format is SetRedoArgs(number_of_params, params); Example: move_command->SetRedoArgs(2, 100, 100);. Definition at line 508 of file TQCommand.cxx. ◆ SetTitle(). void TQCommand::SetTitle ; (; const char * ; title). virtual . Sets description of the command. ; Definition at line 840 of file TQCommand.cxx. ◆ SetUndoArgs(). void TQCommand::SetUndoArgs ; (; Int_t ; narg, .  ; ... . ). virtual . Set undo parameters. ; The format is SetUndoArgs(number_of_params, params); Example: move_command->SetUndoArgs(2, 200, 200);. Definition at line 542 of file TQCommand.cxx. ◆ Streamer(). void TQCommand::Streamer ; (; TBuffer & ; b). overridevirtual . Stream all objects in the collection to or from the I/O buffer. ; Reimplemented from TList.; Reimplemented in TQUndoManager. ◆ StreamerNVirtual(). void TQCommand::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 98 of file TQCommand.h. ◆ Undo(). void TQCommand::Undo ; (; Option_t * ; option = """"). virtual . Un-execute all merged commands and the command. ; Merged commands are executed in reverse order. ; Reimplemented in TQUndoManager.; Definition at line 626 of file TQCommand.cxx. Friends And Related Symbol Documentation. ◆ TQUndoManager. friend class TQUndoManager. friend . Definition at line 29 of file TQCommand.h. Member Data Documentation. ◆ fName. TString TQCommand::fName. protected . Definition at lin",MatchSource.WIKI,doc/master/classTQCommand.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQCommand.html
https://root.cern/doc/master/classTQConnection.html:11503,Availability,error,error,11503,"ar *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; v",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:11592,Availability,error,error,11592,"leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTi",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:11747,Availability,error,error,11747," whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is kn",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:12044,Availability,error,error,12044,"bj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname""",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:15521,Availability,error,error,15521," operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Co",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:11509,Integrability,message,message,11509,"ar *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; v",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:12050,Integrability,message,message,12050,"bj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname""",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:12911,Integrability,message,message,12911,"ecute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *a",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:15527,Integrability,message,message,15527," operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Co",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:15900,Integrability,message,message,15900," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const char *signal, const T &arg);  Act",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:1963,Modifiability,variab,variable,1963,"t char *method_name);  TQConnection ctor. ;  ; virtual ~TQConnection ();  TQConnection dtor. ;  ; void Destroyed () override;  Signal Destroyed tells that connection is destroyed. ;  ; void ExecuteMethod ();  Apply slot-method to the fReceiver object without arguments. ;  ; void ExecuteMethod (const char *params);  Apply slot-method to the fReceiver object and with string parameter. ;  ; template<typename... T> ; void ExecuteMethod (const T &... params);  ; void ExecuteMethod (Double_t param);  Apply slot-method to the fReceiver object with single argument value. ;  ; void ExecuteMethod (Int_t nargs, va_list va)=delete;  ; template<typename... T> ; void ExecuteMethod (Int_t, const T &... params);  ; void ExecuteMethod (Long64_t param);  Apply slot-method to the fReceiver object with single argument value. ;  ; void ExecuteMethod (Long_t param);  Apply slot-method to the fReceiver object with single argument value. ;  ; void ExecuteMethod (Longptr_t *params, Int_t nparam=-1);  Apply slot-method to the fReceiver object with variable number of argument values. ;  ; const char * GetClassName () const;  ; const char * GetName () const override;  Returns name of connection (aka name of slot) ;  ; void * GetReceiver () const;  ; TClass * IsA () const override;  ; void ls (Option_t *option="""") const override;  List TQConnection full method name and list all signals connected to this connection. ;  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TVirtualQConnection; void SetArgs (const Longptr_t *argArray, Int_t nargs=-1);  Sets an array of arguments passed as a pointer type and size. ;  ; template<typename... T> ; void SetArgs (const T &... args);  Unpacks the template parameter type and sets arguments of integral and array (scalar) type. ;  ;  Public Member Functions inherited from TList;  TList ();  ; The argu",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:2536,Modifiability,inherit,inherited,2536,"ypename... T> ; void ExecuteMethod (Int_t, const T &... params);  ; void ExecuteMethod (Long64_t param);  Apply slot-method to the fReceiver object with single argument value. ;  ; void ExecuteMethod (Long_t param);  Apply slot-method to the fReceiver object with single argument value. ;  ; void ExecuteMethod (Longptr_t *params, Int_t nparam=-1);  Apply slot-method to the fReceiver object with variable number of argument values. ;  ; const char * GetClassName () const;  ; const char * GetName () const override;  Returns name of connection (aka name of slot) ;  ; void * GetReceiver () const;  ; TClass * IsA () const override;  ; void ls (Option_t *option="""") const override;  List TQConnection full method name and list all signals connected to this connection. ;  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TVirtualQConnection; void SetArgs (const Longptr_t *argArray, Int_t nargs=-1);  Sets an array of arguments passed as a pointer type and size. ;  ; template<typename... T> ; void SetArgs (const T &... args);  Unpacks the template parameter type and sets arguments of integral and array (scalar) type. ;  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void Add (TObject *obj) override;  ; virtual void Add (TObject *obj, Option_t *opt);  ; void AddAfter (const TObject *after, TObject *obj) override;  Insert object after object after in the list. ;  ; virtual void AddAfter (TObjLink *after, TObject *obj);  Insert object after the specified ObjLink object. ;  ; void AddAt (TObject *obj, Int_t idx) override;  Insert object at position idx in the list. ;  ; void AddBefore (const TObject *before, TObject *obj) override;  Insert object before object",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:2881,Modifiability,inherit,inherited,2881,"  Apply slot-method to the fReceiver object with variable number of argument values. ;  ; const char * GetClassName () const;  ; const char * GetName () const override;  Returns name of connection (aka name of slot) ;  ; void * GetReceiver () const;  ; TClass * IsA () const override;  ; void ls (Option_t *option="""") const override;  List TQConnection full method name and list all signals connected to this connection. ;  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TVirtualQConnection; void SetArgs (const Longptr_t *argArray, Int_t nargs=-1);  Sets an array of arguments passed as a pointer type and size. ;  ; template<typename... T> ; void SetArgs (const T &... args);  Unpacks the template parameter type and sets arguments of integral and array (scalar) type. ;  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void Add (TObject *obj) override;  ; virtual void Add (TObject *obj, Option_t *opt);  ; void AddAfter (const TObject *after, TObject *obj) override;  Insert object after object after in the list. ;  ; virtual void AddAfter (TObjLink *after, TObject *obj);  Insert object after the specified ObjLink object. ;  ; void AddAt (TObject *obj, Int_t idx) override;  Insert object at position idx in the list. ;  ; void AddBefore (const TObject *before, TObject *obj) override;  Insert object before object before in the list. ;  ; virtual void AddBefore (TObjLink *before, TObject *obj);  Insert object before the specified ObjLink object. ;  ; void AddFirst (TObject *obj) override;  Add object at the beginning of the list. ;  ; virtual void AddFirst (TObject *obj, Option_t *opt);  Add object at the beginning of the list and also store option. ;  ; ",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:6028,Modifiability,inherit,inherited,6028,erride;  Return address of pointer to obj. ;  ; Bool_t IsAscending ();  ; TObject * Last () const override;  Return the last object in the list. Returns 0 when list is empty. ;  ; virtual TObjLink * LastLink () const;  ; TIterator * MakeIterator (Bool_t dir=kIterForward) const override;  Return a list iterator. ;  ; void RecursiveRemove (TObject *obj) override;  Remove object from this collection and recursively remove the object from all other objects (and collections). ;  ; TObject * Remove (const TObjLinkPtr_t &lnk);  ; TObject * Remove (TObject *obj) override;  Remove object from the list. ;  ; virtual TObject * Remove (TObjLink *lnk);  Remove object link (and therefore the object it contains) from the list. ;  ; void RemoveLast () override;  Remove the last object of the list. ;  ; virtual void Sort (Bool_t order=kSortAscending);  Sort linked list. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSeqCollection; virtual ~TSeqCollection ();  ; void Add (TObject *obj) override;  ; virtual Int_t GetLast () const;  Returns index of last object in collection. ;  ; virtual Int_t IndexOf (const TObject *obj) const;  Return index of object in collection. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual TObject * RemoveAt (Int_t idx);  ; virtual void RemoveBefore (TObject *before);  ; virtual void RemoveFirst ();  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnSort ();  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this ,MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:6899,Modifiability,inherit,inherited,6899," Sort (Bool_t order=kSortAscending);  Sort linked list. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSeqCollection; virtual ~TSeqCollection ();  ; void Add (TObject *obj) override;  ; virtual Int_t GetLast () const;  Returns index of last object in collection. ;  ; virtual Int_t IndexOf (const TObject *obj) const;  Return index of object in collection. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual TObject * RemoveAt (Int_t idx);  ; virtual void RemoveBefore (TObject *before);  ; virtual void RemoveFirst ();  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnSort ();  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this collection. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIte",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:7245,Modifiability,inherit,inherit,7245,"tual Int_t IndexOf (const TObject *obj) const;  Return index of object in collection. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual TObject * RemoveAt (Int_t idx);  ; virtual void RemoveBefore (TObject *before);  ; virtual void RemoveFirst ();  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnSort ();  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this collection. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIter end () const;  ; virtual Int_t GetEntries () const;  ; virtual Int_t GetSize () const;  Return the capacity of the collection, i.e. ;  ; virtual Int_t GrowBy (Int_t delta) const;  Increase the collection's capacity by delta slots. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsArgNull (const ",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:10303,Modifiability,inherit,inherited,10303," the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool UseRWLock (Bool_t enable=true);  Set this collection to use a RW lock upon access, making it thread safe. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *optio",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:11208,Modifiability,inherit,inheritance,11208," bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () con",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:13009,Modifiability,inherit,inherits,13009,"const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method to declare a ",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:13126,Modifiability,inherit,inherits,13126,"n () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method to declare a method obsolete. ;  ; void operator delete (void *ptr);  Operator delete. ;  ; void operator delete (void *ptr, void",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:15939,Modifiability,inherit,inherited,15939,"ual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const char *signal, const T &arg);  Activate signal with single parameter. ;  ; template<typename... ",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:18071,Modifiability,inherit,inherited,18071,"ions () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do th",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:18280,Modifiability,inherit,inherited,18280,"ions () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do th",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:18975,Modifiability,inherit,inherited,18975,"tic Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions ",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:19526,Modifiability,inherit,inherited,19526,"nt_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t C",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:20044,Modifiability,inherit,inherited,20044,"constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullpt",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:22385,Modifiability,inherit,inherited,22385,"; CallFunc_t * LockSlot () const;  Lock the interpreter and mark the slot as executing. ;  ; TQConnection & operator= (const TQConnection &)=delete;  ; virtual void PrintCollectionHeader (Option_t *option) const override;  Print TQConnection full method name and print all signals connected to this connection. ;  ; void SendSignal () override;  ; void SetArg (const char *param) override;  ; void SetArg (const Longptr_t *params, Int_t nparam=-1) override;  ; void SetArg (Double_t param) override;  ; void SetArg (Float_t param) override;  ; void SetArg (Long64_t param) override;  ; void SetArg (Long_t param) override;  ; void SetArg (ULong64_t param) override;  ; void SetArg (ULong_t param) override;  ; template<typename T > ; void SetArgImpl (T arg);  ; void UnLockSlot (TQSlot *) const;  Unlock the interpreter and mark the slot as no longer executing. ;  ;  Protected Member Functions inherited from TVirtualQConnection; template<class T , class = typename std::enable_if<std::is_integral<T>::value>::type> ; void SetArg (const T &val);  ; void SetArg (const void *ptr);  ; void SetArgsImpl ();  ; template<typename T , typename... Ts> ; void SetArgsImpl (const T &arg, const Ts &... tail);  ;  Protected Member Functions inherited from TList; TObjLinkPtr_t * DoSort (TObjLinkPtr_t *head, Int_t n);  Sort linked list. ;  ; TObjLink * FindLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:22722,Modifiability,inherit,inherited,22722,"nd print all signals connected to this connection. ;  ; void SendSignal () override;  ; void SetArg (const char *param) override;  ; void SetArg (const Longptr_t *params, Int_t nparam=-1) override;  ; void SetArg (Double_t param) override;  ; void SetArg (Float_t param) override;  ; void SetArg (Long64_t param) override;  ; void SetArg (Long_t param) override;  ; void SetArg (ULong64_t param) override;  ; void SetArg (ULong_t param) override;  ; template<typename T > ; void SetArgImpl (T arg);  ; void UnLockSlot (TQSlot *) const;  Unlock the interpreter and mark the slot as no longer executing. ;  ;  Protected Member Functions inherited from TVirtualQConnection; template<class T , class = typename std::enable_if<std::is_integral<T>::value>::type> ; void SetArg (const T &val);  ; void SetArg (const void *ptr);  ; void SetArgsImpl ();  ; template<typename T , typename... Ts> ; void SetArgsImpl (const T &arg, const Ts &... tail);  ;  Protected Member Functions inherited from TList; TObjLinkPtr_t * DoSort (TObjLinkPtr_t *head, Int_t n);  Sort linked list. ;  ; TObjLink * FindLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjLink that also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from TSeqCollection;  TSeqColl",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:23710,Modifiability,inherit,inherited,23710,"dLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjLink that also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Protected Attributes; TString fClassName;  ; void * fReceiver = nullptr;  ; TQSlot * fSlot = nullptr;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to la",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:23820,Modifiability,inherit,inherited,23820,"dLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjLink that also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Protected Attributes; TString fClassName;  ; void * fReceiver = nullptr;  ; TQSlot * fSlot = nullptr;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to la",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:24232,Modifiability,inherit,inherited,24232,"Ptr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjLink that also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Protected Attributes; TString fClassName;  ; void * fReceiver = nullptr;  ; TQSlot * fSlot = nullptr;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connec",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:24443,Modifiability,inherit,inherited,24443,"TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjLink that also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Protected Attributes; TString fClassName;  ; void * fReceiver = nullptr;  ; TQSlot * fSlot = nullptr;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Additional Inherited Members;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kI",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:24680,Modifiability,inherit,inherited,24680,";  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Protected Attributes; TString fClassName;  ; void * fReceiver = nullptr;  ; TQSlot * fSlot = nullptr;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Additional Inherited Members;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:24978,Modifiability,inherit,inherited,24978,";  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Protected Attributes; TString fClassName;  ; void * fReceiver = nullptr;  ; TQSlot * fSlot = nullptr;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Additional Inherited Members;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:25050,Modifiability,inherit,inherited,25050,";  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Protected Attributes; TString fClassName;  ; void * fReceiver = nullptr;  ; TQSlot * fSlot = nullptr;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Additional Inherited Members;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:25134,Modifiability,inherit,inherited,25134,";  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Protected Attributes; TString fClassName;  ; void * fReceiver = nullptr;  ; TQSlot * fSlot = nullptr;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Additional Inherited Members;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:25362,Modifiability,inherit,inherited,25362,"t char * GetSenderClassName () const;  . Protected Attributes; TString fClassName;  ; void * fReceiver = nullptr;  ; TQSlot * fSlot = nullptr;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Additional Inherited Members;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1UL",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:25431,Modifiability,inherit,inherited,25431,"t char * GetSenderClassName () const;  . Protected Attributes; TString fClassName;  ; void * fReceiver = nullptr;  ; TQSlot * fSlot = nullptr;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Additional Inherited Members;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1UL",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:25538,Modifiability,inherit,inherited,25538,"t char * GetSenderClassName () const;  . Protected Attributes; TString fClassName;  ; void * fReceiver = nullptr;  ; TQSlot * fSlot = nullptr;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Additional Inherited Members;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1UL",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:26179,Modifiability,inherit,inherited,26179,"tCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSigna",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:26328,Modifiability,inherit,inherited,26328,"tCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSigna",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:26461,Modifiability,inherit,inherited,26461,"tCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSigna",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:26567,Modifiability,inherit,inherited,26567,"tCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSigna",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:27423,Modifiability,inherit,inherited,27423,"inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TQConnection.h>. Inheritance diagram for TQConnection:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQConnection() [1/4]. TQConnection::TQConnection ; (; ). inline . Definition at line 82 of file TQConnection.h. ◆ TQConnection() [2/4]. TQConnection::TQConnection ; (; TClass * ; cl, . void * ; receiver, . const char * ; method_name . ). TQConnection ctor. ; cl != 0 - connection to object == receiver of class == cl and method == method_name cl == 0 - connection to function with name == method_name ; Definition at line 454 of file TQConnection.cxx. ◆ TQConnection() [3/4]. TQConnection::TQConnection ; (; const char * ; class_name, . void * ; receiver, . const char * ; funcname . ). TQConnection ctor. ; Creates connection to method of class specified by name, it could be interpreted class and with method == funcname",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:31624,Modifiability,variab,variable,31624,"eMethod ; (; Double_t ; param). Apply slot-method to the fReceiver object with single argument value. ; Definition at line 600 of file TQConnection.cxx. ◆ ExecuteMethod() [5/9]. void TQConnection::ExecuteMethod ; (; Int_t ; nargs, . va_list ; va . ). delete . ◆ ExecuteMethod() [6/9]. template<typename... T> . void TQConnection::ExecuteMethod ; (; Int_t ; , . const T &... ; params . ). inline . Definition at line 102 of file TQConnection.h. ◆ ExecuteMethod() [7/9]. void TQConnection::ExecuteMethod ; (; Long64_t ; param). Apply slot-method to the fReceiver object with single argument value. ; Definition at line 586 of file TQConnection.cxx. ◆ ExecuteMethod() [8/9]. void TQConnection::ExecuteMethod ; (; Long_t ; param). Apply slot-method to the fReceiver object with single argument value. ; Definition at line 572 of file TQConnection.cxx. ◆ ExecuteMethod() [9/9]. void TQConnection::ExecuteMethod ; (; Longptr_t * ; params, . Int_t ; nparam = -1 . ). Apply slot-method to the fReceiver object with variable number of argument values. ; Definition at line 614 of file TQConnection.cxx. ◆ GetClassName(). const char * TQConnection::GetClassName ; (; ); const. inline . Definition at line 91 of file TQConnection.h. ◆ GetName(). const char * TQConnection::GetName ; (; ); const. overridevirtual . Returns name of connection (aka name of slot) ; Reimplemented from TCollection.; Definition at line 521 of file TQConnection.cxx. ◆ GetReceiver(). void * TQConnection::GetReceiver ; (; ); const. inline . Definition at line 90 of file TQConnection.h. ◆ GetSlotAddress(). void * TQConnection::GetSlotAddress ; (; ); const. protected . Return the object address to be passed to the function. ; Definition at line 649 of file TQConnection.cxx. ◆ GetSlotCallFunc(). CallFunc_t * TQConnection::GetSlotCallFunc ; (; ); const. overrideprotectedvirtual . Implements TVirtualQConnection.; Definition at line 671 of file TQConnection.cxx. ◆ IsA(). TClass * TQConnection::IsA ; (; ); const. inlineoverridevirtu",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:24036,Performance,perform,perform,24036,"dLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjLink that also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Protected Attributes; TString fClassName;  ; void * fReceiver = nullptr;  ; TQSlot * fSlot = nullptr;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to la",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:24722,Performance,cache,cache,24722,";  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Protected Attributes; TString fClassName;  ; void * fReceiver = nullptr;  ; TQSlot * fSlot = nullptr;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Additional Inherited Members;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:10009,Safety,safe,safe,10009,"d Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the wildcard. ;  ; virtual void Print (Option_t *option, Int_t recurse) const;  Print the collection header and its elements. ;  ; virtual void Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool UseRWLock (Bool_t enable=true);  Set this collection to use a RW lock upon access, making it thread safe. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () co",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:8156,Security,hash,hash,8156," collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIter end () const;  ; virtual Int_t GetEntries () const;  ; virtual Int_t GetSize () const;  Return the capacity of the collection, i.e. ;  ; virtual Int_t GrowBy (Int_t delta) const;  Increase the collection's capacity by delta slots. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsArgNull (const char *where, const TObject *obj) const;  Returns true if object is a null pointer. ;  ; virtual Bool_t IsEmpty () const;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; Bool_t IsOwner () const;  ; Bool_t IsSortable () const override;  ; R__ALWAYS_INLINE Bool_t IsUsingRWLock () const;  ; virtual TIterator * MakeReverseIterator () const;  ; Bool_t Notify () override;  'Notify' all objects in this collection. ;  ; TObject * operator() (const char *name) const;  Find an object in this collection by name. ;  ; void Paint (Option_t *option="""") override;  Paint all objects in this collection. ;  ; virtual void Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the wildcard. ;  ; virtual void Print (Option_t *option, Int_t recurse) const;  Print the collecti",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:9644,Security,access,accessible,9644," MakeReverseIterator () const;  ; Bool_t Notify () override;  'Notify' all objects in this collection. ;  ; TObject * operator() (const char *name) const;  Find an object in this collection by name. ;  ; void Paint (Option_t *option="""") override;  Paint all objects in this collection. ;  ; virtual void Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the wildcard. ;  ; virtual void Print (Option_t *option, Int_t recurse) const;  Print the collection header and its elements. ;  ; virtual void Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool UseRWLock (Bool_t enable=true);  Set this collection to use a RW lock upon access, making it thread safe. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract.",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:9984,Security,access,access,9984,"d Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the wildcard. ;  ; virtual void Print (Option_t *option, Int_t recurse) const;  Print the collection header and its elements. ;  ; virtual void Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool UseRWLock (Bool_t enable=true);  Set this collection to use a RW lock upon access, making it thread safe. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () co",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnection.html:19390,Security,access,accessible,19390,"s_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Cla",MatchSource.WIKI,doc/master/classTQConnection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnection.html
https://root.cern/doc/master/classTQConnectionList.html:9633,Availability,error,error,9633,"ar *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; v",MatchSource.WIKI,doc/master/classTQConnectionList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnectionList.html
https://root.cern/doc/master/classTQConnectionList.html:9722,Availability,error,error,9722,"leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTi",MatchSource.WIKI,doc/master/classTQConnectionList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnectionList.html
https://root.cern/doc/master/classTQConnectionList.html:9877,Availability,error,error,9877," whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is kn",MatchSource.WIKI,doc/master/classTQConnectionList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnectionList.html
https://root.cern/doc/master/classTQConnectionList.html:10174,Availability,error,error,10174,"bj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname""",MatchSource.WIKI,doc/master/classTQConnectionList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnectionList.html
https://root.cern/doc/master/classTQConnectionList.html:13651,Availability,error,error,13651," operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Private Attributes; Int_t fSignalArgs;  . Additional Inherited Members;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ",MatchSource.WIKI,doc/master/classTQConnectionList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnectionList.html
https://root.cern/doc/master/classTQConnectionList.html:9639,Integrability,message,message,9639,"ar *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; v",MatchSource.WIKI,doc/master/classTQConnectionList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnectionList.html
https://root.cern/doc/master/classTQConnectionList.html:10180,Integrability,message,message,10180,"bj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname""",MatchSource.WIKI,doc/master/classTQConnectionList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnectionList.html
https://root.cern/doc/master/classTQConnectionList.html:11041,Integrability,message,message,11041,"ecute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *a",MatchSource.WIKI,doc/master/classTQConnectionList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnectionList.html
https://root.cern/doc/master/classTQConnectionList.html:13657,Integrability,message,message,13657," operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Private Attributes; Int_t fSignalArgs;  . Additional Inherited Members;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ",MatchSource.WIKI,doc/master/classTQConnectionList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnectionList.html
https://root.cern/doc/master/classTQConnectionList.html:14030,Integrability,message,message,14030," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Private Attributes; Int_t fSignalArgs;  . Additional Inherited Members;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TList; static TClass * Class ();  ; static co",MatchSource.WIKI,doc/master/classTQConnectionList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnectionList.html
https://root.cern/doc/master/classTQConnectionList.html:792,Modifiability,inherit,inherited,792,". ROOT: TQConnectionList Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TQConnectionList Class Reference. ; TQConnectionList is the named list of connections, see also TQConnection class. ; Definition at line 309 of file TQObject.cxx. Public Member Functions;  TQConnectionList (const char *name, Int_t nsigargs);  ; virtual ~TQConnectionList ();  Destructor. ;  ; Bool_t Disconnect (void *receiver=nullptr, const char *slot_name=nullptr);  Remove connection from the list. ;  ; Int_t GetNargs () const;  ; void ls (Option_t *option="""") const override;  List signal name and list all connections in this signal list. ;  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void Add (TObject *obj) override;  ; virtual void Add (TObject *obj, Option_t *opt);  ; void AddAfter (const TObject *after, TObject *obj) override;  Insert object after object after in the list. ;  ; virtual void AddAfter (TObjLink *after, TObject *obj);  Insert object after the specified ObjLink object. ;  ; void AddAt (TObject *obj, Int_t idx) override;  Insert object at position idx in the list. ;  ; void AddBefore (const TObject *before, TObject *obj) override;  Insert object before object before in the list. ;  ; virtual void AddBefore (TObjLink *before, TObject *obj);  Insert object before the specified ObjLink object. ;  ; void AddFirst (TObject *obj) override;  Add object at the beginning of the list. ;  ; virtual void AddFirst (TObject *obj, Option_t *opt);  Add object at the beginning of the list and also store option. ;  ; void AddLast (TObject *obj) override;  Add object at the end of the list. ;  ; virtual void AddLast (TObject *obj, Option_t *opt);  Add object at the end of the list and also s",MatchSource.WIKI,doc/master/classTQConnectionList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnectionList.html
https://root.cern/doc/master/classTQConnectionList.html:4080,Modifiability,inherit,inherited,4080,;  Return the last object in the list. Returns 0 when list is empty. ;  ; virtual TObjLink * LastLink () const;  ; TIterator * MakeIterator (Bool_t dir=kIterForward) const override;  Return a list iterator. ;  ; void RecursiveRemove (TObject *obj) override;  Remove object from this collection and recursively remove the object from all other objects (and collections). ;  ; TObject * Remove (const TObjLinkPtr_t &lnk);  ; TObject * Remove (TObject *obj) override;  Remove object from the list. ;  ; virtual TObject * Remove (TObjLink *lnk);  Remove object link (and therefore the object it contains) from the list. ;  ; void RemoveLast () override;  Remove the last object of the list. ;  ; virtual void Sort (Bool_t order=kSortAscending);  Sort linked list. ;  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSeqCollection; virtual ~TSeqCollection ();  ; void Add (TObject *obj) override;  ; virtual Int_t GetLast () const;  Returns index of last object in collection. ;  ; virtual Int_t IndexOf (const TObject *obj) const;  Return index of object in collection. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual TObject * RemoveAt (Int_t idx);  ; virtual void RemoveBefore (TObject *before);  ; virtual void RemoveFirst ();  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnSort ();  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this ,MatchSource.WIKI,doc/master/classTQConnectionList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnectionList.html
https://root.cern/doc/master/classTQConnectionList.html:4951,Modifiability,inherit,inherited,4951,"ll objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSeqCollection; virtual ~TSeqCollection ();  ; void Add (TObject *obj) override;  ; virtual Int_t GetLast () const;  Returns index of last object in collection. ;  ; virtual Int_t IndexOf (const TObject *obj) const;  Return index of object in collection. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual TObject * RemoveAt (Int_t idx);  ; virtual void RemoveBefore (TObject *before);  ; virtual void RemoveFirst ();  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnSort ();  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this collection. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIte",MatchSource.WIKI,doc/master/classTQConnectionList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnectionList.html
https://root.cern/doc/master/classTQConnectionList.html:5297,Modifiability,inherit,inherit,5297,"tual Int_t IndexOf (const TObject *obj) const;  Return index of object in collection. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual TObject * RemoveAt (Int_t idx);  ; virtual void RemoveBefore (TObject *before);  ; virtual void RemoveFirst ();  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnSort ();  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this collection. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIter end () const;  ; virtual Int_t GetEntries () const;  ; const char * GetName () const override;  Return name of this collection. ;  ; virtual Int_t GetSize () const;  Return the capacity of the collection, i.e. ;  ; virtual Int_t GrowBy (Int_t delta) const;  Increase the collection's capacity by delta slots. ;  ; ULong_t Hash () con",MatchSource.WIKI,doc/master/classTQConnectionList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnectionList.html
https://root.cern/doc/master/classTQConnectionList.html:8433,Modifiability,inherit,inherited,8433," the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool UseRWLock (Bool_t enable=true);  Set this collection to use a RW lock upon access, making it thread safe. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *optio",MatchSource.WIKI,doc/master/classTQConnectionList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnectionList.html
https://root.cern/doc/master/classTQConnectionList.html:9338,Modifiability,inherit,inheritance,9338," bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () con",MatchSource.WIKI,doc/master/classTQConnectionList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnectionList.html
https://root.cern/doc/master/classTQConnectionList.html:11139,Modifiability,inherit,inherits,11139,"const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method to declare a ",MatchSource.WIKI,doc/master/classTQConnectionList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnectionList.html
https://root.cern/doc/master/classTQConnectionList.html:11256,Modifiability,inherit,inherits,11256,"n () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method to declare a method obsolete. ;  ; void operator delete (void *ptr);  Operator delete. ;  ; void operator delete (void *ptr, void",MatchSource.WIKI,doc/master/classTQConnectionList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnectionList.html
https://root.cern/doc/master/classTQConnectionList.html:14130,Modifiability,inherit,inherited,14130,"  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Private Attributes; Int_t fSignalArgs;  . Additional Inherited Members;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static const",MatchSource.WIKI,doc/master/classTQConnectionList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnectionList.html
https://root.cern/doc/master/classTQConnectionList.html:14199,Modifiability,inherit,inherited,14199,"  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Private Attributes; Int_t fSignalArgs;  . Additional Inherited Members;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static const",MatchSource.WIKI,doc/master/classTQConnectionList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnectionList.html
https://root.cern/doc/master/classTQConnectionList.html:14306,Modifiability,inherit,inherited,14306,"  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Private Attributes; Int_t fSignalArgs;  . Additional Inherited Members;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static const",MatchSource.WIKI,doc/master/classTQConnectionList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnectionList.html
https://root.cern/doc/master/classTQConnectionList.html:14962,Modifiability,inherit,inherited,14962,"  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of ",MatchSource.WIKI,doc/master/classTQConnectionList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnectionList.html
https://root.cern/doc/master/classTQConnectionList.html:15171,Modifiability,inherit,inherited,15171,"  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of ",MatchSource.WIKI,doc/master/classTQConnectionList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnectionList.html
https://root.cern/doc/master/classTQConnectionList.html:15866,Modifiability,inherit,inherited,15866,"tic Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from ",MatchSource.WIKI,doc/master/classTQConnectionList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnectionList.html
https://root.cern/doc/master/classTQConnectionList.html:16417,Modifiability,inherit,inherited,16417,"nt_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TList; TObjLinkPtr_t * DoSort (TObjLinkPtr_t *head, Int_t n);  Sort linked list. ;  ; TObjLink * FindLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ; ",MatchSource.WIKI,doc/master/classTQConnectionList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnectionList.html
https://root.cern/doc/master/classTQConnectionList.html:16920,Modifiability,inherit,inherited,16920,"t (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TList; TObjLinkPtr_t * DoSort (TObjLinkPtr_t *head, Int_t n);  Sort linked list. ;  ; TObjLink * FindLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjL",MatchSource.WIKI,doc/master/classTQConnectionList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnectionList.html
https://root.cern/doc/master/classTQConnectionList.html:17069,Modifiability,inherit,inherited,17069,"t (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TList; TObjLinkPtr_t * DoSort (TObjLinkPtr_t *head, Int_t n);  Sort linked list. ;  ; TObjLink * FindLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjL",MatchSource.WIKI,doc/master/classTQConnectionList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnectionList.html
https://root.cern/doc/master/classTQConnectionList.html:17202,Modifiability,inherit,inherited,17202,"t (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TList; TObjLinkPtr_t * DoSort (TObjLinkPtr_t *head, Int_t n);  Sort linked list. ;  ; TObjLink * FindLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjL",MatchSource.WIKI,doc/master/classTQConnectionList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnectionList.html
https://root.cern/doc/master/classTQConnectionList.html:17301,Modifiability,inherit,inherited,17301,"t (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TList; TObjLinkPtr_t * DoSort (TObjLinkPtr_t *head, Int_t n);  Sort linked list. ;  ; TObjLink * FindLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjL",MatchSource.WIKI,doc/master/classTQConnectionList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnectionList.html
https://root.cern/doc/master/classTQConnectionList.html:18289,Modifiability,inherit,inherited,18289,"dLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjLink that also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inheri",MatchSource.WIKI,doc/master/classTQConnectionList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnectionList.html
https://root.cern/doc/master/classTQConnectionList.html:18399,Modifiability,inherit,inherited,18399,"dLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjLink that also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inheri",MatchSource.WIKI,doc/master/classTQConnectionList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnectionList.html
https://root.cern/doc/master/classTQConnectionList.html:18907,Modifiability,inherit,inherited,18907,"bjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjLink that also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . Inheritance diagram for TQConnectionList:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQConnectionList(). TQConnectionList::TQConnectionList ; (; const char * ; name, . Int_t ; nsigargs . ). inline . Definition at line 315 of file TQObject.cxx. ◆ ~TQConnectionList(). TQConnectionList::~TQConnectionList ; (; ). virtual . Destru",MatchSource.WIKI,doc/master/classTQConnectionList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnectionList.html
https://root.cern/doc/master/classTQConnectionList.html:19112,Modifiability,inherit,inherited,19112,"m TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . Inheritance diagram for TQConnectionList:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQConnectionList(). TQConnectionList::TQConnectionList ; (; const char * ; name, . Int_t ; nsigargs . ). inline . Definition at line 315 of file TQObject.cxx. ◆ ~TQConnectionList(). TQConnectionList::~TQConnectionList ; (; ). virtual . Destructor. ; Definition at line 327 of file TQObject.cxx. Member Function Documentation. ◆ Disconnect(). Bool_t TQConnectionList::Disconnect ; (; void * ; receiver = nullptr, . const char * ; slot_name = nullptr . ). Remove connection from the list. ; For more info see TQObject::Disconnect() ; Definition at line 344 of file TQObject.cxx. ",MatchSource.WIKI,doc/master/classTQConnectionList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnectionList.html
https://root.cern/doc/master/classTQConnectionList.html:19410,Modifiability,inherit,inherited,19410,"m TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . Inheritance diagram for TQConnectionList:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQConnectionList(). TQConnectionList::TQConnectionList ; (; const char * ; name, . Int_t ; nsigargs . ). inline . Definition at line 315 of file TQObject.cxx. ◆ ~TQConnectionList(). TQConnectionList::~TQConnectionList ; (; ). virtual . Destructor. ; Definition at line 327 of file TQObject.cxx. Member Function Documentation. ◆ Disconnect(). Bool_t TQConnectionList::Disconnect ; (; void * ; receiver = nullptr, . const char * ; slot_name = nullptr . ). Remove connection from the list. ; For more info see TQObject::Disconnect() ; Definition at line 344 of file TQObject.cxx. ",MatchSource.WIKI,doc/master/classTQConnectionList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnectionList.html
https://root.cern/doc/master/classTQConnectionList.html:19482,Modifiability,inherit,inherited,19482,"m TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . Inheritance diagram for TQConnectionList:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQConnectionList(). TQConnectionList::TQConnectionList ; (; const char * ; name, . Int_t ; nsigargs . ). inline . Definition at line 315 of file TQObject.cxx. ◆ ~TQConnectionList(). TQConnectionList::~TQConnectionList ; (; ). virtual . Destructor. ; Definition at line 327 of file TQObject.cxx. Member Function Documentation. ◆ Disconnect(). Bool_t TQConnectionList::Disconnect ; (; void * ; receiver = nullptr, . const char * ; slot_name = nullptr . ). Remove connection from the list. ; For more info see TQObject::Disconnect() ; Definition at line 344 of file TQObject.cxx. ",MatchSource.WIKI,doc/master/classTQConnectionList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnectionList.html
https://root.cern/doc/master/classTQConnectionList.html:18615,Performance,perform,perform,18615,"dLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjLink that also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inheri",MatchSource.WIKI,doc/master/classTQConnectionList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnectionList.html
https://root.cern/doc/master/classTQConnectionList.html:19154,Performance,cache,cache,19154,"m TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . Inheritance diagram for TQConnectionList:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQConnectionList(). TQConnectionList::TQConnectionList ; (; const char * ; name, . Int_t ; nsigargs . ). inline . Definition at line 315 of file TQObject.cxx. ◆ ~TQConnectionList(). TQConnectionList::~TQConnectionList ; (; ). virtual . Destructor. ; Definition at line 327 of file TQObject.cxx. Member Function Documentation. ◆ Disconnect(). Bool_t TQConnectionList::Disconnect ; (; void * ; receiver = nullptr, . const char * ; slot_name = nullptr . ). Remove connection from the list. ; For more info see TQObject::Disconnect() ; Definition at line 344 of file TQObject.cxx. ",MatchSource.WIKI,doc/master/classTQConnectionList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnectionList.html
https://root.cern/doc/master/classTQConnectionList.html:8139,Safety,safe,safe,8139,"d Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the wildcard. ;  ; virtual void Print (Option_t *option, Int_t recurse) const;  Print the collection header and its elements. ;  ; virtual void Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool UseRWLock (Bool_t enable=true);  Set this collection to use a RW lock upon access, making it thread safe. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () co",MatchSource.WIKI,doc/master/classTQConnectionList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnectionList.html
https://root.cern/doc/master/classTQConnectionList.html:6286,Security,hash,hash,6286,"s in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIter end () const;  ; virtual Int_t GetEntries () const;  ; const char * GetName () const override;  Return name of this collection. ;  ; virtual Int_t GetSize () const;  Return the capacity of the collection, i.e. ;  ; virtual Int_t GrowBy (Int_t delta) const;  Increase the collection's capacity by delta slots. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsArgNull (const char *where, const TObject *obj) const;  Returns true if object is a null pointer. ;  ; virtual Bool_t IsEmpty () const;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; Bool_t IsOwner () const;  ; Bool_t IsSortable () const override;  ; R__ALWAYS_INLINE Bool_t IsUsingRWLock () const;  ; virtual TIterator * MakeReverseIterator () const;  ; Bool_t Notify () override;  'Notify' all objects in this collection. ;  ; TObject * operator() (const char *name) const;  Find an object in this collection by name. ;  ; void Paint (Option_t *option="""") override;  Paint all objects in this collection. ;  ; virtual void Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the wildcard. ;  ; virtual void Print (Option_t *option, Int_t recurse) const;  Print the collecti",MatchSource.WIKI,doc/master/classTQConnectionList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnectionList.html
https://root.cern/doc/master/classTQConnectionList.html:7774,Security,access,accessible,7774," MakeReverseIterator () const;  ; Bool_t Notify () override;  'Notify' all objects in this collection. ;  ; TObject * operator() (const char *name) const;  Find an object in this collection by name. ;  ; void Paint (Option_t *option="""") override;  Paint all objects in this collection. ;  ; virtual void Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the wildcard. ;  ; virtual void Print (Option_t *option, Int_t recurse) const;  Print the collection header and its elements. ;  ; virtual void Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool UseRWLock (Bool_t enable=true);  Set this collection to use a RW lock upon access, making it thread safe. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract.",MatchSource.WIKI,doc/master/classTQConnectionList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnectionList.html
https://root.cern/doc/master/classTQConnectionList.html:8114,Security,access,access,8114,"d Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the wildcard. ;  ; virtual void Print (Option_t *option, Int_t recurse) const;  Print the collection header and its elements. ;  ; virtual void Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool UseRWLock (Bool_t enable=true);  Set this collection to use a RW lock upon access, making it thread safe. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () co",MatchSource.WIKI,doc/master/classTQConnectionList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnectionList.html
https://root.cern/doc/master/classTQConnectionList.html:16281,Security,access,accessible,16281,"s_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL ",MatchSource.WIKI,doc/master/classTQConnectionList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQConnectionList.html
https://root.cern/doc/master/classTQObject-members.html:189,Modifiability,inherit,inherited,189,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TQObject Member List. This is the complete list of members for TQObject, including all inherited members. AreAllSignalsBlocked()TQObjectstatic; AreSignalsBlocked() constTQObjectinline; BlockAllSignals(Bool_t b)TQObjectstatic; BlockSignals(Bool_t b)TQObjectinline; ChangedBy(const char *method)TQObjectinlinevirtual; CheckConnectArgs(TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot)TQObjectprotectedstatic; Class()TQObjectstatic; Class_Name()TQObjectstatic; Class_Version()TQObjectinlinestatic; CollectClassSignalLists(TList &list, TClass *cls)TQObject; CompressName(const char *method_name)TQObjectprotectedstatic; Connect(const char *signal, const char *receiver_class, void *receiver, const char *slot)TQObject; Connect(TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot)TQObjectstatic; Connect(const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot)TQObjectstatic; Connected(const char *)TQObjectinlinevirtual; ConnectToClass(TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot)TQObjectprotectedstatic; ConnectToClass(const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot)TQObjectprotectedstatic; DeclFileName()TQObjectinlinestatic; Destroyed()TQObjectinlinevirtual; Disconnect(const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr)TQObject; Disconnect(TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr)TQObjectstatic; Disconnect(const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr)TQObjectstatic; Disconnected(const char *)TQObjectinlinevirtual; Emit(const char *signal, const T &arg)TQObjectinline; Emit(const char *signal)TQObjectinline; E",MatchSource.WIKI,doc/master/classTQObject-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQObject-members.html
https://root.cern/doc/master/classTQObject.html:8413,Availability,error,error,8413,"eAllSignalsBlocked ; (; ). static . Returns true if all signals are blocked. ; Definition at line 1049 of file TQObject.cxx. ◆ AreSignalsBlocked(). Bool_t TQObject::AreSignalsBlocked ; (; ); const. inline . Definition at line 91 of file TQObject.h. ◆ BlockAllSignals(). Bool_t TQObject::BlockAllSignals ; (; Bool_t ; b). static . Block or unblock all signals. Returns the previous block status. ; Definition at line 1057 of file TQObject.cxx. ◆ BlockSignals(). Bool_t TQObject::BlockSignals ; (; Bool_t ; b). inline . Definition at line 92 of file TQObject.h. ◆ ChangedBy(). virtual void TQObject::ChangedBy ; (; const char * ; method). inlinevirtual . Definition at line 199 of file TQObject.h. ◆ CheckConnectArgs(). Int_t TQObject::CheckConnectArgs ; (; TQObject * ; sender, . TClass * ; sender_class, . const char * ; signal, . TClass * ; receiver_class, . const char * ; slot . ). staticprotected . Checking of consistency of sender/receiver methods/arguments. ; Returns -1 on error, otherwise number or arguments of signal function. Static method. ; Definition at line 179 of file TQObject.cxx. ◆ Class(). static TClass * TQObject::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TQObject::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TQObject::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 229 of file TQObject.h. ◆ CollectClassSignalLists(). void TQObject::CollectClassSignalLists ; (; TList & ; list, . TClass * ; cls . ). Collect class signal lists from class cls and all its base-classes. ; The recursive traversal is not performed for classes not deriving from TQClass. ; Definition at line 451 of file TQObject.cxx. ◆ CompressName(). TString TQObject::CompressName ; (; const char * ; method_name). staticprotected . Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signa",MatchSource.WIKI,doc/master/classTQObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQObject.html
https://root.cern/doc/master/classTQObject.html:1328,Energy Efficiency,power,powerfull,1328,"Member Functions |; List of all members ; TQObject Class ReferenceCore ROOT classes » Base ROOT classes. ; This is the ROOT implementation of the Qt object communication mechanism (see also http://www.troll.no/qt/metaobjects.html) ; Signals and slots are used for communication between objects. When an object has changed in some way that might be interesting for the outside world, it emits a signal to tell whoever is listening. All slots that are connected to this signal will be activated (called). It is even possible to connect a signal directly to another signal (this will emit the second signal immediately whenever the first is emitted.) There is no limitation on the number of slots that can be connected to a signal. The slots will be activated in the order they were connected to the signal. This mechanism allows objects to be easily reused, because the object that emits a signal does not need to know to which objects the signals are connected. Together, signals and slots make up a powerfull component programming mechanism. Signals; Destroyed(); TQObject::Destroyedvirtual void Destroyed()Definition TQObject.h:197; Signal emitted when object is destroyed. This signal could be connected to some garbage-collector object.; ChangedBy(const char *method_name); TQObject::ChangedByvirtual void ChangedBy(const char *method)Definition TQObject.h:199; This signal is emitted when some important data members of the object were changed. method_name parameter can be used as an identifier of the modifier method.; Message(const char *msg); TQObject::Messagevirtual void Message(const char *msg)Definition TQObject.h:201; General purpose message signal ; Definition at line 48 of file TQObject.h. Public Member Functions;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls); ",MatchSource.WIKI,doc/master/classTQObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQObject.html
https://root.cern/doc/master/classTQObject.html:7042,Energy Efficiency,allocate,allocated,7042," *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  . Protected Attributes; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Static Protected Attributes; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Private Member Functions;  TQObject (const TQObject &)=delete;  ; TQObject & operator= (const TQObject &)=delete;  . #include <TQObject.h>. Inheritance diagram for TQObject:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQObject() [1/2]. TQObject::TQObject ; (; const TQObject & ; ). privatedelete . ◆ TQObject() [2/2]. TQObject::TQObject ; (; ). TQObject Constructor. ; Comment:; In order to minimize memory allocation fListOfSignals and fListOfConnections are allocated only if it is neccesary; When fListOfSignals/fListOfConnections are empty they will be deleted . Definition at line 393 of file TQObject.cxx. ◆ ~TQObject(). TQObject::~TQObject ; (; ). virtual . TQObject Destructor. . delete all connections and signal list . Definition at line 404 of file TQObject.cxx. Member Function Documentation. ◆ AreAllSignalsBlocked(). Bool_t TQObject::AreAllSignalsBlocked ; (; ). static . Returns true if all signals are blocked. ; Definition at line 1049 of file TQObject.cxx. ◆ AreSignalsBlocked(). Bool_t TQObject::AreSignalsBlocked ; (; ); const. inline . Definition at line 91 of file TQObject.h. ◆ BlockAllSignals(). Bool_t TQObject::BlockAllSignals ; (; Bool_t ; b). static . Block or unblock all signals. Returns the previous block status. ; Definition at line 1057 of file TQObject.cxx. ◆ BlockSignals(). Bool_t TQObject::BlockSignals ; (; Bool_t ; b). inline . Definition at line 92 of file TQObject.h. ◆ ChangedBy(). virtual void TQObject::ChangedBy ; (; con",MatchSource.WIKI,doc/master/classTQObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQObject.html
https://root.cern/doc/master/classTQObject.html:1977,Integrability,message,message,1977,"tation on the number of slots that can be connected to a signal. The slots will be activated in the order they were connected to the signal. This mechanism allows objects to be easily reused, because the object that emits a signal does not need to know to which objects the signals are connected. Together, signals and slots make up a powerfull component programming mechanism. Signals; Destroyed(); TQObject::Destroyedvirtual void Destroyed()Definition TQObject.h:197; Signal emitted when object is destroyed. This signal could be connected to some garbage-collector object.; ChangedBy(const char *method_name); TQObject::ChangedByvirtual void ChangedBy(const char *method)Definition TQObject.h:199; This signal is emitted when some important data members of the object were changed. method_name parameter can be used as an identifier of the modifier method.; Message(const char *msg); TQObject::Messagevirtual void Message(const char *msg)Definition TQObject.h:201; General purpose message signal ; Definition at line 48 of file TQObject.h. Public Member Functions;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const char *si",MatchSource.WIKI,doc/master/classTQObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQObject.html
https://root.cern/doc/master/classTQObject.html:9120,Performance,perform,performed,9120," ◆ CheckConnectArgs(). Int_t TQObject::CheckConnectArgs ; (; TQObject * ; sender, . TClass * ; sender_class, . const char * ; signal, . TClass * ; receiver_class, . const char * ; slot . ). staticprotected . Checking of consistency of sender/receiver methods/arguments. ; Returns -1 on error, otherwise number or arguments of signal function. Static method. ; Definition at line 179 of file TQObject.cxx. ◆ Class(). static TClass * TQObject::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TQObject::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TQObject::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 229 of file TQObject.h. ◆ CollectClassSignalLists(). void TQObject::CollectClassSignalLists ; (; TList & ; list, . TClass * ; cls . ). Collect class signal lists from class cls and all its base-classes. ; The recursive traversal is not performed for classes not deriving from TQClass. ; Definition at line 451 of file TQObject.cxx. ◆ CompressName(). TString TQObject::CompressName ; (; const char * ; method_name). staticprotected . Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ; If a null or empty string is passed in, an empty string is returned.; Example: CompressName("" Draw(const char *, const char *,; Option_t * , Int_t , Int_t)"");; TQObject::CompressNamestatic TString CompressName(const char *method_name)Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in t...Definition TQObject.cxx:98; returns the string ""Draw(char*,char*,char*,int,int)"". ; Definition at line 98 of file TQObject.cxx. ◆ Connect() [1/3]. Bool_t TQObject::Connect ; (; const char * ; class_name, . const char * ; signal, . const char * ; cl, . void * ; receiver, . const char * ; slot . ). static . This method allows to make a connection f",MatchSource.WIKI,doc/master/classTQObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQObject.html
https://root.cern/doc/master/classTQObjSender.html:750,Modifiability,inherit,inherited,750,". ROOT: TQObjSender Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TQObjSender Class Reference. . Definition at line 233 of file TQObject.h. Public Member Functions;  TQObjSender ();  ; virtual ~TQObjSender ();  ; TClass * IsA () const override;  ; virtual void SetSender (void *sender);  ; void SetSenderClassName (const char *sclass="""");  ; void Streamer (TBuffer &) override;  Stream an object of class TQObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const char *signal, const T &arg);  Activate signal with single parameter. ;  ; template<typename... T> ; void EmitVA (const char *signal_name, Int_t, const T &... params);  Emit a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of",MatchSource.WIKI,doc/master/classTQObjSender.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQObjSender.html
https://root.cern/doc/master/classTQObjSender.html:2912,Modifiability,inherit,inherited,2912,"... params);  Emit a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; st",MatchSource.WIKI,doc/master/classTQObjSender.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQObjSender.html
https://root.cern/doc/master/classTQObjSender.html:4258,Modifiability,inherit,inherited,4258," char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; void * GetSender () override;  ; const char * GetSenderClassName () const override;  . Protected Attributes; void * fSender;  ; TString fSenderClass;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TQObjSender (const TQObjSender &)=delete;  ; TQObjSender & operator= (const TQObjSender &)=delete;  . Additional Inherited Members;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectT",MatchSource.WIKI,doc/master/classTQObjSender.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQObjSender.html
https://root.cern/doc/master/classTQObjSender.html:4636,Modifiability,inherit,inherited,4636,"isconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; void * GetSender () override;  ; const char * GetSenderClassName () const override;  . Protected Attributes; void * fSender;  ; TString fSenderClass;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TQObjSender (const TQObjSender &)=delete;  ; TQObjSender & operator= (const TQObjSender &)=delete;  . Additional Inherited Members;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TQObject.h>. Inheritance diagram for TQObjSender:. This browser is not able to show SVG: try Firefox",MatchSource.WIKI,doc/master/classTQObjSender.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQObjSender.html
https://root.cern/doc/master/classTQObjSender.html:5492,Modifiability,inherit,inherited,5492,"erator= (const TQObjSender &)=delete;  . Additional Inherited Members;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TQObject.h>. Inheritance diagram for TQObjSender:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQObjSender() [1/2]. TQObjSender::TQObjSender ; (; const TQObjSender & ; ). privatedelete . ◆ TQObjSender() [2/2]. TQObjSender::TQObjSender ; (; ). inline . Definition at line 247 of file TQObject.h. ◆ ~TQObjSender(). virtual TQObjSender::~TQObjSender ; (; ). inlinevirtual . Definition at line 248 of file TQObject.h. Member Function Documentation. ◆ Class(). static TClass * TQObjSender::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TQObjSender::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TQObjSender::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 253 of file TQOb",MatchSource.WIKI,doc/master/classTQObjSender.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQObjSender.html
https://root.cern/doc/master/classTQpDataBase.html:4179,Availability,error,error,4179,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTQpDataBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataBase.html
https://root.cern/doc/master/classTQpDataBase.html:4268,Availability,error,error,4268,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTQpDataBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataBase.html
https://root.cern/doc/master/classTQpDataBase.html:4423,Availability,error,error,4423,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTQpDataBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataBase.html
https://root.cern/doc/master/classTQpDataBase.html:4720,Availability,error,error,4720,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTQpDataBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataBase.html
https://root.cern/doc/master/classTQpDataBase.html:9394,Availability,error,error,9394,"ead (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Public Attributes; TVectorD fBa;  ; TVectorD fCloBound;  ; TVectorD fCloIndex;  ; TVectorD fCupBound;  ; TVectorD fCupIndex;  ; TVectorD fG;  ; Int_t fMy;  ; Int_t fMz;  ; Int_t fNx;  ; TVectorD fXloBound;  ; TVectorD fXloIndex;  ; TVectorD fXupBound;  ; TVectorD fXupIndex;  . Static Protected Member Functions; static void RandomlyCh",MatchSource.WIKI,doc/master/classTQpDataBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataBase.html
https://root.cern/doc/master/classTQpDataBase.html:4185,Integrability,message,message,4185,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTQpDataBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataBase.html
https://root.cern/doc/master/classTQpDataBase.html:4726,Integrability,message,message,4726,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTQpDataBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataBase.html
https://root.cern/doc/master/classTQpDataBase.html:5928,Integrability,message,message,5928,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const ch",MatchSource.WIKI,doc/master/classTQpDataBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataBase.html
https://root.cern/doc/master/classTQpDataBase.html:9400,Integrability,message,message,9400,"ead (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Public Attributes; TVectorD fBa;  ; TVectorD fCloBound;  ; TVectorD fCloIndex;  ; TVectorD fCupBound;  ; TVectorD fCupIndex;  ; TVectorD fG;  ; Int_t fMy;  ; Int_t fMz;  ; Int_t fNx;  ; TVectorD fXloBound;  ; TVectorD fXloIndex;  ; TVectorD fXupBound;  ; TVectorD fXupIndex;  . Static Protected Member Functions; static void RandomlyCh",MatchSource.WIKI,doc/master/classTQpDataBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataBase.html
https://root.cern/doc/master/classTQpDataBase.html:9773,Integrability,message,message,9773,"rimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Public Attributes; TVectorD fBa;  ; TVectorD fCloBound;  ; TVectorD fCloIndex;  ; TVectorD fCupBound;  ; TVectorD fCupIndex;  ; TVectorD fG;  ; Int_t fMy;  ; Int_t fMz;  ; Int_t fNx;  ; TVectorD fXloBound;  ; TVectorD fXloIndex;  ; TVectorD fXupBound;  ; TVectorD fXupIndex;  . Static Protected Member Functions; static void RandomlyChooseBoundedVariables (TVectorD &x, TVectorD &dualx, TVectorD &blx, TVectorD &ixlow, TVectorD &bux, TVectorD &ixupp, Double_t &ix, Double_t percentLowerOnly, Double_t percentUpperOnly, Double_t percentBound);  Randomly choose x and its boundaries. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x0",MatchSource.WIKI,doc/master/classTQpDataBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataBase.html
https://root.cern/doc/master/classTQpDataBase.html:2418,Modifiability,inherit,inherited,2418,"nst TVectorD &x)=0;  ; virtual void CTransmult (Double_t beta, TVectorD &y, Double_t alpha, const TVectorD &x)=0;  ; virtual Double_t DataNorm ()=0;  ; virtual void DataRandom (TVectorD &x, TVectorD &y, TVectorD &z, TVectorD &s)=0;  ; virtual TVectorD & GetBa ();  ; virtual void GetDiagonalOfQ (TVectorD &dQ)=0;  ; virtual TVectorD & GetG ();  ; virtual TVectorD & GetiSlowerBound ();  ; virtual TVectorD & GetiSupperBound ();  ; virtual TVectorD & GetiXlowerBound ();  ; virtual TVectorD & GetiXupperBound ();  ; virtual TVectorD & GetSlowerBound ();  ; virtual TVectorD & GetSupperBound ();  ; virtual TVectorD & GetXlowerBound ();  ; virtual TVectorD & GetXupperBound ();  ; virtual Double_t ObjectiveValue (TQpVar *vars)=0;  ; TQpDataBase & operator= (const TQpDataBase &source);  Assignment operator. ;  ; virtual void PutAIntoAt (TMatrixDBase &M, Int_t row, Int_t col)=0;  ; virtual void PutCIntoAt (TMatrixDBase &M, Int_t row, Int_t col)=0;  ; virtual void PutQIntoAt (TMatrixDBase &M, Int_t row, Int_t col)=0;  ; virtual void Qmult (Double_t beta, TVectorD &y, Double_t alpha, const TVectorD &x)=0;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname",MatchSource.WIKI,doc/master/classTQpDataBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataBase.html
https://root.cern/doc/master/classTQpDataBase.html:3815,Modifiability,inherit,inheritance,3815,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTQpDataBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataBase.html
https://root.cern/doc/master/classTQpDataBase.html:6026,Modifiability,inherit,inherits,6026,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a b",MatchSource.WIKI,doc/master/classTQpDataBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataBase.html
https://root.cern/doc/master/classTQpDataBase.html:6143,Modifiability,inherit,inherits,6143,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not pro",MatchSource.WIKI,doc/master/classTQpDataBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataBase.html
https://root.cern/doc/master/classTQpDataBase.html:10686,Modifiability,inherit,inherited,10686,".) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Public Attributes; TVectorD fBa;  ; TVectorD fCloBound;  ; TVectorD fCloIndex;  ; TVectorD fCupBound;  ; TVectorD fCupIndex;  ; TVectorD fG;  ; Int_t fMy;  ; Int_t fMz;  ; Int_t fNx;  ; TVectorD fXloBound;  ; TVectorD fXloIndex;  ; TVectorD fXupBound;  ; TVectorD fXupIndex;  . Static Protected Member Functions; static void RandomlyChooseBoundedVariables (TVectorD &x, TVectorD &dualx, TVectorD &blx, TVectorD &ixlow, TVectorD &bux, TVectorD &ixupp, Double_t &ix, Double_t percentLowerOnly, Double_t percentUpperOnly, Double_t percentBound);  Randomly choose x and its boundaries. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObject",MatchSource.WIKI,doc/master/classTQpDataBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataBase.html
https://root.cern/doc/master/classTQpDataBase.html:11342,Modifiability,inherit,inherited,11342,"VectorD &blx, TVectorD &ixlow, TVectorD &bux, TVectorD &ixupp, Double_t &ix, Double_t percentLowerOnly, Double_t percentUpperOnly, Double_t percentBound);  Randomly choose x and its boundaries. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TQpDataBase.h>. Inheritance diagram for TQpDataBase:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQpDataBase() [1/3]. TQpDataBase::TQpDataBase ; (; ). Default constructor. ; Definition at line 66 of file TQpData",MatchSource.WIKI,doc/master/classTQpDataBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataBase.html
https://root.cern/doc/master/classTQpDataBase.html:11845,Modifiability,inherit,inherited,11845," 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TQpDataBase.h>. Inheritance diagram for TQpDataBase:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQpDataBase() [1/3]. TQpDataBase::TQpDataBase ; (; ). Default constructor. ; Definition at line 66 of file TQpDataBase.cxx. ◆ TQpDataBase() [2/3]. TQpDataBase::TQpDataBase ; (; Int_t ; nx, . Int_t ; my, . Int_t ; mz . ). Constructor. ; Definition at line 77 of file TQpDataBase.cxx. ◆ TQpDataBase() [3/3]. TQpDataBase::TQpDataBase ; (; const TQpDataBase & ; another). Copy constructor. ; Definition at line 102 of file TQpDataBase.cxx. ◆ ~TQpDataBase(). TQpDataBase::~TQpDataBase ; (; ). inlineoverride . Definition at line 91 of file TQpDataBase.h. Member Function Documentation. ◆ Amult(). virtual void TQpDataBase::Amult ; (; Do",MatchSource.WIKI,doc/master/classTQpDataBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataBase.html
https://root.cern/doc/master/classTQpDataBase.html:11944,Modifiability,inherit,inherited,11944," 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TQpDataBase.h>. Inheritance diagram for TQpDataBase:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQpDataBase() [1/3]. TQpDataBase::TQpDataBase ; (; ). Default constructor. ; Definition at line 66 of file TQpDataBase.cxx. ◆ TQpDataBase() [2/3]. TQpDataBase::TQpDataBase ; (; Int_t ; nx, . Int_t ; my, . Int_t ; mz . ). Constructor. ; Definition at line 77 of file TQpDataBase.cxx. ◆ TQpDataBase() [3/3]. TQpDataBase::TQpDataBase ; (; const TQpDataBase & ; another). Copy constructor. ; Definition at line 102 of file TQpDataBase.cxx. ◆ ~TQpDataBase(). TQpDataBase::~TQpDataBase ; (; ). inlineoverride . Definition at line 91 of file TQpDataBase.h. Member Function Documentation. ◆ Amult(). virtual void TQpDataBase::Amult ; (; Do",MatchSource.WIKI,doc/master/classTQpDataBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataBase.html
https://root.cern/doc/master/classTQpDataBase.html:403,Performance,perform,performing,403,". ROOT: TQpDataBase Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; Static Protected Member Functions |; List of all members ; TQpDataBase Class Referenceabstract. ; Data for the general QP formulation. ; The Data class stores the data defining the problem and provides methods for performing the operations with this data required by the interior-point algorithms. These operations include assembling the linear systems (5) or (7), performing matrix-vector operations with the data, calculating norms of the data, reading input into the data structure from various sources, generating random problem instances, and printing the data. ; Definition at line 60 of file TQpDataBase.h. Public Member Functions;  TQpDataBase ();  Default constructor. ;  ;  TQpDataBase (const TQpDataBase &another);  Copy constructor. ;  ;  TQpDataBase (Int_t nx, Int_t my, Int_t mz);  Constructor. ;  ;  ~TQpDataBase () override;  ; virtual void Amult (Double_t beta, TVectorD &y, Double_t alpha, const TVectorD &x)=0;  ; virtual void ATransmult (Double_t beta, TVectorD &y, Double_t alpha, const TVectorD &x)=0;  ; virtual void Cmult (Double_t beta, TVectorD &y, Double_t alpha, const TVectorD &x)=0;  ; virtual void CTransmult (Double_t beta, TVectorD &y, Double_t alpha, const TVectorD &x)=0;  ; virtual Double_t DataNorm ()=0;  ; virtual void DataRandom (TVectorD &x, TVectorD &y, TVectorD &z, TVectorD &s)=0;  ; virtual TVectorD & GetBa ();  ; virtual void GetDiagonalOfQ (TVectorD &dQ)=0;  ; virtual TVectorD & GetG ();  ; virtual TVectorD & GetiSlowerBound ();  ; virtual TVectorD & GetiSupperBound ();  ; virtual TVectorD & GetiXlowerBound ();  ; virtual TVectorD & GetiXupperBound ();  ; virtual TVectorD & GetSlowerBound ();  ; virtual TVectorD & GetSupperBound ();  ; virtual TVectorD & GetXlowerBound ();  ; virtual TVectorD & GetXupperBound ();  ; virtual Double_t ObjectiveValue (TQpVar ",MatchSource.WIKI,doc/master/classTQpDataBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataBase.html
https://root.cern/doc/master/classTQpDataBase.html:554,Performance,perform,performing,554,". ROOT: TQpDataBase Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; Static Protected Member Functions |; List of all members ; TQpDataBase Class Referenceabstract. ; Data for the general QP formulation. ; The Data class stores the data defining the problem and provides methods for performing the operations with this data required by the interior-point algorithms. These operations include assembling the linear systems (5) or (7), performing matrix-vector operations with the data, calculating norms of the data, reading input into the data structure from various sources, generating random problem instances, and printing the data. ; Definition at line 60 of file TQpDataBase.h. Public Member Functions;  TQpDataBase ();  Default constructor. ;  ;  TQpDataBase (const TQpDataBase &another);  Copy constructor. ;  ;  TQpDataBase (Int_t nx, Int_t my, Int_t mz);  Constructor. ;  ;  ~TQpDataBase () override;  ; virtual void Amult (Double_t beta, TVectorD &y, Double_t alpha, const TVectorD &x)=0;  ; virtual void ATransmult (Double_t beta, TVectorD &y, Double_t alpha, const TVectorD &x)=0;  ; virtual void Cmult (Double_t beta, TVectorD &y, Double_t alpha, const TVectorD &x)=0;  ; virtual void CTransmult (Double_t beta, TVectorD &y, Double_t alpha, const TVectorD &x)=0;  ; virtual Double_t DataNorm ()=0;  ; virtual void DataRandom (TVectorD &x, TVectorD &y, TVectorD &z, TVectorD &s)=0;  ; virtual TVectorD & GetBa ();  ; virtual void GetDiagonalOfQ (TVectorD &dQ)=0;  ; virtual TVectorD & GetG ();  ; virtual TVectorD & GetiSlowerBound ();  ; virtual TVectorD & GetiSupperBound ();  ; virtual TVectorD & GetiXlowerBound ();  ; virtual TVectorD & GetiXupperBound ();  ; virtual TVectorD & GetSlowerBound ();  ; virtual TVectorD & GetSupperBound ();  ; virtual TVectorD & GetXlowerBound ();  ; virtual TVectorD & GetXupperBound ();  ; virtual Double_t ObjectiveValue (TQpVar ",MatchSource.WIKI,doc/master/classTQpDataBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataBase.html
https://root.cern/doc/master/classTQpDataBase.html:5657,Security,hash,hash,5657," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other obje",MatchSource.WIKI,doc/master/classTQpDataBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataBase.html
https://root.cern/doc/master/classTQpDataDens.html:5058,Availability,error,error,5058,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTQpDataDens.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataDens.html
https://root.cern/doc/master/classTQpDataDens.html:5147,Availability,error,error,5147,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTQpDataDens.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataDens.html
https://root.cern/doc/master/classTQpDataDens.html:5302,Availability,error,error,5302,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTQpDataDens.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataDens.html
https://root.cern/doc/master/classTQpDataDens.html:5599,Availability,error,error,5599,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTQpDataDens.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataDens.html
https://root.cern/doc/master/classTQpDataDens.html:10152,Availability,error,error,10152,"ead (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Protected Attributes; TMatrixD fA;  ; TMatrixD fC;  ; TMatrixDSym fQ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , k",MatchSource.WIKI,doc/master/classTQpDataDens.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataDens.html
https://root.cern/doc/master/classTQpDataDens.html:5064,Integrability,message,message,5064,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTQpDataDens.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataDens.html
https://root.cern/doc/master/classTQpDataDens.html:5605,Integrability,message,message,5605,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTQpDataDens.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataDens.html
https://root.cern/doc/master/classTQpDataDens.html:6807,Integrability,message,message,6807,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const ch",MatchSource.WIKI,doc/master/classTQpDataDens.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataDens.html
https://root.cern/doc/master/classTQpDataDens.html:10158,Integrability,message,message,10158,"ead (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Protected Attributes; TMatrixD fA;  ; TMatrixD fC;  ; TMatrixDSym fQ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , k",MatchSource.WIKI,doc/master/classTQpDataDens.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataDens.html
https://root.cern/doc/master/classTQpDataDens.html:10531,Integrability,message,message,10531,"rimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Protected Attributes; TMatrixD fA;  ; TMatrixD fC;  ; TMatrixDSym fQ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidOb",MatchSource.WIKI,doc/master/classTQpDataDens.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataDens.html
https://root.cern/doc/master/classTQpDataDens.html:2564,Modifiability,inherit,inherited,2564,"iagonalOfQ (TVectorD &dQ) override;  Return in vector dq the diagonal of matrix fQ (Quadratic part of Objective function) ;  ; Double_t ObjectiveValue (TQpVar *vars) override;  Return value of the objective function. ;  ; TQpDataDens & operator= (const TQpDataDens &source);  Assignment operator. ;  ; void Print (Option_t *opt="""") const override;  Print all class members. ;  ; void PutAIntoAt (TMatrixDBase &M, Int_t row, Int_t col) override;  Insert the constraint matrix A into the matrix M at index (row,col) for the fundamental linear system. ;  ; void PutCIntoAt (TMatrixDBase &M, Int_t row, Int_t col) override;  Insert the constraint matrix C into the matrix M at index (row,col) for the fundamental linear system. ;  ; void PutQIntoAt (TMatrixDBase &M, Int_t row, Int_t col) override;  Insert the Hessian Q into the matrix M at index (row,col) for the fundamental linear system. ;  ; void Qmult (Double_t beta, TVectorD &y, Double_t alpha, const TVectorD &x) override;  calculate y = beta*y + alpha*(fQ*x) ;  ;  Public Member Functions inherited from TQpDataBase;  TQpDataBase ();  Default constructor. ;  ;  TQpDataBase (const TQpDataBase &another);  Copy constructor. ;  ;  TQpDataBase (Int_t nx, Int_t my, Int_t mz);  Constructor. ;  ;  ~TQpDataBase () override;  ; virtual TVectorD & GetBa ();  ; virtual TVectorD & GetG ();  ; virtual TVectorD & GetiSlowerBound ();  ; virtual TVectorD & GetiSupperBound ();  ; virtual TVectorD & GetiXlowerBound ();  ; virtual TVectorD & GetiXupperBound ();  ; virtual TVectorD & GetSlowerBound ();  ; virtual TVectorD & GetSupperBound ();  ; virtual TVectorD & GetXlowerBound ();  ; virtual TVectorD & GetXupperBound ();  ; TQpDataBase & operator= (const TQpDataBase &source);  Assignment operator. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Us",MatchSource.WIKI,doc/master/classTQpDataDens.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataDens.html
https://root.cern/doc/master/classTQpDataDens.html:3297,Modifiability,inherit,inherited,3297,"e;  Insert the Hessian Q into the matrix M at index (row,col) for the fundamental linear system. ;  ; void Qmult (Double_t beta, TVectorD &y, Double_t alpha, const TVectorD &x) override;  calculate y = beta*y + alpha*(fQ*x) ;  ;  Public Member Functions inherited from TQpDataBase;  TQpDataBase ();  Default constructor. ;  ;  TQpDataBase (const TQpDataBase &another);  Copy constructor. ;  ;  TQpDataBase (Int_t nx, Int_t my, Int_t mz);  Constructor. ;  ;  ~TQpDataBase () override;  ; virtual TVectorD & GetBa ();  ; virtual TVectorD & GetG ();  ; virtual TVectorD & GetiSlowerBound ();  ; virtual TVectorD & GetiSupperBound ();  ; virtual TVectorD & GetiXlowerBound ();  ; virtual TVectorD & GetiXupperBound ();  ; virtual TVectorD & GetSlowerBound ();  ; virtual TVectorD & GetSupperBound ();  ; virtual TVectorD & GetXlowerBound ();  ; virtual TVectorD & GetXupperBound ();  ; TQpDataBase & operator= (const TQpDataBase &source);  Assignment operator. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;",MatchSource.WIKI,doc/master/classTQpDataDens.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataDens.html
https://root.cern/doc/master/classTQpDataDens.html:4694,Modifiability,inherit,inheritance,4694,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTQpDataDens.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataDens.html
https://root.cern/doc/master/classTQpDataDens.html:6905,Modifiability,inherit,inherits,6905,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a b",MatchSource.WIKI,doc/master/classTQpDataDens.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataDens.html
https://root.cern/doc/master/classTQpDataDens.html:7022,Modifiability,inherit,inherits,7022,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not pro",MatchSource.WIKI,doc/master/classTQpDataDens.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataDens.html
https://root.cern/doc/master/classTQpDataDens.html:10930,Modifiability,inherit,inherited,10930,". ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Protected Attributes; TMatrixD fA;  ; TMatrixD fC;  ; TMatrixDSym fQ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObject",MatchSource.WIKI,doc/master/classTQpDataDens.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataDens.html
https://root.cern/doc/master/classTQpDataDens.html:11586,Modifiability,inherit,inherited,11586,"_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Protected Attributes; TMatrixD fA;  ; TMatrixD fC;  ; TMatrixDSym fQ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Public Attributes inherited from TQpDataBase; TVectorD fBa;  ; TVectorD fCloBound;  ; TVectorD fCloIndex;  ; TVectorD fCupBound;  ; TVectorD fCupIndex;  ; TVectorD fG;  ; Int_t fMy;  ; Int_t fMz;  ; Int_t fNx;  ; TVectorD fXloBound;  ; TVectorD fXloIndex;  ; TVectorD fXupBound;  ; TVectorD fXupIndex;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Pr",MatchSource.WIKI,doc/master/classTQpDataDens.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataDens.html
https://root.cern/doc/master/classTQpDataDens.html:12091,Modifiability,inherit,inherited,12091,"1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Public Attributes inherited from TQpDataBase; TVectorD fBa;  ; TVectorD fCloBound;  ; TVectorD fCloIndex;  ; TVectorD fCupBound;  ; TVectorD fCupIndex;  ; TVectorD fG;  ; Int_t fMy;  ; Int_t fMz;  ; Int_t fNx;  ; TVectorD fXloBound;  ; TVectorD fXloIndex;  ; TVectorD fXupBound;  ; TVectorD fXupIndex;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TQpDataBase; static void RandomlyChooseBoundedVariables (TVectorD &x, TVectorD &dualx, TVectorD &blx, TVectorD &ixlow, TVectorD &bux, TVectorD &ixupp, Double_t &ix, Double_t percentLowerOnly, Double_t percentUpperOnly, Double_t percentBound);  Randomly choose x and its boundaries. ;  . #include <TQpDataDens.h>. Inheritance diagram for TQpDataDens:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQpDataDens() [1/4]. TQpDataDens::TQpDataDens ; (; ). inline . Definition at line 74 of file TQpDataDens.h. ◆ TQpDataDens() [2/4]. TQpDataDen",MatchSource.WIKI,doc/master/classTQpDataDens.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataDens.html
https://root.cern/doc/master/classTQpDataDens.html:12395,Modifiability,inherit,inherited,12395,"1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Public Attributes inherited from TQpDataBase; TVectorD fBa;  ; TVectorD fCloBound;  ; TVectorD fCloIndex;  ; TVectorD fCupBound;  ; TVectorD fCupIndex;  ; TVectorD fG;  ; Int_t fMy;  ; Int_t fMz;  ; Int_t fNx;  ; TVectorD fXloBound;  ; TVectorD fXloIndex;  ; TVectorD fXupBound;  ; TVectorD fXupIndex;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TQpDataBase; static void RandomlyChooseBoundedVariables (TVectorD &x, TVectorD &dualx, TVectorD &blx, TVectorD &ixlow, TVectorD &bux, TVectorD &ixupp, Double_t &ix, Double_t percentLowerOnly, Double_t percentUpperOnly, Double_t percentBound);  Randomly choose x and its boundaries. ;  . #include <TQpDataDens.h>. Inheritance diagram for TQpDataDens:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQpDataDens() [1/4]. TQpDataDens::TQpDataDens ; (; ). inline . Definition at line 74 of file TQpDataDens.h. ◆ TQpDataDens() [2/4]. TQpDataDen",MatchSource.WIKI,doc/master/classTQpDataDens.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataDens.html
https://root.cern/doc/master/classTQpDataDens.html:12494,Modifiability,inherit,inherited,12494,"1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Public Attributes inherited from TQpDataBase; TVectorD fBa;  ; TVectorD fCloBound;  ; TVectorD fCloIndex;  ; TVectorD fCupBound;  ; TVectorD fCupIndex;  ; TVectorD fG;  ; Int_t fMy;  ; Int_t fMz;  ; Int_t fNx;  ; TVectorD fXloBound;  ; TVectorD fXloIndex;  ; TVectorD fXupBound;  ; TVectorD fXupIndex;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TQpDataBase; static void RandomlyChooseBoundedVariables (TVectorD &x, TVectorD &dualx, TVectorD &blx, TVectorD &ixlow, TVectorD &bux, TVectorD &ixupp, Double_t &ix, Double_t percentLowerOnly, Double_t percentUpperOnly, Double_t percentBound);  Randomly choose x and its boundaries. ;  . #include <TQpDataDens.h>. Inheritance diagram for TQpDataDens:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQpDataDens() [1/4]. TQpDataDens::TQpDataDens ; (; ). inline . Definition at line 74 of file TQpDataDens.h. ◆ TQpDataDens() [2/4]. TQpDataDen",MatchSource.WIKI,doc/master/classTQpDataDens.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataDens.html
https://root.cern/doc/master/classTQpDataDens.html:12712,Modifiability,inherit,inherited,12712,";  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Public Attributes inherited from TQpDataBase; TVectorD fBa;  ; TVectorD fCloBound;  ; TVectorD fCloIndex;  ; TVectorD fCupBound;  ; TVectorD fCupIndex;  ; TVectorD fG;  ; Int_t fMy;  ; Int_t fMz;  ; Int_t fNx;  ; TVectorD fXloBound;  ; TVectorD fXloIndex;  ; TVectorD fXupBound;  ; TVectorD fXupIndex;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TQpDataBase; static void RandomlyChooseBoundedVariables (TVectorD &x, TVectorD &dualx, TVectorD &blx, TVectorD &ixlow, TVectorD &bux, TVectorD &ixupp, Double_t &ix, Double_t percentLowerOnly, Double_t percentUpperOnly, Double_t percentBound);  Randomly choose x and its boundaries. ;  . #include <TQpDataDens.h>. Inheritance diagram for TQpDataDens:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQpDataDens() [1/4]. TQpDataDens::TQpDataDens ; (; ). inline . Definition at line 74 of file TQpDataDens.h. ◆ TQpDataDens() [2/4]. TQpDataDens::TQpDataDens ; (; Int_t ; nx, . Int_t ; my, . Int_t ; mz . ). Constructor. ; Definition at line 58 of file TQpDataDens.cxx. ◆ TQpDataDens() [3/4]. TQpDataDens::TQpDataDens ; (; TVectorD & ; c, . TMatrixDSym & ; Q, . TVectorD & ; xlow, . TVectorD & ; ixlow, . TVectorD & ; xupp, . TVectorD & ; ixupp, . TMatrixD & ; A, . TVectorD & ; bA, . TMatrixD & ; C, . TVectorD & ; clow, . TVectorD & ; iclow, . TVectorD & ; cupp, . TVectorD & ; icupp . ). Constructor. ; Definitio",MatchSource.WIKI,doc/master/classTQpDataDens.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataDens.html
https://root.cern/doc/master/classTQpDataDens.html:6536,Security,hash,hash,6536," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other obje",MatchSource.WIKI,doc/master/classTQpDataDens.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataDens.html
https://root.cern/doc/master/classTQpDataSparse.html:5187,Availability,error,error,5187,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTQpDataSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataSparse.html
https://root.cern/doc/master/classTQpDataSparse.html:5276,Availability,error,error,5276,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTQpDataSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataSparse.html
https://root.cern/doc/master/classTQpDataSparse.html:5431,Availability,error,error,5431,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTQpDataSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataSparse.html
https://root.cern/doc/master/classTQpDataSparse.html:5728,Availability,error,error,5728,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTQpDataSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataSparse.html
https://root.cern/doc/master/classTQpDataSparse.html:10281,Availability,error,error,10281,"ead (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Protected Attributes; TMatrixDSparse fA;  ; TMatrixDSparse fC;  ; TMatrixDSparse fQ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL",MatchSource.WIKI,doc/master/classTQpDataSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataSparse.html
https://root.cern/doc/master/classTQpDataSparse.html:5193,Integrability,message,message,5193,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTQpDataSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataSparse.html
https://root.cern/doc/master/classTQpDataSparse.html:5734,Integrability,message,message,5734,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTQpDataSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataSparse.html
https://root.cern/doc/master/classTQpDataSparse.html:6936,Integrability,message,message,6936,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const ch",MatchSource.WIKI,doc/master/classTQpDataSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataSparse.html
https://root.cern/doc/master/classTQpDataSparse.html:10287,Integrability,message,message,10287,"ead (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Protected Attributes; TMatrixDSparse fA;  ; TMatrixDSparse fC;  ; TMatrixDSparse fQ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL",MatchSource.WIKI,doc/master/classTQpDataSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataSparse.html
https://root.cern/doc/master/classTQpDataSparse.html:10660,Integrability,message,message,10660,"rimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Protected Attributes; TMatrixDSparse fA;  ; TMatrixDSparse fC;  ; TMatrixDSparse fQ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )",MatchSource.WIKI,doc/master/classTQpDataSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataSparse.html
https://root.cern/doc/master/classTQpDataSparse.html:2693,Modifiability,inherit,inherited,2693," objective function. ;  ; TQpDataSparse & operator= (const TQpDataSparse &source);  Assignment operator. ;  ; void Print (Option_t *opt="""") const override;  Print class members. ;  ; void PutAIntoAt (TMatrixDBase &M, Int_t row, Int_t col) override;  Insert the constraint matrix A into the matrix M at index (row,col) for the fundamental linear system. ;  ; void PutCIntoAt (TMatrixDBase &M, Int_t row, Int_t col) override;  Insert the constraint matrix C into the matrix M at index (row,col) for the fundamental linear system. ;  ; void PutQIntoAt (TMatrixDBase &M, Int_t row, Int_t col) override;  Insert the Hessian Q into the matrix M at index (row,col) for the fundamental linear system. ;  ; void Qmult (Double_t beta, TVectorD &y, Double_t alpha, const TVectorD &x) override;  calculate y = beta*y + alpha*(fQ*x) ;  ; void SetNonZeros (Int_t nnzQ, Int_t nnzA, Int_t nnzC);  Allocate space for the appropriate number of non-zeros in the matrices. ;  ;  Public Member Functions inherited from TQpDataBase;  TQpDataBase ();  Default constructor. ;  ;  TQpDataBase (const TQpDataBase &another);  Copy constructor. ;  ;  TQpDataBase (Int_t nx, Int_t my, Int_t mz);  Constructor. ;  ;  ~TQpDataBase () override;  ; virtual TVectorD & GetBa ();  ; virtual TVectorD & GetG ();  ; virtual TVectorD & GetiSlowerBound ();  ; virtual TVectorD & GetiSupperBound ();  ; virtual TVectorD & GetiXlowerBound ();  ; virtual TVectorD & GetiXupperBound ();  ; virtual TVectorD & GetSlowerBound ();  ; virtual TVectorD & GetSupperBound ();  ; virtual TVectorD & GetXlowerBound ();  ; virtual TVectorD & GetXupperBound ();  ; TQpDataBase & operator= (const TQpDataBase &source);  Assignment operator. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't w",MatchSource.WIKI,doc/master/classTQpDataSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataSparse.html
https://root.cern/doc/master/classTQpDataSparse.html:3426,Modifiability,inherit,inherited,3426,"torD &y, Double_t alpha, const TVectorD &x) override;  calculate y = beta*y + alpha*(fQ*x) ;  ; void SetNonZeros (Int_t nnzQ, Int_t nnzA, Int_t nnzC);  Allocate space for the appropriate number of non-zeros in the matrices. ;  ;  Public Member Functions inherited from TQpDataBase;  TQpDataBase ();  Default constructor. ;  ;  TQpDataBase (const TQpDataBase &another);  Copy constructor. ;  ;  TQpDataBase (Int_t nx, Int_t my, Int_t mz);  Constructor. ;  ;  ~TQpDataBase () override;  ; virtual TVectorD & GetBa ();  ; virtual TVectorD & GetG ();  ; virtual TVectorD & GetiSlowerBound ();  ; virtual TVectorD & GetiSupperBound ();  ; virtual TVectorD & GetiXlowerBound ();  ; virtual TVectorD & GetiXupperBound ();  ; virtual TVectorD & GetSlowerBound ();  ; virtual TVectorD & GetSupperBound ();  ; virtual TVectorD & GetXlowerBound ();  ; virtual TVectorD & GetXupperBound ();  ; TQpDataBase & operator= (const TQpDataBase &source);  Assignment operator. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;",MatchSource.WIKI,doc/master/classTQpDataSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataSparse.html
https://root.cern/doc/master/classTQpDataSparse.html:4823,Modifiability,inherit,inheritance,4823,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTQpDataSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataSparse.html
https://root.cern/doc/master/classTQpDataSparse.html:7034,Modifiability,inherit,inherits,7034,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a b",MatchSource.WIKI,doc/master/classTQpDataSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataSparse.html
https://root.cern/doc/master/classTQpDataSparse.html:7151,Modifiability,inherit,inherits,7151,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not pro",MatchSource.WIKI,doc/master/classTQpDataSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataSparse.html
https://root.cern/doc/master/classTQpDataSparse.html:11074,Modifiability,inherit,inherited,11074,"eamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Protected Attributes; TMatrixDSparse fA;  ; TMatrixDSparse fC;  ; TMatrixDSparse fQ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObject",MatchSource.WIKI,doc/master/classTQpDataSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataSparse.html
https://root.cern/doc/master/classTQpDataSparse.html:11730,Modifiability,inherit,inherited,11730," char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Protected Attributes; TMatrixDSparse fA;  ; TMatrixDSparse fC;  ; TMatrixDSparse fQ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Public Attributes inherited from TQpDataBase; TVectorD fBa;  ; TVectorD fCloBound;  ; TVectorD fCloIndex;  ; TVectorD fCupBound;  ; TVectorD fCupIndex;  ; TVectorD fG;  ; Int_t fMy;  ; Int_t fMz;  ; Int_t fNx;  ; TVectorD fXloBound;  ; TVectorD fXloIndex;  ; TVectorD fXupBound;  ; TVectorD fXupIndex;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Pr",MatchSource.WIKI,doc/master/classTQpDataSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataSparse.html
https://root.cern/doc/master/classTQpDataSparse.html:12235,Modifiability,inherit,inherited,12235,"1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Public Attributes inherited from TQpDataBase; TVectorD fBa;  ; TVectorD fCloBound;  ; TVectorD fCloIndex;  ; TVectorD fCupBound;  ; TVectorD fCupIndex;  ; TVectorD fG;  ; Int_t fMy;  ; Int_t fMz;  ; Int_t fNx;  ; TVectorD fXloBound;  ; TVectorD fXloIndex;  ; TVectorD fXupBound;  ; TVectorD fXupIndex;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TQpDataBase; static void RandomlyChooseBoundedVariables (TVectorD &x, TVectorD &dualx, TVectorD &blx, TVectorD &ixlow, TVectorD &bux, TVectorD &ixupp, Double_t &ix, Double_t percentLowerOnly, Double_t percentUpperOnly, Double_t percentBound);  Randomly choose x and its boundaries. ;  . #include <TQpDataSparse.h>. Inheritance diagram for TQpDataSparse:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQpDataSparse() [1/4]. TQpDataSparse::TQpDataSparse ; (; ). inline . Definition at line 71 of file TQpDataSparse.h. ◆ TQpDataSparse() [2/",MatchSource.WIKI,doc/master/classTQpDataSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataSparse.html
https://root.cern/doc/master/classTQpDataSparse.html:12539,Modifiability,inherit,inherited,12539,"1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Public Attributes inherited from TQpDataBase; TVectorD fBa;  ; TVectorD fCloBound;  ; TVectorD fCloIndex;  ; TVectorD fCupBound;  ; TVectorD fCupIndex;  ; TVectorD fG;  ; Int_t fMy;  ; Int_t fMz;  ; Int_t fNx;  ; TVectorD fXloBound;  ; TVectorD fXloIndex;  ; TVectorD fXupBound;  ; TVectorD fXupIndex;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TQpDataBase; static void RandomlyChooseBoundedVariables (TVectorD &x, TVectorD &dualx, TVectorD &blx, TVectorD &ixlow, TVectorD &bux, TVectorD &ixupp, Double_t &ix, Double_t percentLowerOnly, Double_t percentUpperOnly, Double_t percentBound);  Randomly choose x and its boundaries. ;  . #include <TQpDataSparse.h>. Inheritance diagram for TQpDataSparse:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQpDataSparse() [1/4]. TQpDataSparse::TQpDataSparse ; (; ). inline . Definition at line 71 of file TQpDataSparse.h. ◆ TQpDataSparse() [2/",MatchSource.WIKI,doc/master/classTQpDataSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataSparse.html
https://root.cern/doc/master/classTQpDataSparse.html:12638,Modifiability,inherit,inherited,12638,"1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Public Attributes inherited from TQpDataBase; TVectorD fBa;  ; TVectorD fCloBound;  ; TVectorD fCloIndex;  ; TVectorD fCupBound;  ; TVectorD fCupIndex;  ; TVectorD fG;  ; Int_t fMy;  ; Int_t fMz;  ; Int_t fNx;  ; TVectorD fXloBound;  ; TVectorD fXloIndex;  ; TVectorD fXupBound;  ; TVectorD fXupIndex;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TQpDataBase; static void RandomlyChooseBoundedVariables (TVectorD &x, TVectorD &dualx, TVectorD &blx, TVectorD &ixlow, TVectorD &bux, TVectorD &ixupp, Double_t &ix, Double_t percentLowerOnly, Double_t percentUpperOnly, Double_t percentBound);  Randomly choose x and its boundaries. ;  . #include <TQpDataSparse.h>. Inheritance diagram for TQpDataSparse:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQpDataSparse() [1/4]. TQpDataSparse::TQpDataSparse ; (; ). inline . Definition at line 71 of file TQpDataSparse.h. ◆ TQpDataSparse() [2/",MatchSource.WIKI,doc/master/classTQpDataSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataSparse.html
https://root.cern/doc/master/classTQpDataSparse.html:12856,Modifiability,inherit,inherited,12856,";  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Public Attributes inherited from TQpDataBase; TVectorD fBa;  ; TVectorD fCloBound;  ; TVectorD fCloIndex;  ; TVectorD fCupBound;  ; TVectorD fCupIndex;  ; TVectorD fG;  ; Int_t fMy;  ; Int_t fMz;  ; Int_t fNx;  ; TVectorD fXloBound;  ; TVectorD fXloIndex;  ; TVectorD fXupBound;  ; TVectorD fXupIndex;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TQpDataBase; static void RandomlyChooseBoundedVariables (TVectorD &x, TVectorD &dualx, TVectorD &blx, TVectorD &ixlow, TVectorD &bux, TVectorD &ixupp, Double_t &ix, Double_t percentLowerOnly, Double_t percentUpperOnly, Double_t percentBound);  Randomly choose x and its boundaries. ;  . #include <TQpDataSparse.h>. Inheritance diagram for TQpDataSparse:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQpDataSparse() [1/4]. TQpDataSparse::TQpDataSparse ; (; ). inline . Definition at line 71 of file TQpDataSparse.h. ◆ TQpDataSparse() [2/4]. TQpDataSparse::TQpDataSparse ; (; Int_t ; nx, . Int_t ; my, . Int_t ; mz . ). Constructor. ; Definition at line 58 of file TQpDataSparse.cxx. ◆ TQpDataSparse() [3/4]. TQpDataSparse::TQpDataSparse ; (; TVectorD & ; c, . TMatrixDSparse & ; Q, . TVectorD & ; xlow, . TVectorD & ; ixlow, . TVectorD & ; xupp, . TVectorD & ; ixupp, . TMatrixDSparse & ; A, . TVectorD & ; bA, . TMatrixDSparse & ; C, . TVectorD & ; clow, . TVectorD & ; iclow, . TVectorD & ; cupp, . TVector",MatchSource.WIKI,doc/master/classTQpDataSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataSparse.html
https://root.cern/doc/master/classTQpDataSparse.html:6665,Security,hash,hash,6665," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other obje",MatchSource.WIKI,doc/master/classTQpDataSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpDataSparse.html
https://root.cern/doc/master/classTQpLinSolverBase.html:3747,Availability,error,error,3747,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTQpLinSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpLinSolverBase.html
https://root.cern/doc/master/classTQpLinSolverBase.html:3836,Availability,error,error,3836,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTQpLinSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpLinSolverBase.html
https://root.cern/doc/master/classTQpLinSolverBase.html:3991,Availability,error,error,3991,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTQpLinSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpLinSolverBase.html
https://root.cern/doc/master/classTQpLinSolverBase.html:4288,Availability,error,error,4288,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTQpLinSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpLinSolverBase.html
https://root.cern/doc/master/classTQpLinSolverBase.html:8962,Availability,error,error,8962,"ead (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Protected Attributes; TVectorD fCloIndex;  ; TVectorD fCupIndex;  ; TVectorD fDd;  ; TVectorD fDq;  ; TQpProbBase * fFactory;  ; Int_t fMclo;  ; Int_t fMcup;  ; Int_t fMy;  ; Int_t fMz;  ; TVectorD fNomegaInv;  ; Int_t fNx;  ; Int_t fNxlo;  ; Int_t fNxup;  ; TVectorD fRhs;  ; TVectorD fXloIndex;  ; TVectorD fXupIndex;  . Additional I",MatchSource.WIKI,doc/master/classTQpLinSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpLinSolverBase.html
https://root.cern/doc/master/classTQpLinSolverBase.html:14838,Availability,recover,recovers,14838,"D & ; xdiag). pure virtual . Implemented in TQpLinSolverDens, and TQpLinSolverSparse. ◆ PutZDiagonal(). virtual void TQpLinSolverBase::PutZDiagonal ; (; TVectorD & ; zdiag). pure virtual . Implemented in TQpLinSolverDens, and TQpLinSolverSparse. ◆ SeparateVars(). void TQpLinSolverBase::SeparateVars ; (; TVectorD & ; x_in, . TVectorD & ; y_in, . TVectorD & ; z_in, . TVectorD & ; vars_in . ). virtual . Extracts three component vectors from a given aggregated vector. ; vars_in (input) aggregated vector x_in (output) first part of vars y_in (output) middle part of vars z_in (output) last part of vars ; Definition at line 302 of file TQpLinSolverBase.cxx. ◆ Solve(). void TQpLinSolverBase::Solve ; (; TQpDataBase * ; prob, . TQpVar * ; vars, . TQpResidual * ; res, . TQpVar * ; step . ). virtual . Solves the system for a given set of residuals. ; Assembles the right-hand side appropriate to the matrix factored in factor, solves the system using the factorization produced there, partitions the solution vector into step components, then recovers the step components eliminated during the block elimination that produced the augmented system form . ; Definition at line 162 of file TQpLinSolverBase.cxx. ◆ SolveCompressed(). virtual void TQpLinSolverBase::SolveCompressed ; (; TVectorD & ; rhs). pure virtual . Implemented in TQpLinSolverDens, and TQpLinSolverSparse. ◆ SolveXYZS(). void TQpLinSolverBase::SolveXYZS ; (; TVectorD & ; stepx, . TVectorD & ; stepy, . TVectorD & ; stepz, . TVectorD & ; steps, . TVectorD & ; ztemp, . TQpDataBase * ; data . ). virtual . Assemble right-hand side of augmented system and call SolveCompressed to solve it. ; Definition at line 261 of file TQpLinSolverBase.cxx. Member Data Documentation. ◆ fCloIndex. TVectorD TQpLinSolverBase::fCloIndex. protected . Definition at line 84 of file TQpLinSolverBase.h. ◆ fCupIndex. TVectorD TQpLinSolverBase::fCupIndex. protected . Definition at line 82 of file TQpLinSolverBase.h. ◆ fDd. TVectorD TQpLinSolverBase::fDd.",MatchSource.WIKI,doc/master/classTQpLinSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpLinSolverBase.html
https://root.cern/doc/master/classTQpLinSolverBase.html:3753,Integrability,message,message,3753,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTQpLinSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpLinSolverBase.html
https://root.cern/doc/master/classTQpLinSolverBase.html:4294,Integrability,message,message,4294,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTQpLinSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpLinSolverBase.html
https://root.cern/doc/master/classTQpLinSolverBase.html:5496,Integrability,message,message,5496,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const ch",MatchSource.WIKI,doc/master/classTQpLinSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpLinSolverBase.html
https://root.cern/doc/master/classTQpLinSolverBase.html:8968,Integrability,message,message,8968,"ead (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Protected Attributes; TVectorD fCloIndex;  ; TVectorD fCupIndex;  ; TVectorD fDd;  ; TVectorD fDq;  ; TQpProbBase * fFactory;  ; Int_t fMclo;  ; Int_t fMcup;  ; Int_t fMy;  ; Int_t fMz;  ; TVectorD fNomegaInv;  ; Int_t fNx;  ; Int_t fNxlo;  ; Int_t fNxup;  ; TVectorD fRhs;  ; TVectorD fXloIndex;  ; TVectorD fXupIndex;  . Additional I",MatchSource.WIKI,doc/master/classTQpLinSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpLinSolverBase.html
https://root.cern/doc/master/classTQpLinSolverBase.html:9341,Integrability,message,message,9341,"rimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Protected Attributes; TVectorD fCloIndex;  ; TVectorD fCupIndex;  ; TVectorD fDd;  ; TVectorD fDq;  ; TQpProbBase * fFactory;  ; Int_t fMclo;  ; Int_t fMcup;  ; Int_t fMy;  ; Int_t fMz;  ; TVectorD fNomegaInv;  ; Int_t fNx;  ; Int_t fNxlo;  ; Int_t fNxup;  ; TVectorD fRhs;  ; TVectorD fXloIndex;  ; TVectorD fXupIndex;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( ",MatchSource.WIKI,doc/master/classTQpLinSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpLinSolverBase.html
https://root.cern/doc/master/classTQpLinSolverBase.html:12960,Integrability,rout,routine,12960,"() [3/3]. TQpLinSolverBase::TQpLinSolverBase ; (; const TQpLinSolverBase & ; another). Copy constructor. ; Definition at line 105 of file TQpLinSolverBase.cxx. ◆ ~TQpLinSolverBase(). TQpLinSolverBase::~TQpLinSolverBase ; (; ). inlineoverride . Definition at line 98 of file TQpLinSolverBase.h. Member Function Documentation. ◆ ComputeDiagonals(). void TQpLinSolverBase::ComputeDiagonals ; (; TVectorD & ; dd, . TVectorD & ; omega, . TVectorD & ; t, . TVectorD & ; lambda, . TVectorD & ; u, . TVectorD & ; pi, . TVectorD & ; v, . TVectorD & ; gamma, . TVectorD & ; w, . TVectorD & ; phi . ). virtual . Computes the diagonal matrices in the augmented system from the current set of variables. ; Definition at line 140 of file TQpLinSolverBase.cxx. ◆ Factor(). void TQpLinSolverBase::Factor ; (; TQpDataBase * ; prob, . TQpVar * ; vars . ). virtual . Sets up the matrix for the main linear system in ""augmented system"" form. ; The actual factorization is performed by a routine specific to either the sparse or dense case ; Reimplemented in TQpLinSolverDens, and TQpLinSolverSparse.; Definition at line 117 of file TQpLinSolverBase.cxx. ◆ JoinRHS(). void TQpLinSolverBase::JoinRHS ; (; TVectorD & ; rhs_out, . TVectorD & ; rhs1_in, . TVectorD & ; rhs2_in, . TVectorD & ; rhs3_in . ). virtual . Assembles a single vector object from three given vectors . ; rhs_out (output) final joined vector rhs1_in (input) first part of rhs rhs2_in (input) middle part of rhs rhs3_in (input) last part of rhs . ; Definition at line 288 of file TQpLinSolverBase.cxx. ◆ operator=(). TQpLinSolverBase & TQpLinSolverBase::operator= ; (; const TQpLinSolverBase & ; source). Assignment operator. ; Definition at line 312 of file TQpLinSolverBase.cxx. ◆ PutXDiagonal(). virtual void TQpLinSolverBase::PutXDiagonal ; (; TVectorD & ; xdiag). pure virtual . Implemented in TQpLinSolverDens, and TQpLinSolverSparse. ◆ PutZDiagonal(). virtual void TQpLinSolverBase::PutZDiagonal ; (; TVectorD & ; zdiag). pure virtual . Implement",MatchSource.WIKI,doc/master/classTQpLinSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpLinSolverBase.html
https://root.cern/doc/master/classTQpLinSolverBase.html:890,Modifiability,variab,variables,890,". ROOT: TQpLinSolverBase Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Attributes |; List of all members ; TQpLinSolverBase Class Referenceabstract. ; Implementation of main solver for linear systems. ; Definition at line 66 of file TQpLinSolverBase.h. Public Member Functions;  TQpLinSolverBase ();  Default constructor. ;  ;  TQpLinSolverBase (const TQpLinSolverBase &another);  Copy constructor. ;  ;  TQpLinSolverBase (TQpProbBase *factory, TQpDataBase *data);  Constructor. ;  ;  ~TQpLinSolverBase () override;  ; virtual void ComputeDiagonals (TVectorD &dd, TVectorD &omega, TVectorD &t, TVectorD &lambda, TVectorD &u, TVectorD &pi, TVectorD &v, TVectorD &gamma, TVectorD &w, TVectorD &phi);  Computes the diagonal matrices in the augmented system from the current set of variables. ;  ; virtual void Factor (TQpDataBase *prob, TQpVar *vars);  Sets up the matrix for the main linear system in ""augmented system"" form. ;  ; virtual void JoinRHS (TVectorD &rhs, TVectorD &rhs1, TVectorD &rhs2, TVectorD &rhs3);  Assembles a single vector object from three given vectors . ;  ; TQpLinSolverBase & operator= (const TQpLinSolverBase &source);  Assignment operator. ;  ; virtual void PutXDiagonal (TVectorD &xdiag)=0;  ; virtual void PutZDiagonal (TVectorD &zdiag)=0;  ; virtual void SeparateVars (TVectorD &vars1, TVectorD &vars2, TVectorD &vars3, TVectorD &vars);  Extracts three component vectors from a given aggregated vector. ;  ; virtual void Solve (TQpDataBase *prob, TQpVar *vars, TQpResidual *resids, TQpVar *step);  Solves the system for a given set of residuals. ;  ; virtual void SolveCompressed (TVectorD &rhs)=0;  ; virtual void SolveXYZS (TVectorD &stepx, TVectorD &stepy, TVectorD &stepz, TVectorD &steps, TVectorD &ztemp, TQpDataBase *data);  Assemble right-hand side of augmented system and call SolveCompressed to solve it. ;  ;  Public Member Functions inherited from ",MatchSource.WIKI,doc/master/classTQpLinSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpLinSolverBase.html
https://root.cern/doc/master/classTQpLinSolverBase.html:1986,Modifiability,inherit,inherited,1986,"r system in ""augmented system"" form. ;  ; virtual void JoinRHS (TVectorD &rhs, TVectorD &rhs1, TVectorD &rhs2, TVectorD &rhs3);  Assembles a single vector object from three given vectors . ;  ; TQpLinSolverBase & operator= (const TQpLinSolverBase &source);  Assignment operator. ;  ; virtual void PutXDiagonal (TVectorD &xdiag)=0;  ; virtual void PutZDiagonal (TVectorD &zdiag)=0;  ; virtual void SeparateVars (TVectorD &vars1, TVectorD &vars2, TVectorD &vars3, TVectorD &vars);  Extracts three component vectors from a given aggregated vector. ;  ; virtual void Solve (TQpDataBase *prob, TQpVar *vars, TQpResidual *resids, TQpVar *step);  Solves the system for a given set of residuals. ;  ; virtual void SolveCompressed (TVectorD &rhs)=0;  ; virtual void SolveXYZS (TVectorD &stepx, TVectorD &stepy, TVectorD &stepz, TVectorD &steps, TVectorD &ztemp, TQpDataBase *data);  Assemble right-hand side of augmented system and call SolveCompressed to solve it. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;",MatchSource.WIKI,doc/master/classTQpLinSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpLinSolverBase.html
https://root.cern/doc/master/classTQpLinSolverBase.html:3383,Modifiability,inherit,inheritance,3383,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTQpLinSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpLinSolverBase.html
https://root.cern/doc/master/classTQpLinSolverBase.html:5594,Modifiability,inherit,inherits,5594,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a b",MatchSource.WIKI,doc/master/classTQpLinSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpLinSolverBase.html
https://root.cern/doc/master/classTQpLinSolverBase.html:5711,Modifiability,inherit,inherits,5711,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not pro",MatchSource.WIKI,doc/master/classTQpLinSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpLinSolverBase.html
https://root.cern/doc/master/classTQpLinSolverBase.html:9990,Modifiability,inherit,inherited,9990,"Int_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Protected Attributes; TVectorD fCloIndex;  ; TVectorD fCupIndex;  ; TVectorD fDd;  ; TVectorD fDq;  ; TQpProbBase * fFactory;  ; Int_t fMclo;  ; Int_t fMcup;  ; Int_t fMy;  ; Int_t fMz;  ; TVectorD fNomegaInv;  ; Int_t fNx;  ; Int_t fNxlo;  ; Int_t fNxup;  ; TVectorD fRhs;  ; TVectorD fXloIndex;  ; TVectorD fXupIndex;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObject",MatchSource.WIKI,doc/master/classTQpLinSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpLinSolverBase.html
https://root.cern/doc/master/classTQpLinSolverBase.html:10646,Modifiability,inherit,inherited,10646,";  ; Int_t fMclo;  ; Int_t fMcup;  ; Int_t fMy;  ; Int_t fMz;  ; TVectorD fNomegaInv;  ; Int_t fNx;  ; Int_t fNxlo;  ; Int_t fNxup;  ; TVectorD fRhs;  ; TVectorD fXloIndex;  ; TVectorD fXupIndex;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TQpLinSolverBase.h>. Inheritance diagram for TQpLinSolverBase:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQpLinSolverBase() [1/3]. TQpLinSolverBase::TQpLinSolverBase ; (; ). Default constructor. ; Definition a",MatchSource.WIKI,doc/master/classTQpLinSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpLinSolverBase.html
https://root.cern/doc/master/classTQpLinSolverBase.html:11149,Modifiability,inherit,inherited,11149," 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TQpLinSolverBase.h>. Inheritance diagram for TQpLinSolverBase:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQpLinSolverBase() [1/3]. TQpLinSolverBase::TQpLinSolverBase ; (; ). Default constructor. ; Definition at line 58 of file TQpLinSolverBase.cxx. ◆ TQpLinSolverBase() [2/3]. TQpLinSolverBase::TQpLinSolverBase ; (; TQpProbBase * ; factory, . TQpDataBase * ; data . ). Constructor. ; Definition at line 74 of file TQpLinSolverBase.cxx. ◆ TQpLinSolverBase() [3/3]. TQpLinSolverBase::TQpLinSolverBase ; (; const TQpLinSolverBase & ; another). Copy constructor. ; Definition at line 105 of file TQpLinSolverBase.cxx. ◆ ~TQpLinSolverBase(). TQpLinSolverBase::~TQpLinSolverBase ; (; ). inlineoverride . Definition at line 98 of fi",MatchSource.WIKI,doc/master/classTQpLinSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpLinSolverBase.html
https://root.cern/doc/master/classTQpLinSolverBase.html:11248,Modifiability,inherit,inherited,11248," 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TQpLinSolverBase.h>. Inheritance diagram for TQpLinSolverBase:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQpLinSolverBase() [1/3]. TQpLinSolverBase::TQpLinSolverBase ; (; ). Default constructor. ; Definition at line 58 of file TQpLinSolverBase.cxx. ◆ TQpLinSolverBase() [2/3]. TQpLinSolverBase::TQpLinSolverBase ; (; TQpProbBase * ; factory, . TQpDataBase * ; data . ). Constructor. ; Definition at line 74 of file TQpLinSolverBase.cxx. ◆ TQpLinSolverBase() [3/3]. TQpLinSolverBase::TQpLinSolverBase ; (; const TQpLinSolverBase & ; another). Copy constructor. ; Definition at line 105 of file TQpLinSolverBase.cxx. ◆ ~TQpLinSolverBase(). TQpLinSolverBase::~TQpLinSolverBase ; (; ). inlineoverride . Definition at line 98 of fi",MatchSource.WIKI,doc/master/classTQpLinSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpLinSolverBase.html
https://root.cern/doc/master/classTQpLinSolverBase.html:12673,Modifiability,variab,variables,12673,"n. ◆ TQpLinSolverBase() [1/3]. TQpLinSolverBase::TQpLinSolverBase ; (; ). Default constructor. ; Definition at line 58 of file TQpLinSolverBase.cxx. ◆ TQpLinSolverBase() [2/3]. TQpLinSolverBase::TQpLinSolverBase ; (; TQpProbBase * ; factory, . TQpDataBase * ; data . ). Constructor. ; Definition at line 74 of file TQpLinSolverBase.cxx. ◆ TQpLinSolverBase() [3/3]. TQpLinSolverBase::TQpLinSolverBase ; (; const TQpLinSolverBase & ; another). Copy constructor. ; Definition at line 105 of file TQpLinSolverBase.cxx. ◆ ~TQpLinSolverBase(). TQpLinSolverBase::~TQpLinSolverBase ; (; ). inlineoverride . Definition at line 98 of file TQpLinSolverBase.h. Member Function Documentation. ◆ ComputeDiagonals(). void TQpLinSolverBase::ComputeDiagonals ; (; TVectorD & ; dd, . TVectorD & ; omega, . TVectorD & ; t, . TVectorD & ; lambda, . TVectorD & ; u, . TVectorD & ; pi, . TVectorD & ; v, . TVectorD & ; gamma, . TVectorD & ; w, . TVectorD & ; phi . ). virtual . Computes the diagonal matrices in the augmented system from the current set of variables. ; Definition at line 140 of file TQpLinSolverBase.cxx. ◆ Factor(). void TQpLinSolverBase::Factor ; (; TQpDataBase * ; prob, . TQpVar * ; vars . ). virtual . Sets up the matrix for the main linear system in ""augmented system"" form. ; The actual factorization is performed by a routine specific to either the sparse or dense case ; Reimplemented in TQpLinSolverDens, and TQpLinSolverSparse.; Definition at line 117 of file TQpLinSolverBase.cxx. ◆ JoinRHS(). void TQpLinSolverBase::JoinRHS ; (; TVectorD & ; rhs_out, . TVectorD & ; rhs1_in, . TVectorD & ; rhs2_in, . TVectorD & ; rhs3_in . ). virtual . Assembles a single vector object from three given vectors . ; rhs_out (output) final joined vector rhs1_in (input) first part of rhs rhs2_in (input) middle part of rhs rhs3_in (input) last part of rhs . ; Definition at line 288 of file TQpLinSolverBase.cxx. ◆ operator=(). TQpLinSolverBase & TQpLinSolverBase::operator= ; (; const TQpLinSolverBase & ; so",MatchSource.WIKI,doc/master/classTQpLinSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpLinSolverBase.html
https://root.cern/doc/master/classTQpLinSolverBase.html:12945,Performance,perform,performed,12945,"() [3/3]. TQpLinSolverBase::TQpLinSolverBase ; (; const TQpLinSolverBase & ; another). Copy constructor. ; Definition at line 105 of file TQpLinSolverBase.cxx. ◆ ~TQpLinSolverBase(). TQpLinSolverBase::~TQpLinSolverBase ; (; ). inlineoverride . Definition at line 98 of file TQpLinSolverBase.h. Member Function Documentation. ◆ ComputeDiagonals(). void TQpLinSolverBase::ComputeDiagonals ; (; TVectorD & ; dd, . TVectorD & ; omega, . TVectorD & ; t, . TVectorD & ; lambda, . TVectorD & ; u, . TVectorD & ; pi, . TVectorD & ; v, . TVectorD & ; gamma, . TVectorD & ; w, . TVectorD & ; phi . ). virtual . Computes the diagonal matrices in the augmented system from the current set of variables. ; Definition at line 140 of file TQpLinSolverBase.cxx. ◆ Factor(). void TQpLinSolverBase::Factor ; (; TQpDataBase * ; prob, . TQpVar * ; vars . ). virtual . Sets up the matrix for the main linear system in ""augmented system"" form. ; The actual factorization is performed by a routine specific to either the sparse or dense case ; Reimplemented in TQpLinSolverDens, and TQpLinSolverSparse.; Definition at line 117 of file TQpLinSolverBase.cxx. ◆ JoinRHS(). void TQpLinSolverBase::JoinRHS ; (; TVectorD & ; rhs_out, . TVectorD & ; rhs1_in, . TVectorD & ; rhs2_in, . TVectorD & ; rhs3_in . ). virtual . Assembles a single vector object from three given vectors . ; rhs_out (output) final joined vector rhs1_in (input) first part of rhs rhs2_in (input) middle part of rhs rhs3_in (input) last part of rhs . ; Definition at line 288 of file TQpLinSolverBase.cxx. ◆ operator=(). TQpLinSolverBase & TQpLinSolverBase::operator= ; (; const TQpLinSolverBase & ; source). Assignment operator. ; Definition at line 312 of file TQpLinSolverBase.cxx. ◆ PutXDiagonal(). virtual void TQpLinSolverBase::PutXDiagonal ; (; TVectorD & ; xdiag). pure virtual . Implemented in TQpLinSolverDens, and TQpLinSolverSparse. ◆ PutZDiagonal(). virtual void TQpLinSolverBase::PutZDiagonal ; (; TVectorD & ; zdiag). pure virtual . Implement",MatchSource.WIKI,doc/master/classTQpLinSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpLinSolverBase.html
https://root.cern/doc/master/classTQpLinSolverBase.html:14838,Safety,recover,recovers,14838,"D & ; xdiag). pure virtual . Implemented in TQpLinSolverDens, and TQpLinSolverSparse. ◆ PutZDiagonal(). virtual void TQpLinSolverBase::PutZDiagonal ; (; TVectorD & ; zdiag). pure virtual . Implemented in TQpLinSolverDens, and TQpLinSolverSparse. ◆ SeparateVars(). void TQpLinSolverBase::SeparateVars ; (; TVectorD & ; x_in, . TVectorD & ; y_in, . TVectorD & ; z_in, . TVectorD & ; vars_in . ). virtual . Extracts three component vectors from a given aggregated vector. ; vars_in (input) aggregated vector x_in (output) first part of vars y_in (output) middle part of vars z_in (output) last part of vars ; Definition at line 302 of file TQpLinSolverBase.cxx. ◆ Solve(). void TQpLinSolverBase::Solve ; (; TQpDataBase * ; prob, . TQpVar * ; vars, . TQpResidual * ; res, . TQpVar * ; step . ). virtual . Solves the system for a given set of residuals. ; Assembles the right-hand side appropriate to the matrix factored in factor, solves the system using the factorization produced there, partitions the solution vector into step components, then recovers the step components eliminated during the block elimination that produced the augmented system form . ; Definition at line 162 of file TQpLinSolverBase.cxx. ◆ SolveCompressed(). virtual void TQpLinSolverBase::SolveCompressed ; (; TVectorD & ; rhs). pure virtual . Implemented in TQpLinSolverDens, and TQpLinSolverSparse. ◆ SolveXYZS(). void TQpLinSolverBase::SolveXYZS ; (; TVectorD & ; stepx, . TVectorD & ; stepy, . TVectorD & ; stepz, . TVectorD & ; steps, . TVectorD & ; ztemp, . TQpDataBase * ; data . ). virtual . Assemble right-hand side of augmented system and call SolveCompressed to solve it. ; Definition at line 261 of file TQpLinSolverBase.cxx. Member Data Documentation. ◆ fCloIndex. TVectorD TQpLinSolverBase::fCloIndex. protected . Definition at line 84 of file TQpLinSolverBase.h. ◆ fCupIndex. TVectorD TQpLinSolverBase::fCupIndex. protected . Definition at line 82 of file TQpLinSolverBase.h. ◆ fDd. TVectorD TQpLinSolverBase::fDd.",MatchSource.WIKI,doc/master/classTQpLinSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpLinSolverBase.html
https://root.cern/doc/master/classTQpLinSolverBase.html:5225,Security,hash,hash,5225," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other obje",MatchSource.WIKI,doc/master/classTQpLinSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpLinSolverBase.html
https://root.cern/doc/master/classTQpProbBase.html:3181,Availability,error,error,3181,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTQpProbBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpProbBase.html
https://root.cern/doc/master/classTQpProbBase.html:3270,Availability,error,error,3270,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTQpProbBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpProbBase.html
https://root.cern/doc/master/classTQpProbBase.html:3425,Availability,error,error,3425,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTQpProbBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpProbBase.html
https://root.cern/doc/master/classTQpProbBase.html:3722,Availability,error,error,3722,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTQpProbBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpProbBase.html
https://root.cern/doc/master/classTQpProbBase.html:8396,Availability,error,error,8396,"ead (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Public Attributes; Int_t fMy;  ; Int_t fMz;  ; Int_t fNx;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = ",MatchSource.WIKI,doc/master/classTQpProbBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpProbBase.html
https://root.cern/doc/master/classTQpProbBase.html:3187,Integrability,message,message,3187,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTQpProbBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpProbBase.html
https://root.cern/doc/master/classTQpProbBase.html:3728,Integrability,message,message,3728,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTQpProbBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpProbBase.html
https://root.cern/doc/master/classTQpProbBase.html:4930,Integrability,message,message,4930,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const ch",MatchSource.WIKI,doc/master/classTQpProbBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpProbBase.html
https://root.cern/doc/master/classTQpProbBase.html:8402,Integrability,message,message,8402,"ead (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Public Attributes; Int_t fMy;  ; Int_t fMz;  ; Int_t fNx;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = ",MatchSource.WIKI,doc/master/classTQpProbBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpProbBase.html
https://root.cern/doc/master/classTQpProbBase.html:8775,Integrability,message,message,8775,"rimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Public Attributes; Int_t fMy;  ; Int_t fMz;  ; Int_t fNx;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL",MatchSource.WIKI,doc/master/classTQpProbBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpProbBase.html
https://root.cern/doc/master/classTQpProbBase.html:1420,Modifiability,inherit,inherited,1420," ;. Definition at line 88 of file TQpProbBase.h. Public Member Functions;  TQpProbBase ();  Default constructor. ;  ;  TQpProbBase (const TQpProbBase &another);  Copy constructor. ;  ;  TQpProbBase (Int_t nx, Int_t my, Int_t mz);  Constructor. ;  ;  ~TQpProbBase () override;  ; virtual void JoinRHS (TVectorD &rhs_in, TVectorD &rhs1_in, TVectorD &rhs2_in, TVectorD &rhs3_in)=0;  ; virtual TQpDataBase * MakeData (TVectorD &c, TMatrixDBase &Q_in, TVectorD &xlo, TVectorD &ixlo, TVectorD &xup, TVectorD &ixup, TMatrixDBase &A_in, TVectorD &bA, TMatrixDBase &C_in, TVectorD &clo, TVectorD &iclo, TVectorD &cup, TVectorD &icup)=0;  ; virtual TQpLinSolverBase * MakeLinSys (const TQpDataBase *data)=0;  ; virtual TQpResidual * MakeResiduals (const TQpDataBase *data)=0;  ; virtual TQpVar * MakeVariables (const TQpDataBase *data)=0;  ; TQpProbBase & operator= (const TQpProbBase &source);  Assignment operator. ;  ; virtual void SeparateVars (TVectorD &x_in, TVectorD &y_in, TVectorD &z_in, TVectorD &vars_in)=0;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (cons",MatchSource.WIKI,doc/master/classTQpProbBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpProbBase.html
https://root.cern/doc/master/classTQpProbBase.html:2817,Modifiability,inherit,inheritance,2817,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTQpProbBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpProbBase.html
https://root.cern/doc/master/classTQpProbBase.html:5028,Modifiability,inherit,inherits,5028,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a b",MatchSource.WIKI,doc/master/classTQpProbBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpProbBase.html
https://root.cern/doc/master/classTQpProbBase.html:5145,Modifiability,inherit,inherits,5145,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not pro",MatchSource.WIKI,doc/master/classTQpProbBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpProbBase.html
https://root.cern/doc/master/classTQpProbBase.html:9162,Modifiability,inherit,inherited,9162,"lass TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Public Attributes; Int_t fMy;  ; Int_t fMz;  ; Int_t fNx;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObject",MatchSource.WIKI,doc/master/classTQpProbBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpProbBase.html
https://root.cern/doc/master/classTQpProbBase.html:9818,Modifiability,inherit,inherited,9818," virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Public Attributes; Int_t fMy;  ; Int_t fMz;  ; Int_t fNx;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TQpProbBase.h>. Inheritance diagram for TQpProbBase:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQpProbBase() [1/3]. TQpProbBase::TQpProbBase ; (; ). Default constructor. ; Definition at line 63 of file TQpProb",MatchSource.WIKI,doc/master/classTQpProbBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpProbBase.html
https://root.cern/doc/master/classTQpProbBase.html:10321,Modifiability,inherit,inherited,10321," 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TQpProbBase.h>. Inheritance diagram for TQpProbBase:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQpProbBase() [1/3]. TQpProbBase::TQpProbBase ; (; ). Default constructor. ; Definition at line 63 of file TQpProbBase.cxx. ◆ TQpProbBase() [2/3]. TQpProbBase::TQpProbBase ; (; Int_t ; nx, . Int_t ; my, . Int_t ; mz . ). Constructor. ; Definition at line 74 of file TQpProbBase.cxx. ◆ TQpProbBase() [3/3]. TQpProbBase::TQpProbBase ; (; const TQpProbBase & ; another). Copy constructor. ; Definition at line 85 of file TQpProbBase.cxx. ◆ ~TQpProbBase(). TQpProbBase::~TQpProbBase ; (; ). inlineoverride . Definition at line 100 of file TQpProbBase.h. Member Function Documentation. ◆ JoinRHS(). virtual void TQpProbBase::JoinRHS ; (",MatchSource.WIKI,doc/master/classTQpProbBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpProbBase.html
https://root.cern/doc/master/classTQpProbBase.html:10420,Modifiability,inherit,inherited,10420," 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TQpProbBase.h>. Inheritance diagram for TQpProbBase:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQpProbBase() [1/3]. TQpProbBase::TQpProbBase ; (; ). Default constructor. ; Definition at line 63 of file TQpProbBase.cxx. ◆ TQpProbBase() [2/3]. TQpProbBase::TQpProbBase ; (; Int_t ; nx, . Int_t ; my, . Int_t ; mz . ). Constructor. ; Definition at line 74 of file TQpProbBase.cxx. ◆ TQpProbBase() [3/3]. TQpProbBase::TQpProbBase ; (; const TQpProbBase & ; another). Copy constructor. ; Definition at line 85 of file TQpProbBase.cxx. ◆ ~TQpProbBase(). TQpProbBase::~TQpProbBase ; (; ). inlineoverride . Definition at line 100 of file TQpProbBase.h. Member Function Documentation. ◆ JoinRHS(). virtual void TQpProbBase::JoinRHS ; (",MatchSource.WIKI,doc/master/classTQpProbBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpProbBase.html
https://root.cern/doc/master/classTQpProbBase.html:4659,Security,hash,hash,4659," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other obje",MatchSource.WIKI,doc/master/classTQpProbBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpProbBase.html
https://root.cern/doc/master/classTQpResidual.html:4123,Availability,error,error,4123,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTQpResidual.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpResidual.html
https://root.cern/doc/master/classTQpResidual.html:4212,Availability,error,error,4212,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTQpResidual.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpResidual.html
https://root.cern/doc/master/classTQpResidual.html:4367,Availability,error,error,4367,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTQpResidual.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpResidual.html
https://root.cern/doc/master/classTQpResidual.html:4664,Availability,error,error,4664,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTQpResidual.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpResidual.html
https://root.cern/doc/master/classTQpResidual.html:9338,Availability,error,error,9338,"ead (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Public Attributes; TVectorD fRA;  ; TVectorD fRC;  ; TVectorD fRgamma;  ; TVectorD fRlambda;  ; TVectorD fRphi;  ; TVectorD fRpi;  ; TVectorD fRQ;  ; TVectorD fRt;  ; TVectorD fRu;  ; TVectorD fRv;  ; TVectorD fRw;  ; TVectorD fRz;  . Static Protected Member Functions; static void GondzioProjection (TVectorD &v, Double_t rmin, Double",MatchSource.WIKI,doc/master/classTQpResidual.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpResidual.html
https://root.cern/doc/master/classTQpResidual.html:4129,Integrability,message,message,4129,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTQpResidual.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpResidual.html
https://root.cern/doc/master/classTQpResidual.html:4670,Integrability,message,message,4670,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTQpResidual.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpResidual.html
https://root.cern/doc/master/classTQpResidual.html:5872,Integrability,message,message,5872,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const ch",MatchSource.WIKI,doc/master/classTQpResidual.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpResidual.html
https://root.cern/doc/master/classTQpResidual.html:9344,Integrability,message,message,9344,"ead (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Public Attributes; TVectorD fRA;  ; TVectorD fRC;  ; TVectorD fRgamma;  ; TVectorD fRlambda;  ; TVectorD fRphi;  ; TVectorD fRpi;  ; TVectorD fRQ;  ; TVectorD fRt;  ; TVectorD fRu;  ; TVectorD fRv;  ; TVectorD fRw;  ; TVectorD fRz;  . Static Protected Member Functions; static void GondzioProjection (TVectorD &v, Double_t rmin, Double",MatchSource.WIKI,doc/master/classTQpResidual.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpResidual.html
https://root.cern/doc/master/classTQpResidual.html:9717,Integrability,message,message,9717,"rimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Public Attributes; TVectorD fRA;  ; TVectorD fRC;  ; TVectorD fRgamma;  ; TVectorD fRlambda;  ; TVectorD fRphi;  ; TVectorD fRpi;  ; TVectorD fRQ;  ; TVectorD fRt;  ; TVectorD fRu;  ; TVectorD fRv;  ; TVectorD fRw;  ; TVectorD fRz;  . Static Protected Member Functions; static void GondzioProjection (TVectorD &v, Double_t rmin, Double_t rmax);  Replace each component r3_i of the complementarity component of the residuals by r3p_i-r3_i, where r3p_i is the projection of r3_i onto the box [rmin, rmax]. ;  . Protected Attributes; TVectorD fCloIndex;  ; TVectorD fCupIndex;  ; Double_t fDualityGap;  ; Double_t fMclo;  ; Double_t fMcup;  ; Int_t fMy;  ; Int_t fMz;  ; Int_t fNx;  ; Double_t fNxlo;  ; Double_t ",MatchSource.WIKI,doc/master/classTQpResidual.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpResidual.html
https://root.cern/doc/master/classTQpResidual.html:1169,Modifiability,variab,variables,1169," Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; Static Protected Member Functions |; Protected Attributes |; List of all members ; TQpResidual Class Reference. ; The Residuals class calculates and stores the quantities that appear on the right-hand side of the linear systems that arise at each interior-point iteration. ; These residuals can be partitioned into two fundamental categories: the components arising from the linear equations in the KKT conditions, and the components arising from the complementarity conditions. ; Definition at line 61 of file TQpResidual.h. Public Member Functions;  TQpResidual ();  Constructor. ;  ;  TQpResidual (const TQpResidual &another);  Copy constructor. ;  ;  TQpResidual (Int_t nx, Int_t my, Int_t mz, TVectorD &ixlow, TVectorD &ixupp, TVectorD &iclow, TVectorD &icupp);  Constructor. ;  ;  ~TQpResidual () override;  ; void Add_r3_xz_alpha (TQpVar *vars, Double_t alpha);  Modify the ""complementarity"" component of the residuals, by adding the pairwise products of the complementary variables plus a constant alpha to this term. ;  ; void CalcResids (TQpDataBase *problem, TQpVar *vars);  Calculate residuals, their norms, and duality complementarity gap, given a problem and variable set. ;  ; void Clear_r1r2 ();  set the noncomplementarity components of the residual (the terms arising from the linear equalities in the KKT conditions) to 0. ;  ; void Clear_r3 ();  set the complementarity component of the residuals to 0. ;  ; Double_t GetDualityGap ();  ; Double_t GetResidualNorm ();  ; TQpResidual & operator= (const TQpResidual &source);  Assignment operator. ;  ; void Project_r3 (Double_t rmin, Double_t rmax);  Perform the projection operation required by Gondzio algorithm: replace each component r3_i of the complementarity component of the residuals by r3p_i-r3_i, where r3p_i is the projection of r3_i onto the box [rmin, rmax]. ;  ; void Set_r3_xz_alpha (TQpVar *vars, Double_t alpha);  Set",MatchSource.WIKI,doc/master/classTQpResidual.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpResidual.html
https://root.cern/doc/master/classTQpResidual.html:1362,Modifiability,variab,variable,1362,"rence. ; The Residuals class calculates and stores the quantities that appear on the right-hand side of the linear systems that arise at each interior-point iteration. ; These residuals can be partitioned into two fundamental categories: the components arising from the linear equations in the KKT conditions, and the components arising from the complementarity conditions. ; Definition at line 61 of file TQpResidual.h. Public Member Functions;  TQpResidual ();  Constructor. ;  ;  TQpResidual (const TQpResidual &another);  Copy constructor. ;  ;  TQpResidual (Int_t nx, Int_t my, Int_t mz, TVectorD &ixlow, TVectorD &ixupp, TVectorD &iclow, TVectorD &icupp);  Constructor. ;  ;  ~TQpResidual () override;  ; void Add_r3_xz_alpha (TQpVar *vars, Double_t alpha);  Modify the ""complementarity"" component of the residuals, by adding the pairwise products of the complementary variables plus a constant alpha to this term. ;  ; void CalcResids (TQpDataBase *problem, TQpVar *vars);  Calculate residuals, their norms, and duality complementarity gap, given a problem and variable set. ;  ; void Clear_r1r2 ();  set the noncomplementarity components of the residual (the terms arising from the linear equalities in the KKT conditions) to 0. ;  ; void Clear_r3 ();  set the complementarity component of the residuals to 0. ;  ; Double_t GetDualityGap ();  ; Double_t GetResidualNorm ();  ; TQpResidual & operator= (const TQpResidual &source);  Assignment operator. ;  ; void Project_r3 (Double_t rmin, Double_t rmax);  Perform the projection operation required by Gondzio algorithm: replace each component r3_i of the complementarity component of the residuals by r3p_i-r3_i, where r3p_i is the projection of r3_i onto the box [rmin, rmax]. ;  ; void Set_r3_xz_alpha (TQpVar *vars, Double_t alpha);  Set the ""complementarity"" component of the residuals to the pairwise products of the complementary variables plus a constant alpha . ;  ; Bool_t ValidNonZeroPattern ();  Check if vector elements as selected",MatchSource.WIKI,doc/master/classTQpResidual.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpResidual.html
https://root.cern/doc/master/classTQpResidual.html:2188,Modifiability,variab,variables,2188," the pairwise products of the complementary variables plus a constant alpha to this term. ;  ; void CalcResids (TQpDataBase *problem, TQpVar *vars);  Calculate residuals, their norms, and duality complementarity gap, given a problem and variable set. ;  ; void Clear_r1r2 ();  set the noncomplementarity components of the residual (the terms arising from the linear equalities in the KKT conditions) to 0. ;  ; void Clear_r3 ();  set the complementarity component of the residuals to 0. ;  ; Double_t GetDualityGap ();  ; Double_t GetResidualNorm ();  ; TQpResidual & operator= (const TQpResidual &source);  Assignment operator. ;  ; void Project_r3 (Double_t rmin, Double_t rmax);  Perform the projection operation required by Gondzio algorithm: replace each component r3_i of the complementarity component of the residuals by r3p_i-r3_i, where r3p_i is the projection of r3_i onto the box [rmin, rmax]. ;  ; void Set_r3_xz_alpha (TQpVar *vars, Double_t alpha);  Set the ""complementarity"" component of the residuals to the pairwise products of the complementary variables plus a constant alpha . ;  ; Bool_t ValidNonZeroPattern ();  Check if vector elements as selected through array indices are non-zero. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the obj",MatchSource.WIKI,doc/master/classTQpResidual.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpResidual.html
https://root.cern/doc/master/classTQpResidual.html:2362,Modifiability,inherit,inherited,2362," ;  ; void Clear_r1r2 ();  set the noncomplementarity components of the residual (the terms arising from the linear equalities in the KKT conditions) to 0. ;  ; void Clear_r3 ();  set the complementarity component of the residuals to 0. ;  ; Double_t GetDualityGap ();  ; Double_t GetResidualNorm ();  ; TQpResidual & operator= (const TQpResidual &source);  Assignment operator. ;  ; void Project_r3 (Double_t rmin, Double_t rmax);  Perform the projection operation required by Gondzio algorithm: replace each component r3_i of the complementarity component of the residuals by r3p_i-r3_i, where r3p_i is the projection of r3_i onto the box [rmin, rmax]. ;  ; void Set_r3_xz_alpha (TQpVar *vars, Double_t alpha);  Set the ""complementarity"" component of the residuals to the pairwise products of the complementary variables plus a constant alpha . ;  ; Bool_t ValidNonZeroPattern ();  Check if vector elements as selected through array indices are non-zero. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;",MatchSource.WIKI,doc/master/classTQpResidual.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpResidual.html
