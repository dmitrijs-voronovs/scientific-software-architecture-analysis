id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/sofa-framework/sofa/pull/3109#issuecomment-1190072887:0,Usability,UX,UX,0,"UX is not perfect : some plugins loaded are in blue in the GUI (the one loaded by the GUI itself).; Even with a tooltip, the user can be a bit confused but this is a dev feature. An issue will be created (double mechanism of plugin loading)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3109#issuecomment-1190072887
https://github.com/sofa-framework/sofa/issues/3110#issuecomment-1499149075:73,Modifiability,plugin,plugin,73,"This may be outdated answer ... but isn't that because SofaNonUniformFEM plugin is missing ? ; I don't know what was its status back in july 2022 but at present time (april 2023) ; SofaNonUniformFEM is now ""Sofa.Component.SolidMechanics.FEM.NonUniform""",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110#issuecomment-1499149075
https://github.com/sofa-framework/sofa/pull/3112#issuecomment-1179227057:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3112#issuecomment-1179227057
https://github.com/sofa-framework/sofa/pull/3115#issuecomment-1180100688:52,Usability,clear,clear,52,I see @fredroy you requested changes. I think it is clear now?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3115#issuecomment-1180100688
https://github.com/sofa-framework/sofa/pull/3115#issuecomment-1180112410:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3115#issuecomment-1180112410
https://github.com/sofa-framework/sofa/pull/3115#issuecomment-1181534481:325,Integrability,depend,dependency,325,"Hi all, . Thanks for the PR. . In the past it was consider that draw tools was a rendering abstraction layer to be used for debugging/inspection or GUI helpers. The recommendation was to use drawTools in the Base::visual() overrides. The main ideas was to allow component developpers to have rendering tools without having a dependency to opengl. On its side, OglXXX component in Sofa.GL exists to hold compoennts that, for whatever reason (performance, lack of time), are still implemented using the opengl api. Up to now, the evolution guidelines was something like:; - replace in the complete code base ogl call by drawTools calls into xxx::draw() ; - move every component for which ogl call remains (mostly in xxxx:drawVisual) into the Sofa.GL.XXX. This PR does something else, as it replace opengl calls from Sofa.GL.OglXXX by drawTools's ones. Implementing component rendering using drawTools instead of ogl calls is probably desirable (if there is no performance cost)... but it cannot be in Sofa.GL. . I recommand to create a new component in Sofa.Component.Visual, for the component using drawTools and if needed in Sofa.GL.Component have the ogl version subclassing it (if needed).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3115#issuecomment-1181534481
https://github.com/sofa-framework/sofa/pull/3115#issuecomment-1181534481:441,Performance,perform,performance,441,"Hi all, . Thanks for the PR. . In the past it was consider that draw tools was a rendering abstraction layer to be used for debugging/inspection or GUI helpers. The recommendation was to use drawTools in the Base::visual() overrides. The main ideas was to allow component developpers to have rendering tools without having a dependency to opengl. On its side, OglXXX component in Sofa.GL exists to hold compoennts that, for whatever reason (performance, lack of time), are still implemented using the opengl api. Up to now, the evolution guidelines was something like:; - replace in the complete code base ogl call by drawTools calls into xxx::draw() ; - move every component for which ogl call remains (mostly in xxxx:drawVisual) into the Sofa.GL.XXX. This PR does something else, as it replace opengl calls from Sofa.GL.OglXXX by drawTools's ones. Implementing component rendering using drawTools instead of ogl calls is probably desirable (if there is no performance cost)... but it cannot be in Sofa.GL. . I recommand to create a new component in Sofa.Component.Visual, for the component using drawTools and if needed in Sofa.GL.Component have the ogl version subclassing it (if needed).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3115#issuecomment-1181534481
https://github.com/sofa-framework/sofa/pull/3115#issuecomment-1181534481:958,Performance,perform,performance,958,"Hi all, . Thanks for the PR. . In the past it was consider that draw tools was a rendering abstraction layer to be used for debugging/inspection or GUI helpers. The recommendation was to use drawTools in the Base::visual() overrides. The main ideas was to allow component developpers to have rendering tools without having a dependency to opengl. On its side, OglXXX component in Sofa.GL exists to hold compoennts that, for whatever reason (performance, lack of time), are still implemented using the opengl api. Up to now, the evolution guidelines was something like:; - replace in the complete code base ogl call by drawTools calls into xxx::draw() ; - move every component for which ogl call remains (mostly in xxxx:drawVisual) into the Sofa.GL.XXX. This PR does something else, as it replace opengl calls from Sofa.GL.OglXXX by drawTools's ones. Implementing component rendering using drawTools instead of ogl calls is probably desirable (if there is no performance cost)... but it cannot be in Sofa.GL. . I recommand to create a new component in Sofa.Component.Visual, for the component using drawTools and if needed in Sofa.GL.Component have the ogl version subclassing it (if needed).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3115#issuecomment-1181534481
https://github.com/sofa-framework/sofa/pull/3115#issuecomment-1181534481:538,Usability,guid,guidelines,538,"Hi all, . Thanks for the PR. . In the past it was consider that draw tools was a rendering abstraction layer to be used for debugging/inspection or GUI helpers. The recommendation was to use drawTools in the Base::visual() overrides. The main ideas was to allow component developpers to have rendering tools without having a dependency to opengl. On its side, OglXXX component in Sofa.GL exists to hold compoennts that, for whatever reason (performance, lack of time), are still implemented using the opengl api. Up to now, the evolution guidelines was something like:; - replace in the complete code base ogl call by drawTools calls into xxx::draw() ; - move every component for which ogl call remains (mostly in xxxx:drawVisual) into the Sofa.GL.XXX. This PR does something else, as it replace opengl calls from Sofa.GL.OglXXX by drawTools's ones. Implementing component rendering using drawTools instead of ogl calls is probably desirable (if there is no performance cost)... but it cannot be in Sofa.GL. . I recommand to create a new component in Sofa.Component.Visual, for the component using drawTools and if needed in Sofa.GL.Component have the ogl version subclassing it (if needed).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3115#issuecomment-1181534481
https://github.com/sofa-framework/sofa/pull/3115#issuecomment-1181688238:108,Integrability,depend,depending,108,"@damienmarchal Thanks for your suggestion. Indeed, some components can now be moved to a generic module not depending on OpenGL üëç üéä . But I am confused by your comment. Did you want to suggest other things than just moving the components?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3115#issuecomment-1181688238
https://github.com/sofa-framework/sofa/pull/3115#issuecomment-1184124812:409,Deployability,update,update,409,"@alxbilger . In addition to have very component not relying anymore on a dependency to opengl should be moved to a generic module. ; I would suggest having a layer of compatibility/deprecation (possibly build on top of the generic module) to to tell users that scenes like:; ```console; RequiredPlugin(""Sofa.GL.Component"") ; OglModel(); OglGrid() ; ```; Are still working but displays nice guidance on how to update to more or less something of that kind:; ```console; RequiredPlugin(""Sofa.Components.Visual"") ; VisualModel() ; VisualGrid() ; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3115#issuecomment-1184124812
https://github.com/sofa-framework/sofa/pull/3115#issuecomment-1184124812:73,Integrability,depend,dependency,73,"@alxbilger . In addition to have very component not relying anymore on a dependency to opengl should be moved to a generic module. ; I would suggest having a layer of compatibility/deprecation (possibly build on top of the generic module) to to tell users that scenes like:; ```console; RequiredPlugin(""Sofa.GL.Component"") ; OglModel(); OglGrid() ; ```; Are still working but displays nice guidance on how to update to more or less something of that kind:; ```console; RequiredPlugin(""Sofa.Components.Visual"") ; VisualModel() ; VisualGrid() ; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3115#issuecomment-1184124812
https://github.com/sofa-framework/sofa/pull/3115#issuecomment-1184124812:390,Usability,guid,guidance,390,"@alxbilger . In addition to have very component not relying anymore on a dependency to opengl should be moved to a generic module. ; I would suggest having a layer of compatibility/deprecation (possibly build on top of the generic module) to to tell users that scenes like:; ```console; RequiredPlugin(""Sofa.GL.Component"") ; OglModel(); OglGrid() ; ```; Are still working but displays nice guidance on how to update to more or less something of that kind:; ```console; RequiredPlugin(""Sofa.Components.Visual"") ; VisualModel() ; VisualGrid() ; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3115#issuecomment-1184124812
https://github.com/sofa-framework/sofa/pull/3116#issuecomment-1180079346:43,Deployability,update,updated,43,"For me those 2 components are the ONLY one updated right now. If a topology is **needed** for the good behavior of the component, it should be set using the link, otherwise you end up with unsure behavior.; Removing the warning will just let lazy people continue putting mass in the node without taking attention to what they are doing.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3116#issuecomment-1180079346
https://github.com/sofa-framework/sofa/pull/3118#issuecomment-1179218825:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3118#issuecomment-1179218825
https://github.com/sofa-framework/sofa/pull/3120#issuecomment-1180212670:829,Modifiability,variab,variables,829,"> I am a bit sad that we lost simplicity in cmake files cry. I liked the fact that Sofa/framework was (supposed to?) be buildable by iteelf; . How? By unchecking the SOFA_COMPONENT option? It's still possible this way. The thing is that Framework is (unfortunately) not a module and thus should not be treated as one if we want to be consistent. I'm not against reverting the framework/CMakeLists.txt deletion though. > and that the root SOFA CMakefile was kind of slimmer/less complicated and actually was (supposed to be ?) not mandatory. This file was and still is mandatory. At least, I think it's clearer now with the changes I propose because we see what is directly below the root CMakeLists (all the remaining add_subdirectory calls) and what could be done from somewhere else. Ideally we should just have a some options/variables and a bunch of add_subdirectory calls in this file.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3120#issuecomment-1180212670
https://github.com/sofa-framework/sofa/pull/3120#issuecomment-1180212670:30,Usability,simpl,simplicity,30,"> I am a bit sad that we lost simplicity in cmake files cry. I liked the fact that Sofa/framework was (supposed to?) be buildable by iteelf; . How? By unchecking the SOFA_COMPONENT option? It's still possible this way. The thing is that Framework is (unfortunately) not a module and thus should not be treated as one if we want to be consistent. I'm not against reverting the framework/CMakeLists.txt deletion though. > and that the root SOFA CMakefile was kind of slimmer/less complicated and actually was (supposed to be ?) not mandatory. This file was and still is mandatory. At least, I think it's clearer now with the changes I propose because we see what is directly below the root CMakeLists (all the remaining add_subdirectory calls) and what could be done from somewhere else. Ideally we should just have a some options/variables and a bunch of add_subdirectory calls in this file.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3120#issuecomment-1180212670
https://github.com/sofa-framework/sofa/pull/3120#issuecomment-1180212670:602,Usability,clear,clearer,602,"> I am a bit sad that we lost simplicity in cmake files cry. I liked the fact that Sofa/framework was (supposed to?) be buildable by iteelf; . How? By unchecking the SOFA_COMPONENT option? It's still possible this way. The thing is that Framework is (unfortunately) not a module and thus should not be treated as one if we want to be consistent. I'm not against reverting the framework/CMakeLists.txt deletion though. > and that the root SOFA CMakefile was kind of slimmer/less complicated and actually was (supposed to be ?) not mandatory. This file was and still is mandatory. At least, I think it's clearer now with the changes I propose because we see what is directly below the root CMakeLists (all the remaining add_subdirectory calls) and what could be done from somewhere else. Ideally we should just have a some options/variables and a bunch of add_subdirectory calls in this file.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3120#issuecomment-1180212670
https://github.com/sofa-framework/sofa/pull/3120#issuecomment-1180587977:266,Usability,simpl,simpler,266,"New changes:; - Move Sofa.GL module under Sofa directory; - SofaKernel is gone.; - Everything was moved under applications/collections/deprecated; - New cosmetic feature in SofaMacros to hide sub-options when base-option is disabled (like cmake_dependent_option but simpler). E.g. when I disable SOFA_COMPONENT, all SOFA_COMPONENT_* are hidden.; - A bit of cleaning",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3120#issuecomment-1180587977
https://github.com/sofa-framework/sofa/pull/3120#issuecomment-1182993626:113,Modifiability,plugin,plugin,113,https://github.com/guparan/sofa/blob/cmake_ng_use_standard_macros/Sofa/GUI/src/sofa/gui/init.cpp should not be a plugin,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3120#issuecomment-1182993626
https://github.com/sofa-framework/sofa/pull/3120#issuecomment-1185051740:38,Testability,test,tests,38,[ci-build][force-full-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3120#issuecomment-1185051740
https://github.com/sofa-framework/sofa/pull/3120#issuecomment-1185460110:38,Testability,test,tests,38,[ci-build][force-full-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3120#issuecomment-1185460110
https://github.com/sofa-framework/sofa/pull/3120#issuecomment-1185737687:38,Testability,test,tests,38,[ci-build][force-full-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3120#issuecomment-1185737687
https://github.com/sofa-framework/sofa/pull/3120#issuecomment-1189985975:370,Deployability,release,release,370,"Several points here: ; - this PR might be breaking for plugin compilation (including move of files); - this PR changes the way we organize / name the code (which is good!). It would be therefore nice to rediscuss it with you both @guparan and @fredroy to all agree on the organization and merge it, but a question comes:; does this seem realistic to merge it before the release?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3120#issuecomment-1189985975
https://github.com/sofa-framework/sofa/pull/3120#issuecomment-1189985975:55,Modifiability,plugin,plugin,55,"Several points here: ; - this PR might be breaking for plugin compilation (including move of files); - this PR changes the way we organize / name the code (which is good!). It would be therefore nice to rediscuss it with you both @guparan and @fredroy to all agree on the organization and merge it, but a question comes:; does this seem realistic to merge it before the release?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3120#issuecomment-1189985975
https://github.com/sofa-framework/sofa/pull/3120#issuecomment-1200893780:258,Modifiability,plugin,plugin,258,"> I guess I would need more info with a sofadev meeting but unfortunately I wont be able to attend this week cry as far as I understood you introduce a new macro defining the type of the project, which looks good to me (and defined library/collection/module/plugin as we said) and removed the _external suffix. Looks good to me as far as I can see ! (even if I would have wished you keep the Sofa/framework/CMakeLists.txt :p ). Exactly, I refactored the sofa_add_* macros under one sofa_add_subdirectory macro. The reason is that I didn't want to create a misleading sofa_add_library macro. I like the fact that sofa_* macro have the same name than the standard CMake macro they override.; I'll resolve the conflicts and revert the framework/CMakeLists removal :wink:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3120#issuecomment-1200893780
https://github.com/sofa-framework/sofa/pull/3120#issuecomment-1200893780:439,Modifiability,refactor,refactored,439,"> I guess I would need more info with a sofadev meeting but unfortunately I wont be able to attend this week cry as far as I understood you introduce a new macro defining the type of the project, which looks good to me (and defined library/collection/module/plugin as we said) and removed the _external suffix. Looks good to me as far as I can see ! (even if I would have wished you keep the Sofa/framework/CMakeLists.txt :p ). Exactly, I refactored the sofa_add_* macros under one sofa_add_subdirectory macro. The reason is that I didn't want to create a misleading sofa_add_library macro. I like the fact that sofa_* macro have the same name than the standard CMake macro they override.; I'll resolve the conflicts and revert the framework/CMakeLists removal :wink:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3120#issuecomment-1200893780
https://github.com/sofa-framework/sofa/pull/3120#issuecomment-1200963331:757,Deployability,release,release,757,"> Several points here:; > ; > * this PR might be breaking for plugin compilation (including move of files). No it is not. The only change that could be called ""breaking"" is the renaming of the CMake options to enable/disable libraries and modules. However, those options keep the same default behavior so it will only affect people who build their own SOFA with custom options. New option names are very close to old option name so it's pretty easy to do the transition. . > ; > * this PR changes the way we organize / name the code (which is good!); > ; > ; > It would be therefore nice to rediscuss it with you both @guparan and @fredroy to all agree on the organization and merge it, but a question comes: does this seem realistic to merge it before the release?. Yes because having everything called PLUGIN_* is a nightmare.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3120#issuecomment-1200963331
https://github.com/sofa-framework/sofa/pull/3120#issuecomment-1200963331:62,Modifiability,plugin,plugin,62,"> Several points here:; > ; > * this PR might be breaking for plugin compilation (including move of files). No it is not. The only change that could be called ""breaking"" is the renaming of the CMake options to enable/disable libraries and modules. However, those options keep the same default behavior so it will only affect people who build their own SOFA with custom options. New option names are very close to old option name so it's pretty easy to do the transition. . > ; > * this PR changes the way we organize / name the code (which is good!); > ; > ; > It would be therefore nice to rediscuss it with you both @guparan and @fredroy to all agree on the organization and merge it, but a question comes: does this seem realistic to merge it before the release?. Yes because having everything called PLUGIN_* is a nightmare.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3120#issuecomment-1200963331
https://github.com/sofa-framework/sofa/pull/3123#issuecomment-1188677941:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3123#issuecomment-1188677941
https://github.com/sofa-framework/sofa/pull/3123#issuecomment-1189978414:100,Deployability,update,update,100,"For the future, the work on improving the SOFA API has to be done to ensure a good initialization / update of components.; A good test would be to run sequentially: `storeResetState()` and `reset()`",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3123#issuecomment-1189978414
https://github.com/sofa-framework/sofa/pull/3123#issuecomment-1189978414:130,Testability,test,test,130,"For the future, the work on improving the SOFA API has to be done to ensure a good initialization / update of components.; A good test would be to run sequentially: `storeResetState()` and `reset()`",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3123#issuecomment-1189978414
https://github.com/sofa-framework/sofa/pull/3124#issuecomment-1185052407:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3124#issuecomment-1185052407
https://github.com/sofa-framework/sofa/pull/3124#issuecomment-1196437554:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3124#issuecomment-1196437554
https://github.com/sofa-framework/sofa/pull/3126#issuecomment-1187011752:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3126#issuecomment-1187011752
https://github.com/sofa-framework/sofa/pull/3126#issuecomment-1187087614:3476,Integrability,message,message,3476,"3) Shouldn't we remove the ""call-super"" ? ; The code and PR makes use of what we call the ""call super""design patern in which an specialization or an in-herited class must call its parent/general implementation to behave correctly. I think the PR contains a variation for ""template"" of this pattern with the unspecializedInit(). In most of the case I noticed that the ""call super"" was a bad design choice as it delegate the ""validity"" of the implementation to the child/specialization instead of enforcing the behavioral validity by code structure. ; Example of the call super ""design""; ```cpp; class GeneralImplementation; {; public:; void doSomethingCrucial(); ; virtual void init(); {; doSomethingCrucial();; }; }. class UserImplementation : GeneralImplementation; {; public:; virtual void init(); {; GeneralImplementation::init(); ; }; }; ```; And how it can be change to prevent mis-implementation:; ```cpp; class GeneralImplementation; {; public:; void doSomethingCrucial();; void init(); {; doSomethingCrucial();; doInit(); ; }; ; protected:; virtual void doInit() = 0; ; }. class UserImplementation : GeneralImplementation; {; public:; final void doInit() override; {; /// my specific things; }; }; ```; I don't know if this could/may/must be applied to BilateralInteractionConstraint...but at first sight it looks like a good sanbox. . 4) Mixing reset/init; I see that reset() is actually calling init(). To me this leads to a lot of fuzzyness in which it is not clear what are the purpose of these function. Maybe it is possible to rework that part to make clear what are the specific role of the API entry points. This probably requires to clarify what reset is supposed to do (and this is probably not strictly equivalent to init()). . 5) Extra side notes:; I would recommand deprecating all handleEvent implementation by printing a deprecation message saying that you need to use ; a separated controller. Because...well this is just a non-sense to have hardcoded keycode and UX concerns.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3126#issuecomment-1187087614
https://github.com/sofa-framework/sofa/pull/3126#issuecomment-1187087614:200,Usability,clear,clearer,200,"Hi @alxbilger . Thanks for the PR and requesting a review. The existing code makes the assumption we only want Vec3 and Rigid3, the PR builds on that assumption to make the implementation cleaner and clearer. The changes dones are relevant and can probably merged as-is. . Nevetheless the PR makes the underlying assumption that we only want Vec3Type and Rigid3Type is questionnable in several ways and is also connected to several of Sofa's code architecture issues that are worht discussing. 1) Do we want to support 1, 2,4, 6d constraint ? ; If this is the case then the current non specialized implementation need to be check it actually compiles and do the expected thing. If this is not the case we should consider fixing that.; But if handling 1,2,4, 6d is not possible nor a desirable property the we should consider making code extension through in-heritance and subclassing instead of templatization. . 2) Asymetrical implementation regarding the floating point precision: ; The current implemented allows users to add extra instanciation for Vec3 (f,d) but do not allow such a thing for Rigid3f. This asymetry in implementation is weird to me as I tend to think that if there is functionnal equivalence regarding the templated data (i.e that one data type is in no way special against the other => Vec3 is i no way ""better"" compared to Rigid3) then this functionnal equivalence results in a code base that exhibit symmetrical implementation where the Vec3 and Rigid3 are treated the same. This is not the case as one is specialized in .cpp while the other is not specialized and is implemented in the .inl. . 3) Shouldn't we remove the ""call-super"" ? ; The code and PR makes use of what we call the ""call super""design patern in which an specialization or an in-herited class must call its parent/general implementation to behave correctly. I think the PR contains a variation for ""template"" of this pattern with the unspecializedInit(). In most of the case I noticed that the ""call super"" w",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3126#issuecomment-1187087614
https://github.com/sofa-framework/sofa/pull/3126#issuecomment-1187087614:3091,Usability,clear,clear,3091,"3) Shouldn't we remove the ""call-super"" ? ; The code and PR makes use of what we call the ""call super""design patern in which an specialization or an in-herited class must call its parent/general implementation to behave correctly. I think the PR contains a variation for ""template"" of this pattern with the unspecializedInit(). In most of the case I noticed that the ""call super"" was a bad design choice as it delegate the ""validity"" of the implementation to the child/specialization instead of enforcing the behavioral validity by code structure. ; Example of the call super ""design""; ```cpp; class GeneralImplementation; {; public:; void doSomethingCrucial(); ; virtual void init(); {; doSomethingCrucial();; }; }. class UserImplementation : GeneralImplementation; {; public:; virtual void init(); {; GeneralImplementation::init(); ; }; }; ```; And how it can be change to prevent mis-implementation:; ```cpp; class GeneralImplementation; {; public:; void doSomethingCrucial();; void init(); {; doSomethingCrucial();; doInit(); ; }; ; protected:; virtual void doInit() = 0; ; }. class UserImplementation : GeneralImplementation; {; public:; final void doInit() override; {; /// my specific things; }; }; ```; I don't know if this could/may/must be applied to BilateralInteractionConstraint...but at first sight it looks like a good sanbox. . 4) Mixing reset/init; I see that reset() is actually calling init(). To me this leads to a lot of fuzzyness in which it is not clear what are the purpose of these function. Maybe it is possible to rework that part to make clear what are the specific role of the API entry points. This probably requires to clarify what reset is supposed to do (and this is probably not strictly equivalent to init()). . 5) Extra side notes:; I would recommand deprecating all handleEvent implementation by printing a deprecation message saying that you need to use ; a separated controller. Because...well this is just a non-sense to have hardcoded keycode and UX concerns.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3126#issuecomment-1187087614
https://github.com/sofa-framework/sofa/pull/3126#issuecomment-1187087614:3186,Usability,clear,clear,3186,"3) Shouldn't we remove the ""call-super"" ? ; The code and PR makes use of what we call the ""call super""design patern in which an specialization or an in-herited class must call its parent/general implementation to behave correctly. I think the PR contains a variation for ""template"" of this pattern with the unspecializedInit(). In most of the case I noticed that the ""call super"" was a bad design choice as it delegate the ""validity"" of the implementation to the child/specialization instead of enforcing the behavioral validity by code structure. ; Example of the call super ""design""; ```cpp; class GeneralImplementation; {; public:; void doSomethingCrucial(); ; virtual void init(); {; doSomethingCrucial();; }; }. class UserImplementation : GeneralImplementation; {; public:; virtual void init(); {; GeneralImplementation::init(); ; }; }; ```; And how it can be change to prevent mis-implementation:; ```cpp; class GeneralImplementation; {; public:; void doSomethingCrucial();; void init(); {; doSomethingCrucial();; doInit(); ; }; ; protected:; virtual void doInit() = 0; ; }. class UserImplementation : GeneralImplementation; {; public:; final void doInit() override; {; /// my specific things; }; }; ```; I don't know if this could/may/must be applied to BilateralInteractionConstraint...but at first sight it looks like a good sanbox. . 4) Mixing reset/init; I see that reset() is actually calling init(). To me this leads to a lot of fuzzyness in which it is not clear what are the purpose of these function. Maybe it is possible to rework that part to make clear what are the specific role of the API entry points. This probably requires to clarify what reset is supposed to do (and this is probably not strictly equivalent to init()). . 5) Extra side notes:; I would recommand deprecating all handleEvent implementation by printing a deprecation message saying that you need to use ; a separated controller. Because...well this is just a non-sense to have hardcoded keycode and UX concerns.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3126#issuecomment-1187087614
https://github.com/sofa-framework/sofa/pull/3126#issuecomment-1187087614:3608,Usability,UX,UX,3608,"3) Shouldn't we remove the ""call-super"" ? ; The code and PR makes use of what we call the ""call super""design patern in which an specialization or an in-herited class must call its parent/general implementation to behave correctly. I think the PR contains a variation for ""template"" of this pattern with the unspecializedInit(). In most of the case I noticed that the ""call super"" was a bad design choice as it delegate the ""validity"" of the implementation to the child/specialization instead of enforcing the behavioral validity by code structure. ; Example of the call super ""design""; ```cpp; class GeneralImplementation; {; public:; void doSomethingCrucial(); ; virtual void init(); {; doSomethingCrucial();; }; }. class UserImplementation : GeneralImplementation; {; public:; virtual void init(); {; GeneralImplementation::init(); ; }; }; ```; And how it can be change to prevent mis-implementation:; ```cpp; class GeneralImplementation; {; public:; void doSomethingCrucial();; void init(); {; doSomethingCrucial();; doInit(); ; }; ; protected:; virtual void doInit() = 0; ; }. class UserImplementation : GeneralImplementation; {; public:; final void doInit() override; {; /// my specific things; }; }; ```; I don't know if this could/may/must be applied to BilateralInteractionConstraint...but at first sight it looks like a good sanbox. . 4) Mixing reset/init; I see that reset() is actually calling init(). To me this leads to a lot of fuzzyness in which it is not clear what are the purpose of these function. Maybe it is possible to rework that part to make clear what are the specific role of the API entry points. This probably requires to clarify what reset is supposed to do (and this is probably not strictly equivalent to init()). . 5) Extra side notes:; I would recommand deprecating all handleEvent implementation by printing a deprecation message saying that you need to use ; a separated controller. Because...well this is just a non-sense to have hardcoded keycode and UX concerns.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3126#issuecomment-1187087614
https://github.com/sofa-framework/sofa/pull/3126#issuecomment-1187581578:835,Modifiability,inherit,inheritance,835,"- I made to PR trying to have symetry in the implementation: https://github.com/alxbilger/sofa/pull/2; - I also tested the code with Vec2 and Vec1 and it does not compile (so the use of template there is highly questionnable) . It could also be a good use case for c++ 20 concepts; . More comments (to go totally out of the scope of the PR):; - the methods ""addContact"" are probably not properly name... as this component has nothing to do with contact maybe addConstraint (?); - the ""merge"" data field is only in in Vec3 which means either the data field should be only on that specialization or that it should be used in Rigid3Type (or at least printing an ""unsupproted behavior"" when set) ; - the ""keepOrientDiff"" data field is only for Rigid, it shouldn't exists at all in the Vec3 version (it can be considered an favor of having inheritance in addition to specialization). ; - the ""numericalTolerance"" data field is only used for rigid specialization (so same comment as for keepOrientDiff"" and it seems it is only for rotational part.; - why BilateralInteractionConstraint<Rigid>::getVelocityViolation() is empty ? ; - in BilateralInteractionConstraint<Rigid3Types>::getConstraintResolution() there is getValue() in for loops(); - accessors are not used in BilateralInteractionConstraint<Rigid3Types>::buildConstraintMatrix()",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3126#issuecomment-1187581578
https://github.com/sofa-framework/sofa/pull/3126#issuecomment-1187581578:1238,Security,access,accessors,1238,"- I made to PR trying to have symetry in the implementation: https://github.com/alxbilger/sofa/pull/2; - I also tested the code with Vec2 and Vec1 and it does not compile (so the use of template there is highly questionnable) . It could also be a good use case for c++ 20 concepts; . More comments (to go totally out of the scope of the PR):; - the methods ""addContact"" are probably not properly name... as this component has nothing to do with contact maybe addConstraint (?); - the ""merge"" data field is only in in Vec3 which means either the data field should be only on that specialization or that it should be used in Rigid3Type (or at least printing an ""unsupproted behavior"" when set) ; - the ""keepOrientDiff"" data field is only for Rigid, it shouldn't exists at all in the Vec3 version (it can be considered an favor of having inheritance in addition to specialization). ; - the ""numericalTolerance"" data field is only used for rigid specialization (so same comment as for keepOrientDiff"" and it seems it is only for rotational part.; - why BilateralInteractionConstraint<Rigid>::getVelocityViolation() is empty ? ; - in BilateralInteractionConstraint<Rigid3Types>::getConstraintResolution() there is getValue() in for loops(); - accessors are not used in BilateralInteractionConstraint<Rigid3Types>::buildConstraintMatrix()",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3126#issuecomment-1187581578
https://github.com/sofa-framework/sofa/pull/3126#issuecomment-1187581578:112,Testability,test,tested,112,"- I made to PR trying to have symetry in the implementation: https://github.com/alxbilger/sofa/pull/2; - I also tested the code with Vec2 and Vec1 and it does not compile (so the use of template there is highly questionnable) . It could also be a good use case for c++ 20 concepts; . More comments (to go totally out of the scope of the PR):; - the methods ""addContact"" are probably not properly name... as this component has nothing to do with contact maybe addConstraint (?); - the ""merge"" data field is only in in Vec3 which means either the data field should be only on that specialization or that it should be used in Rigid3Type (or at least printing an ""unsupproted behavior"" when set) ; - the ""keepOrientDiff"" data field is only for Rigid, it shouldn't exists at all in the Vec3 version (it can be considered an favor of having inheritance in addition to specialization). ; - the ""numericalTolerance"" data field is only used for rigid specialization (so same comment as for keepOrientDiff"" and it seems it is only for rotational part.; - why BilateralInteractionConstraint<Rigid>::getVelocityViolation() is empty ? ; - in BilateralInteractionConstraint<Rigid3Types>::getConstraintResolution() there is getValue() in for loops(); - accessors are not used in BilateralInteractionConstraint<Rigid3Types>::buildConstraintMatrix()",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3126#issuecomment-1187581578
https://github.com/sofa-framework/sofa/pull/3126#issuecomment-1188825154:235,Usability,clear,clearer,235,"Yes, I kind of hijacked the PR to open general discussion, but as my first line was saying:. ""The existing code makes the assumption we only want Vec3 and Rigid3, the PR builds on that assumption to make the implementation cleaner and clearer. The changes dones are relevant and can probably merged as-is."". All what follow is probably for future PR.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3126#issuecomment-1188825154
https://github.com/sofa-framework/sofa/pull/3126#issuecomment-1225431851:59,Usability,guid,guidelines,59,- there are some different kind of ` { ... } ` against the guidelines but it was there before so it is not really the point of the PR; - I would put the content of the specialized(?) inl files directly into the associated cpp.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3126#issuecomment-1225431851
https://github.com/sofa-framework/sofa/pull/3126#issuecomment-1232800715:57,Testability,test,test,57,"Hello @alxbilger, @fredroy, @hugtalbot . Here is a quick test around the idea we discussed during the today's sofa dev meeting: https://godbolt.org/z/9f1z4nbfq",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3126#issuecomment-1232800715
https://github.com/sofa-framework/sofa/pull/3129#issuecomment-1184522277:22,Testability,test,tests,22,[ci-build][with-scene-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3129#issuecomment-1184522277
https://github.com/sofa-framework/sofa/pull/3135#issuecomment-1186836413:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3135#issuecomment-1186836413
https://github.com/sofa-framework/sofa/pull/3135#issuecomment-1187285489:65,Performance,Perform,Performance,65,"> @fredroy thanks to Jason Turner ;). It was more ""Thanks to the Performance Profiler ""üòÖ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3135#issuecomment-1187285489
https://github.com/sofa-framework/sofa/pull/3138#issuecomment-1188639164:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3138#issuecomment-1188639164
https://github.com/sofa-framework/sofa/pull/3141#issuecomment-1189153245:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3141#issuecomment-1189153245
https://github.com/sofa-framework/sofa/pull/3142#issuecomment-1196115598:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3142#issuecomment-1196115598
https://github.com/sofa-framework/sofa/pull/3144#issuecomment-1190917131:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3144#issuecomment-1190917131
https://github.com/sofa-framework/sofa/pull/3144#issuecomment-1190919495:193,Testability,test,test,193,> Do we have a CI on that part of the code ?. SofaCUDA is built on Win and Ubuntu i think; SofaSpfFluid should be built everywhere as well.; It seems there are some scenes as well (but no unit test as far as I am aware),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3144#issuecomment-1190919495
https://github.com/sofa-framework/sofa/pull/3145#issuecomment-1189933434:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3145#issuecomment-1189933434
https://github.com/sofa-framework/sofa/pull/3146#issuecomment-1189776473:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3146#issuecomment-1189776473
https://github.com/sofa-framework/sofa/issues/3149#issuecomment-1190185317:523,Testability,log,logic,523,"In order to work as expected the automatic addition of the GravityForceField by the node need to be implemented for the two following events:; - react when the ""gravity"" field is changed to add the GravityForceField not only done at parse/init... and if gravity is set back to zero... should we remove the GravityForceFIeld ? ; - have a hook in the addObject(BaseObject*) so that any addition of a Mass Object trigger on a node that had a gravity set ... the function adding the GravityForceField is called. The underlying logic is complex and looks very hack to me but needed to provide a consistant behavior between two deeply inter-connected component (mass & gravityforcefield). I may be wrong but using a ""slave"" for the ""automatic"" use-case would cut that complexity.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3149#issuecomment-1190185317
https://github.com/sofa-framework/sofa/issues/3149#issuecomment-1235280937:117,Usability,simpl,simply,117,"@damienmarchal regarding the hook in the addObject(BaseObject*) so that any addition of a Mass Object, should it not simply warn the user that no gravity will be applied if no GravityForceField is added ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3149#issuecomment-1235280937
https://github.com/sofa-framework/sofa/pull/3151#issuecomment-1228154634:0,Testability,Test,Test,0,Test are still failing @alxbilger and many warnings seem to be added :drop_of_blood:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3151#issuecomment-1228154634
https://github.com/sofa-framework/sofa/pull/3151#issuecomment-1232705945:19,Testability,test,tests,19,Not sure why these tests do not pass @alxbilger https://github.com/sofa-framework/sofa/blob/dccb9849ed4b08a305086e02131ce7c25c79eff0/Sofa/Component/Topology/Utility/tests/TopologyChecker_test.cpp#L1346-L1369,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3151#issuecomment-1232705945
https://github.com/sofa-framework/sofa/pull/3151#issuecomment-1232705945:165,Testability,test,tests,165,Not sure why these tests do not pass @alxbilger https://github.com/sofa-framework/sofa/blob/dccb9849ed4b08a305086e02131ce7c25c79eff0/Sofa/Component/Topology/Utility/tests/TopologyChecker_test.cpp#L1346-L1369,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3151#issuecomment-1232705945
https://github.com/sofa-framework/sofa/pull/3151#issuecomment-1232706994:117,Testability,test,tests,117,https://github.com/sofa-framework/sofa/blob/dccb9849ed4b08a305086e02131ce7c25c79eff0/Sofa/Component/Topology/Utility/tests/TopologyChecker_test.cpp#L1202-L1205,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3151#issuecomment-1232706994
https://github.com/sofa-framework/sofa/pull/3152#issuecomment-1191873833:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3152#issuecomment-1191873833
https://github.com/sofa-framework/sofa/pull/3154#issuecomment-1191873431:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3154#issuecomment-1191873431
https://github.com/sofa-framework/sofa/pull/3155#issuecomment-1191873102:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3155#issuecomment-1191873102
https://github.com/sofa-framework/sofa/pull/3162#issuecomment-1193105258:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3162#issuecomment-1193105258
https://github.com/sofa-framework/sofa/pull/3162#issuecomment-1193394417:224,Testability,log,logic,224,"I understand the feature, I understand the need and I agree I would use it.... but I find really weird to set the option using a component in the graph... Do you know if there is an option in the Node? we could use the same logic but per Node",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3162#issuecomment-1193394417
https://github.com/sofa-framework/sofa/pull/3162#issuecomment-1193712985:216,Integrability,message,messages,216,"One component to rule them all, One component to find them, One component to bring them all, and in the printLog to flood the messaging system!. interesting remark @epernod : but could we be willing to have only the messages of the Node and not its content?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3162#issuecomment-1193712985
https://github.com/sofa-framework/sofa/pull/3162#issuecomment-1194083853:12,Integrability,message,message,12,"Ok sorry my message was not totally clear. I meant, you check the option in the Node and it propagate the printLog to all child Node and their components.; So if you want all the printLog, you activate it in the root Node.; Just suggesting.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3162#issuecomment-1194083853
https://github.com/sofa-framework/sofa/pull/3162#issuecomment-1194083853:36,Usability,clear,clear,36,"Ok sorry my message was not totally clear. I meant, you check the option in the Node and it propagate the printLog to all child Node and their components.; So if you want all the printLog, you activate it in the root Node.; Just suggesting.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3162#issuecomment-1194083853
https://github.com/sofa-framework/sofa/pull/3162#issuecomment-1196614783:120,Testability,log,log,120,"Thanks for you feedback @epernod. I think your suggestion is the more natural. Actually, I tried to set `printLog` in a log, to see if it was already working (but no). But I always feel uncomfortable when modifying such an important base class. I don't want that some classes become God classes. That's why I did not touch the Node class. But I am definitively open to discussion",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3162#issuecomment-1196614783
https://github.com/sofa-framework/sofa/pull/3162#issuecomment-1196614783:15,Usability,feedback,feedback,15,"Thanks for you feedback @epernod. I think your suggestion is the more natural. Actually, I tried to set `printLog` in a log, to see if it was already working (but no). But I always feel uncomfortable when modifying such an important base class. I don't want that some classes become God classes. That's why I did not touch the Node class. But I am definitively open to discussion",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3162#issuecomment-1196614783
https://github.com/sofa-framework/sofa/pull/3163#issuecomment-1193105233:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3163#issuecomment-1193105233
https://github.com/sofa-framework/sofa/pull/3163#issuecomment-1211469526:38,Testability,test,tests,38,[ci-build][force-full-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3163#issuecomment-1211469526
https://github.com/sofa-framework/sofa/pull/3164#issuecomment-1193704452:73,Testability,test,tests,73,Congrats @Changjing-Liu Thanks a lot for your PR!!!. [ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3164#issuecomment-1193704452
https://github.com/sofa-framework/sofa/pull/3164#issuecomment-1210386812:70,Testability,test,tests,70,Let's rebuild to check the CI ; [ci-build][force-full-build][with-all-tests]. thanks again @Changjing-Liu for your contribution,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3164#issuecomment-1210386812
https://github.com/sofa-framework/sofa/pull/3167#issuecomment-1196855283:1034,Availability,avail,available,1034,"For historical explanations:; * we need to gather the pointers to all Data in a Base instance, so there must be a function somewhere that is called with both the pointer to the `Base*` object and to the `Data*`.; * a simple option could be to have the `Base*` pointer as a parameter of the Data constructor, however most compilers issue a warning if `this` is explicitly used when initializing member variables, as it is not fully constructed yet; * however, compilers are happy with calling a method, which itself use `this`, hence the initial implementation of `initData()` (which was called `dataField()`) had the `this` pointer implicitely, but needed the `Data*` pointer to add if to the ""fields"" map, which is why it was provided as an explicit parameter to the method; * later changes refactored this to add new features (such capturing which level of the class hierarchy is creating each Data), and the actual registration of the `Data*` in the list within Base was moved to the Data constructor, where the `Data*` pointer is available so the one from `initData()` became redundant. The newer similar design for initializing BaseLink did use an `initLink()` method without this pointer. And regarding this change:; * a useful aspect of having the pointer to the Data as the first parameter of `initData()` is to unambiguously know the type of the final `Data<T>`, so that there could be (relatively) good compile errors if the type of the provided default value is not matching it. I'm not sure how this PR is affecting / handling that (i.e. if you set a `float` value as a default to a `Data<int>`, how the gcc/clang/msvc error messages look like?); * one drawback in the current design is that there are sometimes bugs introduced by the multiple overloads of `initData()`, because of the ambiguity between the optional default value and the optional pair of bool flags at the end. In particular, for a `Data<std::string>`, calling `initData(&d, ""mydefaultvalue"", ""mydata"", ""help message"")` w",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3167#issuecomment-1196855283
https://github.com/sofa-framework/sofa/pull/3167#issuecomment-1196855283:1080,Availability,redundant,redundant,1080,"For historical explanations:; * we need to gather the pointers to all Data in a Base instance, so there must be a function somewhere that is called with both the pointer to the `Base*` object and to the `Data*`.; * a simple option could be to have the `Base*` pointer as a parameter of the Data constructor, however most compilers issue a warning if `this` is explicitly used when initializing member variables, as it is not fully constructed yet; * however, compilers are happy with calling a method, which itself use `this`, hence the initial implementation of `initData()` (which was called `dataField()`) had the `this` pointer implicitely, but needed the `Data*` pointer to add if to the ""fields"" map, which is why it was provided as an explicit parameter to the method; * later changes refactored this to add new features (such capturing which level of the class hierarchy is creating each Data), and the actual registration of the `Data*` in the list within Base was moved to the Data constructor, where the `Data*` pointer is available so the one from `initData()` became redundant. The newer similar design for initializing BaseLink did use an `initLink()` method without this pointer. And regarding this change:; * a useful aspect of having the pointer to the Data as the first parameter of `initData()` is to unambiguously know the type of the final `Data<T>`, so that there could be (relatively) good compile errors if the type of the provided default value is not matching it. I'm not sure how this PR is affecting / handling that (i.e. if you set a `float` value as a default to a `Data<int>`, how the gcc/clang/msvc error messages look like?); * one drawback in the current design is that there are sometimes bugs introduced by the multiple overloads of `initData()`, because of the ambiguity between the optional default value and the optional pair of bool flags at the end. In particular, for a `Data<std::string>`, calling `initData(&d, ""mydefaultvalue"", ""mydata"", ""help message"")` w",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3167#issuecomment-1196855283
https://github.com/sofa-framework/sofa/pull/3167#issuecomment-1196855283:1421,Availability,error,errors,1421,"rning if `this` is explicitly used when initializing member variables, as it is not fully constructed yet; * however, compilers are happy with calling a method, which itself use `this`, hence the initial implementation of `initData()` (which was called `dataField()`) had the `this` pointer implicitely, but needed the `Data*` pointer to add if to the ""fields"" map, which is why it was provided as an explicit parameter to the method; * later changes refactored this to add new features (such capturing which level of the class hierarchy is creating each Data), and the actual registration of the `Data*` in the list within Base was moved to the Data constructor, where the `Data*` pointer is available so the one from `initData()` became redundant. The newer similar design for initializing BaseLink did use an `initLink()` method without this pointer. And regarding this change:; * a useful aspect of having the pointer to the Data as the first parameter of `initData()` is to unambiguously know the type of the final `Data<T>`, so that there could be (relatively) good compile errors if the type of the provided default value is not matching it. I'm not sure how this PR is affecting / handling that (i.e. if you set a `float` value as a default to a `Data<int>`, how the gcc/clang/msvc error messages look like?); * one drawback in the current design is that there are sometimes bugs introduced by the multiple overloads of `initData()`, because of the ambiguity between the optional default value and the optional pair of bool flags at the end. In particular, for a `Data<std::string>`, calling `initData(&d, ""mydefaultvalue"", ""mydata"", ""help message"")` will incorrectly use the `initData()` version without default value but with one boolean flag, as `""mydefaultvalue""` is a `const char*` which requires a ""user-defined"" conversion to `std::string`, while `""help message""` is implicitely convertible to `bool` without any ""user-defined"" conversion, so preferred by the compiler. So if we break t",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3167#issuecomment-1196855283
https://github.com/sofa-framework/sofa/pull/3167#issuecomment-1196855283:1631,Availability,error,error,1631," it was provided as an explicit parameter to the method; * later changes refactored this to add new features (such capturing which level of the class hierarchy is creating each Data), and the actual registration of the `Data*` in the list within Base was moved to the Data constructor, where the `Data*` pointer is available so the one from `initData()` became redundant. The newer similar design for initializing BaseLink did use an `initLink()` method without this pointer. And regarding this change:; * a useful aspect of having the pointer to the Data as the first parameter of `initData()` is to unambiguously know the type of the final `Data<T>`, so that there could be (relatively) good compile errors if the type of the provided default value is not matching it. I'm not sure how this PR is affecting / handling that (i.e. if you set a `float` value as a default to a `Data<int>`, how the gcc/clang/msvc error messages look like?); * one drawback in the current design is that there are sometimes bugs introduced by the multiple overloads of `initData()`, because of the ambiguity between the optional default value and the optional pair of bool flags at the end. In particular, for a `Data<std::string>`, calling `initData(&d, ""mydefaultvalue"", ""mydata"", ""help message"")` will incorrectly use the `initData()` version without default value but with one boolean flag, as `""mydefaultvalue""` is a `const char*` which requires a ""user-defined"" conversion to `std::string`, while `""help message""` is implicitely convertible to `bool` without any ""user-defined"" conversion, so preferred by the compiler. So if we break the compatibility to the current `initData()` API, I would strongly suggest to remove this issue, by removing the two optional bool flags which are seldom used anyway (and can be replaced by a call to `setDisplayed()` or `setReadOnly()`).; * compared to when this code was originally written, c++ now allows to put initializers of member variables in the class declaration direct",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3167#issuecomment-1196855283
https://github.com/sofa-framework/sofa/pull/3167#issuecomment-1196855283:1637,Integrability,message,messages,1637," it was provided as an explicit parameter to the method; * later changes refactored this to add new features (such capturing which level of the class hierarchy is creating each Data), and the actual registration of the `Data*` in the list within Base was moved to the Data constructor, where the `Data*` pointer is available so the one from `initData()` became redundant. The newer similar design for initializing BaseLink did use an `initLink()` method without this pointer. And regarding this change:; * a useful aspect of having the pointer to the Data as the first parameter of `initData()` is to unambiguously know the type of the final `Data<T>`, so that there could be (relatively) good compile errors if the type of the provided default value is not matching it. I'm not sure how this PR is affecting / handling that (i.e. if you set a `float` value as a default to a `Data<int>`, how the gcc/clang/msvc error messages look like?); * one drawback in the current design is that there are sometimes bugs introduced by the multiple overloads of `initData()`, because of the ambiguity between the optional default value and the optional pair of bool flags at the end. In particular, for a `Data<std::string>`, calling `initData(&d, ""mydefaultvalue"", ""mydata"", ""help message"")` will incorrectly use the `initData()` version without default value but with one boolean flag, as `""mydefaultvalue""` is a `const char*` which requires a ""user-defined"" conversion to `std::string`, while `""help message""` is implicitely convertible to `bool` without any ""user-defined"" conversion, so preferred by the compiler. So if we break the compatibility to the current `initData()` API, I would strongly suggest to remove this issue, by removing the two optional bool flags which are seldom used anyway (and can be replaced by a call to `setDisplayed()` or `setReadOnly()`).; * compared to when this code was originally written, c++ now allows to put initializers of member variables in the class declaration direct",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3167#issuecomment-1196855283
https://github.com/sofa-framework/sofa/pull/3167#issuecomment-1196855283:1989,Integrability,message,message,1989,"r design for initializing BaseLink did use an `initLink()` method without this pointer. And regarding this change:; * a useful aspect of having the pointer to the Data as the first parameter of `initData()` is to unambiguously know the type of the final `Data<T>`, so that there could be (relatively) good compile errors if the type of the provided default value is not matching it. I'm not sure how this PR is affecting / handling that (i.e. if you set a `float` value as a default to a `Data<int>`, how the gcc/clang/msvc error messages look like?); * one drawback in the current design is that there are sometimes bugs introduced by the multiple overloads of `initData()`, because of the ambiguity between the optional default value and the optional pair of bool flags at the end. In particular, for a `Data<std::string>`, calling `initData(&d, ""mydefaultvalue"", ""mydata"", ""help message"")` will incorrectly use the `initData()` version without default value but with one boolean flag, as `""mydefaultvalue""` is a `const char*` which requires a ""user-defined"" conversion to `std::string`, while `""help message""` is implicitely convertible to `bool` without any ""user-defined"" conversion, so preferred by the compiler. So if we break the compatibility to the current `initData()` API, I would strongly suggest to remove this issue, by removing the two optional bool flags which are seldom used anyway (and can be replaced by a call to `setDisplayed()` or `setReadOnly()`).; * compared to when this code was originally written, c++ now allows to put initializers of member variables in the class declaration directly, which for Data members could be preferable to initializing them in the constructor (the name and help message would be visible in the header instead of the implementation, it does not need to be duplicated in case there are multiple constructors, and there would no longer be any unhelpful warnings on some compilers about mismatched initialization orderings). I'm not suggesting to d",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3167#issuecomment-1196855283
https://github.com/sofa-framework/sofa/pull/3167#issuecomment-1196855283:2210,Integrability,message,message,2210,"r design for initializing BaseLink did use an `initLink()` method without this pointer. And regarding this change:; * a useful aspect of having the pointer to the Data as the first parameter of `initData()` is to unambiguously know the type of the final `Data<T>`, so that there could be (relatively) good compile errors if the type of the provided default value is not matching it. I'm not sure how this PR is affecting / handling that (i.e. if you set a `float` value as a default to a `Data<int>`, how the gcc/clang/msvc error messages look like?); * one drawback in the current design is that there are sometimes bugs introduced by the multiple overloads of `initData()`, because of the ambiguity between the optional default value and the optional pair of bool flags at the end. In particular, for a `Data<std::string>`, calling `initData(&d, ""mydefaultvalue"", ""mydata"", ""help message"")` will incorrectly use the `initData()` version without default value but with one boolean flag, as `""mydefaultvalue""` is a `const char*` which requires a ""user-defined"" conversion to `std::string`, while `""help message""` is implicitely convertible to `bool` without any ""user-defined"" conversion, so preferred by the compiler. So if we break the compatibility to the current `initData()` API, I would strongly suggest to remove this issue, by removing the two optional bool flags which are seldom used anyway (and can be replaced by a call to `setDisplayed()` or `setReadOnly()`).; * compared to when this code was originally written, c++ now allows to put initializers of member variables in the class declaration directly, which for Data members could be preferable to initializing them in the constructor (the name and help message would be visible in the header instead of the implementation, it does not need to be duplicated in case there are multiple constructors, and there would no longer be any unhelpful warnings on some compilers about mismatched initialization orderings). I'm not suggesting to d",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3167#issuecomment-1196855283
https://github.com/sofa-framework/sofa/pull/3167#issuecomment-1196855283:2826,Integrability,message,message,2826," not matching it. I'm not sure how this PR is affecting / handling that (i.e. if you set a `float` value as a default to a `Data<int>`, how the gcc/clang/msvc error messages look like?); * one drawback in the current design is that there are sometimes bugs introduced by the multiple overloads of `initData()`, because of the ambiguity between the optional default value and the optional pair of bool flags at the end. In particular, for a `Data<std::string>`, calling `initData(&d, ""mydefaultvalue"", ""mydata"", ""help message"")` will incorrectly use the `initData()` version without default value but with one boolean flag, as `""mydefaultvalue""` is a `const char*` which requires a ""user-defined"" conversion to `std::string`, while `""help message""` is implicitely convertible to `bool` without any ""user-defined"" conversion, so preferred by the compiler. So if we break the compatibility to the current `initData()` API, I would strongly suggest to remove this issue, by removing the two optional bool flags which are seldom used anyway (and can be replaced by a call to `setDisplayed()` or `setReadOnly()`).; * compared to when this code was originally written, c++ now allows to put initializers of member variables in the class declaration directly, which for Data members could be preferable to initializing them in the constructor (the name and help message would be visible in the header instead of the implementation, it does not need to be duplicated in case there are multiple constructors, and there would no longer be any unhelpful warnings on some compilers about mismatched initialization orderings). I'm not suggesting to do that in all the components in this PR (as the diff would be horible to review), but any new designs of `initData` should check that this is possible (last time I looked at that, gcc and msvc did not agree on if we needed to write `Data<> d = initData(...)` versus `Data<> d { initData(...) }` versus `Data<> d = { initData(...) }`, but it was a long time ago...)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3167#issuecomment-1196855283
https://github.com/sofa-framework/sofa/pull/3167#issuecomment-1196855283:401,Modifiability,variab,variables,401,"For historical explanations:; * we need to gather the pointers to all Data in a Base instance, so there must be a function somewhere that is called with both the pointer to the `Base*` object and to the `Data*`.; * a simple option could be to have the `Base*` pointer as a parameter of the Data constructor, however most compilers issue a warning if `this` is explicitly used when initializing member variables, as it is not fully constructed yet; * however, compilers are happy with calling a method, which itself use `this`, hence the initial implementation of `initData()` (which was called `dataField()`) had the `this` pointer implicitely, but needed the `Data*` pointer to add if to the ""fields"" map, which is why it was provided as an explicit parameter to the method; * later changes refactored this to add new features (such capturing which level of the class hierarchy is creating each Data), and the actual registration of the `Data*` in the list within Base was moved to the Data constructor, where the `Data*` pointer is available so the one from `initData()` became redundant. The newer similar design for initializing BaseLink did use an `initLink()` method without this pointer. And regarding this change:; * a useful aspect of having the pointer to the Data as the first parameter of `initData()` is to unambiguously know the type of the final `Data<T>`, so that there could be (relatively) good compile errors if the type of the provided default value is not matching it. I'm not sure how this PR is affecting / handling that (i.e. if you set a `float` value as a default to a `Data<int>`, how the gcc/clang/msvc error messages look like?); * one drawback in the current design is that there are sometimes bugs introduced by the multiple overloads of `initData()`, because of the ambiguity between the optional default value and the optional pair of bool flags at the end. In particular, for a `Data<std::string>`, calling `initData(&d, ""mydefaultvalue"", ""mydata"", ""help message"")` w",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3167#issuecomment-1196855283
https://github.com/sofa-framework/sofa/pull/3167#issuecomment-1196855283:792,Modifiability,refactor,refactored,792,"For historical explanations:; * we need to gather the pointers to all Data in a Base instance, so there must be a function somewhere that is called with both the pointer to the `Base*` object and to the `Data*`.; * a simple option could be to have the `Base*` pointer as a parameter of the Data constructor, however most compilers issue a warning if `this` is explicitly used when initializing member variables, as it is not fully constructed yet; * however, compilers are happy with calling a method, which itself use `this`, hence the initial implementation of `initData()` (which was called `dataField()`) had the `this` pointer implicitely, but needed the `Data*` pointer to add if to the ""fields"" map, which is why it was provided as an explicit parameter to the method; * later changes refactored this to add new features (such capturing which level of the class hierarchy is creating each Data), and the actual registration of the `Data*` in the list within Base was moved to the Data constructor, where the `Data*` pointer is available so the one from `initData()` became redundant. The newer similar design for initializing BaseLink did use an `initLink()` method without this pointer. And regarding this change:; * a useful aspect of having the pointer to the Data as the first parameter of `initData()` is to unambiguously know the type of the final `Data<T>`, so that there could be (relatively) good compile errors if the type of the provided default value is not matching it. I'm not sure how this PR is affecting / handling that (i.e. if you set a `float` value as a default to a `Data<int>`, how the gcc/clang/msvc error messages look like?); * one drawback in the current design is that there are sometimes bugs introduced by the multiple overloads of `initData()`, because of the ambiguity between the optional default value and the optional pair of bool flags at the end. In particular, for a `Data<std::string>`, calling `initData(&d, ""mydefaultvalue"", ""mydata"", ""help message"")` w",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3167#issuecomment-1196855283
https://github.com/sofa-framework/sofa/pull/3167#issuecomment-1196855283:2679,Modifiability,variab,variables,2679," not matching it. I'm not sure how this PR is affecting / handling that (i.e. if you set a `float` value as a default to a `Data<int>`, how the gcc/clang/msvc error messages look like?); * one drawback in the current design is that there are sometimes bugs introduced by the multiple overloads of `initData()`, because of the ambiguity between the optional default value and the optional pair of bool flags at the end. In particular, for a `Data<std::string>`, calling `initData(&d, ""mydefaultvalue"", ""mydata"", ""help message"")` will incorrectly use the `initData()` version without default value but with one boolean flag, as `""mydefaultvalue""` is a `const char*` which requires a ""user-defined"" conversion to `std::string`, while `""help message""` is implicitely convertible to `bool` without any ""user-defined"" conversion, so preferred by the compiler. So if we break the compatibility to the current `initData()` API, I would strongly suggest to remove this issue, by removing the two optional bool flags which are seldom used anyway (and can be replaced by a call to `setDisplayed()` or `setReadOnly()`).; * compared to when this code was originally written, c++ now allows to put initializers of member variables in the class declaration directly, which for Data members could be preferable to initializing them in the constructor (the name and help message would be visible in the header instead of the implementation, it does not need to be duplicated in case there are multiple constructors, and there would no longer be any unhelpful warnings on some compilers about mismatched initialization orderings). I'm not suggesting to do that in all the components in this PR (as the diff would be horible to review), but any new designs of `initData` should check that this is possible (last time I looked at that, gcc and msvc did not agree on if we needed to write `Data<> d = initData(...)` versus `Data<> d { initData(...) }` versus `Data<> d = { initData(...) }`, but it was a long time ago...)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3167#issuecomment-1196855283
https://github.com/sofa-framework/sofa/pull/3167#issuecomment-1196855283:1080,Safety,redund,redundant,1080,"For historical explanations:; * we need to gather the pointers to all Data in a Base instance, so there must be a function somewhere that is called with both the pointer to the `Base*` object and to the `Data*`.; * a simple option could be to have the `Base*` pointer as a parameter of the Data constructor, however most compilers issue a warning if `this` is explicitly used when initializing member variables, as it is not fully constructed yet; * however, compilers are happy with calling a method, which itself use `this`, hence the initial implementation of `initData()` (which was called `dataField()`) had the `this` pointer implicitely, but needed the `Data*` pointer to add if to the ""fields"" map, which is why it was provided as an explicit parameter to the method; * later changes refactored this to add new features (such capturing which level of the class hierarchy is creating each Data), and the actual registration of the `Data*` in the list within Base was moved to the Data constructor, where the `Data*` pointer is available so the one from `initData()` became redundant. The newer similar design for initializing BaseLink did use an `initLink()` method without this pointer. And regarding this change:; * a useful aspect of having the pointer to the Data as the first parameter of `initData()` is to unambiguously know the type of the final `Data<T>`, so that there could be (relatively) good compile errors if the type of the provided default value is not matching it. I'm not sure how this PR is affecting / handling that (i.e. if you set a `float` value as a default to a `Data<int>`, how the gcc/clang/msvc error messages look like?); * one drawback in the current design is that there are sometimes bugs introduced by the multiple overloads of `initData()`, because of the ambiguity between the optional default value and the optional pair of bool flags at the end. In particular, for a `Data<std::string>`, calling `initData(&d, ""mydefaultvalue"", ""mydata"", ""help message"")` w",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3167#issuecomment-1196855283
https://github.com/sofa-framework/sofa/pull/3167#issuecomment-1196855283:217,Usability,simpl,simple,217,"For historical explanations:; * we need to gather the pointers to all Data in a Base instance, so there must be a function somewhere that is called with both the pointer to the `Base*` object and to the `Data*`.; * a simple option could be to have the `Base*` pointer as a parameter of the Data constructor, however most compilers issue a warning if `this` is explicitly used when initializing member variables, as it is not fully constructed yet; * however, compilers are happy with calling a method, which itself use `this`, hence the initial implementation of `initData()` (which was called `dataField()`) had the `this` pointer implicitely, but needed the `Data*` pointer to add if to the ""fields"" map, which is why it was provided as an explicit parameter to the method; * later changes refactored this to add new features (such capturing which level of the class hierarchy is creating each Data), and the actual registration of the `Data*` in the list within Base was moved to the Data constructor, where the `Data*` pointer is available so the one from `initData()` became redundant. The newer similar design for initializing BaseLink did use an `initLink()` method without this pointer. And regarding this change:; * a useful aspect of having the pointer to the Data as the first parameter of `initData()` is to unambiguously know the type of the final `Data<T>`, so that there could be (relatively) good compile errors if the type of the provided default value is not matching it. I'm not sure how this PR is affecting / handling that (i.e. if you set a `float` value as a default to a `Data<int>`, how the gcc/clang/msvc error messages look like?); * one drawback in the current design is that there are sometimes bugs introduced by the multiple overloads of `initData()`, because of the ambiguity between the optional default value and the optional pair of bool flags at the end. In particular, for a `Data<std::string>`, calling `initData(&d, ""mydefaultvalue"", ""mydata"", ""help message"")` w",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3167#issuecomment-1196855283
https://github.com/sofa-framework/sofa/pull/3167#issuecomment-1234334877:178,Modifiability,maintainab,maintainable,178,"Hi all, . Thanks for the discussion. . My current understanding is that removing the whole InitData Mechanisme is:; - possible, ; - desirable (would make the code more clear and maintainable). This mean converting every ; ```c++; myData(initData(&myData, 0.1, ""myData"", ""helpe)) ; /// into ; myData(this, 0.1, ""myData"", ""helpe""); ; ```; About the use of ""this"" in a child constructor. My understanding is that it is considered safe for non virutal methods and attributes from the superclass (https://isocpp.org/wiki/faq/ctors#using-this-in-ctors). I also tried a pure constructor based initialization with g++ and clang++ and got no warnings with -Wall and -pedantic. About the ambiguity case cause by the char* to bool implicit conversion... I would say it would be much easier to fix when the initData machinary will be dropped. . EDIT: One more thing about the bool to specify the parameter... I think that using directly the enum 'named"" value or the setXXXX method to set the parameter is far better than using bool.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3167#issuecomment-1234334877
https://github.com/sofa-framework/sofa/pull/3167#issuecomment-1234334877:427,Safety,safe,safe,427,"Hi all, . Thanks for the discussion. . My current understanding is that removing the whole InitData Mechanisme is:; - possible, ; - desirable (would make the code more clear and maintainable). This mean converting every ; ```c++; myData(initData(&myData, 0.1, ""myData"", ""helpe)) ; /// into ; myData(this, 0.1, ""myData"", ""helpe""); ; ```; About the use of ""this"" in a child constructor. My understanding is that it is considered safe for non virutal methods and attributes from the superclass (https://isocpp.org/wiki/faq/ctors#using-this-in-ctors). I also tried a pure constructor based initialization with g++ and clang++ and got no warnings with -Wall and -pedantic. About the ambiguity case cause by the char* to bool implicit conversion... I would say it would be much easier to fix when the initData machinary will be dropped. . EDIT: One more thing about the bool to specify the parameter... I think that using directly the enum 'named"" value or the setXXXX method to set the parameter is far better than using bool.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3167#issuecomment-1234334877
https://github.com/sofa-framework/sofa/pull/3167#issuecomment-1234334877:168,Usability,clear,clear,168,"Hi all, . Thanks for the discussion. . My current understanding is that removing the whole InitData Mechanisme is:; - possible, ; - desirable (would make the code more clear and maintainable). This mean converting every ; ```c++; myData(initData(&myData, 0.1, ""myData"", ""helpe)) ; /// into ; myData(this, 0.1, ""myData"", ""helpe""); ; ```; About the use of ""this"" in a child constructor. My understanding is that it is considered safe for non virutal methods and attributes from the superclass (https://isocpp.org/wiki/faq/ctors#using-this-in-ctors). I also tried a pure constructor based initialization with g++ and clang++ and got no warnings with -Wall and -pedantic. About the ambiguity case cause by the char* to bool implicit conversion... I would say it would be much easier to fix when the initData machinary will be dropped. . EDIT: One more thing about the bool to specify the parameter... I think that using directly the enum 'named"" value or the setXXXX method to set the parameter is far better than using bool.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3167#issuecomment-1234334877
https://github.com/sofa-framework/sofa/issues/3169#issuecomment-1196232646:100,Deployability,update,update,100,"The binaries from the sofa-framework.org website were compiled using Ubuntu20.04, which got a glibc update.; Unfortunately, it is not possible to run executables compiled with a glibc version newer than the one on your system...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3169#issuecomment-1196232646
https://github.com/sofa-framework/sofa/pull/3172#issuecomment-1195474754:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3172#issuecomment-1195474754
https://github.com/sofa-framework/sofa/pull/3173#issuecomment-1196116042:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3173#issuecomment-1196116042
https://github.com/sofa-framework/sofa/pull/3175#issuecomment-1196489732:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3175#issuecomment-1196489732
https://github.com/sofa-framework/sofa/pull/3176#issuecomment-1199102347:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3176#issuecomment-1199102347
https://github.com/sofa-framework/sofa/pull/3176#issuecomment-1210400782:13,Availability,failure,failure,13,Very strange failure on macos_clang_options; [ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3176#issuecomment-1210400782
https://github.com/sofa-framework/sofa/pull/3176#issuecomment-1210400782:65,Testability,test,tests,65,Very strange failure on macos_clang_options; [ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3176#issuecomment-1210400782
https://github.com/sofa-framework/sofa/pull/3176#issuecomment-1227576290:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3176#issuecomment-1227576290
https://github.com/sofa-framework/sofa/pull/3183#issuecomment-1198021221:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3183#issuecomment-1198021221
https://github.com/sofa-framework/sofa/issues/3185#issuecomment-1327155580:51,Availability,error,error,51,"Hi,. Could you put your scene example here and the error message you get.; The Geomagic plugin just create SOFA components to be used in the scene graph so there should be no interference with the SofaPython3 mechanism.; But nothing is better than testing! üòÑ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3185#issuecomment-1327155580
https://github.com/sofa-framework/sofa/issues/3185#issuecomment-1327155580:57,Integrability,message,message,57,"Hi,. Could you put your scene example here and the error message you get.; The Geomagic plugin just create SOFA components to be used in the scene graph so there should be no interference with the SofaPython3 mechanism.; But nothing is better than testing! üòÑ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3185#issuecomment-1327155580
https://github.com/sofa-framework/sofa/issues/3185#issuecomment-1327155580:88,Modifiability,plugin,plugin,88,"Hi,. Could you put your scene example here and the error message you get.; The Geomagic plugin just create SOFA components to be used in the scene graph so there should be no interference with the SofaPython3 mechanism.; But nothing is better than testing! üòÑ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3185#issuecomment-1327155580
https://github.com/sofa-framework/sofa/issues/3185#issuecomment-1327155580:248,Testability,test,testing,248,"Hi,. Could you put your scene example here and the error message you get.; The Geomagic plugin just create SOFA components to be used in the scene graph so there should be no interference with the SofaPython3 mechanism.; But nothing is better than testing! üòÑ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3185#issuecomment-1327155580
https://github.com/sofa-framework/sofa/issues/3185#issuecomment-1340581964:385,Modifiability,plugin,plugin,385,"Hey there,. Sorry for the late response. I have solved the problem. One of the forum posts (cannot find which one or even on which forum) mentioned about computer's ""time zone"" and ""language"" and ""formats"" settings being effective on using Geomagic devices. . Although they worked fine in their own demo software, and with Sofa Framework; the devices were not working with SofaPython3 plugin. I have no idea why but the problem was with the ""formats"" settings of my computer. When I change it to ""United States"" the problem was resolved.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3185#issuecomment-1340581964
https://github.com/sofa-framework/sofa/pull/3188#issuecomment-1207572629:38,Testability,test,tests,38,[ci-build][force-full-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3188#issuecomment-1207572629
https://github.com/sofa-framework/sofa/pull/3190#issuecomment-1206159837:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3190#issuecomment-1206159837
https://github.com/sofa-framework/sofa/issues/3192#issuecomment-1209157858:333,Availability,error,error,333,"I was able to reproduce this issue, when compiling Sofa and SofaPython3 in Debug mode. When trying to add `libSofaPython3.so` through the PluginManager, it first warns the user, that the `.so` was compiled in debug mode, while Sofa was compiled in Release mode (which is incorrect).; Then, on adding the library, the above mentioned error is printed. I confirmed with `ldd libSofaPython3.so` that ` libpython3.9.so.1.0` is actually `not found`. In Release mode, it also does not find it, but does not seem to care. When adding the path to `libpython3.9.so.1.0` to the `LD_LIBRARY_PATH`, it finds it, but `SofaRuntime` is missing required functions/attributes.; In Release; ```python; >>> dir(SofaRuntime); ['DataRepository', 'PluginRepository', 'Sofa', 'SofaRuntime', 'Timer', '__SofaPythonEnvironment_importedModules__', '__SofaPythonEnvironment_modulesExcludedFromReload', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__path__', '__spec__', 'formatStackForSofa', 'getCategories', 'getPythonCallingPoint', 'getPythonCallingPointAsString', 'getSofaFormattedStringFromException', 'getStackForSofa', 'importPlugin', 'importlib', 'init', 'inspect', 'os', 'sendMessageFromException', 'sofaExceptHandler', 'sofaFormatHandler', 'sys', 'traceback', 'unloadModules']; ```; In Debug, only `'DataRepository', 'PluginRepository'` are present (error is thrown, that `unloadModules` is missing).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3192#issuecomment-1209157858
https://github.com/sofa-framework/sofa/issues/3192#issuecomment-1209157858:1382,Availability,error,error,1382,"I was able to reproduce this issue, when compiling Sofa and SofaPython3 in Debug mode. When trying to add `libSofaPython3.so` through the PluginManager, it first warns the user, that the `.so` was compiled in debug mode, while Sofa was compiled in Release mode (which is incorrect).; Then, on adding the library, the above mentioned error is printed. I confirmed with `ldd libSofaPython3.so` that ` libpython3.9.so.1.0` is actually `not found`. In Release mode, it also does not find it, but does not seem to care. When adding the path to `libpython3.9.so.1.0` to the `LD_LIBRARY_PATH`, it finds it, but `SofaRuntime` is missing required functions/attributes.; In Release; ```python; >>> dir(SofaRuntime); ['DataRepository', 'PluginRepository', 'Sofa', 'SofaRuntime', 'Timer', '__SofaPythonEnvironment_importedModules__', '__SofaPythonEnvironment_modulesExcludedFromReload', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__path__', '__spec__', 'formatStackForSofa', 'getCategories', 'getPythonCallingPoint', 'getPythonCallingPointAsString', 'getSofaFormattedStringFromException', 'getStackForSofa', 'importPlugin', 'importlib', 'init', 'inspect', 'os', 'sendMessageFromException', 'sofaExceptHandler', 'sofaFormatHandler', 'sys', 'traceback', 'unloadModules']; ```; In Debug, only `'DataRepository', 'PluginRepository'` are present (error is thrown, that `unloadModules` is missing).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3192#issuecomment-1209157858
https://github.com/sofa-framework/sofa/issues/3192#issuecomment-1209157858:248,Deployability,Release,Release,248,"I was able to reproduce this issue, when compiling Sofa and SofaPython3 in Debug mode. When trying to add `libSofaPython3.so` through the PluginManager, it first warns the user, that the `.so` was compiled in debug mode, while Sofa was compiled in Release mode (which is incorrect).; Then, on adding the library, the above mentioned error is printed. I confirmed with `ldd libSofaPython3.so` that ` libpython3.9.so.1.0` is actually `not found`. In Release mode, it also does not find it, but does not seem to care. When adding the path to `libpython3.9.so.1.0` to the `LD_LIBRARY_PATH`, it finds it, but `SofaRuntime` is missing required functions/attributes.; In Release; ```python; >>> dir(SofaRuntime); ['DataRepository', 'PluginRepository', 'Sofa', 'SofaRuntime', 'Timer', '__SofaPythonEnvironment_importedModules__', '__SofaPythonEnvironment_modulesExcludedFromReload', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__path__', '__spec__', 'formatStackForSofa', 'getCategories', 'getPythonCallingPoint', 'getPythonCallingPointAsString', 'getSofaFormattedStringFromException', 'getStackForSofa', 'importPlugin', 'importlib', 'init', 'inspect', 'os', 'sendMessageFromException', 'sofaExceptHandler', 'sofaFormatHandler', 'sys', 'traceback', 'unloadModules']; ```; In Debug, only `'DataRepository', 'PluginRepository'` are present (error is thrown, that `unloadModules` is missing).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3192#issuecomment-1209157858
https://github.com/sofa-framework/sofa/issues/3192#issuecomment-1209157858:448,Deployability,Release,Release,448,"I was able to reproduce this issue, when compiling Sofa and SofaPython3 in Debug mode. When trying to add `libSofaPython3.so` through the PluginManager, it first warns the user, that the `.so` was compiled in debug mode, while Sofa was compiled in Release mode (which is incorrect).; Then, on adding the library, the above mentioned error is printed. I confirmed with `ldd libSofaPython3.so` that ` libpython3.9.so.1.0` is actually `not found`. In Release mode, it also does not find it, but does not seem to care. When adding the path to `libpython3.9.so.1.0` to the `LD_LIBRARY_PATH`, it finds it, but `SofaRuntime` is missing required functions/attributes.; In Release; ```python; >>> dir(SofaRuntime); ['DataRepository', 'PluginRepository', 'Sofa', 'SofaRuntime', 'Timer', '__SofaPythonEnvironment_importedModules__', '__SofaPythonEnvironment_modulesExcludedFromReload', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__path__', '__spec__', 'formatStackForSofa', 'getCategories', 'getPythonCallingPoint', 'getPythonCallingPointAsString', 'getSofaFormattedStringFromException', 'getStackForSofa', 'importPlugin', 'importlib', 'init', 'inspect', 'os', 'sendMessageFromException', 'sofaExceptHandler', 'sofaFormatHandler', 'sys', 'traceback', 'unloadModules']; ```; In Debug, only `'DataRepository', 'PluginRepository'` are present (error is thrown, that `unloadModules` is missing).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3192#issuecomment-1209157858
https://github.com/sofa-framework/sofa/issues/3192#issuecomment-1209157858:664,Deployability,Release,Release,664,"I was able to reproduce this issue, when compiling Sofa and SofaPython3 in Debug mode. When trying to add `libSofaPython3.so` through the PluginManager, it first warns the user, that the `.so` was compiled in debug mode, while Sofa was compiled in Release mode (which is incorrect).; Then, on adding the library, the above mentioned error is printed. I confirmed with `ldd libSofaPython3.so` that ` libpython3.9.so.1.0` is actually `not found`. In Release mode, it also does not find it, but does not seem to care. When adding the path to `libpython3.9.so.1.0` to the `LD_LIBRARY_PATH`, it finds it, but `SofaRuntime` is missing required functions/attributes.; In Release; ```python; >>> dir(SofaRuntime); ['DataRepository', 'PluginRepository', 'Sofa', 'SofaRuntime', 'Timer', '__SofaPythonEnvironment_importedModules__', '__SofaPythonEnvironment_modulesExcludedFromReload', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__path__', '__spec__', 'formatStackForSofa', 'getCategories', 'getPythonCallingPoint', 'getPythonCallingPointAsString', 'getSofaFormattedStringFromException', 'getStackForSofa', 'importPlugin', 'importlib', 'init', 'inspect', 'os', 'sendMessageFromException', 'sofaExceptHandler', 'sofaFormatHandler', 'sys', 'traceback', 'unloadModules']; ```; In Debug, only `'DataRepository', 'PluginRepository'` are present (error is thrown, that `unloadModules` is missing).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3192#issuecomment-1209157858
https://github.com/sofa-framework/sofa/issues/3192#issuecomment-1209157858:138,Modifiability,Plugin,PluginManager,138,"I was able to reproduce this issue, when compiling Sofa and SofaPython3 in Debug mode. When trying to add `libSofaPython3.so` through the PluginManager, it first warns the user, that the `.so` was compiled in debug mode, while Sofa was compiled in Release mode (which is incorrect).; Then, on adding the library, the above mentioned error is printed. I confirmed with `ldd libSofaPython3.so` that ` libpython3.9.so.1.0` is actually `not found`. In Release mode, it also does not find it, but does not seem to care. When adding the path to `libpython3.9.so.1.0` to the `LD_LIBRARY_PATH`, it finds it, but `SofaRuntime` is missing required functions/attributes.; In Release; ```python; >>> dir(SofaRuntime); ['DataRepository', 'PluginRepository', 'Sofa', 'SofaRuntime', 'Timer', '__SofaPythonEnvironment_importedModules__', '__SofaPythonEnvironment_modulesExcludedFromReload', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__path__', '__spec__', 'formatStackForSofa', 'getCategories', 'getPythonCallingPoint', 'getPythonCallingPointAsString', 'getSofaFormattedStringFromException', 'getStackForSofa', 'importPlugin', 'importlib', 'init', 'inspect', 'os', 'sendMessageFromException', 'sofaExceptHandler', 'sofaFormatHandler', 'sys', 'traceback', 'unloadModules']; ```; In Debug, only `'DataRepository', 'PluginRepository'` are present (error is thrown, that `unloadModules` is missing).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3192#issuecomment-1209157858
https://github.com/sofa-framework/sofa/issues/3192#issuecomment-1209157858:726,Modifiability,Plugin,PluginRepository,726,"I was able to reproduce this issue, when compiling Sofa and SofaPython3 in Debug mode. When trying to add `libSofaPython3.so` through the PluginManager, it first warns the user, that the `.so` was compiled in debug mode, while Sofa was compiled in Release mode (which is incorrect).; Then, on adding the library, the above mentioned error is printed. I confirmed with `ldd libSofaPython3.so` that ` libpython3.9.so.1.0` is actually `not found`. In Release mode, it also does not find it, but does not seem to care. When adding the path to `libpython3.9.so.1.0` to the `LD_LIBRARY_PATH`, it finds it, but `SofaRuntime` is missing required functions/attributes.; In Release; ```python; >>> dir(SofaRuntime); ['DataRepository', 'PluginRepository', 'Sofa', 'SofaRuntime', 'Timer', '__SofaPythonEnvironment_importedModules__', '__SofaPythonEnvironment_modulesExcludedFromReload', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__path__', '__spec__', 'formatStackForSofa', 'getCategories', 'getPythonCallingPoint', 'getPythonCallingPointAsString', 'getSofaFormattedStringFromException', 'getStackForSofa', 'importPlugin', 'importlib', 'init', 'inspect', 'os', 'sendMessageFromException', 'sofaExceptHandler', 'sofaFormatHandler', 'sys', 'traceback', 'unloadModules']; ```; In Debug, only `'DataRepository', 'PluginRepository'` are present (error is thrown, that `unloadModules` is missing).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3192#issuecomment-1209157858
https://github.com/sofa-framework/sofa/issues/3192#issuecomment-1209157858:1350,Modifiability,Plugin,PluginRepository,1350,"I was able to reproduce this issue, when compiling Sofa and SofaPython3 in Debug mode. When trying to add `libSofaPython3.so` through the PluginManager, it first warns the user, that the `.so` was compiled in debug mode, while Sofa was compiled in Release mode (which is incorrect).; Then, on adding the library, the above mentioned error is printed. I confirmed with `ldd libSofaPython3.so` that ` libpython3.9.so.1.0` is actually `not found`. In Release mode, it also does not find it, but does not seem to care. When adding the path to `libpython3.9.so.1.0` to the `LD_LIBRARY_PATH`, it finds it, but `SofaRuntime` is missing required functions/attributes.; In Release; ```python; >>> dir(SofaRuntime); ['DataRepository', 'PluginRepository', 'Sofa', 'SofaRuntime', 'Timer', '__SofaPythonEnvironment_importedModules__', '__SofaPythonEnvironment_modulesExcludedFromReload', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__path__', '__spec__', 'formatStackForSofa', 'getCategories', 'getPythonCallingPoint', 'getPythonCallingPointAsString', 'getSofaFormattedStringFromException', 'getStackForSofa', 'importPlugin', 'importlib', 'init', 'inspect', 'os', 'sendMessageFromException', 'sofaExceptHandler', 'sofaFormatHandler', 'sys', 'traceback', 'unloadModules']; ```; In Debug, only `'DataRepository', 'PluginRepository'` are present (error is thrown, that `unloadModules` is missing).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3192#issuecomment-1209157858
https://github.com/sofa-framework/sofa/issues/3192#issuecomment-1212543654:31,Deployability,Release,Release,31,Now I also have this issue for Release build on v22.06.00 of SOFA and v22.06 of SofaPython3. @guparan Is there a CI check for loading a SofaPython3 scene after a fresh SOFA build in either SOFA or SofaPython3 repo?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3192#issuecomment-1212543654
https://github.com/sofa-framework/sofa/issues/3192#issuecomment-1212543654:126,Performance,load,loading,126,Now I also have this issue for Release build on v22.06.00 of SOFA and v22.06 of SofaPython3. @guparan Is there a CI check for loading a SofaPython3 scene after a fresh SOFA build in either SOFA or SofaPython3 repo?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3192#issuecomment-1212543654
https://github.com/sofa-framework/sofa/pull/3198#issuecomment-1208761538:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3198#issuecomment-1208761538
https://github.com/sofa-framework/sofa/pull/3200#issuecomment-1208956299:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3200#issuecomment-1208956299
https://github.com/sofa-framework/sofa/pull/3200#issuecomment-1209552280:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3200#issuecomment-1209552280
https://github.com/sofa-framework/sofa/issues/3201#issuecomment-1212089563:1071,Safety,detect,detect,1071,"**Version A (Quad with TriangleCollision):**; ```python; hexa_node.addObject(""HexahedronSetTopologyContainer"", hexahedra=grid_hexahedra, position=grid_positions); hexa_node.addObject(""HexahedronSetTopologyModifier""); hexa_node.addObject(""MechanicalObject"", showObject=True, showObjectScale=2.0); hexa_node.addObject(""UniformMass"", totalMass=0.001); hexa_node.addObject(""HexahedronFEMForceField"", youngModulus=100, poissonRatio=0.0). hexa_node.addObject(""FixedConstraint"", indices=[0, 60, 120, 180, 59, 119, 179, 239]). quad_node = hexa_node.addChild(""quads""); quad_node.addObject(""QuadSetTopologyContainer""); quad_node.addObject(""QuadSetTopologyModifier""); quad_node.addObject(""Hexa2QuadTopologicalMapping""); quad_node.addObject(""TriangleCollisionModel"", group=0, tags=""CarvingSurface""); ```; -> If I remove elements through the mouse, it removes the incorrect indices (but it does not crash / warn); https://user-images.githubusercontent.com/29635054/184161506-3e617100-2bc0-4923-a838-2396039f89ea.mp4. -> If I let the `SphereCollisionModel` fall, it does not correctly detect the collision. Maybe the index order is incorrect -> flipped triangle? ; https://user-images.githubusercontent.com/29635054/184161484-242044af-1fe0-4a04-982a-946be839e861.mp4. **Version B (Hexa -> Quad -> Triangle with TriangleCollision):**; Same as before.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3201#issuecomment-1212089563
https://github.com/sofa-framework/sofa/issues/3201#issuecomment-1251440322:43,Integrability,message,message,43,To close this issue: what is expected is a message in `XX2XXTopologicalMapping` which checks whether the input topology includes the appropriate container,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3201#issuecomment-1251440322
https://github.com/sofa-framework/sofa/pull/3203#issuecomment-1210431318:407,Availability,robust,robust,407,Hi @ScheiklP . Thanks for the PR. The SphereCollisionModel works historically without a topology (relying on the mstate). The tests are failing due to the absence of a PointSetTopology. What could be done is to change the warning into an info saying that no topology is found therefore no topological change will be supported. What do you think?. Another change in order to make the component topologically robust would be to make the data `radius` as a PointData:; ``` cpp; Data< VecReal > radius; ///< Radius of each sphere; ```. should become; ``` cpp; PointData< Real > radius; ///< Radius of each sphere; ```; (connected to a topology handler),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3203#issuecomment-1210431318
https://github.com/sofa-framework/sofa/pull/3203#issuecomment-1210431318:126,Testability,test,tests,126,Hi @ScheiklP . Thanks for the PR. The SphereCollisionModel works historically without a topology (relying on the mstate). The tests are failing due to the absence of a PointSetTopology. What could be done is to change the warning into an info saying that no topology is found therefore no topological change will be supported. What do you think?. Another change in order to make the component topologically robust would be to make the data `radius` as a PointData:; ``` cpp; Data< VecReal > radius; ///< Radius of each sphere; ```. should become; ``` cpp; PointData< Real > radius; ///< Radius of each sphere; ```; (connected to a topology handler),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3203#issuecomment-1210431318
https://github.com/sofa-framework/sofa/pull/3203#issuecomment-1210437597:427,Availability,robust,robust,427,"> Hi @ScheiklP; > ; > Thanks for the PR.; > ; > The SphereCollisionModel works historically without a topology (relying on the mstate). The tests are failing due to the absence of a PointSetTopology. What could be done is to change the warning into an info saying that no topology is found therefore no topological change will be supported. What do you think?; > ; > Another change in order to make the component topologically robust would be to make the data `radius` as a PointData:; > ; > ```c++; > Data< VecReal > radius; ///< Radius of each sphere; > ```; > ; > should become; > ; > ```c++; > PointData< Real > radius; ///< Radius of each sphere; > ```; > ; > (connected to a topology handler). Hi @Hugo,; the `SphereCollisionModel` are in a node together with an `EdgeSetTopologyContainer` that is now also correctly found and bound to `l_topology` and `m_topology`. . Is there something else to do, to correctly connect it to `m_mstate`?. Or maybe `updateFromTopology()` should do more than it does now? :D",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3203#issuecomment-1210437597
https://github.com/sofa-framework/sofa/pull/3203#issuecomment-1210437597:956,Deployability,update,updateFromTopology,956,"> Hi @ScheiklP; > ; > Thanks for the PR.; > ; > The SphereCollisionModel works historically without a topology (relying on the mstate). The tests are failing due to the absence of a PointSetTopology. What could be done is to change the warning into an info saying that no topology is found therefore no topological change will be supported. What do you think?; > ; > Another change in order to make the component topologically robust would be to make the data `radius` as a PointData:; > ; > ```c++; > Data< VecReal > radius; ///< Radius of each sphere; > ```; > ; > should become; > ; > ```c++; > PointData< Real > radius; ///< Radius of each sphere; > ```; > ; > (connected to a topology handler). Hi @Hugo,; the `SphereCollisionModel` are in a node together with an `EdgeSetTopologyContainer` that is now also correctly found and bound to `l_topology` and `m_topology`. . Is there something else to do, to correctly connect it to `m_mstate`?. Or maybe `updateFromTopology()` should do more than it does now? :D",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3203#issuecomment-1210437597
https://github.com/sofa-framework/sofa/pull/3203#issuecomment-1210437597:140,Testability,test,tests,140,"> Hi @ScheiklP; > ; > Thanks for the PR.; > ; > The SphereCollisionModel works historically without a topology (relying on the mstate). The tests are failing due to the absence of a PointSetTopology. What could be done is to change the warning into an info saying that no topology is found therefore no topological change will be supported. What do you think?; > ; > Another change in order to make the component topologically robust would be to make the data `radius` as a PointData:; > ; > ```c++; > Data< VecReal > radius; ///< Radius of each sphere; > ```; > ; > should become; > ; > ```c++; > PointData< Real > radius; ///< Radius of each sphere; > ```; > ; > (connected to a topology handler). Hi @Hugo,; the `SphereCollisionModel` are in a node together with an `EdgeSetTopologyContainer` that is now also correctly found and bound to `l_topology` and `m_topology`. . Is there something else to do, to correctly connect it to `m_mstate`?. Or maybe `updateFromTopology()` should do more than it does now? :D",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3203#issuecomment-1210437597
https://github.com/sofa-framework/sofa/pull/3203#issuecomment-1225325160:88,Testability,test,tests,88,"Is this PR ready to be reviewed? If yes, the label must be changed. [ci-build][with-all-tests]",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3203#issuecomment-1225325160
https://github.com/sofa-framework/sofa/issues/3213#issuecomment-1268511413:432,Deployability,release,release,432,"Weird because Metis sources are shipped with SOFA (see https://github.com/sofa-framework/sofa/tree/master/Sofa/Component/LinearSolver/Direct/extlibs/metis-5.1.0). On my CMake, I see . ![image](https://user-images.githubusercontent.com/10572752/194084610-64eabe13-19a2-4ea8-ace9-6511748851d3.png). I also have `metis_DIR-NOTFOUND` for `metis_DIR`. But `Metis_DIR` is correctly filled. I noticed you try to compile v21.06. The latest release is v22.06. You could try updating your SOFA. And let us know if you succeeded in fixing your problem. Thanks.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3213#issuecomment-1268511413
https://github.com/sofa-framework/sofa/pull/3216#issuecomment-1213212003:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3216#issuecomment-1213212003
https://github.com/sofa-framework/sofa/pull/3216#issuecomment-1217713653:80,Testability,test,test,80,thanks @epernod for the fix :+1: ; @monkeygame do not hesitate to [contribute a test](https://www.sofa-framework.org/community/doc/contributing-to-sofa/writing-tests/) corresponding to the failing case you had. Thanks for rising the issue :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3216#issuecomment-1217713653
https://github.com/sofa-framework/sofa/pull/3216#issuecomment-1217713653:160,Testability,test,tests,160,thanks @epernod for the fix :+1: ; @monkeygame do not hesitate to [contribute a test](https://www.sofa-framework.org/community/doc/contributing-to-sofa/writing-tests/) corresponding to the failing case you had. Thanks for rising the issue :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3216#issuecomment-1217713653
https://github.com/sofa-framework/sofa/pull/3216#issuecomment-1220161369:38,Testability,test,tests,38,[ci-build][force-full-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3216#issuecomment-1220161369
https://github.com/sofa-framework/sofa/pull/3216#issuecomment-1227291895:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3216#issuecomment-1227291895
https://github.com/sofa-framework/sofa/pull/3216#issuecomment-1228159103:0,Testability,Test,Tests,0,Tests are still failing @epernod :. - RegressionTests.Regression_test/Regression_test/TopologyRegression_test.sceneTest/AddingTriangle2EdgeProcess; - UnitTests.Sofa_Component.Topology/AddTetrahedronProcessor_test.AddTetrahedra; - UnitTests.Sofa_Component.Topology/AddTriangleProcessor_test.AddTriangles,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3216#issuecomment-1228159103
https://github.com/sofa-framework/sofa/pull/3216#issuecomment-1232712940:41,Deployability,update,update,41,TopologicalChangeProcessor_test needs an update since the number of points is then known. @epernod,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3216#issuecomment-1232712940
https://github.com/sofa-framework/sofa/pull/3216#issuecomment-1234565624:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3216#issuecomment-1234565624
https://github.com/sofa-framework/sofa/pull/3216#issuecomment-1239130189:38,Testability,test,tests,38,[ci-build][force-full-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3216#issuecomment-1239130189
https://github.com/sofa-framework/sofa/pull/3216#issuecomment-1239131448:38,Testability,test,tests,38,[ci-build][force-full-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3216#issuecomment-1239131448
https://github.com/sofa-framework/sofa/pull/3216#issuecomment-1239131582:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3216/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/34**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 8d35ce10069c2f7b220be31fa96c8039e767cd7d_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3216#issuecomment-1239131582
https://github.com/sofa-framework/sofa/pull/3216#issuecomment-1239131582:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3216/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/34**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 8d35ce10069c2f7b220be31fa96c8039e767cd7d_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3216#issuecomment-1239131582
https://github.com/sofa-framework/sofa/pull/3217#issuecomment-1213212173:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3217#issuecomment-1213212173
https://github.com/sofa-framework/sofa/pull/3217#issuecomment-1221656312:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3217#issuecomment-1221656312
https://github.com/sofa-framework/sofa/pull/3221#issuecomment-1216419582:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3221#issuecomment-1216419582
https://github.com/sofa-framework/sofa/pull/3221#issuecomment-1239097355:6,Testability,test,test,6,Let's test to define it `constexpr` while defining it in the inl file (including it in the header) and see if it works as `constexpr`,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3221#issuecomment-1239097355
https://github.com/sofa-framework/sofa/pull/3221#issuecomment-1240199158:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3221#issuecomment-1240199158
https://github.com/sofa-framework/sofa/pull/3221#issuecomment-1250433780:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3221#issuecomment-1250433780
https://github.com/sofa-framework/sofa/pull/3221#issuecomment-1252306008:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3221#issuecomment-1252306008
https://github.com/sofa-framework/sofa/pull/3221#issuecomment-1253469367:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3221#issuecomment-1253469367
https://github.com/sofa-framework/sofa/pull/3224#issuecomment-1225335584:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3224#issuecomment-1225335584
https://github.com/sofa-framework/sofa/pull/3224#issuecomment-1225456455:115,Modifiability,variab,variable,115,"@maddin200 OK for us to keep it as is :+1: ; Could you open a second PR based on this one, where the naming of the variable would be improved and the for loop would be modernized. Let's keep this one to review until next PR is opened",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3224#issuecomment-1225456455
https://github.com/sofa-framework/sofa/pull/3224#issuecomment-1229808267:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3224#issuecomment-1229808267
https://github.com/sofa-framework/sofa/pull/3225#issuecomment-1226734303:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3225#issuecomment-1226734303
https://github.com/sofa-framework/sofa/pull/3226#issuecomment-1219092942:38,Testability,test,tests,38,[ci-build][force-full-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3226#issuecomment-1219092942
https://github.com/sofa-framework/sofa/pull/3227#issuecomment-1219270111:20,Testability,test,tests,20,[ci-build][with-all-tests] just to be sure :angel:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3227#issuecomment-1219270111
https://github.com/sofa-framework/sofa/pull/3227#issuecomment-1222392543:33,Usability,feedback,feedback,33,"Thanks a lot @alxbilger for your feedback, I will make the requested change :+1:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3227#issuecomment-1222392543
https://github.com/sofa-framework/sofa/pull/3229#issuecomment-1219659843:0,Testability,test,tested,0,tested it works !,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3229#issuecomment-1219659843
https://github.com/sofa-framework/sofa/pull/3229#issuecomment-1225376787:83,Testability,test,test,83,"hello @guparan :raised_hands: ; we do need to backport this PR, it would be a good test for me doing it. Would you be open to share the steps to-do (branch backport, tag to be added, etc.)?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3229#issuecomment-1225376787
https://github.com/sofa-framework/sofa/pull/3230#issuecomment-1220232973:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3230#issuecomment-1220232973
https://github.com/sofa-framework/sofa/pull/3231#issuecomment-1220279690:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3231#issuecomment-1220279690
https://github.com/sofa-framework/sofa/pull/3231#issuecomment-1236791920:334,Performance,perform,performances,334,"I just had a look on the implementation of `FullVector`. I notice the following differences between `operator[](Index i)` and `element(Index i)`:. - `element(Index i)` is virtual; - `element(Index i)` returns necessarily a `SReal` independent from the type of `FullVector`. It may lead to a type conversion therefore an impact on the performances. But usually, all the components are compiled with `SReal`, so I am not sure there is a conversion here. So it should not affect the performances. I am confused here, because I cannot believe that the speedup you get is only because of the virtual function. I guess you can try again your benchmark, but instead of using `operator[](Index i)`, use `FullVector<Real>::element(Index i)`. Note that I force the `element` function to be the one in `FullVector<Real>`.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3231#issuecomment-1236791920
https://github.com/sofa-framework/sofa/pull/3231#issuecomment-1236791920:480,Performance,perform,performances,480,"I just had a look on the implementation of `FullVector`. I notice the following differences between `operator[](Index i)` and `element(Index i)`:. - `element(Index i)` is virtual; - `element(Index i)` returns necessarily a `SReal` independent from the type of `FullVector`. It may lead to a type conversion therefore an impact on the performances. But usually, all the components are compiled with `SReal`, so I am not sure there is a conversion here. So it should not affect the performances. I am confused here, because I cannot believe that the speedup you get is only because of the virtual function. I guess you can try again your benchmark, but instead of using `operator[](Index i)`, use `FullVector<Real>::element(Index i)`. Note that I force the `element` function to be the one in `FullVector<Real>`.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3231#issuecomment-1236791920
https://github.com/sofa-framework/sofa/pull/3231#issuecomment-1236791920:636,Testability,benchmark,benchmark,636,"I just had a look on the implementation of `FullVector`. I notice the following differences between `operator[](Index i)` and `element(Index i)`:. - `element(Index i)` is virtual; - `element(Index i)` returns necessarily a `SReal` independent from the type of `FullVector`. It may lead to a type conversion therefore an impact on the performances. But usually, all the components are compiled with `SReal`, so I am not sure there is a conversion here. So it should not affect the performances. I am confused here, because I cannot believe that the speedup you get is only because of the virtual function. I guess you can try again your benchmark, but instead of using `operator[](Index i)`, use `FullVector<Real>::element(Index i)`. Note that I force the `element` function to be the one in `FullVector<Real>`.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3231#issuecomment-1236791920
https://github.com/sofa-framework/sofa/pull/3231#issuecomment-1236824001:352,Performance,perform,performances,352,"> . > I just had a look on the implementation of `FullVector`. I notice the following differences between `operator[](Index i)` and `element(Index i)`:; > ; > * `element(Index i)` is virtual; > ; > * `element(Index i)` returns necessarily a `SReal` independent from the type of `FullVector`. It may lead to a type conversion therefore an impact on the performances. But usually, all the components are compiled with `SReal`, so I am not sure there is a conversion here. So it should not affect the performances.; > ; > ; > I am confused here, because I cannot believe that the speedup you get is only because of the virtual function. I guess you can try again your benchmark, but instead of using `operator[](Index i)`, use `FullVector<Real>::element(Index i)`. Note that I force the `element` function to be the one in `FullVector<Real>`. with `FullVector<Real>::element(Index i)`:; ` 5000 iterations done in 59.448 s ( 84.1071 FPS)` more or less same as with the operator[] then",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3231#issuecomment-1236824001
https://github.com/sofa-framework/sofa/pull/3231#issuecomment-1236824001:498,Performance,perform,performances,498,"> . > I just had a look on the implementation of `FullVector`. I notice the following differences between `operator[](Index i)` and `element(Index i)`:; > ; > * `element(Index i)` is virtual; > ; > * `element(Index i)` returns necessarily a `SReal` independent from the type of `FullVector`. It may lead to a type conversion therefore an impact on the performances. But usually, all the components are compiled with `SReal`, so I am not sure there is a conversion here. So it should not affect the performances.; > ; > ; > I am confused here, because I cannot believe that the speedup you get is only because of the virtual function. I guess you can try again your benchmark, but instead of using `operator[](Index i)`, use `FullVector<Real>::element(Index i)`. Note that I force the `element` function to be the one in `FullVector<Real>`. with `FullVector<Real>::element(Index i)`:; ` 5000 iterations done in 59.448 s ( 84.1071 FPS)` more or less same as with the operator[] then",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3231#issuecomment-1236824001
https://github.com/sofa-framework/sofa/pull/3231#issuecomment-1236824001:665,Testability,benchmark,benchmark,665,"> . > I just had a look on the implementation of `FullVector`. I notice the following differences between `operator[](Index i)` and `element(Index i)`:; > ; > * `element(Index i)` is virtual; > ; > * `element(Index i)` returns necessarily a `SReal` independent from the type of `FullVector`. It may lead to a type conversion therefore an impact on the performances. But usually, all the components are compiled with `SReal`, so I am not sure there is a conversion here. So it should not affect the performances.; > ; > ; > I am confused here, because I cannot believe that the speedup you get is only because of the virtual function. I guess you can try again your benchmark, but instead of using `operator[](Index i)`, use `FullVector<Real>::element(Index i)`. Note that I force the `element` function to be the one in `FullVector<Real>`. with `FullVector<Real>::element(Index i)`:; ` 5000 iterations done in 59.448 s ( 84.1071 FPS)` more or less same as with the operator[] then",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3231#issuecomment-1236824001
https://github.com/sofa-framework/sofa/pull/3231#issuecomment-1237539491:102,Performance,optimiz,optimization,102,"FYI, in the bench, this function is called 7938654120 (~8e9) times. üòµ ; So I guess even the slightest optimization has a noticeable effect...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3231#issuecomment-1237539491
https://github.com/sofa-framework/sofa/pull/3231#issuecomment-1250433852:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3231#issuecomment-1250433852
https://github.com/sofa-framework/sofa/pull/3231#issuecomment-1253469824:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3231#issuecomment-1253469824
https://github.com/sofa-framework/sofa/pull/3232#issuecomment-1229231608:33,Deployability,hotfix,hotfix,33,@sofa-framework/consortium-staff hotfix for 22.06?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3232#issuecomment-1229231608
https://github.com/sofa-framework/sofa/pull/3232#issuecomment-1229950339:74,Usability,feedback,feedback,74,Small warning before back porting... ; I got 10 minuets ago a preliminary feedback from @samFabrice that this change is not working as expected. ; He is investigating and will confirm/cancel the warning.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3232#issuecomment-1229950339
https://github.com/sofa-framework/sofa/pull/3232#issuecomment-1231329334:14,Deployability,update,updated,14,I just hadn't updated my workspace. but now that it's done I no longer have these warnings so it's fine,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3232#issuecomment-1231329334
https://github.com/sofa-framework/sofa/pull/3233#issuecomment-1222838244:20,Safety,detect,detect,20,would compilers not detect it anyway @alxbilger ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3233#issuecomment-1222838244
https://github.com/sofa-framework/sofa/pull/3233#issuecomment-1223895055:14,Usability,intuit,intuition,14,"@hugtalbot My intuition would answer no, but I cannot prove it",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3233#issuecomment-1223895055
https://github.com/sofa-framework/sofa/pull/3234#issuecomment-1222839702:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3234#issuecomment-1222839702
https://github.com/sofa-framework/sofa/pull/3234#issuecomment-1228179850:345,Deployability,update,update,345,"I think I like the PR :smile: but I lack of knowledge .. does it mean that we can use these accessor on any type not event Data?. > I added unit tests for the default class, for the vector types specialization and for the Data specialization. is this the mechanism used when the flag readOnly is set on a Data?. well.. I need to get a technical update on this!",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3234#issuecomment-1228179850
https://github.com/sofa-framework/sofa/pull/3234#issuecomment-1228179850:92,Security,access,accessor,92,"I think I like the PR :smile: but I lack of knowledge .. does it mean that we can use these accessor on any type not event Data?. > I added unit tests for the default class, for the vector types specialization and for the Data specialization. is this the mechanism used when the flag readOnly is set on a Data?. well.. I need to get a technical update on this!",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3234#issuecomment-1228179850
https://github.com/sofa-framework/sofa/pull/3234#issuecomment-1228179850:145,Testability,test,tests,145,"I think I like the PR :smile: but I lack of knowledge .. does it mean that we can use these accessor on any type not event Data?. > I added unit tests for the default class, for the vector types specialization and for the Data specialization. is this the mechanism used when the flag readOnly is set on a Data?. well.. I need to get a technical update on this!",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3234#issuecomment-1228179850
https://github.com/sofa-framework/sofa/pull/3234#issuecomment-1228215278:571,Security,access,accessors,571,"There is a primary template class that can act on any type (not just Data). In this case, the class is a simple proxy.; A second implementation partially specializes the class for vector types. Again, no need to be a Data. The type needs to implement the `begin` and `end` methods, and the `[](int)` operator, to be considered a vector type.; Finally, a third implementation partially specializes the class for Data. This specialization uses one of the first two implementation: `template<class T> class ReadAccessor<Data<T> > : public ReadAccessor<T>`.; We can say that accessors are meant to be used for Data only, but they need the implementations for any type (the type that is contained by the Data). And those implementations can be tested, even if they are not used. Worth to be noted:; `std::vector` is of course considered as a vector type. If I want to use it through an accessor, it matches the partial specialization for vector types. However, accessors for vector types require the type `Size` in the vector type (there is an alias). `std::vector` has not such a type, so the compilation fails. Accessors to vector types can be used only for `sofa::type::vector` (and its derived types). Conclusion: ; 1) there is a discrepancy between the `is_vector` type trait and the requirements of the accessors.; 2) Write `ReadAccessor<std::vector<Real> >` or `ReadAccessor<Data<std::vector<Real> > >` does not compile. To fix this behavior, I'll suggest in another PR something like; ```cpp; using Size = std::conditional_t<hasSizeSize<T>::value, T::Size, T::size_type>;; ```. I think the read-only flag has nothing to do with the accessors. I think it is related to the GUI only.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3234#issuecomment-1228215278
https://github.com/sofa-framework/sofa/pull/3234#issuecomment-1228215278:881,Security,access,accessor,881,"There is a primary template class that can act on any type (not just Data). In this case, the class is a simple proxy.; A second implementation partially specializes the class for vector types. Again, no need to be a Data. The type needs to implement the `begin` and `end` methods, and the `[](int)` operator, to be considered a vector type.; Finally, a third implementation partially specializes the class for Data. This specialization uses one of the first two implementation: `template<class T> class ReadAccessor<Data<T> > : public ReadAccessor<T>`.; We can say that accessors are meant to be used for Data only, but they need the implementations for any type (the type that is contained by the Data). And those implementations can be tested, even if they are not used. Worth to be noted:; `std::vector` is of course considered as a vector type. If I want to use it through an accessor, it matches the partial specialization for vector types. However, accessors for vector types require the type `Size` in the vector type (there is an alias). `std::vector` has not such a type, so the compilation fails. Accessors to vector types can be used only for `sofa::type::vector` (and its derived types). Conclusion: ; 1) there is a discrepancy between the `is_vector` type trait and the requirements of the accessors.; 2) Write `ReadAccessor<std::vector<Real> >` or `ReadAccessor<Data<std::vector<Real> > >` does not compile. To fix this behavior, I'll suggest in another PR something like; ```cpp; using Size = std::conditional_t<hasSizeSize<T>::value, T::Size, T::size_type>;; ```. I think the read-only flag has nothing to do with the accessors. I think it is related to the GUI only.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3234#issuecomment-1228215278
https://github.com/sofa-framework/sofa/pull/3234#issuecomment-1228215278:956,Security,access,accessors,956,"There is a primary template class that can act on any type (not just Data). In this case, the class is a simple proxy.; A second implementation partially specializes the class for vector types. Again, no need to be a Data. The type needs to implement the `begin` and `end` methods, and the `[](int)` operator, to be considered a vector type.; Finally, a third implementation partially specializes the class for Data. This specialization uses one of the first two implementation: `template<class T> class ReadAccessor<Data<T> > : public ReadAccessor<T>`.; We can say that accessors are meant to be used for Data only, but they need the implementations for any type (the type that is contained by the Data). And those implementations can be tested, even if they are not used. Worth to be noted:; `std::vector` is of course considered as a vector type. If I want to use it through an accessor, it matches the partial specialization for vector types. However, accessors for vector types require the type `Size` in the vector type (there is an alias). `std::vector` has not such a type, so the compilation fails. Accessors to vector types can be used only for `sofa::type::vector` (and its derived types). Conclusion: ; 1) there is a discrepancy between the `is_vector` type trait and the requirements of the accessors.; 2) Write `ReadAccessor<std::vector<Real> >` or `ReadAccessor<Data<std::vector<Real> > >` does not compile. To fix this behavior, I'll suggest in another PR something like; ```cpp; using Size = std::conditional_t<hasSizeSize<T>::value, T::Size, T::size_type>;; ```. I think the read-only flag has nothing to do with the accessors. I think it is related to the GUI only.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3234#issuecomment-1228215278
https://github.com/sofa-framework/sofa/pull/3234#issuecomment-1228215278:1108,Security,Access,Accessors,1108,"There is a primary template class that can act on any type (not just Data). In this case, the class is a simple proxy.; A second implementation partially specializes the class for vector types. Again, no need to be a Data. The type needs to implement the `begin` and `end` methods, and the `[](int)` operator, to be considered a vector type.; Finally, a third implementation partially specializes the class for Data. This specialization uses one of the first two implementation: `template<class T> class ReadAccessor<Data<T> > : public ReadAccessor<T>`.; We can say that accessors are meant to be used for Data only, but they need the implementations for any type (the type that is contained by the Data). And those implementations can be tested, even if they are not used. Worth to be noted:; `std::vector` is of course considered as a vector type. If I want to use it through an accessor, it matches the partial specialization for vector types. However, accessors for vector types require the type `Size` in the vector type (there is an alias). `std::vector` has not such a type, so the compilation fails. Accessors to vector types can be used only for `sofa::type::vector` (and its derived types). Conclusion: ; 1) there is a discrepancy between the `is_vector` type trait and the requirements of the accessors.; 2) Write `ReadAccessor<std::vector<Real> >` or `ReadAccessor<Data<std::vector<Real> > >` does not compile. To fix this behavior, I'll suggest in another PR something like; ```cpp; using Size = std::conditional_t<hasSizeSize<T>::value, T::Size, T::size_type>;; ```. I think the read-only flag has nothing to do with the accessors. I think it is related to the GUI only.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3234#issuecomment-1228215278
https://github.com/sofa-framework/sofa/pull/3234#issuecomment-1228215278:1304,Security,access,accessors,1304,"There is a primary template class that can act on any type (not just Data). In this case, the class is a simple proxy.; A second implementation partially specializes the class for vector types. Again, no need to be a Data. The type needs to implement the `begin` and `end` methods, and the `[](int)` operator, to be considered a vector type.; Finally, a third implementation partially specializes the class for Data. This specialization uses one of the first two implementation: `template<class T> class ReadAccessor<Data<T> > : public ReadAccessor<T>`.; We can say that accessors are meant to be used for Data only, but they need the implementations for any type (the type that is contained by the Data). And those implementations can be tested, even if they are not used. Worth to be noted:; `std::vector` is of course considered as a vector type. If I want to use it through an accessor, it matches the partial specialization for vector types. However, accessors for vector types require the type `Size` in the vector type (there is an alias). `std::vector` has not such a type, so the compilation fails. Accessors to vector types can be used only for `sofa::type::vector` (and its derived types). Conclusion: ; 1) there is a discrepancy between the `is_vector` type trait and the requirements of the accessors.; 2) Write `ReadAccessor<std::vector<Real> >` or `ReadAccessor<Data<std::vector<Real> > >` does not compile. To fix this behavior, I'll suggest in another PR something like; ```cpp; using Size = std::conditional_t<hasSizeSize<T>::value, T::Size, T::size_type>;; ```. I think the read-only flag has nothing to do with the accessors. I think it is related to the GUI only.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3234#issuecomment-1228215278
https://github.com/sofa-framework/sofa/pull/3234#issuecomment-1228215278:1635,Security,access,accessors,1635,"There is a primary template class that can act on any type (not just Data). In this case, the class is a simple proxy.; A second implementation partially specializes the class for vector types. Again, no need to be a Data. The type needs to implement the `begin` and `end` methods, and the `[](int)` operator, to be considered a vector type.; Finally, a third implementation partially specializes the class for Data. This specialization uses one of the first two implementation: `template<class T> class ReadAccessor<Data<T> > : public ReadAccessor<T>`.; We can say that accessors are meant to be used for Data only, but they need the implementations for any type (the type that is contained by the Data). And those implementations can be tested, even if they are not used. Worth to be noted:; `std::vector` is of course considered as a vector type. If I want to use it through an accessor, it matches the partial specialization for vector types. However, accessors for vector types require the type `Size` in the vector type (there is an alias). `std::vector` has not such a type, so the compilation fails. Accessors to vector types can be used only for `sofa::type::vector` (and its derived types). Conclusion: ; 1) there is a discrepancy between the `is_vector` type trait and the requirements of the accessors.; 2) Write `ReadAccessor<std::vector<Real> >` or `ReadAccessor<Data<std::vector<Real> > >` does not compile. To fix this behavior, I'll suggest in another PR something like; ```cpp; using Size = std::conditional_t<hasSizeSize<T>::value, T::Size, T::size_type>;; ```. I think the read-only flag has nothing to do with the accessors. I think it is related to the GUI only.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3234#issuecomment-1228215278
https://github.com/sofa-framework/sofa/pull/3234#issuecomment-1228215278:739,Testability,test,tested,739,"There is a primary template class that can act on any type (not just Data). In this case, the class is a simple proxy.; A second implementation partially specializes the class for vector types. Again, no need to be a Data. The type needs to implement the `begin` and `end` methods, and the `[](int)` operator, to be considered a vector type.; Finally, a third implementation partially specializes the class for Data. This specialization uses one of the first two implementation: `template<class T> class ReadAccessor<Data<T> > : public ReadAccessor<T>`.; We can say that accessors are meant to be used for Data only, but they need the implementations for any type (the type that is contained by the Data). And those implementations can be tested, even if they are not used. Worth to be noted:; `std::vector` is of course considered as a vector type. If I want to use it through an accessor, it matches the partial specialization for vector types. However, accessors for vector types require the type `Size` in the vector type (there is an alias). `std::vector` has not such a type, so the compilation fails. Accessors to vector types can be used only for `sofa::type::vector` (and its derived types). Conclusion: ; 1) there is a discrepancy between the `is_vector` type trait and the requirements of the accessors.; 2) Write `ReadAccessor<std::vector<Real> >` or `ReadAccessor<Data<std::vector<Real> > >` does not compile. To fix this behavior, I'll suggest in another PR something like; ```cpp; using Size = std::conditional_t<hasSizeSize<T>::value, T::Size, T::size_type>;; ```. I think the read-only flag has nothing to do with the accessors. I think it is related to the GUI only.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3234#issuecomment-1228215278
https://github.com/sofa-framework/sofa/pull/3234#issuecomment-1228215278:105,Usability,simpl,simple,105,"There is a primary template class that can act on any type (not just Data). In this case, the class is a simple proxy.; A second implementation partially specializes the class for vector types. Again, no need to be a Data. The type needs to implement the `begin` and `end` methods, and the `[](int)` operator, to be considered a vector type.; Finally, a third implementation partially specializes the class for Data. This specialization uses one of the first two implementation: `template<class T> class ReadAccessor<Data<T> > : public ReadAccessor<T>`.; We can say that accessors are meant to be used for Data only, but they need the implementations for any type (the type that is contained by the Data). And those implementations can be tested, even if they are not used. Worth to be noted:; `std::vector` is of course considered as a vector type. If I want to use it through an accessor, it matches the partial specialization for vector types. However, accessors for vector types require the type `Size` in the vector type (there is an alias). `std::vector` has not such a type, so the compilation fails. Accessors to vector types can be used only for `sofa::type::vector` (and its derived types). Conclusion: ; 1) there is a discrepancy between the `is_vector` type trait and the requirements of the accessors.; 2) Write `ReadAccessor<std::vector<Real> >` or `ReadAccessor<Data<std::vector<Real> > >` does not compile. To fix this behavior, I'll suggest in another PR something like; ```cpp; using Size = std::conditional_t<hasSizeSize<T>::value, T::Size, T::size_type>;; ```. I think the read-only flag has nothing to do with the accessors. I think it is related to the GUI only.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3234#issuecomment-1228215278
https://github.com/sofa-framework/sofa/pull/3236#issuecomment-1225363308:209,Modifiability,inherit,inherits,209,"> Could you tell us the cases when the warnings will pop up with your changes?. It will pop-up if you use the deprecated functions/stuff outside of the library you are building.; For example, if one user uses/inherits a deprecated function in a component in its plugin, he will be notified.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3236#issuecomment-1225363308
https://github.com/sofa-framework/sofa/pull/3236#issuecomment-1225363308:262,Modifiability,plugin,plugin,262,"> Could you tell us the cases when the warnings will pop up with your changes?. It will pop-up if you use the deprecated functions/stuff outside of the library you are building.; For example, if one user uses/inherits a deprecated function in a component in its plugin, he will be notified.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3236#issuecomment-1225363308
https://github.com/sofa-framework/sofa/pull/3237#issuecomment-1223622657:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3237#issuecomment-1223622657
https://github.com/sofa-framework/sofa/pull/3237#issuecomment-1257314472:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3237#issuecomment-1257314472
https://github.com/sofa-framework/sofa/pull/3239#issuecomment-1224323251:1065,Modifiability,Plugin,Plugins,1065,"; import Sofa; import Sofa.Core. def createScene(; root_node: Sofa.Core.Node,; ) -> Sofa.Core.Node:. plugin_list = [; ""Sofa.Component.Collision.Detection.Algorithm"", # [BVHNarrowPhase, BruteForceBroadPhase, DefaultPipeline]; ""Sofa.Component.Collision.Detection.Intersection"", # [NewProximityIntersection]; ""Sofa.Component.Collision.Geometry"", # [SphereCollisionModel]; ""Sofa.Component.Collision.Response.Contact"", # [DefaultContactManager]; ""Sofa.Component.Constraint.Projective"", # [FixedConstraint]; ""Sofa.Component.LinearSolver.Iterative"", # [CGLinearSolver]; ""Sofa.Component.Mass"", # [UniformMass]; ""Sofa.Component.ODESolver.Backward"", # [EulerImplicitSolver]; ""Sofa.Component.SolidMechanics.Spring"", # [StiffSpringForceField]; ""Sofa.Component.Topology.Container.Dynamic"", # [EdgeSetTopologyContainer, EdgeSetTopologyModifier]; ""Sofa.Component.Visual"", # [VisualStyle]; ""SofaCarving"", # [CarvingManager]; ""Sofa.Component.StateContainer"", # [MechanicalObject; ]. plugin_node = root_node.addChild(""Plugins""). for plugin in plugin_list:; plugin_node.addObject(""RequiredPlugin"", pluginName=plugin, name=plugin). root_node.addObject(""DefaultAnimationLoop""); root_node.addObject(""DefaultVisualManagerLoop""); root_node.addObject(; ""VisualStyle"",; displayFlags=[""showVisual"", ""showForceFields"", ""showCollisionModels"", ""showBehaviorModels"", ""showInteractionForceFields""],; ). root_node.addObject(""DefaultPipeline""); root_node.addObject(""BruteForceBroadPhase""); root_node.addObject(""BVHNarrowPhase""); root_node.addObject(""DefaultContactManager"", response=""PenalityContactForceField""). root_node.addObject(; ""NewProximityIntersection"",; alarmDistance=3.0,; contactDistance=0.5,; ). root_node.gravity = [0.0, -918, 0.0]. scene_node = root_node.addChild(""scene""); #############; # Cutting Sphere; #############; cutting_sphere_node = scene_node.addChild(""cutting_sphere""); cutting_sphere_node.addObject(""CGLinearSolver""); cutting_sphere_node.addObject(""EulerImplicitSolver""); cutting_sphere_node.addObject(""Po",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3239#issuecomment-1224323251
https://github.com/sofa-framework/sofa/pull/3239#issuecomment-1224323251:1080,Modifiability,plugin,plugin,1080,"e. def createScene(; root_node: Sofa.Core.Node,; ) -> Sofa.Core.Node:. plugin_list = [; ""Sofa.Component.Collision.Detection.Algorithm"", # [BVHNarrowPhase, BruteForceBroadPhase, DefaultPipeline]; ""Sofa.Component.Collision.Detection.Intersection"", # [NewProximityIntersection]; ""Sofa.Component.Collision.Geometry"", # [SphereCollisionModel]; ""Sofa.Component.Collision.Response.Contact"", # [DefaultContactManager]; ""Sofa.Component.Constraint.Projective"", # [FixedConstraint]; ""Sofa.Component.LinearSolver.Iterative"", # [CGLinearSolver]; ""Sofa.Component.Mass"", # [UniformMass]; ""Sofa.Component.ODESolver.Backward"", # [EulerImplicitSolver]; ""Sofa.Component.SolidMechanics.Spring"", # [StiffSpringForceField]; ""Sofa.Component.Topology.Container.Dynamic"", # [EdgeSetTopologyContainer, EdgeSetTopologyModifier]; ""Sofa.Component.Visual"", # [VisualStyle]; ""SofaCarving"", # [CarvingManager]; ""Sofa.Component.StateContainer"", # [MechanicalObject; ]. plugin_node = root_node.addChild(""Plugins""). for plugin in plugin_list:; plugin_node.addObject(""RequiredPlugin"", pluginName=plugin, name=plugin). root_node.addObject(""DefaultAnimationLoop""); root_node.addObject(""DefaultVisualManagerLoop""); root_node.addObject(; ""VisualStyle"",; displayFlags=[""showVisual"", ""showForceFields"", ""showCollisionModels"", ""showBehaviorModels"", ""showInteractionForceFields""],; ). root_node.addObject(""DefaultPipeline""); root_node.addObject(""BruteForceBroadPhase""); root_node.addObject(""BVHNarrowPhase""); root_node.addObject(""DefaultContactManager"", response=""PenalityContactForceField""). root_node.addObject(; ""NewProximityIntersection"",; alarmDistance=3.0,; contactDistance=0.5,; ). root_node.gravity = [0.0, -918, 0.0]. scene_node = root_node.addChild(""scene""); #############; # Cutting Sphere; #############; cutting_sphere_node = scene_node.addChild(""cutting_sphere""); cutting_sphere_node.addObject(""CGLinearSolver""); cutting_sphere_node.addObject(""EulerImplicitSolver""); cutting_sphere_node.addObject(""PointSetTopologyContainer""); cutt",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3239#issuecomment-1224323251
https://github.com/sofa-framework/sofa/pull/3239#issuecomment-1224323251:1144,Modifiability,plugin,pluginName,1144,"-> Sofa.Core.Node:. plugin_list = [; ""Sofa.Component.Collision.Detection.Algorithm"", # [BVHNarrowPhase, BruteForceBroadPhase, DefaultPipeline]; ""Sofa.Component.Collision.Detection.Intersection"", # [NewProximityIntersection]; ""Sofa.Component.Collision.Geometry"", # [SphereCollisionModel]; ""Sofa.Component.Collision.Response.Contact"", # [DefaultContactManager]; ""Sofa.Component.Constraint.Projective"", # [FixedConstraint]; ""Sofa.Component.LinearSolver.Iterative"", # [CGLinearSolver]; ""Sofa.Component.Mass"", # [UniformMass]; ""Sofa.Component.ODESolver.Backward"", # [EulerImplicitSolver]; ""Sofa.Component.SolidMechanics.Spring"", # [StiffSpringForceField]; ""Sofa.Component.Topology.Container.Dynamic"", # [EdgeSetTopologyContainer, EdgeSetTopologyModifier]; ""Sofa.Component.Visual"", # [VisualStyle]; ""SofaCarving"", # [CarvingManager]; ""Sofa.Component.StateContainer"", # [MechanicalObject; ]. plugin_node = root_node.addChild(""Plugins""). for plugin in plugin_list:; plugin_node.addObject(""RequiredPlugin"", pluginName=plugin, name=plugin). root_node.addObject(""DefaultAnimationLoop""); root_node.addObject(""DefaultVisualManagerLoop""); root_node.addObject(; ""VisualStyle"",; displayFlags=[""showVisual"", ""showForceFields"", ""showCollisionModels"", ""showBehaviorModels"", ""showInteractionForceFields""],; ). root_node.addObject(""DefaultPipeline""); root_node.addObject(""BruteForceBroadPhase""); root_node.addObject(""BVHNarrowPhase""); root_node.addObject(""DefaultContactManager"", response=""PenalityContactForceField""). root_node.addObject(; ""NewProximityIntersection"",; alarmDistance=3.0,; contactDistance=0.5,; ). root_node.gravity = [0.0, -918, 0.0]. scene_node = root_node.addChild(""scene""); #############; # Cutting Sphere; #############; cutting_sphere_node = scene_node.addChild(""cutting_sphere""); cutting_sphere_node.addObject(""CGLinearSolver""); cutting_sphere_node.addObject(""EulerImplicitSolver""); cutting_sphere_node.addObject(""PointSetTopologyContainer""); cutting_sphere_node.addObject(""MechanicalObject"", temp",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3239#issuecomment-1224323251
https://github.com/sofa-framework/sofa/pull/3239#issuecomment-1224323251:1155,Modifiability,plugin,plugin,1155,"-> Sofa.Core.Node:. plugin_list = [; ""Sofa.Component.Collision.Detection.Algorithm"", # [BVHNarrowPhase, BruteForceBroadPhase, DefaultPipeline]; ""Sofa.Component.Collision.Detection.Intersection"", # [NewProximityIntersection]; ""Sofa.Component.Collision.Geometry"", # [SphereCollisionModel]; ""Sofa.Component.Collision.Response.Contact"", # [DefaultContactManager]; ""Sofa.Component.Constraint.Projective"", # [FixedConstraint]; ""Sofa.Component.LinearSolver.Iterative"", # [CGLinearSolver]; ""Sofa.Component.Mass"", # [UniformMass]; ""Sofa.Component.ODESolver.Backward"", # [EulerImplicitSolver]; ""Sofa.Component.SolidMechanics.Spring"", # [StiffSpringForceField]; ""Sofa.Component.Topology.Container.Dynamic"", # [EdgeSetTopologyContainer, EdgeSetTopologyModifier]; ""Sofa.Component.Visual"", # [VisualStyle]; ""SofaCarving"", # [CarvingManager]; ""Sofa.Component.StateContainer"", # [MechanicalObject; ]. plugin_node = root_node.addChild(""Plugins""). for plugin in plugin_list:; plugin_node.addObject(""RequiredPlugin"", pluginName=plugin, name=plugin). root_node.addObject(""DefaultAnimationLoop""); root_node.addObject(""DefaultVisualManagerLoop""); root_node.addObject(; ""VisualStyle"",; displayFlags=[""showVisual"", ""showForceFields"", ""showCollisionModels"", ""showBehaviorModels"", ""showInteractionForceFields""],; ). root_node.addObject(""DefaultPipeline""); root_node.addObject(""BruteForceBroadPhase""); root_node.addObject(""BVHNarrowPhase""); root_node.addObject(""DefaultContactManager"", response=""PenalityContactForceField""). root_node.addObject(; ""NewProximityIntersection"",; alarmDistance=3.0,; contactDistance=0.5,; ). root_node.gravity = [0.0, -918, 0.0]. scene_node = root_node.addChild(""scene""); #############; # Cutting Sphere; #############; cutting_sphere_node = scene_node.addChild(""cutting_sphere""); cutting_sphere_node.addObject(""CGLinearSolver""); cutting_sphere_node.addObject(""EulerImplicitSolver""); cutting_sphere_node.addObject(""PointSetTopologyContainer""); cutting_sphere_node.addObject(""MechanicalObject"", temp",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3239#issuecomment-1224323251
https://github.com/sofa-framework/sofa/pull/3239#issuecomment-1224323251:1168,Modifiability,plugin,plugin,1168,"-> Sofa.Core.Node:. plugin_list = [; ""Sofa.Component.Collision.Detection.Algorithm"", # [BVHNarrowPhase, BruteForceBroadPhase, DefaultPipeline]; ""Sofa.Component.Collision.Detection.Intersection"", # [NewProximityIntersection]; ""Sofa.Component.Collision.Geometry"", # [SphereCollisionModel]; ""Sofa.Component.Collision.Response.Contact"", # [DefaultContactManager]; ""Sofa.Component.Constraint.Projective"", # [FixedConstraint]; ""Sofa.Component.LinearSolver.Iterative"", # [CGLinearSolver]; ""Sofa.Component.Mass"", # [UniformMass]; ""Sofa.Component.ODESolver.Backward"", # [EulerImplicitSolver]; ""Sofa.Component.SolidMechanics.Spring"", # [StiffSpringForceField]; ""Sofa.Component.Topology.Container.Dynamic"", # [EdgeSetTopologyContainer, EdgeSetTopologyModifier]; ""Sofa.Component.Visual"", # [VisualStyle]; ""SofaCarving"", # [CarvingManager]; ""Sofa.Component.StateContainer"", # [MechanicalObject; ]. plugin_node = root_node.addChild(""Plugins""). for plugin in plugin_list:; plugin_node.addObject(""RequiredPlugin"", pluginName=plugin, name=plugin). root_node.addObject(""DefaultAnimationLoop""); root_node.addObject(""DefaultVisualManagerLoop""); root_node.addObject(; ""VisualStyle"",; displayFlags=[""showVisual"", ""showForceFields"", ""showCollisionModels"", ""showBehaviorModels"", ""showInteractionForceFields""],; ). root_node.addObject(""DefaultPipeline""); root_node.addObject(""BruteForceBroadPhase""); root_node.addObject(""BVHNarrowPhase""); root_node.addObject(""DefaultContactManager"", response=""PenalityContactForceField""). root_node.addObject(; ""NewProximityIntersection"",; alarmDistance=3.0,; contactDistance=0.5,; ). root_node.gravity = [0.0, -918, 0.0]. scene_node = root_node.addChild(""scene""); #############; # Cutting Sphere; #############; cutting_sphere_node = scene_node.addChild(""cutting_sphere""); cutting_sphere_node.addObject(""CGLinearSolver""); cutting_sphere_node.addObject(""EulerImplicitSolver""); cutting_sphere_node.addObject(""PointSetTopologyContainer""); cutting_sphere_node.addObject(""MechanicalObject"", temp",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3239#issuecomment-1224323251
https://github.com/sofa-framework/sofa/pull/3239#issuecomment-1224323251:209,Safety,Detect,Detection,209,"Oh and here's a minimal scene to test the new feature:. ```python; import Sofa; import Sofa.Core. def createScene(; root_node: Sofa.Core.Node,; ) -> Sofa.Core.Node:. plugin_list = [; ""Sofa.Component.Collision.Detection.Algorithm"", # [BVHNarrowPhase, BruteForceBroadPhase, DefaultPipeline]; ""Sofa.Component.Collision.Detection.Intersection"", # [NewProximityIntersection]; ""Sofa.Component.Collision.Geometry"", # [SphereCollisionModel]; ""Sofa.Component.Collision.Response.Contact"", # [DefaultContactManager]; ""Sofa.Component.Constraint.Projective"", # [FixedConstraint]; ""Sofa.Component.LinearSolver.Iterative"", # [CGLinearSolver]; ""Sofa.Component.Mass"", # [UniformMass]; ""Sofa.Component.ODESolver.Backward"", # [EulerImplicitSolver]; ""Sofa.Component.SolidMechanics.Spring"", # [StiffSpringForceField]; ""Sofa.Component.Topology.Container.Dynamic"", # [EdgeSetTopologyContainer, EdgeSetTopologyModifier]; ""Sofa.Component.Visual"", # [VisualStyle]; ""SofaCarving"", # [CarvingManager]; ""Sofa.Component.StateContainer"", # [MechanicalObject; ]. plugin_node = root_node.addChild(""Plugins""). for plugin in plugin_list:; plugin_node.addObject(""RequiredPlugin"", pluginName=plugin, name=plugin). root_node.addObject(""DefaultAnimationLoop""); root_node.addObject(""DefaultVisualManagerLoop""); root_node.addObject(; ""VisualStyle"",; displayFlags=[""showVisual"", ""showForceFields"", ""showCollisionModels"", ""showBehaviorModels"", ""showInteractionForceFields""],; ). root_node.addObject(""DefaultPipeline""); root_node.addObject(""BruteForceBroadPhase""); root_node.addObject(""BVHNarrowPhase""); root_node.addObject(""DefaultContactManager"", response=""PenalityContactForceField""). root_node.addObject(; ""NewProximityIntersection"",; alarmDistance=3.0,; contactDistance=0.5,; ). root_node.gravity = [0.0, -918, 0.0]. scene_node = root_node.addChild(""scene""); #############; # Cutting Sphere; #############; cutting_sphere_node = scene_node.addChild(""cutting_sphere""); cutting_sphere_node.addObject(""CGLinearSolver""); cutting_sphere_node.add",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3239#issuecomment-1224323251
https://github.com/sofa-framework/sofa/pull/3239#issuecomment-1224323251:316,Safety,Detect,Detection,316,"Oh and here's a minimal scene to test the new feature:. ```python; import Sofa; import Sofa.Core. def createScene(; root_node: Sofa.Core.Node,; ) -> Sofa.Core.Node:. plugin_list = [; ""Sofa.Component.Collision.Detection.Algorithm"", # [BVHNarrowPhase, BruteForceBroadPhase, DefaultPipeline]; ""Sofa.Component.Collision.Detection.Intersection"", # [NewProximityIntersection]; ""Sofa.Component.Collision.Geometry"", # [SphereCollisionModel]; ""Sofa.Component.Collision.Response.Contact"", # [DefaultContactManager]; ""Sofa.Component.Constraint.Projective"", # [FixedConstraint]; ""Sofa.Component.LinearSolver.Iterative"", # [CGLinearSolver]; ""Sofa.Component.Mass"", # [UniformMass]; ""Sofa.Component.ODESolver.Backward"", # [EulerImplicitSolver]; ""Sofa.Component.SolidMechanics.Spring"", # [StiffSpringForceField]; ""Sofa.Component.Topology.Container.Dynamic"", # [EdgeSetTopologyContainer, EdgeSetTopologyModifier]; ""Sofa.Component.Visual"", # [VisualStyle]; ""SofaCarving"", # [CarvingManager]; ""Sofa.Component.StateContainer"", # [MechanicalObject; ]. plugin_node = root_node.addChild(""Plugins""). for plugin in plugin_list:; plugin_node.addObject(""RequiredPlugin"", pluginName=plugin, name=plugin). root_node.addObject(""DefaultAnimationLoop""); root_node.addObject(""DefaultVisualManagerLoop""); root_node.addObject(; ""VisualStyle"",; displayFlags=[""showVisual"", ""showForceFields"", ""showCollisionModels"", ""showBehaviorModels"", ""showInteractionForceFields""],; ). root_node.addObject(""DefaultPipeline""); root_node.addObject(""BruteForceBroadPhase""); root_node.addObject(""BVHNarrowPhase""); root_node.addObject(""DefaultContactManager"", response=""PenalityContactForceField""). root_node.addObject(; ""NewProximityIntersection"",; alarmDistance=3.0,; contactDistance=0.5,; ). root_node.gravity = [0.0, -918, 0.0]. scene_node = root_node.addChild(""scene""); #############; # Cutting Sphere; #############; cutting_sphere_node = scene_node.addChild(""cutting_sphere""); cutting_sphere_node.addObject(""CGLinearSolver""); cutting_sphere_node.add",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3239#issuecomment-1224323251
https://github.com/sofa-framework/sofa/pull/3239#issuecomment-1224323251:33,Testability,test,test,33,"Oh and here's a minimal scene to test the new feature:. ```python; import Sofa; import Sofa.Core. def createScene(; root_node: Sofa.Core.Node,; ) -> Sofa.Core.Node:. plugin_list = [; ""Sofa.Component.Collision.Detection.Algorithm"", # [BVHNarrowPhase, BruteForceBroadPhase, DefaultPipeline]; ""Sofa.Component.Collision.Detection.Intersection"", # [NewProximityIntersection]; ""Sofa.Component.Collision.Geometry"", # [SphereCollisionModel]; ""Sofa.Component.Collision.Response.Contact"", # [DefaultContactManager]; ""Sofa.Component.Constraint.Projective"", # [FixedConstraint]; ""Sofa.Component.LinearSolver.Iterative"", # [CGLinearSolver]; ""Sofa.Component.Mass"", # [UniformMass]; ""Sofa.Component.ODESolver.Backward"", # [EulerImplicitSolver]; ""Sofa.Component.SolidMechanics.Spring"", # [StiffSpringForceField]; ""Sofa.Component.Topology.Container.Dynamic"", # [EdgeSetTopologyContainer, EdgeSetTopologyModifier]; ""Sofa.Component.Visual"", # [VisualStyle]; ""SofaCarving"", # [CarvingManager]; ""Sofa.Component.StateContainer"", # [MechanicalObject; ]. plugin_node = root_node.addChild(""Plugins""). for plugin in plugin_list:; plugin_node.addObject(""RequiredPlugin"", pluginName=plugin, name=plugin). root_node.addObject(""DefaultAnimationLoop""); root_node.addObject(""DefaultVisualManagerLoop""); root_node.addObject(; ""VisualStyle"",; displayFlags=[""showVisual"", ""showForceFields"", ""showCollisionModels"", ""showBehaviorModels"", ""showInteractionForceFields""],; ). root_node.addObject(""DefaultPipeline""); root_node.addObject(""BruteForceBroadPhase""); root_node.addObject(""BVHNarrowPhase""); root_node.addObject(""DefaultContactManager"", response=""PenalityContactForceField""). root_node.addObject(; ""NewProximityIntersection"",; alarmDistance=3.0,; contactDistance=0.5,; ). root_node.gravity = [0.0, -918, 0.0]. scene_node = root_node.addChild(""scene""); #############; # Cutting Sphere; #############; cutting_sphere_node = scene_node.addChild(""cutting_sphere""); cutting_sphere_node.addObject(""CGLinearSolver""); cutting_sphere_node.add",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3239#issuecomment-1224323251
https://github.com/sofa-framework/sofa/pull/3239#issuecomment-1238183338:404,Deployability,pipeline,pipeline,404,"> Hello @ScheiklP ,; > ; > thank you for this PR. Two points:; > ; > 1. Could you explain why you have 2x the index 5 in your example?; > Is it because you are using several collision models and the index 5 is added twice from the carvingManager?; > ; > In the case of segfault, is it because the indice 5 is still to be removed but your vertex buffer last index is now 4 ?. Hi @epernod ,; The collision pipeline correctly detected collisions between index 5 on the LineCollisionModel and all indices on the SphereCollisionModels. In the other removeElement functions, the indices are put into a set to filter duplicates. In the first commit for the new features this was not the case -> 5 was in the indices list multiple times.; The new commit filters out the duplicates.; It should also quite a bit faster, because it does not need to create a set.; Just one sort at creation.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3239#issuecomment-1238183338
https://github.com/sofa-framework/sofa/pull/3239#issuecomment-1238183338:423,Safety,detect,detected,423,"> Hello @ScheiklP ,; > ; > thank you for this PR. Two points:; > ; > 1. Could you explain why you have 2x the index 5 in your example?; > Is it because you are using several collision models and the index 5 is added twice from the carvingManager?; > ; > In the case of segfault, is it because the indice 5 is still to be removed but your vertex buffer last index is now 4 ?. Hi @epernod ,; The collision pipeline correctly detected collisions between index 5 on the LineCollisionModel and all indices on the SphereCollisionModels. In the other removeElement functions, the indices are put into a set to filter duplicates. In the first commit for the new features this was not the case -> 5 was in the indices list multiple times.; The new commit filters out the duplicates.; It should also quite a bit faster, because it does not need to create a set.; Just one sort at creation.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3239#issuecomment-1238183338
https://github.com/sofa-framework/sofa/pull/3239#issuecomment-1244059611:174,Modifiability,plugin,plugins,174,"> Sorry, my question was more, do you know why the index 5 was inserted multiple time?. Ah, yes, because of:; https://github.com/sofa-framework/sofa/blob/master/applications/plugins/SofaCarving/CarvingManager.cpp#L183-L194. We could change `elemsToRemove` from `vector` to `set` at the cost of a bit performance.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3239#issuecomment-1244059611
https://github.com/sofa-framework/sofa/pull/3239#issuecomment-1244059611:300,Performance,perform,performance,300,"> Sorry, my question was more, do you know why the index 5 was inserted multiple time?. Ah, yes, because of:; https://github.com/sofa-framework/sofa/blob/master/applications/plugins/SofaCarving/CarvingManager.cpp#L183-L194. We could change `elemsToRemove` from `vector` to `set` at the cost of a bit performance.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3239#issuecomment-1244059611
https://github.com/sofa-framework/sofa/pull/3239#issuecomment-1250079382:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3239#issuecomment-1250079382
https://github.com/sofa-framework/sofa/pull/3240#issuecomment-1225860075:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3240#issuecomment-1225860075
https://github.com/sofa-framework/sofa/pull/3240#issuecomment-1227083514:33,Deployability,hotfix,hotfix,33,@sofa-framework/consortium-staff hotfix in 22.06?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3240#issuecomment-1227083514
https://github.com/sofa-framework/sofa/pull/3241#issuecomment-1226752129:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3241#issuecomment-1226752129
https://github.com/sofa-framework/sofa/pull/3241#issuecomment-1226819678:23,Availability,failure,failures,23,@fredroy you have test failures,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3241#issuecomment-1226819678
https://github.com/sofa-framework/sofa/pull/3241#issuecomment-1226819678:18,Testability,test,test,18,@fredroy you have test failures,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3241#issuecomment-1226819678
https://github.com/sofa-framework/sofa/pull/3241#issuecomment-1227045937:701,Integrability,interface,interface,701,"Thanks @fredroy for the PR which address a legitimate concern. The problem adressed by the PR is often seen in SOFA's base classes where a parent class is having virtual function defined to print ""no implemented"" (or to print nothing). In general this pattern can be considered as a good code smell often related to some violation of SOLID's principle (eg: Liskov Substition Principle). The proposed solution of moving functions in a separated object is going in the right direction (as pointed by @alxbilger by segregating the intefaces). But it is unclear to me if the implementation proposed in the PR is enough because:; - having PartialLinearSolver inheriting from BaseObject looks weird for an ""interface"", ; - using dynamic cast to detect the ""features"" in the ConstraintCorrection, ... ; - the implementation in BTD also looks highly suspicious with:; - plenty of ""debug/trace"" mapped to Datas as if the feature was ""not stable"" or only working in some case.; - a boolean to control if we use the PartialLinearSolver part of the API or if we don't... and I wonder if the actually really work for full & partial solving or only for one of the two APIs.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3241#issuecomment-1227045937
https://github.com/sofa-framework/sofa/pull/3241#issuecomment-1227045937:654,Modifiability,inherit,inheriting,654,"Thanks @fredroy for the PR which address a legitimate concern. The problem adressed by the PR is often seen in SOFA's base classes where a parent class is having virtual function defined to print ""no implemented"" (or to print nothing). In general this pattern can be considered as a good code smell often related to some violation of SOLID's principle (eg: Liskov Substition Principle). The proposed solution of moving functions in a separated object is going in the right direction (as pointed by @alxbilger by segregating the intefaces). But it is unclear to me if the implementation proposed in the PR is enough because:; - having PartialLinearSolver inheriting from BaseObject looks weird for an ""interface"", ; - using dynamic cast to detect the ""features"" in the ConstraintCorrection, ... ; - the implementation in BTD also looks highly suspicious with:; - plenty of ""debug/trace"" mapped to Datas as if the feature was ""not stable"" or only working in some case.; - a boolean to control if we use the PartialLinearSolver part of the API or if we don't... and I wonder if the actually really work for full & partial solving or only for one of the two APIs.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3241#issuecomment-1227045937
https://github.com/sofa-framework/sofa/pull/3241#issuecomment-1227045937:739,Safety,detect,detect,739,"Thanks @fredroy for the PR which address a legitimate concern. The problem adressed by the PR is often seen in SOFA's base classes where a parent class is having virtual function defined to print ""no implemented"" (or to print nothing). In general this pattern can be considered as a good code smell often related to some violation of SOLID's principle (eg: Liskov Substition Principle). The proposed solution of moving functions in a separated object is going in the right direction (as pointed by @alxbilger by segregating the intefaces). But it is unclear to me if the implementation proposed in the PR is enough because:; - having PartialLinearSolver inheriting from BaseObject looks weird for an ""interface"", ; - using dynamic cast to detect the ""features"" in the ConstraintCorrection, ... ; - the implementation in BTD also looks highly suspicious with:; - plenty of ""debug/trace"" mapped to Datas as if the feature was ""not stable"" or only working in some case.; - a boolean to control if we use the PartialLinearSolver part of the API or if we don't... and I wonder if the actually really work for full & partial solving or only for one of the two APIs.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3241#issuecomment-1227045937
https://github.com/sofa-framework/sofa/pull/3241#issuecomment-1227871506:275,Integrability,interface,interface,275,"I agree with all the points :F and I think we need to have a bit more info about this component...; ; > ; > But it is unclear to me if the implementation proposed in the PR is enough because:; > ; > * having PartialLinearSolver inheriting from BaseObject looks weird for an ""interface"",. Did it to get the SOFA_ABSTRACT_CLASS mechanism (for the boiler-late code from Object, and to be able to do ::SPtr). > * using dynamic cast to detect the ""features"" in the ConstraintCorrection, ... (I will reply to this in my next answer to alxb). > * the implementation in BTD also looks highly suspicious with:; > ; > * plenty of ""debug/trace"" mapped to Datas as if the feature was ""not stable"" or only working in some case.; > * a boolean to control if we use the PartialLinearSolver part of the API or if we don't... and I wonder if the actually really work for full & partial solving or only for one of the two APIs. The lack of comments, and the fact that the ""partial_solve"" API seems to come from this class is a bit difficult to follow yeah :p.; As far as I could see, the BTDblabla/LinearSolverCC is only used for the beam-related stuff.; All in all, I guess we need more information about it @ChristianDuriez",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3241#issuecomment-1227871506
https://github.com/sofa-framework/sofa/pull/3241#issuecomment-1227871506:228,Modifiability,inherit,inheriting,228,"I agree with all the points :F and I think we need to have a bit more info about this component...; ; > ; > But it is unclear to me if the implementation proposed in the PR is enough because:; > ; > * having PartialLinearSolver inheriting from BaseObject looks weird for an ""interface"",. Did it to get the SOFA_ABSTRACT_CLASS mechanism (for the boiler-late code from Object, and to be able to do ::SPtr). > * using dynamic cast to detect the ""features"" in the ConstraintCorrection, ... (I will reply to this in my next answer to alxb). > * the implementation in BTD also looks highly suspicious with:; > ; > * plenty of ""debug/trace"" mapped to Datas as if the feature was ""not stable"" or only working in some case.; > * a boolean to control if we use the PartialLinearSolver part of the API or if we don't... and I wonder if the actually really work for full & partial solving or only for one of the two APIs. The lack of comments, and the fact that the ""partial_solve"" API seems to come from this class is a bit difficult to follow yeah :p.; As far as I could see, the BTDblabla/LinearSolverCC is only used for the beam-related stuff.; All in all, I guess we need more information about it @ChristianDuriez",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3241#issuecomment-1227871506
https://github.com/sofa-framework/sofa/pull/3241#issuecomment-1227871506:431,Safety,detect,detect,431,"I agree with all the points :F and I think we need to have a bit more info about this component...; ; > ; > But it is unclear to me if the implementation proposed in the PR is enough because:; > ; > * having PartialLinearSolver inheriting from BaseObject looks weird for an ""interface"",. Did it to get the SOFA_ABSTRACT_CLASS mechanism (for the boiler-late code from Object, and to be able to do ::SPtr). > * using dynamic cast to detect the ""features"" in the ConstraintCorrection, ... (I will reply to this in my next answer to alxb). > * the implementation in BTD also looks highly suspicious with:; > ; > * plenty of ""debug/trace"" mapped to Datas as if the feature was ""not stable"" or only working in some case.; > * a boolean to control if we use the PartialLinearSolver part of the API or if we don't... and I wonder if the actually really work for full & partial solving or only for one of the two APIs. The lack of comments, and the fact that the ""partial_solve"" API seems to come from this class is a bit difficult to follow yeah :p.; As far as I could see, the BTDblabla/LinearSolverCC is only used for the beam-related stuff.; All in all, I guess we need more information about it @ChristianDuriez",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3241#issuecomment-1227871506
https://github.com/sofa-framework/sofa/pull/3241#issuecomment-1227872942:239,Modifiability,inherit,inherits,239,"> To answer the `dynamic_cast` concern, the link `l_linearSolver` can be of type `PartialLinearSolver` instead of `LinearSolver`. That is a big question: does a Partial Linear Solver implies that it also implements Linear Solver ? (and so inherits from LinearSolver, and BTD inherits only from PartialLinearSolver); In this case your answer is right.; But in the case that it is not (could be partial and unable to solve complete system), we cannot do a link to a partial linear solver, as we need some other functions from the LinearSolver API.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3241#issuecomment-1227872942
https://github.com/sofa-framework/sofa/pull/3241#issuecomment-1227872942:275,Modifiability,inherit,inherits,275,"> To answer the `dynamic_cast` concern, the link `l_linearSolver` can be of type `PartialLinearSolver` instead of `LinearSolver`. That is a big question: does a Partial Linear Solver implies that it also implements Linear Solver ? (and so inherits from LinearSolver, and BTD inherits only from PartialLinearSolver); In this case your answer is right.; But in the case that it is not (could be partial and unable to solve complete system), we cannot do a link to a partial linear solver, as we need some other functions from the LinearSolver API.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3241#issuecomment-1227872942
https://github.com/sofa-framework/sofa/pull/3241#issuecomment-1228125246:175,Integrability,interface,interface,175,"> > But it is unclear to me if the implementation proposed in the PR is enough because:; > > ; > > * having PartialLinearSolver inheriting from BaseObject looks weird for an ""interface"",; > ; > Did it to get the SOFA_ABSTRACT_CLASS mechanism (for the boiler-late code from Object, and to be able to do ::SPtr). What I did in the matrix assembly branch: 2 classes:; 1) An abstract class describing the API; 2) Another class deriving from the interface **AND** from BaseObject. In my case, I needed to add the object in the graph.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3241#issuecomment-1228125246
https://github.com/sofa-framework/sofa/pull/3241#issuecomment-1228125246:441,Integrability,interface,interface,441,"> > But it is unclear to me if the implementation proposed in the PR is enough because:; > > ; > > * having PartialLinearSolver inheriting from BaseObject looks weird for an ""interface"",; > ; > Did it to get the SOFA_ABSTRACT_CLASS mechanism (for the boiler-late code from Object, and to be able to do ::SPtr). What I did in the matrix assembly branch: 2 classes:; 1) An abstract class describing the API; 2) Another class deriving from the interface **AND** from BaseObject. In my case, I needed to add the object in the graph.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3241#issuecomment-1228125246
https://github.com/sofa-framework/sofa/pull/3241#issuecomment-1228125246:128,Modifiability,inherit,inheriting,128,"> > But it is unclear to me if the implementation proposed in the PR is enough because:; > > ; > > * having PartialLinearSolver inheriting from BaseObject looks weird for an ""interface"",; > ; > Did it to get the SOFA_ABSTRACT_CLASS mechanism (for the boiler-late code from Object, and to be able to do ::SPtr). What I did in the matrix assembly branch: 2 classes:; 1) An abstract class describing the API; 2) Another class deriving from the interface **AND** from BaseObject. In my case, I needed to add the object in the graph.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3241#issuecomment-1228125246
https://github.com/sofa-framework/sofa/pull/3241#issuecomment-1228130020:181,Integrability,interface,interface,181,"> > > But it is unclear to me if the implementation proposed in the PR is enough because:; > > > ; > > > * having PartialLinearSolver inheriting from BaseObject looks weird for an ""interface"",; > > ; > > ; > > Did it to get the SOFA_ABSTRACT_CLASS mechanism (for the boiler-late code from Object, and to be able to do ::SPtr); > ; > What I did in the matrix assembly branch: 2 classes:; > ; > 1. An abstract class describing the API; > ; > 2. Another class deriving from the interface **AND** from BaseObject. In my case, I needed to add the object in the graph. I see ( a pure interface and then a kind of sofaobject interface)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3241#issuecomment-1228130020
https://github.com/sofa-framework/sofa/pull/3241#issuecomment-1228130020:475,Integrability,interface,interface,475,"> > > But it is unclear to me if the implementation proposed in the PR is enough because:; > > > ; > > > * having PartialLinearSolver inheriting from BaseObject looks weird for an ""interface"",; > > ; > > ; > > Did it to get the SOFA_ABSTRACT_CLASS mechanism (for the boiler-late code from Object, and to be able to do ::SPtr); > ; > What I did in the matrix assembly branch: 2 classes:; > ; > 1. An abstract class describing the API; > ; > 2. Another class deriving from the interface **AND** from BaseObject. In my case, I needed to add the object in the graph. I see ( a pure interface and then a kind of sofaobject interface)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3241#issuecomment-1228130020
https://github.com/sofa-framework/sofa/pull/3241#issuecomment-1228130020:578,Integrability,interface,interface,578,"> > > But it is unclear to me if the implementation proposed in the PR is enough because:; > > > ; > > > * having PartialLinearSolver inheriting from BaseObject looks weird for an ""interface"",; > > ; > > ; > > Did it to get the SOFA_ABSTRACT_CLASS mechanism (for the boiler-late code from Object, and to be able to do ::SPtr); > ; > What I did in the matrix assembly branch: 2 classes:; > ; > 1. An abstract class describing the API; > ; > 2. Another class deriving from the interface **AND** from BaseObject. In my case, I needed to add the object in the graph. I see ( a pure interface and then a kind of sofaobject interface)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3241#issuecomment-1228130020
https://github.com/sofa-framework/sofa/pull/3241#issuecomment-1228130020:618,Integrability,interface,interface,618,"> > > But it is unclear to me if the implementation proposed in the PR is enough because:; > > > ; > > > * having PartialLinearSolver inheriting from BaseObject looks weird for an ""interface"",; > > ; > > ; > > Did it to get the SOFA_ABSTRACT_CLASS mechanism (for the boiler-late code from Object, and to be able to do ::SPtr); > ; > What I did in the matrix assembly branch: 2 classes:; > ; > 1. An abstract class describing the API; > ; > 2. Another class deriving from the interface **AND** from BaseObject. In my case, I needed to add the object in the graph. I see ( a pure interface and then a kind of sofaobject interface)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3241#issuecomment-1228130020
https://github.com/sofa-framework/sofa/pull/3241#issuecomment-1228130020:134,Modifiability,inherit,inheriting,134,"> > > But it is unclear to me if the implementation proposed in the PR is enough because:; > > > ; > > > * having PartialLinearSolver inheriting from BaseObject looks weird for an ""interface"",; > > ; > > ; > > Did it to get the SOFA_ABSTRACT_CLASS mechanism (for the boiler-late code from Object, and to be able to do ::SPtr); > ; > What I did in the matrix assembly branch: 2 classes:; > ; > 1. An abstract class describing the API; > ; > 2. Another class deriving from the interface **AND** from BaseObject. In my case, I needed to add the object in the graph. I see ( a pure interface and then a kind of sofaobject interface)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3241#issuecomment-1228130020
https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1227078189:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #1](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3242/1/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/298**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 3416644a5e83e7ef32e28f013656b55251ee7a94_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1227078189
https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1227078189:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #1](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3242/1/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/298**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 3416644a5e83e7ef32e28f013656b55251ee7a94_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1227078189
https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1227324574:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3242/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/298**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 3416644a5e83e7ef32e28f013656b55251ee7a94_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1227324574
https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1227324574:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3242/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/298**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 3416644a5e83e7ef32e28f013656b55251ee7a94_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1227324574
https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1241627240:38,Testability,test,tests,38,[ci-build][force-full-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1241627240
https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1241627402:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3242/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/298**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ea00c8f06070b1685d264b20c43c6a7d0b4ef0cf_; - **Merge or close https://github.com/sofa-framework/Registration/pull/4**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 34d8c39791ed54da56cfa34cd53ec712f220992d_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1241627402
https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1241627402:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3242/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/298**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ea00c8f06070b1685d264b20c43c6a7d0b4ef0cf_; - **Merge or close https://github.com/sofa-framework/Registration/pull/4**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 34d8c39791ed54da56cfa34cd53ec712f220992d_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1241627402
https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1253383201:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3242/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/298**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 878dac5a9ca7afa4425dfc1792a6057d53d3fc4b_; - **Merge or close https://github.com/sofa-framework/Registration/pull/4**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 34d8c39791ed54da56cfa34cd53ec712f220992d_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1253383201
https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1253383201:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3242/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/298**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 878dac5a9ca7afa4425dfc1792a6057d53d3fc4b_; - **Merge or close https://github.com/sofa-framework/Registration/pull/4**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 34d8c39791ed54da56cfa34cd53ec712f220992d_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1253383201
https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1255919791:38,Testability,test,tests,38,[ci-build][force-full-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1255919791
https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1255919912:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3242/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Registration/pull/4**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 34d8c39791ed54da56cfa34cd53ec712f220992d_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1255919912
https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1255919912:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3242/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Registration/pull/4**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 34d8c39791ed54da56cfa34cd53ec712f220992d_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1255919912
https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1266924134:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3242/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Registration/pull/4**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 34d8c39791ed54da56cfa34cd53ec712f220992d_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1266924134
https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1266924134:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3242/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Registration/pull/4**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 34d8c39791ed54da56cfa34cd53ec712f220992d_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1266924134
https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1282000986:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3242/7/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Registration/pull/4**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 34d8c39791ed54da56cfa34cd53ec712f220992d_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1282000986
https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1282000986:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3242/7/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Registration/pull/4**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 34d8c39791ed54da56cfa34cd53ec712f220992d_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1282000986
https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1291959311:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3242/8/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Registration/pull/4**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 33248202c3f2031162c0f67cfc2585060ea21a42_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1291959311
https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1291959311:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3242/8/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Registration/pull/4**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 33248202c3f2031162c0f67cfc2585060ea21a42_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1291959311
https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1294302126:43,Testability,test,tests,43,Last [ci-build][force-full-build][with-all-tests] in case :F,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1294302126
https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1294302210:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3242/9/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1294302210
https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1294302210:121,Integrability,depend,dependencies,121,**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3242/9/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1294302210
https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1294302210:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3242/9/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1294302210
https://github.com/sofa-framework/sofa/pull/3245#issuecomment-1227350154:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3245#issuecomment-1227350154
https://github.com/sofa-framework/sofa/pull/3249#issuecomment-1228109401:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3249#issuecomment-1228109401
https://github.com/sofa-framework/sofa/pull/3249#issuecomment-1246469800:48,Modifiability,refactor,refactoring,48,"The PR shows there is still a lot of cleaning & refactoring work to do on this component, volunteer welcomed.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3249#issuecomment-1246469800
https://github.com/sofa-framework/sofa/pull/3249#issuecomment-1249366162:22,Testability,test,tests,22,[ci-build][with-scene-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3249#issuecomment-1249366162
https://github.com/sofa-framework/sofa/pull/3250#issuecomment-1229592072:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3250#issuecomment-1229592072
https://github.com/sofa-framework/sofa/pull/3264#issuecomment-1234946060:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3264#issuecomment-1234946060
https://github.com/sofa-framework/sofa/pull/3264#issuecomment-1238084628:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3264#issuecomment-1238084628
https://github.com/sofa-framework/sofa/pull/3265#issuecomment-1234946517:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3265#issuecomment-1234946517
https://github.com/sofa-framework/sofa/pull/3265#issuecomment-1239328441:137,Deployability,release,release,137,"> You described the usual workflow, but in this case it was not respected. The features should have been disabled in v22.06.; Before the release we discussed during a sofadevmeeting that it was not wise to disable the features at release time. The final agreement was on the ""timing"" of action (before or after the release) and not about the conformance to the three step workflow (deprecate-disable-remove) we have. . A lot of people don't read warning(deprecation) messages and only fix their code base when it does not compile I think we should stick to the workflow.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3265#issuecomment-1239328441
https://github.com/sofa-framework/sofa/pull/3265#issuecomment-1239328441:230,Deployability,release,release,230,"> You described the usual workflow, but in this case it was not respected. The features should have been disabled in v22.06.; Before the release we discussed during a sofadevmeeting that it was not wise to disable the features at release time. The final agreement was on the ""timing"" of action (before or after the release) and not about the conformance to the three step workflow (deprecate-disable-remove) we have. . A lot of people don't read warning(deprecation) messages and only fix their code base when it does not compile I think we should stick to the workflow.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3265#issuecomment-1239328441
https://github.com/sofa-framework/sofa/pull/3265#issuecomment-1239328441:315,Deployability,release,release,315,"> You described the usual workflow, but in this case it was not respected. The features should have been disabled in v22.06.; Before the release we discussed during a sofadevmeeting that it was not wise to disable the features at release time. The final agreement was on the ""timing"" of action (before or after the release) and not about the conformance to the three step workflow (deprecate-disable-remove) we have. . A lot of people don't read warning(deprecation) messages and only fix their code base when it does not compile I think we should stick to the workflow.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3265#issuecomment-1239328441
https://github.com/sofa-framework/sofa/pull/3265#issuecomment-1239328441:467,Integrability,message,messages,467,"> You described the usual workflow, but in this case it was not respected. The features should have been disabled in v22.06.; Before the release we discussed during a sofadevmeeting that it was not wise to disable the features at release time. The final agreement was on the ""timing"" of action (before or after the release) and not about the conformance to the three step workflow (deprecate-disable-remove) we have. . A lot of people don't read warning(deprecation) messages and only fix their code base when it does not compile I think we should stick to the workflow.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3265#issuecomment-1239328441
https://github.com/sofa-framework/sofa/pull/3266#issuecomment-1234809651:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3266#issuecomment-1234809651
https://github.com/sofa-framework/sofa/pull/3266#issuecomment-1237943547:113,Modifiability,plugin,plugin,113,> Should it be replaced by `Sofa.Component`?. Does it exists? ; I'm doing it in a clean way by adding the needed plugin in the tests...,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3266#issuecomment-1237943547
https://github.com/sofa-framework/sofa/pull/3266#issuecomment-1237943547:127,Testability,test,tests,127,> Should it be replaced by `Sofa.Component`?. Does it exists? ; I'm doing it in a clean way by adding the needed plugin in the tests...,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3266#issuecomment-1237943547
https://github.com/sofa-framework/sofa/pull/3267#issuecomment-1236084796:131,Deployability,update,updated,131,thanks a lot for improving your PR @maddin200 ; I made some suggestions to improve the readability of the code. FYI you could have updated your original PR #3224 it would avoid closing / reopening PRs,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3267#issuecomment-1236084796
https://github.com/sofa-framework/sofa/pull/3267#issuecomment-1236084796:171,Safety,avoid,avoid,171,thanks a lot for improving your PR @maddin200 ; I made some suggestions to improve the readability of the code. FYI you could have updated your original PR #3224 it would avoid closing / reopening PRs,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3267#issuecomment-1236084796
https://github.com/sofa-framework/sofa/pull/3267#issuecomment-1236901105:27,Testability,test,test,27,probably I have no time to test it.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3267#issuecomment-1236901105
https://github.com/sofa-framework/sofa/pull/3268#issuecomment-1235774714:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3268#issuecomment-1235774714
https://github.com/sofa-framework/sofa/pull/3268#issuecomment-1236085171:194,Deployability,release,release,194,"A note for the dev meeting: would be nice to find a way to removing the [warning](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=ubuntu_clang,CI_PLUGINS=default,CI_TYPE=release/3822/FullBuildWarnings-Clang/folder.-1602702822/source.13f0211b-14a0-4dcf-afd8-994d4c6377ec/#114) related to this class . _**SpringForceField.h:114**_; ```; field 'd_springsIndices' is uninitialized when used here; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3268#issuecomment-1236085171
https://github.com/sofa-framework/sofa/pull/3268#issuecomment-1253437880:71,Security,validat,validate,71,During the meeting it was considered as needed to have a scene test to validate the mis-behavior and the fix. @ScheiklP do you have something (otherwise @epernod will have to do one).,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3268#issuecomment-1253437880
https://github.com/sofa-framework/sofa/pull/3268#issuecomment-1253437880:63,Testability,test,test,63,During the meeting it was considered as needed to have a scene test to validate the mis-behavior and the fix. @ScheiklP do you have something (otherwise @epernod will have to do one).,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3268#issuecomment-1253437880
https://github.com/sofa-framework/sofa/pull/3268#issuecomment-1253511047:73,Security,validat,validate,73,> During the meeting it was considered as needed to have a scene test to validate the mis-behavior and the fix. @ScheiklP do you have something (otherwise @epernod will have to do one). Weirdly I cannot reproduce the incorrect behavior that I observed when opening the PR. Were there some changes in linking a topology to the component? :D,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3268#issuecomment-1253511047
https://github.com/sofa-framework/sofa/pull/3268#issuecomment-1253511047:65,Testability,test,test,65,> During the meeting it was considered as needed to have a scene test to validate the mis-behavior and the fix. @ScheiklP do you have something (otherwise @epernod will have to do one). Weirdly I cannot reproduce the incorrect behavior that I observed when opening the PR. Were there some changes in linking a topology to the component? :D,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3268#issuecomment-1253511047
https://github.com/sofa-framework/sofa/pull/3269#issuecomment-1255376528:1613,Modifiability,Plugin,Plugins,1613,"onent.Collision.Geometry"", # [SphereCollisionModel]; ""Sofa.Component.Collision.Response.Contact"", # [DefaultContactManager]; ""Sofa.Component.Constraint.Projective"", # [FixedConstraint]; ""Sofa.Component.LinearSolver.Iterative"", # [CGLinearSolver]; ""Sofa.Component.Mass"", # [UniformMass]; ""Sofa.Component.ODESolver.Backward"", # [EulerImplicitSolver]; ""Sofa.Component.SolidMechanics.Spring"", # [StiffSpringForceField]; ""Sofa.Component.Topology.Container.Dynamic"", # [EdgeSetTopologyContainer, EdgeSetTopologyModifier]; ""Sofa.Component.Visual"", # [VisualStyle]; ""SofaCarving"", # [CarvingManager]; ""Sofa.Component.StateContainer"", # [MechanicalObject; ""Sofa.Component.LinearSolver.Direct"", # [SparseLDLSolver]; ""Sofa.Component.AnimationLoop"", # [FreeMotionAnimationLoop]; ""Sofa.Component.Constraint.Lagrangian.Correction"", # [LinearSolverConstraintCorrection, UncoupledConstraintCorrection]; ""Sofa.Component.Constraint.Lagrangian.Solver"", # [GenericConstraintSolver]; ]. plugin_node = root_node.addChild(""Plugins""). for plugin in plugin_list:; plugin_node.addObject(""RequiredPlugin"", pluginName=plugin, name=plugin). root_node.addObject(""FreeMotionAnimationLoop""); root_node.addObject(""DefaultVisualManagerLoop""); root_node.addObject(; ""VisualStyle"",; displayFlags=[""showVisual"", ""showForceFields"", ""showCollisionModels"", ""showInteractionForceFields""],; ). root_node.addObject(""DefaultPipeline""); root_node.addObject(""BruteForceBroadPhase""); root_node.addObject(""BVHNarrowPhase""); root_node.addObject(""GenericConstraintSolver""); root_node.addObject(""DefaultContactManager"", response=""FrictionContactConstraint""). root_node.addObject(; ""NewProximityIntersection"",; alarmDistance=1.0,; contactDistance=0.2,; ). root_node.gravity = [0.0, -918, 0.0]. scene_node = root_node.addChild(""scene""). cutting_sphere_node = scene_node.addChild(""cutting_sphere""); cutting_sphere_node.addObject(""CGLinearSolver""); cutting_sphere_node.addObject(""EulerImplicitSolver""); cutting_sphere_node.addObject(""PointSetTopologyConta",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3269#issuecomment-1255376528
https://github.com/sofa-framework/sofa/pull/3269#issuecomment-1255376528:1628,Modifiability,plugin,plugin,1628,"SphereCollisionModel]; ""Sofa.Component.Collision.Response.Contact"", # [DefaultContactManager]; ""Sofa.Component.Constraint.Projective"", # [FixedConstraint]; ""Sofa.Component.LinearSolver.Iterative"", # [CGLinearSolver]; ""Sofa.Component.Mass"", # [UniformMass]; ""Sofa.Component.ODESolver.Backward"", # [EulerImplicitSolver]; ""Sofa.Component.SolidMechanics.Spring"", # [StiffSpringForceField]; ""Sofa.Component.Topology.Container.Dynamic"", # [EdgeSetTopologyContainer, EdgeSetTopologyModifier]; ""Sofa.Component.Visual"", # [VisualStyle]; ""SofaCarving"", # [CarvingManager]; ""Sofa.Component.StateContainer"", # [MechanicalObject; ""Sofa.Component.LinearSolver.Direct"", # [SparseLDLSolver]; ""Sofa.Component.AnimationLoop"", # [FreeMotionAnimationLoop]; ""Sofa.Component.Constraint.Lagrangian.Correction"", # [LinearSolverConstraintCorrection, UncoupledConstraintCorrection]; ""Sofa.Component.Constraint.Lagrangian.Solver"", # [GenericConstraintSolver]; ]. plugin_node = root_node.addChild(""Plugins""). for plugin in plugin_list:; plugin_node.addObject(""RequiredPlugin"", pluginName=plugin, name=plugin). root_node.addObject(""FreeMotionAnimationLoop""); root_node.addObject(""DefaultVisualManagerLoop""); root_node.addObject(; ""VisualStyle"",; displayFlags=[""showVisual"", ""showForceFields"", ""showCollisionModels"", ""showInteractionForceFields""],; ). root_node.addObject(""DefaultPipeline""); root_node.addObject(""BruteForceBroadPhase""); root_node.addObject(""BVHNarrowPhase""); root_node.addObject(""GenericConstraintSolver""); root_node.addObject(""DefaultContactManager"", response=""FrictionContactConstraint""). root_node.addObject(; ""NewProximityIntersection"",; alarmDistance=1.0,; contactDistance=0.2,; ). root_node.gravity = [0.0, -918, 0.0]. scene_node = root_node.addChild(""scene""). cutting_sphere_node = scene_node.addChild(""cutting_sphere""); cutting_sphere_node.addObject(""CGLinearSolver""); cutting_sphere_node.addObject(""EulerImplicitSolver""); cutting_sphere_node.addObject(""PointSetTopologyContainer""); position = [6.0, 5.0, 0",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3269#issuecomment-1255376528
https://github.com/sofa-framework/sofa/pull/3269#issuecomment-1255376528:1692,Modifiability,plugin,pluginName,1692,"sponse.Contact"", # [DefaultContactManager]; ""Sofa.Component.Constraint.Projective"", # [FixedConstraint]; ""Sofa.Component.LinearSolver.Iterative"", # [CGLinearSolver]; ""Sofa.Component.Mass"", # [UniformMass]; ""Sofa.Component.ODESolver.Backward"", # [EulerImplicitSolver]; ""Sofa.Component.SolidMechanics.Spring"", # [StiffSpringForceField]; ""Sofa.Component.Topology.Container.Dynamic"", # [EdgeSetTopologyContainer, EdgeSetTopologyModifier]; ""Sofa.Component.Visual"", # [VisualStyle]; ""SofaCarving"", # [CarvingManager]; ""Sofa.Component.StateContainer"", # [MechanicalObject; ""Sofa.Component.LinearSolver.Direct"", # [SparseLDLSolver]; ""Sofa.Component.AnimationLoop"", # [FreeMotionAnimationLoop]; ""Sofa.Component.Constraint.Lagrangian.Correction"", # [LinearSolverConstraintCorrection, UncoupledConstraintCorrection]; ""Sofa.Component.Constraint.Lagrangian.Solver"", # [GenericConstraintSolver]; ]. plugin_node = root_node.addChild(""Plugins""). for plugin in plugin_list:; plugin_node.addObject(""RequiredPlugin"", pluginName=plugin, name=plugin). root_node.addObject(""FreeMotionAnimationLoop""); root_node.addObject(""DefaultVisualManagerLoop""); root_node.addObject(; ""VisualStyle"",; displayFlags=[""showVisual"", ""showForceFields"", ""showCollisionModels"", ""showInteractionForceFields""],; ). root_node.addObject(""DefaultPipeline""); root_node.addObject(""BruteForceBroadPhase""); root_node.addObject(""BVHNarrowPhase""); root_node.addObject(""GenericConstraintSolver""); root_node.addObject(""DefaultContactManager"", response=""FrictionContactConstraint""). root_node.addObject(; ""NewProximityIntersection"",; alarmDistance=1.0,; contactDistance=0.2,; ). root_node.gravity = [0.0, -918, 0.0]. scene_node = root_node.addChild(""scene""). cutting_sphere_node = scene_node.addChild(""cutting_sphere""); cutting_sphere_node.addObject(""CGLinearSolver""); cutting_sphere_node.addObject(""EulerImplicitSolver""); cutting_sphere_node.addObject(""PointSetTopologyContainer""); position = [6.0, 5.0, 0.0, 0.0, 0.0, 0.0, 1.0]; cutting_sphere_node.addOb",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3269#issuecomment-1255376528
https://github.com/sofa-framework/sofa/pull/3269#issuecomment-1255376528:1703,Modifiability,plugin,plugin,1703,"sponse.Contact"", # [DefaultContactManager]; ""Sofa.Component.Constraint.Projective"", # [FixedConstraint]; ""Sofa.Component.LinearSolver.Iterative"", # [CGLinearSolver]; ""Sofa.Component.Mass"", # [UniformMass]; ""Sofa.Component.ODESolver.Backward"", # [EulerImplicitSolver]; ""Sofa.Component.SolidMechanics.Spring"", # [StiffSpringForceField]; ""Sofa.Component.Topology.Container.Dynamic"", # [EdgeSetTopologyContainer, EdgeSetTopologyModifier]; ""Sofa.Component.Visual"", # [VisualStyle]; ""SofaCarving"", # [CarvingManager]; ""Sofa.Component.StateContainer"", # [MechanicalObject; ""Sofa.Component.LinearSolver.Direct"", # [SparseLDLSolver]; ""Sofa.Component.AnimationLoop"", # [FreeMotionAnimationLoop]; ""Sofa.Component.Constraint.Lagrangian.Correction"", # [LinearSolverConstraintCorrection, UncoupledConstraintCorrection]; ""Sofa.Component.Constraint.Lagrangian.Solver"", # [GenericConstraintSolver]; ]. plugin_node = root_node.addChild(""Plugins""). for plugin in plugin_list:; plugin_node.addObject(""RequiredPlugin"", pluginName=plugin, name=plugin). root_node.addObject(""FreeMotionAnimationLoop""); root_node.addObject(""DefaultVisualManagerLoop""); root_node.addObject(; ""VisualStyle"",; displayFlags=[""showVisual"", ""showForceFields"", ""showCollisionModels"", ""showInteractionForceFields""],; ). root_node.addObject(""DefaultPipeline""); root_node.addObject(""BruteForceBroadPhase""); root_node.addObject(""BVHNarrowPhase""); root_node.addObject(""GenericConstraintSolver""); root_node.addObject(""DefaultContactManager"", response=""FrictionContactConstraint""). root_node.addObject(; ""NewProximityIntersection"",; alarmDistance=1.0,; contactDistance=0.2,; ). root_node.gravity = [0.0, -918, 0.0]. scene_node = root_node.addChild(""scene""). cutting_sphere_node = scene_node.addChild(""cutting_sphere""); cutting_sphere_node.addObject(""CGLinearSolver""); cutting_sphere_node.addObject(""EulerImplicitSolver""); cutting_sphere_node.addObject(""PointSetTopologyContainer""); position = [6.0, 5.0, 0.0, 0.0, 0.0, 0.0, 1.0]; cutting_sphere_node.addOb",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3269#issuecomment-1255376528
https://github.com/sofa-framework/sofa/pull/3269#issuecomment-1255376528:1716,Modifiability,plugin,plugin,1716,"sponse.Contact"", # [DefaultContactManager]; ""Sofa.Component.Constraint.Projective"", # [FixedConstraint]; ""Sofa.Component.LinearSolver.Iterative"", # [CGLinearSolver]; ""Sofa.Component.Mass"", # [UniformMass]; ""Sofa.Component.ODESolver.Backward"", # [EulerImplicitSolver]; ""Sofa.Component.SolidMechanics.Spring"", # [StiffSpringForceField]; ""Sofa.Component.Topology.Container.Dynamic"", # [EdgeSetTopologyContainer, EdgeSetTopologyModifier]; ""Sofa.Component.Visual"", # [VisualStyle]; ""SofaCarving"", # [CarvingManager]; ""Sofa.Component.StateContainer"", # [MechanicalObject; ""Sofa.Component.LinearSolver.Direct"", # [SparseLDLSolver]; ""Sofa.Component.AnimationLoop"", # [FreeMotionAnimationLoop]; ""Sofa.Component.Constraint.Lagrangian.Correction"", # [LinearSolverConstraintCorrection, UncoupledConstraintCorrection]; ""Sofa.Component.Constraint.Lagrangian.Solver"", # [GenericConstraintSolver]; ]. plugin_node = root_node.addChild(""Plugins""). for plugin in plugin_list:; plugin_node.addObject(""RequiredPlugin"", pluginName=plugin, name=plugin). root_node.addObject(""FreeMotionAnimationLoop""); root_node.addObject(""DefaultVisualManagerLoop""); root_node.addObject(; ""VisualStyle"",; displayFlags=[""showVisual"", ""showForceFields"", ""showCollisionModels"", ""showInteractionForceFields""],; ). root_node.addObject(""DefaultPipeline""); root_node.addObject(""BruteForceBroadPhase""); root_node.addObject(""BVHNarrowPhase""); root_node.addObject(""GenericConstraintSolver""); root_node.addObject(""DefaultContactManager"", response=""FrictionContactConstraint""). root_node.addObject(; ""NewProximityIntersection"",; alarmDistance=1.0,; contactDistance=0.2,; ). root_node.gravity = [0.0, -918, 0.0]. scene_node = root_node.addChild(""scene""). cutting_sphere_node = scene_node.addChild(""cutting_sphere""); cutting_sphere_node.addObject(""CGLinearSolver""); cutting_sphere_node.addObject(""EulerImplicitSolver""); cutting_sphere_node.addObject(""PointSetTopologyContainer""); position = [6.0, 5.0, 0.0, 0.0, 0.0, 0.0, 1.0]; cutting_sphere_node.addOb",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3269#issuecomment-1255376528
https://github.com/sofa-framework/sofa/pull/3269#issuecomment-1255376528:441,Safety,Detect,Detection,441,"@hugtalbot @epernod ; Done! :). **Before**:. https://user-images.githubusercontent.com/29635054/191820070-83997f7f-5b62-4c09-a0c9-6e22469da284.mp4. **After**:. https://user-images.githubusercontent.com/29635054/191820082-26d29ac0-21c1-4d65-9a62-3e27a550502b.mp4. **Scene to test with**:; ```python; import Sofa; import Sofa.Core. def createScene(; root_node: Sofa.Core.Node,; ) -> Sofa.Core.Node:. plugin_list = [; ""Sofa.Component.Collision.Detection.Algorithm"", # [BVHNarrowPhase, BruteForceBroadPhase, DefaultPipeline]; ""Sofa.Component.Collision.Detection.Intersection"", # [NewProximityIntersection]; ""Sofa.Component.Collision.Geometry"", # [SphereCollisionModel]; ""Sofa.Component.Collision.Response.Contact"", # [DefaultContactManager]; ""Sofa.Component.Constraint.Projective"", # [FixedConstraint]; ""Sofa.Component.LinearSolver.Iterative"", # [CGLinearSolver]; ""Sofa.Component.Mass"", # [UniformMass]; ""Sofa.Component.ODESolver.Backward"", # [EulerImplicitSolver]; ""Sofa.Component.SolidMechanics.Spring"", # [StiffSpringForceField]; ""Sofa.Component.Topology.Container.Dynamic"", # [EdgeSetTopologyContainer, EdgeSetTopologyModifier]; ""Sofa.Component.Visual"", # [VisualStyle]; ""SofaCarving"", # [CarvingManager]; ""Sofa.Component.StateContainer"", # [MechanicalObject; ""Sofa.Component.LinearSolver.Direct"", # [SparseLDLSolver]; ""Sofa.Component.AnimationLoop"", # [FreeMotionAnimationLoop]; ""Sofa.Component.Constraint.Lagrangian.Correction"", # [LinearSolverConstraintCorrection, UncoupledConstraintCorrection]; ""Sofa.Component.Constraint.Lagrangian.Solver"", # [GenericConstraintSolver]; ]. plugin_node = root_node.addChild(""Plugins""). for plugin in plugin_list:; plugin_node.addObject(""RequiredPlugin"", pluginName=plugin, name=plugin). root_node.addObject(""FreeMotionAnimationLoop""); root_node.addObject(""DefaultVisualManagerLoop""); root_node.addObject(; ""VisualStyle"",; displayFlags=[""showVisual"", ""showForceFields"", ""showCollisionModels"", ""showInteractionForceFields""],; ). root_node.addObject(""DefaultPipeline",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3269#issuecomment-1255376528
https://github.com/sofa-framework/sofa/pull/3269#issuecomment-1255376528:548,Safety,Detect,Detection,548,"@hugtalbot @epernod ; Done! :). **Before**:. https://user-images.githubusercontent.com/29635054/191820070-83997f7f-5b62-4c09-a0c9-6e22469da284.mp4. **After**:. https://user-images.githubusercontent.com/29635054/191820082-26d29ac0-21c1-4d65-9a62-3e27a550502b.mp4. **Scene to test with**:; ```python; import Sofa; import Sofa.Core. def createScene(; root_node: Sofa.Core.Node,; ) -> Sofa.Core.Node:. plugin_list = [; ""Sofa.Component.Collision.Detection.Algorithm"", # [BVHNarrowPhase, BruteForceBroadPhase, DefaultPipeline]; ""Sofa.Component.Collision.Detection.Intersection"", # [NewProximityIntersection]; ""Sofa.Component.Collision.Geometry"", # [SphereCollisionModel]; ""Sofa.Component.Collision.Response.Contact"", # [DefaultContactManager]; ""Sofa.Component.Constraint.Projective"", # [FixedConstraint]; ""Sofa.Component.LinearSolver.Iterative"", # [CGLinearSolver]; ""Sofa.Component.Mass"", # [UniformMass]; ""Sofa.Component.ODESolver.Backward"", # [EulerImplicitSolver]; ""Sofa.Component.SolidMechanics.Spring"", # [StiffSpringForceField]; ""Sofa.Component.Topology.Container.Dynamic"", # [EdgeSetTopologyContainer, EdgeSetTopologyModifier]; ""Sofa.Component.Visual"", # [VisualStyle]; ""SofaCarving"", # [CarvingManager]; ""Sofa.Component.StateContainer"", # [MechanicalObject; ""Sofa.Component.LinearSolver.Direct"", # [SparseLDLSolver]; ""Sofa.Component.AnimationLoop"", # [FreeMotionAnimationLoop]; ""Sofa.Component.Constraint.Lagrangian.Correction"", # [LinearSolverConstraintCorrection, UncoupledConstraintCorrection]; ""Sofa.Component.Constraint.Lagrangian.Solver"", # [GenericConstraintSolver]; ]. plugin_node = root_node.addChild(""Plugins""). for plugin in plugin_list:; plugin_node.addObject(""RequiredPlugin"", pluginName=plugin, name=plugin). root_node.addObject(""FreeMotionAnimationLoop""); root_node.addObject(""DefaultVisualManagerLoop""); root_node.addObject(; ""VisualStyle"",; displayFlags=[""showVisual"", ""showForceFields"", ""showCollisionModels"", ""showInteractionForceFields""],; ). root_node.addObject(""DefaultPipeline",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3269#issuecomment-1255376528
https://github.com/sofa-framework/sofa/pull/3269#issuecomment-1255376528:274,Testability,test,test,274,"@hugtalbot @epernod ; Done! :). **Before**:. https://user-images.githubusercontent.com/29635054/191820070-83997f7f-5b62-4c09-a0c9-6e22469da284.mp4. **After**:. https://user-images.githubusercontent.com/29635054/191820082-26d29ac0-21c1-4d65-9a62-3e27a550502b.mp4. **Scene to test with**:; ```python; import Sofa; import Sofa.Core. def createScene(; root_node: Sofa.Core.Node,; ) -> Sofa.Core.Node:. plugin_list = [; ""Sofa.Component.Collision.Detection.Algorithm"", # [BVHNarrowPhase, BruteForceBroadPhase, DefaultPipeline]; ""Sofa.Component.Collision.Detection.Intersection"", # [NewProximityIntersection]; ""Sofa.Component.Collision.Geometry"", # [SphereCollisionModel]; ""Sofa.Component.Collision.Response.Contact"", # [DefaultContactManager]; ""Sofa.Component.Constraint.Projective"", # [FixedConstraint]; ""Sofa.Component.LinearSolver.Iterative"", # [CGLinearSolver]; ""Sofa.Component.Mass"", # [UniformMass]; ""Sofa.Component.ODESolver.Backward"", # [EulerImplicitSolver]; ""Sofa.Component.SolidMechanics.Spring"", # [StiffSpringForceField]; ""Sofa.Component.Topology.Container.Dynamic"", # [EdgeSetTopologyContainer, EdgeSetTopologyModifier]; ""Sofa.Component.Visual"", # [VisualStyle]; ""SofaCarving"", # [CarvingManager]; ""Sofa.Component.StateContainer"", # [MechanicalObject; ""Sofa.Component.LinearSolver.Direct"", # [SparseLDLSolver]; ""Sofa.Component.AnimationLoop"", # [FreeMotionAnimationLoop]; ""Sofa.Component.Constraint.Lagrangian.Correction"", # [LinearSolverConstraintCorrection, UncoupledConstraintCorrection]; ""Sofa.Component.Constraint.Lagrangian.Solver"", # [GenericConstraintSolver]; ]. plugin_node = root_node.addChild(""Plugins""). for plugin in plugin_list:; plugin_node.addObject(""RequiredPlugin"", pluginName=plugin, name=plugin). root_node.addObject(""FreeMotionAnimationLoop""); root_node.addObject(""DefaultVisualManagerLoop""); root_node.addObject(; ""VisualStyle"",; displayFlags=[""showVisual"", ""showForceFields"", ""showCollisionModels"", ""showInteractionForceFields""],; ). root_node.addObject(""DefaultPipeline",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3269#issuecomment-1255376528
https://github.com/sofa-framework/sofa/pull/3269#issuecomment-1267645064:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3269#issuecomment-1267645064
https://github.com/sofa-framework/sofa/pull/3270#issuecomment-1236619792:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3270#issuecomment-1236619792
https://github.com/sofa-framework/sofa/pull/3270#issuecomment-1252351444:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3270#issuecomment-1252351444
https://github.com/sofa-framework/sofa/pull/3271#issuecomment-1237072426:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3271#issuecomment-1237072426
https://github.com/sofa-framework/sofa/pull/3271#issuecomment-1238153461:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3271#issuecomment-1238153461
https://github.com/sofa-framework/sofa/pull/3271#issuecomment-1255860388:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3271#issuecomment-1255860388
https://github.com/sofa-framework/sofa/pull/3271#issuecomment-1272166265:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3271#issuecomment-1272166265
https://github.com/sofa-framework/sofa/pull/3271#issuecomment-1275837981:4,Testability,test,test,4,One test added in the PR is failing --> to be fixed,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3271#issuecomment-1275837981
https://github.com/sofa-framework/sofa/pull/3271#issuecomment-1280641351:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3271#issuecomment-1280641351
https://github.com/sofa-framework/sofa/pull/3271#issuecomment-1280904900:9,Testability,test,test,9,"One unit test is still failing on mac and unbutu ...üë∫; ```; 3271/macos_clang_options_release/src/Sofa/Component/Topology/Container/Dynamic/tests/EdgeSetTopology_test.cpp:352; Expected equality of these values:; edgeH0->getName(); Which is: ""TopologyDataHandler( VectorSpringForceField )springs""; ""TopologyDataHandler( MeshMatrixMass )edgeMass""; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3271#issuecomment-1280904900
https://github.com/sofa-framework/sofa/pull/3271#issuecomment-1280904900:139,Testability,test,tests,139,"One unit test is still failing on mac and unbutu ...üë∫; ```; 3271/macos_clang_options_release/src/Sofa/Component/Topology/Container/Dynamic/tests/EdgeSetTopology_test.cpp:352; Expected equality of these values:; edgeH0->getName(); Which is: ""TopologyDataHandler( VectorSpringForceField )springs""; ""TopologyDataHandler( MeshMatrixMass )edgeMass""; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3271#issuecomment-1280904900
https://github.com/sofa-framework/sofa/pull/3271#issuecomment-1283205568:12,Testability,test,test,12,"@hugtalbot, test is fixed somehow so... yes",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3271#issuecomment-1283205568
https://github.com/sofa-framework/sofa/pull/3272#issuecomment-1237647625:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3272#issuecomment-1237647625
https://github.com/sofa-framework/sofa/pull/3276#issuecomment-1239540205:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3276#issuecomment-1239540205
https://github.com/sofa-framework/sofa/pull/3277#issuecomment-1238760923:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3277#issuecomment-1238760923
https://github.com/sofa-framework/sofa/pull/3278#issuecomment-1238760983:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3278#issuecomment-1238760983
https://github.com/sofa-framework/sofa/pull/3278#issuecomment-1238968104:17,Testability,test,tests,17,Haha no surprise tests didn't worked :),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3278#issuecomment-1238968104
https://github.com/sofa-framework/sofa/pull/3278#issuecomment-1265265315:468,Availability,error,error,468,"Hi @alxbilger . Thanks for reviewing the PR. ; BaseData::read is an existing function in sofa, that do the reading from a stream into a data field. . The PR does not change only how it was implemented. Before the PR, Data::read is duplicated for every type of data stored in the data field while in most of the case the reading pattern is the same. With the PR the ""shared"" behavior is moved into the base class which allows to enforce a consistent behavior regarding error checking & resetting the value when the field to parse is empty.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3278#issuecomment-1265265315
https://github.com/sofa-framework/sofa/pull/3278#issuecomment-1265293528:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3278#issuecomment-1265293528
https://github.com/sofa-framework/sofa/pull/3279#issuecomment-1238761065:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3279#issuecomment-1238761065
https://github.com/sofa-framework/sofa/pull/3279#issuecomment-1239330973:45,Modifiability,refactor,refactoring,45,"Sorry @alxbilger , I was working on a deeper refactoring of BaseData... and made the PR yesterday as a preliminary step without looking before if it was not done in a pending PR (which is the case of #3265). No problem in having the things dones in your PR. Do I close this one ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3279#issuecomment-1239330973
https://github.com/sofa-framework/sofa/pull/3279#issuecomment-1253426985:22,Deployability,update,update,22,remove ownerClass and update number in config.h ; EDIT: done.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3279#issuecomment-1253426985
https://github.com/sofa-framework/sofa/pull/3279#issuecomment-1253426985:39,Modifiability,config,config,39,remove ownerClass and update number in config.h ; EDIT: done.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3279#issuecomment-1253426985
https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1239160695:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #1](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3280/1/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/302**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ad86795b1c264f37968c6e19bdc312ab007307e6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1239160695
https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1239160695:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #1](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3280/1/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/302**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ad86795b1c264f37968c6e19bdc312ab007307e6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1239160695
https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1239227595:13,Integrability,depend,depend-on,13,"I think the [depend-on]¬†is used in the wrong ""direction"".",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1239227595
https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1239272179:106,Testability,Benchmark,Benchmark,106,Before the changes:. ```; ------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ------------------------------------------------------------------------------; BM_Matrix_typematf_matmult<3>/128 1.27 us 1.28 us 560000; BM_Matrix_typematf_matmult<3>/256 2.53 us 2.51 us 280000; BM_Matrix_typematf_matmult<3>/512 5.11 us 5.16 us 100000; BM_Matrix_eigenmatf_matmult<3>/128 0.923 us 0.900 us 746667; BM_Matrix_eigenmatf_matmult<3>/256 1.83 us 1.84 us 373333; BM_Matrix_eigenmatf_matmult<3>/512 3.67 us 3.68 us 186667; ```. After the changes:. ```; ------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ------------------------------------------------------------------------------; BM_Matrix_typematf_matmult<3>/128 1.00 us 1.00 us 640000; BM_Matrix_typematf_matmult<3>/256 1.98 us 1.97 us 373333; BM_Matrix_typematf_matmult<3>/512 3.93 us 3.90 us 172308; BM_Matrix_eigenmatf_matmult<3>/128 1.00 us 1.00 us 746667; BM_Matrix_eigenmatf_matmult<3>/256 1.99 us 2.01 us 373333; BM_Matrix_eigenmatf_matmult<3>/512 3.99 us 4.01 us 179200; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1239272179
https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1239272179:680,Testability,Benchmark,Benchmark,680,Before the changes:. ```; ------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ------------------------------------------------------------------------------; BM_Matrix_typematf_matmult<3>/128 1.27 us 1.28 us 560000; BM_Matrix_typematf_matmult<3>/256 2.53 us 2.51 us 280000; BM_Matrix_typematf_matmult<3>/512 5.11 us 5.16 us 100000; BM_Matrix_eigenmatf_matmult<3>/128 0.923 us 0.900 us 746667; BM_Matrix_eigenmatf_matmult<3>/256 1.83 us 1.84 us 373333; BM_Matrix_eigenmatf_matmult<3>/512 3.67 us 3.68 us 186667; ```. After the changes:. ```; ------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ------------------------------------------------------------------------------; BM_Matrix_typematf_matmult<3>/128 1.00 us 1.00 us 640000; BM_Matrix_typematf_matmult<3>/256 1.98 us 1.97 us 373333; BM_Matrix_typematf_matmult<3>/512 3.93 us 3.90 us 172308; BM_Matrix_eigenmatf_matmult<3>/128 1.00 us 1.00 us 746667; BM_Matrix_eigenmatf_matmult<3>/256 1.99 us 2.01 us 373333; BM_Matrix_eigenmatf_matmult<3>/512 3.99 us 4.01 us 179200; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1239272179
https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1239283745:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3280/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/302**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ad86795b1c264f37968c6e19bdc312ab007307e6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1239283745
https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1239283745:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3280/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/302**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ad86795b1c264f37968c6e19bdc312ab007307e6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1239283745
https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1240049702:469,Testability,test,test,469,"It does not come from your PR, but while trying to compile this branch with the newest gcc, there is an interesting (and useful) warning:; ```; /home/fred/sofa/src/current/Sofa/framework/Type/src/sofa/type/Mat.h:408:58: warning: array subscript 2 is above array bounds of ‚Äòconst sofa::type::VecNoInit<3, double> [2]‚Äô [-Warray-bounds]; 408 | if( rabs( this->elems[i][j] - this->elems[j][i] ) > EQUALITY_THRESHOLD ) return false;; ```; ; Indeed, there is no compile-time test about the fact that the matrix is square or not (so the symmetry could be irrelevant)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1240049702
https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1240484060:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3280/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/302**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG a96cb261b98799a729012434aca62c93ccd47209_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1240484060
https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1240484060:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3280/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/302**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG a96cb261b98799a729012434aca62c93ccd47209_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1240484060
https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1240490466:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3280/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/302**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG a96cb261b98799a729012434aca62c93ccd47209_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1240490466
https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1240490466:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3280/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/302**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG a96cb261b98799a729012434aca62c93ccd47209_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1240490466
https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1240491520:487,Testability,test,test,487,"> It does not come from your PR, but while trying to compile this branch with the newest gcc, there is an interesting (and useful) warning:; > ; > ```; > /home/fred/sofa/src/current/Sofa/framework/Type/src/sofa/type/Mat.h:408:58: warning: array subscript 2 is above array bounds of ‚Äòconst sofa::type::VecNoInit<3, double> [2]‚Äô [-Warray-bounds]; > 408 | if( rabs( this->elems[i][j] - this->elems[j][i] ) > EQUALITY_THRESHOLD ) return false;; > ```; > ; > Indeed, there is no compile-time test about the fact that the matrix is square or not (so the symmetry could be irrelevant). I added compile-time check that the matrix is square. Thanks for spotting it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1240491520
https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1240495147:147,Testability,Benchmark,Benchmark,147,Now the `multTranspose` operation is faster than Eigen:. ```; -----------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -----------------------------------------------------------------------------------; BM_Matrix_typemat3x3f_multTranspose/128 0.731 us 0.711 us 746667; BM_Matrix_typemat3x3f_multTranspose/256 1.53 us 1.54 us 497778; BM_Matrix_typemat3x3f_multTranspose/512 2.83 us 2.85 us 235789; BM_Matrix_eigenmat3x3f_multTranspose/128 0.842 us 0.837 us 746667; BM_Matrix_eigenmat3x3f_multTranspose/256 1.73 us 1.73 us 407273; BM_Matrix_eigenmat3x3f_multTranspose/512 3.46 us 3.45 us 194783. ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1240495147
https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1240731894:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3280/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/302**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG a96cb261b98799a729012434aca62c93ccd47209_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1240731894
https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1240731894:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3280/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/302**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG a96cb261b98799a729012434aca62c93ccd47209_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1240731894
https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1240734523:4,Testability,benchmark,benchmark,4,New benchmark:. ```; ------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ------------------------------------------------------------------------------; BM_Matrix_typematf_matmult<3>/128 0.689 us 0.684 us 1120000; BM_Matrix_typematf_matmult<3>/256 1.28 us 1.29 us 497778; BM_Matrix_typematf_matmult<3>/512 2.76 us 2.73 us 263529; BM_Matrix_eigenmatf_matmult<3>/128 1.01 us 1.03 us 746667; BM_Matrix_eigenmatf_matmult<3>/256 1.93 us 1.95 us 344615; BM_Matrix_eigenmatf_matmult<3>/512 3.81 us 3.81 us 172308; ```. We are faster than Eigen!,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1240734523
https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1240734523:101,Testability,Benchmark,Benchmark,101,New benchmark:. ```; ------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ------------------------------------------------------------------------------; BM_Matrix_typematf_matmult<3>/128 0.689 us 0.684 us 1120000; BM_Matrix_typematf_matmult<3>/256 1.28 us 1.29 us 497778; BM_Matrix_typematf_matmult<3>/512 2.76 us 2.73 us 263529; BM_Matrix_eigenmatf_matmult<3>/128 1.01 us 1.03 us 746667; BM_Matrix_eigenmatf_matmult<3>/256 1.93 us 1.95 us 344615; BM_Matrix_eigenmatf_matmult<3>/512 3.81 us 3.81 us 172308; ```. We are faster than Eigen!,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1240734523
https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1241019571:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1241019571
https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1241019703:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3280/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/302**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG a96cb261b98799a729012434aca62c93ccd47209_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1241019703
https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1241019703:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3280/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/302**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG a96cb261b98799a729012434aca62c93ccd47209_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1241019703
https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1253449018:36,Testability,test,tests,36,"Ready, merge if [ci-build][with-all-tests] agrees.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1253449018
https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1253449168:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3280/7/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1253449168
https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1253449168:121,Integrability,depend,dependencies,121,**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3280/7/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1253449168
https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1253449168:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3280/7/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1253449168
https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1253584907:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3280/8/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1253584907
https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1253584907:121,Integrability,depend,dependencies,121,**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3280/8/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1253584907
https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1253584907:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3280/8/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1253584907
https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1253810910:9,Testability,test,tests,9,"Two unit tests failing, probably solved in https://github.com/sofa-framework/sofa/pull/3322",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1253810910
https://github.com/sofa-framework/sofa/pull/3281#issuecomment-1240221951:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3281#issuecomment-1240221951
https://github.com/sofa-framework/sofa/pull/3281#issuecomment-1249993925:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3281#issuecomment-1249993925
https://github.com/sofa-framework/sofa/pull/3281#issuecomment-1253384778:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3281#issuecomment-1253384778
https://github.com/sofa-framework/sofa/pull/3282#issuecomment-1240331421:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3282#issuecomment-1240331421
https://github.com/sofa-framework/sofa/pull/3283#issuecomment-1243286706:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3283#issuecomment-1243286706
https://github.com/sofa-framework/sofa/pull/3284#issuecomment-1243657488:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3284#issuecomment-1243657488
https://github.com/sofa-framework/sofa/pull/3284#issuecomment-1249367806:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3284#issuecomment-1249367806
https://github.com/sofa-framework/sofa/pull/3285#issuecomment-1243744706:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3285#issuecomment-1243744706
https://github.com/sofa-framework/sofa/pull/3287#issuecomment-1243744182:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3287#issuecomment-1243744182
https://github.com/sofa-framework/sofa/pull/3287#issuecomment-1273054699:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3287#issuecomment-1273054699
https://github.com/sofa-framework/sofa/pull/3290#issuecomment-1250080997:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3290#issuecomment-1250080997
https://github.com/sofa-framework/sofa/pull/3290#issuecomment-1255669681:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3290#issuecomment-1255669681
https://github.com/sofa-framework/sofa/pull/3294#issuecomment-1250081054:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3294#issuecomment-1250081054
https://github.com/sofa-framework/sofa/pull/3294#issuecomment-1396249004:67,Testability,test,test,67,"> Is there still something to do here?. Yep, still need to write a test üòÖ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3294#issuecomment-1396249004
https://github.com/sofa-framework/sofa/pull/3294#issuecomment-1710899770:25,Deployability,integrat,integrated,25,This feature was already integrated directly into the two (lagrangian) ConstraintSolvers so this component is a bit superfluous. Closing,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3294#issuecomment-1710899770
https://github.com/sofa-framework/sofa/pull/3294#issuecomment-1710899770:25,Integrability,integrat,integrated,25,This feature was already integrated directly into the two (lagrangian) ConstraintSolvers so this component is a bit superfluous. Closing,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3294#issuecomment-1710899770
https://github.com/sofa-framework/sofa/pull/3296#issuecomment-1250432932:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3296#issuecomment-1250432932
https://github.com/sofa-framework/sofa/pull/3298#issuecomment-1253551760:564,Usability,clear,clear,564,"Here are more details related to @alxbilger's concerns on ""do we want short name for fixed_array"". I think it would be interesting to go toward a systematic approach on generalizing the use of short names/alias in our code base because currently the ""do what you want"" policy leads to a lot of messiness in our code base with plenty of style inconsistencies. . So I would be in favor of the following rules: ; - every extern template XXXX should have use a short name. ; - every short name should be lead to an extern template. ; The two are good because it makes clear what is related to an extern template and what is not. . Now to have an idea on how much hardcoded short name do we want my guidelines are:; - every registered type in a factory (eg: TableDataWidget or in ObjectFactory) deserve a short name. ; - every type used in a Data<> in our code base deserve a short name (to be consistent with what is seen in the sofa scene). ; - never use long name if you can use a short name. . If you see other things to add/remove please tell.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3298#issuecomment-1253551760
https://github.com/sofa-framework/sofa/pull/3298#issuecomment-1253551760:694,Usability,guid,guidelines,694,"Here are more details related to @alxbilger's concerns on ""do we want short name for fixed_array"". I think it would be interesting to go toward a systematic approach on generalizing the use of short names/alias in our code base because currently the ""do what you want"" policy leads to a lot of messiness in our code base with plenty of style inconsistencies. . So I would be in favor of the following rules: ; - every extern template XXXX should have use a short name. ; - every short name should be lead to an extern template. ; The two are good because it makes clear what is related to an extern template and what is not. . Now to have an idea on how much hardcoded short name do we want my guidelines are:; - every registered type in a factory (eg: TableDataWidget or in ObjectFactory) deserve a short name. ; - every type used in a Data<> in our code base deserve a short name (to be consistent with what is seen in the sofa scene). ; - never use long name if you can use a short name. . If you see other things to add/remove please tell.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3298#issuecomment-1253551760
https://github.com/sofa-framework/sofa/pull/3299#issuecomment-1247729427:527,Availability,mainten,maintenance,527,"I fully agree this is the right (and long) process. . About the Vec3d to Vec3 move... given that all our code base is in a broken/inconsistant state on that aspect do you think we could give a try to move it directly to Vec3, then locate if (or where) things are getting bad by compiling sofa using REAL=float and fix these parts. . Side note: I do actually consider that allowing to choose between float/double is a coding style dating from the 2000. In our code base this is causing more troubles (code complexity cost, code maintenance cost, calculus consistency, conversion cost) than the gain we can have , on modern (2020) CPU architectures.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3299#issuecomment-1247729427
https://github.com/sofa-framework/sofa/pull/3299#issuecomment-1280822476:22,Testability,test,tests,22,[ci-build][with-scene-tests][with-regression-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3299#issuecomment-1280822476
https://github.com/sofa-framework/sofa/pull/3299#issuecomment-1280822476:45,Testability,test,tests,45,[ci-build][with-scene-tests][with-regression-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3299#issuecomment-1280822476
https://github.com/sofa-framework/sofa/pull/3299#issuecomment-1282863772:187,Deployability,release,release,187,"still a test failing : [UnitTests.Sofa/LoggingTest.checkBaseObjectMsgAPI](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3299/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/14/testReport/UnitTests/Sofa_LoggingTest/checkBaseObjectMsgAPI/)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3299#issuecomment-1282863772
https://github.com/sofa-framework/sofa/pull/3299#issuecomment-1282863772:8,Testability,test,test,8,"still a test failing : [UnitTests.Sofa/LoggingTest.checkBaseObjectMsgAPI](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3299/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/14/testReport/UnitTests/Sofa_LoggingTest/checkBaseObjectMsgAPI/)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3299#issuecomment-1282863772
https://github.com/sofa-framework/sofa/pull/3299#issuecomment-1282863772:39,Testability,Log,LoggingTest,39,"still a test failing : [UnitTests.Sofa/LoggingTest.checkBaseObjectMsgAPI](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3299/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/14/testReport/UnitTests/Sofa_LoggingTest/checkBaseObjectMsgAPI/)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3299#issuecomment-1282863772
https://github.com/sofa-framework/sofa/pull/3299#issuecomment-1282863772:198,Testability,test,testReport,198,"still a test failing : [UnitTests.Sofa/LoggingTest.checkBaseObjectMsgAPI](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3299/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/14/testReport/UnitTests/Sofa_LoggingTest/checkBaseObjectMsgAPI/)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3299#issuecomment-1282863772
https://github.com/sofa-framework/sofa/pull/3299#issuecomment-1291711016:71,Deployability,update,update,71,@damienmarchal your branch is protected. Please open it so that we can update and merge your PR; :pray:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3299#issuecomment-1291711016
https://github.com/sofa-framework/sofa/pull/3299#issuecomment-1294474300:33,Testability,test,tests,33,Last check : [ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3299#issuecomment-1294474300
https://github.com/sofa-framework/sofa/pull/3300#issuecomment-1253394403:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3300#issuecomment-1253394403
https://github.com/sofa-framework/sofa/pull/3300#issuecomment-1253790425:92,Testability,test,tests,92,I run the CI again because it seems the job on Windows has been killed; [ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3300#issuecomment-1253790425
https://github.com/sofa-framework/sofa/pull/3301#issuecomment-1253436673:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3301#issuecomment-1253436673
https://github.com/sofa-framework/sofa/pull/3301#issuecomment-1253645784:6,Testability,test,tests,6,Scene tests are failing. Back to WIP,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3301#issuecomment-1253645784
https://github.com/sofa-framework/sofa/pull/3301#issuecomment-1263227559:38,Modifiability,plugin,plugin,38,"ok looking at the CI, only tests from plugin are failing because the scene are still requesting to load plugin with old plugin name. I can fix that quickly.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3301#issuecomment-1263227559
https://github.com/sofa-framework/sofa/pull/3301#issuecomment-1263227559:104,Modifiability,plugin,plugin,104,"ok looking at the CI, only tests from plugin are failing because the scene are still requesting to load plugin with old plugin name. I can fix that quickly.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3301#issuecomment-1263227559
https://github.com/sofa-framework/sofa/pull/3301#issuecomment-1263227559:120,Modifiability,plugin,plugin,120,"ok looking at the CI, only tests from plugin are failing because the scene are still requesting to load plugin with old plugin name. I can fix that quickly.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3301#issuecomment-1263227559
https://github.com/sofa-framework/sofa/pull/3301#issuecomment-1263227559:99,Performance,load,load,99,"ok looking at the CI, only tests from plugin are failing because the scene are still requesting to load plugin with old plugin name. I can fix that quickly.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3301#issuecomment-1263227559
https://github.com/sofa-framework/sofa/pull/3301#issuecomment-1263227559:27,Testability,test,tests,27,"ok looking at the CI, only tests from plugin are failing because the scene are still requesting to load plugin with old plugin name. I can fix that quickly.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3301#issuecomment-1263227559
https://github.com/sofa-framework/sofa/pull/3301#issuecomment-1282865434:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3301#issuecomment-1282865434
https://github.com/sofa-framework/sofa/pull/3302#issuecomment-1253437154:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3302#issuecomment-1253437154
https://github.com/sofa-framework/sofa/pull/3302#issuecomment-1253446110:70,Integrability,depend,dependency,70,"Ready, merge if CI validates it. An issue should be open to point the dependency on the deprecated SofaGraphComponent.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3302#issuecomment-1253446110
https://github.com/sofa-framework/sofa/pull/3302#issuecomment-1253446110:19,Security,validat,validates,19,"Ready, merge if CI validates it. An issue should be open to point the dependency on the deprecated SofaGraphComponent.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3302#issuecomment-1253446110
https://github.com/sofa-framework/sofa/pull/3303#issuecomment-1255922824:38,Testability,test,tests,38,[ci-build][force-full-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3303#issuecomment-1255922824
https://github.com/sofa-framework/sofa/pull/3304#issuecomment-1266908015:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3304#issuecomment-1266908015
https://github.com/sofa-framework/sofa/pull/3306#issuecomment-1249724391:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3306#issuecomment-1249724391
https://github.com/sofa-framework/sofa/pull/3311#issuecomment-1265307036:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3311#issuecomment-1265307036
https://github.com/sofa-framework/sofa/pull/3314#issuecomment-1260897061:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3314#issuecomment-1260897061
https://github.com/sofa-framework/sofa/pull/3315#issuecomment-1257322854:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3315#issuecomment-1257322854
https://github.com/sofa-framework/sofa/pull/3315#issuecomment-1268477561:6,Testability,test,tests,6,Scene tests are failing on Windows,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3315#issuecomment-1268477561
https://github.com/sofa-framework/sofa/pull/3315#issuecomment-1271130512:73,Deployability,update,update,73,"the failing scenes was coming from the perf regression, I just needed to update the branch from master",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3315#issuecomment-1271130512
https://github.com/sofa-framework/sofa/pull/3316#issuecomment-1253381721:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3316#issuecomment-1253381721
https://github.com/sofa-framework/sofa/pull/3316#issuecomment-1253786500:91,Testability,test,tests,91,I run the CI again because it seems the job on fedora has been killed; [ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3316#issuecomment-1253786500
https://github.com/sofa-framework/sofa/pull/3316#issuecomment-1254705313:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3316#issuecomment-1254705313
https://github.com/sofa-framework/sofa/pull/3317#issuecomment-1252283975:698,Deployability,update,update,698,"We already talked about that, and indeed you explained very well the nature of the problem and how to solve it. I don't think of a better approach. It is important to note that this pattern needs to be implemented again for classes, derived from BaseObject, and base class themselves. Look at `BarycentricMapping`, derived from `Mapping`, for example: it calls `Inherit1::doBaseObjectInit`, which is actually the same problem that you described. Here also it should be replaced by a ""delegate"" pattern. Currently, the fact that `init()` is no longer virtual is breaking. I had the same problem in https://github.com/sofa-framework/sofa/pull/3242. Do you have an idea to guide the developers in the update of their code?. Finally, I don't like `doBaseObjectInit`, and it is a problem of this pattern: we need to invent new names for delegate methods even though they are similar to the initial method.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3317#issuecomment-1252283975
https://github.com/sofa-framework/sofa/pull/3317#issuecomment-1252283975:670,Usability,guid,guide,670,"We already talked about that, and indeed you explained very well the nature of the problem and how to solve it. I don't think of a better approach. It is important to note that this pattern needs to be implemented again for classes, derived from BaseObject, and base class themselves. Look at `BarycentricMapping`, derived from `Mapping`, for example: it calls `Inherit1::doBaseObjectInit`, which is actually the same problem that you described. Here also it should be replaced by a ""delegate"" pattern. Currently, the fact that `init()` is no longer virtual is breaking. I had the same problem in https://github.com/sofa-framework/sofa/pull/3242. Do you have an idea to guide the developers in the update of their code?. Finally, I don't like `doBaseObjectInit`, and it is a problem of this pattern: we need to invent new names for delegate methods even though they are similar to the initial method.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3317#issuecomment-1252283975
https://github.com/sofa-framework/sofa/pull/3317#issuecomment-1252323162:889,Deployability,update,update,889,"We discussed a lot about it...but we never did a PR on that topic probably fearing the refactoring work and the amount of workload it would generates. . > It is important to note that this pattern needs to be implemented again for classes, derived from BaseObject, and base class themselves. Look at BarycentricMapping, derived from Mapping, for example: it calls Inherit1::doBaseObjectInit, which is actually the same problem that you described. Here also it should be replaced by a ""delegate"" pattern. Yes, all call-super need to be fixed that way (which I didn't in the PR), I will not do that unless it is clear we are really going to do such a breaking change in the sofa code base ;) . > Currently, the fact that `init()` is no longer virtual is breaking. I had the same problem in https://github.com/sofa-framework/sofa/pull/3242. Do you have an idea to guide the developers in the update of their code?. I'm not sure I get the point . EDIT: (....I'm reading 3242 to see if I understand). ; EDIT2: the easy non breaking strategy is to use new names for the base virtual function eg: newInit (not sure we want that). (good code use override so if we keep the old name the code will breaks will be detected at compile time) but this is probably not enough... > Finally, I don't like `doBaseObjectInit`, and it is a problem of this pattern: we need to invent new names for delegate methods even though they are similar to the initial method. Instead of ""inventing"" new names for delegates methods I strongly advocate to rely on single and clear name scheme. . Currently I'm doing:; ```console; do _ ClassThatDelegatesToYou _ MethodDelegated; ```; so ```BaseObject::init()``` become ```doBaseObjectInit()``` (which I interpret as ""do"" the init as requested by BaseObject). . The underlying idea of the naming scheme is that with a first sight we get a lot of information... the (do) show the intention of the code and the pattern used, while the class's name indicates where to look at to get docum",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3317#issuecomment-1252323162
https://github.com/sofa-framework/sofa/pull/3317#issuecomment-1252323162:2059,Integrability,contract,contract,2059,"e of their code?. I'm not sure I get the point . EDIT: (....I'm reading 3242 to see if I understand). ; EDIT2: the easy non breaking strategy is to use new names for the base virtual function eg: newInit (not sure we want that). (good code use override so if we keep the old name the code will breaks will be detected at compile time) but this is probably not enough... > Finally, I don't like `doBaseObjectInit`, and it is a problem of this pattern: we need to invent new names for delegate methods even though they are similar to the initial method. Instead of ""inventing"" new names for delegates methods I strongly advocate to rely on single and clear name scheme. . Currently I'm doing:; ```console; do _ ClassThatDelegatesToYou _ MethodDelegated; ```; so ```BaseObject::init()``` become ```doBaseObjectInit()``` (which I interpret as ""do"" the init as requested by BaseObject). . The underlying idea of the naming scheme is that with a first sight we get a lot of information... the (do) show the intention of the code and the pattern used, while the class's name indicates where to look at to get documentation on what the ""methodDelegated"" should do (to know contract the child has to fulfill). . The advantage I see with that naming scheme is that it works with chain of delegation. So the code should look like:; ```cpp; BaseObject::init() /// non virtual ; {; // I do the stuff shared by all child ; checkWhatever();; ; // ask my child to do their specific init, ; doBaseObjectInit(); }. BarycentricMapping::doBaseObjectInit() final; {; // I do the stuff shared by all of my child ; checkWhatever();; ; // ask my child to do their specific init, ; doBarycentricMappingInit();; }. MyChildOfBarycentricMapping::doBarycentricMapping() final; {; // ask my child to do their specific init, ; }; ```. This long naming scheme also has some good properties in case of multiple in-heritance, as it avoid colliding delegate function's name. . Of course, any other naming scheme suggestion is welcomed.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3317#issuecomment-1252323162
https://github.com/sofa-framework/sofa/pull/3317#issuecomment-1252323162:87,Modifiability,refactor,refactoring,87,"We discussed a lot about it...but we never did a PR on that topic probably fearing the refactoring work and the amount of workload it would generates. . > It is important to note that this pattern needs to be implemented again for classes, derived from BaseObject, and base class themselves. Look at BarycentricMapping, derived from Mapping, for example: it calls Inherit1::doBaseObjectInit, which is actually the same problem that you described. Here also it should be replaced by a ""delegate"" pattern. Yes, all call-super need to be fixed that way (which I didn't in the PR), I will not do that unless it is clear we are really going to do such a breaking change in the sofa code base ;) . > Currently, the fact that `init()` is no longer virtual is breaking. I had the same problem in https://github.com/sofa-framework/sofa/pull/3242. Do you have an idea to guide the developers in the update of their code?. I'm not sure I get the point . EDIT: (....I'm reading 3242 to see if I understand). ; EDIT2: the easy non breaking strategy is to use new names for the base virtual function eg: newInit (not sure we want that). (good code use override so if we keep the old name the code will breaks will be detected at compile time) but this is probably not enough... > Finally, I don't like `doBaseObjectInit`, and it is a problem of this pattern: we need to invent new names for delegate methods even though they are similar to the initial method. Instead of ""inventing"" new names for delegates methods I strongly advocate to rely on single and clear name scheme. . Currently I'm doing:; ```console; do _ ClassThatDelegatesToYou _ MethodDelegated; ```; so ```BaseObject::init()``` become ```doBaseObjectInit()``` (which I interpret as ""do"" the init as requested by BaseObject). . The underlying idea of the naming scheme is that with a first sight we get a lot of information... the (do) show the intention of the code and the pattern used, while the class's name indicates where to look at to get docum",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3317#issuecomment-1252323162
https://github.com/sofa-framework/sofa/pull/3317#issuecomment-1252323162:1203,Safety,detect,detected,1203,"ttern needs to be implemented again for classes, derived from BaseObject, and base class themselves. Look at BarycentricMapping, derived from Mapping, for example: it calls Inherit1::doBaseObjectInit, which is actually the same problem that you described. Here also it should be replaced by a ""delegate"" pattern. Yes, all call-super need to be fixed that way (which I didn't in the PR), I will not do that unless it is clear we are really going to do such a breaking change in the sofa code base ;) . > Currently, the fact that `init()` is no longer virtual is breaking. I had the same problem in https://github.com/sofa-framework/sofa/pull/3242. Do you have an idea to guide the developers in the update of their code?. I'm not sure I get the point . EDIT: (....I'm reading 3242 to see if I understand). ; EDIT2: the easy non breaking strategy is to use new names for the base virtual function eg: newInit (not sure we want that). (good code use override so if we keep the old name the code will breaks will be detected at compile time) but this is probably not enough... > Finally, I don't like `doBaseObjectInit`, and it is a problem of this pattern: we need to invent new names for delegate methods even though they are similar to the initial method. Instead of ""inventing"" new names for delegates methods I strongly advocate to rely on single and clear name scheme. . Currently I'm doing:; ```console; do _ ClassThatDelegatesToYou _ MethodDelegated; ```; so ```BaseObject::init()``` become ```doBaseObjectInit()``` (which I interpret as ""do"" the init as requested by BaseObject). . The underlying idea of the naming scheme is that with a first sight we get a lot of information... the (do) show the intention of the code and the pattern used, while the class's name indicates where to look at to get documentation on what the ""methodDelegated"" should do (to know contract the child has to fulfill). . The advantage I see with that naming scheme is that it works with chain of delegation. So the c",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3317#issuecomment-1252323162
https://github.com/sofa-framework/sofa/pull/3317#issuecomment-1252323162:2792,Safety,avoid,avoid,2792,"e of their code?. I'm not sure I get the point . EDIT: (....I'm reading 3242 to see if I understand). ; EDIT2: the easy non breaking strategy is to use new names for the base virtual function eg: newInit (not sure we want that). (good code use override so if we keep the old name the code will breaks will be detected at compile time) but this is probably not enough... > Finally, I don't like `doBaseObjectInit`, and it is a problem of this pattern: we need to invent new names for delegate methods even though they are similar to the initial method. Instead of ""inventing"" new names for delegates methods I strongly advocate to rely on single and clear name scheme. . Currently I'm doing:; ```console; do _ ClassThatDelegatesToYou _ MethodDelegated; ```; so ```BaseObject::init()``` become ```doBaseObjectInit()``` (which I interpret as ""do"" the init as requested by BaseObject). . The underlying idea of the naming scheme is that with a first sight we get a lot of information... the (do) show the intention of the code and the pattern used, while the class's name indicates where to look at to get documentation on what the ""methodDelegated"" should do (to know contract the child has to fulfill). . The advantage I see with that naming scheme is that it works with chain of delegation. So the code should look like:; ```cpp; BaseObject::init() /// non virtual ; {; // I do the stuff shared by all child ; checkWhatever();; ; // ask my child to do their specific init, ; doBaseObjectInit(); }. BarycentricMapping::doBaseObjectInit() final; {; // I do the stuff shared by all of my child ; checkWhatever();; ; // ask my child to do their specific init, ; doBarycentricMappingInit();; }. MyChildOfBarycentricMapping::doBarycentricMapping() final; {; // ask my child to do their specific init, ; }; ```. This long naming scheme also has some good properties in case of multiple in-heritance, as it avoid colliding delegate function's name. . Of course, any other naming scheme suggestion is welcomed.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3317#issuecomment-1252323162
https://github.com/sofa-framework/sofa/pull/3317#issuecomment-1252323162:610,Usability,clear,clear,610,"We discussed a lot about it...but we never did a PR on that topic probably fearing the refactoring work and the amount of workload it would generates. . > It is important to note that this pattern needs to be implemented again for classes, derived from BaseObject, and base class themselves. Look at BarycentricMapping, derived from Mapping, for example: it calls Inherit1::doBaseObjectInit, which is actually the same problem that you described. Here also it should be replaced by a ""delegate"" pattern. Yes, all call-super need to be fixed that way (which I didn't in the PR), I will not do that unless it is clear we are really going to do such a breaking change in the sofa code base ;) . > Currently, the fact that `init()` is no longer virtual is breaking. I had the same problem in https://github.com/sofa-framework/sofa/pull/3242. Do you have an idea to guide the developers in the update of their code?. I'm not sure I get the point . EDIT: (....I'm reading 3242 to see if I understand). ; EDIT2: the easy non breaking strategy is to use new names for the base virtual function eg: newInit (not sure we want that). (good code use override so if we keep the old name the code will breaks will be detected at compile time) but this is probably not enough... > Finally, I don't like `doBaseObjectInit`, and it is a problem of this pattern: we need to invent new names for delegate methods even though they are similar to the initial method. Instead of ""inventing"" new names for delegates methods I strongly advocate to rely on single and clear name scheme. . Currently I'm doing:; ```console; do _ ClassThatDelegatesToYou _ MethodDelegated; ```; so ```BaseObject::init()``` become ```doBaseObjectInit()``` (which I interpret as ""do"" the init as requested by BaseObject). . The underlying idea of the naming scheme is that with a first sight we get a lot of information... the (do) show the intention of the code and the pattern used, while the class's name indicates where to look at to get docum",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3317#issuecomment-1252323162
https://github.com/sofa-framework/sofa/pull/3317#issuecomment-1252323162:861,Usability,guid,guide,861,"We discussed a lot about it...but we never did a PR on that topic probably fearing the refactoring work and the amount of workload it would generates. . > It is important to note that this pattern needs to be implemented again for classes, derived from BaseObject, and base class themselves. Look at BarycentricMapping, derived from Mapping, for example: it calls Inherit1::doBaseObjectInit, which is actually the same problem that you described. Here also it should be replaced by a ""delegate"" pattern. Yes, all call-super need to be fixed that way (which I didn't in the PR), I will not do that unless it is clear we are really going to do such a breaking change in the sofa code base ;) . > Currently, the fact that `init()` is no longer virtual is breaking. I had the same problem in https://github.com/sofa-framework/sofa/pull/3242. Do you have an idea to guide the developers in the update of their code?. I'm not sure I get the point . EDIT: (....I'm reading 3242 to see if I understand). ; EDIT2: the easy non breaking strategy is to use new names for the base virtual function eg: newInit (not sure we want that). (good code use override so if we keep the old name the code will breaks will be detected at compile time) but this is probably not enough... > Finally, I don't like `doBaseObjectInit`, and it is a problem of this pattern: we need to invent new names for delegate methods even though they are similar to the initial method. Instead of ""inventing"" new names for delegates methods I strongly advocate to rely on single and clear name scheme. . Currently I'm doing:; ```console; do _ ClassThatDelegatesToYou _ MethodDelegated; ```; so ```BaseObject::init()``` become ```doBaseObjectInit()``` (which I interpret as ""do"" the init as requested by BaseObject). . The underlying idea of the naming scheme is that with a first sight we get a lot of information... the (do) show the intention of the code and the pattern used, while the class's name indicates where to look at to get docum",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3317#issuecomment-1252323162
https://github.com/sofa-framework/sofa/pull/3317#issuecomment-1252323162:1543,Usability,clear,clear,1543," Yes, all call-super need to be fixed that way (which I didn't in the PR), I will not do that unless it is clear we are really going to do such a breaking change in the sofa code base ;) . > Currently, the fact that `init()` is no longer virtual is breaking. I had the same problem in https://github.com/sofa-framework/sofa/pull/3242. Do you have an idea to guide the developers in the update of their code?. I'm not sure I get the point . EDIT: (....I'm reading 3242 to see if I understand). ; EDIT2: the easy non breaking strategy is to use new names for the base virtual function eg: newInit (not sure we want that). (good code use override so if we keep the old name the code will breaks will be detected at compile time) but this is probably not enough... > Finally, I don't like `doBaseObjectInit`, and it is a problem of this pattern: we need to invent new names for delegate methods even though they are similar to the initial method. Instead of ""inventing"" new names for delegates methods I strongly advocate to rely on single and clear name scheme. . Currently I'm doing:; ```console; do _ ClassThatDelegatesToYou _ MethodDelegated; ```; so ```BaseObject::init()``` become ```doBaseObjectInit()``` (which I interpret as ""do"" the init as requested by BaseObject). . The underlying idea of the naming scheme is that with a first sight we get a lot of information... the (do) show the intention of the code and the pattern used, while the class's name indicates where to look at to get documentation on what the ""methodDelegated"" should do (to know contract the child has to fulfill). . The advantage I see with that naming scheme is that it works with chain of delegation. So the code should look like:; ```cpp; BaseObject::init() /// non virtual ; {; // I do the stuff shared by all child ; checkWhatever();; ; // ask my child to do their specific init, ; doBaseObjectInit(); }. BarycentricMapping::doBaseObjectInit() final; {; // I do the stuff shared by all of my child ; checkWhatever();;",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3317#issuecomment-1252323162
https://github.com/sofa-framework/sofa/pull/3317#issuecomment-1283649941:22,Safety,abort,aborted,22,this remind me an old aborted try in this PR: https://github.com/sofa-framework/sofa/pull/1506,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3317#issuecomment-1283649941
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147:1823,Deployability,pipeline,pipeline,1823,"imulation/graph/DAGNode.h>; #include <sofa/simulation/graph/DAGSimulation.h>; #include <sofa/simulation/graph/init.h>. #include <sofa/simulation/DefaultAnimationLoop.h>. #include <sofa/component/statecontainer/MechanicalObject.h>. #include <sofa/core/objectmodel/Context.h>; #include <sofa/simulation/Node.h>; #include <sofa/simulation/Simulation.h>; #include <SofaComponentAll/initSofaComponentAll.h>. #include <sofa/helper/system/FileRepository.h>; #include <sofa/helper/logging/LoggingMessageHandler.h>; #include <sofa/core/logging/PerComponentLoggingMessageHandler.h>; #include <sofa/helper/BackTrace.h>. using namespace sofa::defaulttype;. using sofa::simulation::Node;; using sofa::simulation::graph::DAGNode;; using sofa::helper::system::DataRepository;. // collision pipeline; using sofa::component::collision::detection::algorithm::DefaultPipeline;; using sofa::component::collision::detection::algorithm::BruteForceBroadPhase;; using sofa::component::collision::detection::algorithm::BVHNarrowPhase;; using sofa::component::collision::detection::intersection::NewProximityIntersection;; using sofa::component::collision::response::contact::DefaultContactManager;; using sofa::component::collision::geometry::PointCollisionModel;. // mechanical object; using sofa::component::statecontainer::MechanicalObject;; using sofa::defaulttype::StdVectorTypes;; using sofa::type::Vec;. using sofa::core::behavior::MechanicalState;; using sofa::core::State;; using sofa::core::objectmodel::New;; using sofa::core::objectmodel::Data;. using sofa::simulation::DefaultAnimationLoop;. int main(int argc, char** argv); {; sofa::helper::logging::MessageDispatcher::addHandler(&sofa::helper::logging::MainLoggingMessageHandler::getInstance());; sofa::helper::logging::MessageDispatcher::addHandler(&sofa::helper::logging::MainPerComponentLoggingMessageHandler::getInstance());; sofa::helper::logging::MainLoggingMessageHandler::getInstance().activate();. sofa::helper::BackTrace::autodump();. sofa::simulatio",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147:3432,Deployability,pipeline,pipeline,3432,"sing sofa::core::objectmodel::New;; using sofa::core::objectmodel::Data;. using sofa::simulation::DefaultAnimationLoop;. int main(int argc, char** argv); {; sofa::helper::logging::MessageDispatcher::addHandler(&sofa::helper::logging::MainLoggingMessageHandler::getInstance());; sofa::helper::logging::MessageDispatcher::addHandler(&sofa::helper::logging::MainPerComponentLoggingMessageHandler::getInstance());; sofa::helper::logging::MainLoggingMessageHandler::getInstance().activate();. sofa::helper::BackTrace::autodump();. sofa::simulation::graph::init();. sofa::simulation::setSimulation(new sofa::simulation::graph::DAGSimulation());. for (int i = 0; i < 1000; i++) {. Node::SPtr groot = sofa::simulation::getSimulation()->createNewGraph(""root"");; groot->setGravity({ 0,0,0 });; groot->setDt(0.02);. DefaultAnimationLoop::SPtr animationLoop = New<DefaultAnimationLoop>();; groot->addObject(animationLoop);. // collision pipeline; DefaultPipeline::SPtr collisionPipeline = New<DefaultPipeline>();; collisionPipeline->setName(""Collision Pipeline"");; groot->addObject(collisionPipeline);. // collision detection system; BruteForceBroadPhase::SPtr broadPhaseDetection = New<BruteForceBroadPhase>();; broadPhaseDetection->setName(""Broad Phase Collision Detection"");; groot->addObject(broadPhaseDetection);. BVHNarrowPhase::SPtr narrowPhaseDetection = New<BVHNarrowPhase>();; narrowPhaseDetection->setName(""Narrow Phase Collision Detection"");; groot->addObject(narrowPhaseDetection);. // component to detection intersection; NewProximityIntersection::SPtr detectionProximity = New<NewProximityIntersection>();; detectionProximity->setName(""Detection Proximity"");; detectionProximity->setAlarmDistance(10.0);; detectionProximity->setContactDistance(0.5);; groot->addObject(detectionProximity);. // contact manager; DefaultContactManager::SPtr contactManager = New<DefaultContactManager>();; contactManager->setName(""Contact Manager"");; contactManager->setDefaultResponseType(""PenalityContactForceField"")",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147:3547,Deployability,Pipeline,Pipeline,3547,"sing sofa::core::objectmodel::New;; using sofa::core::objectmodel::Data;. using sofa::simulation::DefaultAnimationLoop;. int main(int argc, char** argv); {; sofa::helper::logging::MessageDispatcher::addHandler(&sofa::helper::logging::MainLoggingMessageHandler::getInstance());; sofa::helper::logging::MessageDispatcher::addHandler(&sofa::helper::logging::MainPerComponentLoggingMessageHandler::getInstance());; sofa::helper::logging::MainLoggingMessageHandler::getInstance().activate();. sofa::helper::BackTrace::autodump();. sofa::simulation::graph::init();. sofa::simulation::setSimulation(new sofa::simulation::graph::DAGSimulation());. for (int i = 0; i < 1000; i++) {. Node::SPtr groot = sofa::simulation::getSimulation()->createNewGraph(""root"");; groot->setGravity({ 0,0,0 });; groot->setDt(0.02);. DefaultAnimationLoop::SPtr animationLoop = New<DefaultAnimationLoop>();; groot->addObject(animationLoop);. // collision pipeline; DefaultPipeline::SPtr collisionPipeline = New<DefaultPipeline>();; collisionPipeline->setName(""Collision Pipeline"");; groot->addObject(collisionPipeline);. // collision detection system; BruteForceBroadPhase::SPtr broadPhaseDetection = New<BruteForceBroadPhase>();; broadPhaseDetection->setName(""Broad Phase Collision Detection"");; groot->addObject(broadPhaseDetection);. BVHNarrowPhase::SPtr narrowPhaseDetection = New<BVHNarrowPhase>();; narrowPhaseDetection->setName(""Narrow Phase Collision Detection"");; groot->addObject(narrowPhaseDetection);. // component to detection intersection; NewProximityIntersection::SPtr detectionProximity = New<NewProximityIntersection>();; detectionProximity->setName(""Detection Proximity"");; detectionProximity->setAlarmDistance(10.0);; detectionProximity->setContactDistance(0.5);; groot->addObject(detectionProximity);. // contact manager; DefaultContactManager::SPtr contactManager = New<DefaultContactManager>();; contactManager->setName(""Contact Manager"");; contactManager->setDefaultResponseType(""PenalityContactForceField"")",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147:377,Energy Efficiency,adapt,adapted,377,"> Thanks again @ScheiklP for these investigations !; > ; > Normally the reset function is not supposed to have any cleanup results as it is only there to set again (re-set) the component in a previous state.; > ; > It is the ""cleanup"" that is called before removal/deletion of the component from the graph. Most of these components also do not have a `cleanup` function :D . I adapted the `sofaProjectExample` to match the python scene above to make memory profiling and debugging a bit easier. Same memory leak occurs. The code:; ```cpp; #include <sofa/defaulttype/VecTypes.h>. #include <sofa/component/collision/detection/algorithm/BruteForceBroadPhase.h>; #include <sofa/component/collision/detection/algorithm/BVHNarrowPhase.h>; #include <sofa/component/collision/detection/algorithm/DefaultPipeline.h>. #include <sofa/component/collision/detection/intersection/NewProximityIntersection.h>. #include <sofa/component/collision/response/contact/DefaultContactManager.h>. #include <sofa/component/collision/geometry/PointModel.h>. #include <sofa/simulation/graph/DAGNode.h>; #include <sofa/simulation/graph/DAGSimulation.h>; #include <sofa/simulation/graph/init.h>. #include <sofa/simulation/DefaultAnimationLoop.h>. #include <sofa/component/statecontainer/MechanicalObject.h>. #include <sofa/core/objectmodel/Context.h>; #include <sofa/simulation/Node.h>; #include <sofa/simulation/Simulation.h>; #include <SofaComponentAll/initSofaComponentAll.h>. #include <sofa/helper/system/FileRepository.h>; #include <sofa/helper/logging/LoggingMessageHandler.h>; #include <sofa/core/logging/PerComponentLoggingMessageHandler.h>; #include <sofa/helper/BackTrace.h>. using namespace sofa::defaulttype;. using sofa::simulation::Node;; using sofa::simulation::graph::DAGNode;; using sofa::helper::system::DataRepository;. // collision pipeline; using sofa::component::collision::detection::algorithm::DefaultPipeline;; using sofa::component::collision::detection::algorithm::BruteForceBroadPhase;; using sofa::com",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147:2687,Integrability,Message,MessageDispatcher,2687,"ory;. // collision pipeline; using sofa::component::collision::detection::algorithm::DefaultPipeline;; using sofa::component::collision::detection::algorithm::BruteForceBroadPhase;; using sofa::component::collision::detection::algorithm::BVHNarrowPhase;; using sofa::component::collision::detection::intersection::NewProximityIntersection;; using sofa::component::collision::response::contact::DefaultContactManager;; using sofa::component::collision::geometry::PointCollisionModel;. // mechanical object; using sofa::component::statecontainer::MechanicalObject;; using sofa::defaulttype::StdVectorTypes;; using sofa::type::Vec;. using sofa::core::behavior::MechanicalState;; using sofa::core::State;; using sofa::core::objectmodel::New;; using sofa::core::objectmodel::Data;. using sofa::simulation::DefaultAnimationLoop;. int main(int argc, char** argv); {; sofa::helper::logging::MessageDispatcher::addHandler(&sofa::helper::logging::MainLoggingMessageHandler::getInstance());; sofa::helper::logging::MessageDispatcher::addHandler(&sofa::helper::logging::MainPerComponentLoggingMessageHandler::getInstance());; sofa::helper::logging::MainLoggingMessageHandler::getInstance().activate();. sofa::helper::BackTrace::autodump();. sofa::simulation::graph::init();. sofa::simulation::setSimulation(new sofa::simulation::graph::DAGSimulation());. for (int i = 0; i < 1000; i++) {. Node::SPtr groot = sofa::simulation::getSimulation()->createNewGraph(""root"");; groot->setGravity({ 0,0,0 });; groot->setDt(0.02);. DefaultAnimationLoop::SPtr animationLoop = New<DefaultAnimationLoop>();; groot->addObject(animationLoop);. // collision pipeline; DefaultPipeline::SPtr collisionPipeline = New<DefaultPipeline>();; collisionPipeline->setName(""Collision Pipeline"");; groot->addObject(collisionPipeline);. // collision detection system; BruteForceBroadPhase::SPtr broadPhaseDetection = New<BruteForceBroadPhase>();; broadPhaseDetection->setName(""Broad Phase Collision Detection"");; groot->addObject(broadPhaseDete",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147:2808,Integrability,Message,MessageDispatcher,2808,"ory;. // collision pipeline; using sofa::component::collision::detection::algorithm::DefaultPipeline;; using sofa::component::collision::detection::algorithm::BruteForceBroadPhase;; using sofa::component::collision::detection::algorithm::BVHNarrowPhase;; using sofa::component::collision::detection::intersection::NewProximityIntersection;; using sofa::component::collision::response::contact::DefaultContactManager;; using sofa::component::collision::geometry::PointCollisionModel;. // mechanical object; using sofa::component::statecontainer::MechanicalObject;; using sofa::defaulttype::StdVectorTypes;; using sofa::type::Vec;. using sofa::core::behavior::MechanicalState;; using sofa::core::State;; using sofa::core::objectmodel::New;; using sofa::core::objectmodel::Data;. using sofa::simulation::DefaultAnimationLoop;. int main(int argc, char** argv); {; sofa::helper::logging::MessageDispatcher::addHandler(&sofa::helper::logging::MainLoggingMessageHandler::getInstance());; sofa::helper::logging::MessageDispatcher::addHandler(&sofa::helper::logging::MainPerComponentLoggingMessageHandler::getInstance());; sofa::helper::logging::MainLoggingMessageHandler::getInstance().activate();. sofa::helper::BackTrace::autodump();. sofa::simulation::graph::init();. sofa::simulation::setSimulation(new sofa::simulation::graph::DAGSimulation());. for (int i = 0; i < 1000; i++) {. Node::SPtr groot = sofa::simulation::getSimulation()->createNewGraph(""root"");; groot->setGravity({ 0,0,0 });; groot->setDt(0.02);. DefaultAnimationLoop::SPtr animationLoop = New<DefaultAnimationLoop>();; groot->addObject(animationLoop);. // collision pipeline; DefaultPipeline::SPtr collisionPipeline = New<DefaultPipeline>();; collisionPipeline->setName(""Collision Pipeline"");; groot->addObject(collisionPipeline);. // collision detection system; BruteForceBroadPhase::SPtr broadPhaseDetection = New<BruteForceBroadPhase>();; broadPhaseDetection->setName(""Broad Phase Collision Detection"");; groot->addObject(broadPhaseDete",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147:377,Modifiability,adapt,adapted,377,"> Thanks again @ScheiklP for these investigations !; > ; > Normally the reset function is not supposed to have any cleanup results as it is only there to set again (re-set) the component in a previous state.; > ; > It is the ""cleanup"" that is called before removal/deletion of the component from the graph. Most of these components also do not have a `cleanup` function :D . I adapted the `sofaProjectExample` to match the python scene above to make memory profiling and debugging a bit easier. Same memory leak occurs. The code:; ```cpp; #include <sofa/defaulttype/VecTypes.h>. #include <sofa/component/collision/detection/algorithm/BruteForceBroadPhase.h>; #include <sofa/component/collision/detection/algorithm/BVHNarrowPhase.h>; #include <sofa/component/collision/detection/algorithm/DefaultPipeline.h>. #include <sofa/component/collision/detection/intersection/NewProximityIntersection.h>. #include <sofa/component/collision/response/contact/DefaultContactManager.h>. #include <sofa/component/collision/geometry/PointModel.h>. #include <sofa/simulation/graph/DAGNode.h>; #include <sofa/simulation/graph/DAGSimulation.h>; #include <sofa/simulation/graph/init.h>. #include <sofa/simulation/DefaultAnimationLoop.h>. #include <sofa/component/statecontainer/MechanicalObject.h>. #include <sofa/core/objectmodel/Context.h>; #include <sofa/simulation/Node.h>; #include <sofa/simulation/Simulation.h>; #include <SofaComponentAll/initSofaComponentAll.h>. #include <sofa/helper/system/FileRepository.h>; #include <sofa/helper/logging/LoggingMessageHandler.h>; #include <sofa/core/logging/PerComponentLoggingMessageHandler.h>; #include <sofa/helper/BackTrace.h>. using namespace sofa::defaulttype;. using sofa::simulation::Node;; using sofa::simulation::graph::DAGNode;; using sofa::helper::system::DataRepository;. // collision pipeline; using sofa::component::collision::detection::algorithm::DefaultPipeline;; using sofa::component::collision::detection::algorithm::BruteForceBroadPhase;; using sofa::com",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147:614,Safety,detect,detection,614,"> Thanks again @ScheiklP for these investigations !; > ; > Normally the reset function is not supposed to have any cleanup results as it is only there to set again (re-set) the component in a previous state.; > ; > It is the ""cleanup"" that is called before removal/deletion of the component from the graph. Most of these components also do not have a `cleanup` function :D . I adapted the `sofaProjectExample` to match the python scene above to make memory profiling and debugging a bit easier. Same memory leak occurs. The code:; ```cpp; #include <sofa/defaulttype/VecTypes.h>. #include <sofa/component/collision/detection/algorithm/BruteForceBroadPhase.h>; #include <sofa/component/collision/detection/algorithm/BVHNarrowPhase.h>; #include <sofa/component/collision/detection/algorithm/DefaultPipeline.h>. #include <sofa/component/collision/detection/intersection/NewProximityIntersection.h>. #include <sofa/component/collision/response/contact/DefaultContactManager.h>. #include <sofa/component/collision/geometry/PointModel.h>. #include <sofa/simulation/graph/DAGNode.h>; #include <sofa/simulation/graph/DAGSimulation.h>; #include <sofa/simulation/graph/init.h>. #include <sofa/simulation/DefaultAnimationLoop.h>. #include <sofa/component/statecontainer/MechanicalObject.h>. #include <sofa/core/objectmodel/Context.h>; #include <sofa/simulation/Node.h>; #include <sofa/simulation/Simulation.h>; #include <SofaComponentAll/initSofaComponentAll.h>. #include <sofa/helper/system/FileRepository.h>; #include <sofa/helper/logging/LoggingMessageHandler.h>; #include <sofa/core/logging/PerComponentLoggingMessageHandler.h>; #include <sofa/helper/BackTrace.h>. using namespace sofa::defaulttype;. using sofa::simulation::Node;; using sofa::simulation::graph::DAGNode;; using sofa::helper::system::DataRepository;. // collision pipeline; using sofa::component::collision::detection::algorithm::DefaultPipeline;; using sofa::component::collision::detection::algorithm::BruteForceBroadPhase;; using sofa::com",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147:694,Safety,detect,detection,694,"> Thanks again @ScheiklP for these investigations !; > ; > Normally the reset function is not supposed to have any cleanup results as it is only there to set again (re-set) the component in a previous state.; > ; > It is the ""cleanup"" that is called before removal/deletion of the component from the graph. Most of these components also do not have a `cleanup` function :D . I adapted the `sofaProjectExample` to match the python scene above to make memory profiling and debugging a bit easier. Same memory leak occurs. The code:; ```cpp; #include <sofa/defaulttype/VecTypes.h>. #include <sofa/component/collision/detection/algorithm/BruteForceBroadPhase.h>; #include <sofa/component/collision/detection/algorithm/BVHNarrowPhase.h>; #include <sofa/component/collision/detection/algorithm/DefaultPipeline.h>. #include <sofa/component/collision/detection/intersection/NewProximityIntersection.h>. #include <sofa/component/collision/response/contact/DefaultContactManager.h>. #include <sofa/component/collision/geometry/PointModel.h>. #include <sofa/simulation/graph/DAGNode.h>; #include <sofa/simulation/graph/DAGSimulation.h>; #include <sofa/simulation/graph/init.h>. #include <sofa/simulation/DefaultAnimationLoop.h>. #include <sofa/component/statecontainer/MechanicalObject.h>. #include <sofa/core/objectmodel/Context.h>; #include <sofa/simulation/Node.h>; #include <sofa/simulation/Simulation.h>; #include <SofaComponentAll/initSofaComponentAll.h>. #include <sofa/helper/system/FileRepository.h>; #include <sofa/helper/logging/LoggingMessageHandler.h>; #include <sofa/core/logging/PerComponentLoggingMessageHandler.h>; #include <sofa/helper/BackTrace.h>. using namespace sofa::defaulttype;. using sofa::simulation::Node;; using sofa::simulation::graph::DAGNode;; using sofa::helper::system::DataRepository;. // collision pipeline; using sofa::component::collision::detection::algorithm::DefaultPipeline;; using sofa::component::collision::detection::algorithm::BruteForceBroadPhase;; using sofa::com",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147:768,Safety,detect,detection,768,"> Thanks again @ScheiklP for these investigations !; > ; > Normally the reset function is not supposed to have any cleanup results as it is only there to set again (re-set) the component in a previous state.; > ; > It is the ""cleanup"" that is called before removal/deletion of the component from the graph. Most of these components also do not have a `cleanup` function :D . I adapted the `sofaProjectExample` to match the python scene above to make memory profiling and debugging a bit easier. Same memory leak occurs. The code:; ```cpp; #include <sofa/defaulttype/VecTypes.h>. #include <sofa/component/collision/detection/algorithm/BruteForceBroadPhase.h>; #include <sofa/component/collision/detection/algorithm/BVHNarrowPhase.h>; #include <sofa/component/collision/detection/algorithm/DefaultPipeline.h>. #include <sofa/component/collision/detection/intersection/NewProximityIntersection.h>. #include <sofa/component/collision/response/contact/DefaultContactManager.h>. #include <sofa/component/collision/geometry/PointModel.h>. #include <sofa/simulation/graph/DAGNode.h>; #include <sofa/simulation/graph/DAGSimulation.h>; #include <sofa/simulation/graph/init.h>. #include <sofa/simulation/DefaultAnimationLoop.h>. #include <sofa/component/statecontainer/MechanicalObject.h>. #include <sofa/core/objectmodel/Context.h>; #include <sofa/simulation/Node.h>; #include <sofa/simulation/Simulation.h>; #include <SofaComponentAll/initSofaComponentAll.h>. #include <sofa/helper/system/FileRepository.h>; #include <sofa/helper/logging/LoggingMessageHandler.h>; #include <sofa/core/logging/PerComponentLoggingMessageHandler.h>; #include <sofa/helper/BackTrace.h>. using namespace sofa::defaulttype;. using sofa::simulation::Node;; using sofa::simulation::graph::DAGNode;; using sofa::helper::system::DataRepository;. // collision pipeline; using sofa::component::collision::detection::algorithm::DefaultPipeline;; using sofa::component::collision::detection::algorithm::BruteForceBroadPhase;; using sofa::com",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147:843,Safety,detect,detection,843,"> Thanks again @ScheiklP for these investigations !; > ; > Normally the reset function is not supposed to have any cleanup results as it is only there to set again (re-set) the component in a previous state.; > ; > It is the ""cleanup"" that is called before removal/deletion of the component from the graph. Most of these components also do not have a `cleanup` function :D . I adapted the `sofaProjectExample` to match the python scene above to make memory profiling and debugging a bit easier. Same memory leak occurs. The code:; ```cpp; #include <sofa/defaulttype/VecTypes.h>. #include <sofa/component/collision/detection/algorithm/BruteForceBroadPhase.h>; #include <sofa/component/collision/detection/algorithm/BVHNarrowPhase.h>; #include <sofa/component/collision/detection/algorithm/DefaultPipeline.h>. #include <sofa/component/collision/detection/intersection/NewProximityIntersection.h>. #include <sofa/component/collision/response/contact/DefaultContactManager.h>. #include <sofa/component/collision/geometry/PointModel.h>. #include <sofa/simulation/graph/DAGNode.h>; #include <sofa/simulation/graph/DAGSimulation.h>; #include <sofa/simulation/graph/init.h>. #include <sofa/simulation/DefaultAnimationLoop.h>. #include <sofa/component/statecontainer/MechanicalObject.h>. #include <sofa/core/objectmodel/Context.h>; #include <sofa/simulation/Node.h>; #include <sofa/simulation/Simulation.h>; #include <SofaComponentAll/initSofaComponentAll.h>. #include <sofa/helper/system/FileRepository.h>; #include <sofa/helper/logging/LoggingMessageHandler.h>; #include <sofa/core/logging/PerComponentLoggingMessageHandler.h>; #include <sofa/helper/BackTrace.h>. using namespace sofa::defaulttype;. using sofa::simulation::Node;; using sofa::simulation::graph::DAGNode;; using sofa::helper::system::DataRepository;. // collision pipeline; using sofa::component::collision::detection::algorithm::DefaultPipeline;; using sofa::component::collision::detection::algorithm::BruteForceBroadPhase;; using sofa::com",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147:1867,Safety,detect,detection,1867,"imulation/graph/DAGNode.h>; #include <sofa/simulation/graph/DAGSimulation.h>; #include <sofa/simulation/graph/init.h>. #include <sofa/simulation/DefaultAnimationLoop.h>. #include <sofa/component/statecontainer/MechanicalObject.h>. #include <sofa/core/objectmodel/Context.h>; #include <sofa/simulation/Node.h>; #include <sofa/simulation/Simulation.h>; #include <SofaComponentAll/initSofaComponentAll.h>. #include <sofa/helper/system/FileRepository.h>; #include <sofa/helper/logging/LoggingMessageHandler.h>; #include <sofa/core/logging/PerComponentLoggingMessageHandler.h>; #include <sofa/helper/BackTrace.h>. using namespace sofa::defaulttype;. using sofa::simulation::Node;; using sofa::simulation::graph::DAGNode;; using sofa::helper::system::DataRepository;. // collision pipeline; using sofa::component::collision::detection::algorithm::DefaultPipeline;; using sofa::component::collision::detection::algorithm::BruteForceBroadPhase;; using sofa::component::collision::detection::algorithm::BVHNarrowPhase;; using sofa::component::collision::detection::intersection::NewProximityIntersection;; using sofa::component::collision::response::contact::DefaultContactManager;; using sofa::component::collision::geometry::PointCollisionModel;. // mechanical object; using sofa::component::statecontainer::MechanicalObject;; using sofa::defaulttype::StdVectorTypes;; using sofa::type::Vec;. using sofa::core::behavior::MechanicalState;; using sofa::core::State;; using sofa::core::objectmodel::New;; using sofa::core::objectmodel::Data;. using sofa::simulation::DefaultAnimationLoop;. int main(int argc, char** argv); {; sofa::helper::logging::MessageDispatcher::addHandler(&sofa::helper::logging::MainLoggingMessageHandler::getInstance());; sofa::helper::logging::MessageDispatcher::addHandler(&sofa::helper::logging::MainPerComponentLoggingMessageHandler::getInstance());; sofa::helper::logging::MainLoggingMessageHandler::getInstance().activate();. sofa::helper::BackTrace::autodump();. sofa::simulatio",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147:1941,Safety,detect,detection,1941,"imulation/graph/DAGNode.h>; #include <sofa/simulation/graph/DAGSimulation.h>; #include <sofa/simulation/graph/init.h>. #include <sofa/simulation/DefaultAnimationLoop.h>. #include <sofa/component/statecontainer/MechanicalObject.h>. #include <sofa/core/objectmodel/Context.h>; #include <sofa/simulation/Node.h>; #include <sofa/simulation/Simulation.h>; #include <SofaComponentAll/initSofaComponentAll.h>. #include <sofa/helper/system/FileRepository.h>; #include <sofa/helper/logging/LoggingMessageHandler.h>; #include <sofa/core/logging/PerComponentLoggingMessageHandler.h>; #include <sofa/helper/BackTrace.h>. using namespace sofa::defaulttype;. using sofa::simulation::Node;; using sofa::simulation::graph::DAGNode;; using sofa::helper::system::DataRepository;. // collision pipeline; using sofa::component::collision::detection::algorithm::DefaultPipeline;; using sofa::component::collision::detection::algorithm::BruteForceBroadPhase;; using sofa::component::collision::detection::algorithm::BVHNarrowPhase;; using sofa::component::collision::detection::intersection::NewProximityIntersection;; using sofa::component::collision::response::contact::DefaultContactManager;; using sofa::component::collision::geometry::PointCollisionModel;. // mechanical object; using sofa::component::statecontainer::MechanicalObject;; using sofa::defaulttype::StdVectorTypes;; using sofa::type::Vec;. using sofa::core::behavior::MechanicalState;; using sofa::core::State;; using sofa::core::objectmodel::New;; using sofa::core::objectmodel::Data;. using sofa::simulation::DefaultAnimationLoop;. int main(int argc, char** argv); {; sofa::helper::logging::MessageDispatcher::addHandler(&sofa::helper::logging::MainLoggingMessageHandler::getInstance());; sofa::helper::logging::MessageDispatcher::addHandler(&sofa::helper::logging::MainPerComponentLoggingMessageHandler::getInstance());; sofa::helper::logging::MainLoggingMessageHandler::getInstance().activate();. sofa::helper::BackTrace::autodump();. sofa::simulatio",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147:2020,Safety,detect,detection,2020,"imulation/graph/DAGNode.h>; #include <sofa/simulation/graph/DAGSimulation.h>; #include <sofa/simulation/graph/init.h>. #include <sofa/simulation/DefaultAnimationLoop.h>. #include <sofa/component/statecontainer/MechanicalObject.h>. #include <sofa/core/objectmodel/Context.h>; #include <sofa/simulation/Node.h>; #include <sofa/simulation/Simulation.h>; #include <SofaComponentAll/initSofaComponentAll.h>. #include <sofa/helper/system/FileRepository.h>; #include <sofa/helper/logging/LoggingMessageHandler.h>; #include <sofa/core/logging/PerComponentLoggingMessageHandler.h>; #include <sofa/helper/BackTrace.h>. using namespace sofa::defaulttype;. using sofa::simulation::Node;; using sofa::simulation::graph::DAGNode;; using sofa::helper::system::DataRepository;. // collision pipeline; using sofa::component::collision::detection::algorithm::DefaultPipeline;; using sofa::component::collision::detection::algorithm::BruteForceBroadPhase;; using sofa::component::collision::detection::algorithm::BVHNarrowPhase;; using sofa::component::collision::detection::intersection::NewProximityIntersection;; using sofa::component::collision::response::contact::DefaultContactManager;; using sofa::component::collision::geometry::PointCollisionModel;. // mechanical object; using sofa::component::statecontainer::MechanicalObject;; using sofa::defaulttype::StdVectorTypes;; using sofa::type::Vec;. using sofa::core::behavior::MechanicalState;; using sofa::core::State;; using sofa::core::objectmodel::New;; using sofa::core::objectmodel::Data;. using sofa::simulation::DefaultAnimationLoop;. int main(int argc, char** argv); {; sofa::helper::logging::MessageDispatcher::addHandler(&sofa::helper::logging::MainLoggingMessageHandler::getInstance());; sofa::helper::logging::MessageDispatcher::addHandler(&sofa::helper::logging::MainPerComponentLoggingMessageHandler::getInstance());; sofa::helper::logging::MainLoggingMessageHandler::getInstance().activate();. sofa::helper::BackTrace::autodump();. sofa::simulatio",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147:2093,Safety,detect,detection,2093,"imulation/graph/DAGNode.h>; #include <sofa/simulation/graph/DAGSimulation.h>; #include <sofa/simulation/graph/init.h>. #include <sofa/simulation/DefaultAnimationLoop.h>. #include <sofa/component/statecontainer/MechanicalObject.h>. #include <sofa/core/objectmodel/Context.h>; #include <sofa/simulation/Node.h>; #include <sofa/simulation/Simulation.h>; #include <SofaComponentAll/initSofaComponentAll.h>. #include <sofa/helper/system/FileRepository.h>; #include <sofa/helper/logging/LoggingMessageHandler.h>; #include <sofa/core/logging/PerComponentLoggingMessageHandler.h>; #include <sofa/helper/BackTrace.h>. using namespace sofa::defaulttype;. using sofa::simulation::Node;; using sofa::simulation::graph::DAGNode;; using sofa::helper::system::DataRepository;. // collision pipeline; using sofa::component::collision::detection::algorithm::DefaultPipeline;; using sofa::component::collision::detection::algorithm::BruteForceBroadPhase;; using sofa::component::collision::detection::algorithm::BVHNarrowPhase;; using sofa::component::collision::detection::intersection::NewProximityIntersection;; using sofa::component::collision::response::contact::DefaultContactManager;; using sofa::component::collision::geometry::PointCollisionModel;. // mechanical object; using sofa::component::statecontainer::MechanicalObject;; using sofa::defaulttype::StdVectorTypes;; using sofa::type::Vec;. using sofa::core::behavior::MechanicalState;; using sofa::core::State;; using sofa::core::objectmodel::New;; using sofa::core::objectmodel::Data;. using sofa::simulation::DefaultAnimationLoop;. int main(int argc, char** argv); {; sofa::helper::logging::MessageDispatcher::addHandler(&sofa::helper::logging::MainLoggingMessageHandler::getInstance());; sofa::helper::logging::MessageDispatcher::addHandler(&sofa::helper::logging::MainPerComponentLoggingMessageHandler::getInstance());; sofa::helper::logging::MainLoggingMessageHandler::getInstance().activate();. sofa::helper::BackTrace::autodump();. sofa::simulatio",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147:3611,Safety,detect,detection,3611,":addHandler(&sofa::helper::logging::MainLoggingMessageHandler::getInstance());; sofa::helper::logging::MessageDispatcher::addHandler(&sofa::helper::logging::MainPerComponentLoggingMessageHandler::getInstance());; sofa::helper::logging::MainLoggingMessageHandler::getInstance().activate();. sofa::helper::BackTrace::autodump();. sofa::simulation::graph::init();. sofa::simulation::setSimulation(new sofa::simulation::graph::DAGSimulation());. for (int i = 0; i < 1000; i++) {. Node::SPtr groot = sofa::simulation::getSimulation()->createNewGraph(""root"");; groot->setGravity({ 0,0,0 });; groot->setDt(0.02);. DefaultAnimationLoop::SPtr animationLoop = New<DefaultAnimationLoop>();; groot->addObject(animationLoop);. // collision pipeline; DefaultPipeline::SPtr collisionPipeline = New<DefaultPipeline>();; collisionPipeline->setName(""Collision Pipeline"");; groot->addObject(collisionPipeline);. // collision detection system; BruteForceBroadPhase::SPtr broadPhaseDetection = New<BruteForceBroadPhase>();; broadPhaseDetection->setName(""Broad Phase Collision Detection"");; groot->addObject(broadPhaseDetection);. BVHNarrowPhase::SPtr narrowPhaseDetection = New<BVHNarrowPhase>();; narrowPhaseDetection->setName(""Narrow Phase Collision Detection"");; groot->addObject(narrowPhaseDetection);. // component to detection intersection; NewProximityIntersection::SPtr detectionProximity = New<NewProximityIntersection>();; detectionProximity->setName(""Detection Proximity"");; detectionProximity->setAlarmDistance(10.0);; detectionProximity->setContactDistance(0.5);; groot->addObject(detectionProximity);. // contact manager; DefaultContactManager::SPtr contactManager = New<DefaultContactManager>();; contactManager->setName(""Contact Manager"");; contactManager->setDefaultResponseType(""PenalityContactForceField"");; groot->addObject(contactManager);. // Node 1; Node::SPtr firstNode = New<DAGNode>();; firstNode->setName(""node 1"");. // Node 2; Node::SPtr secondNode = New<DAGNode>();; secondNode->setName(""node",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147:3760,Safety,Detect,Detection,3760,":addHandler(&sofa::helper::logging::MainLoggingMessageHandler::getInstance());; sofa::helper::logging::MessageDispatcher::addHandler(&sofa::helper::logging::MainPerComponentLoggingMessageHandler::getInstance());; sofa::helper::logging::MainLoggingMessageHandler::getInstance().activate();. sofa::helper::BackTrace::autodump();. sofa::simulation::graph::init();. sofa::simulation::setSimulation(new sofa::simulation::graph::DAGSimulation());. for (int i = 0; i < 1000; i++) {. Node::SPtr groot = sofa::simulation::getSimulation()->createNewGraph(""root"");; groot->setGravity({ 0,0,0 });; groot->setDt(0.02);. DefaultAnimationLoop::SPtr animationLoop = New<DefaultAnimationLoop>();; groot->addObject(animationLoop);. // collision pipeline; DefaultPipeline::SPtr collisionPipeline = New<DefaultPipeline>();; collisionPipeline->setName(""Collision Pipeline"");; groot->addObject(collisionPipeline);. // collision detection system; BruteForceBroadPhase::SPtr broadPhaseDetection = New<BruteForceBroadPhase>();; broadPhaseDetection->setName(""Broad Phase Collision Detection"");; groot->addObject(broadPhaseDetection);. BVHNarrowPhase::SPtr narrowPhaseDetection = New<BVHNarrowPhase>();; narrowPhaseDetection->setName(""Narrow Phase Collision Detection"");; groot->addObject(narrowPhaseDetection);. // component to detection intersection; NewProximityIntersection::SPtr detectionProximity = New<NewProximityIntersection>();; detectionProximity->setName(""Detection Proximity"");; detectionProximity->setAlarmDistance(10.0);; detectionProximity->setContactDistance(0.5);; groot->addObject(detectionProximity);. // contact manager; DefaultContactManager::SPtr contactManager = New<DefaultContactManager>();; contactManager->setName(""Contact Manager"");; contactManager->setDefaultResponseType(""PenalityContactForceField"");; groot->addObject(contactManager);. // Node 1; Node::SPtr firstNode = New<DAGNode>();; firstNode->setName(""node 1"");. // Node 2; Node::SPtr secondNode = New<DAGNode>();; secondNode->setName(""node",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147:3936,Safety,Detect,Detection,3936,"getInstance());; sofa::helper::logging::MainLoggingMessageHandler::getInstance().activate();. sofa::helper::BackTrace::autodump();. sofa::simulation::graph::init();. sofa::simulation::setSimulation(new sofa::simulation::graph::DAGSimulation());. for (int i = 0; i < 1000; i++) {. Node::SPtr groot = sofa::simulation::getSimulation()->createNewGraph(""root"");; groot->setGravity({ 0,0,0 });; groot->setDt(0.02);. DefaultAnimationLoop::SPtr animationLoop = New<DefaultAnimationLoop>();; groot->addObject(animationLoop);. // collision pipeline; DefaultPipeline::SPtr collisionPipeline = New<DefaultPipeline>();; collisionPipeline->setName(""Collision Pipeline"");; groot->addObject(collisionPipeline);. // collision detection system; BruteForceBroadPhase::SPtr broadPhaseDetection = New<BruteForceBroadPhase>();; broadPhaseDetection->setName(""Broad Phase Collision Detection"");; groot->addObject(broadPhaseDetection);. BVHNarrowPhase::SPtr narrowPhaseDetection = New<BVHNarrowPhase>();; narrowPhaseDetection->setName(""Narrow Phase Collision Detection"");; groot->addObject(narrowPhaseDetection);. // component to detection intersection; NewProximityIntersection::SPtr detectionProximity = New<NewProximityIntersection>();; detectionProximity->setName(""Detection Proximity"");; detectionProximity->setAlarmDistance(10.0);; detectionProximity->setContactDistance(0.5);; groot->addObject(detectionProximity);. // contact manager; DefaultContactManager::SPtr contactManager = New<DefaultContactManager>();; contactManager->setName(""Contact Manager"");; contactManager->setDefaultResponseType(""PenalityContactForceField"");; groot->addObject(contactManager);. // Node 1; Node::SPtr firstNode = New<DAGNode>();; firstNode->setName(""node 1"");. // Node 2; Node::SPtr secondNode = New<DAGNode>();; secondNode->setName(""node 2"");. // mechanical objects; typedef MechanicalObject< Vec3dTypes > MechanicalObject3d;; MechanicalObject3d::SPtr firstMechanicalObject = New<MechanicalObject3d>();; firstMechanicalObject->setTran",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147:4007,Safety,detect,detection,4007,"ew sofa::simulation::graph::DAGSimulation());. for (int i = 0; i < 1000; i++) {. Node::SPtr groot = sofa::simulation::getSimulation()->createNewGraph(""root"");; groot->setGravity({ 0,0,0 });; groot->setDt(0.02);. DefaultAnimationLoop::SPtr animationLoop = New<DefaultAnimationLoop>();; groot->addObject(animationLoop);. // collision pipeline; DefaultPipeline::SPtr collisionPipeline = New<DefaultPipeline>();; collisionPipeline->setName(""Collision Pipeline"");; groot->addObject(collisionPipeline);. // collision detection system; BruteForceBroadPhase::SPtr broadPhaseDetection = New<BruteForceBroadPhase>();; broadPhaseDetection->setName(""Broad Phase Collision Detection"");; groot->addObject(broadPhaseDetection);. BVHNarrowPhase::SPtr narrowPhaseDetection = New<BVHNarrowPhase>();; narrowPhaseDetection->setName(""Narrow Phase Collision Detection"");; groot->addObject(narrowPhaseDetection);. // component to detection intersection; NewProximityIntersection::SPtr detectionProximity = New<NewProximityIntersection>();; detectionProximity->setName(""Detection Proximity"");; detectionProximity->setAlarmDistance(10.0);; detectionProximity->setContactDistance(0.5);; groot->addObject(detectionProximity);. // contact manager; DefaultContactManager::SPtr contactManager = New<DefaultContactManager>();; contactManager->setName(""Contact Manager"");; contactManager->setDefaultResponseType(""PenalityContactForceField"");; groot->addObject(contactManager);. // Node 1; Node::SPtr firstNode = New<DAGNode>();; firstNode->setName(""node 1"");. // Node 2; Node::SPtr secondNode = New<DAGNode>();; secondNode->setName(""node 2"");. // mechanical objects; typedef MechanicalObject< Vec3dTypes > MechanicalObject3d;; MechanicalObject3d::SPtr firstMechanicalObject = New<MechanicalObject3d>();; firstMechanicalObject->setTranslation(0,0,0);; firstMechanicalObject->setRotation(0,0,0);; firstMechanicalObject->setScale(1,1,1);; . MechanicalObject3d::SPtr secondMechanicalObject = New<MechanicalObject3d>();; secondMechanical",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147:4062,Safety,detect,detectionProximity,4062,"ew sofa::simulation::graph::DAGSimulation());. for (int i = 0; i < 1000; i++) {. Node::SPtr groot = sofa::simulation::getSimulation()->createNewGraph(""root"");; groot->setGravity({ 0,0,0 });; groot->setDt(0.02);. DefaultAnimationLoop::SPtr animationLoop = New<DefaultAnimationLoop>();; groot->addObject(animationLoop);. // collision pipeline; DefaultPipeline::SPtr collisionPipeline = New<DefaultPipeline>();; collisionPipeline->setName(""Collision Pipeline"");; groot->addObject(collisionPipeline);. // collision detection system; BruteForceBroadPhase::SPtr broadPhaseDetection = New<BruteForceBroadPhase>();; broadPhaseDetection->setName(""Broad Phase Collision Detection"");; groot->addObject(broadPhaseDetection);. BVHNarrowPhase::SPtr narrowPhaseDetection = New<BVHNarrowPhase>();; narrowPhaseDetection->setName(""Narrow Phase Collision Detection"");; groot->addObject(narrowPhaseDetection);. // component to detection intersection; NewProximityIntersection::SPtr detectionProximity = New<NewProximityIntersection>();; detectionProximity->setName(""Detection Proximity"");; detectionProximity->setAlarmDistance(10.0);; detectionProximity->setContactDistance(0.5);; groot->addObject(detectionProximity);. // contact manager; DefaultContactManager::SPtr contactManager = New<DefaultContactManager>();; contactManager->setName(""Contact Manager"");; contactManager->setDefaultResponseType(""PenalityContactForceField"");; groot->addObject(contactManager);. // Node 1; Node::SPtr firstNode = New<DAGNode>();; firstNode->setName(""node 1"");. // Node 2; Node::SPtr secondNode = New<DAGNode>();; secondNode->setName(""node 2"");. // mechanical objects; typedef MechanicalObject< Vec3dTypes > MechanicalObject3d;; MechanicalObject3d::SPtr firstMechanicalObject = New<MechanicalObject3d>();; firstMechanicalObject->setTranslation(0,0,0);; firstMechanicalObject->setRotation(0,0,0);; firstMechanicalObject->setScale(1,1,1);; . MechanicalObject3d::SPtr secondMechanicalObject = New<MechanicalObject3d>();; secondMechanical",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147:4117,Safety,detect,detectionProximity,4117,"ew sofa::simulation::graph::DAGSimulation());. for (int i = 0; i < 1000; i++) {. Node::SPtr groot = sofa::simulation::getSimulation()->createNewGraph(""root"");; groot->setGravity({ 0,0,0 });; groot->setDt(0.02);. DefaultAnimationLoop::SPtr animationLoop = New<DefaultAnimationLoop>();; groot->addObject(animationLoop);. // collision pipeline; DefaultPipeline::SPtr collisionPipeline = New<DefaultPipeline>();; collisionPipeline->setName(""Collision Pipeline"");; groot->addObject(collisionPipeline);. // collision detection system; BruteForceBroadPhase::SPtr broadPhaseDetection = New<BruteForceBroadPhase>();; broadPhaseDetection->setName(""Broad Phase Collision Detection"");; groot->addObject(broadPhaseDetection);. BVHNarrowPhase::SPtr narrowPhaseDetection = New<BVHNarrowPhase>();; narrowPhaseDetection->setName(""Narrow Phase Collision Detection"");; groot->addObject(narrowPhaseDetection);. // component to detection intersection; NewProximityIntersection::SPtr detectionProximity = New<NewProximityIntersection>();; detectionProximity->setName(""Detection Proximity"");; detectionProximity->setAlarmDistance(10.0);; detectionProximity->setContactDistance(0.5);; groot->addObject(detectionProximity);. // contact manager; DefaultContactManager::SPtr contactManager = New<DefaultContactManager>();; contactManager->setName(""Contact Manager"");; contactManager->setDefaultResponseType(""PenalityContactForceField"");; groot->addObject(contactManager);. // Node 1; Node::SPtr firstNode = New<DAGNode>();; firstNode->setName(""node 1"");. // Node 2; Node::SPtr secondNode = New<DAGNode>();; secondNode->setName(""node 2"");. // mechanical objects; typedef MechanicalObject< Vec3dTypes > MechanicalObject3d;; MechanicalObject3d::SPtr firstMechanicalObject = New<MechanicalObject3d>();; firstMechanicalObject->setTranslation(0,0,0);; firstMechanicalObject->setRotation(0,0,0);; firstMechanicalObject->setScale(1,1,1);; . MechanicalObject3d::SPtr secondMechanicalObject = New<MechanicalObject3d>();; secondMechanical",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147:4146,Safety,Detect,Detection,4146,"ew sofa::simulation::graph::DAGSimulation());. for (int i = 0; i < 1000; i++) {. Node::SPtr groot = sofa::simulation::getSimulation()->createNewGraph(""root"");; groot->setGravity({ 0,0,0 });; groot->setDt(0.02);. DefaultAnimationLoop::SPtr animationLoop = New<DefaultAnimationLoop>();; groot->addObject(animationLoop);. // collision pipeline; DefaultPipeline::SPtr collisionPipeline = New<DefaultPipeline>();; collisionPipeline->setName(""Collision Pipeline"");; groot->addObject(collisionPipeline);. // collision detection system; BruteForceBroadPhase::SPtr broadPhaseDetection = New<BruteForceBroadPhase>();; broadPhaseDetection->setName(""Broad Phase Collision Detection"");; groot->addObject(broadPhaseDetection);. BVHNarrowPhase::SPtr narrowPhaseDetection = New<BVHNarrowPhase>();; narrowPhaseDetection->setName(""Narrow Phase Collision Detection"");; groot->addObject(narrowPhaseDetection);. // component to detection intersection; NewProximityIntersection::SPtr detectionProximity = New<NewProximityIntersection>();; detectionProximity->setName(""Detection Proximity"");; detectionProximity->setAlarmDistance(10.0);; detectionProximity->setContactDistance(0.5);; groot->addObject(detectionProximity);. // contact manager; DefaultContactManager::SPtr contactManager = New<DefaultContactManager>();; contactManager->setName(""Contact Manager"");; contactManager->setDefaultResponseType(""PenalityContactForceField"");; groot->addObject(contactManager);. // Node 1; Node::SPtr firstNode = New<DAGNode>();; firstNode->setName(""node 1"");. // Node 2; Node::SPtr secondNode = New<DAGNode>();; secondNode->setName(""node 2"");. // mechanical objects; typedef MechanicalObject< Vec3dTypes > MechanicalObject3d;; MechanicalObject3d::SPtr firstMechanicalObject = New<MechanicalObject3d>();; firstMechanicalObject->setTranslation(0,0,0);; firstMechanicalObject->setRotation(0,0,0);; firstMechanicalObject->setScale(1,1,1);; . MechanicalObject3d::SPtr secondMechanicalObject = New<MechanicalObject3d>();; secondMechanical",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147:4170,Safety,detect,detectionProximity,4170,"ew sofa::simulation::graph::DAGSimulation());. for (int i = 0; i < 1000; i++) {. Node::SPtr groot = sofa::simulation::getSimulation()->createNewGraph(""root"");; groot->setGravity({ 0,0,0 });; groot->setDt(0.02);. DefaultAnimationLoop::SPtr animationLoop = New<DefaultAnimationLoop>();; groot->addObject(animationLoop);. // collision pipeline; DefaultPipeline::SPtr collisionPipeline = New<DefaultPipeline>();; collisionPipeline->setName(""Collision Pipeline"");; groot->addObject(collisionPipeline);. // collision detection system; BruteForceBroadPhase::SPtr broadPhaseDetection = New<BruteForceBroadPhase>();; broadPhaseDetection->setName(""Broad Phase Collision Detection"");; groot->addObject(broadPhaseDetection);. BVHNarrowPhase::SPtr narrowPhaseDetection = New<BVHNarrowPhase>();; narrowPhaseDetection->setName(""Narrow Phase Collision Detection"");; groot->addObject(narrowPhaseDetection);. // component to detection intersection; NewProximityIntersection::SPtr detectionProximity = New<NewProximityIntersection>();; detectionProximity->setName(""Detection Proximity"");; detectionProximity->setAlarmDistance(10.0);; detectionProximity->setContactDistance(0.5);; groot->addObject(detectionProximity);. // contact manager; DefaultContactManager::SPtr contactManager = New<DefaultContactManager>();; contactManager->setName(""Contact Manager"");; contactManager->setDefaultResponseType(""PenalityContactForceField"");; groot->addObject(contactManager);. // Node 1; Node::SPtr firstNode = New<DAGNode>();; firstNode->setName(""node 1"");. // Node 2; Node::SPtr secondNode = New<DAGNode>();; secondNode->setName(""node 2"");. // mechanical objects; typedef MechanicalObject< Vec3dTypes > MechanicalObject3d;; MechanicalObject3d::SPtr firstMechanicalObject = New<MechanicalObject3d>();; firstMechanicalObject->setTranslation(0,0,0);; firstMechanicalObject->setRotation(0,0,0);; firstMechanicalObject->setScale(1,1,1);; . MechanicalObject3d::SPtr secondMechanicalObject = New<MechanicalObject3d>();; secondMechanical",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147:4215,Safety,detect,detectionProximity,4215,"->createNewGraph(""root"");; groot->setGravity({ 0,0,0 });; groot->setDt(0.02);. DefaultAnimationLoop::SPtr animationLoop = New<DefaultAnimationLoop>();; groot->addObject(animationLoop);. // collision pipeline; DefaultPipeline::SPtr collisionPipeline = New<DefaultPipeline>();; collisionPipeline->setName(""Collision Pipeline"");; groot->addObject(collisionPipeline);. // collision detection system; BruteForceBroadPhase::SPtr broadPhaseDetection = New<BruteForceBroadPhase>();; broadPhaseDetection->setName(""Broad Phase Collision Detection"");; groot->addObject(broadPhaseDetection);. BVHNarrowPhase::SPtr narrowPhaseDetection = New<BVHNarrowPhase>();; narrowPhaseDetection->setName(""Narrow Phase Collision Detection"");; groot->addObject(narrowPhaseDetection);. // component to detection intersection; NewProximityIntersection::SPtr detectionProximity = New<NewProximityIntersection>();; detectionProximity->setName(""Detection Proximity"");; detectionProximity->setAlarmDistance(10.0);; detectionProximity->setContactDistance(0.5);; groot->addObject(detectionProximity);. // contact manager; DefaultContactManager::SPtr contactManager = New<DefaultContactManager>();; contactManager->setName(""Contact Manager"");; contactManager->setDefaultResponseType(""PenalityContactForceField"");; groot->addObject(contactManager);. // Node 1; Node::SPtr firstNode = New<DAGNode>();; firstNode->setName(""node 1"");. // Node 2; Node::SPtr secondNode = New<DAGNode>();; secondNode->setName(""node 2"");. // mechanical objects; typedef MechanicalObject< Vec3dTypes > MechanicalObject3d;; MechanicalObject3d::SPtr firstMechanicalObject = New<MechanicalObject3d>();; firstMechanicalObject->setTranslation(0,0,0);; firstMechanicalObject->setRotation(0,0,0);; firstMechanicalObject->setScale(1,1,1);; . MechanicalObject3d::SPtr secondMechanicalObject = New<MechanicalObject3d>();; secondMechanicalObject->setTranslation(1,1,1);; secondMechanicalObject->setRotation(0,0,0);; secondMechanicalObject->setScale(1,1,1);. PointCollision",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147:4278,Safety,detect,detectionProximity,4278,"({ 0,0,0 });; groot->setDt(0.02);. DefaultAnimationLoop::SPtr animationLoop = New<DefaultAnimationLoop>();; groot->addObject(animationLoop);. // collision pipeline; DefaultPipeline::SPtr collisionPipeline = New<DefaultPipeline>();; collisionPipeline->setName(""Collision Pipeline"");; groot->addObject(collisionPipeline);. // collision detection system; BruteForceBroadPhase::SPtr broadPhaseDetection = New<BruteForceBroadPhase>();; broadPhaseDetection->setName(""Broad Phase Collision Detection"");; groot->addObject(broadPhaseDetection);. BVHNarrowPhase::SPtr narrowPhaseDetection = New<BVHNarrowPhase>();; narrowPhaseDetection->setName(""Narrow Phase Collision Detection"");; groot->addObject(narrowPhaseDetection);. // component to detection intersection; NewProximityIntersection::SPtr detectionProximity = New<NewProximityIntersection>();; detectionProximity->setName(""Detection Proximity"");; detectionProximity->setAlarmDistance(10.0);; detectionProximity->setContactDistance(0.5);; groot->addObject(detectionProximity);. // contact manager; DefaultContactManager::SPtr contactManager = New<DefaultContactManager>();; contactManager->setName(""Contact Manager"");; contactManager->setDefaultResponseType(""PenalityContactForceField"");; groot->addObject(contactManager);. // Node 1; Node::SPtr firstNode = New<DAGNode>();; firstNode->setName(""node 1"");. // Node 2; Node::SPtr secondNode = New<DAGNode>();; secondNode->setName(""node 2"");. // mechanical objects; typedef MechanicalObject< Vec3dTypes > MechanicalObject3d;; MechanicalObject3d::SPtr firstMechanicalObject = New<MechanicalObject3d>();; firstMechanicalObject->setTranslation(0,0,0);; firstMechanicalObject->setRotation(0,0,0);; firstMechanicalObject->setScale(1,1,1);; . MechanicalObject3d::SPtr secondMechanicalObject = New<MechanicalObject3d>();; secondMechanicalObject->setTranslation(1,1,1);; secondMechanicalObject->setRotation(0,0,0);; secondMechanicalObject->setScale(1,1,1);. PointCollisionModel<sofa::defaulttype::Vec3Types>::SPtr fir",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147:1521,Testability,log,logging,1521, code:; ```cpp; #include <sofa/defaulttype/VecTypes.h>. #include <sofa/component/collision/detection/algorithm/BruteForceBroadPhase.h>; #include <sofa/component/collision/detection/algorithm/BVHNarrowPhase.h>; #include <sofa/component/collision/detection/algorithm/DefaultPipeline.h>. #include <sofa/component/collision/detection/intersection/NewProximityIntersection.h>. #include <sofa/component/collision/response/contact/DefaultContactManager.h>. #include <sofa/component/collision/geometry/PointModel.h>. #include <sofa/simulation/graph/DAGNode.h>; #include <sofa/simulation/graph/DAGSimulation.h>; #include <sofa/simulation/graph/init.h>. #include <sofa/simulation/DefaultAnimationLoop.h>. #include <sofa/component/statecontainer/MechanicalObject.h>. #include <sofa/core/objectmodel/Context.h>; #include <sofa/simulation/Node.h>; #include <sofa/simulation/Simulation.h>; #include <SofaComponentAll/initSofaComponentAll.h>. #include <sofa/helper/system/FileRepository.h>; #include <sofa/helper/logging/LoggingMessageHandler.h>; #include <sofa/core/logging/PerComponentLoggingMessageHandler.h>; #include <sofa/helper/BackTrace.h>. using namespace sofa::defaulttype;. using sofa::simulation::Node;; using sofa::simulation::graph::DAGNode;; using sofa::helper::system::DataRepository;. // collision pipeline; using sofa::component::collision::detection::algorithm::DefaultPipeline;; using sofa::component::collision::detection::algorithm::BruteForceBroadPhase;; using sofa::component::collision::detection::algorithm::BVHNarrowPhase;; using sofa::component::collision::detection::intersection::NewProximityIntersection;; using sofa::component::collision::response::contact::DefaultContactManager;; using sofa::component::collision::geometry::PointCollisionModel;. // mechanical object; using sofa::component::statecontainer::MechanicalObject;; using sofa::defaulttype::StdVectorTypes;; using sofa::type::Vec;. using sofa::core::behavior::MechanicalState;; using sofa::core::State;; using sofa::core:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147:1529,Testability,Log,LoggingMessageHandler,1529, code:; ```cpp; #include <sofa/defaulttype/VecTypes.h>. #include <sofa/component/collision/detection/algorithm/BruteForceBroadPhase.h>; #include <sofa/component/collision/detection/algorithm/BVHNarrowPhase.h>; #include <sofa/component/collision/detection/algorithm/DefaultPipeline.h>. #include <sofa/component/collision/detection/intersection/NewProximityIntersection.h>. #include <sofa/component/collision/response/contact/DefaultContactManager.h>. #include <sofa/component/collision/geometry/PointModel.h>. #include <sofa/simulation/graph/DAGNode.h>; #include <sofa/simulation/graph/DAGSimulation.h>; #include <sofa/simulation/graph/init.h>. #include <sofa/simulation/DefaultAnimationLoop.h>. #include <sofa/component/statecontainer/MechanicalObject.h>. #include <sofa/core/objectmodel/Context.h>; #include <sofa/simulation/Node.h>; #include <sofa/simulation/Simulation.h>; #include <SofaComponentAll/initSofaComponentAll.h>. #include <sofa/helper/system/FileRepository.h>; #include <sofa/helper/logging/LoggingMessageHandler.h>; #include <sofa/core/logging/PerComponentLoggingMessageHandler.h>; #include <sofa/helper/BackTrace.h>. using namespace sofa::defaulttype;. using sofa::simulation::Node;; using sofa::simulation::graph::DAGNode;; using sofa::helper::system::DataRepository;. // collision pipeline; using sofa::component::collision::detection::algorithm::DefaultPipeline;; using sofa::component::collision::detection::algorithm::BruteForceBroadPhase;; using sofa::component::collision::detection::algorithm::BVHNarrowPhase;; using sofa::component::collision::detection::intersection::NewProximityIntersection;; using sofa::component::collision::response::contact::DefaultContactManager;; using sofa::component::collision::geometry::PointCollisionModel;. // mechanical object; using sofa::component::statecontainer::MechanicalObject;; using sofa::defaulttype::StdVectorTypes;; using sofa::type::Vec;. using sofa::core::behavior::MechanicalState;; using sofa::core::State;; using sofa::core:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147:1575,Testability,log,logging,1575,ude <sofa/component/collision/detection/algorithm/BruteForceBroadPhase.h>; #include <sofa/component/collision/detection/algorithm/BVHNarrowPhase.h>; #include <sofa/component/collision/detection/algorithm/DefaultPipeline.h>. #include <sofa/component/collision/detection/intersection/NewProximityIntersection.h>. #include <sofa/component/collision/response/contact/DefaultContactManager.h>. #include <sofa/component/collision/geometry/PointModel.h>. #include <sofa/simulation/graph/DAGNode.h>; #include <sofa/simulation/graph/DAGSimulation.h>; #include <sofa/simulation/graph/init.h>. #include <sofa/simulation/DefaultAnimationLoop.h>. #include <sofa/component/statecontainer/MechanicalObject.h>. #include <sofa/core/objectmodel/Context.h>; #include <sofa/simulation/Node.h>; #include <sofa/simulation/Simulation.h>; #include <SofaComponentAll/initSofaComponentAll.h>. #include <sofa/helper/system/FileRepository.h>; #include <sofa/helper/logging/LoggingMessageHandler.h>; #include <sofa/core/logging/PerComponentLoggingMessageHandler.h>; #include <sofa/helper/BackTrace.h>. using namespace sofa::defaulttype;. using sofa::simulation::Node;; using sofa::simulation::graph::DAGNode;; using sofa::helper::system::DataRepository;. // collision pipeline; using sofa::component::collision::detection::algorithm::DefaultPipeline;; using sofa::component::collision::detection::algorithm::BruteForceBroadPhase;; using sofa::component::collision::detection::algorithm::BVHNarrowPhase;; using sofa::component::collision::detection::intersection::NewProximityIntersection;; using sofa::component::collision::response::contact::DefaultContactManager;; using sofa::component::collision::geometry::PointCollisionModel;. // mechanical object; using sofa::component::statecontainer::MechanicalObject;; using sofa::defaulttype::StdVectorTypes;; using sofa::type::Vec;. using sofa::core::behavior::MechanicalState;; using sofa::core::State;; using sofa::core::objectmodel::New;; using sofa::core::objectmodel::Data;. usi,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147:2678,Testability,log,logging,2678,"ory;. // collision pipeline; using sofa::component::collision::detection::algorithm::DefaultPipeline;; using sofa::component::collision::detection::algorithm::BruteForceBroadPhase;; using sofa::component::collision::detection::algorithm::BVHNarrowPhase;; using sofa::component::collision::detection::intersection::NewProximityIntersection;; using sofa::component::collision::response::contact::DefaultContactManager;; using sofa::component::collision::geometry::PointCollisionModel;. // mechanical object; using sofa::component::statecontainer::MechanicalObject;; using sofa::defaulttype::StdVectorTypes;; using sofa::type::Vec;. using sofa::core::behavior::MechanicalState;; using sofa::core::State;; using sofa::core::objectmodel::New;; using sofa::core::objectmodel::Data;. using sofa::simulation::DefaultAnimationLoop;. int main(int argc, char** argv); {; sofa::helper::logging::MessageDispatcher::addHandler(&sofa::helper::logging::MainLoggingMessageHandler::getInstance());; sofa::helper::logging::MessageDispatcher::addHandler(&sofa::helper::logging::MainPerComponentLoggingMessageHandler::getInstance());; sofa::helper::logging::MainLoggingMessageHandler::getInstance().activate();. sofa::helper::BackTrace::autodump();. sofa::simulation::graph::init();. sofa::simulation::setSimulation(new sofa::simulation::graph::DAGSimulation());. for (int i = 0; i < 1000; i++) {. Node::SPtr groot = sofa::simulation::getSimulation()->createNewGraph(""root"");; groot->setGravity({ 0,0,0 });; groot->setDt(0.02);. DefaultAnimationLoop::SPtr animationLoop = New<DefaultAnimationLoop>();; groot->addObject(animationLoop);. // collision pipeline; DefaultPipeline::SPtr collisionPipeline = New<DefaultPipeline>();; collisionPipeline->setName(""Collision Pipeline"");; groot->addObject(collisionPipeline);. // collision detection system; BruteForceBroadPhase::SPtr broadPhaseDetection = New<BruteForceBroadPhase>();; broadPhaseDetection->setName(""Broad Phase Collision Detection"");; groot->addObject(broadPhaseDete",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147:2732,Testability,log,logging,2732,"ory;. // collision pipeline; using sofa::component::collision::detection::algorithm::DefaultPipeline;; using sofa::component::collision::detection::algorithm::BruteForceBroadPhase;; using sofa::component::collision::detection::algorithm::BVHNarrowPhase;; using sofa::component::collision::detection::intersection::NewProximityIntersection;; using sofa::component::collision::response::contact::DefaultContactManager;; using sofa::component::collision::geometry::PointCollisionModel;. // mechanical object; using sofa::component::statecontainer::MechanicalObject;; using sofa::defaulttype::StdVectorTypes;; using sofa::type::Vec;. using sofa::core::behavior::MechanicalState;; using sofa::core::State;; using sofa::core::objectmodel::New;; using sofa::core::objectmodel::Data;. using sofa::simulation::DefaultAnimationLoop;. int main(int argc, char** argv); {; sofa::helper::logging::MessageDispatcher::addHandler(&sofa::helper::logging::MainLoggingMessageHandler::getInstance());; sofa::helper::logging::MessageDispatcher::addHandler(&sofa::helper::logging::MainPerComponentLoggingMessageHandler::getInstance());; sofa::helper::logging::MainLoggingMessageHandler::getInstance().activate();. sofa::helper::BackTrace::autodump();. sofa::simulation::graph::init();. sofa::simulation::setSimulation(new sofa::simulation::graph::DAGSimulation());. for (int i = 0; i < 1000; i++) {. Node::SPtr groot = sofa::simulation::getSimulation()->createNewGraph(""root"");; groot->setGravity({ 0,0,0 });; groot->setDt(0.02);. DefaultAnimationLoop::SPtr animationLoop = New<DefaultAnimationLoop>();; groot->addObject(animationLoop);. // collision pipeline; DefaultPipeline::SPtr collisionPipeline = New<DefaultPipeline>();; collisionPipeline->setName(""Collision Pipeline"");; groot->addObject(collisionPipeline);. // collision detection system; BruteForceBroadPhase::SPtr broadPhaseDetection = New<BruteForceBroadPhase>();; broadPhaseDetection->setName(""Broad Phase Collision Detection"");; groot->addObject(broadPhaseDete",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147:2799,Testability,log,logging,2799,"ory;. // collision pipeline; using sofa::component::collision::detection::algorithm::DefaultPipeline;; using sofa::component::collision::detection::algorithm::BruteForceBroadPhase;; using sofa::component::collision::detection::algorithm::BVHNarrowPhase;; using sofa::component::collision::detection::intersection::NewProximityIntersection;; using sofa::component::collision::response::contact::DefaultContactManager;; using sofa::component::collision::geometry::PointCollisionModel;. // mechanical object; using sofa::component::statecontainer::MechanicalObject;; using sofa::defaulttype::StdVectorTypes;; using sofa::type::Vec;. using sofa::core::behavior::MechanicalState;; using sofa::core::State;; using sofa::core::objectmodel::New;; using sofa::core::objectmodel::Data;. using sofa::simulation::DefaultAnimationLoop;. int main(int argc, char** argv); {; sofa::helper::logging::MessageDispatcher::addHandler(&sofa::helper::logging::MainLoggingMessageHandler::getInstance());; sofa::helper::logging::MessageDispatcher::addHandler(&sofa::helper::logging::MainPerComponentLoggingMessageHandler::getInstance());; sofa::helper::logging::MainLoggingMessageHandler::getInstance().activate();. sofa::helper::BackTrace::autodump();. sofa::simulation::graph::init();. sofa::simulation::setSimulation(new sofa::simulation::graph::DAGSimulation());. for (int i = 0; i < 1000; i++) {. Node::SPtr groot = sofa::simulation::getSimulation()->createNewGraph(""root"");; groot->setGravity({ 0,0,0 });; groot->setDt(0.02);. DefaultAnimationLoop::SPtr animationLoop = New<DefaultAnimationLoop>();; groot->addObject(animationLoop);. // collision pipeline; DefaultPipeline::SPtr collisionPipeline = New<DefaultPipeline>();; collisionPipeline->setName(""Collision Pipeline"");; groot->addObject(collisionPipeline);. // collision detection system; BruteForceBroadPhase::SPtr broadPhaseDetection = New<BruteForceBroadPhase>();; broadPhaseDetection->setName(""Broad Phase Collision Detection"");; groot->addObject(broadPhaseDete",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147:2853,Testability,log,logging,2853,"ory;. // collision pipeline; using sofa::component::collision::detection::algorithm::DefaultPipeline;; using sofa::component::collision::detection::algorithm::BruteForceBroadPhase;; using sofa::component::collision::detection::algorithm::BVHNarrowPhase;; using sofa::component::collision::detection::intersection::NewProximityIntersection;; using sofa::component::collision::response::contact::DefaultContactManager;; using sofa::component::collision::geometry::PointCollisionModel;. // mechanical object; using sofa::component::statecontainer::MechanicalObject;; using sofa::defaulttype::StdVectorTypes;; using sofa::type::Vec;. using sofa::core::behavior::MechanicalState;; using sofa::core::State;; using sofa::core::objectmodel::New;; using sofa::core::objectmodel::Data;. using sofa::simulation::DefaultAnimationLoop;. int main(int argc, char** argv); {; sofa::helper::logging::MessageDispatcher::addHandler(&sofa::helper::logging::MainLoggingMessageHandler::getInstance());; sofa::helper::logging::MessageDispatcher::addHandler(&sofa::helper::logging::MainPerComponentLoggingMessageHandler::getInstance());; sofa::helper::logging::MainLoggingMessageHandler::getInstance().activate();. sofa::helper::BackTrace::autodump();. sofa::simulation::graph::init();. sofa::simulation::setSimulation(new sofa::simulation::graph::DAGSimulation());. for (int i = 0; i < 1000; i++) {. Node::SPtr groot = sofa::simulation::getSimulation()->createNewGraph(""root"");; groot->setGravity({ 0,0,0 });; groot->setDt(0.02);. DefaultAnimationLoop::SPtr animationLoop = New<DefaultAnimationLoop>();; groot->addObject(animationLoop);. // collision pipeline; DefaultPipeline::SPtr collisionPipeline = New<DefaultPipeline>();; collisionPipeline->setName(""Collision Pipeline"");; groot->addObject(collisionPipeline);. // collision detection system; BruteForceBroadPhase::SPtr broadPhaseDetection = New<BruteForceBroadPhase>();; broadPhaseDetection->setName(""Broad Phase Collision Detection"");; groot->addObject(broadPhaseDete",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147:2932,Testability,log,logging,2932,"ory;. // collision pipeline; using sofa::component::collision::detection::algorithm::DefaultPipeline;; using sofa::component::collision::detection::algorithm::BruteForceBroadPhase;; using sofa::component::collision::detection::algorithm::BVHNarrowPhase;; using sofa::component::collision::detection::intersection::NewProximityIntersection;; using sofa::component::collision::response::contact::DefaultContactManager;; using sofa::component::collision::geometry::PointCollisionModel;. // mechanical object; using sofa::component::statecontainer::MechanicalObject;; using sofa::defaulttype::StdVectorTypes;; using sofa::type::Vec;. using sofa::core::behavior::MechanicalState;; using sofa::core::State;; using sofa::core::objectmodel::New;; using sofa::core::objectmodel::Data;. using sofa::simulation::DefaultAnimationLoop;. int main(int argc, char** argv); {; sofa::helper::logging::MessageDispatcher::addHandler(&sofa::helper::logging::MainLoggingMessageHandler::getInstance());; sofa::helper::logging::MessageDispatcher::addHandler(&sofa::helper::logging::MainPerComponentLoggingMessageHandler::getInstance());; sofa::helper::logging::MainLoggingMessageHandler::getInstance().activate();. sofa::helper::BackTrace::autodump();. sofa::simulation::graph::init();. sofa::simulation::setSimulation(new sofa::simulation::graph::DAGSimulation());. for (int i = 0; i < 1000; i++) {. Node::SPtr groot = sofa::simulation::getSimulation()->createNewGraph(""root"");; groot->setGravity({ 0,0,0 });; groot->setDt(0.02);. DefaultAnimationLoop::SPtr animationLoop = New<DefaultAnimationLoop>();; groot->addObject(animationLoop);. // collision pipeline; DefaultPipeline::SPtr collisionPipeline = New<DefaultPipeline>();; collisionPipeline->setName(""Collision Pipeline"");; groot->addObject(collisionPipeline);. // collision detection system; BruteForceBroadPhase::SPtr broadPhaseDetection = New<BruteForceBroadPhase>();; broadPhaseDetection->setName(""Broad Phase Collision Detection"");; groot->addObject(broadPhaseDete",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254605140:2,Availability,echo,echo,2,"I echo @damienmarchal , thanks a lot @ScheiklP for these interesting investigations!. your last comment means that it could come from the collisionmodel binding, right?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254605140
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1255504827:4,Availability,echo,echo,4,"> I echo @damienmarchal , thanks a lot @ScheiklP for these interesting investigations!; > ; > your last comment means that it could come from the collisionmodel binding, right?. Hi @hugtalbot ,; The collision models have no explicit binding in SofaPython3 as far as I can see. :(. **EDIT**:; I was just not creating the MechanicalObject correctly. :D -> C++ scene also has the leak.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1255504827
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256001467:143,Usability,simpl,simplapi,143,"Thanks again for the investigation. I see you are using the raw c++ code to make your scene. Instead of doing that the ""hard way"" you can use ""simplapi"" which mimick in c++ de python one. It is in sofa/simulation/graph/simpleapi.h and there are exemple in the code base.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256001467
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256001467:219,Usability,simpl,simpleapi,219,"Thanks again for the investigation. I see you are using the raw c++ code to make your scene. Instead of doing that the ""hard way"" you can use ""simplapi"" which mimick in c++ de python one. It is in sofa/simulation/graph/simpleapi.h and there are exemple in the code base.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256001467
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256275783:448,Integrability,depend,depends,448,"@ScheiklP Here is a branch with a simple object tracker: https://github.com/alxbilger/sofa/tree/objecttracker. It counts the number of creation and destruction for each class managed with the `SOFA_CLASS` macro. Note that if `Y` derives from `X`, it counts both `X` and `Y`. Finally, it prints a summary when the program finishes (properly). But I cannot guarantee that more destructions does not happen after the summary (static destruction order depends on construction order and https://en.cppreference.com/w/cpp/language/siof). Is this useful to you? Can you spot which component is not destroyed?. The diff is here: https://github.com/sofa-framework/sofa/compare/master...alxbilger:sofa:objecttracker?expand=1. For example, there are a couple of components in caduceus where I see a difference between nb of allocations and destructions.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256275783
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256275783:34,Usability,simpl,simple,34,"@ScheiklP Here is a branch with a simple object tracker: https://github.com/alxbilger/sofa/tree/objecttracker. It counts the number of creation and destruction for each class managed with the `SOFA_CLASS` macro. Note that if `Y` derives from `X`, it counts both `X` and `Y`. Finally, it prints a summary when the program finishes (properly). But I cannot guarantee that more destructions does not happen after the summary (static destruction order depends on construction order and https://en.cppreference.com/w/cpp/language/siof). Is this useful to you? Can you spot which component is not destroyed?. The diff is here: https://github.com/sofa-framework/sofa/compare/master...alxbilger:sofa:objecttracker?expand=1. For example, there are a couple of components in caduceus where I see a difference between nb of allocations and destructions.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256275783
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256307109:532,Modifiability,inherit,inherit,532,"@alxbilger Thanks!. ```; Before unload; Total Base: 31970 31936 Diff: 34; After unload; Total Base: 31970 31939 Diff: 31; Before unload; Total Base: 32002 31968 Diff: 34; After unload; Total Base: 32002 31971 Diff: 31; Before cleanup; Total Base: 32002 32000 Diff: 2; Total Base: 32002 32000 Diff: 2; After cleanup; Total Base: 32002 32001 Diff: 1; ```. So that looks ok, right? At least the difference is more or less constant. :D ; But the tracker only tracks actual objects, right? So Creators, Factories, and others that do not inherit from base are not tracked. Could it be a vector/map that constantly receives new values but is not cleanup up with `reset`/`cleanup`?; Similar to what was happening in https://github.com/sofa-framework/SofaPython3/pull/304",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256307109
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256312726:1319,Integrability,Message,Message,1319,"I don't think so because components are destroyed in the unload. On Fri, Sep 23, 2022, 16:43 Paul Scheikl ***@***.***> wrote:. > @alxbilger <https://github.com/alxbilger> Thanks!; >; > Before unload; > Total Base: 31970 31936 Diff: 34; > After unload; > Total Base: 31970 31939 Diff: 31; > Before unload; > Total Base: 32002 31968 Diff: 34; > After unload; > Total Base: 32002 31971 Diff: 31; > Before cleanup; > Total Base: 32002 32000 Diff: 2; > Total Base: 32002 32000 Diff: 2; > After cleanup; > Total Base: 32002 32001 Diff: 1; >; > So that looks ok, right? At least the difference is more or less constant.; > :D; > But the tracker only tracks actual objects, right? So Creators, Factories,; > and others that do not inherit from base are not tracked.; >; > Could it be a vector/map that constantly receives new values but is not; > cleanup up with reset/cleanup?; > Similar to what was happening in sofa-framework/SofaPython3#304; > <https://github.com/sofa-framework/SofaPython3/pull/304>; >; > ‚Äî; > Reply to this email directly, view it on GitHub; > <https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256307109>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ACQVHUANK4QVMDDWVFQIBHTV7W6ZRANCNFSM6AAAAAAQR3UB3M>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256312726
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256312726:723,Modifiability,inherit,inherit,723,"I don't think so because components are destroyed in the unload. On Fri, Sep 23, 2022, 16:43 Paul Scheikl ***@***.***> wrote:. > @alxbilger <https://github.com/alxbilger> Thanks!; >; > Before unload; > Total Base: 31970 31936 Diff: 34; > After unload; > Total Base: 31970 31939 Diff: 31; > Before unload; > Total Base: 32002 31968 Diff: 34; > After unload; > Total Base: 32002 31971 Diff: 31; > Before cleanup; > Total Base: 32002 32000 Diff: 2; > Total Base: 32002 32000 Diff: 2; > After cleanup; > Total Base: 32002 32001 Diff: 1; >; > So that looks ok, right? At least the difference is more or less constant.; > :D; > But the tracker only tracks actual objects, right? So Creators, Factories,; > and others that do not inherit from base are not tracked.; >; > Could it be a vector/map that constantly receives new values but is not; > cleanup up with reset/cleanup?; > Similar to what was happening in sofa-framework/SofaPython3#304; > <https://github.com/sofa-framework/SofaPython3/pull/304>; >; > ‚Äî; > Reply to this email directly, view it on GitHub; > <https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256307109>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ACQVHUANK4QVMDDWVFQIBHTV7W6ZRANCNFSM6AAAAAAQR3UB3M>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256312726
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256349654:2219,Deployability,Pipeline,PipelineImpl,2219,"3EA66C2D: sofa::core::collision::MemberElementIntersector<sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::detection::intersection::LocalMinDistance>::beginIntersect(sofa::core::CollisionModel*, sofa::core::CollisionModel*, sofa::core::collision::DetectionOutputVector*&) (Intersection.inl:54); ==91659== by 0x3E97FA7E: sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair(std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> const&) (BVHNarrowPhase.cpp:73); ==91659== by 0x53714C0: sofa::core::collision::NarrowPhaseDetection::addCollisionPairs(sofa::type::vector<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*>, sofa::type::CPUMemoryManager<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> > > const&) (NarrowPhaseDetection.cpp:41); ==91659== by 0x3E99415F: sofa::component::collision::detection::algorithm::DefaultPipeline::doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CPUMemoryManager<sofa::core::CollisionModel*> > const&) (DefaultPipeline.cpp:238); ==91659== by 0x4BBD0D6: sofa::simulation::PipelineImpl::computeCollisionDetection() (PipelineImpl.cpp:117); ==91659== by 0x4B68E62: sofa::simulation::CollisionVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*) (CollisionVisitor.cpp:78); ==91659== by 0x4B690BC: runVisitorTask<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::core::co. ```. Sounds like createOutputModel is a good first spot to look at as it allocate an output vector with new... and that this one is returned to finally be stored in a map (eg: line 50 in NarrowPhaseDection).... which is not deleted when destructing object.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256349654
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256349654:2262,Deployability,Pipeline,PipelineImpl,2262,"3EA66C2D: sofa::core::collision::MemberElementIntersector<sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::detection::intersection::LocalMinDistance>::beginIntersect(sofa::core::CollisionModel*, sofa::core::CollisionModel*, sofa::core::collision::DetectionOutputVector*&) (Intersection.inl:54); ==91659== by 0x3E97FA7E: sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair(std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> const&) (BVHNarrowPhase.cpp:73); ==91659== by 0x53714C0: sofa::core::collision::NarrowPhaseDetection::addCollisionPairs(sofa::type::vector<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*>, sofa::type::CPUMemoryManager<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> > > const&) (NarrowPhaseDetection.cpp:41); ==91659== by 0x3E99415F: sofa::component::collision::detection::algorithm::DefaultPipeline::doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CPUMemoryManager<sofa::core::CollisionModel*> > const&) (DefaultPipeline.cpp:238); ==91659== by 0x4BBD0D6: sofa::simulation::PipelineImpl::computeCollisionDetection() (PipelineImpl.cpp:117); ==91659== by 0x4B68E62: sofa::simulation::CollisionVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*) (CollisionVisitor.cpp:78); ==91659== by 0x4B690BC: runVisitorTask<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::core::co. ```. Sounds like createOutputModel is a good first spot to look at as it allocate an output vector with new... and that this one is returned to finally be stored in a map (eg: line 50 in NarrowPhaseDection).... which is not deleted when destructing object.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256349654
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256349654:2418,Deployability,Pipeline,Pipeline,2418,"3EA66C2D: sofa::core::collision::MemberElementIntersector<sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::detection::intersection::LocalMinDistance>::beginIntersect(sofa::core::CollisionModel*, sofa::core::CollisionModel*, sofa::core::collision::DetectionOutputVector*&) (Intersection.inl:54); ==91659== by 0x3E97FA7E: sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair(std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> const&) (BVHNarrowPhase.cpp:73); ==91659== by 0x53714C0: sofa::core::collision::NarrowPhaseDetection::addCollisionPairs(sofa::type::vector<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*>, sofa::type::CPUMemoryManager<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> > > const&) (NarrowPhaseDetection.cpp:41); ==91659== by 0x3E99415F: sofa::component::collision::detection::algorithm::DefaultPipeline::doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CPUMemoryManager<sofa::core::CollisionModel*> > const&) (DefaultPipeline.cpp:238); ==91659== by 0x4BBD0D6: sofa::simulation::PipelineImpl::computeCollisionDetection() (PipelineImpl.cpp:117); ==91659== by 0x4B68E62: sofa::simulation::CollisionVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*) (CollisionVisitor.cpp:78); ==91659== by 0x4B690BC: runVisitorTask<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::core::co. ```. Sounds like createOutputModel is a good first spot to look at as it allocate an output vector with new... and that this one is returned to finally be stored in a map (eg: line 50 in NarrowPhaseDection).... which is not deleted when destructing object.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256349654
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256349654:2644,Energy Efficiency,allocate,allocate,2644,"3EA66C2D: sofa::core::collision::MemberElementIntersector<sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::detection::intersection::LocalMinDistance>::beginIntersect(sofa::core::CollisionModel*, sofa::core::CollisionModel*, sofa::core::collision::DetectionOutputVector*&) (Intersection.inl:54); ==91659== by 0x3E97FA7E: sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair(std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> const&) (BVHNarrowPhase.cpp:73); ==91659== by 0x53714C0: sofa::core::collision::NarrowPhaseDetection::addCollisionPairs(sofa::type::vector<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*>, sofa::type::CPUMemoryManager<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> > > const&) (NarrowPhaseDetection.cpp:41); ==91659== by 0x3E99415F: sofa::component::collision::detection::algorithm::DefaultPipeline::doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CPUMemoryManager<sofa::core::CollisionModel*> > const&) (DefaultPipeline.cpp:238); ==91659== by 0x4BBD0D6: sofa::simulation::PipelineImpl::computeCollisionDetection() (PipelineImpl.cpp:117); ==91659== by 0x4B68E62: sofa::simulation::CollisionVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*) (CollisionVisitor.cpp:78); ==91659== by 0x4B690BC: runVisitorTask<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::core::co. ```. Sounds like createOutputModel is a good first spot to look at as it allocate an output vector with new... and that this one is returned to finally be stored in a map (eg: line 50 in NarrowPhaseDection).... which is not deleted when destructing object.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256349654
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256349654:1209,Safety,detect,detection,1209,"kflow :) . My contribution:; ```console; ==91659== 5,152 (32 direct, 5,120 indirect) bytes in 1 blocks are definitely lost in loss record 12,668 of 12,789; ==91659== at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so); ==91659== by 0x3EA66C2D: createOutputVector<sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3, double>, sofa::type::Vec<3, double>, double> >, sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3, double>, sofa::type::Vec<3, double>, double> > > (Intersection.h:48); ==91659== by 0x3EA66C2D: beginIntersect (Intersection.inl:60); ==91659== by 0x3EA66C2D: sofa::core::collision::MemberElementIntersector<sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::detection::intersection::LocalMinDistance>::beginIntersect(sofa::core::CollisionModel*, sofa::core::CollisionModel*, sofa::core::collision::DetectionOutputVector*&) (Intersection.inl:54); ==91659== by 0x3E97FA7E: sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair(std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> const&) (BVHNarrowPhase.cpp:73); ==91659== by 0x53714C0: sofa::core::collision::NarrowPhaseDetection::addCollisionPairs(sofa::type::vector<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*>, sofa::type::CPUMemoryManager<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> > > const&) (NarrowPhaseDetection.cpp:41); ==91659== by 0x3E99415F: sofa::component::collision::detection::algorithm::DefaultPipeline::doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CP",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256349654
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256349654:1349,Safety,Detect,DetectionOutputVector,1349,"kflow :) . My contribution:; ```console; ==91659== 5,152 (32 direct, 5,120 indirect) bytes in 1 blocks are definitely lost in loss record 12,668 of 12,789; ==91659== at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so); ==91659== by 0x3EA66C2D: createOutputVector<sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3, double>, sofa::type::Vec<3, double>, double> >, sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3, double>, sofa::type::Vec<3, double>, double> > > (Intersection.h:48); ==91659== by 0x3EA66C2D: beginIntersect (Intersection.inl:60); ==91659== by 0x3EA66C2D: sofa::core::collision::MemberElementIntersector<sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::detection::intersection::LocalMinDistance>::beginIntersect(sofa::core::CollisionModel*, sofa::core::CollisionModel*, sofa::core::collision::DetectionOutputVector*&) (Intersection.inl:54); ==91659== by 0x3E97FA7E: sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair(std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> const&) (BVHNarrowPhase.cpp:73); ==91659== by 0x53714C0: sofa::core::collision::NarrowPhaseDetection::addCollisionPairs(sofa::type::vector<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*>, sofa::type::CPUMemoryManager<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> > > const&) (NarrowPhaseDetection.cpp:41); ==91659== by 0x3E99415F: sofa::component::collision::detection::algorithm::DefaultPipeline::doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CP",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256349654
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256349654:1450,Safety,detect,detection,1450,"torTypes<sofa::type::Vec<3, double>, sofa::type::Vec<3, double>, double> >, sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3, double>, sofa::type::Vec<3, double>, double> > > (Intersection.h:48); ==91659== by 0x3EA66C2D: beginIntersect (Intersection.inl:60); ==91659== by 0x3EA66C2D: sofa::core::collision::MemberElementIntersector<sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::detection::intersection::LocalMinDistance>::beginIntersect(sofa::core::CollisionModel*, sofa::core::CollisionModel*, sofa::core::collision::DetectionOutputVector*&) (Intersection.inl:54); ==91659== by 0x3E97FA7E: sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair(std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> const&) (BVHNarrowPhase.cpp:73); ==91659== by 0x53714C0: sofa::core::collision::NarrowPhaseDetection::addCollisionPairs(sofa::type::vector<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*>, sofa::type::CPUMemoryManager<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> > > const&) (NarrowPhaseDetection.cpp:41); ==91659== by 0x3E99415F: sofa::component::collision::detection::algorithm::DefaultPipeline::doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CPUMemoryManager<sofa::core::CollisionModel*> > const&) (DefaultPipeline.cpp:238); ==91659== by 0x4BBD0D6: sofa::simulation::PipelineImpl::computeCollisionDetection() (PipelineImpl.cpp:117); ==91659== by 0x4B68E62: sofa::simulation::CollisionVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*) (CollisionVisitor.cpp:78); ==91659== by 0x4B690BC: runVisitorTas",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256349654
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256349654:1974,Safety,detect,detection,1974,"3EA66C2D: sofa::core::collision::MemberElementIntersector<sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::detection::intersection::LocalMinDistance>::beginIntersect(sofa::core::CollisionModel*, sofa::core::CollisionModel*, sofa::core::collision::DetectionOutputVector*&) (Intersection.inl:54); ==91659== by 0x3E97FA7E: sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair(std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> const&) (BVHNarrowPhase.cpp:73); ==91659== by 0x53714C0: sofa::core::collision::NarrowPhaseDetection::addCollisionPairs(sofa::type::vector<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*>, sofa::type::CPUMemoryManager<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> > > const&) (NarrowPhaseDetection.cpp:41); ==91659== by 0x3E99415F: sofa::component::collision::detection::algorithm::DefaultPipeline::doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CPUMemoryManager<sofa::core::CollisionModel*> > const&) (DefaultPipeline.cpp:238); ==91659== by 0x4BBD0D6: sofa::simulation::PipelineImpl::computeCollisionDetection() (PipelineImpl.cpp:117); ==91659== by 0x4B68E62: sofa::simulation::CollisionVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*) (CollisionVisitor.cpp:78); ==91659== by 0x4B690BC: runVisitorTask<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::core::co. ```. Sounds like createOutputModel is a good first spot to look at as it allocate an output vector with new... and that this one is returned to finally be stored in a map (eg: line 50 in NarrowPhaseDection).... which is not deleted when destructing object.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256349654
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:599,Availability,ERROR,ERROR,599,"I suggest using the memory sensitization tools provided by GCC or Clang - it is less hassle than valgrind. It also provides more detail regarding memory leaks. To do this, build Sofa with the additional flag: `cmake .. -DCMAKE_CXX_FLAGS=""${CMAKE_CXX_FLAGS} -fsanitize=address""`. Here is the output when running the example (CPP) scene provided by @ScheiklP. The 15 object(s) that are detected are come from the number of unloads performed (I decreased it to 15 from the original 1000 used in the scene by @ScheiklP). ```; =================================================================; ==445057==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 480 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000d4160 in sofa::core::collision::TDetectionOutputVector<sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> > >* sofa::core::collision::BaseIntersector::createOutputVector<sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> > >(sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >*, sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/Intersection.h:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:3810,Deployability,Pipeline,PipelineImpl,3810,"ome/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:73; #4 0x7fc2fea01259 in sofa::core::collision::NarrowPhaseDetection::addCollisionPairs(sofa::type::vector<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*>, sofa::type::CPUMemoryManager<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> > > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/NarrowPhaseDetection.cpp:41; #5 0x7fc300261107 in sofa::component::collision::detection::algorithm::DefaultPipeline::doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CPUMemoryManager<sofa::core::CollisionModel*> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/DefaultPipeline.cpp:238; #6 0x7fc2ff1ec0e0 in sofa::simulation::PipelineImpl::computeCollisionDetection() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/PipelineImpl.cpp:117; #7 0x7fc2ff12923f in sofa::simulation::CollisionVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/CollisionVisitor.cpp:78; #8 0x7fc2ff129ac6 in void sofa::simulation::Visitor::runVisitorTask<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), sofa::core::collision::Pipeline*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Visitor.h:246; #9 0x7fc2ff129829 in void sofa::simulation::Visitor::for_each<sofa::simulation::CollisionVisitor",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:3937,Deployability,Pipeline,PipelineImpl,3937,"ome/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:73; #4 0x7fc2fea01259 in sofa::core::collision::NarrowPhaseDetection::addCollisionPairs(sofa::type::vector<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*>, sofa::type::CPUMemoryManager<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> > > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/NarrowPhaseDetection.cpp:41; #5 0x7fc300261107 in sofa::component::collision::detection::algorithm::DefaultPipeline::doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CPUMemoryManager<sofa::core::CollisionModel*> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/DefaultPipeline.cpp:238; #6 0x7fc2ff1ec0e0 in sofa::simulation::PipelineImpl::computeCollisionDetection() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/PipelineImpl.cpp:117; #7 0x7fc2ff12923f in sofa::simulation::CollisionVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/CollisionVisitor.cpp:78; #8 0x7fc2ff129ac6 in void sofa::simulation::Visitor::runVisitorTask<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), sofa::core::collision::Pipeline*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Visitor.h:246; #9 0x7fc2ff129829 in void sofa::simulation::Visitor::for_each<sofa::simulation::CollisionVisitor",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:4089,Deployability,Pipeline,Pipeline,4089,"llisionPairs(sofa::type::vector<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*>, sofa::type::CPUMemoryManager<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> > > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/NarrowPhaseDetection.cpp:41; #5 0x7fc300261107 in sofa::component::collision::detection::algorithm::DefaultPipeline::doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CPUMemoryManager<sofa::core::CollisionModel*> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/DefaultPipeline.cpp:238; #6 0x7fc2ff1ec0e0 in sofa::simulation::PipelineImpl::computeCollisionDetection() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/PipelineImpl.cpp:117; #7 0x7fc2ff12923f in sofa::simulation::CollisionVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/CollisionVisitor.cpp:78; #8 0x7fc2ff129ac6 in void sofa::simulation::Visitor::runVisitorTask<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), sofa::core::collision::Pipeline*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Visitor.h:246; #9 0x7fc2ff129829 in void sofa::simulation::Visitor::for_each<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::simulation::NodeSingle<sofa::core::collision::Pipeline, true>, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, sofa::simulation::NodeSingle<s",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:4361,Deployability,Pipeline,Pipeline,4361,"ne::doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CPUMemoryManager<sofa::core::CollisionModel*> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/DefaultPipeline.cpp:238; #6 0x7fc2ff1ec0e0 in sofa::simulation::PipelineImpl::computeCollisionDetection() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/PipelineImpl.cpp:117; #7 0x7fc2ff12923f in sofa::simulation::CollisionVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/CollisionVisitor.cpp:78; #8 0x7fc2ff129ac6 in void sofa::simulation::Visitor::runVisitorTask<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), sofa::core::collision::Pipeline*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Visitor.h:246; #9 0x7fc2ff129829 in void sofa::simulation::Visitor::for_each<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::simulation::NodeSingle<sofa::core::collision::Pipeline, true>, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, sofa::simulation::NodeSingle<sofa::core::collision::Pipeline, true> const&, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Visitor.h:286; #10 0x7fc2ff12911b in sofa::simulation::CollisionVisitor::proce",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:4526,Deployability,Pipeline,Pipeline,4526,"ne::doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CPUMemoryManager<sofa::core::CollisionModel*> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/DefaultPipeline.cpp:238; #6 0x7fc2ff1ec0e0 in sofa::simulation::PipelineImpl::computeCollisionDetection() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/PipelineImpl.cpp:117; #7 0x7fc2ff12923f in sofa::simulation::CollisionVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/CollisionVisitor.cpp:78; #8 0x7fc2ff129ac6 in void sofa::simulation::Visitor::runVisitorTask<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), sofa::core::collision::Pipeline*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Visitor.h:246; #9 0x7fc2ff129829 in void sofa::simulation::Visitor::for_each<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::simulation::NodeSingle<sofa::core::collision::Pipeline, true>, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, sofa::simulation::NodeSingle<sofa::core::collision::Pipeline, true> const&, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Visitor.h:286; #10 0x7fc2ff12911b in sofa::simulation::CollisionVisitor::proce",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:4561,Deployability,Pipeline,Pipeline,4561,"ne::doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CPUMemoryManager<sofa::core::CollisionModel*> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/DefaultPipeline.cpp:238; #6 0x7fc2ff1ec0e0 in sofa::simulation::PipelineImpl::computeCollisionDetection() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/PipelineImpl.cpp:117; #7 0x7fc2ff12923f in sofa::simulation::CollisionVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/CollisionVisitor.cpp:78; #8 0x7fc2ff129ac6 in void sofa::simulation::Visitor::runVisitorTask<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), sofa::core::collision::Pipeline*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Visitor.h:246; #9 0x7fc2ff129829 in void sofa::simulation::Visitor::for_each<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::simulation::NodeSingle<sofa::core::collision::Pipeline, true>, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, sofa::simulation::NodeSingle<sofa::core::collision::Pipeline, true> const&, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Visitor.h:286; #10 0x7fc2ff12911b in sofa::simulation::CollisionVisitor::proce",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:4934,Deployability,Pipeline,Pipeline,4934,"llision::Pipeline*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/CollisionVisitor.cpp:78; #8 0x7fc2ff129ac6 in void sofa::simulation::Visitor::runVisitorTask<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), sofa::core::collision::Pipeline*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Visitor.h:246; #9 0x7fc2ff129829 in void sofa::simulation::Visitor::for_each<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::simulation::NodeSingle<sofa::core::collision::Pipeline, true>, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, sofa::simulation::NodeSingle<sofa::core::collision::Pipeline, true> const&, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Visitor.h:286; #10 0x7fc2ff12911b in sofa::simulation::CollisionVisitor::processNodeTopDown(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/CollisionVisitor.cpp:38; #11 0x7fc300356978 in sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::St",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:4974,Deployability,Pipeline,Pipeline,4974,"llision::Pipeline*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/CollisionVisitor.cpp:78; #8 0x7fc2ff129ac6 in void sofa::simulation::Visitor::runVisitorTask<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), sofa::core::collision::Pipeline*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Visitor.h:246; #9 0x7fc2ff129829 in void sofa::simulation::Visitor::for_each<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::simulation::NodeSingle<sofa::core::collision::Pipeline, true>, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, sofa::simulation::NodeSingle<sofa::core::collision::Pipeline, true> const&, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Visitor.h:286; #10 0x7fc2ff12911b in sofa::simulation::CollisionVisitor::processNodeTopDown(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/CollisionVisitor.cpp:38; #11 0x7fc300356978 in sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::St",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:5098,Deployability,Pipeline,Pipeline,5098,"llision::Pipeline*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/CollisionVisitor.cpp:78; #8 0x7fc2ff129ac6 in void sofa::simulation::Visitor::runVisitorTask<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), sofa::core::collision::Pipeline*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Visitor.h:246; #9 0x7fc2ff129829 in void sofa::simulation::Visitor::for_each<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::simulation::NodeSingle<sofa::core::collision::Pipeline, true>, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, sofa::simulation::NodeSingle<sofa::core::collision::Pipeline, true> const&, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Visitor.h:286; #10 0x7fc2ff12911b in sofa::simulation::CollisionVisitor::processNodeTopDown(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/CollisionVisitor.cpp:38; #11 0x7fc300356978 in sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::St",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:5215,Deployability,Pipeline,Pipeline,5215,"llision::Pipeline*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/CollisionVisitor.cpp:78; #8 0x7fc2ff129ac6 in void sofa::simulation::Visitor::runVisitorTask<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), sofa::core::collision::Pipeline*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Visitor.h:246; #9 0x7fc2ff129829 in void sofa::simulation::Visitor::for_each<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::simulation::NodeSingle<sofa::core::collision::Pipeline, true>, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, sofa::simulation::NodeSingle<sofa::core::collision::Pipeline, true> const&, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Visitor.h:286; #10 0x7fc2ff12911b in sofa::simulation::CollisionVisitor::processNodeTopDown(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/CollisionVisitor.cpp:38; #11 0x7fc300356978 in sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::St",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:6967,Deployability,Pipeline,Pipeline,6967,"ation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Graph/src/sofa/simulation/graph/DAGNode.cpp:685; #12 0x7fc300356054 in sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Graph/src/sofa/simulation/graph/DAGNode.cpp:607; #13 0x7fc2ff15304b in sofa::simulation::Node::executeVisitor(sofa::simulation::Visitor*, bool) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Node.cpp:901; #14 0x7fc2ff10c119 in sofa::simulation::Node::execute(sofa::simulation::Visitor*, bool) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Node.h:197; #15 0x7fc2ff109df1 in sofa::simulation::AnimateVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/AnimateVisitor.cpp:94; #16 0x7fc2ff10a179 in sofa::simulation::AnimateVisitor::processNodeTopDown(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/AnimateVisitor.cpp:125; #17 0x7fc300356978 in sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Graph/src/sofa/simulation/graph/DAGNode.cpp:685; #18 0x7fc300356054 in sofa::simulation::grap",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:33778,Deployability,Pipeline,PipelineImpl,33778,"e/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:97; #16 0x7fc2fea01259 in sofa::core::collision::NarrowPhaseDetection::addCollisionPairs(sofa::type::vector<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*>, sofa::type::CPUMemoryManager<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> > > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/NarrowPhaseDetection.cpp:41; #17 0x7fc300261107 in sofa::component::collision::detection::algorithm::DefaultPipeline::doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CPUMemoryManager<sofa::core::CollisionModel*> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/DefaultPipeline.cpp:238; #18 0x7fc2ff1ec0e0 in sofa::simulation::PipelineImpl::computeCollisionDetection() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/PipelineImpl.cpp:117; #19 0x7fc2ff12923f in sofa::simulation::CollisionVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/CollisionVisitor.cpp:78; #20 0x7fc2ff129ac6 in void sofa::simulation::Visitor::runVisitorTask<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), sofa::core::collision::Pipeline*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Visitor.h:246; #21 0x7fc2ff129829 in void sofa::simulation::Visitor::for_each<sofa::simulation::CollisionVisi",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:33905,Deployability,Pipeline,PipelineImpl,33905,"e/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:97; #16 0x7fc2fea01259 in sofa::core::collision::NarrowPhaseDetection::addCollisionPairs(sofa::type::vector<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*>, sofa::type::CPUMemoryManager<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> > > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/NarrowPhaseDetection.cpp:41; #17 0x7fc300261107 in sofa::component::collision::detection::algorithm::DefaultPipeline::doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CPUMemoryManager<sofa::core::CollisionModel*> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/DefaultPipeline.cpp:238; #18 0x7fc2ff1ec0e0 in sofa::simulation::PipelineImpl::computeCollisionDetection() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/PipelineImpl.cpp:117; #19 0x7fc2ff12923f in sofa::simulation::CollisionVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/CollisionVisitor.cpp:78; #20 0x7fc2ff129ac6 in void sofa::simulation::Visitor::runVisitorTask<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), sofa::core::collision::Pipeline*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Visitor.h:246; #21 0x7fc2ff129829 in void sofa::simulation::Visitor::for_each<sofa::simulation::CollisionVisi",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:34058,Deployability,Pipeline,Pipeline,34058,"isionPairs(sofa::type::vector<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*>, sofa::type::CPUMemoryManager<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> > > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/NarrowPhaseDetection.cpp:41; #17 0x7fc300261107 in sofa::component::collision::detection::algorithm::DefaultPipeline::doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CPUMemoryManager<sofa::core::CollisionModel*> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/DefaultPipeline.cpp:238; #18 0x7fc2ff1ec0e0 in sofa::simulation::PipelineImpl::computeCollisionDetection() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/PipelineImpl.cpp:117; #19 0x7fc2ff12923f in sofa::simulation::CollisionVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/CollisionVisitor.cpp:78; #20 0x7fc2ff129ac6 in void sofa::simulation::Visitor::runVisitorTask<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), sofa::core::collision::Pipeline*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Visitor.h:246; #21 0x7fc2ff129829 in void sofa::simulation::Visitor::for_each<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::simulation::NodeSingle<sofa::core::collision::Pipeline, true>, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, sofa::simulation::NodeSingle",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:34331,Deployability,Pipeline,Pipeline,34331,":doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CPUMemoryManager<sofa::core::CollisionModel*> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/DefaultPipeline.cpp:238; #18 0x7fc2ff1ec0e0 in sofa::simulation::PipelineImpl::computeCollisionDetection() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/PipelineImpl.cpp:117; #19 0x7fc2ff12923f in sofa::simulation::CollisionVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/CollisionVisitor.cpp:78; #20 0x7fc2ff129ac6 in void sofa::simulation::Visitor::runVisitorTask<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), sofa::core::collision::Pipeline*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Visitor.h:246; #21 0x7fc2ff129829 in void sofa::simulation::Visitor::for_each<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::simulation::NodeSingle<sofa::core::collision::Pipeline, true>, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, sofa::simulation::NodeSingle<sofa::core::collision::Pipeline, true> const&, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Visitor.h:286; #22 0x7fc2ff12911b in sofa::simulation::CollisionVisitor::pro",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:34496,Deployability,Pipeline,Pipeline,34496,":doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CPUMemoryManager<sofa::core::CollisionModel*> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/DefaultPipeline.cpp:238; #18 0x7fc2ff1ec0e0 in sofa::simulation::PipelineImpl::computeCollisionDetection() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/PipelineImpl.cpp:117; #19 0x7fc2ff12923f in sofa::simulation::CollisionVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/CollisionVisitor.cpp:78; #20 0x7fc2ff129ac6 in void sofa::simulation::Visitor::runVisitorTask<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), sofa::core::collision::Pipeline*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Visitor.h:246; #21 0x7fc2ff129829 in void sofa::simulation::Visitor::for_each<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::simulation::NodeSingle<sofa::core::collision::Pipeline, true>, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, sofa::simulation::NodeSingle<sofa::core::collision::Pipeline, true> const&, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Visitor.h:286; #22 0x7fc2ff12911b in sofa::simulation::CollisionVisitor::pro",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:34531,Deployability,Pipeline,Pipeline,34531,":doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CPUMemoryManager<sofa::core::CollisionModel*> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/DefaultPipeline.cpp:238; #18 0x7fc2ff1ec0e0 in sofa::simulation::PipelineImpl::computeCollisionDetection() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/PipelineImpl.cpp:117; #19 0x7fc2ff12923f in sofa::simulation::CollisionVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/CollisionVisitor.cpp:78; #20 0x7fc2ff129ac6 in void sofa::simulation::Visitor::runVisitorTask<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), sofa::core::collision::Pipeline*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Visitor.h:246; #21 0x7fc2ff129829 in void sofa::simulation::Visitor::for_each<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::simulation::NodeSingle<sofa::core::collision::Pipeline, true>, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, sofa::simulation::NodeSingle<sofa::core::collision::Pipeline, true> const&, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Visitor.h:286; #22 0x7fc2ff12911b in sofa::simulation::CollisionVisitor::pro",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:34905,Deployability,Pipeline,Pipeline,34905,"ision::Pipeline*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/CollisionVisitor.cpp:78; #20 0x7fc2ff129ac6 in void sofa::simulation::Visitor::runVisitorTask<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), sofa::core::collision::Pipeline*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Visitor.h:246; #21 0x7fc2ff129829 in void sofa::simulation::Visitor::for_each<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::simulation::NodeSingle<sofa::core::collision::Pipeline, true>, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, sofa::simulation::NodeSingle<sofa::core::collision::Pipeline, true> const&, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Visitor.h:286; #22 0x7fc2ff12911b in sofa::simulation::CollisionVisitor::processNodeTopDown(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/CollisionVisitor.cpp:38; #23 0x7fc300356978 in sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::S",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:34945,Deployability,Pipeline,Pipeline,34945,"ision::Pipeline*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/CollisionVisitor.cpp:78; #20 0x7fc2ff129ac6 in void sofa::simulation::Visitor::runVisitorTask<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), sofa::core::collision::Pipeline*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Visitor.h:246; #21 0x7fc2ff129829 in void sofa::simulation::Visitor::for_each<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::simulation::NodeSingle<sofa::core::collision::Pipeline, true>, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, sofa::simulation::NodeSingle<sofa::core::collision::Pipeline, true> const&, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Visitor.h:286; #22 0x7fc2ff12911b in sofa::simulation::CollisionVisitor::processNodeTopDown(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/CollisionVisitor.cpp:38; #23 0x7fc300356978 in sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::S",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:35069,Deployability,Pipeline,Pipeline,35069,"ision::Pipeline*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/CollisionVisitor.cpp:78; #20 0x7fc2ff129ac6 in void sofa::simulation::Visitor::runVisitorTask<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), sofa::core::collision::Pipeline*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Visitor.h:246; #21 0x7fc2ff129829 in void sofa::simulation::Visitor::for_each<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::simulation::NodeSingle<sofa::core::collision::Pipeline, true>, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, sofa::simulation::NodeSingle<sofa::core::collision::Pipeline, true> const&, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Visitor.h:286; #22 0x7fc2ff12911b in sofa::simulation::CollisionVisitor::processNodeTopDown(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/CollisionVisitor.cpp:38; #23 0x7fc300356978 in sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::S",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:35186,Deployability,Pipeline,Pipeline,35186,"ision::Pipeline*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/CollisionVisitor.cpp:78; #20 0x7fc2ff129ac6 in void sofa::simulation::Visitor::runVisitorTask<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), sofa::core::collision::Pipeline*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Visitor.h:246; #21 0x7fc2ff129829 in void sofa::simulation::Visitor::for_each<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::simulation::NodeSingle<sofa::core::collision::Pipeline, true>, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, sofa::simulation::NodeSingle<sofa::core::collision::Pipeline, true> const&, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Visitor.h:286; #22 0x7fc2ff12911b in sofa::simulation::CollisionVisitor::processNodeTopDown(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/CollisionVisitor.cpp:38; #23 0x7fc300356978 in sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::S",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:36938,Deployability,Pipeline,Pipeline,36938,"ation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Graph/src/sofa/simulation/graph/DAGNode.cpp:685; #24 0x7fc300356054 in sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Graph/src/sofa/simulation/graph/DAGNode.cpp:607; #25 0x7fc2ff15304b in sofa::simulation::Node::executeVisitor(sofa::simulation::Visitor*, bool) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Node.cpp:901; #26 0x7fc2ff10c119 in sofa::simulation::Node::execute(sofa::simulation::Visitor*, bool) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Node.h:197; #27 0x7fc2ff109df1 in sofa::simulation::AnimateVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/AnimateVisitor.cpp:94; #28 0x7fc2ff10a179 in sofa::simulation::AnimateVisitor::processNodeTopDown(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/AnimateVisitor.cpp:125; #29 0x7fc300356978 in sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Graph/src/sofa/simulation/graph/DAGNode.cpp:685. SUMMARY: AddressSanitizer: 9831480 byte(s) l",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:687,Energy Efficiency,allocate,allocated,687,"I suggest using the memory sensitization tools provided by GCC or Clang - it is less hassle than valgrind. It also provides more detail regarding memory leaks. To do this, build Sofa with the additional flag: `cmake .. -DCMAKE_CXX_FLAGS=""${CMAKE_CXX_FLAGS} -fsanitize=address""`. Here is the output when running the example (CPP) scene provided by @ScheiklP. The 15 object(s) that are detected are come from the number of unloads performed (I decreased it to 15 from the original 1000 used in the scene by @ScheiklP). ```; =================================================================; ==445057==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 480 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000d4160 in sofa::core::collision::TDetectionOutputVector<sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> > >* sofa::core::collision::BaseIntersector::createOutputVector<sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> > >(sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >*, sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/Intersection.h:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:9149,Energy Efficiency,allocate,allocated,9149,"ation::Node::executeVisitor(sofa::simulation::Visitor*, bool) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Node.cpp:901; #20 0x7fc2ff12b381 in sofa::simulation::Node::execute(sofa::simulation::Visitor&, bool) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Node.h:191; #21 0x7fc2ff12aa43 in sofa::simulation::DefaultAnimationLoop::step(sofa::core::ExecParams const*, double) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/DefaultAnimationLoop.cpp:113; #22 0x7fc2ff205eb1 in sofa::simulation::Simulation::animate(sofa::simulation::Node*, double) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp:242; #23 0x5646e6e19751 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:166; #24 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000d6c54 in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::MeshDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:11360,Energy Efficiency,allocate,allocated,11360,"ection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000eb62a in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::NewProximityIntersection, sofa::component::collision::detection::intersection::MeshNewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000f3c9c in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::NewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:71; #3 0x7fc3000f3696 in sofa::component::collision::detection::intersection::NewProximityIntersection::init() /home/pit/Loca",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:14597,Energy Efficiency,allocate,allocated,14597,"Visitor(sofa::simulation::Visitor*, bool) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Node.cpp:901; #8 0x7fc2ff15a33c in void sofa::simulation::Node::execute<sofa::simulation::InitVisitor, sofa::core::ExecParams>(sofa::core::ExecParams const*, bool) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Node.h:206; #9 0x7fc2ff205b75 in sofa::simulation::Simulation::initNode(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp:213; #10 0x7fc2ff205847 in sofa::simulation::Simulation::init(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp:189; #11 0x5646e6e194e0 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:143; #12 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000fca4c in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::NewProximityIntersection, sofa::component::collision::detection::intersection::RayNewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000f3c9c in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::NewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:71; #3 0x7fc3000f3696 in sofa::component::collision::detection::intersection::NewProximityIntersection::init() /home/pit/Local",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:17833,Energy Efficiency,allocate,allocated,17833,"Visitor(sofa::simulation::Visitor*, bool) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Node.cpp:901; #8 0x7fc2ff15a33c in void sofa::simulation::Node::execute<sofa::simulation::InitVisitor, sofa::core::ExecParams>(sofa::core::ExecParams const*, bool) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Node.h:206; #9 0x7fc2ff205b75 in sofa::simulation::Simulation::initNode(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp:213; #10 0x7fc2ff205847 in sofa::simulation::Simulation::init(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp:189; #11 0x5646e6e194e0 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:143; #12 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000f9b12 in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::RayDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:20043,Energy Efficiency,allocate,allocated,20043,"ection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000ff16e in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection(",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:22267,Energy Efficiency,allocate,allocated,22267,"ion::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Indirect leak of 9830400 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc300297559 in __gnu_cxx::new_allocator<sofa::core::collision::DetectionOutput>::allocate(unsigned long, void const*) /usr/include/c++/9/ext/new_allocator.h:114; #2 0x7fc3002972fe in std::allocator_traits<std::allocator<sofa::core::collision::DetectionOutput> >::allocate(std::allocator<sofa::core::collision::DetectionOutput>&, unsigned long) /usr/include/c++/9/bits/alloc_traits.h:443; #3 0x7fc300296f03 in std::_Vector_base<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_allocate(unsigned long) /usr/include/c++/9/bits/stl_vector.h:343; #4 0x7fc3000e7ed8 in void std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_realloc_insert<sofa::core::collision::DetectionOutput>(__gnu_cxx::__normal_iterator<sofa::core::collision::DetectionOutput*, std::vector<sofa::cor",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:22478,Energy Efficiency,allocate,allocate,22478,"on/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Indirect leak of 9830400 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc300297559 in __gnu_cxx::new_allocator<sofa::core::collision::DetectionOutput>::allocate(unsigned long, void const*) /usr/include/c++/9/ext/new_allocator.h:114; #2 0x7fc3002972fe in std::allocator_traits<std::allocator<sofa::core::collision::DetectionOutput> >::allocate(std::allocator<sofa::core::collision::DetectionOutput>&, unsigned long) /usr/include/c++/9/bits/alloc_traits.h:443; #3 0x7fc300296f03 in std::_Vector_base<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_allocate(unsigned long) /usr/include/c++/9/bits/stl_vector.h:343; #4 0x7fc3000e7ed8 in void std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_realloc_insert<sofa::core::collision::DetectionOutput>(__gnu_cxx::__normal_iterator<sofa::core::collision::DetectionOutput*, std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> > >, sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:440; #5 0x7fc3000e79be i",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:22660,Energy Efficiency,allocate,allocate,22660,"ofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Indirect leak of 9830400 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc300297559 in __gnu_cxx::new_allocator<sofa::core::collision::DetectionOutput>::allocate(unsigned long, void const*) /usr/include/c++/9/ext/new_allocator.h:114; #2 0x7fc3002972fe in std::allocator_traits<std::allocator<sofa::core::collision::DetectionOutput> >::allocate(std::allocator<sofa::core::collision::DetectionOutput>&, unsigned long) /usr/include/c++/9/bits/alloc_traits.h:443; #3 0x7fc300296f03 in std::_Vector_base<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_allocate(unsigned long) /usr/include/c++/9/bits/stl_vector.h:343; #4 0x7fc3000e7ed8 in void std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_realloc_insert<sofa::core::collision::DetectionOutput>(__gnu_cxx::__normal_iterator<sofa::core::collision::DetectionOutput*, std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> > >, sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:440; #5 0x7fc3000e79be in sofa::core::collision::DetectionOutput& std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::emplace_back<sofa::core::collision::Detection",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:429,Performance,perform,performed,429,"I suggest using the memory sensitization tools provided by GCC or Clang - it is less hassle than valgrind. It also provides more detail regarding memory leaks. To do this, build Sofa with the additional flag: `cmake .. -DCMAKE_CXX_FLAGS=""${CMAKE_CXX_FLAGS} -fsanitize=address""`. Here is the output when running the example (CPP) scene provided by @ScheiklP. The 15 object(s) that are detected are come from the number of unloads performed (I decreased it to 15 from the original 1000 used in the scene by @ScheiklP). ```; =================================================================; ==445057==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 480 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000d4160 in sofa::core::collision::TDetectionOutputVector<sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> > >* sofa::core::collision::BaseIntersector::createOutputVector<sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> > >(sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >*, sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/Intersection.h:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:26787,Performance,queue,queue,26787,"d::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, bool, sofa::core::collision::ElementIntersector*, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:322; #11 0x7fc30024386e in sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitExternalChildren(sofa::core::CollisionElementIterator const&, sofa::core::CollisionElementIterator const&, sofa::core::collision::ElementIntersector*, sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision const&, std::queue<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:278; #12 0x7fc30024368b in sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitCollisionElements(std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, sofa::core::collision::ElementIntersector*, sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCol",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:28027,Performance,queue,queue,28027,"tion/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:278; #12 0x7fc30024368b in sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitCollisionElements(std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, sofa::core::collision::ElementIntersector*, sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision const&, std::queue<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, std::stack<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:251; #13 0x7fc300243254 in sofa::component::collision::detection::algorithm",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:29866,Performance,queue,queue,29866,"ection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:251; #13 0x7fc300243254 in sofa::component::collision::detection::algorithm::BVHNarrowPhase::processInternalCell(std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, sofa::core::collision::ElementIntersector*, sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision const&, std::queue<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, std::stack<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:196; #14 0x7fc3002430a2 in sofa::component::collision::detection::algorithm::",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:31835,Performance,queue,queue,31835,"CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:196; #14 0x7fc3002430a2 in sofa::component::collision::detection::algorithm::BVHNarrowPhase::processExternalCell(std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, sofa::core::CollisionModel*&, sofa::core::CollisionModel*&, sofa::core::collision::ElementIntersector*, sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision const&, sofa::component::collision::detection::algorithm::MirrorIntersector*, std::queue<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, sofa::core::collision::DetectionOutputVector*&) const /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:176; #15 0x7fc3002428a4 in sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair(std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algori",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:384,Safety,detect,detected,384,"I suggest using the memory sensitization tools provided by GCC or Clang - it is less hassle than valgrind. It also provides more detail regarding memory leaks. To do this, build Sofa with the additional flag: `cmake .. -DCMAKE_CXX_FLAGS=""${CMAKE_CXX_FLAGS} -fsanitize=address""`. Here is the output when running the example (CPP) scene provided by @ScheiklP. The 15 object(s) that are detected are come from the number of unloads performed (I decreased it to 15 from the original 1000 used in the scene by @ScheiklP). ```; =================================================================; ==445057==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 480 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000d4160 in sofa::core::collision::TDetectionOutputVector<sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> > >* sofa::core::collision::BaseIntersector::createOutputVector<sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> > >(sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >*, sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/Intersection.h:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:621,Safety,detect,detected,621,"I suggest using the memory sensitization tools provided by GCC or Clang - it is less hassle than valgrind. It also provides more detail regarding memory leaks. To do this, build Sofa with the additional flag: `cmake .. -DCMAKE_CXX_FLAGS=""${CMAKE_CXX_FLAGS} -fsanitize=address""`. Here is the output when running the example (CPP) scene provided by @ScheiklP. The 15 object(s) that are detected are come from the number of unloads performed (I decreased it to 15 from the original 1000 used in the scene by @ScheiklP). ```; =================================================================; ==445057==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 480 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000d4160 in sofa::core::collision::TDetectionOutputVector<sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> > >* sofa::core::collision::BaseIntersector::createOutputVector<sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> > >(sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >*, sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/Intersection.h:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:2398,Safety,detect,detection,2398,"type::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> > >(sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >*, sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/Intersection.h:48; #2 0x7fc3000eb263 in sofa::core::collision::MemberElementIntersector<sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::detection::intersection::MeshNewProximityIntersection>::beginIntersect(sofa::core::CollisionModel*, sofa::core::CollisionModel*, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/Intersection.inl:60; #3 0x7fc3002426aa in sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair(std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:73; #4 0x7fc2fea01259 in sofa::core::collision::NarrowPhaseDetection::addCollisionPairs(sofa::type::vector<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*>, sofa::type::CPUMemoryManager<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> > > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framewor",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:2550,Safety,Detect,DetectionOutputVector,2550,"type::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> > >(sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >*, sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/Intersection.h:48; #2 0x7fc3000eb263 in sofa::core::collision::MemberElementIntersector<sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::detection::intersection::MeshNewProximityIntersection>::beginIntersect(sofa::core::CollisionModel*, sofa::core::CollisionModel*, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/Intersection.inl:60; #3 0x7fc3002426aa in sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair(std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:73; #4 0x7fc2fea01259 in sofa::core::collision::NarrowPhaseDetection::addCollisionPairs(sofa::type::vector<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*>, sofa::type::CPUMemoryManager<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> > > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framewor",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:2723,Safety,detect,detection,2723,"rTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/Intersection.h:48; #2 0x7fc3000eb263 in sofa::core::collision::MemberElementIntersector<sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::detection::intersection::MeshNewProximityIntersection>::beginIntersect(sofa::core::CollisionModel*, sofa::core::CollisionModel*, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/Intersection.inl:60; #3 0x7fc3002426aa in sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair(std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:73; #4 0x7fc2fea01259 in sofa::core::collision::NarrowPhaseDetection::addCollisionPairs(sofa::type::vector<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*>, sofa::type::CPUMemoryManager<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> > > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/NarrowPhaseDetection.cpp:41; #5 0x7fc300261107 in sofa::component::collision::detection::algorithm::DefaultPipeline::doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CPUMemoryManager<sofa::core::CollisionModel*> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/DefaultPipeline.cpp:238; #6 0x7fc2ff1ec0e0 in sofa::simulation::PipelineImpl::computeC",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:2913,Safety,Detect,Detection,2913,"rTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/Intersection.h:48; #2 0x7fc3000eb263 in sofa::core::collision::MemberElementIntersector<sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::detection::intersection::MeshNewProximityIntersection>::beginIntersect(sofa::core::CollisionModel*, sofa::core::CollisionModel*, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/Intersection.inl:60; #3 0x7fc3002426aa in sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair(std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:73; #4 0x7fc2fea01259 in sofa::core::collision::NarrowPhaseDetection::addCollisionPairs(sofa::type::vector<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*>, sofa::type::CPUMemoryManager<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> > > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/NarrowPhaseDetection.cpp:41; #5 0x7fc300261107 in sofa::component::collision::detection::algorithm::DefaultPipeline::doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CPUMemoryManager<sofa::core::CollisionModel*> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/DefaultPipeline.cpp:238; #6 0x7fc2ff1ec0e0 in sofa::simulation::PipelineImpl::computeC",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:2962,Safety,detect,detection,2962,"rTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/Intersection.h:48; #2 0x7fc3000eb263 in sofa::core::collision::MemberElementIntersector<sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::detection::intersection::MeshNewProximityIntersection>::beginIntersect(sofa::core::CollisionModel*, sofa::core::CollisionModel*, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/Intersection.inl:60; #3 0x7fc3002426aa in sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair(std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:73; #4 0x7fc2fea01259 in sofa::core::collision::NarrowPhaseDetection::addCollisionPairs(sofa::type::vector<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*>, sofa::type::CPUMemoryManager<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> > > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/NarrowPhaseDetection.cpp:41; #5 0x7fc300261107 in sofa::component::collision::detection::algorithm::DefaultPipeline::doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CPUMemoryManager<sofa::core::CollisionModel*> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/DefaultPipeline.cpp:238; #6 0x7fc2ff1ec0e0 in sofa::simulation::PipelineImpl::computeC",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:3442,Safety,detect,detection,3442,") /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/Intersection.inl:60; #3 0x7fc3002426aa in sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair(std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:73; #4 0x7fc2fea01259 in sofa::core::collision::NarrowPhaseDetection::addCollisionPairs(sofa::type::vector<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*>, sofa::type::CPUMemoryManager<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> > > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/NarrowPhaseDetection.cpp:41; #5 0x7fc300261107 in sofa::component::collision::detection::algorithm::DefaultPipeline::doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CPUMemoryManager<sofa::core::CollisionModel*> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/DefaultPipeline.cpp:238; #6 0x7fc2ff1ec0e0 in sofa::simulation::PipelineImpl::computeCollisionDetection() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/PipelineImpl.cpp:117; #7 0x7fc2ff12923f in sofa::simulation::CollisionVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/CollisionVisitor.cpp:78; #8 0x7fc2ff129ac6 in void sofa::simulation::Visitor::runVisitorTask<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), sofa::core::collision::Pipeline*, st",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:3677,Safety,Detect,Detection,3677,") /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/Intersection.inl:60; #3 0x7fc3002426aa in sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair(std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:73; #4 0x7fc2fea01259 in sofa::core::collision::NarrowPhaseDetection::addCollisionPairs(sofa::type::vector<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*>, sofa::type::CPUMemoryManager<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> > > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/NarrowPhaseDetection.cpp:41; #5 0x7fc300261107 in sofa::component::collision::detection::algorithm::DefaultPipeline::doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CPUMemoryManager<sofa::core::CollisionModel*> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/DefaultPipeline.cpp:238; #6 0x7fc2ff1ec0e0 in sofa::simulation::PipelineImpl::computeCollisionDetection() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/PipelineImpl.cpp:117; #7 0x7fc2ff12923f in sofa::simulation::CollisionVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/CollisionVisitor.cpp:78; #8 0x7fc2ff129ac6 in void sofa::simulation::Visitor::runVisitorTask<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), sofa::core::collision::Pipeline*, st",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:3726,Safety,detect,detection,3726,") /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/Intersection.inl:60; #3 0x7fc3002426aa in sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair(std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:73; #4 0x7fc2fea01259 in sofa::core::collision::NarrowPhaseDetection::addCollisionPairs(sofa::type::vector<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*>, sofa::type::CPUMemoryManager<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> > > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/NarrowPhaseDetection.cpp:41; #5 0x7fc300261107 in sofa::component::collision::detection::algorithm::DefaultPipeline::doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CPUMemoryManager<sofa::core::CollisionModel*> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/DefaultPipeline.cpp:238; #6 0x7fc2ff1ec0e0 in sofa::simulation::PipelineImpl::computeCollisionDetection() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/PipelineImpl.cpp:117; #7 0x7fc2ff12923f in sofa::simulation::CollisionVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/CollisionVisitor.cpp:78; #8 0x7fc2ff129ac6 in void sofa::simulation::Visitor::runVisitorTask<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), sofa::core::collision::Pipeline*, st",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:9364,Safety,detect,detection,9364,"e/src/sofa/simulation/Node.h:191; #21 0x7fc2ff12aa43 in sofa::simulation::DefaultAnimationLoop::step(sofa::core::ExecParams const*, double) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/DefaultAnimationLoop.cpp:113; #22 0x7fc2ff205eb1 in sofa::simulation::Simulation::animate(sofa::simulation::Node*, double) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp:242; #23 0x5646e6e19751 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:166; #24 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000d6c54 in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::MeshDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:9439,Safety,detect,detection,9439,"e/src/sofa/simulation/Node.h:191; #21 0x7fc2ff12aa43 in sofa::simulation::DefaultAnimationLoop::step(sofa::core::ExecParams const*, double) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/DefaultAnimationLoop.cpp:113; #22 0x7fc2ff205eb1 in sofa::simulation::Simulation::animate(sofa::simulation::Node*, double) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp:242; #23 0x5646e6e19751 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:166; #24 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000d6c54 in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::MeshDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:9535,Safety,detect,detection,9535,"e/src/sofa/simulation/Node.h:191; #21 0x7fc2ff12aa43 in sofa::simulation::DefaultAnimationLoop::step(sofa::core::ExecParams const*, double) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/DefaultAnimationLoop.cpp:113; #22 0x7fc2ff205eb1 in sofa::simulation::Simulation::animate(sofa::simulation::Node*, double) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp:242; #23 0x5646e6e19751 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:166; #24 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000d6c54 in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::MeshDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:9777,Safety,detect,detection,9777,"/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp:242; #23 0x5646e6e19751 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:166; #24 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000d6c54 in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::MeshDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:9869,Safety,detect,detection,9869,"/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp:242; #23 0x5646e6e19751 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:166; #24 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000d6c54 in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::MeshDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:9990,Safety,Detect,Detection,9990,"ons/projects/sofaProjectExample/Main.cpp:166; #24 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000d6c54 in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::MeshDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detecti",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:10086,Safety,detect,detection,10086,"0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000d6c54 in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::MeshDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /ho",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:10215,Safety,Detect,Detection,10215,"0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000d6c54 in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::MeshDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /ho",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:10267,Safety,detect,detection,10267,"0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000d6c54 in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::MeshDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /ho",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:10368,Safety,detect,detection,10368,ion::MeshDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:10507,Safety,Detect,Detection,10507,ion::MeshDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:10559,Safety,detect,detection,10559,ion::MeshDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:10665,Safety,detect,detection,10665,"component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000eb62a in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::NewProximityIntersection, sofa::component::collision::detection::intersection::MeshNewProximityIntersection>::addIntersectors(sofa::component::collision::d",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:10802,Safety,Detect,Detection,10802,"component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000eb62a in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::NewProximityIntersection, sofa::component::collision::detection::intersection::MeshNewProximityIntersection>::addIntersectors(sofa::component::collision::d",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:10854,Safety,detect,detection,10854,"component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000eb62a in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::NewProximityIntersection, sofa::component::collision::detection::intersection::MeshNewProximityIntersection>::addIntersectors(sofa::component::collision::d",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:10988,Safety,detect,detection,10988,".22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000eb62a in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::NewProximityIntersection, sofa::component::collision::detection::intersection::MeshNewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000f3c9c in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::interse",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:11575,Safety,detect,detection,11575,":NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000eb62a in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::NewProximityIntersection, sofa::component::collision::detection::intersection::MeshNewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000f3c9c in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::NewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:71; #3 0x7fc3000f3696 in sofa::component::collision::detection::intersection::NewProximityIntersection::init() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:63; #4 0x7fc2ff13bd72 in sofa::simulation::InitVisitor::processNodeTopDown(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:11654,Safety,detect,detection,11654,":NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000eb62a in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::NewProximityIntersection, sofa::component::collision::detection::intersection::MeshNewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000f3c9c in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::NewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:71; #3 0x7fc3000f3696 in sofa::component::collision::detection::intersection::NewProximityIntersection::init() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:63; #4 0x7fc2ff13bd72 in sofa::simulation::InitVisitor::processNodeTopDown(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:11754,Safety,detect,detection,11754,":NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000eb62a in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::NewProximityIntersection, sofa::component::collision::detection::intersection::MeshNewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000f3c9c in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::NewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:71; #3 0x7fc3000f3696 in sofa::component::collision::detection::intersection::NewProximityIntersection::init() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:63; #4 0x7fc2ff13bd72 in sofa::simulation::InitVisitor::processNodeTopDown(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:12000,Safety,detect,detection,12000,"ofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000eb62a in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::NewProximityIntersection, sofa::component::collision::detection::intersection::MeshNewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000f3c9c in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::NewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:71; #3 0x7fc3000f3696 in sofa::component::collision::detection::intersection::NewProximityIntersection::init() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:63; #4 0x7fc2ff13bd72 in sofa::simulation::InitVisitor::processNodeTopDown(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/InitVisitor.cpp:47; #5 0x7fc300356978 in sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:12096,Safety,detect,detection,12096,"ofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000eb62a in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::NewProximityIntersection, sofa::component::collision::detection::intersection::MeshNewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000f3c9c in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::NewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:71; #3 0x7fc3000f3696 in sofa::component::collision::detection::intersection::NewProximityIntersection::init() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:63; #4 0x7fc2ff13bd72 in sofa::simulation::InitVisitor::processNodeTopDown(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/InitVisitor.cpp:47; #5 0x7fc300356978 in sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:12300,Safety,detect,detection,12300,"x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000eb62a in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::NewProximityIntersection, sofa::component::collision::detection::intersection::MeshNewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000f3c9c in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::NewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:71; #3 0x7fc3000f3696 in sofa::component::collision::detection::intersection::NewProximityIntersection::init() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:63; #4 0x7fc2ff13bd72 in sofa::simulation::InitVisitor::processNodeTopDown(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/InitVisitor.cpp:47; #5 0x7fc300356978 in sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Graph/src/sofa/simulation/graph/DAGNode.cpp:685; #6 0x7fc300356054 in sofa::simulation::g",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:12417,Safety,Detect,Detection,12417,"x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000eb62a in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::NewProximityIntersection, sofa::component::collision::detection::intersection::MeshNewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000f3c9c in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::NewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:71; #3 0x7fc3000f3696 in sofa::component::collision::detection::intersection::NewProximityIntersection::init() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:63; #4 0x7fc2ff13bd72 in sofa::simulation::InitVisitor::processNodeTopDown(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/InitVisitor.cpp:47; #5 0x7fc300356978 in sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Graph/src/sofa/simulation/graph/DAGNode.cpp:685; #6 0x7fc300356054 in sofa::simulation::g",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:12469,Safety,detect,detection,12469,"x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000eb62a in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::NewProximityIntersection, sofa::component::collision::detection::intersection::MeshNewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000f3c9c in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::NewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:71; #3 0x7fc3000f3696 in sofa::component::collision::detection::intersection::NewProximityIntersection::init() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:63; #4 0x7fc2ff13bd72 in sofa::simulation::InitVisitor::processNodeTopDown(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/InitVisitor.cpp:47; #5 0x7fc300356978 in sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Graph/src/sofa/simulation/graph/DAGNode.cpp:685; #6 0x7fc300356054 in sofa::simulation::g",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:14812,Safety,detect,detection,14812,"fa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Node.h:206; #9 0x7fc2ff205b75 in sofa::simulation::Simulation::initNode(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp:213; #10 0x7fc2ff205847 in sofa::simulation::Simulation::init(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp:189; #11 0x5646e6e194e0 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:143; #12 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000fca4c in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::NewProximityIntersection, sofa::component::collision::detection::intersection::RayNewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000f3c9c in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::NewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:71; #3 0x7fc3000f3696 in sofa::component::collision::detection::intersection::NewProximityIntersection::init() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:63; #4 0x7fc2ff13bd72 in sofa::simulation::InitVisitor::processNodeTopDown(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:14891,Safety,detect,detection,14891,"fa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Node.h:206; #9 0x7fc2ff205b75 in sofa::simulation::Simulation::initNode(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp:213; #10 0x7fc2ff205847 in sofa::simulation::Simulation::init(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp:189; #11 0x5646e6e194e0 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:143; #12 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000fca4c in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::NewProximityIntersection, sofa::component::collision::detection::intersection::RayNewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000f3c9c in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::NewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:71; #3 0x7fc3000f3696 in sofa::component::collision::detection::intersection::NewProximityIntersection::init() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:63; #4 0x7fc2ff13bd72 in sofa::simulation::InitVisitor::processNodeTopDown(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:14990,Safety,detect,detection,14990,"fa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Node.h:206; #9 0x7fc2ff205b75 in sofa::simulation::Simulation::initNode(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp:213; #10 0x7fc2ff205847 in sofa::simulation::Simulation::init(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp:189; #11 0x5646e6e194e0 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:143; #12 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000fca4c in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::NewProximityIntersection, sofa::component::collision::detection::intersection::RayNewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000f3c9c in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::NewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:71; #3 0x7fc3000f3696 in sofa::component::collision::detection::intersection::NewProximityIntersection::init() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:63; #4 0x7fc2ff13bd72 in sofa::simulation::InitVisitor::processNodeTopDown(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:15236,Safety,detect,detection,15236,"mework/Simulation/Core/src/sofa/simulation/Simulation.cpp:189; #11 0x5646e6e194e0 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:143; #12 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000fca4c in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::NewProximityIntersection, sofa::component::collision::detection::intersection::RayNewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000f3c9c in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::NewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:71; #3 0x7fc3000f3696 in sofa::component::collision::detection::intersection::NewProximityIntersection::init() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:63; #4 0x7fc2ff13bd72 in sofa::simulation::InitVisitor::processNodeTopDown(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/InitVisitor.cpp:47; #5 0x7fc300356978 in sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:15332,Safety,detect,detection,15332,"mework/Simulation/Core/src/sofa/simulation/Simulation.cpp:189; #11 0x5646e6e194e0 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:143; #12 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000fca4c in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::NewProximityIntersection, sofa::component::collision::detection::intersection::RayNewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000f3c9c in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::NewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:71; #3 0x7fc3000f3696 in sofa::component::collision::detection::intersection::NewProximityIntersection::init() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:63; #4 0x7fc2ff13bd72 in sofa::simulation::InitVisitor::processNodeTopDown(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/InitVisitor.cpp:47; #5 0x7fc300356978 in sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:15536,Safety,detect,detection,15536,"0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000fca4c in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::NewProximityIntersection, sofa::component::collision::detection::intersection::RayNewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000f3c9c in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::NewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:71; #3 0x7fc3000f3696 in sofa::component::collision::detection::intersection::NewProximityIntersection::init() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:63; #4 0x7fc2ff13bd72 in sofa::simulation::InitVisitor::processNodeTopDown(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/InitVisitor.cpp:47; #5 0x7fc300356978 in sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Graph/src/sofa/simulation/graph/DAGNode.cpp:685; #6 0x7fc300356054 in sofa::simulation::g",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:15653,Safety,Detect,Detection,15653,"0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000fca4c in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::NewProximityIntersection, sofa::component::collision::detection::intersection::RayNewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000f3c9c in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::NewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:71; #3 0x7fc3000f3696 in sofa::component::collision::detection::intersection::NewProximityIntersection::init() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:63; #4 0x7fc2ff13bd72 in sofa::simulation::InitVisitor::processNodeTopDown(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/InitVisitor.cpp:47; #5 0x7fc300356978 in sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Graph/src/sofa/simulation/graph/DAGNode.cpp:685; #6 0x7fc300356054 in sofa::simulation::g",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:15705,Safety,detect,detection,15705,"0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000fca4c in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::NewProximityIntersection, sofa::component::collision::detection::intersection::RayNewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000f3c9c in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::NewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:71; #3 0x7fc3000f3696 in sofa::component::collision::detection::intersection::NewProximityIntersection::init() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:63; #4 0x7fc2ff13bd72 in sofa::simulation::InitVisitor::processNodeTopDown(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/InitVisitor.cpp:47; #5 0x7fc300356978 in sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Graph/src/sofa/simulation/graph/DAGNode.cpp:685; #6 0x7fc300356054 in sofa::simulation::g",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:18048,Safety,detect,detection,18048,"ofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Node.h:206; #9 0x7fc2ff205b75 in sofa::simulation::Simulation::initNode(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp:213; #10 0x7fc2ff205847 in sofa::simulation::Simulation::init(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp:189; #11 0x5646e6e194e0 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:143; #12 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000f9b12 in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::RayDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:18123,Safety,detect,detection,18123,"ofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Node.h:206; #9 0x7fc2ff205b75 in sofa::simulation::Simulation::initNode(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp:213; #10 0x7fc2ff205847 in sofa::simulation::Simulation::init(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp:189; #11 0x5646e6e194e0 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:143; #12 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000f9b12 in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::RayDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:18218,Safety,detect,detection,18218,"ofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Node.h:206; #9 0x7fc2ff205b75 in sofa::simulation::Simulation::initNode(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp:213; #10 0x7fc2ff205847 in sofa::simulation::Simulation::init(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp:189; #11 0x5646e6e194e0 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:143; #12 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000f9b12 in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::RayDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:18460,Safety,detect,detection,18460,"e/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp:189; #11 0x5646e6e194e0 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:143; #12 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000f9b12 in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::RayDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:18552,Safety,detect,detection,18552,"e/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp:189; #11 0x5646e6e194e0 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:143; #12 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000f9b12 in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::RayDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:18673,Safety,Detect,Detection,18673,"ions/projects/sofaProjectExample/Main.cpp:143; #12 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000f9b12 in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::RayDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detecti",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:18769,Safety,detect,detection,18769,"#0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000f9b12 in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::RayDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /ho",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:18898,Safety,Detect,Detection,18898,"#0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000f9b12 in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::RayDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /ho",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:18950,Safety,detect,detection,18950,"#0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000f9b12 in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::RayDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /ho",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:19051,Safety,detect,detection,19051,tion::RayDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:19190,Safety,Detect,Detection,19190,tion::RayDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:19242,Safety,detect,detection,19242,tion::RayDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:19348,Safety,detect,detection,19348,"component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000ff16e in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection>::addIntersectors(sofa::component::collision::de",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:19485,Safety,Detect,Detection,19485,"component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000ff16e in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection>::addIntersectors(sofa::component::collision::de",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:19537,Safety,detect,detection,19537,"component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000ff16e in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection>::addIntersectors(sofa::component::collision::de",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:19671,Safety,detect,detection,19671,".22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000ff16e in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:20258,Safety,detect,detection,20258,"n::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000ff16e in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/s",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:20333,Safety,detect,detection,20333,"n::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000ff16e in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/s",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:20436,Safety,detect,detection,20436,"n::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000ff16e in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/s",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:20678,Safety,detect,detection,20678,"<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000ff16e in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:20770,Safety,detect,detection,20770,"<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000ff16e in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:20891,Safety,Detect,Detection,20891,"rojects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000ff16e in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detecti",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:20987,Safety,detect,detection,20987,"3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000ff16e in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /ho",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:21116,Safety,Detect,Detection,21116,"3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000ff16e in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /ho",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:21168,Safety,detect,detection,21168,"3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000ff16e in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /ho",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:21269,Safety,detect,detection,21269,trahedronDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Indirect leak of 9830400 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:21408,Safety,Detect,Detection,21408,trahedronDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Indirect leak of 9830400 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:21460,Safety,detect,detection,21460,trahedronDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Indirect leak of 9830400 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:21566,Safety,detect,detection,21566,"component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Indirect leak of 9830400 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc300297559 in __gnu_cxx::new_allocator<sofa::core::collision::DetectionOutput>::allocate(unsigned long, void const*) /usr/include/c++/9/ext/new_allocator.h:114; #2 0x7fc3002972fe in std::allocator_traits<std::allocator<sofa::core::collision::DetectionOutput>",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:21703,Safety,Detect,Detection,21703,"component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Indirect leak of 9830400 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc300297559 in __gnu_cxx::new_allocator<sofa::core::collision::DetectionOutput>::allocate(unsigned long, void const*) /usr/include/c++/9/ext/new_allocator.h:114; #2 0x7fc3002972fe in std::allocator_traits<std::allocator<sofa::core::collision::DetectionOutput>",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:21755,Safety,detect,detection,21755,"component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Indirect leak of 9830400 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc300297559 in __gnu_cxx::new_allocator<sofa::core::collision::DetectionOutput>::allocate(unsigned long, void const*) /usr/include/c++/9/ext/new_allocator.h:114; #2 0x7fc3002972fe in std::allocator_traits<std::allocator<sofa::core::collision::DetectionOutput>",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:21889,Safety,detect,detection,21889,".22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Indirect leak of 9830400 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc300297559 in __gnu_cxx::new_allocator<sofa::core::collision::DetectionOutput>::allocate(unsigned long, void const*) /usr/include/c++/9/ext/new_allocator.h:114; #2 0x7fc3002972fe in std::allocator_traits<std::allocator<sofa::core::collision::DetectionOutput> >::allocate(std::allocator<sofa::core::collision::DetectionOutput>&, unsigned long) /usr/include/c++/9/bits/alloc_traits.h:443; #3 0x7fc300296f03 in std::_Vector_base<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:22460,Safety,Detect,DetectionOutput,22460,"on/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Indirect leak of 9830400 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc300297559 in __gnu_cxx::new_allocator<sofa::core::collision::DetectionOutput>::allocate(unsigned long, void const*) /usr/include/c++/9/ext/new_allocator.h:114; #2 0x7fc3002972fe in std::allocator_traits<std::allocator<sofa::core::collision::DetectionOutput> >::allocate(std::allocator<sofa::core::collision::DetectionOutput>&, unsigned long) /usr/include/c++/9/bits/alloc_traits.h:443; #3 0x7fc300296f03 in std::_Vector_base<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_allocate(unsigned long) /usr/include/c++/9/bits/stl_vector.h:343; #4 0x7fc3000e7ed8 in void std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_realloc_insert<sofa::core::collision::DetectionOutput>(__gnu_cxx::__normal_iterator<sofa::core::collision::DetectionOutput*, std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> > >, sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:440; #5 0x7fc3000e79be i",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:22640,Safety,Detect,DetectionOutput,22640,"ofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Indirect leak of 9830400 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc300297559 in __gnu_cxx::new_allocator<sofa::core::collision::DetectionOutput>::allocate(unsigned long, void const*) /usr/include/c++/9/ext/new_allocator.h:114; #2 0x7fc3002972fe in std::allocator_traits<std::allocator<sofa::core::collision::DetectionOutput> >::allocate(std::allocator<sofa::core::collision::DetectionOutput>&, unsigned long) /usr/include/c++/9/bits/alloc_traits.h:443; #3 0x7fc300296f03 in std::_Vector_base<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_allocate(unsigned long) /usr/include/c++/9/bits/stl_vector.h:343; #4 0x7fc3000e7ed8 in void std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_realloc_insert<sofa::core::collision::DetectionOutput>(__gnu_cxx::__normal_iterator<sofa::core::collision::DetectionOutput*, std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> > >, sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:440; #5 0x7fc3000e79be in sofa::core::collision::DetectionOutput& std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::emplace_back<sofa::core::collision::Detection",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:22707,Safety,Detect,DetectionOutput,22707,"ofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Indirect leak of 9830400 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc300297559 in __gnu_cxx::new_allocator<sofa::core::collision::DetectionOutput>::allocate(unsigned long, void const*) /usr/include/c++/9/ext/new_allocator.h:114; #2 0x7fc3002972fe in std::allocator_traits<std::allocator<sofa::core::collision::DetectionOutput> >::allocate(std::allocator<sofa::core::collision::DetectionOutput>&, unsigned long) /usr/include/c++/9/bits/alloc_traits.h:443; #3 0x7fc300296f03 in std::_Vector_base<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_allocate(unsigned long) /usr/include/c++/9/bits/stl_vector.h:343; #4 0x7fc3000e7ed8 in void std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_realloc_insert<sofa::core::collision::DetectionOutput>(__gnu_cxx::__normal_iterator<sofa::core::collision::DetectionOutput*, std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> > >, sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:440; #5 0x7fc3000e79be in sofa::core::collision::DetectionOutput& std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::emplace_back<sofa::core::collision::Detection",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:22847,Safety,Detect,DetectionOutput,22847,"lision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Indirect leak of 9830400 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc300297559 in __gnu_cxx::new_allocator<sofa::core::collision::DetectionOutput>::allocate(unsigned long, void const*) /usr/include/c++/9/ext/new_allocator.h:114; #2 0x7fc3002972fe in std::allocator_traits<std::allocator<sofa::core::collision::DetectionOutput> >::allocate(std::allocator<sofa::core::collision::DetectionOutput>&, unsigned long) /usr/include/c++/9/bits/alloc_traits.h:443; #3 0x7fc300296f03 in std::_Vector_base<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_allocate(unsigned long) /usr/include/c++/9/bits/stl_vector.h:343; #4 0x7fc3000e7ed8 in void std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_realloc_insert<sofa::core::collision::DetectionOutput>(__gnu_cxx::__normal_iterator<sofa::core::collision::DetectionOutput*, std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> > >, sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:440; #5 0x7fc3000e79be in sofa::core::collision::DetectionOutput& std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::emplace_back<sofa::core::collision::DetectionOutput>(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:121; #6 0x7fc3000e72a9 in std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:22902,Safety,Detect,DetectionOutput,22902,"lision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Indirect leak of 9830400 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc300297559 in __gnu_cxx::new_allocator<sofa::core::collision::DetectionOutput>::allocate(unsigned long, void const*) /usr/include/c++/9/ext/new_allocator.h:114; #2 0x7fc3002972fe in std::allocator_traits<std::allocator<sofa::core::collision::DetectionOutput> >::allocate(std::allocator<sofa::core::collision::DetectionOutput>&, unsigned long) /usr/include/c++/9/bits/alloc_traits.h:443; #3 0x7fc300296f03 in std::_Vector_base<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_allocate(unsigned long) /usr/include/c++/9/bits/stl_vector.h:343; #4 0x7fc3000e7ed8 in void std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_realloc_insert<sofa::core::collision::DetectionOutput>(__gnu_cxx::__normal_iterator<sofa::core::collision::DetectionOutput*, std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> > >, sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:440; #5 0x7fc3000e79be in sofa::core::collision::DetectionOutput& std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::emplace_back<sofa::core::collision::DetectionOutput>(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:121; #6 0x7fc3000e72a9 in std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:23052,Safety,Detect,DetectionOutput,23052,":308. Indirect leak of 9830400 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc300297559 in __gnu_cxx::new_allocator<sofa::core::collision::DetectionOutput>::allocate(unsigned long, void const*) /usr/include/c++/9/ext/new_allocator.h:114; #2 0x7fc3002972fe in std::allocator_traits<std::allocator<sofa::core::collision::DetectionOutput> >::allocate(std::allocator<sofa::core::collision::DetectionOutput>&, unsigned long) /usr/include/c++/9/bits/alloc_traits.h:443; #3 0x7fc300296f03 in std::_Vector_base<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_allocate(unsigned long) /usr/include/c++/9/bits/stl_vector.h:343; #4 0x7fc3000e7ed8 in void std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_realloc_insert<sofa::core::collision::DetectionOutput>(__gnu_cxx::__normal_iterator<sofa::core::collision::DetectionOutput*, std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> > >, sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:440; #5 0x7fc3000e79be in sofa::core::collision::DetectionOutput& std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::emplace_back<sofa::core::collision::DetectionOutput>(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:121; #6 0x7fc3000e72a9 in std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::push_back(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/stl_vector.h:1201; #7 0x7fc3000e5abb in sofa::component::collision::detection::intersection::NewProximityIntersection::doIntersectionPointPoint(double, sofa::type::Vec<3u, double> const&, sofa::type::Vec<3u, double> const&, sofa::type::vector<sofa::c",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:23107,Safety,Detect,DetectionOutput,23107,":308. Indirect leak of 9830400 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc300297559 in __gnu_cxx::new_allocator<sofa::core::collision::DetectionOutput>::allocate(unsigned long, void const*) /usr/include/c++/9/ext/new_allocator.h:114; #2 0x7fc3002972fe in std::allocator_traits<std::allocator<sofa::core::collision::DetectionOutput> >::allocate(std::allocator<sofa::core::collision::DetectionOutput>&, unsigned long) /usr/include/c++/9/bits/alloc_traits.h:443; #3 0x7fc300296f03 in std::_Vector_base<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_allocate(unsigned long) /usr/include/c++/9/bits/stl_vector.h:343; #4 0x7fc3000e7ed8 in void std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_realloc_insert<sofa::core::collision::DetectionOutput>(__gnu_cxx::__normal_iterator<sofa::core::collision::DetectionOutput*, std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> > >, sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:440; #5 0x7fc3000e79be in sofa::core::collision::DetectionOutput& std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::emplace_back<sofa::core::collision::DetectionOutput>(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:121; #6 0x7fc3000e72a9 in std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::push_back(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/stl_vector.h:1201; #7 0x7fc3000e5abb in sofa::component::collision::detection::intersection::NewProximityIntersection::doIntersectionPointPoint(double, sofa::type::Vec<3u, double> const&, sofa::type::Vec<3u, double> const&, sofa::type::vector<sofa::c",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:23168,Safety,Detect,DetectionOutput,23168,":308. Indirect leak of 9830400 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc300297559 in __gnu_cxx::new_allocator<sofa::core::collision::DetectionOutput>::allocate(unsigned long, void const*) /usr/include/c++/9/ext/new_allocator.h:114; #2 0x7fc3002972fe in std::allocator_traits<std::allocator<sofa::core::collision::DetectionOutput> >::allocate(std::allocator<sofa::core::collision::DetectionOutput>&, unsigned long) /usr/include/c++/9/bits/alloc_traits.h:443; #3 0x7fc300296f03 in std::_Vector_base<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_allocate(unsigned long) /usr/include/c++/9/bits/stl_vector.h:343; #4 0x7fc3000e7ed8 in void std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_realloc_insert<sofa::core::collision::DetectionOutput>(__gnu_cxx::__normal_iterator<sofa::core::collision::DetectionOutput*, std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> > >, sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:440; #5 0x7fc3000e79be in sofa::core::collision::DetectionOutput& std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::emplace_back<sofa::core::collision::DetectionOutput>(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:121; #6 0x7fc3000e72a9 in std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::push_back(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/stl_vector.h:1201; #7 0x7fc3000e5abb in sofa::component::collision::detection::intersection::NewProximityIntersection::doIntersectionPointPoint(double, sofa::type::Vec<3u, double> const&, sofa::type::Vec<3u, double> const&, sofa::type::vector<sofa::c",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:23237,Safety,Detect,DetectionOutput,23237,":308. Indirect leak of 9830400 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc300297559 in __gnu_cxx::new_allocator<sofa::core::collision::DetectionOutput>::allocate(unsigned long, void const*) /usr/include/c++/9/ext/new_allocator.h:114; #2 0x7fc3002972fe in std::allocator_traits<std::allocator<sofa::core::collision::DetectionOutput> >::allocate(std::allocator<sofa::core::collision::DetectionOutput>&, unsigned long) /usr/include/c++/9/bits/alloc_traits.h:443; #3 0x7fc300296f03 in std::_Vector_base<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_allocate(unsigned long) /usr/include/c++/9/bits/stl_vector.h:343; #4 0x7fc3000e7ed8 in void std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_realloc_insert<sofa::core::collision::DetectionOutput>(__gnu_cxx::__normal_iterator<sofa::core::collision::DetectionOutput*, std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> > >, sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:440; #5 0x7fc3000e79be in sofa::core::collision::DetectionOutput& std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::emplace_back<sofa::core::collision::DetectionOutput>(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:121; #6 0x7fc3000e72a9 in std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::push_back(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/stl_vector.h:1201; #7 0x7fc3000e5abb in sofa::component::collision::detection::intersection::NewProximityIntersection::doIntersectionPointPoint(double, sofa::type::Vec<3u, double> const&, sofa::type::Vec<3u, double> const&, sofa::type::vector<sofa::c",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:23290,Safety,Detect,DetectionOutput,23290,":308. Indirect leak of 9830400 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc300297559 in __gnu_cxx::new_allocator<sofa::core::collision::DetectionOutput>::allocate(unsigned long, void const*) /usr/include/c++/9/ext/new_allocator.h:114; #2 0x7fc3002972fe in std::allocator_traits<std::allocator<sofa::core::collision::DetectionOutput> >::allocate(std::allocator<sofa::core::collision::DetectionOutput>&, unsigned long) /usr/include/c++/9/bits/alloc_traits.h:443; #3 0x7fc300296f03 in std::_Vector_base<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_allocate(unsigned long) /usr/include/c++/9/bits/stl_vector.h:343; #4 0x7fc3000e7ed8 in void std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_realloc_insert<sofa::core::collision::DetectionOutput>(__gnu_cxx::__normal_iterator<sofa::core::collision::DetectionOutput*, std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> > >, sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:440; #5 0x7fc3000e79be in sofa::core::collision::DetectionOutput& std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::emplace_back<sofa::core::collision::DetectionOutput>(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:121; #6 0x7fc3000e72a9 in std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::push_back(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/stl_vector.h:1201; #7 0x7fc3000e5abb in sofa::component::collision::detection::intersection::NewProximityIntersection::doIntersectionPointPoint(double, sofa::type::Vec<3u, double> const&, sofa::type::Vec<3u, double> const&, sofa::type::vector<sofa::c",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:23345,Safety,Detect,DetectionOutput,23345,":308. Indirect leak of 9830400 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc300297559 in __gnu_cxx::new_allocator<sofa::core::collision::DetectionOutput>::allocate(unsigned long, void const*) /usr/include/c++/9/ext/new_allocator.h:114; #2 0x7fc3002972fe in std::allocator_traits<std::allocator<sofa::core::collision::DetectionOutput> >::allocate(std::allocator<sofa::core::collision::DetectionOutput>&, unsigned long) /usr/include/c++/9/bits/alloc_traits.h:443; #3 0x7fc300296f03 in std::_Vector_base<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_allocate(unsigned long) /usr/include/c++/9/bits/stl_vector.h:343; #4 0x7fc3000e7ed8 in void std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_realloc_insert<sofa::core::collision::DetectionOutput>(__gnu_cxx::__normal_iterator<sofa::core::collision::DetectionOutput*, std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> > >, sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:440; #5 0x7fc3000e79be in sofa::core::collision::DetectionOutput& std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::emplace_back<sofa::core::collision::DetectionOutput>(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:121; #6 0x7fc3000e72a9 in std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::push_back(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/stl_vector.h:1201; #7 0x7fc3000e5abb in sofa::component::collision::detection::intersection::NewProximityIntersection::doIntersectionPointPoint(double, sofa::type::Vec<3u, double> const&, sofa::type::Vec<3u, double> const&, sofa::type::vector<sofa::c",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:23390,Safety,Detect,DetectionOutput,23390,":308. Indirect leak of 9830400 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc300297559 in __gnu_cxx::new_allocator<sofa::core::collision::DetectionOutput>::allocate(unsigned long, void const*) /usr/include/c++/9/ext/new_allocator.h:114; #2 0x7fc3002972fe in std::allocator_traits<std::allocator<sofa::core::collision::DetectionOutput> >::allocate(std::allocator<sofa::core::collision::DetectionOutput>&, unsigned long) /usr/include/c++/9/bits/alloc_traits.h:443; #3 0x7fc300296f03 in std::_Vector_base<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_allocate(unsigned long) /usr/include/c++/9/bits/stl_vector.h:343; #4 0x7fc3000e7ed8 in void std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_realloc_insert<sofa::core::collision::DetectionOutput>(__gnu_cxx::__normal_iterator<sofa::core::collision::DetectionOutput*, std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> > >, sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:440; #5 0x7fc3000e79be in sofa::core::collision::DetectionOutput& std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::emplace_back<sofa::core::collision::DetectionOutput>(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:121; #6 0x7fc3000e72a9 in std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::push_back(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/stl_vector.h:1201; #7 0x7fc3000e5abb in sofa::component::collision::detection::intersection::NewProximityIntersection::doIntersectionPointPoint(double, sofa::type::Vec<3u, double> const&, sofa::type::Vec<3u, double> const&, sofa::type::vector<sofa::c",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:23493,Safety,Detect,DetectionOutput,23493,"r_traits<std::allocator<sofa::core::collision::DetectionOutput> >::allocate(std::allocator<sofa::core::collision::DetectionOutput>&, unsigned long) /usr/include/c++/9/bits/alloc_traits.h:443; #3 0x7fc300296f03 in std::_Vector_base<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_allocate(unsigned long) /usr/include/c++/9/bits/stl_vector.h:343; #4 0x7fc3000e7ed8 in void std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_realloc_insert<sofa::core::collision::DetectionOutput>(__gnu_cxx::__normal_iterator<sofa::core::collision::DetectionOutput*, std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> > >, sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:440; #5 0x7fc3000e79be in sofa::core::collision::DetectionOutput& std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::emplace_back<sofa::core::collision::DetectionOutput>(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:121; #6 0x7fc3000e72a9 in std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::push_back(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/stl_vector.h:1201; #7 0x7fc3000e5abb in sofa::component::collision::detection::intersection::NewProximityIntersection::doIntersectionPointPoint(double, sofa::type::Vec<3u, double> const&, sofa::type::Vec<3u, double> const&, sofa::type::vector<sofa::core::collision::DetectionOutput, sofa::type::CPUMemoryManager<sofa::core::collision::DetectionOutput> >*, int) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.inl:51; #8 0x7fc3000e33f8 in sofa::component::collision::detection::intersection::MeshNewProximityIntersection:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:23545,Safety,Detect,DetectionOutput,23545,"r_traits<std::allocator<sofa::core::collision::DetectionOutput> >::allocate(std::allocator<sofa::core::collision::DetectionOutput>&, unsigned long) /usr/include/c++/9/bits/alloc_traits.h:443; #3 0x7fc300296f03 in std::_Vector_base<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_allocate(unsigned long) /usr/include/c++/9/bits/stl_vector.h:343; #4 0x7fc3000e7ed8 in void std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_realloc_insert<sofa::core::collision::DetectionOutput>(__gnu_cxx::__normal_iterator<sofa::core::collision::DetectionOutput*, std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> > >, sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:440; #5 0x7fc3000e79be in sofa::core::collision::DetectionOutput& std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::emplace_back<sofa::core::collision::DetectionOutput>(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:121; #6 0x7fc3000e72a9 in std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::push_back(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/stl_vector.h:1201; #7 0x7fc3000e5abb in sofa::component::collision::detection::intersection::NewProximityIntersection::doIntersectionPointPoint(double, sofa::type::Vec<3u, double> const&, sofa::type::Vec<3u, double> const&, sofa::type::vector<sofa::core::collision::DetectionOutput, sofa::type::CPUMemoryManager<sofa::core::collision::DetectionOutput> >*, int) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.inl:51; #8 0x7fc3000e33f8 in sofa::component::collision::detection::intersection::MeshNewProximityIntersection:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:23600,Safety,Detect,DetectionOutput,23600,"r_traits<std::allocator<sofa::core::collision::DetectionOutput> >::allocate(std::allocator<sofa::core::collision::DetectionOutput>&, unsigned long) /usr/include/c++/9/bits/alloc_traits.h:443; #3 0x7fc300296f03 in std::_Vector_base<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_allocate(unsigned long) /usr/include/c++/9/bits/stl_vector.h:343; #4 0x7fc3000e7ed8 in void std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_realloc_insert<sofa::core::collision::DetectionOutput>(__gnu_cxx::__normal_iterator<sofa::core::collision::DetectionOutput*, std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> > >, sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:440; #5 0x7fc3000e79be in sofa::core::collision::DetectionOutput& std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::emplace_back<sofa::core::collision::DetectionOutput>(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:121; #6 0x7fc3000e72a9 in std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::push_back(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/stl_vector.h:1201; #7 0x7fc3000e5abb in sofa::component::collision::detection::intersection::NewProximityIntersection::doIntersectionPointPoint(double, sofa::type::Vec<3u, double> const&, sofa::type::Vec<3u, double> const&, sofa::type::vector<sofa::core::collision::DetectionOutput, sofa::type::CPUMemoryManager<sofa::core::collision::DetectionOutput> >*, int) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.inl:51; #8 0x7fc3000e33f8 in sofa::component::collision::detection::intersection::MeshNewProximityIntersection:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:23656,Safety,Detect,DetectionOutput,23656,"r_traits<std::allocator<sofa::core::collision::DetectionOutput> >::allocate(std::allocator<sofa::core::collision::DetectionOutput>&, unsigned long) /usr/include/c++/9/bits/alloc_traits.h:443; #3 0x7fc300296f03 in std::_Vector_base<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_allocate(unsigned long) /usr/include/c++/9/bits/stl_vector.h:343; #4 0x7fc3000e7ed8 in void std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_realloc_insert<sofa::core::collision::DetectionOutput>(__gnu_cxx::__normal_iterator<sofa::core::collision::DetectionOutput*, std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> > >, sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:440; #5 0x7fc3000e79be in sofa::core::collision::DetectionOutput& std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::emplace_back<sofa::core::collision::DetectionOutput>(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:121; #6 0x7fc3000e72a9 in std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::push_back(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/stl_vector.h:1201; #7 0x7fc3000e5abb in sofa::component::collision::detection::intersection::NewProximityIntersection::doIntersectionPointPoint(double, sofa::type::Vec<3u, double> const&, sofa::type::Vec<3u, double> const&, sofa::type::vector<sofa::core::collision::DetectionOutput, sofa::type::CPUMemoryManager<sofa::core::collision::DetectionOutput> >*, int) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.inl:51; #8 0x7fc3000e33f8 in sofa::component::collision::detection::intersection::MeshNewProximityIntersection:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:23696,Safety,Detect,DetectionOutput,23696,"r_traits<std::allocator<sofa::core::collision::DetectionOutput> >::allocate(std::allocator<sofa::core::collision::DetectionOutput>&, unsigned long) /usr/include/c++/9/bits/alloc_traits.h:443; #3 0x7fc300296f03 in std::_Vector_base<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_allocate(unsigned long) /usr/include/c++/9/bits/stl_vector.h:343; #4 0x7fc3000e7ed8 in void std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_realloc_insert<sofa::core::collision::DetectionOutput>(__gnu_cxx::__normal_iterator<sofa::core::collision::DetectionOutput*, std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> > >, sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:440; #5 0x7fc3000e79be in sofa::core::collision::DetectionOutput& std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::emplace_back<sofa::core::collision::DetectionOutput>(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:121; #6 0x7fc3000e72a9 in std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::push_back(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/stl_vector.h:1201; #7 0x7fc3000e5abb in sofa::component::collision::detection::intersection::NewProximityIntersection::doIntersectionPointPoint(double, sofa::type::Vec<3u, double> const&, sofa::type::Vec<3u, double> const&, sofa::type::vector<sofa::core::collision::DetectionOutput, sofa::type::CPUMemoryManager<sofa::core::collision::DetectionOutput> >*, int) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.inl:51; #8 0x7fc3000e33f8 in sofa::component::collision::detection::intersection::MeshNewProximityIntersection:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:23811,Safety,Detect,DetectionOutput,23811,"put, std::allocator<sofa::core::collision::DetectionOutput> >::_M_allocate(unsigned long) /usr/include/c++/9/bits/stl_vector.h:343; #4 0x7fc3000e7ed8 in void std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_realloc_insert<sofa::core::collision::DetectionOutput>(__gnu_cxx::__normal_iterator<sofa::core::collision::DetectionOutput*, std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> > >, sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:440; #5 0x7fc3000e79be in sofa::core::collision::DetectionOutput& std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::emplace_back<sofa::core::collision::DetectionOutput>(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:121; #6 0x7fc3000e72a9 in std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::push_back(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/stl_vector.h:1201; #7 0x7fc3000e5abb in sofa::component::collision::detection::intersection::NewProximityIntersection::doIntersectionPointPoint(double, sofa::type::Vec<3u, double> const&, sofa::type::Vec<3u, double> const&, sofa::type::vector<sofa::core::collision::DetectionOutput, sofa::type::CPUMemoryManager<sofa::core::collision::DetectionOutput> >*, int) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.inl:51; #8 0x7fc3000e33f8 in sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection(sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >&, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:23866,Safety,Detect,DetectionOutput,23866,"put, std::allocator<sofa::core::collision::DetectionOutput> >::_M_allocate(unsigned long) /usr/include/c++/9/bits/stl_vector.h:343; #4 0x7fc3000e7ed8 in void std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_realloc_insert<sofa::core::collision::DetectionOutput>(__gnu_cxx::__normal_iterator<sofa::core::collision::DetectionOutput*, std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> > >, sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:440; #5 0x7fc3000e79be in sofa::core::collision::DetectionOutput& std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::emplace_back<sofa::core::collision::DetectionOutput>(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:121; #6 0x7fc3000e72a9 in std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::push_back(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/stl_vector.h:1201; #7 0x7fc3000e5abb in sofa::component::collision::detection::intersection::NewProximityIntersection::doIntersectionPointPoint(double, sofa::type::Vec<3u, double> const&, sofa::type::Vec<3u, double> const&, sofa::type::vector<sofa::core::collision::DetectionOutput, sofa::type::CPUMemoryManager<sofa::core::collision::DetectionOutput> >*, int) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.inl:51; #8 0x7fc3000e33f8 in sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection(sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >&, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:23919,Safety,Detect,DetectionOutput,23919,"put, std::allocator<sofa::core::collision::DetectionOutput> >::_M_allocate(unsigned long) /usr/include/c++/9/bits/stl_vector.h:343; #4 0x7fc3000e7ed8 in void std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_realloc_insert<sofa::core::collision::DetectionOutput>(__gnu_cxx::__normal_iterator<sofa::core::collision::DetectionOutput*, std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> > >, sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:440; #5 0x7fc3000e79be in sofa::core::collision::DetectionOutput& std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::emplace_back<sofa::core::collision::DetectionOutput>(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:121; #6 0x7fc3000e72a9 in std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::push_back(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/stl_vector.h:1201; #7 0x7fc3000e5abb in sofa::component::collision::detection::intersection::NewProximityIntersection::doIntersectionPointPoint(double, sofa::type::Vec<3u, double> const&, sofa::type::Vec<3u, double> const&, sofa::type::vector<sofa::core::collision::DetectionOutput, sofa::type::CPUMemoryManager<sofa::core::collision::DetectionOutput> >*, int) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.inl:51; #8 0x7fc3000e33f8 in sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection(sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >&, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:24030,Safety,detect,detection,24030,"ollision::DetectionOutput*, std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> > >, sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:440; #5 0x7fc3000e79be in sofa::core::collision::DetectionOutput& std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::emplace_back<sofa::core::collision::DetectionOutput>(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:121; #6 0x7fc3000e72a9 in std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::push_back(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/stl_vector.h:1201; #7 0x7fc3000e5abb in sofa::component::collision::detection::intersection::NewProximityIntersection::doIntersectionPointPoint(double, sofa::type::Vec<3u, double> const&, sofa::type::Vec<3u, double> const&, sofa::type::vector<sofa::core::collision::DetectionOutput, sofa::type::CPUMemoryManager<sofa::core::collision::DetectionOutput> >*, int) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.inl:51; #8 0x7fc3000e33f8 in sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection(sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >&, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >&, sofa::type::vector<sofa::core::collision::DetectionOutput, sofa::type::CPUMemoryManager<sofa::core::collision::DetectionOutput> >*) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/MeshNewProximityIntersection.cpp:105; #9 0x7fc3000",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:24228,Safety,Detect,DetectionOutput,24228,"ollision::DetectionOutput*, std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> > >, sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:440; #5 0x7fc3000e79be in sofa::core::collision::DetectionOutput& std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::emplace_back<sofa::core::collision::DetectionOutput>(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:121; #6 0x7fc3000e72a9 in std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::push_back(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/stl_vector.h:1201; #7 0x7fc3000e5abb in sofa::component::collision::detection::intersection::NewProximityIntersection::doIntersectionPointPoint(double, sofa::type::Vec<3u, double> const&, sofa::type::Vec<3u, double> const&, sofa::type::vector<sofa::core::collision::DetectionOutput, sofa::type::CPUMemoryManager<sofa::core::collision::DetectionOutput> >*, int) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.inl:51; #8 0x7fc3000e33f8 in sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection(sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >&, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >&, sofa::type::vector<sofa::core::collision::DetectionOutput, sofa::type::CPUMemoryManager<sofa::core::collision::DetectionOutput> >*) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/MeshNewProximityIntersection.cpp:105; #9 0x7fc3000",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:24297,Safety,Detect,DetectionOutput,24297,"ollision::DetectionOutput*, std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> > >, sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:440; #5 0x7fc3000e79be in sofa::core::collision::DetectionOutput& std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::emplace_back<sofa::core::collision::DetectionOutput>(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:121; #6 0x7fc3000e72a9 in std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::push_back(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/stl_vector.h:1201; #7 0x7fc3000e5abb in sofa::component::collision::detection::intersection::NewProximityIntersection::doIntersectionPointPoint(double, sofa::type::Vec<3u, double> const&, sofa::type::Vec<3u, double> const&, sofa::type::vector<sofa::core::collision::DetectionOutput, sofa::type::CPUMemoryManager<sofa::core::collision::DetectionOutput> >*, int) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.inl:51; #8 0x7fc3000e33f8 in sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection(sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >&, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >&, sofa::type::vector<sofa::core::collision::DetectionOutput, sofa::type::CPUMemoryManager<sofa::core::collision::DetectionOutput> >*) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/MeshNewProximityIntersection.cpp:105; #9 0x7fc3000",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:24382,Safety,Detect,Detection,24382,"ollision::DetectionOutput*, std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> > >, sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:440; #5 0x7fc3000e79be in sofa::core::collision::DetectionOutput& std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::emplace_back<sofa::core::collision::DetectionOutput>(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:121; #6 0x7fc3000e72a9 in std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::push_back(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/stl_vector.h:1201; #7 0x7fc3000e5abb in sofa::component::collision::detection::intersection::NewProximityIntersection::doIntersectionPointPoint(double, sofa::type::Vec<3u, double> const&, sofa::type::Vec<3u, double> const&, sofa::type::vector<sofa::core::collision::DetectionOutput, sofa::type::CPUMemoryManager<sofa::core::collision::DetectionOutput> >*, int) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.inl:51; #8 0x7fc3000e33f8 in sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection(sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >&, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >&, sofa::type::vector<sofa::core::collision::DetectionOutput, sofa::type::CPUMemoryManager<sofa::core::collision::DetectionOutput> >*) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/MeshNewProximityIntersection.cpp:105; #9 0x7fc3000",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:24434,Safety,detect,detection,24434,"ollision::DetectionOutput*, std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> > >, sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:440; #5 0x7fc3000e79be in sofa::core::collision::DetectionOutput& std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::emplace_back<sofa::core::collision::DetectionOutput>(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:121; #6 0x7fc3000e72a9 in std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::push_back(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/stl_vector.h:1201; #7 0x7fc3000e5abb in sofa::component::collision::detection::intersection::NewProximityIntersection::doIntersectionPointPoint(double, sofa::type::Vec<3u, double> const&, sofa::type::Vec<3u, double> const&, sofa::type::vector<sofa::core::collision::DetectionOutput, sofa::type::CPUMemoryManager<sofa::core::collision::DetectionOutput> >*, int) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.inl:51; #8 0x7fc3000e33f8 in sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection(sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >&, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >&, sofa::type::vector<sofa::core::collision::DetectionOutput, sofa::type::CPUMemoryManager<sofa::core::collision::DetectionOutput> >*) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/MeshNewProximityIntersection.cpp:105; #9 0x7fc3000",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:24539,Safety,detect,detection,24539,"ofa::core::collision::DetectionOutput> >::push_back(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/stl_vector.h:1201; #7 0x7fc3000e5abb in sofa::component::collision::detection::intersection::NewProximityIntersection::doIntersectionPointPoint(double, sofa::type::Vec<3u, double> const&, sofa::type::Vec<3u, double> const&, sofa::type::vector<sofa::core::collision::DetectionOutput, sofa::type::CPUMemoryManager<sofa::core::collision::DetectionOutput> >*, int) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.inl:51; #8 0x7fc3000e33f8 in sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection(sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >&, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >&, sofa::type::vector<sofa::core::collision::DetectionOutput, sofa::type::CPUMemoryManager<sofa::core::collision::DetectionOutput> >*) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/MeshNewProximityIntersection.cpp:105; #9 0x7fc3000eb369 in sofa::core::collision::MemberElementIntersector<sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::detection::intersection::MeshNewProximityIntersection>::intersect(sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator, sofa::core::collision::DetectionOutputVector*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framewor",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:24954,Safety,Detect,DetectionOutput,24954,"ofa::core::collision::DetectionOutput> >::push_back(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/stl_vector.h:1201; #7 0x7fc3000e5abb in sofa::component::collision::detection::intersection::NewProximityIntersection::doIntersectionPointPoint(double, sofa::type::Vec<3u, double> const&, sofa::type::Vec<3u, double> const&, sofa::type::vector<sofa::core::collision::DetectionOutput, sofa::type::CPUMemoryManager<sofa::core::collision::DetectionOutput> >*, int) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.inl:51; #8 0x7fc3000e33f8 in sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection(sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >&, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >&, sofa::type::vector<sofa::core::collision::DetectionOutput, sofa::type::CPUMemoryManager<sofa::core::collision::DetectionOutput> >*) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/MeshNewProximityIntersection.cpp:105; #9 0x7fc3000eb369 in sofa::core::collision::MemberElementIntersector<sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::detection::intersection::MeshNewProximityIntersection>::intersect(sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator, sofa::core::collision::DetectionOutputVector*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framewor",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:25023,Safety,Detect,DetectionOutput,25023,"ofa::core::collision::DetectionOutput> >::push_back(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/stl_vector.h:1201; #7 0x7fc3000e5abb in sofa::component::collision::detection::intersection::NewProximityIntersection::doIntersectionPointPoint(double, sofa::type::Vec<3u, double> const&, sofa::type::Vec<3u, double> const&, sofa::type::vector<sofa::core::collision::DetectionOutput, sofa::type::CPUMemoryManager<sofa::core::collision::DetectionOutput> >*, int) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.inl:51; #8 0x7fc3000e33f8 in sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection(sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >&, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >&, sofa::type::vector<sofa::core::collision::DetectionOutput, sofa::type::CPUMemoryManager<sofa::core::collision::DetectionOutput> >*) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/MeshNewProximityIntersection.cpp:105; #9 0x7fc3000eb369 in sofa::core::collision::MemberElementIntersector<sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::detection::intersection::MeshNewProximityIntersection>::intersect(sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator, sofa::core::collision::DetectionOutputVector*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framewor",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:25103,Safety,Detect,Detection,25103,"ofa::core::collision::DetectionOutput> >::push_back(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/stl_vector.h:1201; #7 0x7fc3000e5abb in sofa::component::collision::detection::intersection::NewProximityIntersection::doIntersectionPointPoint(double, sofa::type::Vec<3u, double> const&, sofa::type::Vec<3u, double> const&, sofa::type::vector<sofa::core::collision::DetectionOutput, sofa::type::CPUMemoryManager<sofa::core::collision::DetectionOutput> >*, int) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.inl:51; #8 0x7fc3000e33f8 in sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection(sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >&, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >&, sofa::type::vector<sofa::core::collision::DetectionOutput, sofa::type::CPUMemoryManager<sofa::core::collision::DetectionOutput> >*) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/MeshNewProximityIntersection.cpp:105; #9 0x7fc3000eb369 in sofa::core::collision::MemberElementIntersector<sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::detection::intersection::MeshNewProximityIntersection>::intersect(sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator, sofa::core::collision::DetectionOutputVector*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framewor",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:25155,Safety,detect,detection,25155,"ofa::core::collision::DetectionOutput> >::push_back(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/stl_vector.h:1201; #7 0x7fc3000e5abb in sofa::component::collision::detection::intersection::NewProximityIntersection::doIntersectionPointPoint(double, sofa::type::Vec<3u, double> const&, sofa::type::Vec<3u, double> const&, sofa::type::vector<sofa::core::collision::DetectionOutput, sofa::type::CPUMemoryManager<sofa::core::collision::DetectionOutput> >*, int) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.inl:51; #8 0x7fc3000e33f8 in sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection(sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >&, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >&, sofa::type::vector<sofa::core::collision::DetectionOutput, sofa::type::CPUMemoryManager<sofa::core::collision::DetectionOutput> >*) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/MeshNewProximityIntersection.cpp:105; #9 0x7fc3000eb369 in sofa::core::collision::MemberElementIntersector<sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::detection::intersection::MeshNewProximityIntersection>::intersect(sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator, sofa::core::collision::DetectionOutputVector*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framewor",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:25609,Safety,detect,detection,25609,"::intersection::MeshNewProximityIntersection::computeIntersection(sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >&, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >&, sofa::type::vector<sofa::core::collision::DetectionOutput, sofa::type::CPUMemoryManager<sofa::core::collision::DetectionOutput> >*) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/MeshNewProximityIntersection.cpp:105; #9 0x7fc3000eb369 in sofa::core::collision::MemberElementIntersector<sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::detection::intersection::MeshNewProximityIntersection>::intersect(sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator, sofa::core::collision::DetectionOutputVector*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/Intersection.inl:70; #10 0x7fc300243c13 in sofa::component::collision::detection::algorithm::BVHNarrowPhase::finalCollisionPairs(std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, bool, sofa::core::collision::ElementIntersector*, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:322; #11 0x7fc30024386e in sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitExterna",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:25774,Safety,Detect,DetectionOutputVector,25774,"::intersection::MeshNewProximityIntersection::computeIntersection(sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >&, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >&, sofa::type::vector<sofa::core::collision::DetectionOutput, sofa::type::CPUMemoryManager<sofa::core::collision::DetectionOutput> >*) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/MeshNewProximityIntersection.cpp:105; #9 0x7fc3000eb369 in sofa::core::collision::MemberElementIntersector<sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::detection::intersection::MeshNewProximityIntersection>::intersect(sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator, sofa::core::collision::DetectionOutputVector*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/Intersection.inl:70; #10 0x7fc300243c13 in sofa::component::collision::detection::algorithm::BVHNarrowPhase::finalCollisionPairs(std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, bool, sofa::core::collision::ElementIntersector*, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:322; #11 0x7fc30024386e in sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitExterna",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:25947,Safety,detect,detection,25947,"/intersection/MeshNewProximityIntersection.cpp:105; #9 0x7fc3000eb369 in sofa::core::collision::MemberElementIntersector<sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::detection::intersection::MeshNewProximityIntersection>::intersect(sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator, sofa::core::collision::DetectionOutputVector*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/Intersection.inl:70; #10 0x7fc300243c13 in sofa::component::collision::detection::algorithm::BVHNarrowPhase::finalCollisionPairs(std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, bool, sofa::core::collision::ElementIntersector*, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:322; #11 0x7fc30024386e in sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitExternalChildren(sofa::core::CollisionElementIterator const&, sofa::core::CollisionElementIterator const&, sofa::core::collision::ElementIntersector*, sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision const&, std::queue<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementI",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:26271,Safety,Detect,DetectionOutputVector,26271,"/intersection/MeshNewProximityIntersection.cpp:105; #9 0x7fc3000eb369 in sofa::core::collision::MemberElementIntersector<sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::detection::intersection::MeshNewProximityIntersection>::intersect(sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator, sofa::core::collision::DetectionOutputVector*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/Intersection.inl:70; #10 0x7fc300243c13 in sofa::component::collision::detection::algorithm::BVHNarrowPhase::finalCollisionPairs(std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, bool, sofa::core::collision::ElementIntersector*, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:322; #11 0x7fc30024386e in sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitExternalChildren(sofa::core::CollisionElementIterator const&, sofa::core::CollisionElementIterator const&, sofa::core::collision::ElementIntersector*, sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision const&, std::queue<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementI",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:26355,Safety,Detect,Detection,26355,"/intersection/MeshNewProximityIntersection.cpp:105; #9 0x7fc3000eb369 in sofa::core::collision::MemberElementIntersector<sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::detection::intersection::MeshNewProximityIntersection>::intersect(sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator, sofa::core::collision::DetectionOutputVector*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/Intersection.inl:70; #10 0x7fc300243c13 in sofa::component::collision::detection::algorithm::BVHNarrowPhase::finalCollisionPairs(std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, bool, sofa::core::collision::ElementIntersector*, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:322; #11 0x7fc30024386e in sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitExternalChildren(sofa::core::CollisionElementIterator const&, sofa::core::CollisionElementIterator const&, sofa::core::collision::ElementIntersector*, sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision const&, std::queue<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementI",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:26404,Safety,detect,detection,26404,"/intersection/MeshNewProximityIntersection.cpp:105; #9 0x7fc3000eb369 in sofa::core::collision::MemberElementIntersector<sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::detection::intersection::MeshNewProximityIntersection>::intersect(sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator, sofa::core::collision::DetectionOutputVector*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/Intersection.inl:70; #10 0x7fc300243c13 in sofa::component::collision::detection::algorithm::BVHNarrowPhase::finalCollisionPairs(std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, bool, sofa::core::collision::ElementIntersector*, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:322; #11 0x7fc30024386e in sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitExternalChildren(sofa::core::CollisionElementIterator const&, sofa::core::CollisionElementIterator const&, sofa::core::collision::ElementIntersector*, sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision const&, std::queue<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementI",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:26498,Safety,detect,detection,26498,"d::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, bool, sofa::core::collision::ElementIntersector*, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:322; #11 0x7fc30024386e in sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitExternalChildren(sofa::core::CollisionElementIterator const&, sofa::core::CollisionElementIterator const&, sofa::core::collision::ElementIntersector*, sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision const&, std::queue<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:278; #12 0x7fc30024368b in sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitCollisionElements(std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, sofa::core::collision::ElementIntersector*, sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCol",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:26720,Safety,detect,detection,26720,"d::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, bool, sofa::core::collision::ElementIntersector*, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:322; #11 0x7fc30024386e in sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitExternalChildren(sofa::core::CollisionElementIterator const&, sofa::core::CollisionElementIterator const&, sofa::core::collision::ElementIntersector*, sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision const&, std::queue<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:278; #12 0x7fc30024368b in sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitCollisionElements(std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, sofa::core::collision::ElementIntersector*, sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCol",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:27407,Safety,Detect,DetectionOutputVector,27407,"d::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, bool, sofa::core::collision::ElementIntersector*, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:322; #11 0x7fc30024386e in sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitExternalChildren(sofa::core::CollisionElementIterator const&, sofa::core::CollisionElementIterator const&, sofa::core::collision::ElementIntersector*, sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision const&, std::queue<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:278; #12 0x7fc30024368b in sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitCollisionElements(std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, sofa::core::collision::ElementIntersector*, sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCol",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:27491,Safety,Detect,Detection,27491,"d::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, bool, sofa::core::collision::ElementIntersector*, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:322; #11 0x7fc30024386e in sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitExternalChildren(sofa::core::CollisionElementIterator const&, sofa::core::CollisionElementIterator const&, sofa::core::collision::ElementIntersector*, sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision const&, std::queue<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:278; #12 0x7fc30024368b in sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitCollisionElements(std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, sofa::core::collision::ElementIntersector*, sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCol",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:27540,Safety,detect,detection,27540,"d::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, bool, sofa::core::collision::ElementIntersector*, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:322; #11 0x7fc30024386e in sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitExternalChildren(sofa::core::CollisionElementIterator const&, sofa::core::CollisionElementIterator const&, sofa::core::collision::ElementIntersector*, sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision const&, std::queue<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:278; #12 0x7fc30024368b in sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitCollisionElements(std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, sofa::core::collision::ElementIntersector*, sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCol",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:27634,Safety,detect,detection,27634,"tion/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:278; #12 0x7fc30024368b in sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitCollisionElements(std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, sofa::core::collision::ElementIntersector*, sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision const&, std::queue<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, std::stack<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:251; #13 0x7fc300243254 in sofa::component::collision::detection::algorithm",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:27960,Safety,detect,detection,27960,"tion/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:278; #12 0x7fc30024368b in sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitCollisionElements(std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, sofa::core::collision::ElementIntersector*, sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision const&, std::queue<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, std::stack<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:251; #13 0x7fc300243254 in sofa::component::collision::detection::algorithm",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:29249,Safety,Detect,DetectionOutputVector,29249,"tion/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:278; #12 0x7fc30024368b in sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitCollisionElements(std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, sofa::core::collision::ElementIntersector*, sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision const&, std::queue<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, std::stack<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:251; #13 0x7fc300243254 in sofa::component::collision::detection::algorithm",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:29333,Safety,Detect,Detection,29333,"tion/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:278; #12 0x7fc30024368b in sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitCollisionElements(std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, sofa::core::collision::ElementIntersector*, sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision const&, std::queue<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, std::stack<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:251; #13 0x7fc300243254 in sofa::component::collision::detection::algorithm",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:29382,Safety,detect,detection,29382,"tion/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:278; #12 0x7fc30024368b in sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitCollisionElements(std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, sofa::core::collision::ElementIntersector*, sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision const&, std::queue<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, std::stack<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:251; #13 0x7fc300243254 in sofa::component::collision::detection::algorithm",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:29476,Safety,detect,detection,29476,"ection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:251; #13 0x7fc300243254 in sofa::component::collision::detection::algorithm::BVHNarrowPhase::processInternalCell(std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, sofa::core::collision::ElementIntersector*, sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision const&, std::queue<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, std::stack<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:196; #14 0x7fc3002430a2 in sofa::component::collision::detection::algorithm::",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:29799,Safety,detect,detection,29799,"ection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:251; #13 0x7fc300243254 in sofa::component::collision::detection::algorithm::BVHNarrowPhase::processInternalCell(std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, sofa::core::collision::ElementIntersector*, sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision const&, std::queue<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, std::stack<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:196; #14 0x7fc3002430a2 in sofa::component::collision::detection::algorithm::",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:31088,Safety,Detect,DetectionOutputVector,31088,"ection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:251; #13 0x7fc300243254 in sofa::component::collision::detection::algorithm::BVHNarrowPhase::processInternalCell(std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, sofa::core::collision::ElementIntersector*, sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision const&, std::queue<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, std::stack<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:196; #14 0x7fc3002430a2 in sofa::component::collision::detection::algorithm::",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:31172,Safety,Detect,Detection,31172,"ection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:251; #13 0x7fc300243254 in sofa::component::collision::detection::algorithm::BVHNarrowPhase::processInternalCell(std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, sofa::core::collision::ElementIntersector*, sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision const&, std::queue<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, std::stack<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:196; #14 0x7fc3002430a2 in sofa::component::collision::detection::algorithm::",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:31221,Safety,detect,detection,31221,"ection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:251; #13 0x7fc300243254 in sofa::component::collision::detection::algorithm::BVHNarrowPhase::processInternalCell(std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, sofa::core::collision::ElementIntersector*, sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision const&, std::queue<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, std::stack<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:196; #14 0x7fc3002430a2 in sofa::component::collision::detection::algorithm::",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:31315,Safety,detect,detection,31315,"CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:196; #14 0x7fc3002430a2 in sofa::component::collision::detection::algorithm::BVHNarrowPhase::processExternalCell(std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, sofa::core::CollisionModel*&, sofa::core::CollisionModel*&, sofa::core::collision::ElementIntersector*, sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision const&, sofa::component::collision::detection::algorithm::MirrorIntersector*, std::queue<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, sofa::core::collision::DetectionOutputVector*&) const /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:176; #15 0x7fc3002428a4 in sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair(std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algori",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:31698,Safety,detect,detection,31698,"CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:196; #14 0x7fc3002430a2 in sofa::component::collision::detection::algorithm::BVHNarrowPhase::processExternalCell(std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, sofa::core::CollisionModel*&, sofa::core::CollisionModel*&, sofa::core::collision::ElementIntersector*, sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision const&, sofa::component::collision::detection::algorithm::MirrorIntersector*, std::queue<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, sofa::core::collision::DetectionOutputVector*&) const /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:176; #15 0x7fc3002428a4 in sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair(std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algori",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:31788,Safety,detect,detection,31788,"CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:196; #14 0x7fc3002430a2 in sofa::component::collision::detection::algorithm::BVHNarrowPhase::processExternalCell(std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, sofa::core::CollisionModel*&, sofa::core::CollisionModel*&, sofa::core::collision::ElementIntersector*, sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision const&, sofa::component::collision::detection::algorithm::MirrorIntersector*, std::queue<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, sofa::core::collision::DetectionOutputVector*&) const /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:176; #15 0x7fc3002428a4 in sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair(std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algori",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:32455,Safety,Detect,DetectionOutputVector,32455,"CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:196; #14 0x7fc3002430a2 in sofa::component::collision::detection::algorithm::BVHNarrowPhase::processExternalCell(std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, sofa::core::CollisionModel*&, sofa::core::CollisionModel*&, sofa::core::collision::ElementIntersector*, sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision const&, sofa::component::collision::detection::algorithm::MirrorIntersector*, std::queue<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, sofa::core::collision::DetectionOutputVector*&) const /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:176; #15 0x7fc3002428a4 in sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair(std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algori",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:32545,Safety,Detect,Detection,32545,"CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:196; #14 0x7fc3002430a2 in sofa::component::collision::detection::algorithm::BVHNarrowPhase::processExternalCell(std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, sofa::core::CollisionModel*&, sofa::core::CollisionModel*&, sofa::core::collision::ElementIntersector*, sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision const&, sofa::component::collision::detection::algorithm::MirrorIntersector*, std::queue<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, sofa::core::collision::DetectionOutputVector*&) const /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:176; #15 0x7fc3002428a4 in sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair(std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algori",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:32594,Safety,detect,detection,32594,"CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:196; #14 0x7fc3002430a2 in sofa::component::collision::detection::algorithm::BVHNarrowPhase::processExternalCell(std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, sofa::core::CollisionModel*&, sofa::core::CollisionModel*&, sofa::core::collision::ElementIntersector*, sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision const&, sofa::component::collision::detection::algorithm::MirrorIntersector*, std::queue<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, sofa::core::collision::DetectionOutputVector*&) const /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:176; #15 0x7fc3002428a4 in sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair(std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algori",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:32688,Safety,detect,detection,32688,"on::algorithm::MirrorIntersector*, std::queue<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, sofa::core::collision::DetectionOutputVector*&) const /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:176; #15 0x7fc3002428a4 in sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair(std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:97; #16 0x7fc2fea01259 in sofa::core::collision::NarrowPhaseDetection::addCollisionPairs(sofa::type::vector<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*>, sofa::type::CPUMemoryManager<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> > > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/NarrowPhaseDetection.cpp:41; #17 0x7fc300261107 in sofa::component::collision::detection::algorithm::DefaultPipeline::doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CPUMemoryManager<sofa::core::CollisionModel*> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/DefaultPipeline.cpp:238; #18 0x7fc2ff1ec0e0 in sofa::simulation::PipelineImpl::comp",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:32878,Safety,Detect,Detection,32878,"on::algorithm::MirrorIntersector*, std::queue<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, sofa::core::collision::DetectionOutputVector*&) const /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:176; #15 0x7fc3002428a4 in sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair(std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:97; #16 0x7fc2fea01259 in sofa::core::collision::NarrowPhaseDetection::addCollisionPairs(sofa::type::vector<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*>, sofa::type::CPUMemoryManager<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> > > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/NarrowPhaseDetection.cpp:41; #17 0x7fc300261107 in sofa::component::collision::detection::algorithm::DefaultPipeline::doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CPUMemoryManager<sofa::core::CollisionModel*> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/DefaultPipeline.cpp:238; #18 0x7fc2ff1ec0e0 in sofa::simulation::PipelineImpl::comp",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:32927,Safety,detect,detection,32927,"on::algorithm::MirrorIntersector*, std::queue<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, sofa::core::collision::DetectionOutputVector*&) const /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:176; #15 0x7fc3002428a4 in sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair(std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:97; #16 0x7fc2fea01259 in sofa::core::collision::NarrowPhaseDetection::addCollisionPairs(sofa::type::vector<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*>, sofa::type::CPUMemoryManager<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> > > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/NarrowPhaseDetection.cpp:41; #17 0x7fc300261107 in sofa::component::collision::detection::algorithm::DefaultPipeline::doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CPUMemoryManager<sofa::core::CollisionModel*> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/DefaultPipeline.cpp:238; #18 0x7fc2ff1ec0e0 in sofa::simulation::PipelineImpl::comp",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:33409,Safety,detect,detection,33409,"sion/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:176; #15 0x7fc3002428a4 in sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair(std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:97; #16 0x7fc2fea01259 in sofa::core::collision::NarrowPhaseDetection::addCollisionPairs(sofa::type::vector<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*>, sofa::type::CPUMemoryManager<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> > > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/NarrowPhaseDetection.cpp:41; #17 0x7fc300261107 in sofa::component::collision::detection::algorithm::DefaultPipeline::doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CPUMemoryManager<sofa::core::CollisionModel*> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/DefaultPipeline.cpp:238; #18 0x7fc2ff1ec0e0 in sofa::simulation::PipelineImpl::computeCollisionDetection() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/PipelineImpl.cpp:117; #19 0x7fc2ff12923f in sofa::simulation::CollisionVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/CollisionVisitor.cpp:78; #20 0x7fc2ff129ac6 in void sofa::simulation::Visitor::runVisitorTask<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), sofa::core::collision::Pipeline*",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:33644,Safety,Detect,Detection,33644,"sion/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:176; #15 0x7fc3002428a4 in sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair(std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:97; #16 0x7fc2fea01259 in sofa::core::collision::NarrowPhaseDetection::addCollisionPairs(sofa::type::vector<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*>, sofa::type::CPUMemoryManager<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> > > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/NarrowPhaseDetection.cpp:41; #17 0x7fc300261107 in sofa::component::collision::detection::algorithm::DefaultPipeline::doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CPUMemoryManager<sofa::core::CollisionModel*> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/DefaultPipeline.cpp:238; #18 0x7fc2ff1ec0e0 in sofa::simulation::PipelineImpl::computeCollisionDetection() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/PipelineImpl.cpp:117; #19 0x7fc2ff12923f in sofa::simulation::CollisionVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/CollisionVisitor.cpp:78; #20 0x7fc2ff129ac6 in void sofa::simulation::Visitor::runVisitorTask<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), sofa::core::collision::Pipeline*",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:33693,Safety,detect,detection,33693,"sion/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:176; #15 0x7fc3002428a4 in sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair(std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:97; #16 0x7fc2fea01259 in sofa::core::collision::NarrowPhaseDetection::addCollisionPairs(sofa::type::vector<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*>, sofa::type::CPUMemoryManager<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> > > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/NarrowPhaseDetection.cpp:41; #17 0x7fc300261107 in sofa::component::collision::detection::algorithm::DefaultPipeline::doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CPUMemoryManager<sofa::core::CollisionModel*> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/DefaultPipeline.cpp:238; #18 0x7fc2ff1ec0e0 in sofa::simulation::PipelineImpl::computeCollisionDetection() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/PipelineImpl.cpp:117; #19 0x7fc2ff12923f in sofa::simulation::CollisionVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/CollisionVisitor.cpp:78; #20 0x7fc2ff129ac6 in void sofa::simulation::Visitor::runVisitorTask<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), sofa::core::collision::Pipeline*",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256642333:228,Deployability,release,release,228,"```; void NarrowPhaseDetection::endNarrowPhase(); {; for (auto it = m_outputsMap.begin(); it != m_outputsMap.end();); {; DetectionOutputVector *do_vec = (it->second);; if (!do_vec || do_vec->empty()); {; if (do_vec); {; do_vec->release();; }; m_outputsMap.erase(it++);; }; else; {; ++it;; }; }; }; ```. The intended behavior of this is ""if the vector is empty, or it's a nullpointer, remove it from the map. If it is not a nullpointer, also release the vector"", right?. Since the `do_vec->clear()` is in `beginNarrowPhase`, the vector is never released correctly.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256642333
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256642333:441,Deployability,release,release,441,"```; void NarrowPhaseDetection::endNarrowPhase(); {; for (auto it = m_outputsMap.begin(); it != m_outputsMap.end();); {; DetectionOutputVector *do_vec = (it->second);; if (!do_vec || do_vec->empty()); {; if (do_vec); {; do_vec->release();; }; m_outputsMap.erase(it++);; }; else; {; ++it;; }; }; }; ```. The intended behavior of this is ""if the vector is empty, or it's a nullpointer, remove it from the map. If it is not a nullpointer, also release the vector"", right?. Since the `do_vec->clear()` is in `beginNarrowPhase`, the vector is never released correctly.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256642333
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256642333:544,Deployability,release,released,544,"```; void NarrowPhaseDetection::endNarrowPhase(); {; for (auto it = m_outputsMap.begin(); it != m_outputsMap.end();); {; DetectionOutputVector *do_vec = (it->second);; if (!do_vec || do_vec->empty()); {; if (do_vec); {; do_vec->release();; }; m_outputsMap.erase(it++);; }; else; {; ++it;; }; }; }; ```. The intended behavior of this is ""if the vector is empty, or it's a nullpointer, remove it from the map. If it is not a nullpointer, also release the vector"", right?. Since the `do_vec->clear()` is in `beginNarrowPhase`, the vector is never released correctly.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256642333
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256642333:121,Safety,Detect,DetectionOutputVector,121,"```; void NarrowPhaseDetection::endNarrowPhase(); {; for (auto it = m_outputsMap.begin(); it != m_outputsMap.end();); {; DetectionOutputVector *do_vec = (it->second);; if (!do_vec || do_vec->empty()); {; if (do_vec); {; do_vec->release();; }; m_outputsMap.erase(it++);; }; else; {; ++it;; }; }; }; ```. The intended behavior of this is ""if the vector is empty, or it's a nullpointer, remove it from the map. If it is not a nullpointer, also release the vector"", right?. Since the `do_vec->clear()` is in `beginNarrowPhase`, the vector is never released correctly.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256642333
https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256642333:489,Usability,clear,clear,489,"```; void NarrowPhaseDetection::endNarrowPhase(); {; for (auto it = m_outputsMap.begin(); it != m_outputsMap.end();); {; DetectionOutputVector *do_vec = (it->second);; if (!do_vec || do_vec->empty()); {; if (do_vec); {; do_vec->release();; }; m_outputsMap.erase(it++);; }; else; {; ++it;; }; }; }; ```. The intended behavior of this is ""if the vector is empty, or it's a nullpointer, remove it from the map. If it is not a nullpointer, also release the vector"", right?. Since the `do_vec->clear()` is in `beginNarrowPhase`, the vector is never released correctly.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256642333
https://github.com/sofa-framework/sofa/pull/3326#issuecomment-1254636448:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #1](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3326/1/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/35**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 227c41168f2c863d66fca5706912367521e94f34_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3326#issuecomment-1254636448
https://github.com/sofa-framework/sofa/pull/3326#issuecomment-1254636448:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #1](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3326/1/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/35**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 227c41168f2c863d66fca5706912367521e94f34_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3326#issuecomment-1254636448
https://github.com/sofa-framework/sofa/pull/3326#issuecomment-1254637524:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3326/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/35**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 227c41168f2c863d66fca5706912367521e94f34_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3326#issuecomment-1254637524
https://github.com/sofa-framework/sofa/pull/3326#issuecomment-1254637524:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3326/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/35**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 227c41168f2c863d66fca5706912367521e94f34_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3326#issuecomment-1254637524
https://github.com/sofa-framework/sofa/pull/3326#issuecomment-1254998642:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3326#issuecomment-1254998642
https://github.com/sofa-framework/sofa/pull/3326#issuecomment-1254998772:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3326/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/35**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 227c41168f2c863d66fca5706912367521e94f34_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3326#issuecomment-1254998772
https://github.com/sofa-framework/sofa/pull/3326#issuecomment-1254998772:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3326/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/35**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 227c41168f2c863d66fca5706912367521e94f34_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3326#issuecomment-1254998772
https://github.com/sofa-framework/sofa/pull/3327#issuecomment-1254985204:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3327#issuecomment-1254985204
https://github.com/sofa-framework/sofa/pull/3327#issuecomment-1272091500:177,Usability,clear,clear,177,@hugtalbot @alxbilger @fredroy ; I have added the deprecated lifecycle mechanism as requested. Could you tell me if I did it right. The instructions on the webpage are not 100% clear to me.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3327#issuecomment-1272091500
https://github.com/sofa-framework/sofa/pull/3327#issuecomment-1272091801:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3327#issuecomment-1272091801
https://github.com/sofa-framework/sofa/pull/3328#issuecomment-1255924472:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3328#issuecomment-1255924472
https://github.com/sofa-framework/sofa/pull/3328#issuecomment-1272102338:242,Usability,clear,clear,242,> I recommend to deprecate Data fields properly. See https://www.sofa-framework.org/community/doc/contributing-to-sofa/lifecycle-mechanisms/#removing-a-datafield. I did something to correctly depreciate the Data. The instruction are not 100% clear to me (regarding dates inside the macro and parse method). Let me know if it seems correct.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3328#issuecomment-1272102338
https://github.com/sofa-framework/sofa/pull/3328#issuecomment-1272102537:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3328#issuecomment-1272102537
https://github.com/sofa-framework/sofa/pull/3329#issuecomment-1254711655:115,Testability,test,test,115,In fact would be better to merge PR #3330 and #3331 before this one as they are fixing bugs found while doing this test.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3329#issuecomment-1254711655
https://github.com/sofa-framework/sofa/pull/3329#issuecomment-1272139450:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3329#issuecomment-1272139450
https://github.com/sofa-framework/sofa/pull/3329#issuecomment-1280646630:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3329#issuecomment-1280646630
https://github.com/sofa-framework/sofa/pull/3329#issuecomment-1283804200:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3329#issuecomment-1283804200
https://github.com/sofa-framework/sofa/pull/3329#issuecomment-1299806941:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3329#issuecomment-1299806941
https://github.com/sofa-framework/sofa/pull/3329#issuecomment-1299807808:38,Testability,test,tests,38,[force-full-build][ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3329#issuecomment-1299807808
https://github.com/sofa-framework/sofa/pull/3329#issuecomment-1300411154:38,Testability,test,tests,38,[force-full-build][ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3329#issuecomment-1300411154
https://github.com/sofa-framework/sofa/pull/3329#issuecomment-1301501723:9,Testability,test,test,9,"Relevant test results are correct now, ready.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3329#issuecomment-1301501723
https://github.com/sofa-framework/sofa/pull/3330#issuecomment-1254697973:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3330#issuecomment-1254697973
https://github.com/sofa-framework/sofa/pull/3331#issuecomment-1254987559:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3331#issuecomment-1254987559
https://github.com/sofa-framework/sofa/pull/3332#issuecomment-1255508539:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3332#issuecomment-1255508539
https://github.com/sofa-framework/sofa/pull/3332#issuecomment-1264719863:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3332#issuecomment-1264719863
https://github.com/sofa-framework/sofa/pull/3334#issuecomment-1256718726:239,Energy Efficiency,efficient,efficient,239,"Thanks for the PR @alxbilger,. Looks good to me. ; More generally I'm very surprised we didn't notice performance drop by have more and more explicit template instantiation. To me this is an indication that either the lto/gto are now very efficient or that our old code without the explicit template instantiation was not optimized by the compiler as we were expecting.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3334#issuecomment-1256718726
https://github.com/sofa-framework/sofa/pull/3334#issuecomment-1256718726:102,Performance,perform,performance,102,"Thanks for the PR @alxbilger,. Looks good to me. ; More generally I'm very surprised we didn't notice performance drop by have more and more explicit template instantiation. To me this is an indication that either the lto/gto are now very efficient or that our old code without the explicit template instantiation was not optimized by the compiler as we were expecting.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3334#issuecomment-1256718726
https://github.com/sofa-framework/sofa/pull/3334#issuecomment-1256718726:322,Performance,optimiz,optimized,322,"Thanks for the PR @alxbilger,. Looks good to me. ; More generally I'm very surprised we didn't notice performance drop by have more and more explicit template instantiation. To me this is an indication that either the lto/gto are now very efficient or that our old code without the explicit template instantiation was not optimized by the compiler as we were expecting.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3334#issuecomment-1256718726
https://github.com/sofa-framework/sofa/pull/3334#issuecomment-1265179521:290,Integrability,depend,dependency,290,"Hi @alxbilger . I think that what compiler's developers consider as ""default"" shouldn't have any consequence in our code architecture and thus, I'm 100% convinced it is way better to set the properly the compilation parameters to cope with a default compiler option compare to increase the dependency graph (#include) or code complexity.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3334#issuecomment-1265179521
https://github.com/sofa-framework/sofa/pull/3334#issuecomment-1266740237:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3334#issuecomment-1266740237
https://github.com/sofa-framework/sofa/pull/3335#issuecomment-1257009032:5,Usability,feedback,feedback,5,your feedback would be good @bakpaul @courtecuisse @ziqiu-zeng,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3335#issuecomment-1257009032
https://github.com/sofa-framework/sofa/pull/3335#issuecomment-1257668026:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3335#issuecomment-1257668026
https://github.com/sofa-framework/sofa/pull/3335#issuecomment-1260827157:170,Modifiability,plugin,plugins,170,"Hi,. I just read this comment. I'm not 100% sure but I think that these operations are specified for cuda. I don't really know what will be the consequences for the cuda plugins if this pr is merged, but I guess it will break the parallel implementation. . Hadrien;",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3335#issuecomment-1260827157
https://github.com/sofa-framework/sofa/pull/3335#issuecomment-1267085460:141,Availability,failure,failure,141,"I've tested to remove completely the functions. If used or overridden, it should fail to compile. On my setup, I don't observe a compilation failure, even with SofaCuda. Let's see if the CI does not complain.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3335#issuecomment-1267085460
https://github.com/sofa-framework/sofa/pull/3335#issuecomment-1267085460:5,Testability,test,tested,5,"I've tested to remove completely the functions. If used or overridden, it should fail to compile. On my setup, I don't observe a compilation failure, even with SofaCuda. Let's see if the CI does not complain.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3335#issuecomment-1267085460
https://github.com/sofa-framework/sofa/pull/3335#issuecomment-1276063631:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3335#issuecomment-1276063631
https://github.com/sofa-framework/sofa/pull/3335#issuecomment-1279209917:418,Energy Efficiency,efficient,efficient,418,"This op* mechanism may be ""complex"" but it was a reasonable attempt at implementing common matrix/vector operations generically while maintaining some efficiency (inspecting the sparsity and block size of the matrix being operated on instead of blindly doing a O(n^3) loop over all possible element combinaisons). It is useful (we do use it in a couple of places in our solver codes), even if not critical (it is more efficient to call directly the right methods with the specific types of matrix and vectors that are being used).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3335#issuecomment-1279209917
https://github.com/sofa-framework/sofa/pull/3337#issuecomment-1261864932:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3337#issuecomment-1261864932
https://github.com/sofa-framework/sofa/pull/3338#issuecomment-1259192575:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3338#issuecomment-1259192575
https://github.com/sofa-framework/sofa/pull/3339#issuecomment-1259072344:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3339#issuecomment-1259072344
https://github.com/sofa-framework/sofa/pull/3339#issuecomment-1291230799:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3339#issuecomment-1291230799
https://github.com/sofa-framework/sofa/pull/3339#issuecomment-1291831058:109,Integrability,depend,depends,109,I moved all changes related to `TopologicalMapping `into the PR #3428 for better clarity.; Therefor this one depends on this new PR.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3339#issuecomment-1291831058
https://github.com/sofa-framework/sofa/pull/3339#issuecomment-1301364991:130,Modifiability,inherit,inherite,130,"yes and it is ""funny"" because I had the same issue in https://github.com/sofa-framework/sofa/pull/3368; this is just because Grid inherite from MeshTopology which doesn't define the TopoogyType as Hexahedron. ![](https://www.melty.fr/wp-content/uploads/meltyfr/2019/10/media-9.gif)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3339#issuecomment-1301364991
https://github.com/sofa-framework/sofa/issues/3343#issuecomment-1265270806:34,Deployability,configurat,configuration,34,"To me compiler's specific default configuration shouldn't have consequence in our code base and we shouldn't design software architecture *because* of a specific compiler issue (which is actually not an issue..because it is something that can be change with command arguments). Compiler's options exists to be used and so I see no problem in using them. . Said differently, setting compiler's option in the CMake to have more inlining is much more legitimate ""and the good way"" than putting ""inline"" in front of every declaration. . EDIT: what surprise me is that this seems related to inlining... while I would have bet it would be more related to LTO/GO.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3343#issuecomment-1265270806
https://github.com/sofa-framework/sofa/issues/3343#issuecomment-1265270806:34,Modifiability,config,configuration,34,"To me compiler's specific default configuration shouldn't have consequence in our code base and we shouldn't design software architecture *because* of a specific compiler issue (which is actually not an issue..because it is something that can be change with command arguments). Compiler's options exists to be used and so I see no problem in using them. . Said differently, setting compiler's option in the CMake to have more inlining is much more legitimate ""and the good way"" than putting ""inline"" in front of every declaration. . EDIT: what surprise me is that this seems related to inlining... while I would have bet it would be more related to LTO/GO.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3343#issuecomment-1265270806
https://github.com/sofa-framework/sofa/pull/3345#issuecomment-1261415170:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3345#issuecomment-1261415170
https://github.com/sofa-framework/sofa/pull/3345#issuecomment-1276864955:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3345#issuecomment-1276864955
https://github.com/sofa-framework/sofa/pull/3346#issuecomment-1261415361:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3346#issuecomment-1261415361
https://github.com/sofa-framework/sofa/pull/3347#issuecomment-1261415448:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3347#issuecomment-1261415448
https://github.com/sofa-framework/sofa/pull/3348#issuecomment-1261848977:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3348#issuecomment-1261848977
https://github.com/sofa-framework/sofa/pull/3349#issuecomment-1262335180:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3349#issuecomment-1262335180
https://github.com/sofa-framework/sofa/pull/3349#issuecomment-1263227137:35,Performance,perform,performance,35,adding some details:; this loss of performance has been remarked only when the MSVC flag `/Ob2` is not enabled (meaning it should happen only in Debug (normal) and RelWithDebInfo),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3349#issuecomment-1263227137
https://github.com/sofa-framework/sofa/pull/3351#issuecomment-1262335414:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3351#issuecomment-1262335414
https://github.com/sofa-framework/sofa/pull/3351#issuecomment-1275939046:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3351#issuecomment-1275939046
https://github.com/sofa-framework/sofa/pull/3353#issuecomment-1263191523:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3353#issuecomment-1263191523
https://github.com/sofa-framework/sofa/pull/3353#issuecomment-1265109648:333,Deployability,update,update,333,"These two components were added as a tool to smooth the transition between the use of hard-coded alias in our code base to ""no alias"" at all. The underlying idea was to propose our users, and more specifically the one complaining about the disappearance of the alias they are using, a simple way to restore it (if they don't want to update their complete scene base). . About the fact is it not used... this is not surprising as we are not removing the aliases as it was planned and when we do it we are updating all the scenes in our code base (removing the need for MakeAlias). I personally think that the approach proposed in (#PR 2512: https://github.com/sofa-framework/sofa/pull/2512) is much elegant compared to the MakeAlias (and would advocate to remove MakeAlias when something similar to 2512 is merged) . In any case (either with MakeAlias *or* the Import component) hard-coding multiple aliases for a single component in our c++ code is an UX mistake while letting user specify their aliases is an UX feature, so I would be more in favor for having a clear roadmap to remove the aliases.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3353#issuecomment-1265109648
https://github.com/sofa-framework/sofa/pull/3353#issuecomment-1265109648:285,Usability,simpl,simple,285,"These two components were added as a tool to smooth the transition between the use of hard-coded alias in our code base to ""no alias"" at all. The underlying idea was to propose our users, and more specifically the one complaining about the disappearance of the alias they are using, a simple way to restore it (if they don't want to update their complete scene base). . About the fact is it not used... this is not surprising as we are not removing the aliases as it was planned and when we do it we are updating all the scenes in our code base (removing the need for MakeAlias). I personally think that the approach proposed in (#PR 2512: https://github.com/sofa-framework/sofa/pull/2512) is much elegant compared to the MakeAlias (and would advocate to remove MakeAlias when something similar to 2512 is merged) . In any case (either with MakeAlias *or* the Import component) hard-coding multiple aliases for a single component in our c++ code is an UX mistake while letting user specify their aliases is an UX feature, so I would be more in favor for having a clear roadmap to remove the aliases.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3353#issuecomment-1265109648
https://github.com/sofa-framework/sofa/pull/3353#issuecomment-1265109648:952,Usability,UX,UX,952,"These two components were added as a tool to smooth the transition between the use of hard-coded alias in our code base to ""no alias"" at all. The underlying idea was to propose our users, and more specifically the one complaining about the disappearance of the alias they are using, a simple way to restore it (if they don't want to update their complete scene base). . About the fact is it not used... this is not surprising as we are not removing the aliases as it was planned and when we do it we are updating all the scenes in our code base (removing the need for MakeAlias). I personally think that the approach proposed in (#PR 2512: https://github.com/sofa-framework/sofa/pull/2512) is much elegant compared to the MakeAlias (and would advocate to remove MakeAlias when something similar to 2512 is merged) . In any case (either with MakeAlias *or* the Import component) hard-coding multiple aliases for a single component in our c++ code is an UX mistake while letting user specify their aliases is an UX feature, so I would be more in favor for having a clear roadmap to remove the aliases.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3353#issuecomment-1265109648
https://github.com/sofa-framework/sofa/pull/3353#issuecomment-1265109648:1010,Usability,UX,UX,1010,"These two components were added as a tool to smooth the transition between the use of hard-coded alias in our code base to ""no alias"" at all. The underlying idea was to propose our users, and more specifically the one complaining about the disappearance of the alias they are using, a simple way to restore it (if they don't want to update their complete scene base). . About the fact is it not used... this is not surprising as we are not removing the aliases as it was planned and when we do it we are updating all the scenes in our code base (removing the need for MakeAlias). I personally think that the approach proposed in (#PR 2512: https://github.com/sofa-framework/sofa/pull/2512) is much elegant compared to the MakeAlias (and would advocate to remove MakeAlias when something similar to 2512 is merged) . In any case (either with MakeAlias *or* the Import component) hard-coding multiple aliases for a single component in our c++ code is an UX mistake while letting user specify their aliases is an UX feature, so I would be more in favor for having a clear roadmap to remove the aliases.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3353#issuecomment-1265109648
https://github.com/sofa-framework/sofa/pull/3353#issuecomment-1265109648:1063,Usability,clear,clear,1063,"These two components were added as a tool to smooth the transition between the use of hard-coded alias in our code base to ""no alias"" at all. The underlying idea was to propose our users, and more specifically the one complaining about the disappearance of the alias they are using, a simple way to restore it (if they don't want to update their complete scene base). . About the fact is it not used... this is not surprising as we are not removing the aliases as it was planned and when we do it we are updating all the scenes in our code base (removing the need for MakeAlias). I personally think that the approach proposed in (#PR 2512: https://github.com/sofa-framework/sofa/pull/2512) is much elegant compared to the MakeAlias (and would advocate to remove MakeAlias when something similar to 2512 is merged) . In any case (either with MakeAlias *or* the Import component) hard-coding multiple aliases for a single component in our c++ code is an UX mistake while letting user specify their aliases is an UX feature, so I would be more in favor for having a clear roadmap to remove the aliases.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3353#issuecomment-1265109648
https://github.com/sofa-framework/sofa/pull/3353#issuecomment-1265209282:176,Availability,mainten,maintenance,176,"Thanks for the clarification @damienmarchal. It makes sense. ; As you said, it's a feature. Therefore, I just want to make sure that this feature is used enough to justify the maintenance cost.; Note that I believed that the feature was also possible with Python, but I don't see it. I would prefer it, compared to a scene component which does not bring anything to the simulation.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3353#issuecomment-1265209282
https://github.com/sofa-framework/sofa/pull/3356#issuecomment-1263427240:16,Deployability,pipeline,pipeline,16,"Note: collision pipeline must be refactored if we want to reduce the ridiculous high number of calls to `getValue`. Every time there is a check between two primitives, there is a `getValue` call to `MechanicalObject::position`, `proximity` and `alarmDistance`.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3356#issuecomment-1263427240
https://github.com/sofa-framework/sofa/pull/3356#issuecomment-1263427240:58,Energy Efficiency,reduce,reduce,58,"Note: collision pipeline must be refactored if we want to reduce the ridiculous high number of calls to `getValue`. Every time there is a check between two primitives, there is a `getValue` call to `MechanicalObject::position`, `proximity` and `alarmDistance`.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3356#issuecomment-1263427240
https://github.com/sofa-framework/sofa/pull/3356#issuecomment-1263427240:33,Modifiability,refactor,refactored,33,"Note: collision pipeline must be refactored if we want to reduce the ridiculous high number of calls to `getValue`. Every time there is a check between two primitives, there is a `getValue` call to `MechanicalObject::position`, `proximity` and `alarmDistance`.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3356#issuecomment-1263427240
https://github.com/sofa-framework/sofa/pull/3356#issuecomment-1263555229:60,Deployability,update,updateIfDirty,60,When running caduceus scene for 100 time steps:. | Calls to updateIfDirty() | Before | After | | |; |-------------------------------------------|----------|----------|------|---|; | MechanicalObject::position | 2269573 | 515920 | -77% | |; | SparseGridRamificationTopology::hexahedra | 646323 | 77430 | -88% | |; | SparseGridRamificationTopology::position | 644268 | 24473 | -96% | |; | RegularGridTopology::n | 19981966 | 10347192 | -48% | |,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3356#issuecomment-1263555229
https://github.com/sofa-framework/sofa/pull/3356#issuecomment-1263555457:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3356#issuecomment-1263555457
https://github.com/sofa-framework/sofa/pull/3356#issuecomment-1265522619:18,Deployability,pipeline,pipeline,18,"> Note: collision pipeline must be refactored if we want to reduce the ridiculous high number of calls to `getValue`. Every time there is a check between two primitives, there is a `getValue` call to `MechanicalObject::position`, `proximity` and `alarmDistance`. Will be a very funny task to do. . EDIT: CTRL+F on 'getValue()[' shows +1000 hits.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3356#issuecomment-1265522619
https://github.com/sofa-framework/sofa/pull/3356#issuecomment-1265522619:60,Energy Efficiency,reduce,reduce,60,"> Note: collision pipeline must be refactored if we want to reduce the ridiculous high number of calls to `getValue`. Every time there is a check between two primitives, there is a `getValue` call to `MechanicalObject::position`, `proximity` and `alarmDistance`. Will be a very funny task to do. . EDIT: CTRL+F on 'getValue()[' shows +1000 hits.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3356#issuecomment-1265522619
https://github.com/sofa-framework/sofa/pull/3356#issuecomment-1265522619:35,Modifiability,refactor,refactored,35,"> Note: collision pipeline must be refactored if we want to reduce the ridiculous high number of calls to `getValue`. Every time there is a check between two primitives, there is a `getValue` call to `MechanicalObject::position`, `proximity` and `alarmDistance`. Will be a very funny task to do. . EDIT: CTRL+F on 'getValue()[' shows +1000 hits.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3356#issuecomment-1265522619
https://github.com/sofa-framework/sofa/pull/3356#issuecomment-1277432848:379,Energy Efficiency,reduce,reduce,379,"This PR makes me think that msg_info() << ""message"" is in fact something like:; ```cpp; if(notMuted(Base*)); info::queue << ""message""; ```; With notMuted implemented like that:; ```cpp; Base::noMuted() ; { ; f_printLog().getValue(). ; }; ``` ; ; So either we don't use msg_info in loops (which is a good idea by the way, but not easy to track and enforce in our code base) or we reduce the cost of notMuted by using internal caching of the state.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3356#issuecomment-1277432848
https://github.com/sofa-framework/sofa/pull/3356#issuecomment-1277432848:43,Integrability,message,message,43,"This PR makes me think that msg_info() << ""message"" is in fact something like:; ```cpp; if(notMuted(Base*)); info::queue << ""message""; ```; With notMuted implemented like that:; ```cpp; Base::noMuted() ; { ; f_printLog().getValue(). ; }; ``` ; ; So either we don't use msg_info in loops (which is a good idea by the way, but not easy to track and enforce in our code base) or we reduce the cost of notMuted by using internal caching of the state.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3356#issuecomment-1277432848
https://github.com/sofa-framework/sofa/pull/3356#issuecomment-1277432848:125,Integrability,message,message,125,"This PR makes me think that msg_info() << ""message"" is in fact something like:; ```cpp; if(notMuted(Base*)); info::queue << ""message""; ```; With notMuted implemented like that:; ```cpp; Base::noMuted() ; { ; f_printLog().getValue(). ; }; ``` ; ; So either we don't use msg_info in loops (which is a good idea by the way, but not easy to track and enforce in our code base) or we reduce the cost of notMuted by using internal caching of the state.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3356#issuecomment-1277432848
https://github.com/sofa-framework/sofa/pull/3356#issuecomment-1277432848:115,Performance,queue,queue,115,"This PR makes me think that msg_info() << ""message"" is in fact something like:; ```cpp; if(notMuted(Base*)); info::queue << ""message""; ```; With notMuted implemented like that:; ```cpp; Base::noMuted() ; { ; f_printLog().getValue(). ; }; ``` ; ; So either we don't use msg_info in loops (which is a good idea by the way, but not easy to track and enforce in our code base) or we reduce the cost of notMuted by using internal caching of the state.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3356#issuecomment-1277432848
https://github.com/sofa-framework/sofa/pull/3357#issuecomment-1308044879:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3357#issuecomment-1308044879
https://github.com/sofa-framework/sofa/pull/3357#issuecomment-1313912926:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3357#issuecomment-1313912926
https://github.com/sofa-framework/sofa/pull/3357#issuecomment-1324955776:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3357#issuecomment-1324955776
https://github.com/sofa-framework/sofa/pull/3358#issuecomment-1266741425:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3358#issuecomment-1266741425
https://github.com/sofa-framework/sofa/pull/3358#issuecomment-1275425441:183,Testability,log,logs,183,Giving more info: it was not supported for Ubuntu2004 while I implemented this feature in BeamAdapter. https://github.com/sofa-framework/BeamAdapter/actions/runs/2880398323; (no more logs unfortunately),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3358#issuecomment-1275425441
https://github.com/sofa-framework/sofa/pull/3359#issuecomment-1267755068:23,Deployability,install,install,23,"The CI does not try to install the resulting build... so did you try to make the target ""INSTALL"" ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3359#issuecomment-1267755068
https://github.com/sofa-framework/sofa/pull/3359#issuecomment-1267755068:89,Deployability,INSTALL,INSTALL,89,"The CI does not try to install the resulting build... so did you try to make the target ""INSTALL"" ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3359#issuecomment-1267755068
https://github.com/sofa-framework/sofa/pull/3359#issuecomment-1268330146:25,Deployability,install,install,25,"> The CI does not try to install the resulting build... so did you try to make the target ""INSTALL"" ?. I don't understand",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3359#issuecomment-1268330146
https://github.com/sofa-framework/sofa/pull/3359#issuecomment-1268330146:91,Deployability,INSTALL,INSTALL,91,"> The CI does not try to install the resulting build... so did you try to make the target ""INSTALL"" ?. I don't understand",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3359#issuecomment-1268330146
https://github.com/sofa-framework/sofa/pull/3359#issuecomment-1270972063:318,Availability,error,error,318,"> > The CI does not try to install the resulting build... so did you try to make the target ""INSTALL"" ?; > ; > I don't understand. Your cmake change is mostly affecting the install process, which is not tested on the CI... so did you try to install your current build ? ( to be sure that the change does not incur any error)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3359#issuecomment-1270972063
https://github.com/sofa-framework/sofa/pull/3359#issuecomment-1270972063:27,Deployability,install,install,27,"> > The CI does not try to install the resulting build... so did you try to make the target ""INSTALL"" ?; > ; > I don't understand. Your cmake change is mostly affecting the install process, which is not tested on the CI... so did you try to install your current build ? ( to be sure that the change does not incur any error)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3359#issuecomment-1270972063
https://github.com/sofa-framework/sofa/pull/3359#issuecomment-1270972063:93,Deployability,INSTALL,INSTALL,93,"> > The CI does not try to install the resulting build... so did you try to make the target ""INSTALL"" ?; > ; > I don't understand. Your cmake change is mostly affecting the install process, which is not tested on the CI... so did you try to install your current build ? ( to be sure that the change does not incur any error)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3359#issuecomment-1270972063
https://github.com/sofa-framework/sofa/pull/3359#issuecomment-1270972063:173,Deployability,install,install,173,"> > The CI does not try to install the resulting build... so did you try to make the target ""INSTALL"" ?; > ; > I don't understand. Your cmake change is mostly affecting the install process, which is not tested on the CI... so did you try to install your current build ? ( to be sure that the change does not incur any error)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3359#issuecomment-1270972063
https://github.com/sofa-framework/sofa/pull/3359#issuecomment-1270972063:241,Deployability,install,install,241,"> > The CI does not try to install the resulting build... so did you try to make the target ""INSTALL"" ?; > ; > I don't understand. Your cmake change is mostly affecting the install process, which is not tested on the CI... so did you try to install your current build ? ( to be sure that the change does not incur any error)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3359#issuecomment-1270972063
https://github.com/sofa-framework/sofa/pull/3359#issuecomment-1270972063:203,Testability,test,tested,203,"> > The CI does not try to install the resulting build... so did you try to make the target ""INSTALL"" ?; > ; > I don't understand. Your cmake change is mostly affecting the install process, which is not tested on the CI... so did you try to install your current build ? ( to be sure that the change does not incur any error)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3359#issuecomment-1270972063
https://github.com/sofa-framework/sofa/pull/3360#issuecomment-1267742881:51,Availability,avail,available,51,"I dont think the fix is good ; the ""toMatrix()"" is available for Mat3x3 but not for Mat4x4 (there was a ` toMatrix` for Mat4x4 but it was deleted and replace with `toHomogenousMatrix()` ).; This RigidCoord::toMatrix() is templated on the Mat type actually, and is really ill-formed (no assert on the size of the given matrix, etc).; I think the solution is to either:; - test if the matrix is 3x3 or 4x4 (and failed to compile with a message with a static assert) and calling the respective ` toMatrix()` or ` toHomogenousMatrix ()` ; - or remove the template, force it to Mat3x3 and create an other `toHomogenousMatrix` in RigidCoord. Consisntent with Quat but duplicating code and breaking. I am more for the first solution. > Thanks for your contribution. I wonder how it was not detected before. I guess this was not detected before because nobody was calling RigidCoord::toMatrix with a Mat4x4 with the code compiled on the CI. Actually, nobody calls RigidCoord::toMatrix, either with mat3 or mat4 apparently.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3360#issuecomment-1267742881
https://github.com/sofa-framework/sofa/pull/3360#issuecomment-1267742881:434,Integrability,message,message,434,"I dont think the fix is good ; the ""toMatrix()"" is available for Mat3x3 but not for Mat4x4 (there was a ` toMatrix` for Mat4x4 but it was deleted and replace with `toHomogenousMatrix()` ).; This RigidCoord::toMatrix() is templated on the Mat type actually, and is really ill-formed (no assert on the size of the given matrix, etc).; I think the solution is to either:; - test if the matrix is 3x3 or 4x4 (and failed to compile with a message with a static assert) and calling the respective ` toMatrix()` or ` toHomogenousMatrix ()` ; - or remove the template, force it to Mat3x3 and create an other `toHomogenousMatrix` in RigidCoord. Consisntent with Quat but duplicating code and breaking. I am more for the first solution. > Thanks for your contribution. I wonder how it was not detected before. I guess this was not detected before because nobody was calling RigidCoord::toMatrix with a Mat4x4 with the code compiled on the CI. Actually, nobody calls RigidCoord::toMatrix, either with mat3 or mat4 apparently.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3360#issuecomment-1267742881
https://github.com/sofa-framework/sofa/pull/3360#issuecomment-1267742881:783,Safety,detect,detected,783,"I dont think the fix is good ; the ""toMatrix()"" is available for Mat3x3 but not for Mat4x4 (there was a ` toMatrix` for Mat4x4 but it was deleted and replace with `toHomogenousMatrix()` ).; This RigidCoord::toMatrix() is templated on the Mat type actually, and is really ill-formed (no assert on the size of the given matrix, etc).; I think the solution is to either:; - test if the matrix is 3x3 or 4x4 (and failed to compile with a message with a static assert) and calling the respective ` toMatrix()` or ` toHomogenousMatrix ()` ; - or remove the template, force it to Mat3x3 and create an other `toHomogenousMatrix` in RigidCoord. Consisntent with Quat but duplicating code and breaking. I am more for the first solution. > Thanks for your contribution. I wonder how it was not detected before. I guess this was not detected before because nobody was calling RigidCoord::toMatrix with a Mat4x4 with the code compiled on the CI. Actually, nobody calls RigidCoord::toMatrix, either with mat3 or mat4 apparently.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3360#issuecomment-1267742881
https://github.com/sofa-framework/sofa/pull/3360#issuecomment-1267742881:821,Safety,detect,detected,821,"I dont think the fix is good ; the ""toMatrix()"" is available for Mat3x3 but not for Mat4x4 (there was a ` toMatrix` for Mat4x4 but it was deleted and replace with `toHomogenousMatrix()` ).; This RigidCoord::toMatrix() is templated on the Mat type actually, and is really ill-formed (no assert on the size of the given matrix, etc).; I think the solution is to either:; - test if the matrix is 3x3 or 4x4 (and failed to compile with a message with a static assert) and calling the respective ` toMatrix()` or ` toHomogenousMatrix ()` ; - or remove the template, force it to Mat3x3 and create an other `toHomogenousMatrix` in RigidCoord. Consisntent with Quat but duplicating code and breaking. I am more for the first solution. > Thanks for your contribution. I wonder how it was not detected before. I guess this was not detected before because nobody was calling RigidCoord::toMatrix with a Mat4x4 with the code compiled on the CI. Actually, nobody calls RigidCoord::toMatrix, either with mat3 or mat4 apparently.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3360#issuecomment-1267742881
https://github.com/sofa-framework/sofa/pull/3360#issuecomment-1267742881:286,Testability,assert,assert,286,"I dont think the fix is good ; the ""toMatrix()"" is available for Mat3x3 but not for Mat4x4 (there was a ` toMatrix` for Mat4x4 but it was deleted and replace with `toHomogenousMatrix()` ).; This RigidCoord::toMatrix() is templated on the Mat type actually, and is really ill-formed (no assert on the size of the given matrix, etc).; I think the solution is to either:; - test if the matrix is 3x3 or 4x4 (and failed to compile with a message with a static assert) and calling the respective ` toMatrix()` or ` toHomogenousMatrix ()` ; - or remove the template, force it to Mat3x3 and create an other `toHomogenousMatrix` in RigidCoord. Consisntent with Quat but duplicating code and breaking. I am more for the first solution. > Thanks for your contribution. I wonder how it was not detected before. I guess this was not detected before because nobody was calling RigidCoord::toMatrix with a Mat4x4 with the code compiled on the CI. Actually, nobody calls RigidCoord::toMatrix, either with mat3 or mat4 apparently.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3360#issuecomment-1267742881
https://github.com/sofa-framework/sofa/pull/3360#issuecomment-1267742881:371,Testability,test,test,371,"I dont think the fix is good ; the ""toMatrix()"" is available for Mat3x3 but not for Mat4x4 (there was a ` toMatrix` for Mat4x4 but it was deleted and replace with `toHomogenousMatrix()` ).; This RigidCoord::toMatrix() is templated on the Mat type actually, and is really ill-formed (no assert on the size of the given matrix, etc).; I think the solution is to either:; - test if the matrix is 3x3 or 4x4 (and failed to compile with a message with a static assert) and calling the respective ` toMatrix()` or ` toHomogenousMatrix ()` ; - or remove the template, force it to Mat3x3 and create an other `toHomogenousMatrix` in RigidCoord. Consisntent with Quat but duplicating code and breaking. I am more for the first solution. > Thanks for your contribution. I wonder how it was not detected before. I guess this was not detected before because nobody was calling RigidCoord::toMatrix with a Mat4x4 with the code compiled on the CI. Actually, nobody calls RigidCoord::toMatrix, either with mat3 or mat4 apparently.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3360#issuecomment-1267742881
https://github.com/sofa-framework/sofa/pull/3360#issuecomment-1267742881:456,Testability,assert,assert,456,"I dont think the fix is good ; the ""toMatrix()"" is available for Mat3x3 but not for Mat4x4 (there was a ` toMatrix` for Mat4x4 but it was deleted and replace with `toHomogenousMatrix()` ).; This RigidCoord::toMatrix() is templated on the Mat type actually, and is really ill-formed (no assert on the size of the given matrix, etc).; I think the solution is to either:; - test if the matrix is 3x3 or 4x4 (and failed to compile with a message with a static assert) and calling the respective ` toMatrix()` or ` toHomogenousMatrix ()` ; - or remove the template, force it to Mat3x3 and create an other `toHomogenousMatrix` in RigidCoord. Consisntent with Quat but duplicating code and breaking. I am more for the first solution. > Thanks for your contribution. I wonder how it was not detected before. I guess this was not detected before because nobody was calling RigidCoord::toMatrix with a Mat4x4 with the code compiled on the CI. Actually, nobody calls RigidCoord::toMatrix, either with mat3 or mat4 apparently.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3360#issuecomment-1267742881
https://github.com/sofa-framework/sofa/pull/3366#issuecomment-1271792799:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3366#issuecomment-1271792799
https://github.com/sofa-framework/sofa/pull/3366#issuecomment-1272895824:13,Availability,error,error,13,"There is one error on the dashboard:; https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3366/CI_CONFIG=windows_vs2019,CI_PLUGINS=options,CI_TYPE=release/2/testReport/SceneTests/applications_plugins_ArticulatedSystemPlugin_examples_ArticulatedArm/robot_py/. do you think it is linked to your change or is it a blinking error on the CI?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3366#issuecomment-1272895824
https://github.com/sofa-framework/sofa/pull/3366#issuecomment-1272895824:326,Availability,error,error,326,"There is one error on the dashboard:; https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3366/CI_CONFIG=windows_vs2019,CI_PLUGINS=options,CI_TYPE=release/2/testReport/SceneTests/applications_plugins_ArticulatedSystemPlugin_examples_ArticulatedArm/robot_py/. do you think it is linked to your change or is it a blinking error on the CI?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3366#issuecomment-1272895824
https://github.com/sofa-framework/sofa/pull/3366#issuecomment-1272895824:153,Deployability,release,release,153,"There is one error on the dashboard:; https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3366/CI_CONFIG=windows_vs2019,CI_PLUGINS=options,CI_TYPE=release/2/testReport/SceneTests/applications_plugins_ArticulatedSystemPlugin_examples_ArticulatedArm/robot_py/. do you think it is linked to your change or is it a blinking error on the CI?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3366#issuecomment-1272895824
https://github.com/sofa-framework/sofa/pull/3366#issuecomment-1272895824:163,Testability,test,testReport,163,"There is one error on the dashboard:; https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3366/CI_CONFIG=windows_vs2019,CI_PLUGINS=options,CI_TYPE=release/2/testReport/SceneTests/applications_plugins_ArticulatedSystemPlugin_examples_ArticulatedArm/robot_py/. do you think it is linked to your change or is it a blinking error on the CI?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3366#issuecomment-1272895824
https://github.com/sofa-framework/sofa/pull/3366#issuecomment-1274163430:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3366#issuecomment-1274163430
https://github.com/sofa-framework/sofa/pull/3367#issuecomment-1271587630:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #1](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3367/1/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/37**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 07f2a8ca62ca896036a0812dabf15b9e1676ea2c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3367#issuecomment-1271587630
https://github.com/sofa-framework/sofa/pull/3367#issuecomment-1271587630:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #1](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3367/1/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/37**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 07f2a8ca62ca896036a0812dabf15b9e1676ea2c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3367#issuecomment-1271587630
https://github.com/sofa-framework/sofa/pull/3367#issuecomment-1271792977:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3367#issuecomment-1271792977
https://github.com/sofa-framework/sofa/pull/3367#issuecomment-1271793094:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3367/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/37**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 07f2a8ca62ca896036a0812dabf15b9e1676ea2c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3367#issuecomment-1271793094
https://github.com/sofa-framework/sofa/pull/3367#issuecomment-1271793094:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3367/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/37**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 07f2a8ca62ca896036a0812dabf15b9e1676ea2c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3367#issuecomment-1271793094
https://github.com/sofa-framework/sofa/pull/3367#issuecomment-1272876179:199,Energy Efficiency,Adapt,AdaptiveBeamForceFieldAndMass,199,"I don't know about the status of this component, but I just want to keep the compatibility with this component in my matrix refactoring branch. Note that there is a similar component in BeamAdapter: AdaptiveBeamForceFieldAndMass",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3367#issuecomment-1272876179
https://github.com/sofa-framework/sofa/pull/3367#issuecomment-1272876179:124,Modifiability,refactor,refactoring,124,"I don't know about the status of this component, but I just want to keep the compatibility with this component in my matrix refactoring branch. Note that there is a similar component in BeamAdapter: AdaptiveBeamForceFieldAndMass",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3367#issuecomment-1272876179
https://github.com/sofa-framework/sofa/pull/3367#issuecomment-1272876179:199,Modifiability,Adapt,AdaptiveBeamForceFieldAndMass,199,"I don't know about the status of this component, but I just want to keep the compatibility with this component in my matrix refactoring branch. Note that there is a similar component in BeamAdapter: AdaptiveBeamForceFieldAndMass",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3367#issuecomment-1272876179
https://github.com/sofa-framework/sofa/pull/3367#issuecomment-1276706241:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3367#issuecomment-1276706241
https://github.com/sofa-framework/sofa/pull/3367#issuecomment-1276706382:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3367/3/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3367#issuecomment-1276706382
https://github.com/sofa-framework/sofa/pull/3367#issuecomment-1276706382:121,Integrability,depend,dependencies,121,**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3367/3/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3367#issuecomment-1276706382
https://github.com/sofa-framework/sofa/pull/3367#issuecomment-1276706382:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3367/3/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3367#issuecomment-1276706382
https://github.com/sofa-framework/sofa/pull/3368#issuecomment-1272318385:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3368#issuecomment-1272318385
https://github.com/sofa-framework/sofa/pull/3368#issuecomment-1283399804:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3368#issuecomment-1283399804
https://github.com/sofa-framework/sofa/pull/3368#issuecomment-1283720918:0,Testability,TEst,TEst,0,TEst to fix,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3368#issuecomment-1283720918
https://github.com/sofa-framework/sofa/pull/3368#issuecomment-1297323487:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3368#issuecomment-1297323487
https://github.com/sofa-framework/sofa/pull/3368#issuecomment-2046075012:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3368#issuecomment-2046075012
https://github.com/sofa-framework/sofa/pull/3368#issuecomment-2061113394:4,Testability,test,tests,4,"All tests not working are due to input mesh with an inconstant input mesh.; Like Quad without edges, or list of quads and edges only on border, etc... what should we do?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3368#issuecomment-2061113394
https://github.com/sofa-framework/sofa/pull/3368#issuecomment-2331345939:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3368#issuecomment-2331345939
https://github.com/sofa-framework/sofa/pull/3368#issuecomment-2440175218:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3368#issuecomment-2440175218
https://github.com/sofa-framework/sofa/pull/3369#issuecomment-1272392120:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3369#issuecomment-1272392120
https://github.com/sofa-framework/sofa/pull/3369#issuecomment-1282850263:5,Testability,test,tests,5,"Unit tests are failing, but are these maybe fixed in previous PR? @epernod",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3369#issuecomment-1282850263
https://github.com/sofa-framework/sofa/pull/3369#issuecomment-1283400051:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3369#issuecomment-1283400051
https://github.com/sofa-framework/sofa/pull/3369#issuecomment-1285435724:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3369#issuecomment-1285435724
https://github.com/sofa-framework/sofa/pull/3369#issuecomment-1291278268:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3369#issuecomment-1291278268
https://github.com/sofa-framework/sofa/pull/3373#issuecomment-1273204237:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3373#issuecomment-1273204237
https://github.com/sofa-framework/sofa/pull/3373#issuecomment-1282121100:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3373#issuecomment-1282121100
https://github.com/sofa-framework/sofa/pull/3376#issuecomment-1276035369:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3376#issuecomment-1276035369
https://github.com/sofa-framework/sofa/pull/3380#issuecomment-1277567674:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3380#issuecomment-1277567674
https://github.com/sofa-framework/sofa/pull/3382#issuecomment-1277173379:38,Testability,test,tests,38,[ci-build][force-full-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3382#issuecomment-1277173379
https://github.com/sofa-framework/sofa/pull/3382#issuecomment-1277254445:125,Deployability,configurat,configuration,125,My hero! It was so frustrating to use cmake on SOFA (on Windows). Thanks a lot!. Could you tell me how you profile the cmake configuration?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3382#issuecomment-1277254445
https://github.com/sofa-framework/sofa/pull/3382#issuecomment-1277254445:125,Modifiability,config,configuration,125,My hero! It was so frustrating to use cmake on SOFA (on Windows). Thanks a lot!. Could you tell me how you profile the cmake configuration?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3382#issuecomment-1277254445
https://github.com/sofa-framework/sofa/pull/3382#issuecomment-1277266711:133,Deployability,configurat,configuration,133,> My hero! It was so frustrating to use cmake on SOFA (on Windows). Thanks a lot!; > ; > Could you tell me how you profile the cmake configuration?. https://github.com/sofa-framework/sofa/issues/1838 ü•≥,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3382#issuecomment-1277266711
https://github.com/sofa-framework/sofa/pull/3382#issuecomment-1277266711:133,Modifiability,config,configuration,133,> My hero! It was so frustrating to use cmake on SOFA (on Windows). Thanks a lot!; > ; > Could you tell me how you profile the cmake configuration?. https://github.com/sofa-framework/sofa/issues/1838 ü•≥,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3382#issuecomment-1277266711
https://github.com/sofa-framework/sofa/pull/3382#issuecomment-1277302677:14,Deployability,configurat,configuration,14,I confirm the configuration is way faster. Still too slow on Windows though. Thanks,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3382#issuecomment-1277302677
https://github.com/sofa-framework/sofa/pull/3382#issuecomment-1277302677:14,Modifiability,config,configuration,14,I confirm the configuration is way faster. Still too slow on Windows though. Thanks,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3382#issuecomment-1277302677
https://github.com/sofa-framework/sofa/pull/3383#issuecomment-1277611577:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3383#issuecomment-1277611577
https://github.com/sofa-framework/sofa/pull/3386#issuecomment-1279265260:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3386#issuecomment-1279265260
https://github.com/sofa-framework/sofa/pull/3390#issuecomment-1279968518:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3390#issuecomment-1279968518
https://github.com/sofa-framework/sofa/pull/3391#issuecomment-1279968543:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3391#issuecomment-1279968543
https://github.com/sofa-framework/sofa/pull/3392#issuecomment-1279968557:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3392#issuecomment-1279968557
https://github.com/sofa-framework/sofa/pull/3392#issuecomment-1281979036:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3392#issuecomment-1281979036
https://github.com/sofa-framework/sofa/pull/3392#issuecomment-1282853040:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3392#issuecomment-1282853040
https://github.com/sofa-framework/sofa/pull/3392#issuecomment-1282853484:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3392#issuecomment-1282853484
https://github.com/sofa-framework/sofa/pull/3393#issuecomment-1279968591:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3393#issuecomment-1279968591
https://github.com/sofa-framework/sofa/pull/3393#issuecomment-1291756886:38,Testability,test,tests,38,[ci-build][force-full-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3393#issuecomment-1291756886
https://github.com/sofa-framework/sofa/pull/3393#issuecomment-1293166614:327,Deployability,release,release,327,"The crash in distanceFieldFilter.scn is no longer here. It makes sense because this PR has nothing to do with the crashing code (but we never know...). Another crash on Windows appeared, but it is also on master (https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=windows_vs2019,CI_PLUGINS=options,CI_TYPE=release/3949/testReport/SceneTests/). So I think this PR is ready to be reviewed.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3393#issuecomment-1293166614
https://github.com/sofa-framework/sofa/pull/3393#issuecomment-1293166614:340,Testability,test,testReport,340,"The crash in distanceFieldFilter.scn is no longer here. It makes sense because this PR has nothing to do with the crashing code (but we never know...). Another crash on Windows appeared, but it is also on master (https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=windows_vs2019,CI_PLUGINS=options,CI_TYPE=release/3949/testReport/SceneTests/). So I think this PR is ready to be reviewed.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3393#issuecomment-1293166614
https://github.com/sofa-framework/sofa/pull/3393#issuecomment-1295131084:26,Testability,test,test,26,"the image distance filter test is un-related, so let's pass it to ready right @fredroy",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3393#issuecomment-1295131084
https://github.com/sofa-framework/sofa/pull/3393#issuecomment-1295318906:28,Testability,test,test,28,"> the image distance filter test is un-related, so let's pass it to ready right @fredroy. yep, ready !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3393#issuecomment-1295318906
https://github.com/sofa-framework/sofa/pull/3396#issuecomment-1280424892:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3396#issuecomment-1280424892
https://github.com/sofa-framework/sofa/pull/3398#issuecomment-1281797252:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3398#issuecomment-1281797252
https://github.com/sofa-framework/sofa/pull/3399#issuecomment-1282119908:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3399#issuecomment-1282119908
https://github.com/sofa-framework/sofa/pull/3400#issuecomment-1282001758:138,Safety,avoid,avoid,138,"You don't need to add checks, later in the code for: ; d_componentState.getValue() == sofa::core::objectmodel::ComponentState::Valid . to avoid crash?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3400#issuecomment-1282001758
https://github.com/sofa-framework/sofa/pull/3400#issuecomment-1282012318:143,Safety,avoid,avoid,143,"> You don't need to add checks, later in the code for: d_componentState.getValue() == sofa::core::objectmodel::ComponentState::Valid; > ; > to avoid crash?. I only have a partial answer:; I tested one time step and it works. I suppose it is because the initialization defines the topology. If the topology is empty, I guess that the later functions just don't iterate over the elements. But it's just a guess.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3400#issuecomment-1282012318
https://github.com/sofa-framework/sofa/pull/3400#issuecomment-1282012318:190,Testability,test,tested,190,"> You don't need to add checks, later in the code for: d_componentState.getValue() == sofa::core::objectmodel::ComponentState::Valid; > ; > to avoid crash?. I only have a partial answer:; I tested one time step and it works. I suppose it is because the initialization defines the topology. If the topology is empty, I guess that the later functions just don't iterate over the elements. But it's just a guess.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3400#issuecomment-1282012318
https://github.com/sofa-framework/sofa/pull/3400#issuecomment-1282019824:49,Availability,error,error,49,"ok, as long as it doesn't crash and the user has error message. üëç",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3400#issuecomment-1282019824
https://github.com/sofa-framework/sofa/pull/3400#issuecomment-1282019824:55,Integrability,message,message,55,"ok, as long as it doesn't crash and the user has error message. üëç",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3400#issuecomment-1282019824
https://github.com/sofa-framework/sofa/pull/3400#issuecomment-1282119538:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3400#issuecomment-1282119538
https://github.com/sofa-framework/sofa/pull/3401#issuecomment-1282074466:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3401#issuecomment-1282074466
https://github.com/sofa-framework/sofa/pull/3401#issuecomment-1285131009:258,Performance,perform,performances,258,"+1 for tracing compiler's time (and thus template instanciation and .h parsing) and fixing things. ; 15 sec of compiler time on a 8 core machine is actually (8*15 sec)), this is quite significant :) . Could you verify that the change didn't not decrease the performances (maybe we should have for each .h tp .cpp of core class a small benchmark to asses the performacne difference). On my side I'm still very surprised that all the move we are doing in removing code from .h to put them into dedicated translation unit has so limited impact on performances. To me either the compiler's are very good nowaydays (thanks to GO/IPO/LTO) or a lot of code was not optimized because of our code architecture (eg: no final keyworkd in overriden method preventing optimization).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3401#issuecomment-1285131009
https://github.com/sofa-framework/sofa/pull/3401#issuecomment-1285131009:358,Performance,perform,performacne,358,"+1 for tracing compiler's time (and thus template instanciation and .h parsing) and fixing things. ; 15 sec of compiler time on a 8 core machine is actually (8*15 sec)), this is quite significant :) . Could you verify that the change didn't not decrease the performances (maybe we should have for each .h tp .cpp of core class a small benchmark to asses the performacne difference). On my side I'm still very surprised that all the move we are doing in removing code from .h to put them into dedicated translation unit has so limited impact on performances. To me either the compiler's are very good nowaydays (thanks to GO/IPO/LTO) or a lot of code was not optimized because of our code architecture (eg: no final keyworkd in overriden method preventing optimization).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3401#issuecomment-1285131009
https://github.com/sofa-framework/sofa/pull/3401#issuecomment-1285131009:544,Performance,perform,performances,544,"+1 for tracing compiler's time (and thus template instanciation and .h parsing) and fixing things. ; 15 sec of compiler time on a 8 core machine is actually (8*15 sec)), this is quite significant :) . Could you verify that the change didn't not decrease the performances (maybe we should have for each .h tp .cpp of core class a small benchmark to asses the performacne difference). On my side I'm still very surprised that all the move we are doing in removing code from .h to put them into dedicated translation unit has so limited impact on performances. To me either the compiler's are very good nowaydays (thanks to GO/IPO/LTO) or a lot of code was not optimized because of our code architecture (eg: no final keyworkd in overriden method preventing optimization).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3401#issuecomment-1285131009
https://github.com/sofa-framework/sofa/pull/3401#issuecomment-1285131009:658,Performance,optimiz,optimized,658,"+1 for tracing compiler's time (and thus template instanciation and .h parsing) and fixing things. ; 15 sec of compiler time on a 8 core machine is actually (8*15 sec)), this is quite significant :) . Could you verify that the change didn't not decrease the performances (maybe we should have for each .h tp .cpp of core class a small benchmark to asses the performacne difference). On my side I'm still very surprised that all the move we are doing in removing code from .h to put them into dedicated translation unit has so limited impact on performances. To me either the compiler's are very good nowaydays (thanks to GO/IPO/LTO) or a lot of code was not optimized because of our code architecture (eg: no final keyworkd in overriden method preventing optimization).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3401#issuecomment-1285131009
https://github.com/sofa-framework/sofa/pull/3401#issuecomment-1285131009:755,Performance,optimiz,optimization,755,"+1 for tracing compiler's time (and thus template instanciation and .h parsing) and fixing things. ; 15 sec of compiler time on a 8 core machine is actually (8*15 sec)), this is quite significant :) . Could you verify that the change didn't not decrease the performances (maybe we should have for each .h tp .cpp of core class a small benchmark to asses the performacne difference). On my side I'm still very surprised that all the move we are doing in removing code from .h to put them into dedicated translation unit has so limited impact on performances. To me either the compiler's are very good nowaydays (thanks to GO/IPO/LTO) or a lot of code was not optimized because of our code architecture (eg: no final keyworkd in overriden method preventing optimization).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3401#issuecomment-1285131009
https://github.com/sofa-framework/sofa/pull/3401#issuecomment-1285131009:335,Testability,benchmark,benchmark,335,"+1 for tracing compiler's time (and thus template instanciation and .h parsing) and fixing things. ; 15 sec of compiler time on a 8 core machine is actually (8*15 sec)), this is quite significant :) . Could you verify that the change didn't not decrease the performances (maybe we should have for each .h tp .cpp of core class a small benchmark to asses the performacne difference). On my side I'm still very surprised that all the move we are doing in removing code from .h to put them into dedicated translation unit has so limited impact on performances. To me either the compiler's are very good nowaydays (thanks to GO/IPO/LTO) or a lot of code was not optimized because of our code architecture (eg: no final keyworkd in overriden method preventing optimization).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3401#issuecomment-1285131009
https://github.com/sofa-framework/sofa/pull/3401#issuecomment-1286301742:59,Performance,perform,performances,59,"> Could you verify that the change didn't not decrease the performances (maybe we should have for each .h tp .cpp of core class a small benchmark to asses the performacne difference). In this case, this is a just the map between vecid and string which is normally not really used in performance context (or hopefully not üòÖ) like in the GUI, but I can do a bench if it is really needed. > ; > On my side I'm still very surprised that all the move we are doing in removing code from .h to put them into dedicated translation unit has so limited impact on performances. To me either the compiler's are very good nowaydays (thanks to GO/IPO/LTO) or a lot of code was not optimized because of our code architecture (eg: no final keyworkd in overriden method preventing optimization). At least I can see quite a nice difference LTO/noLTO but I only really do my perf checks on MSVC.; I dont know about the current state of LTO for gcc/clang (ldd, gold, etc)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3401#issuecomment-1286301742
https://github.com/sofa-framework/sofa/pull/3401#issuecomment-1286301742:159,Performance,perform,performacne,159,"> Could you verify that the change didn't not decrease the performances (maybe we should have for each .h tp .cpp of core class a small benchmark to asses the performacne difference). In this case, this is a just the map between vecid and string which is normally not really used in performance context (or hopefully not üòÖ) like in the GUI, but I can do a bench if it is really needed. > ; > On my side I'm still very surprised that all the move we are doing in removing code from .h to put them into dedicated translation unit has so limited impact on performances. To me either the compiler's are very good nowaydays (thanks to GO/IPO/LTO) or a lot of code was not optimized because of our code architecture (eg: no final keyworkd in overriden method preventing optimization). At least I can see quite a nice difference LTO/noLTO but I only really do my perf checks on MSVC.; I dont know about the current state of LTO for gcc/clang (ldd, gold, etc)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3401#issuecomment-1286301742
https://github.com/sofa-framework/sofa/pull/3401#issuecomment-1286301742:283,Performance,perform,performance,283,"> Could you verify that the change didn't not decrease the performances (maybe we should have for each .h tp .cpp of core class a small benchmark to asses the performacne difference). In this case, this is a just the map between vecid and string which is normally not really used in performance context (or hopefully not üòÖ) like in the GUI, but I can do a bench if it is really needed. > ; > On my side I'm still very surprised that all the move we are doing in removing code from .h to put them into dedicated translation unit has so limited impact on performances. To me either the compiler's are very good nowaydays (thanks to GO/IPO/LTO) or a lot of code was not optimized because of our code architecture (eg: no final keyworkd in overriden method preventing optimization). At least I can see quite a nice difference LTO/noLTO but I only really do my perf checks on MSVC.; I dont know about the current state of LTO for gcc/clang (ldd, gold, etc)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3401#issuecomment-1286301742
https://github.com/sofa-framework/sofa/pull/3401#issuecomment-1286301742:553,Performance,perform,performances,553,"> Could you verify that the change didn't not decrease the performances (maybe we should have for each .h tp .cpp of core class a small benchmark to asses the performacne difference). In this case, this is a just the map between vecid and string which is normally not really used in performance context (or hopefully not üòÖ) like in the GUI, but I can do a bench if it is really needed. > ; > On my side I'm still very surprised that all the move we are doing in removing code from .h to put them into dedicated translation unit has so limited impact on performances. To me either the compiler's are very good nowaydays (thanks to GO/IPO/LTO) or a lot of code was not optimized because of our code architecture (eg: no final keyworkd in overriden method preventing optimization). At least I can see quite a nice difference LTO/noLTO but I only really do my perf checks on MSVC.; I dont know about the current state of LTO for gcc/clang (ldd, gold, etc)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3401#issuecomment-1286301742
https://github.com/sofa-framework/sofa/pull/3401#issuecomment-1286301742:667,Performance,optimiz,optimized,667,"> Could you verify that the change didn't not decrease the performances (maybe we should have for each .h tp .cpp of core class a small benchmark to asses the performacne difference). In this case, this is a just the map between vecid and string which is normally not really used in performance context (or hopefully not üòÖ) like in the GUI, but I can do a bench if it is really needed. > ; > On my side I'm still very surprised that all the move we are doing in removing code from .h to put them into dedicated translation unit has so limited impact on performances. To me either the compiler's are very good nowaydays (thanks to GO/IPO/LTO) or a lot of code was not optimized because of our code architecture (eg: no final keyworkd in overriden method preventing optimization). At least I can see quite a nice difference LTO/noLTO but I only really do my perf checks on MSVC.; I dont know about the current state of LTO for gcc/clang (ldd, gold, etc)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3401#issuecomment-1286301742
https://github.com/sofa-framework/sofa/pull/3401#issuecomment-1286301742:764,Performance,optimiz,optimization,764,"> Could you verify that the change didn't not decrease the performances (maybe we should have for each .h tp .cpp of core class a small benchmark to asses the performacne difference). In this case, this is a just the map between vecid and string which is normally not really used in performance context (or hopefully not üòÖ) like in the GUI, but I can do a bench if it is really needed. > ; > On my side I'm still very surprised that all the move we are doing in removing code from .h to put them into dedicated translation unit has so limited impact on performances. To me either the compiler's are very good nowaydays (thanks to GO/IPO/LTO) or a lot of code was not optimized because of our code architecture (eg: no final keyworkd in overriden method preventing optimization). At least I can see quite a nice difference LTO/noLTO but I only really do my perf checks on MSVC.; I dont know about the current state of LTO for gcc/clang (ldd, gold, etc)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3401#issuecomment-1286301742
https://github.com/sofa-framework/sofa/pull/3401#issuecomment-1286301742:136,Testability,benchmark,benchmark,136,"> Could you verify that the change didn't not decrease the performances (maybe we should have for each .h tp .cpp of core class a small benchmark to asses the performacne difference). In this case, this is a just the map between vecid and string which is normally not really used in performance context (or hopefully not üòÖ) like in the GUI, but I can do a bench if it is really needed. > ; > On my side I'm still very surprised that all the move we are doing in removing code from .h to put them into dedicated translation unit has so limited impact on performances. To me either the compiler's are very good nowaydays (thanks to GO/IPO/LTO) or a lot of code was not optimized because of our code architecture (eg: no final keyworkd in overriden method preventing optimization). At least I can see quite a nice difference LTO/noLTO but I only really do my perf checks on MSVC.; I dont know about the current state of LTO for gcc/clang (ldd, gold, etc)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3401#issuecomment-1286301742
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1282242831:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #1](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/1/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ba43756ec0bd9e0bc7d55dae23fd5e08495c9295_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1282242831
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1282242831:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #1](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/1/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ba43756ec0bd9e0bc7d55dae23fd5e08495c9295_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1282242831
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1282269217:22,Testability,test,tests,22,[ci-build][with-scene-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1282269217
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1282269342:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ba43756ec0bd9e0bc7d55dae23fd5e08495c9295_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1282269342
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1282269342:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ba43756ec0bd9e0bc7d55dae23fd5e08495c9295_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1282269342
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1282349471:22,Testability,test,tests,22,"[ci-build][with-scene-tests][force-full-build]. The result of the test show that the scene `advanced_timer.py` is not taken from the PR https://github.com/sofa-framework/SofaPython3/pull/309, but from master.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1282349471
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1282349471:66,Testability,test,test,66,"[ci-build][with-scene-tests][force-full-build]. The result of the test show that the scene `advanced_timer.py` is not taken from the PR https://github.com/sofa-framework/SofaPython3/pull/309, but from master.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1282349471
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1282349834:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ba43756ec0bd9e0bc7d55dae23fd5e08495c9295_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1282349834
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1282349834:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ba43756ec0bd9e0bc7d55dae23fd5e08495c9295_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1282349834
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1282981929:22,Testability,test,tests,22,[ci-build][with-scene-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1282981929
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1282982049:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 7189d1d7d4b92612a2d132d16463719a1d51a739_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1282982049
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1282982049:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 7189d1d7d4b92612a2d132d16463719a1d51a739_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1282982049
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1285479784:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ea1f50b401dab3c896923dfdc9c84d1a573dbe65_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1285479784
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1285479784:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ea1f50b401dab3c896923dfdc9c84d1a573dbe65_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1285479784
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1286958361:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 142fe7139365a9e2f4e651b916055c72e441b6f5_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1286958361
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1286958361:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 142fe7139365a9e2f4e651b916055c72e441b6f5_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1286958361
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1288623320:22,Testability,test,tests,22,[ci-build][with-scene-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1288623320
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1288623603:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/7/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 142fe7139365a9e2f4e651b916055c72e441b6f5_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1288623603
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1288623603:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/7/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 142fe7139365a9e2f4e651b916055c72e441b6f5_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1288623603
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1288761422:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/8/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 142fe7139365a9e2f4e651b916055c72e441b6f5_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1288761422
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1288761422:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/8/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 142fe7139365a9e2f4e651b916055c72e441b6f5_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1288761422
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1288911290:22,Testability,test,tests,22,[ci-build][with-scene-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1288911290
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1288911392:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/9/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e140d59dd11cbfddb7cf8991c6b0043e9204989c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1288911392
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1288911392:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/9/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e140d59dd11cbfddb7cf8991c6b0043e9204989c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1288911392
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1288912041:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e140d59dd11cbfddb7cf8991c6b0043e9204989c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1288912041
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1288912041:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e140d59dd11cbfddb7cf8991c6b0043e9204989c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1288912041
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289124350:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e140d59dd11cbfddb7cf8991c6b0043e9204989c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289124350
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289124350:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e140d59dd11cbfddb7cf8991c6b0043e9204989c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289124350
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289172460:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/12/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e140d59dd11cbfddb7cf8991c6b0043e9204989c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289172460
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289172460:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/12/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e140d59dd11cbfddb7cf8991c6b0043e9204989c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289172460
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289264437:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/13/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e140d59dd11cbfddb7cf8991c6b0043e9204989c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289264437
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289264437:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/13/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e140d59dd11cbfddb7cf8991c6b0043e9204989c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289264437
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289303652:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/14/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e140d59dd11cbfddb7cf8991c6b0043e9204989c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289303652
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289303652:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/14/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e140d59dd11cbfddb7cf8991c6b0043e9204989c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289303652
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289308682:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #15](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/15/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e140d59dd11cbfddb7cf8991c6b0043e9204989c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289308682
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289308682:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #15](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/15/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e140d59dd11cbfddb7cf8991c6b0043e9204989c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289308682
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289350395:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #16](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/16/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e140d59dd11cbfddb7cf8991c6b0043e9204989c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289350395
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289350395:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #16](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/16/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e140d59dd11cbfddb7cf8991c6b0043e9204989c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289350395
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289382970:22,Testability,test,tests,22,[ci-build][with-scene-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289382970
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289383096:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #17](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/17/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e140d59dd11cbfddb7cf8991c6b0043e9204989c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289383096
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289383096:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #17](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/17/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e140d59dd11cbfddb7cf8991c6b0043e9204989c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289383096
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1290052227:22,Testability,test,tests,22,[ci-build][with-scene-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1290052227
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1290052368:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #18](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/18/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e140d59dd11cbfddb7cf8991c6b0043e9204989c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1290052368
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1290052368:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #18](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/18/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e140d59dd11cbfddb7cf8991c6b0043e9204989c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1290052368
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1290113186:22,Testability,test,tests,22,[ci-build][with-scene-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1290113186
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1290113330:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #19](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/19/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e140d59dd11cbfddb7cf8991c6b0043e9204989c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1290113330
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1290113330:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #19](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/19/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e140d59dd11cbfddb7cf8991c6b0043e9204989c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1290113330
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1290198126:22,Testability,test,tests,22,[ci-build][with-scene-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1290198126
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1290198247:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #20](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/20/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e140d59dd11cbfddb7cf8991c6b0043e9204989c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1290198247
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1290198247:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #20](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/20/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e140d59dd11cbfddb7cf8991c6b0043e9204989c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1290198247
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1290539361:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #21](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/21/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e140d59dd11cbfddb7cf8991c6b0043e9204989c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1290539361
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1290539361:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #21](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/21/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e140d59dd11cbfddb7cf8991c6b0043e9204989c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1290539361
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1290593885:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #22](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/22/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e140d59dd11cbfddb7cf8991c6b0043e9204989c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1290593885
https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1290593885:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #22](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/22/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e140d59dd11cbfddb7cf8991c6b0043e9204989c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1290593885
https://github.com/sofa-framework/sofa/pull/3403#issuecomment-1283398498:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3403#issuecomment-1283398498
https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1285150452:56,Availability,error,errors,56,Looks ok to me. EDIT: @alxbilger want to remove the new errors.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1285150452
https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1285232286:22,Testability,test,tests,22,[ci-build][with-scene-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1285232286
https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1286655914:176,Availability,error,error,176,"@fredroy I prefer not adding another implicit complex mechanism for templates. If there are two templates, the user must set 2 templates. If the user set only one, there is an error message containing the list of all available templates. It should give a hint about the fact that there are two templates to provide.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1286655914
https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1286655914:217,Availability,avail,available,217,"@fredroy I prefer not adding another implicit complex mechanism for templates. If there are two templates, the user must set 2 templates. If the user set only one, there is an error message containing the list of all available templates. It should give a hint about the fact that there are two templates to provide.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1286655914
https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1286655914:182,Integrability,message,message,182,"@fredroy I prefer not adding another implicit complex mechanism for templates. If there are two templates, the user must set 2 templates. If the user set only one, there is an error message containing the list of all available templates. It should give a hint about the fact that there are two templates to provide.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1286655914
https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1286744294:38,Testability,test,tests,38,[ci-build][force-full-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1286744294
https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1286744432:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3404/9/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/ManifoldTopologies/pull/6**; _For this build, ManifoldTopologies/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ManifoldTopologies; GIT_TAG 7e63fdff87d8dea05beaa2668fbc84d364404821_; - **Merge or close https://github.com/sofa-framework/Registration/pull/6**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 65155e9985b4b31d24d169fb69f7fd6bab74dfbe_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1286744432
https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1286744432:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3404/9/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/ManifoldTopologies/pull/6**; _For this build, ManifoldTopologies/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ManifoldTopologies; GIT_TAG 7e63fdff87d8dea05beaa2668fbc84d364404821_; - **Merge or close https://github.com/sofa-framework/Registration/pull/6**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 65155e9985b4b31d24d169fb69f7fd6bab74dfbe_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1286744432
https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1286890386:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3404/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/ManifoldTopologies/pull/6**; _For this build, ManifoldTopologies/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ManifoldTopologies; GIT_TAG 1623e8023d58313e5b30e244fb998797e057e352_; - **Merge or close https://github.com/sofa-framework/Registration/pull/6**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 1edd80521f6493f4716a922e5b9f552e4f7e41e6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1286890386
https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1286890386:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3404/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/ManifoldTopologies/pull/6**; _For this build, ManifoldTopologies/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ManifoldTopologies; GIT_TAG 1623e8023d58313e5b30e244fb998797e057e352_; - **Merge or close https://github.com/sofa-framework/Registration/pull/6**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 1edd80521f6493f4716a922e5b9f552e4f7e41e6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1286890386
https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1286932948:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3404/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/ManifoldTopologies/pull/6**; _For this build, ManifoldTopologies/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ManifoldTopologies; GIT_TAG 231198ab18ca3efb8c1042cbc8abbe08c1d89551_; - **Merge or close https://github.com/sofa-framework/Registration/pull/6**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 1edd80521f6493f4716a922e5b9f552e4f7e41e6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1286932948
https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1286932948:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3404/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/ManifoldTopologies/pull/6**; _For this build, ManifoldTopologies/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ManifoldTopologies; GIT_TAG 231198ab18ca3efb8c1042cbc8abbe08c1d89551_; - **Merge or close https://github.com/sofa-framework/Registration/pull/6**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 1edd80521f6493f4716a922e5b9f552e4f7e41e6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1286932948
https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1288716378:281,Availability,avail,available,281,"Some `image` plugin scenes fail because the template used is not compiled in the standard set. It needs the full set. Only the standard set is compiled on the CI. Decision to take:; 1) The failing scenes are ignored on the CI; 2) The failing scenes are modified to use a templated available in the standard set; 3) The CI compiled the full set. I am in favor of the third option, but we already talked about it in https://github.com/sofa-framework/ci/pull/15. It seems to take too much time at the compilation.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1288716378
https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1288716378:13,Modifiability,plugin,plugin,13,"Some `image` plugin scenes fail because the template used is not compiled in the standard set. It needs the full set. Only the standard set is compiled on the CI. Decision to take:; 1) The failing scenes are ignored on the CI; 2) The failing scenes are modified to use a templated available in the standard set; 3) The CI compiled the full set. I am in favor of the third option, but we already talked about it in https://github.com/sofa-framework/ci/pull/15. It seems to take too much time at the compilation.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1288716378
https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1289796406:302,Availability,avail,available,302,"> Some `image` plugin scenes fail because the template used is not compiled in the standard set. It needs the full set. Only the standard set is compiled on the CI.; > ; > Decision to take:; > ; > 1. The failing scenes are ignored on the CI; > ; > 2. The failing scenes are modified to use a templated available in the standard set; > ; > 3. The CI compiled the full set; > ; > ; > I am in favor of the third option, but we already talked about it in [sofa-framework/ci#15](https://github.com/sofa-framework/ci/pull/15). It seems to take too much time at the compilation. I think there is a 4th solution, adding the ImageB type in the ""standard"" set, as it is seems quite important if lots of scenes need it after all",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1289796406
https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1289796406:15,Modifiability,plugin,plugin,15,"> Some `image` plugin scenes fail because the template used is not compiled in the standard set. It needs the full set. Only the standard set is compiled on the CI.; > ; > Decision to take:; > ; > 1. The failing scenes are ignored on the CI; > ; > 2. The failing scenes are modified to use a templated available in the standard set; > ; > 3. The CI compiled the full set; > ; > ; > I am in favor of the third option, but we already talked about it in [sofa-framework/ci#15](https://github.com/sofa-framework/ci/pull/15). It seems to take too much time at the compilation. I think there is a 4th solution, adding the ImageB type in the ""standard"" set, as it is seems quite important if lots of scenes need it after all",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1289796406
https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1290061212:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3404/12/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1290061212
https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1290061212:123,Integrability,depend,dependencies,123,**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3404/12/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1290061212
https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1290061212:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3404/12/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1290061212
https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1290113913:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3404/13/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1290113913
https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1290113913:123,Integrability,depend,dependencies,123,**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3404/13/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1290113913
https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1290113913:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3404/13/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1290113913
https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1290198557:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3404/14/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1290198557
https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1290198557:123,Integrability,depend,dependencies,123,**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3404/14/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1290198557
https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1290198557:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3404/14/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1290198557
https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1290648058:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #15](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3404/15/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1290648058
https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1290648058:123,Integrability,depend,dependencies,123,**[ci-depends-on]** detected during [build #15](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3404/15/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1290648058
https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1290648058:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #15](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3404/15/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1290648058
https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1291771006:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #16](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3404/16/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1291771006
https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1291771006:123,Integrability,depend,dependencies,123,**[ci-depends-on]** detected during [build #16](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3404/16/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1291771006
https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1291771006:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #16](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3404/16/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1291771006
https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1291917855:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #17](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3404/17/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1291917855
https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1291917855:123,Integrability,depend,dependencies,123,**[ci-depends-on]** detected during [build #17](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3404/17/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1291917855
https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1291917855:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #17](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3404/17/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1291917855
https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1308889546:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #18](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3404/18/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1308889546
https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1308889546:123,Integrability,depend,dependencies,123,**[ci-depends-on]** detected during [build #18](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3404/18/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1308889546
https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1308889546:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #18](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3404/18/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1308889546
https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1308890438:22,Testability,test,tests,22,[ci-build][with-scene-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1308890438
https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1308890832:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #19](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3404/19/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1308890832
https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1308890832:123,Integrability,depend,dependencies,123,**[ci-depends-on]** detected during [build #19](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3404/19/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1308890832
https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1308890832:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #19](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3404/19/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1308890832
https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1309104343:38,Testability,test,tests,38,[ci-build][force-full-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1309104343
https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1309722747:38,Testability,test,tests,38,[ci-build][force-full-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1309722747
https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1311061497:23,Testability,test,tests,23,"Conflicts were solved, tests are OK, and it has been long enough this PR is opened;ready to merge",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1311061497
https://github.com/sofa-framework/sofa/pull/3406#issuecomment-1286295051:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3406#issuecomment-1286295051
https://github.com/sofa-framework/sofa/pull/3407#issuecomment-1285437613:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3407#issuecomment-1285437613
https://github.com/sofa-framework/sofa/pull/3408#issuecomment-1285442338:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3408#issuecomment-1285442338
https://github.com/sofa-framework/sofa/pull/3412#issuecomment-1288098257:25,Usability,clear,clear,25,nice job and thx for the clear PR explanation,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3412#issuecomment-1288098257
https://github.com/sofa-framework/sofa/pull/3417#issuecomment-1288511222:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3417#issuecomment-1288511222
https://github.com/sofa-framework/sofa/pull/3418#issuecomment-1291773066:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3418#issuecomment-1291773066
https://github.com/sofa-framework/sofa/pull/3422#issuecomment-1289616909:22,Testability,test,tests,22,[ci-build][with-scene-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3422#issuecomment-1289616909
https://github.com/sofa-framework/sofa/pull/3422#issuecomment-1290420299:22,Testability,test,tests,22,[ci-build][with-scene-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3422#issuecomment-1290420299
https://github.com/sofa-framework/sofa/pull/3422#issuecomment-1291804586:285,Availability,avail,available,285,"Indeed. It would be interesting to know why. But I can see that the `thread_local` version did not stay long (4 hours). From https://github.com/sofa-framework/sofa/pull/792, I can see that the compilation failed when `thread_local` was introduced. And the compilation log is no longer available. But you can see now that the compilation succeeds. I guess that at the time the compilation failed because of old version of the compilers. And it is no longer a problem now.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3422#issuecomment-1291804586
https://github.com/sofa-framework/sofa/pull/3422#issuecomment-1291804586:268,Testability,log,log,268,"Indeed. It would be interesting to know why. But I can see that the `thread_local` version did not stay long (4 hours). From https://github.com/sofa-framework/sofa/pull/792, I can see that the compilation failed when `thread_local` was introduced. And the compilation log is no longer available. But you can see now that the compilation succeeds. I guess that at the time the compilation failed because of old version of the compilers. And it is no longer a problem now.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3422#issuecomment-1291804586
https://github.com/sofa-framework/sofa/pull/3424#issuecomment-1291603671:22,Testability,test,tests,22,[ci-build][with-scene-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3424#issuecomment-1291603671
https://github.com/sofa-framework/sofa/pull/3424#issuecomment-1308450688:73,Modifiability,refactor,refactoring,73,"Not sure it solves any problem and it might degrade performances. A full refactoring of AdvancedTimer should be the objective to make it simple, thread-safe and shiny!",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3424#issuecomment-1308450688
https://github.com/sofa-framework/sofa/pull/3424#issuecomment-1308450688:52,Performance,perform,performances,52,"Not sure it solves any problem and it might degrade performances. A full refactoring of AdvancedTimer should be the objective to make it simple, thread-safe and shiny!",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3424#issuecomment-1308450688
https://github.com/sofa-framework/sofa/pull/3424#issuecomment-1308450688:152,Safety,safe,safe,152,"Not sure it solves any problem and it might degrade performances. A full refactoring of AdvancedTimer should be the objective to make it simple, thread-safe and shiny!",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3424#issuecomment-1308450688
https://github.com/sofa-framework/sofa/pull/3424#issuecomment-1308450688:137,Usability,simpl,simple,137,"Not sure it solves any problem and it might degrade performances. A full refactoring of AdvancedTimer should be the objective to make it simple, thread-safe and shiny!",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3424#issuecomment-1308450688
https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1296256287:89,Deployability,configurat,configuration,89,Could you share your CMakeCache.txt please @MingshanHe ?; It could be related to your Qt configuration,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1296256287
https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1296256287:89,Modifiability,config,configuration,89,Could you share your CMakeCache.txt please @MingshanHe ?; It could be related to your Qt configuration,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1296256287
https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1302025698:36,Deployability,configurat,configuration,36,"@hugtalbot Yes, It is related to QT configuration, and It's hard to build in MAC M2 Processor with. I tried to compile and install the qt with source code, but it is not adapted to my laptop. I hope the successful case can be provided if possible and I will follow it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1302025698
https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1302025698:123,Deployability,install,install,123,"@hugtalbot Yes, It is related to QT configuration, and It's hard to build in MAC M2 Processor with. I tried to compile and install the qt with source code, but it is not adapted to my laptop. I hope the successful case can be provided if possible and I will follow it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1302025698
https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1302025698:170,Energy Efficiency,adapt,adapted,170,"@hugtalbot Yes, It is related to QT configuration, and It's hard to build in MAC M2 Processor with. I tried to compile and install the qt with source code, but it is not adapted to my laptop. I hope the successful case can be provided if possible and I will follow it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1302025698
https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1302025698:36,Modifiability,config,configuration,36,"@hugtalbot Yes, It is related to QT configuration, and It's hard to build in MAC M2 Processor with. I tried to compile and install the qt with source code, but it is not adapted to my laptop. I hope the successful case can be provided if possible and I will follow it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1302025698
https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1302025698:170,Modifiability,adapt,adapted,170,"@hugtalbot Yes, It is related to QT configuration, and It's hard to build in MAC M2 Processor with. I tried to compile and install the qt with source code, but it is not adapted to my laptop. I hope the successful case can be provided if possible and I will follow it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1302025698
https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1371935246:32,Deployability,install,install,32,"When you are working on Mac M1, install Qt5 using ` brew install qt@5`, avoid using the official version. @caimingxue @MingshanHe",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1371935246
https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1371935246:57,Deployability,install,install,57,"When you are working on Mac M1, install Qt5 using ` brew install qt@5`, avoid using the official version. @caimingxue @MingshanHe",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1371935246
https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1371935246:72,Safety,avoid,avoid,72,"When you are working on Mac M1, install Qt5 using ` brew install qt@5`, avoid using the official version. @caimingxue @MingshanHe",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1371935246
https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1371939008:109,Availability,ERROR,ERROR,109,"@adagolodjo , I drop the official version, and use the brew install qt@5. When I compile in the Cmake-GUI. ; ERROR OCCURS:; CMake Error at Sofa/GUI/Qt/CMakeLists.txt:28 (message):; Sofa.GUI.Qt: Could not find either Qt5 or Qt6.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1371939008
https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1371939008:130,Availability,Error,Error,130,"@adagolodjo , I drop the official version, and use the brew install qt@5. When I compile in the Cmake-GUI. ; ERROR OCCURS:; CMake Error at Sofa/GUI/Qt/CMakeLists.txt:28 (message):; Sofa.GUI.Qt: Could not find either Qt5 or Qt6.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1371939008
https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1371939008:60,Deployability,install,install,60,"@adagolodjo , I drop the official version, and use the brew install qt@5. When I compile in the Cmake-GUI. ; ERROR OCCURS:; CMake Error at Sofa/GUI/Qt/CMakeLists.txt:28 (message):; Sofa.GUI.Qt: Could not find either Qt5 or Qt6.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1371939008
https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1371939008:170,Integrability,message,message,170,"@adagolodjo , I drop the official version, and use the brew install qt@5. When I compile in the Cmake-GUI. ; ERROR OCCURS:; CMake Error at Sofa/GUI/Qt/CMakeLists.txt:28 (message):; Sofa.GUI.Qt: Could not find either Qt5 or Qt6.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1371939008
https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1371941172:24,Deployability,install,install,24,"Actually, I skipped the install process in the MAC M2. And I run it on my Desktop(Ubuntu 20.04)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1371941172
https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372032444:220,Availability,error,errors,220,"Yeah, I installed QT5 with `brew install qt@5` and source the `.bashrc` with the installed path. Actually, my `cmake-gui` could find `QT5` also `QT6` which I tried to install. But the building process always occurs with errors. I tried install the QT with the source code, `brew` and the official install tools (x86), but it doesn't fix it successfully.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372032444
https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372032444:8,Deployability,install,installed,8,"Yeah, I installed QT5 with `brew install qt@5` and source the `.bashrc` with the installed path. Actually, my `cmake-gui` could find `QT5` also `QT6` which I tried to install. But the building process always occurs with errors. I tried install the QT with the source code, `brew` and the official install tools (x86), but it doesn't fix it successfully.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372032444
https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372032444:33,Deployability,install,install,33,"Yeah, I installed QT5 with `brew install qt@5` and source the `.bashrc` with the installed path. Actually, my `cmake-gui` could find `QT5` also `QT6` which I tried to install. But the building process always occurs with errors. I tried install the QT with the source code, `brew` and the official install tools (x86), but it doesn't fix it successfully.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372032444
https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372032444:81,Deployability,install,installed,81,"Yeah, I installed QT5 with `brew install qt@5` and source the `.bashrc` with the installed path. Actually, my `cmake-gui` could find `QT5` also `QT6` which I tried to install. But the building process always occurs with errors. I tried install the QT with the source code, `brew` and the official install tools (x86), but it doesn't fix it successfully.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372032444
https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372032444:167,Deployability,install,install,167,"Yeah, I installed QT5 with `brew install qt@5` and source the `.bashrc` with the installed path. Actually, my `cmake-gui` could find `QT5` also `QT6` which I tried to install. But the building process always occurs with errors. I tried install the QT with the source code, `brew` and the official install tools (x86), but it doesn't fix it successfully.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372032444
https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372032444:236,Deployability,install,install,236,"Yeah, I installed QT5 with `brew install qt@5` and source the `.bashrc` with the installed path. Actually, my `cmake-gui` could find `QT5` also `QT6` which I tried to install. But the building process always occurs with errors. I tried install the QT with the source code, `brew` and the official install tools (x86), but it doesn't fix it successfully.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372032444
https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372032444:297,Deployability,install,install,297,"Yeah, I installed QT5 with `brew install qt@5` and source the `.bashrc` with the installed path. Actually, my `cmake-gui` could find `QT5` also `QT6` which I tried to install. But the building process always occurs with errors. I tried install the QT with the source code, `brew` and the official install tools (x86), but it doesn't fix it successfully.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372032444
https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372036821:151,Performance,cache,cache,151,"Remove `Qt6`, and be sure to delete it from your machine. I had the same problem. Don't hesitate to delete the build folder before rebuilding to avoid cache issue.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372036821
https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372036821:145,Safety,avoid,avoid,145,"Remove `Qt6`, and be sure to delete it from your machine. I had the same problem. Don't hesitate to delete the build folder before rebuilding to avoid cache issue.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372036821
https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372047102:79,Availability,error,error,79,"I have another question for `ninja`.; When I select the ninja option. Then the error occurs like this.; `CMake Error: CMake was unable to find a build program corresponding to ""Ninja"". CMAKE_MAKE_PROGRAM is not set. You probably need to select a different build tool.; CMake Error: CMAKE_C_COMPILER not set, after EnableLanguage; CMake Error: CMAKE_CXX_COMPILER not set, after EnableLanguage; Configuring incomplete, errors occurred!`",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372047102
https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372047102:111,Availability,Error,Error,111,"I have another question for `ninja`.; When I select the ninja option. Then the error occurs like this.; `CMake Error: CMake was unable to find a build program corresponding to ""Ninja"". CMAKE_MAKE_PROGRAM is not set. You probably need to select a different build tool.; CMake Error: CMAKE_C_COMPILER not set, after EnableLanguage; CMake Error: CMAKE_CXX_COMPILER not set, after EnableLanguage; Configuring incomplete, errors occurred!`",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372047102
https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372047102:275,Availability,Error,Error,275,"I have another question for `ninja`.; When I select the ninja option. Then the error occurs like this.; `CMake Error: CMake was unable to find a build program corresponding to ""Ninja"". CMAKE_MAKE_PROGRAM is not set. You probably need to select a different build tool.; CMake Error: CMAKE_C_COMPILER not set, after EnableLanguage; CMake Error: CMAKE_CXX_COMPILER not set, after EnableLanguage; Configuring incomplete, errors occurred!`",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372047102
https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372047102:336,Availability,Error,Error,336,"I have another question for `ninja`.; When I select the ninja option. Then the error occurs like this.; `CMake Error: CMake was unable to find a build program corresponding to ""Ninja"". CMAKE_MAKE_PROGRAM is not set. You probably need to select a different build tool.; CMake Error: CMAKE_C_COMPILER not set, after EnableLanguage; CMake Error: CMAKE_CXX_COMPILER not set, after EnableLanguage; Configuring incomplete, errors occurred!`",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372047102
https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372047102:417,Availability,error,errors,417,"I have another question for `ninja`.; When I select the ninja option. Then the error occurs like this.; `CMake Error: CMake was unable to find a build program corresponding to ""Ninja"". CMAKE_MAKE_PROGRAM is not set. You probably need to select a different build tool.; CMake Error: CMAKE_C_COMPILER not set, after EnableLanguage; CMake Error: CMAKE_CXX_COMPILER not set, after EnableLanguage; Configuring incomplete, errors occurred!`",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372047102
https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372047102:393,Modifiability,Config,Configuring,393,"I have another question for `ninja`.; When I select the ninja option. Then the error occurs like this.; `CMake Error: CMake was unable to find a build program corresponding to ""Ninja"". CMAKE_MAKE_PROGRAM is not set. You probably need to select a different build tool.; CMake Error: CMAKE_C_COMPILER not set, after EnableLanguage; CMake Error: CMAKE_CXX_COMPILER not set, after EnableLanguage; Configuring incomplete, errors occurred!`",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372047102
https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372086159:299,Availability,error,error,299,"Thank you. I have successfully run it on my laptop (MAC M2 chip with qt5).; I have modified both `.bashrc` and `.zshrc` with define the `Qt5_DIR` but it does not change the value in `cmake-gui`.; Thus, I modified the `QT5_DIR` in `cmake-gui` directly and it plays well.; Before that, it has a small error, like `Imported target ""tinyxml"" includes non-existent path`; I deleted the default one in `/usr/local/lib` and modified the `TinyXML_DIR` with the path installed by `homebrew`. Anyway, Thanks a lot.; <img width=""1099"" alt=""sofa"" src=""https://user-images.githubusercontent.com/56861752/210767352-6f43621e-1559-40da-a15d-cd28a18945ca.png"">",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372086159
https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372086159:458,Deployability,install,installed,458,"Thank you. I have successfully run it on my laptop (MAC M2 chip with qt5).; I have modified both `.bashrc` and `.zshrc` with define the `Qt5_DIR` but it does not change the value in `cmake-gui`.; Thus, I modified the `QT5_DIR` in `cmake-gui` directly and it plays well.; Before that, it has a small error, like `Imported target ""tinyxml"" includes non-existent path`; I deleted the default one in `/usr/local/lib` and modified the `TinyXML_DIR` with the path installed by `homebrew`. Anyway, Thanks a lot.; <img width=""1099"" alt=""sofa"" src=""https://user-images.githubusercontent.com/56861752/210767352-6f43621e-1559-40da-a15d-cd28a18945ca.png"">",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372086159
https://github.com/sofa-framework/sofa/issues/3425#issuecomment-2254330043:298,Availability,error,error,298,"> Thank you. I have successfully run it on my laptop (MAC M2 chip with qt5). I have modified both `.bashrc` and `.zshrc` with define the `Qt5_DIR` but it does not change the value in `cmake-gui`. Thus, I modified the `QT5_DIR` in `cmake-gui` directly and it plays well. Before that, it has a small error, like `Imported target ""tinyxml"" includes non-existent path` I deleted the default one in `/usr/local/lib` and modified the `TinyXML_DIR` with the path installed by `homebrew`.; > ; > Anyway, Thanks a lot. <img alt=""sofa"" width=""1099"" src=""https://user-images.githubusercontent.com/56861752/210767352-6f43621e-1559-40da-a15d-cd28a18945ca.png"">; have you been able to run sofa python",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-2254330043
https://github.com/sofa-framework/sofa/issues/3425#issuecomment-2254330043:456,Deployability,install,installed,456,"> Thank you. I have successfully run it on my laptop (MAC M2 chip with qt5). I have modified both `.bashrc` and `.zshrc` with define the `Qt5_DIR` but it does not change the value in `cmake-gui`. Thus, I modified the `QT5_DIR` in `cmake-gui` directly and it plays well. Before that, it has a small error, like `Imported target ""tinyxml"" includes non-existent path` I deleted the default one in `/usr/local/lib` and modified the `TinyXML_DIR` with the path installed by `homebrew`.; > ; > Anyway, Thanks a lot. <img alt=""sofa"" width=""1099"" src=""https://user-images.githubusercontent.com/56861752/210767352-6f43621e-1559-40da-a15d-cd28a18945ca.png"">; have you been able to run sofa python",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-2254330043
https://github.com/sofa-framework/sofa/pull/3428#issuecomment-1294956401:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3428#issuecomment-1294956401
https://github.com/sofa-framework/sofa/pull/3429#issuecomment-1292447711:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3429#issuecomment-1292447711
https://github.com/sofa-framework/sofa/pull/3432#issuecomment-1293174113:85,Testability,test,tests,85,"Since the changes are compiled only in debug mode, it is not required to run all the tests.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3432#issuecomment-1293174113
https://github.com/sofa-framework/sofa/pull/3435#issuecomment-1294467906:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3435#issuecomment-1294467906
https://github.com/sofa-framework/sofa/pull/3435#issuecomment-1299944386:119,Usability,feedback,feedback,119,Discussion : what about remove the usage of float within SOFA to lighten the code base of SOFA. This might affect (and feedback would be interesting) some guys @ziqiu-zeng @courtecuisse @bakpaul,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3435#issuecomment-1299944386
https://github.com/sofa-framework/sofa/pull/3436#issuecomment-1294468015:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3436#issuecomment-1294468015
https://github.com/sofa-framework/sofa/pull/3439#issuecomment-1301536213:38,Testability,test,tests,38,[force-full-build][ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3439#issuecomment-1301536213
https://github.com/sofa-framework/sofa/issues/3440#issuecomment-1294975824:316,Deployability,update,update,316,"Looking at this plugin's CMakefile, I can see; ```; ...; AddCompilerDefinitions(""SOFA_BUILD_OPTICALFLOW""); AddLinkerDependencies(${OpenCV_LIBRARIES}); ...; ```. which is wayyyyy too old, these keywords have not been used since SOFA's v15.12 (7 years ago).; So you (or this plugin creator @rouge1616 Nazim ü§ó) need to update it for your current version of SOFA (which I guess is v22.06). And the code itself will certainly need to be updated as well...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3440#issuecomment-1294975824
https://github.com/sofa-framework/sofa/issues/3440#issuecomment-1294975824:432,Deployability,update,updated,432,"Looking at this plugin's CMakefile, I can see; ```; ...; AddCompilerDefinitions(""SOFA_BUILD_OPTICALFLOW""); AddLinkerDependencies(${OpenCV_LIBRARIES}); ...; ```. which is wayyyyy too old, these keywords have not been used since SOFA's v15.12 (7 years ago).; So you (or this plugin creator @rouge1616 Nazim ü§ó) need to update it for your current version of SOFA (which I guess is v22.06). And the code itself will certainly need to be updated as well...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3440#issuecomment-1294975824
https://github.com/sofa-framework/sofa/issues/3440#issuecomment-1294975824:16,Modifiability,plugin,plugin,16,"Looking at this plugin's CMakefile, I can see; ```; ...; AddCompilerDefinitions(""SOFA_BUILD_OPTICALFLOW""); AddLinkerDependencies(${OpenCV_LIBRARIES}); ...; ```. which is wayyyyy too old, these keywords have not been used since SOFA's v15.12 (7 years ago).; So you (or this plugin creator @rouge1616 Nazim ü§ó) need to update it for your current version of SOFA (which I guess is v22.06). And the code itself will certainly need to be updated as well...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3440#issuecomment-1294975824
https://github.com/sofa-framework/sofa/issues/3440#issuecomment-1294975824:273,Modifiability,plugin,plugin,273,"Looking at this plugin's CMakefile, I can see; ```; ...; AddCompilerDefinitions(""SOFA_BUILD_OPTICALFLOW""); AddLinkerDependencies(${OpenCV_LIBRARIES}); ...; ```. which is wayyyyy too old, these keywords have not been used since SOFA's v15.12 (7 years ago).; So you (or this plugin creator @rouge1616 Nazim ü§ó) need to update it for your current version of SOFA (which I guess is v22.06). And the code itself will certainly need to be updated as well...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3440#issuecomment-1294975824
https://github.com/sofa-framework/sofa/pull/3446#issuecomment-1297195034:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3446#issuecomment-1297195034
https://github.com/sofa-framework/sofa/pull/3447#issuecomment-1297195238:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3447#issuecomment-1297195238
https://github.com/sofa-framework/sofa/pull/3448#issuecomment-1298180179:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3448#issuecomment-1298180179
https://github.com/sofa-framework/sofa/issues/3450#issuecomment-1307832420:499,Usability,UX,UX,499,"The problem is because the alias introduced in commit https://github.com/sofa-framework/sofa/commit/cd3b8aea26c296c2f0bb948ec6f96807565522bf translated every ""float"" to 'f"" ... which only works for component that implement GetCustemTemplateName() consistently with the sofa template name convention. For component that does not do such a thing the templateName() is decoded from the typeid().name() (which is plateform specific). The automatic decoding from typeid is bad practice that leaks to the UX implementation/compiler details. . To fix the issue the NameDecoder mechanism (or the SOFA_CLASS macro) should be improved to check if there is DataTypeInfo<T>::name() before calling the NameDecoder.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3450#issuecomment-1307832420
https://github.com/sofa-framework/sofa/issues/3451#issuecomment-1318366581:78,Modifiability,plugin,plugin,78,The macro are not used anymore in our code base and has been commented in the plugin from DEFROST. ; Maybe we could remove it (or find a way to deprecated it for some time)).,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3451#issuecomment-1318366581
https://github.com/sofa-framework/sofa/issues/3451#issuecomment-1403263559:224,Deployability,configurat,configuration,224,A more generic was asked in #3592 all scenes are usually using template=Vec3d we should use the SReal version template=Vec3 allowing us to test the float cases. Is float really useful?. A CI (nightly?) should test the float configuration,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3451#issuecomment-1403263559
https://github.com/sofa-framework/sofa/issues/3451#issuecomment-1403263559:224,Modifiability,config,configuration,224,A more generic was asked in #3592 all scenes are usually using template=Vec3d we should use the SReal version template=Vec3 allowing us to test the float cases. Is float really useful?. A CI (nightly?) should test the float configuration,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3451#issuecomment-1403263559
https://github.com/sofa-framework/sofa/issues/3451#issuecomment-1403263559:139,Testability,test,test,139,A more generic was asked in #3592 all scenes are usually using template=Vec3d we should use the SReal version template=Vec3 allowing us to test the float cases. Is float really useful?. A CI (nightly?) should test the float configuration,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3451#issuecomment-1403263559
https://github.com/sofa-framework/sofa/issues/3451#issuecomment-1403263559:209,Testability,test,test,209,A more generic was asked in #3592 all scenes are usually using template=Vec3d we should use the SReal version template=Vec3 allowing us to test the float cases. Is float really useful?. A CI (nightly?) should test the float configuration,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3451#issuecomment-1403263559
https://github.com/sofa-framework/sofa/pull/3452#issuecomment-1301649521:38,Testability,test,tests,38,[force-full-build][ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3452#issuecomment-1301649521
https://github.com/sofa-framework/sofa/pull/3453#issuecomment-1301987269:123,Availability,failure,failure,123,Those scene are failing in PR #3339 but from my understanding they were broken since a long time. The PR just reveal their failure.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3453#issuecomment-1301987269
https://github.com/sofa-framework/sofa/pull/3453#issuecomment-1302854031:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3453#issuecomment-1302854031
https://github.com/sofa-framework/sofa/pull/3454#issuecomment-1305568965:116,Availability,redundant,redundant,116,"Hi @fredroy,. Thanks for the PR. ; What about removing one of the two viewer ? Does it still make sense to have two redundant implementation in Sofa?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3454#issuecomment-1305568965
https://github.com/sofa-framework/sofa/pull/3454#issuecomment-1305568965:116,Safety,redund,redundant,116,"Hi @fredroy,. Thanks for the PR. ; What about removing one of the two viewer ? Does it still make sense to have two redundant implementation in Sofa?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3454#issuecomment-1305568965
https://github.com/sofa-framework/sofa/pull/3457#issuecomment-1706667437:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3457#issuecomment-1706667437
https://github.com/sofa-framework/sofa/pull/3457#issuecomment-1707519816:104,Testability,log,logs,104,"FYI, `SimpleCarving.py` is not exectuted by the CI (or more precisely, there is no mention of it in the logs)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3457#issuecomment-1707519816
https://github.com/sofa-framework/sofa/pull/3457#issuecomment-1707519816:6,Usability,Simpl,SimpleCarving,6,"FYI, `SimpleCarving.py` is not exectuted by the CI (or more precisely, there is no mention of it in the logs)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3457#issuecomment-1707519816
https://github.com/sofa-framework/sofa/pull/3457#issuecomment-1707842240:106,Testability,log,logs,106,"> FYI, `SimpleCarving.py` is not exectuted by the CI (or more precisely, there is no mention of it in the logs). I would say, on s'en balek",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3457#issuecomment-1707842240
https://github.com/sofa-framework/sofa/pull/3457#issuecomment-1707842240:8,Usability,Simpl,SimpleCarving,8,"> FYI, `SimpleCarving.py` is not exectuted by the CI (or more precisely, there is no mention of it in the logs). I would say, on s'en balek",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3457#issuecomment-1707842240
https://github.com/sofa-framework/sofa/pull/3461#issuecomment-1307402013:66,Integrability,depend,depend,66,"Well, today the long name is the returned string. And it does not depend on this PR. Look at the unit tests I added:. ```cpp; EXPECT_EQ(sofa::defaulttype::DataTypeName<float>::name(), ""f"");; const auto object = sofa::core::objectmodel::New<DefaultTemplate1<float> >();; EXPECT_EQ(object->getTemplateName(), ""float"");; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3461#issuecomment-1307402013
https://github.com/sofa-framework/sofa/pull/3461#issuecomment-1307402013:102,Testability,test,tests,102,"Well, today the long name is the returned string. And it does not depend on this PR. Look at the unit tests I added:. ```cpp; EXPECT_EQ(sofa::defaulttype::DataTypeName<float>::name(), ""f"");; const auto object = sofa::core::objectmodel::New<DefaultTemplate1<float> >();; EXPECT_EQ(object->getTemplateName(), ""float"");; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3461#issuecomment-1307402013
https://github.com/sofa-framework/sofa/pull/3461#issuecomment-1307815952:1859,Availability,avail,available,1859," convention as the one used in DataTypeInfo<>. So ```f``` instead of ```float```, ```vector<f>``` instead of ```vector<float>```, ```Vec3d``` instead of ```Vec<3, double>```. Unifying the other way around would have implied to use ```Vec<3, double>``` in our scene templates... which was a bit too much :); With that in mind, the current implementation of DataExchange is behaving exactly as it should. . The unittest you are pointing is showing a normal behavior. This behavior is that the template type that does not have a Name() static method and used in a class that is not implementing GetCustomTemplate will fall back to the automatic generation decoded from the typeid(). But this automatic generation is the code we want to get rid of (if one day someone has enough time to fix that) and not desired behavior to align with. Automatic decoding function to avoid breaking too much things until future evolution. . So currently the DataExchange implementation is using GetCustomClassName in order to implement consistent templates name with the other sofa components and not relying on the automatic generation. . If you are interested in unifying things i would recommend:; short term: implement a way to automatically use the DataTypeInfo<>::name() in the NameDecoder. If I remember well initially we didn't wanted to... because sofa::defaulttype was not a dependency of sofa::helper but now we have cleaned a lot that part it is possible to make something quickly. This would allow to remove all the GetCustomClassName in our code base to directly forward to DataTypeInfo<DataType>::name() when available instead of falling back. middleterm: add deprecation management to the falling back code to warn user it will disapear (when it was done we didn't has deprecation menagement...maybe it is worth having a look at that part nowaydays). longterm: remove all that crappy template DataTypeInfo<DataType>::name() and use the thing introduced in https://github.com/sofa-framework/sofa/pull/3289",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3461#issuecomment-1307815952
https://github.com/sofa-framework/sofa/pull/3461#issuecomment-1307815952:1620,Integrability,depend,dependency,1620," convention as the one used in DataTypeInfo<>. So ```f``` instead of ```float```, ```vector<f>``` instead of ```vector<float>```, ```Vec3d``` instead of ```Vec<3, double>```. Unifying the other way around would have implied to use ```Vec<3, double>``` in our scene templates... which was a bit too much :); With that in mind, the current implementation of DataExchange is behaving exactly as it should. . The unittest you are pointing is showing a normal behavior. This behavior is that the template type that does not have a Name() static method and used in a class that is not implementing GetCustomTemplate will fall back to the automatic generation decoded from the typeid(). But this automatic generation is the code we want to get rid of (if one day someone has enough time to fix that) and not desired behavior to align with. Automatic decoding function to avoid breaking too much things until future evolution. . So currently the DataExchange implementation is using GetCustomClassName in order to implement consistent templates name with the other sofa components and not relying on the automatic generation. . If you are interested in unifying things i would recommend:; short term: implement a way to automatically use the DataTypeInfo<>::name() in the NameDecoder. If I remember well initially we didn't wanted to... because sofa::defaulttype was not a dependency of sofa::helper but now we have cleaned a lot that part it is possible to make something quickly. This would allow to remove all the GetCustomClassName in our code base to directly forward to DataTypeInfo<DataType>::name() when available instead of falling back. middleterm: add deprecation management to the falling back code to warn user it will disapear (when it was done we didn't has deprecation menagement...maybe it is worth having a look at that part nowaydays). longterm: remove all that crappy template DataTypeInfo<DataType>::name() and use the thing introduced in https://github.com/sofa-framework/sofa/pull/3289",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3461#issuecomment-1307815952
https://github.com/sofa-framework/sofa/pull/3461#issuecomment-1307815952:1119,Safety,avoid,avoid,1119," the underlying c++ type used if the class is templated). It was decided to unify all the scene template/type to use the same convention as the one used in DataTypeInfo<>. So ```f``` instead of ```float```, ```vector<f>``` instead of ```vector<float>```, ```Vec3d``` instead of ```Vec<3, double>```. Unifying the other way around would have implied to use ```Vec<3, double>``` in our scene templates... which was a bit too much :); With that in mind, the current implementation of DataExchange is behaving exactly as it should. . The unittest you are pointing is showing a normal behavior. This behavior is that the template type that does not have a Name() static method and used in a class that is not implementing GetCustomTemplate will fall back to the automatic generation decoded from the typeid(). But this automatic generation is the code we want to get rid of (if one day someone has enough time to fix that) and not desired behavior to align with. Automatic decoding function to avoid breaking too much things until future evolution. . So currently the DataExchange implementation is using GetCustomClassName in order to implement consistent templates name with the other sofa components and not relying on the automatic generation. . If you are interested in unifying things i would recommend:; short term: implement a way to automatically use the DataTypeInfo<>::name() in the NameDecoder. If I remember well initially we didn't wanted to... because sofa::defaulttype was not a dependency of sofa::helper but now we have cleaned a lot that part it is possible to make something quickly. This would allow to remove all the GetCustomClassName in our code base to directly forward to DataTypeInfo<DataType>::name() when available instead of falling back. middleterm: add deprecation management to the falling back code to warn user it will disapear (when it was done we didn't has deprecation menagement...maybe it is worth having a look at that part nowaydays). longterm: remove all that cr",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3461#issuecomment-1307815952
https://github.com/sofa-framework/sofa/pull/3462#issuecomment-1305795389:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3462#issuecomment-1305795389
https://github.com/sofa-framework/sofa/pull/3462#issuecomment-1308603336:17,Security,validat,validate,17,@fredroy can you validate that the requested change has been done ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3462#issuecomment-1308603336
https://github.com/sofa-framework/sofa/pull/3462#issuecomment-1309579523:19,Security,validat,validate,19,"> @fredroy can you validate that the requested change has been done ?. More or less, as I did not see that `toHomogeneousMatrix` was considering translation, and the Mat3x3 cannot store the translation. Anyway, the mat3x3 version should be renamed toRotationMatrix as the two versions do something a bit different.; But that is not the point of the PR itself (fix compilation)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3462#issuecomment-1309579523
https://github.com/sofa-framework/sofa/issues/3463#issuecomment-1307081793:1,Availability,ERROR,ERROR,1,"[ERROR]&nbsp; &nbsp;[SofaPython3::SceneLoader] Unable to completely load the scene from file 'D:/DefrostSofaBundle_win64_python3.8_v22.06.00-beta4/DefrostSofaBundle_win64_python3.8_v22.06.00-beta4/plugins/BeamAdapter/examples/python3/Cochlear-Implant-Insertion/cathter.py'.; Python exception:; &nbsp; ValueError: Object type Edge2QuadTopologicalMapping<&gt; was not created; The object is in the factory but cannot be created.; Requested template : None; Used template&nbsp; &nbsp; &nbsp; : None; Reason(s)&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; : Data attribute 'input' does not point to a valid mesh topology and none can be found in the parent node context. Thank you for your help. I found the following errors after following your reply. How to solve this problem?. ÊñπÂæóÂßãÁªà; ***@***.***. &nbsp;. ------------------&nbsp;ÂéüÂßãÈÇÆ‰ª∂&nbsp;------------------; Âèë‰ª∂‰∫∫: ""sofa-framework/sofa"" ***@***.***&gt;;; ÂèëÈÄÅÊó∂Èó¥:&nbsp;2022Âπ¥11Êúà8Êó•(ÊòüÊúü‰∫å) Êôö‰∏ä7:11; ***@***.***&gt;;; ***@***.******@***.***&gt;;; ‰∏ªÈ¢ò:&nbsp;Re: [sofa-framework/sofa] [ERROR] [WireRestShape(catheterRestShape)] EdgeSetController has no binding EdgeSetTopologyModifier. (Issue #3463). ; Hi,; ; you need to add a EdgeSetTopologyModifier in your first object:; topoLines_cath.addObject('EdgeSetTopologyModifier', name='meshLinesModif'); ; Hope it helps.; ; ‚Äî; Reply to this email directly, view it on GitHub, or unsubscribe.; You are receiving this because you authored the thread.Message ID: ***@***.***&gt;",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3463#issuecomment-1307081793
https://github.com/sofa-framework/sofa/issues/3463#issuecomment-1307081793:703,Availability,error,errors,703,"[ERROR]&nbsp; &nbsp;[SofaPython3::SceneLoader] Unable to completely load the scene from file 'D:/DefrostSofaBundle_win64_python3.8_v22.06.00-beta4/DefrostSofaBundle_win64_python3.8_v22.06.00-beta4/plugins/BeamAdapter/examples/python3/Cochlear-Implant-Insertion/cathter.py'.; Python exception:; &nbsp; ValueError: Object type Edge2QuadTopologicalMapping<&gt; was not created; The object is in the factory but cannot be created.; Requested template : None; Used template&nbsp; &nbsp; &nbsp; : None; Reason(s)&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; : Data attribute 'input' does not point to a valid mesh topology and none can be found in the parent node context. Thank you for your help. I found the following errors after following your reply. How to solve this problem?. ÊñπÂæóÂßãÁªà; ***@***.***. &nbsp;. ------------------&nbsp;ÂéüÂßãÈÇÆ‰ª∂&nbsp;------------------; Âèë‰ª∂‰∫∫: ""sofa-framework/sofa"" ***@***.***&gt;;; ÂèëÈÄÅÊó∂Èó¥:&nbsp;2022Âπ¥11Êúà8Êó•(ÊòüÊúü‰∫å) Êôö‰∏ä7:11; ***@***.***&gt;;; ***@***.******@***.***&gt;;; ‰∏ªÈ¢ò:&nbsp;Re: [sofa-framework/sofa] [ERROR] [WireRestShape(catheterRestShape)] EdgeSetController has no binding EdgeSetTopologyModifier. (Issue #3463). ; Hi,; ; you need to add a EdgeSetTopologyModifier in your first object:; topoLines_cath.addObject('EdgeSetTopologyModifier', name='meshLinesModif'); ; Hope it helps.; ; ‚Äî; Reply to this email directly, view it on GitHub, or unsubscribe.; You are receiving this because you authored the thread.Message ID: ***@***.***&gt;",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3463#issuecomment-1307081793
https://github.com/sofa-framework/sofa/issues/3463#issuecomment-1307081793:1010,Availability,ERROR,ERROR,1010,"[ERROR]&nbsp; &nbsp;[SofaPython3::SceneLoader] Unable to completely load the scene from file 'D:/DefrostSofaBundle_win64_python3.8_v22.06.00-beta4/DefrostSofaBundle_win64_python3.8_v22.06.00-beta4/plugins/BeamAdapter/examples/python3/Cochlear-Implant-Insertion/cathter.py'.; Python exception:; &nbsp; ValueError: Object type Edge2QuadTopologicalMapping<&gt; was not created; The object is in the factory but cannot be created.; Requested template : None; Used template&nbsp; &nbsp; &nbsp; : None; Reason(s)&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; : Data attribute 'input' does not point to a valid mesh topology and none can be found in the parent node context. Thank you for your help. I found the following errors after following your reply. How to solve this problem?. ÊñπÂæóÂßãÁªà; ***@***.***. &nbsp;. ------------------&nbsp;ÂéüÂßãÈÇÆ‰ª∂&nbsp;------------------; Âèë‰ª∂‰∫∫: ""sofa-framework/sofa"" ***@***.***&gt;;; ÂèëÈÄÅÊó∂Èó¥:&nbsp;2022Âπ¥11Êúà8Êó•(ÊòüÊúü‰∫å) Êôö‰∏ä7:11; ***@***.***&gt;;; ***@***.******@***.***&gt;;; ‰∏ªÈ¢ò:&nbsp;Re: [sofa-framework/sofa] [ERROR] [WireRestShape(catheterRestShape)] EdgeSetController has no binding EdgeSetTopologyModifier. (Issue #3463). ; Hi,; ; you need to add a EdgeSetTopologyModifier in your first object:; topoLines_cath.addObject('EdgeSetTopologyModifier', name='meshLinesModif'); ; Hope it helps.; ; ‚Äî; Reply to this email directly, view it on GitHub, or unsubscribe.; You are receiving this because you authored the thread.Message ID: ***@***.***&gt;",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3463#issuecomment-1307081793
https://github.com/sofa-framework/sofa/issues/3463#issuecomment-1307081793:1419,Integrability,Message,Message,1419,"[ERROR]&nbsp; &nbsp;[SofaPython3::SceneLoader] Unable to completely load the scene from file 'D:/DefrostSofaBundle_win64_python3.8_v22.06.00-beta4/DefrostSofaBundle_win64_python3.8_v22.06.00-beta4/plugins/BeamAdapter/examples/python3/Cochlear-Implant-Insertion/cathter.py'.; Python exception:; &nbsp; ValueError: Object type Edge2QuadTopologicalMapping<&gt; was not created; The object is in the factory but cannot be created.; Requested template : None; Used template&nbsp; &nbsp; &nbsp; : None; Reason(s)&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; : Data attribute 'input' does not point to a valid mesh topology and none can be found in the parent node context. Thank you for your help. I found the following errors after following your reply. How to solve this problem?. ÊñπÂæóÂßãÁªà; ***@***.***. &nbsp;. ------------------&nbsp;ÂéüÂßãÈÇÆ‰ª∂&nbsp;------------------; Âèë‰ª∂‰∫∫: ""sofa-framework/sofa"" ***@***.***&gt;;; ÂèëÈÄÅÊó∂Èó¥:&nbsp;2022Âπ¥11Êúà8Êó•(ÊòüÊúü‰∫å) Êôö‰∏ä7:11; ***@***.***&gt;;; ***@***.******@***.***&gt;;; ‰∏ªÈ¢ò:&nbsp;Re: [sofa-framework/sofa] [ERROR] [WireRestShape(catheterRestShape)] EdgeSetController has no binding EdgeSetTopologyModifier. (Issue #3463). ; Hi,; ; you need to add a EdgeSetTopologyModifier in your first object:; topoLines_cath.addObject('EdgeSetTopologyModifier', name='meshLinesModif'); ; Hope it helps.; ; ‚Äî; Reply to this email directly, view it on GitHub, or unsubscribe.; You are receiving this because you authored the thread.Message ID: ***@***.***&gt;",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3463#issuecomment-1307081793
https://github.com/sofa-framework/sofa/issues/3463#issuecomment-1307081793:197,Modifiability,plugin,plugins,197,"[ERROR]&nbsp; &nbsp;[SofaPython3::SceneLoader] Unable to completely load the scene from file 'D:/DefrostSofaBundle_win64_python3.8_v22.06.00-beta4/DefrostSofaBundle_win64_python3.8_v22.06.00-beta4/plugins/BeamAdapter/examples/python3/Cochlear-Implant-Insertion/cathter.py'.; Python exception:; &nbsp; ValueError: Object type Edge2QuadTopologicalMapping<&gt; was not created; The object is in the factory but cannot be created.; Requested template : None; Used template&nbsp; &nbsp; &nbsp; : None; Reason(s)&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; : Data attribute 'input' does not point to a valid mesh topology and none can be found in the parent node context. Thank you for your help. I found the following errors after following your reply. How to solve this problem?. ÊñπÂæóÂßãÁªà; ***@***.***. &nbsp;. ------------------&nbsp;ÂéüÂßãÈÇÆ‰ª∂&nbsp;------------------; Âèë‰ª∂‰∫∫: ""sofa-framework/sofa"" ***@***.***&gt;;; ÂèëÈÄÅÊó∂Èó¥:&nbsp;2022Âπ¥11Êúà8Êó•(ÊòüÊúü‰∫å) Êôö‰∏ä7:11; ***@***.***&gt;;; ***@***.******@***.***&gt;;; ‰∏ªÈ¢ò:&nbsp;Re: [sofa-framework/sofa] [ERROR] [WireRestShape(catheterRestShape)] EdgeSetController has no binding EdgeSetTopologyModifier. (Issue #3463). ; Hi,; ; you need to add a EdgeSetTopologyModifier in your first object:; topoLines_cath.addObject('EdgeSetTopologyModifier', name='meshLinesModif'); ; Hope it helps.; ; ‚Äî; Reply to this email directly, view it on GitHub, or unsubscribe.; You are receiving this because you authored the thread.Message ID: ***@***.***&gt;",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3463#issuecomment-1307081793
https://github.com/sofa-framework/sofa/issues/3463#issuecomment-1307081793:68,Performance,load,load,68,"[ERROR]&nbsp; &nbsp;[SofaPython3::SceneLoader] Unable to completely load the scene from file 'D:/DefrostSofaBundle_win64_python3.8_v22.06.00-beta4/DefrostSofaBundle_win64_python3.8_v22.06.00-beta4/plugins/BeamAdapter/examples/python3/Cochlear-Implant-Insertion/cathter.py'.; Python exception:; &nbsp; ValueError: Object type Edge2QuadTopologicalMapping<&gt; was not created; The object is in the factory but cannot be created.; Requested template : None; Used template&nbsp; &nbsp; &nbsp; : None; Reason(s)&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; : Data attribute 'input' does not point to a valid mesh topology and none can be found in the parent node context. Thank you for your help. I found the following errors after following your reply. How to solve this problem?. ÊñπÂæóÂßãÁªà; ***@***.***. &nbsp;. ------------------&nbsp;ÂéüÂßãÈÇÆ‰ª∂&nbsp;------------------; Âèë‰ª∂‰∫∫: ""sofa-framework/sofa"" ***@***.***&gt;;; ÂèëÈÄÅÊó∂Èó¥:&nbsp;2022Âπ¥11Êúà8Êó•(ÊòüÊúü‰∫å) Êôö‰∏ä7:11; ***@***.***&gt;;; ***@***.******@***.***&gt;;; ‰∏ªÈ¢ò:&nbsp;Re: [sofa-framework/sofa] [ERROR] [WireRestShape(catheterRestShape)] EdgeSetController has no binding EdgeSetTopologyModifier. (Issue #3463). ; Hi,; ; you need to add a EdgeSetTopologyModifier in your first object:; topoLines_cath.addObject('EdgeSetTopologyModifier', name='meshLinesModif'); ; Hope it helps.; ; ‚Äî; Reply to this email directly, view it on GitHub, or unsubscribe.; You are receiving this because you authored the thread.Message ID: ***@***.***&gt;",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3463#issuecomment-1307081793
https://github.com/sofa-framework/sofa/issues/3463#issuecomment-1308563217:33,Modifiability,plugin,plugin,33,"Hi,; You need to add the correct plugin into your scene requiredPlugin. It should be `SofaTopologyMapping` in your version. I'm moving this issue to the Discussions section as it is related to your scene creation rather than a bug inside SOFA.; Thanks",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3463#issuecomment-1308563217
https://github.com/sofa-framework/sofa/pull/3464#issuecomment-1307353148:29,Testability,test,test,29,An opportunity to add a unit test in SofaPython3 ;),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3464#issuecomment-1307353148
https://github.com/sofa-framework/sofa/pull/3464#issuecomment-1307358562:95,Security,validat,validate,95,> An opportunity to add a unit test in SofaPython3 ;); +1. But SofaPython3 is not the place to validate sofa core behavior. It would be much better to have it in Sofa implemented using simpleapi. And not in a reverting PR.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3464#issuecomment-1307358562
https://github.com/sofa-framework/sofa/pull/3464#issuecomment-1307358562:31,Testability,test,test,31,> An opportunity to add a unit test in SofaPython3 ;); +1. But SofaPython3 is not the place to validate sofa core behavior. It would be much better to have it in Sofa implemented using simpleapi. And not in a reverting PR.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3464#issuecomment-1307358562
https://github.com/sofa-framework/sofa/pull/3464#issuecomment-1307358562:185,Usability,simpl,simpleapi,185,> An opportunity to add a unit test in SofaPython3 ;); +1. But SofaPython3 is not the place to validate sofa core behavior. It would be much better to have it in Sofa implemented using simpleapi. And not in a reverting PR.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3464#issuecomment-1307358562
https://github.com/sofa-framework/sofa/pull/3465#issuecomment-1307988825:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3465#issuecomment-1307988825
https://github.com/sofa-framework/sofa/pull/3465#issuecomment-1308480280:0,Modifiability,Refactor,Refactoring,0,"Refactoring could be done in NameDecoder to keep only string resolution from the compiler, but for class template, the code could be moved in BaseClass using defaulttype. @damienmarchal will work on it",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3465#issuecomment-1308480280
https://github.com/sofa-framework/sofa/pull/3465#issuecomment-1308598386:29,Modifiability,refactor,refactoring,29,"@alxbilger I implemented the refactoring of NameDecoder and clearly this is way better that way. Some part fit much more naturally and both NameDecoder and BaseClassNameHelper have kind of consistency on their respective role. . EDIT: I directly went to the DISABLED state as I see no simple way (apart from duplicating the code) to keep the feature. But In our whole code base, that was very rarely used.. so I think this is the same for plugins.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3465#issuecomment-1308598386
https://github.com/sofa-framework/sofa/pull/3465#issuecomment-1308598386:439,Modifiability,plugin,plugins,439,"@alxbilger I implemented the refactoring of NameDecoder and clearly this is way better that way. Some part fit much more naturally and both NameDecoder and BaseClassNameHelper have kind of consistency on their respective role. . EDIT: I directly went to the DISABLED state as I see no simple way (apart from duplicating the code) to keep the feature. But In our whole code base, that was very rarely used.. so I think this is the same for plugins.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3465#issuecomment-1308598386
https://github.com/sofa-framework/sofa/pull/3465#issuecomment-1308598386:60,Usability,clear,clearly,60,"@alxbilger I implemented the refactoring of NameDecoder and clearly this is way better that way. Some part fit much more naturally and both NameDecoder and BaseClassNameHelper have kind of consistency on their respective role. . EDIT: I directly went to the DISABLED state as I see no simple way (apart from duplicating the code) to keep the feature. But In our whole code base, that was very rarely used.. so I think this is the same for plugins.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3465#issuecomment-1308598386
https://github.com/sofa-framework/sofa/pull/3465#issuecomment-1308598386:285,Usability,simpl,simple,285,"@alxbilger I implemented the refactoring of NameDecoder and clearly this is way better that way. Some part fit much more naturally and both NameDecoder and BaseClassNameHelper have kind of consistency on their respective role. . EDIT: I directly went to the DISABLED state as I see no simple way (apart from duplicating the code) to keep the feature. But In our whole code base, that was very rarely used.. so I think this is the same for plugins.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3465#issuecomment-1308598386
https://github.com/sofa-framework/sofa/pull/3465#issuecomment-1308741024:27,Availability,error,error,27,arf you have a compilation error in https://github.com/sofa-framework/SofaGLFW,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3465#issuecomment-1308741024
https://github.com/sofa-framework/sofa/pull/3465#issuecomment-1308809504:29,Availability,error,error,29,"> arf you have a compilation error in https://github.com/sofa-framework/SofaGLFW. Yes, this was expected to have some. The shortName is overridable by the class, so it must be in BaseClassNameHelper. ; That's said, I could probably implement a non-verridable version in NameDecoder so that compilation still works at the cost of some text not showing exactly the same in the GUI's. . EDIT: done.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3465#issuecomment-1308809504
https://github.com/sofa-framework/sofa/pull/3465#issuecomment-1331830676:24,Availability,ERROR,ERROR,24,"Test is failing:. ```; [ERROR] [MergeVectors(mergedPositions)] Requested template 'Data<double>' cannot be found in the list of available templates [vector<RigidCoord2d>, vector<RigidCoord3d>, vector<RigidDeriv2d>, vector<RigidDeriv3d>, vector<Vec2I>, vector<Vec2d>, vector<Vec3d>, vector<Vec4d>, vector<bool>, vector<d>, vector<i>]. Falling back to the first compatible template: 'vector<d>'.; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3465#issuecomment-1331830676
https://github.com/sofa-framework/sofa/pull/3465#issuecomment-1331830676:128,Availability,avail,available,128,"Test is failing:. ```; [ERROR] [MergeVectors(mergedPositions)] Requested template 'Data<double>' cannot be found in the list of available templates [vector<RigidCoord2d>, vector<RigidCoord3d>, vector<RigidDeriv2d>, vector<RigidDeriv3d>, vector<Vec2I>, vector<Vec2d>, vector<Vec3d>, vector<Vec4d>, vector<bool>, vector<d>, vector<i>]. Falling back to the first compatible template: 'vector<d>'.; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3465#issuecomment-1331830676
https://github.com/sofa-framework/sofa/pull/3465#issuecomment-1331830676:0,Testability,Test,Test,0,"Test is failing:. ```; [ERROR] [MergeVectors(mergedPositions)] Requested template 'Data<double>' cannot be found in the list of available templates [vector<RigidCoord2d>, vector<RigidCoord3d>, vector<RigidDeriv2d>, vector<RigidDeriv3d>, vector<Vec2I>, vector<Vec2d>, vector<Vec3d>, vector<Vec4d>, vector<bool>, vector<d>, vector<i>]. Falling back to the first compatible template: 'vector<d>'.; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3465#issuecomment-1331830676
https://github.com/sofa-framework/sofa/pull/3465#issuecomment-1348803468:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3465#issuecomment-1348803468
https://github.com/sofa-framework/sofa/pull/3465#issuecomment-1350636361:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3465#issuecomment-1350636361
https://github.com/sofa-framework/sofa/pull/3465#issuecomment-1385189241:99,Deployability,release,release,99,"I think so; @damienmarchal do you know why the status postponed was added? I guess to wait for the release v22.12 .. If so, it should be ready",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3465#issuecomment-1385189241
https://github.com/sofa-framework/sofa/pull/3465#issuecomment-1386568029:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3465#issuecomment-1386568029
https://github.com/sofa-framework/sofa/pull/3468#issuecomment-1308504394:219,Deployability,release,release,219,"Should fix Ubuntu clang: [sofa-framework/sofa#3460](https://github.com/sofa-framework/sofa/pull/3460) (see https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=ubuntu_clang,CI_PLUGINS=options,CI_TYPE=release/3983/console)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3468#issuecomment-1308504394
https://github.com/sofa-framework/sofa/pull/3471#issuecomment-1317038244:22,Testability,test,tests,22,[ci-build][with-scene-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3471#issuecomment-1317038244
https://github.com/sofa-framework/sofa/issues/3473#issuecomment-1325267101:42,Modifiability,Inherit,Inherit,42,@fredroy could you try to add :; ``` cpp; Inherit::init();; ```. to call Mapping `init()` which include the function `testMechanicalState()` checking the `isMechanical` property.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3473#issuecomment-1325267101
https://github.com/sofa-framework/sofa/issues/3473#issuecomment-1325267101:118,Testability,test,testMechanicalState,118,@fredroy could you try to add :; ``` cpp; Inherit::init();; ```. to call Mapping `init()` which include the function `testMechanicalState()` checking the `isMechanical` property.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3473#issuecomment-1325267101
https://github.com/sofa-framework/sofa/pull/3474#issuecomment-1313261540:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3474#issuecomment-1313261540
https://github.com/sofa-framework/sofa/pull/3475#issuecomment-1310859794:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3475#issuecomment-1310859794
https://github.com/sofa-framework/sofa/pull/3476#issuecomment-1313262223:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3476#issuecomment-1313262223
https://github.com/sofa-framework/sofa/pull/3480#issuecomment-1314025007:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3480#issuecomment-1314025007
https://github.com/sofa-framework/sofa/pull/3480#issuecomment-1315357347:34,Energy Efficiency,schedul,scheduler,34,"For some reasons, the static task scheduler could not be destroyed by the end of the program because it results into a deadlock: the worker threads are not woken up by the destructor of the task scheduler. I did not find how to fix this issue. Therefore, I clear the task schedulers before the end of the program, in the module `cleanup` function. It did not happened before because the task scheduler was never destroyed resulting in a memory leak and not-joined idle threads.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3480#issuecomment-1315357347
https://github.com/sofa-framework/sofa/pull/3480#issuecomment-1315357347:195,Energy Efficiency,schedul,scheduler,195,"For some reasons, the static task scheduler could not be destroyed by the end of the program because it results into a deadlock: the worker threads are not woken up by the destructor of the task scheduler. I did not find how to fix this issue. Therefore, I clear the task schedulers before the end of the program, in the module `cleanup` function. It did not happened before because the task scheduler was never destroyed resulting in a memory leak and not-joined idle threads.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3480#issuecomment-1315357347
https://github.com/sofa-framework/sofa/pull/3480#issuecomment-1315357347:272,Energy Efficiency,schedul,schedulers,272,"For some reasons, the static task scheduler could not be destroyed by the end of the program because it results into a deadlock: the worker threads are not woken up by the destructor of the task scheduler. I did not find how to fix this issue. Therefore, I clear the task schedulers before the end of the program, in the module `cleanup` function. It did not happened before because the task scheduler was never destroyed resulting in a memory leak and not-joined idle threads.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3480#issuecomment-1315357347
https://github.com/sofa-framework/sofa/pull/3480#issuecomment-1315357347:392,Energy Efficiency,schedul,scheduler,392,"For some reasons, the static task scheduler could not be destroyed by the end of the program because it results into a deadlock: the worker threads are not woken up by the destructor of the task scheduler. I did not find how to fix this issue. Therefore, I clear the task schedulers before the end of the program, in the module `cleanup` function. It did not happened before because the task scheduler was never destroyed resulting in a memory leak and not-joined idle threads.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3480#issuecomment-1315357347
https://github.com/sofa-framework/sofa/pull/3480#issuecomment-1315357347:257,Usability,clear,clear,257,"For some reasons, the static task scheduler could not be destroyed by the end of the program because it results into a deadlock: the worker threads are not woken up by the destructor of the task scheduler. I did not find how to fix this issue. Therefore, I clear the task schedulers before the end of the program, in the module `cleanup` function. It did not happened before because the task scheduler was never destroyed resulting in a memory leak and not-joined idle threads.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3480#issuecomment-1315357347
https://github.com/sofa-framework/sofa/pull/3480#issuecomment-1324884905:1049,Energy Efficiency,schedul,scheduler,1049,"The rational of the PR is sounded and the existing design in sofa that mix the base class with a kind of hardcoded singleton/registry is bad and should be refactored (thank for the PR so). . From my experience the refactoring step in such situation depends if the static part is actually implementing kind of singleton or a kind registry of instances. But in both case the refactoring consists in moving all the static methods and static attributes in a new class with the sole purpose of handle the registry/singleton. . In your PR you are moving the static method and the singleton into TaskSchedulerFactory. ; If found using ""factory"" is confusing as to me a factory's roles (and design pattern) is to map to different construction methods and not holding the created instances. In order to keep the registry separated from the factory part I recommend keeping the two concerns separated in different classes. . To me a clean layout separating implementions and concerns is the following:; ```cpp; class TaskScheduler {}; // The base class for a scheduler; class TaskSchedulerRegistry:: {}; // The class implementing a registry of taskschedulers; class TaskSchedulerFactory:: {}; // The class implementing a factory for taskscheduler; class MainTaskSchedulerRegistry::{}; // The ""static"" class which contains a singleton of a TaskSchedulerRegistry ; // and public static methods to manipulate it (with mutex in each of them) ; class MainTaskSchedulerFactory::{} // The ""static"" class which contains a singleton of a TaskSchedulerFactory; // and pubic static methods to manipulate it. ; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3480#issuecomment-1324884905
https://github.com/sofa-framework/sofa/pull/3480#issuecomment-1324884905:249,Integrability,depend,depends,249,"The rational of the PR is sounded and the existing design in sofa that mix the base class with a kind of hardcoded singleton/registry is bad and should be refactored (thank for the PR so). . From my experience the refactoring step in such situation depends if the static part is actually implementing kind of singleton or a kind registry of instances. But in both case the refactoring consists in moving all the static methods and static attributes in a new class with the sole purpose of handle the registry/singleton. . In your PR you are moving the static method and the singleton into TaskSchedulerFactory. ; If found using ""factory"" is confusing as to me a factory's roles (and design pattern) is to map to different construction methods and not holding the created instances. In order to keep the registry separated from the factory part I recommend keeping the two concerns separated in different classes. . To me a clean layout separating implementions and concerns is the following:; ```cpp; class TaskScheduler {}; // The base class for a scheduler; class TaskSchedulerRegistry:: {}; // The class implementing a registry of taskschedulers; class TaskSchedulerFactory:: {}; // The class implementing a factory for taskscheduler; class MainTaskSchedulerRegistry::{}; // The ""static"" class which contains a singleton of a TaskSchedulerRegistry ; // and public static methods to manipulate it (with mutex in each of them) ; class MainTaskSchedulerFactory::{} // The ""static"" class which contains a singleton of a TaskSchedulerFactory; // and pubic static methods to manipulate it. ; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3480#issuecomment-1324884905
https://github.com/sofa-framework/sofa/pull/3480#issuecomment-1324884905:155,Modifiability,refactor,refactored,155,"The rational of the PR is sounded and the existing design in sofa that mix the base class with a kind of hardcoded singleton/registry is bad and should be refactored (thank for the PR so). . From my experience the refactoring step in such situation depends if the static part is actually implementing kind of singleton or a kind registry of instances. But in both case the refactoring consists in moving all the static methods and static attributes in a new class with the sole purpose of handle the registry/singleton. . In your PR you are moving the static method and the singleton into TaskSchedulerFactory. ; If found using ""factory"" is confusing as to me a factory's roles (and design pattern) is to map to different construction methods and not holding the created instances. In order to keep the registry separated from the factory part I recommend keeping the two concerns separated in different classes. . To me a clean layout separating implementions and concerns is the following:; ```cpp; class TaskScheduler {}; // The base class for a scheduler; class TaskSchedulerRegistry:: {}; // The class implementing a registry of taskschedulers; class TaskSchedulerFactory:: {}; // The class implementing a factory for taskscheduler; class MainTaskSchedulerRegistry::{}; // The ""static"" class which contains a singleton of a TaskSchedulerRegistry ; // and public static methods to manipulate it (with mutex in each of them) ; class MainTaskSchedulerFactory::{} // The ""static"" class which contains a singleton of a TaskSchedulerFactory; // and pubic static methods to manipulate it. ; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3480#issuecomment-1324884905
https://github.com/sofa-framework/sofa/pull/3480#issuecomment-1324884905:214,Modifiability,refactor,refactoring,214,"The rational of the PR is sounded and the existing design in sofa that mix the base class with a kind of hardcoded singleton/registry is bad and should be refactored (thank for the PR so). . From my experience the refactoring step in such situation depends if the static part is actually implementing kind of singleton or a kind registry of instances. But in both case the refactoring consists in moving all the static methods and static attributes in a new class with the sole purpose of handle the registry/singleton. . In your PR you are moving the static method and the singleton into TaskSchedulerFactory. ; If found using ""factory"" is confusing as to me a factory's roles (and design pattern) is to map to different construction methods and not holding the created instances. In order to keep the registry separated from the factory part I recommend keeping the two concerns separated in different classes. . To me a clean layout separating implementions and concerns is the following:; ```cpp; class TaskScheduler {}; // The base class for a scheduler; class TaskSchedulerRegistry:: {}; // The class implementing a registry of taskschedulers; class TaskSchedulerFactory:: {}; // The class implementing a factory for taskscheduler; class MainTaskSchedulerRegistry::{}; // The ""static"" class which contains a singleton of a TaskSchedulerRegistry ; // and public static methods to manipulate it (with mutex in each of them) ; class MainTaskSchedulerFactory::{} // The ""static"" class which contains a singleton of a TaskSchedulerFactory; // and pubic static methods to manipulate it. ; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3480#issuecomment-1324884905
https://github.com/sofa-framework/sofa/pull/3480#issuecomment-1324884905:373,Modifiability,refactor,refactoring,373,"The rational of the PR is sounded and the existing design in sofa that mix the base class with a kind of hardcoded singleton/registry is bad and should be refactored (thank for the PR so). . From my experience the refactoring step in such situation depends if the static part is actually implementing kind of singleton or a kind registry of instances. But in both case the refactoring consists in moving all the static methods and static attributes in a new class with the sole purpose of handle the registry/singleton. . In your PR you are moving the static method and the singleton into TaskSchedulerFactory. ; If found using ""factory"" is confusing as to me a factory's roles (and design pattern) is to map to different construction methods and not holding the created instances. In order to keep the registry separated from the factory part I recommend keeping the two concerns separated in different classes. . To me a clean layout separating implementions and concerns is the following:; ```cpp; class TaskScheduler {}; // The base class for a scheduler; class TaskSchedulerRegistry:: {}; // The class implementing a registry of taskschedulers; class TaskSchedulerFactory:: {}; // The class implementing a factory for taskscheduler; class MainTaskSchedulerRegistry::{}; // The ""static"" class which contains a singleton of a TaskSchedulerRegistry ; // and public static methods to manipulate it (with mutex in each of them) ; class MainTaskSchedulerFactory::{} // The ""static"" class which contains a singleton of a TaskSchedulerFactory; // and pubic static methods to manipulate it. ; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3480#issuecomment-1324884905
https://github.com/sofa-framework/sofa/pull/3480#issuecomment-1324904059:46,Usability,feedback,feedback,46,@damienmarchal It makes sense. Thanks for the feedback,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3480#issuecomment-1324904059
https://github.com/sofa-framework/sofa/pull/3482#issuecomment-1316640754:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3482#issuecomment-1316640754
https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1314960371:105,Modifiability,plugin,plugin,105,"Hi, ; thank you for your report.; Could you please specify your setup:; OS, SOFA version and BeamAdapter plugin version and if it is compiled in or out of tree?. Does the crash happened at start?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1314960371
https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243:816,Availability,toler,tolerance,816,"Hello, I copied the 3 instruments on the Beam Adapter plug-in_ collis. The scn xml format is converted to the python format, and then it can be opened normally through SOFA, but it is stuck when you click animate. What is the reason?; import sys; import Sofa. def createScene(rootNode):; rootNode.addObject('RequiredPlugin',; pluginName='BeamAdapter SofaMeshCollision SofaBoundaryCondition SofaConstraint SofaMiscCollision SofaDeformable SofaGeneralLinearSolver SofaImplicitOdeSolver SofaLoader SofaOpenglVisual SofaTopologyMapping'); rootNode.addObject('VisualStyle', displayFlags='showVisualModels showBehaviorModels showCollisionModels hideMappings hideForceFields'). rootNode.addObject('DefaultVisualManagerLoop'); rootNode.addObject('FreeMotionAnimationLoop'). rootNode.addObject('LCPConstraintSolver',mu='0.1',tolerance='1e-10',maxIt='1000',build_lcp='false'); rootNode.addObject('DefaultPipeline', draw='0', depth='6', verbose='1'); rootNode.addObject('BruteForceBroadPhase'); rootNode.addObject('BVHNarrowPhase'); rootNode.addObject('LocalMinDistance',name='localmindistance',alarmDistance='2',contactDistance='1',angleCone='0.8',coneFactor='0.8'); rootNode.addObject('DefaultContactManager',name='Response',response='FrictionContact'); rootNode.addObject('DefaultCollisionGroupManager',name='Group'). topoLines_cath = rootNode.addChild('topoLines_cath'); topoLines_cath.addObject('WireRestShape',name='catheterRestShape',template='Rigid3d',printLog='0',length=1000.0, straightLength=600,spireDiameter=4000.0,spireHeight=0.0,densityOfBeams=[40,10],numEdges=200, numEdgesCollis=[40,20],youngModulus=10000 ,youngModulusExtremity=10000); topoLines_cath.addObject('EdgeSetTopologyContainer',name='meshLinesCath'); topoLines_cath.addObject('EdgeSetTopologyModifier', name='Modifier'); topoLines_cath.addObject('EdgeSetGeometryAlgorithms',name='GeomAlgo',template='Rigid3d'); topoLines_cath.addObject('MechanicalObject',template='Rigid3d',name='dofTopo1'). topoLines_guide = rootNode.addChild('topoL",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243
https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243:46,Energy Efficiency,Adapt,Adapter,46,"Hello, I copied the 3 instruments on the Beam Adapter plug-in_ collis. The scn xml format is converted to the python format, and then it can be opened normally through SOFA, but it is stuck when you click animate. What is the reason?; import sys; import Sofa. def createScene(rootNode):; rootNode.addObject('RequiredPlugin',; pluginName='BeamAdapter SofaMeshCollision SofaBoundaryCondition SofaConstraint SofaMiscCollision SofaDeformable SofaGeneralLinearSolver SofaImplicitOdeSolver SofaLoader SofaOpenglVisual SofaTopologyMapping'); rootNode.addObject('VisualStyle', displayFlags='showVisualModels showBehaviorModels showCollisionModels hideMappings hideForceFields'). rootNode.addObject('DefaultVisualManagerLoop'); rootNode.addObject('FreeMotionAnimationLoop'). rootNode.addObject('LCPConstraintSolver',mu='0.1',tolerance='1e-10',maxIt='1000',build_lcp='false'); rootNode.addObject('DefaultPipeline', draw='0', depth='6', verbose='1'); rootNode.addObject('BruteForceBroadPhase'); rootNode.addObject('BVHNarrowPhase'); rootNode.addObject('LocalMinDistance',name='localmindistance',alarmDistance='2',contactDistance='1',angleCone='0.8',coneFactor='0.8'); rootNode.addObject('DefaultContactManager',name='Response',response='FrictionContact'); rootNode.addObject('DefaultCollisionGroupManager',name='Group'). topoLines_cath = rootNode.addChild('topoLines_cath'); topoLines_cath.addObject('WireRestShape',name='catheterRestShape',template='Rigid3d',printLog='0',length=1000.0, straightLength=600,spireDiameter=4000.0,spireHeight=0.0,densityOfBeams=[40,10],numEdges=200, numEdgesCollis=[40,20],youngModulus=10000 ,youngModulusExtremity=10000); topoLines_cath.addObject('EdgeSetTopologyContainer',name='meshLinesCath'); topoLines_cath.addObject('EdgeSetTopologyModifier', name='Modifier'); topoLines_cath.addObject('EdgeSetGeometryAlgorithms',name='GeomAlgo',template='Rigid3d'); topoLines_cath.addObject('MechanicalObject',template='Rigid3d',name='dofTopo1'). topoLines_guide = rootNode.addChild('topoL",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243
https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243:3966,Energy Efficiency,Adapt,AdaptiveBeamForceFieldAndMass,3966,"sCoils'); topoLines_coils.addObject('EdgeSetTopologyModifier',name='Modifier'); topoLines_coils.addObject('EdgeSetGeometryAlgorithms',name='GeomAlgo', template='Rigid3d'); topoLines_coils.addObject('MechanicalObject',template='Rigid3d',name='dofTopo3'). InstrumentCombined = rootNode.addChild('InstrumentCombined'); InstrumentCombined.addObject('EulerImplicitSolver',rayleighStiffness=0.2,rayleighMass=0.1,printLog='false'); InstrumentCombined.addObject('BTDLinearSolver',subpartSolve='0',verification='0',verbose='0'); InstrumentCombined.addObject('RegularGridTopology',name='meshLinesCombined',nx=60, ny=1, nz=1,xmin=0.0, xmax=1.0,ymin=0, ymax=0,zmin=1, zmax=1); InstrumentCombined.addObject('MechanicalObject',template='Rigid3d',name='DOFs',showIndices='0',ry=-90); InstrumentCombined.addObject('WireBeamInterpolation',name='InterpolCatheter',WireRestShape='@../topoLines_cath/catheterRestShape',radius=1,printLog='0'); InstrumentCombined.addObject('AdaptiveBeamForceFieldAndMass',name='CatheterForceField',interpolation='@InterpolCatheter',massDensity=0.00000155); InstrumentCombined.addObject('WireBeamInterpolation', name='InterpolGuide', WireRestShape='@../topoLines_guide/GuideRestShape', radius=0.9, printLog='0'); InstrumentCombined.addObject('AdaptiveBeamForceFieldAndMass',name='GuideForceField',interpolation='@InterpolGuide',massDensity=0.00000155); InstrumentCombined.addObject('WireBeamInterpolation', name='InterpolCoils', WireRestShape='@../topoLines_coils/CoilRestShape', radius=0.1, printLog='0'); InstrumentCombined.addObject('AdaptiveBeamForceFieldAndMass', name='CoilsForceField', interpolation='@InterpolCoils', massDensity=0.000021); InstrumentCombined.addObject('InterventionalRadiologyController',name='m_ircontroller',template='Rigid3d',printLog='0',instruments='InterpolCatheter InterpolGuide InterpolCoils',startingPos=[0, 0 ,0 ,0 ,-0.7071068, 0, 0.7071068],xtip=[1 ,0 ,0] ,rotationInstrument=[0, 0, 0 ],controlledInstrument=0,step=3,speed=2 ); InstrumentCombined.addObj",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243
https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243:4267,Energy Efficiency,Adapt,AdaptiveBeamForceFieldAndMass,4267,"rumentCombined'); InstrumentCombined.addObject('EulerImplicitSolver',rayleighStiffness=0.2,rayleighMass=0.1,printLog='false'); InstrumentCombined.addObject('BTDLinearSolver',subpartSolve='0',verification='0',verbose='0'); InstrumentCombined.addObject('RegularGridTopology',name='meshLinesCombined',nx=60, ny=1, nz=1,xmin=0.0, xmax=1.0,ymin=0, ymax=0,zmin=1, zmax=1); InstrumentCombined.addObject('MechanicalObject',template='Rigid3d',name='DOFs',showIndices='0',ry=-90); InstrumentCombined.addObject('WireBeamInterpolation',name='InterpolCatheter',WireRestShape='@../topoLines_cath/catheterRestShape',radius=1,printLog='0'); InstrumentCombined.addObject('AdaptiveBeamForceFieldAndMass',name='CatheterForceField',interpolation='@InterpolCatheter',massDensity=0.00000155); InstrumentCombined.addObject('WireBeamInterpolation', name='InterpolGuide', WireRestShape='@../topoLines_guide/GuideRestShape', radius=0.9, printLog='0'); InstrumentCombined.addObject('AdaptiveBeamForceFieldAndMass',name='GuideForceField',interpolation='@InterpolGuide',massDensity=0.00000155); InstrumentCombined.addObject('WireBeamInterpolation', name='InterpolCoils', WireRestShape='@../topoLines_coils/CoilRestShape', radius=0.1, printLog='0'); InstrumentCombined.addObject('AdaptiveBeamForceFieldAndMass', name='CoilsForceField', interpolation='@InterpolCoils', massDensity=0.000021); InstrumentCombined.addObject('InterventionalRadiologyController',name='m_ircontroller',template='Rigid3d',printLog='0',instruments='InterpolCatheter InterpolGuide InterpolCoils',startingPos=[0, 0 ,0 ,0 ,-0.7071068, 0, 0.7071068],xtip=[1 ,0 ,0] ,rotationInstrument=[0, 0, 0 ],controlledInstrument=0,step=3,speed=2 ); InstrumentCombined.addObject('LinearSolverConstraintCorrection',printLog='false',wire_optimization='true'); InstrumentCombined.addObject('FixedConstraint',name='FixedConstraint',indices='0'); InstrumentCombined.addObject('RestShapeSpringsForceField',points='@m_ircontroller.indexFirstNode',stiffness=1e8,angularStiffness=1e",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243
https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243:4561,Energy Efficiency,Adapt,AdaptiveBeamForceFieldAndMass,4561,"d',nx=60, ny=1, nz=1,xmin=0.0, xmax=1.0,ymin=0, ymax=0,zmin=1, zmax=1); InstrumentCombined.addObject('MechanicalObject',template='Rigid3d',name='DOFs',showIndices='0',ry=-90); InstrumentCombined.addObject('WireBeamInterpolation',name='InterpolCatheter',WireRestShape='@../topoLines_cath/catheterRestShape',radius=1,printLog='0'); InstrumentCombined.addObject('AdaptiveBeamForceFieldAndMass',name='CatheterForceField',interpolation='@InterpolCatheter',massDensity=0.00000155); InstrumentCombined.addObject('WireBeamInterpolation', name='InterpolGuide', WireRestShape='@../topoLines_guide/GuideRestShape', radius=0.9, printLog='0'); InstrumentCombined.addObject('AdaptiveBeamForceFieldAndMass',name='GuideForceField',interpolation='@InterpolGuide',massDensity=0.00000155); InstrumentCombined.addObject('WireBeamInterpolation', name='InterpolCoils', WireRestShape='@../topoLines_coils/CoilRestShape', radius=0.1, printLog='0'); InstrumentCombined.addObject('AdaptiveBeamForceFieldAndMass', name='CoilsForceField', interpolation='@InterpolCoils', massDensity=0.000021); InstrumentCombined.addObject('InterventionalRadiologyController',name='m_ircontroller',template='Rigid3d',printLog='0',instruments='InterpolCatheter InterpolGuide InterpolCoils',startingPos=[0, 0 ,0 ,0 ,-0.7071068, 0, 0.7071068],xtip=[1 ,0 ,0] ,rotationInstrument=[0, 0, 0 ],controlledInstrument=0,step=3,speed=2 ); InstrumentCombined.addObject('LinearSolverConstraintCorrection',printLog='false',wire_optimization='true'); InstrumentCombined.addObject('FixedConstraint',name='FixedConstraint',indices='0'); InstrumentCombined.addObject('RestShapeSpringsForceField',points='@m_ircontroller.indexFirstNode',stiffness=1e8,angularStiffness=1e8). Collis = InstrumentCombined.addChild('Collis'); Collis.activated= True; Collis.addObject('EdgeSetTopologyContainer', name='collisEdgeSet'); Collis.addObject('EdgeSetTopologyModifier',name='colliseEdgeModifier'); Collis.addObject('MechanicalObject',name='CollisionDOFs'); Collis.addObject('Mul",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243
https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243:6413,Energy Efficiency,Adapt,AdaptiveBeamMapping,6413,"'); Collis.addObject('EdgeSetTopologyModifier',name='colliseEdgeModifier'); Collis.addObject('MechanicalObject',name='CollisionDOFs'); Collis.addObject('MultiAdaptiveBeamMapping',name='collisMap', controller='../m_ircontroller',useCurvAbs='1',printLog='0'); Collis.addObject('LineCollisionModel',proximity=0.0,group='1'); Collis.addObject('PointCollisionModel', proximity=0.0, group='1'). VisuCatheter = InstrumentCombined.addChild('VisuCatheter'); VisuCatheter.activated= True; VisuCatheter.addObject('MechanicalObject',name='Quads'); VisuCatheter.addObject('QuadSetTopologyContainer',name='ContainerCath'); VisuCatheter.addObject('QuadSetTopologyModifier',name='Modifier'); VisuCatheter.addObject('QuadSetGeometryAlgorithms',name='GeomAlgo', template='Vec3d'); VisuCatheter.addObject('Edge2QuadTopologicalMapping',nbPointsOnEachCircle='10',radius=2,input='@../../topoLines_cath/meshLinesCath',output='@ContainerCath',flipNormals=True); VisuCatheter.addObject('AdaptiveBeamMapping',name='VisuMapCath',useCurvAbs='1', printLog='0', interpolation='@../InterpolCatheter', input='@../DOFs', output='@Quads', isMechanical=False); VisuOgl = VisuCatheter.addChild('VisuOgl'); VisuOgl.activated= True; VisuOgl.addObject('OglModel',name='Visual',color='0.7 0.7 0.7', quads='@../ContainerCath.quads',material='texture Ambient 1 0.2 0.2 0.2 0.0 Diffuse 1 1.0 1.0 1.0 1.0 Specular 1 1.0 1.0 1.0 1.0 Emissive 0 0.15 0.05 0.05 0.0 Shininess 1 20'); VisuOgl.addObject('IdentityMapping',input='@../Quads',output='@Visual'). VisuGuide = InstrumentCombined.addChild('VisuGuide'); VisuGuide.activated= True; VisuGuide.addObject('MechanicalObject',name='Quads'); VisuGuide.addObject('QuadSetTopologyContainer',name='ContainerGuide'); VisuGuide.addObject('QuadSetTopologyModifier',name='Modifier'); VisuGuide.addObject('QuadSetGeometryAlgorithms',name='GeomAlgo', template='Vec3d'); VisuGuide.addObject('Edge2QuadTopologicalMapping',nbPointsOnEachCircle='10',radius=1,input='@../../topoLines_guide/meshLinesGuide',output",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243
https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243:7526,Energy Efficiency,Adapt,AdaptiveBeamMapping,7526,"nical=False); VisuOgl = VisuCatheter.addChild('VisuOgl'); VisuOgl.activated= True; VisuOgl.addObject('OglModel',name='Visual',color='0.7 0.7 0.7', quads='@../ContainerCath.quads',material='texture Ambient 1 0.2 0.2 0.2 0.0 Diffuse 1 1.0 1.0 1.0 1.0 Specular 1 1.0 1.0 1.0 1.0 Emissive 0 0.15 0.05 0.05 0.0 Shininess 1 20'); VisuOgl.addObject('IdentityMapping',input='@../Quads',output='@Visual'). VisuGuide = InstrumentCombined.addChild('VisuGuide'); VisuGuide.activated= True; VisuGuide.addObject('MechanicalObject',name='Quads'); VisuGuide.addObject('QuadSetTopologyContainer',name='ContainerGuide'); VisuGuide.addObject('QuadSetTopologyModifier',name='Modifier'); VisuGuide.addObject('QuadSetGeometryAlgorithms',name='GeomAlgo', template='Vec3d'); VisuGuide.addObject('Edge2QuadTopologicalMapping',nbPointsOnEachCircle='10',radius=1,input='@../../topoLines_guide/meshLinesGuide',output='@ContainerGuide', flipNormals=True,listening=True); VisuGuide.addObject('AdaptiveBeamMapping',name='visuMapGuide',useCurvAbs='1',printLog='0',interpolation='@../InterpolGuide',input='@../DOFs',output='@Quads',isMechanical=False); VisuOgl = VisuGuide.addChild('VisuOgl'); VisuOgl.activated = True; VisuOgl.addObject('OglModel',name='Visual', color='0.2 0.2 0.8' , material='texture Ambient 1 0.2 0.2 0.2 0.0 Diffuse 1 1.0 1.0 1.0 1.0 Specular 1 1.0 1.0 1.0 1.0 Emissive 0 0.15 0.05 0.05 0.0 Shininess 1 20', quads='@../ContainerGuide.quads'); VisuOgl.addObject('IdentityMapping', input='@../Quads', output='@Visual'). VisuCoils = InstrumentCombined.addChild('VisuCoils'); VisuCoils.activated= True; VisuCoils.addObject('MechanicalObject',name='Quads'); VisuCoils.addObject('QuadSetTopologyContainer',name='ContainerCoils'); VisuCoils.addObject('QuadSetTopologyModifier',name='Modifier' ); VisuCoils.addObject('QuadSetGeometryAlgorithms', name='GeomAlgo',template='Vec3d'); VisuCoils.addObject('Edge2QuadTopologicalMapping',nbPointsOnEachCircle='10',radius=0.3, input='@../../topoLines_coils/meshLinesCoils',outpu",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243
https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243:8640,Energy Efficiency,Adapt,AdaptiveBeamMapping,8640,"se); VisuOgl = VisuGuide.addChild('VisuOgl'); VisuOgl.activated = True; VisuOgl.addObject('OglModel',name='Visual', color='0.2 0.2 0.8' , material='texture Ambient 1 0.2 0.2 0.2 0.0 Diffuse 1 1.0 1.0 1.0 1.0 Specular 1 1.0 1.0 1.0 1.0 Emissive 0 0.15 0.05 0.05 0.0 Shininess 1 20', quads='@../ContainerGuide.quads'); VisuOgl.addObject('IdentityMapping', input='@../Quads', output='@Visual'). VisuCoils = InstrumentCombined.addChild('VisuCoils'); VisuCoils.activated= True; VisuCoils.addObject('MechanicalObject',name='Quads'); VisuCoils.addObject('QuadSetTopologyContainer',name='ContainerCoils'); VisuCoils.addObject('QuadSetTopologyModifier',name='Modifier' ); VisuCoils.addObject('QuadSetGeometryAlgorithms', name='GeomAlgo',template='Vec3d'); VisuCoils.addObject('Edge2QuadTopologicalMapping',nbPointsOnEachCircle='10',radius=0.3, input='@../../topoLines_coils/meshLinesCoils',output='@ContainerCoils', flipNormals=True,listening=True); VisuCoils.addObject('AdaptiveBeamMapping', name='visuMapCoils',useCurvAbs='1',printLog='0',interpolation='@../InterpolCoils',input='@../DOFs',output='@Quads',isMechanical='false'); VisuOgl = VisuCoils.addChild('VisuOgl'); VisuOgl.activated = True; VisuOgl.addObject('OglModel',name='Visual', color='0.2 0.8 0.2', material='texture Ambient 1 0.2 0.2 0.2 0.0 Diffuse 1 1.0 1.0 1.0 1.0 Specular 1 1.0 1.0 1.0 1.0 Emissive 0 0.15 0.05 0.05 0.0 Shininess 1 20',quads='@../ContainerCoils.quads'); VisuOgl.addObject('IdentityMapping',input='@../Quads',output='@Visual'). CollisionModel = InstrumentCombined.addChild('CollisionModel'); CollisionModel.addObject('MeshObjLoader',name='meshLoader',filename='D:/DefrostSofaBundle_win64_python3.8_v22.06.00-beta4/DefrostSofaBundle_win64_python3.8_v22.06.00-beta4/plugins/BeamAdapter/examples/mesh/phantom.obj',triangulate='true',flipNormals='1'); CollisionModel.addObject('MeshTopology', position='@meshLoader.position', triangles='@meshLoader.triangles'); CollisionModel.addObject('MechanicalObject', name='DOFs1', positi",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243
https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243:46,Integrability,Adapter,Adapter,46,"Hello, I copied the 3 instruments on the Beam Adapter plug-in_ collis. The scn xml format is converted to the python format, and then it can be opened normally through SOFA, but it is stuck when you click animate. What is the reason?; import sys; import Sofa. def createScene(rootNode):; rootNode.addObject('RequiredPlugin',; pluginName='BeamAdapter SofaMeshCollision SofaBoundaryCondition SofaConstraint SofaMiscCollision SofaDeformable SofaGeneralLinearSolver SofaImplicitOdeSolver SofaLoader SofaOpenglVisual SofaTopologyMapping'); rootNode.addObject('VisualStyle', displayFlags='showVisualModels showBehaviorModels showCollisionModels hideMappings hideForceFields'). rootNode.addObject('DefaultVisualManagerLoop'); rootNode.addObject('FreeMotionAnimationLoop'). rootNode.addObject('LCPConstraintSolver',mu='0.1',tolerance='1e-10',maxIt='1000',build_lcp='false'); rootNode.addObject('DefaultPipeline', draw='0', depth='6', verbose='1'); rootNode.addObject('BruteForceBroadPhase'); rootNode.addObject('BVHNarrowPhase'); rootNode.addObject('LocalMinDistance',name='localmindistance',alarmDistance='2',contactDistance='1',angleCone='0.8',coneFactor='0.8'); rootNode.addObject('DefaultContactManager',name='Response',response='FrictionContact'); rootNode.addObject('DefaultCollisionGroupManager',name='Group'). topoLines_cath = rootNode.addChild('topoLines_cath'); topoLines_cath.addObject('WireRestShape',name='catheterRestShape',template='Rigid3d',printLog='0',length=1000.0, straightLength=600,spireDiameter=4000.0,spireHeight=0.0,densityOfBeams=[40,10],numEdges=200, numEdgesCollis=[40,20],youngModulus=10000 ,youngModulusExtremity=10000); topoLines_cath.addObject('EdgeSetTopologyContainer',name='meshLinesCath'); topoLines_cath.addObject('EdgeSetTopologyModifier', name='Modifier'); topoLines_cath.addObject('EdgeSetGeometryAlgorithms',name='GeomAlgo',template='Rigid3d'); topoLines_cath.addObject('MechanicalObject',template='Rigid3d',name='dofTopo1'). topoLines_guide = rootNode.addChild('topoL",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243
https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243:46,Modifiability,Adapt,Adapter,46,"Hello, I copied the 3 instruments on the Beam Adapter plug-in_ collis. The scn xml format is converted to the python format, and then it can be opened normally through SOFA, but it is stuck when you click animate. What is the reason?; import sys; import Sofa. def createScene(rootNode):; rootNode.addObject('RequiredPlugin',; pluginName='BeamAdapter SofaMeshCollision SofaBoundaryCondition SofaConstraint SofaMiscCollision SofaDeformable SofaGeneralLinearSolver SofaImplicitOdeSolver SofaLoader SofaOpenglVisual SofaTopologyMapping'); rootNode.addObject('VisualStyle', displayFlags='showVisualModels showBehaviorModels showCollisionModels hideMappings hideForceFields'). rootNode.addObject('DefaultVisualManagerLoop'); rootNode.addObject('FreeMotionAnimationLoop'). rootNode.addObject('LCPConstraintSolver',mu='0.1',tolerance='1e-10',maxIt='1000',build_lcp='false'); rootNode.addObject('DefaultPipeline', draw='0', depth='6', verbose='1'); rootNode.addObject('BruteForceBroadPhase'); rootNode.addObject('BVHNarrowPhase'); rootNode.addObject('LocalMinDistance',name='localmindistance',alarmDistance='2',contactDistance='1',angleCone='0.8',coneFactor='0.8'); rootNode.addObject('DefaultContactManager',name='Response',response='FrictionContact'); rootNode.addObject('DefaultCollisionGroupManager',name='Group'). topoLines_cath = rootNode.addChild('topoLines_cath'); topoLines_cath.addObject('WireRestShape',name='catheterRestShape',template='Rigid3d',printLog='0',length=1000.0, straightLength=600,spireDiameter=4000.0,spireHeight=0.0,densityOfBeams=[40,10],numEdges=200, numEdgesCollis=[40,20],youngModulus=10000 ,youngModulusExtremity=10000); topoLines_cath.addObject('EdgeSetTopologyContainer',name='meshLinesCath'); topoLines_cath.addObject('EdgeSetTopologyModifier', name='Modifier'); topoLines_cath.addObject('EdgeSetGeometryAlgorithms',name='GeomAlgo',template='Rigid3d'); topoLines_cath.addObject('MechanicalObject',template='Rigid3d',name='dofTopo1'). topoLines_guide = rootNode.addChild('topoL",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243
https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243:326,Modifiability,plugin,pluginName,326,"Hello, I copied the 3 instruments on the Beam Adapter plug-in_ collis. The scn xml format is converted to the python format, and then it can be opened normally through SOFA, but it is stuck when you click animate. What is the reason?; import sys; import Sofa. def createScene(rootNode):; rootNode.addObject('RequiredPlugin',; pluginName='BeamAdapter SofaMeshCollision SofaBoundaryCondition SofaConstraint SofaMiscCollision SofaDeformable SofaGeneralLinearSolver SofaImplicitOdeSolver SofaLoader SofaOpenglVisual SofaTopologyMapping'); rootNode.addObject('VisualStyle', displayFlags='showVisualModels showBehaviorModels showCollisionModels hideMappings hideForceFields'). rootNode.addObject('DefaultVisualManagerLoop'); rootNode.addObject('FreeMotionAnimationLoop'). rootNode.addObject('LCPConstraintSolver',mu='0.1',tolerance='1e-10',maxIt='1000',build_lcp='false'); rootNode.addObject('DefaultPipeline', draw='0', depth='6', verbose='1'); rootNode.addObject('BruteForceBroadPhase'); rootNode.addObject('BVHNarrowPhase'); rootNode.addObject('LocalMinDistance',name='localmindistance',alarmDistance='2',contactDistance='1',angleCone='0.8',coneFactor='0.8'); rootNode.addObject('DefaultContactManager',name='Response',response='FrictionContact'); rootNode.addObject('DefaultCollisionGroupManager',name='Group'). topoLines_cath = rootNode.addChild('topoLines_cath'); topoLines_cath.addObject('WireRestShape',name='catheterRestShape',template='Rigid3d',printLog='0',length=1000.0, straightLength=600,spireDiameter=4000.0,spireHeight=0.0,densityOfBeams=[40,10],numEdges=200, numEdgesCollis=[40,20],youngModulus=10000 ,youngModulusExtremity=10000); topoLines_cath.addObject('EdgeSetTopologyContainer',name='meshLinesCath'); topoLines_cath.addObject('EdgeSetTopologyModifier', name='Modifier'); topoLines_cath.addObject('EdgeSetGeometryAlgorithms',name='GeomAlgo',template='Rigid3d'); topoLines_cath.addObject('MechanicalObject',template='Rigid3d',name='dofTopo1'). topoLines_guide = rootNode.addChild('topoL",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243
https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243:3966,Modifiability,Adapt,AdaptiveBeamForceFieldAndMass,3966,"sCoils'); topoLines_coils.addObject('EdgeSetTopologyModifier',name='Modifier'); topoLines_coils.addObject('EdgeSetGeometryAlgorithms',name='GeomAlgo', template='Rigid3d'); topoLines_coils.addObject('MechanicalObject',template='Rigid3d',name='dofTopo3'). InstrumentCombined = rootNode.addChild('InstrumentCombined'); InstrumentCombined.addObject('EulerImplicitSolver',rayleighStiffness=0.2,rayleighMass=0.1,printLog='false'); InstrumentCombined.addObject('BTDLinearSolver',subpartSolve='0',verification='0',verbose='0'); InstrumentCombined.addObject('RegularGridTopology',name='meshLinesCombined',nx=60, ny=1, nz=1,xmin=0.0, xmax=1.0,ymin=0, ymax=0,zmin=1, zmax=1); InstrumentCombined.addObject('MechanicalObject',template='Rigid3d',name='DOFs',showIndices='0',ry=-90); InstrumentCombined.addObject('WireBeamInterpolation',name='InterpolCatheter',WireRestShape='@../topoLines_cath/catheterRestShape',radius=1,printLog='0'); InstrumentCombined.addObject('AdaptiveBeamForceFieldAndMass',name='CatheterForceField',interpolation='@InterpolCatheter',massDensity=0.00000155); InstrumentCombined.addObject('WireBeamInterpolation', name='InterpolGuide', WireRestShape='@../topoLines_guide/GuideRestShape', radius=0.9, printLog='0'); InstrumentCombined.addObject('AdaptiveBeamForceFieldAndMass',name='GuideForceField',interpolation='@InterpolGuide',massDensity=0.00000155); InstrumentCombined.addObject('WireBeamInterpolation', name='InterpolCoils', WireRestShape='@../topoLines_coils/CoilRestShape', radius=0.1, printLog='0'); InstrumentCombined.addObject('AdaptiveBeamForceFieldAndMass', name='CoilsForceField', interpolation='@InterpolCoils', massDensity=0.000021); InstrumentCombined.addObject('InterventionalRadiologyController',name='m_ircontroller',template='Rigid3d',printLog='0',instruments='InterpolCatheter InterpolGuide InterpolCoils',startingPos=[0, 0 ,0 ,0 ,-0.7071068, 0, 0.7071068],xtip=[1 ,0 ,0] ,rotationInstrument=[0, 0, 0 ],controlledInstrument=0,step=3,speed=2 ); InstrumentCombined.addObj",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243
https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243:4267,Modifiability,Adapt,AdaptiveBeamForceFieldAndMass,4267,"rumentCombined'); InstrumentCombined.addObject('EulerImplicitSolver',rayleighStiffness=0.2,rayleighMass=0.1,printLog='false'); InstrumentCombined.addObject('BTDLinearSolver',subpartSolve='0',verification='0',verbose='0'); InstrumentCombined.addObject('RegularGridTopology',name='meshLinesCombined',nx=60, ny=1, nz=1,xmin=0.0, xmax=1.0,ymin=0, ymax=0,zmin=1, zmax=1); InstrumentCombined.addObject('MechanicalObject',template='Rigid3d',name='DOFs',showIndices='0',ry=-90); InstrumentCombined.addObject('WireBeamInterpolation',name='InterpolCatheter',WireRestShape='@../topoLines_cath/catheterRestShape',radius=1,printLog='0'); InstrumentCombined.addObject('AdaptiveBeamForceFieldAndMass',name='CatheterForceField',interpolation='@InterpolCatheter',massDensity=0.00000155); InstrumentCombined.addObject('WireBeamInterpolation', name='InterpolGuide', WireRestShape='@../topoLines_guide/GuideRestShape', radius=0.9, printLog='0'); InstrumentCombined.addObject('AdaptiveBeamForceFieldAndMass',name='GuideForceField',interpolation='@InterpolGuide',massDensity=0.00000155); InstrumentCombined.addObject('WireBeamInterpolation', name='InterpolCoils', WireRestShape='@../topoLines_coils/CoilRestShape', radius=0.1, printLog='0'); InstrumentCombined.addObject('AdaptiveBeamForceFieldAndMass', name='CoilsForceField', interpolation='@InterpolCoils', massDensity=0.000021); InstrumentCombined.addObject('InterventionalRadiologyController',name='m_ircontroller',template='Rigid3d',printLog='0',instruments='InterpolCatheter InterpolGuide InterpolCoils',startingPos=[0, 0 ,0 ,0 ,-0.7071068, 0, 0.7071068],xtip=[1 ,0 ,0] ,rotationInstrument=[0, 0, 0 ],controlledInstrument=0,step=3,speed=2 ); InstrumentCombined.addObject('LinearSolverConstraintCorrection',printLog='false',wire_optimization='true'); InstrumentCombined.addObject('FixedConstraint',name='FixedConstraint',indices='0'); InstrumentCombined.addObject('RestShapeSpringsForceField',points='@m_ircontroller.indexFirstNode',stiffness=1e8,angularStiffness=1e",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243
https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243:4561,Modifiability,Adapt,AdaptiveBeamForceFieldAndMass,4561,"d',nx=60, ny=1, nz=1,xmin=0.0, xmax=1.0,ymin=0, ymax=0,zmin=1, zmax=1); InstrumentCombined.addObject('MechanicalObject',template='Rigid3d',name='DOFs',showIndices='0',ry=-90); InstrumentCombined.addObject('WireBeamInterpolation',name='InterpolCatheter',WireRestShape='@../topoLines_cath/catheterRestShape',radius=1,printLog='0'); InstrumentCombined.addObject('AdaptiveBeamForceFieldAndMass',name='CatheterForceField',interpolation='@InterpolCatheter',massDensity=0.00000155); InstrumentCombined.addObject('WireBeamInterpolation', name='InterpolGuide', WireRestShape='@../topoLines_guide/GuideRestShape', radius=0.9, printLog='0'); InstrumentCombined.addObject('AdaptiveBeamForceFieldAndMass',name='GuideForceField',interpolation='@InterpolGuide',massDensity=0.00000155); InstrumentCombined.addObject('WireBeamInterpolation', name='InterpolCoils', WireRestShape='@../topoLines_coils/CoilRestShape', radius=0.1, printLog='0'); InstrumentCombined.addObject('AdaptiveBeamForceFieldAndMass', name='CoilsForceField', interpolation='@InterpolCoils', massDensity=0.000021); InstrumentCombined.addObject('InterventionalRadiologyController',name='m_ircontroller',template='Rigid3d',printLog='0',instruments='InterpolCatheter InterpolGuide InterpolCoils',startingPos=[0, 0 ,0 ,0 ,-0.7071068, 0, 0.7071068],xtip=[1 ,0 ,0] ,rotationInstrument=[0, 0, 0 ],controlledInstrument=0,step=3,speed=2 ); InstrumentCombined.addObject('LinearSolverConstraintCorrection',printLog='false',wire_optimization='true'); InstrumentCombined.addObject('FixedConstraint',name='FixedConstraint',indices='0'); InstrumentCombined.addObject('RestShapeSpringsForceField',points='@m_ircontroller.indexFirstNode',stiffness=1e8,angularStiffness=1e8). Collis = InstrumentCombined.addChild('Collis'); Collis.activated= True; Collis.addObject('EdgeSetTopologyContainer', name='collisEdgeSet'); Collis.addObject('EdgeSetTopologyModifier',name='colliseEdgeModifier'); Collis.addObject('MechanicalObject',name='CollisionDOFs'); Collis.addObject('Mul",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243
https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243:6413,Modifiability,Adapt,AdaptiveBeamMapping,6413,"'); Collis.addObject('EdgeSetTopologyModifier',name='colliseEdgeModifier'); Collis.addObject('MechanicalObject',name='CollisionDOFs'); Collis.addObject('MultiAdaptiveBeamMapping',name='collisMap', controller='../m_ircontroller',useCurvAbs='1',printLog='0'); Collis.addObject('LineCollisionModel',proximity=0.0,group='1'); Collis.addObject('PointCollisionModel', proximity=0.0, group='1'). VisuCatheter = InstrumentCombined.addChild('VisuCatheter'); VisuCatheter.activated= True; VisuCatheter.addObject('MechanicalObject',name='Quads'); VisuCatheter.addObject('QuadSetTopologyContainer',name='ContainerCath'); VisuCatheter.addObject('QuadSetTopologyModifier',name='Modifier'); VisuCatheter.addObject('QuadSetGeometryAlgorithms',name='GeomAlgo', template='Vec3d'); VisuCatheter.addObject('Edge2QuadTopologicalMapping',nbPointsOnEachCircle='10',radius=2,input='@../../topoLines_cath/meshLinesCath',output='@ContainerCath',flipNormals=True); VisuCatheter.addObject('AdaptiveBeamMapping',name='VisuMapCath',useCurvAbs='1', printLog='0', interpolation='@../InterpolCatheter', input='@../DOFs', output='@Quads', isMechanical=False); VisuOgl = VisuCatheter.addChild('VisuOgl'); VisuOgl.activated= True; VisuOgl.addObject('OglModel',name='Visual',color='0.7 0.7 0.7', quads='@../ContainerCath.quads',material='texture Ambient 1 0.2 0.2 0.2 0.0 Diffuse 1 1.0 1.0 1.0 1.0 Specular 1 1.0 1.0 1.0 1.0 Emissive 0 0.15 0.05 0.05 0.0 Shininess 1 20'); VisuOgl.addObject('IdentityMapping',input='@../Quads',output='@Visual'). VisuGuide = InstrumentCombined.addChild('VisuGuide'); VisuGuide.activated= True; VisuGuide.addObject('MechanicalObject',name='Quads'); VisuGuide.addObject('QuadSetTopologyContainer',name='ContainerGuide'); VisuGuide.addObject('QuadSetTopologyModifier',name='Modifier'); VisuGuide.addObject('QuadSetGeometryAlgorithms',name='GeomAlgo', template='Vec3d'); VisuGuide.addObject('Edge2QuadTopologicalMapping',nbPointsOnEachCircle='10',radius=1,input='@../../topoLines_guide/meshLinesGuide',output",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243
https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243:7526,Modifiability,Adapt,AdaptiveBeamMapping,7526,"nical=False); VisuOgl = VisuCatheter.addChild('VisuOgl'); VisuOgl.activated= True; VisuOgl.addObject('OglModel',name='Visual',color='0.7 0.7 0.7', quads='@../ContainerCath.quads',material='texture Ambient 1 0.2 0.2 0.2 0.0 Diffuse 1 1.0 1.0 1.0 1.0 Specular 1 1.0 1.0 1.0 1.0 Emissive 0 0.15 0.05 0.05 0.0 Shininess 1 20'); VisuOgl.addObject('IdentityMapping',input='@../Quads',output='@Visual'). VisuGuide = InstrumentCombined.addChild('VisuGuide'); VisuGuide.activated= True; VisuGuide.addObject('MechanicalObject',name='Quads'); VisuGuide.addObject('QuadSetTopologyContainer',name='ContainerGuide'); VisuGuide.addObject('QuadSetTopologyModifier',name='Modifier'); VisuGuide.addObject('QuadSetGeometryAlgorithms',name='GeomAlgo', template='Vec3d'); VisuGuide.addObject('Edge2QuadTopologicalMapping',nbPointsOnEachCircle='10',radius=1,input='@../../topoLines_guide/meshLinesGuide',output='@ContainerGuide', flipNormals=True,listening=True); VisuGuide.addObject('AdaptiveBeamMapping',name='visuMapGuide',useCurvAbs='1',printLog='0',interpolation='@../InterpolGuide',input='@../DOFs',output='@Quads',isMechanical=False); VisuOgl = VisuGuide.addChild('VisuOgl'); VisuOgl.activated = True; VisuOgl.addObject('OglModel',name='Visual', color='0.2 0.2 0.8' , material='texture Ambient 1 0.2 0.2 0.2 0.0 Diffuse 1 1.0 1.0 1.0 1.0 Specular 1 1.0 1.0 1.0 1.0 Emissive 0 0.15 0.05 0.05 0.0 Shininess 1 20', quads='@../ContainerGuide.quads'); VisuOgl.addObject('IdentityMapping', input='@../Quads', output='@Visual'). VisuCoils = InstrumentCombined.addChild('VisuCoils'); VisuCoils.activated= True; VisuCoils.addObject('MechanicalObject',name='Quads'); VisuCoils.addObject('QuadSetTopologyContainer',name='ContainerCoils'); VisuCoils.addObject('QuadSetTopologyModifier',name='Modifier' ); VisuCoils.addObject('QuadSetGeometryAlgorithms', name='GeomAlgo',template='Vec3d'); VisuCoils.addObject('Edge2QuadTopologicalMapping',nbPointsOnEachCircle='10',radius=0.3, input='@../../topoLines_coils/meshLinesCoils',outpu",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243
https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243:8640,Modifiability,Adapt,AdaptiveBeamMapping,8640,"se); VisuOgl = VisuGuide.addChild('VisuOgl'); VisuOgl.activated = True; VisuOgl.addObject('OglModel',name='Visual', color='0.2 0.2 0.8' , material='texture Ambient 1 0.2 0.2 0.2 0.0 Diffuse 1 1.0 1.0 1.0 1.0 Specular 1 1.0 1.0 1.0 1.0 Emissive 0 0.15 0.05 0.05 0.0 Shininess 1 20', quads='@../ContainerGuide.quads'); VisuOgl.addObject('IdentityMapping', input='@../Quads', output='@Visual'). VisuCoils = InstrumentCombined.addChild('VisuCoils'); VisuCoils.activated= True; VisuCoils.addObject('MechanicalObject',name='Quads'); VisuCoils.addObject('QuadSetTopologyContainer',name='ContainerCoils'); VisuCoils.addObject('QuadSetTopologyModifier',name='Modifier' ); VisuCoils.addObject('QuadSetGeometryAlgorithms', name='GeomAlgo',template='Vec3d'); VisuCoils.addObject('Edge2QuadTopologicalMapping',nbPointsOnEachCircle='10',radius=0.3, input='@../../topoLines_coils/meshLinesCoils',output='@ContainerCoils', flipNormals=True,listening=True); VisuCoils.addObject('AdaptiveBeamMapping', name='visuMapCoils',useCurvAbs='1',printLog='0',interpolation='@../InterpolCoils',input='@../DOFs',output='@Quads',isMechanical='false'); VisuOgl = VisuCoils.addChild('VisuOgl'); VisuOgl.activated = True; VisuOgl.addObject('OglModel',name='Visual', color='0.2 0.8 0.2', material='texture Ambient 1 0.2 0.2 0.2 0.0 Diffuse 1 1.0 1.0 1.0 1.0 Specular 1 1.0 1.0 1.0 1.0 Emissive 0 0.15 0.05 0.05 0.0 Shininess 1 20',quads='@../ContainerCoils.quads'); VisuOgl.addObject('IdentityMapping',input='@../Quads',output='@Visual'). CollisionModel = InstrumentCombined.addChild('CollisionModel'); CollisionModel.addObject('MeshObjLoader',name='meshLoader',filename='D:/DefrostSofaBundle_win64_python3.8_v22.06.00-beta4/DefrostSofaBundle_win64_python3.8_v22.06.00-beta4/plugins/BeamAdapter/examples/mesh/phantom.obj',triangulate='true',flipNormals='1'); CollisionModel.addObject('MeshTopology', position='@meshLoader.position', triangles='@meshLoader.triangles'); CollisionModel.addObject('MechanicalObject', name='DOFs1', positi",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243
https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243:9419,Modifiability,plugin,plugins,9419,"l'). VisuCoils = InstrumentCombined.addChild('VisuCoils'); VisuCoils.activated= True; VisuCoils.addObject('MechanicalObject',name='Quads'); VisuCoils.addObject('QuadSetTopologyContainer',name='ContainerCoils'); VisuCoils.addObject('QuadSetTopologyModifier',name='Modifier' ); VisuCoils.addObject('QuadSetGeometryAlgorithms', name='GeomAlgo',template='Vec3d'); VisuCoils.addObject('Edge2QuadTopologicalMapping',nbPointsOnEachCircle='10',radius=0.3, input='@../../topoLines_coils/meshLinesCoils',output='@ContainerCoils', flipNormals=True,listening=True); VisuCoils.addObject('AdaptiveBeamMapping', name='visuMapCoils',useCurvAbs='1',printLog='0',interpolation='@../InterpolCoils',input='@../DOFs',output='@Quads',isMechanical='false'); VisuOgl = VisuCoils.addChild('VisuOgl'); VisuOgl.activated = True; VisuOgl.addObject('OglModel',name='Visual', color='0.2 0.8 0.2', material='texture Ambient 1 0.2 0.2 0.2 0.0 Diffuse 1 1.0 1.0 1.0 1.0 Specular 1 1.0 1.0 1.0 1.0 Emissive 0 0.15 0.05 0.05 0.0 Shininess 1 20',quads='@../ContainerCoils.quads'); VisuOgl.addObject('IdentityMapping',input='@../Quads',output='@Visual'). CollisionModel = InstrumentCombined.addChild('CollisionModel'); CollisionModel.addObject('MeshObjLoader',name='meshLoader',filename='D:/DefrostSofaBundle_win64_python3.8_v22.06.00-beta4/DefrostSofaBundle_win64_python3.8_v22.06.00-beta4/plugins/BeamAdapter/examples/mesh/phantom.obj',triangulate='true',flipNormals='1'); CollisionModel.addObject('MeshTopology', position='@meshLoader.position', triangles='@meshLoader.triangles'); CollisionModel.addObject('MechanicalObject', name='DOFs1', position=[0, 0 ,400], scale='3',ry='90'); CollisionModel.addObject('TriangleCollisionModel', simulated='0', moving='0'); CollisionModel.addObject('LineCollisionModel', simulated='0', moving='0'); CollisionModel.addObject('PointCollisionModel', simulated='0', moving='0'); CollisionModel.addObject('OglModel',name='Visual',src='@meshLoader',color='1 0 0 0.3',scale='3',ry='90'). return rootNode",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243
https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243:2063,Usability,Guid,GuideRestShape,2063,"tance',alarmDistance='2',contactDistance='1',angleCone='0.8',coneFactor='0.8'); rootNode.addObject('DefaultContactManager',name='Response',response='FrictionContact'); rootNode.addObject('DefaultCollisionGroupManager',name='Group'). topoLines_cath = rootNode.addChild('topoLines_cath'); topoLines_cath.addObject('WireRestShape',name='catheterRestShape',template='Rigid3d',printLog='0',length=1000.0, straightLength=600,spireDiameter=4000.0,spireHeight=0.0,densityOfBeams=[40,10],numEdges=200, numEdgesCollis=[40,20],youngModulus=10000 ,youngModulusExtremity=10000); topoLines_cath.addObject('EdgeSetTopologyContainer',name='meshLinesCath'); topoLines_cath.addObject('EdgeSetTopologyModifier', name='Modifier'); topoLines_cath.addObject('EdgeSetGeometryAlgorithms',name='GeomAlgo',template='Rigid3d'); topoLines_cath.addObject('MechanicalObject',template='Rigid3d',name='dofTopo1'). topoLines_guide = rootNode.addChild('topoLines_guide'); topoLines_guide.addObject('WireRestShape',name='GuideRestShape',template='Rigid3d',printLog='0',length=1000.0, straightLength=980.0, spireDiameter=25, spireHeight=0.0,densityOfBeams=[30 ,5],numEdges=200,numEdgesCollis=[50, 10], youngModulus=10000,youngModulusExtremity=10000); topoLines_guide.addObject('EdgeSetTopologyContainer',name='meshLinesGuide'); topoLines_guide.addObject('EdgeSetTopologyModifier',name='Modifier'); topoLines_guide.addObject('EdgeSetGeometryAlgorithms',name='GeomAlgo',template='Rigid3d'); topoLines_guide.addObject('MechanicalObject', template='Rigid3d', name='dofTopo2'). topoLines_coils = rootNode.addChild('topoLines_coils'); topoLines_coils.addObject('WireRestShape',name='CoilRestShape',template='Rigid3d',printLog='0',length=600.0, straightLength=540.0,spireDiameter=7, spireHeight=5.0,densityOfBeams=[40,20], numEdges=400, numEdgesCollis=[30,30],youngModulus=168000, youngModulusExtremity=168000); topoLines_coils.addObject('EdgeSetTopologyContainer',name='meshLinesCoils'); topoLines_coils.addObject('EdgeSetTopologyModifier',na",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243
https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243:4193,Usability,Guid,GuideRestShape,4193,"ils.addObject('MechanicalObject',template='Rigid3d',name='dofTopo3'). InstrumentCombined = rootNode.addChild('InstrumentCombined'); InstrumentCombined.addObject('EulerImplicitSolver',rayleighStiffness=0.2,rayleighMass=0.1,printLog='false'); InstrumentCombined.addObject('BTDLinearSolver',subpartSolve='0',verification='0',verbose='0'); InstrumentCombined.addObject('RegularGridTopology',name='meshLinesCombined',nx=60, ny=1, nz=1,xmin=0.0, xmax=1.0,ymin=0, ymax=0,zmin=1, zmax=1); InstrumentCombined.addObject('MechanicalObject',template='Rigid3d',name='DOFs',showIndices='0',ry=-90); InstrumentCombined.addObject('WireBeamInterpolation',name='InterpolCatheter',WireRestShape='@../topoLines_cath/catheterRestShape',radius=1,printLog='0'); InstrumentCombined.addObject('AdaptiveBeamForceFieldAndMass',name='CatheterForceField',interpolation='@InterpolCatheter',massDensity=0.00000155); InstrumentCombined.addObject('WireBeamInterpolation', name='InterpolGuide', WireRestShape='@../topoLines_guide/GuideRestShape', radius=0.9, printLog='0'); InstrumentCombined.addObject('AdaptiveBeamForceFieldAndMass',name='GuideForceField',interpolation='@InterpolGuide',massDensity=0.00000155); InstrumentCombined.addObject('WireBeamInterpolation', name='InterpolCoils', WireRestShape='@../topoLines_coils/CoilRestShape', radius=0.1, printLog='0'); InstrumentCombined.addObject('AdaptiveBeamForceFieldAndMass', name='CoilsForceField', interpolation='@InterpolCoils', massDensity=0.000021); InstrumentCombined.addObject('InterventionalRadiologyController',name='m_ircontroller',template='Rigid3d',printLog='0',instruments='InterpolCatheter InterpolGuide InterpolCoils',startingPos=[0, 0 ,0 ,0 ,-0.7071068, 0, 0.7071068],xtip=[1 ,0 ,0] ,rotationInstrument=[0, 0, 0 ],controlledInstrument=0,step=3,speed=2 ); InstrumentCombined.addObject('LinearSolverConstraintCorrection',printLog='false',wire_optimization='true'); InstrumentCombined.addObject('FixedConstraint',name='FixedConstraint',indices='0'); InstrumentCombined",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243
https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243:4304,Usability,Guid,GuideForceField,4304,"rumentCombined'); InstrumentCombined.addObject('EulerImplicitSolver',rayleighStiffness=0.2,rayleighMass=0.1,printLog='false'); InstrumentCombined.addObject('BTDLinearSolver',subpartSolve='0',verification='0',verbose='0'); InstrumentCombined.addObject('RegularGridTopology',name='meshLinesCombined',nx=60, ny=1, nz=1,xmin=0.0, xmax=1.0,ymin=0, ymax=0,zmin=1, zmax=1); InstrumentCombined.addObject('MechanicalObject',template='Rigid3d',name='DOFs',showIndices='0',ry=-90); InstrumentCombined.addObject('WireBeamInterpolation',name='InterpolCatheter',WireRestShape='@../topoLines_cath/catheterRestShape',radius=1,printLog='0'); InstrumentCombined.addObject('AdaptiveBeamForceFieldAndMass',name='CatheterForceField',interpolation='@InterpolCatheter',massDensity=0.00000155); InstrumentCombined.addObject('WireBeamInterpolation', name='InterpolGuide', WireRestShape='@../topoLines_guide/GuideRestShape', radius=0.9, printLog='0'); InstrumentCombined.addObject('AdaptiveBeamForceFieldAndMass',name='GuideForceField',interpolation='@InterpolGuide',massDensity=0.00000155); InstrumentCombined.addObject('WireBeamInterpolation', name='InterpolCoils', WireRestShape='@../topoLines_coils/CoilRestShape', radius=0.1, printLog='0'); InstrumentCombined.addObject('AdaptiveBeamForceFieldAndMass', name='CoilsForceField', interpolation='@InterpolCoils', massDensity=0.000021); InstrumentCombined.addObject('InterventionalRadiologyController',name='m_ircontroller',template='Rigid3d',printLog='0',instruments='InterpolCatheter InterpolGuide InterpolCoils',startingPos=[0, 0 ,0 ,0 ,-0.7071068, 0, 0.7071068],xtip=[1 ,0 ,0] ,rotationInstrument=[0, 0, 0 ],controlledInstrument=0,step=3,speed=2 ); InstrumentCombined.addObject('LinearSolverConstraintCorrection',printLog='false',wire_optimization='true'); InstrumentCombined.addObject('FixedConstraint',name='FixedConstraint',indices='0'); InstrumentCombined.addObject('RestShapeSpringsForceField',points='@m_ircontroller.indexFirstNode',stiffness=1e8,angularStiffness=1e",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243
https://github.com/sofa-framework/sofa/issues/3483#issuecomment-2316909409:541,Modifiability,plugin,plugin,541,"> I use the Windows system, sofa22.06 version. I don't know whether you mean compile in tree or compile out of tree. I compile on pychar, and the crash occurs at the beginning.Êàë‰ΩøÁî®ÁöÑÊòØ Windows Á≥ªÁªüÔºåsofa22.06 ÁâàÊú¨„ÄÇÊàë‰∏çÁü•ÈÅì‰Ω†ÁöÑÊÑèÊÄùÊòØ compile in tree ËøòÊòØ compile out of tree„ÄÇÊàëÂú® pychar ‰∏äÁºñËØëÔºåÂ¥©Ê∫ÉÂèëÁîüÂú®ÂºÄÂßãÊó∂„ÄÇ. How to use PyCharm to run programs directly on an uncompiled version of Sofa; Do you know how to use PyCharm to run programs on Sofa compiled by yourself in Ubuntu/Windows system? Because previously I used already compiled versions of Sofa, now I need to use a plugin Optimus (the official website only has self compiled methods).Thank you!",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-2316909409
https://github.com/sofa-framework/sofa/issues/3484#issuecomment-1315100053:182,Deployability,update,update,182,"Hi @ScheiklP ,. `MeshROI` is a SOFA engine, it inherite from ... `DataEngine` I think (without looking at the code).; The design of the the engine is to call the method `DataEngine::update` when one of the output Data is accessed and if any of the input Data is dirty. Meaning we need to recompute the output from new input value. . But as several mechanisms are required for this design, the `update `method is calling the method `doUpdate `which has to be implemented in each specific engine in middle of other code. So it is normal you don't see call of doUpdate inside the MeshRoi. DO you have a scenario which doesn't work as expected?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3484#issuecomment-1315100053
https://github.com/sofa-framework/sofa/issues/3484#issuecomment-1315100053:394,Deployability,update,update,394,"Hi @ScheiklP ,. `MeshROI` is a SOFA engine, it inherite from ... `DataEngine` I think (without looking at the code).; The design of the the engine is to call the method `DataEngine::update` when one of the output Data is accessed and if any of the input Data is dirty. Meaning we need to recompute the output from new input value. . But as several mechanisms are required for this design, the `update `method is calling the method `doUpdate `which has to be implemented in each specific engine in middle of other code. So it is normal you don't see call of doUpdate inside the MeshRoi. DO you have a scenario which doesn't work as expected?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3484#issuecomment-1315100053
https://github.com/sofa-framework/sofa/issues/3484#issuecomment-1315100053:47,Modifiability,inherit,inherite,47,"Hi @ScheiklP ,. `MeshROI` is a SOFA engine, it inherite from ... `DataEngine` I think (without looking at the code).; The design of the the engine is to call the method `DataEngine::update` when one of the output Data is accessed and if any of the input Data is dirty. Meaning we need to recompute the output from new input value. . But as several mechanisms are required for this design, the `update `method is calling the method `doUpdate `which has to be implemented in each specific engine in middle of other code. So it is normal you don't see call of doUpdate inside the MeshRoi. DO you have a scenario which doesn't work as expected?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3484#issuecomment-1315100053
https://github.com/sofa-framework/sofa/issues/3484#issuecomment-1315100053:221,Security,access,accessed,221,"Hi @ScheiklP ,. `MeshROI` is a SOFA engine, it inherite from ... `DataEngine` I think (without looking at the code).; The design of the the engine is to call the method `DataEngine::update` when one of the output Data is accessed and if any of the input Data is dirty. Meaning we need to recompute the output from new input value. . But as several mechanisms are required for this design, the `update `method is calling the method `doUpdate `which has to be implemented in each specific engine in middle of other code. So it is normal you don't see call of doUpdate inside the MeshRoi. DO you have a scenario which doesn't work as expected?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3484#issuecomment-1315100053
https://github.com/sofa-framework/sofa/issues/3484#issuecomment-1315459732:197,Deployability,update,updated,197,"Hi @epernod ,; thanks a lot for the explanation! :). The scenario that does not work is opening the ROI component from the scene graph in the GUI and looking at the data.; This does not seem to be updated.; ![image](https://user-images.githubusercontent.com/29635054/201955573-bca66cef-f619-4c08-a15a-c18aa0a9ec80.png); Moving the object through mouse interaction into and out of the ROI, these values do not change.; The values are only updated when I close the window of the component and opening it again. So I guess I'll close this issue.; Is there another related issue? :D",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3484#issuecomment-1315459732
https://github.com/sofa-framework/sofa/issues/3484#issuecomment-1315459732:438,Deployability,update,updated,438,"Hi @epernod ,; thanks a lot for the explanation! :). The scenario that does not work is opening the ROI component from the scene graph in the GUI and looking at the data.; This does not seem to be updated.; ![image](https://user-images.githubusercontent.com/29635054/201955573-bca66cef-f619-4c08-a15a-c18aa0a9ec80.png); Moving the object through mouse interaction into and out of the ROI, these values do not change.; The values are only updated when I close the window of the component and opening it again. So I guess I'll close this issue.; Is there another related issue? :D",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3484#issuecomment-1315459732
https://github.com/sofa-framework/sofa/issues/3484#issuecomment-1315484258:226,Availability,down,down,226,"You mean, you open the tab, simulate and there is no update?; Could you check if clicking on the refresh button on the bottom update the values?; I guess the gui is not calling ""continuous update"" on the Data to avoid slowing down the simulation but I'm not expert of the DataWidget.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3484#issuecomment-1315484258
https://github.com/sofa-framework/sofa/issues/3484#issuecomment-1315484258:53,Deployability,update,update,53,"You mean, you open the tab, simulate and there is no update?; Could you check if clicking on the refresh button on the bottom update the values?; I guess the gui is not calling ""continuous update"" on the Data to avoid slowing down the simulation but I'm not expert of the DataWidget.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3484#issuecomment-1315484258
https://github.com/sofa-framework/sofa/issues/3484#issuecomment-1315484258:126,Deployability,update,update,126,"You mean, you open the tab, simulate and there is no update?; Could you check if clicking on the refresh button on the bottom update the values?; I guess the gui is not calling ""continuous update"" on the Data to avoid slowing down the simulation but I'm not expert of the DataWidget.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3484#issuecomment-1315484258
https://github.com/sofa-framework/sofa/issues/3484#issuecomment-1315484258:178,Deployability,continuous,continuous,178,"You mean, you open the tab, simulate and there is no update?; Could you check if clicking on the refresh button on the bottom update the values?; I guess the gui is not calling ""continuous update"" on the Data to avoid slowing down the simulation but I'm not expert of the DataWidget.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3484#issuecomment-1315484258
https://github.com/sofa-framework/sofa/issues/3484#issuecomment-1315484258:189,Deployability,update,update,189,"You mean, you open the tab, simulate and there is no update?; Could you check if clicking on the refresh button on the bottom update the values?; I guess the gui is not calling ""continuous update"" on the Data to avoid slowing down the simulation but I'm not expert of the DataWidget.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3484#issuecomment-1315484258
https://github.com/sofa-framework/sofa/issues/3484#issuecomment-1315484258:212,Safety,avoid,avoid,212,"You mean, you open the tab, simulate and there is no update?; Could you check if clicking on the refresh button on the bottom update the values?; I guess the gui is not calling ""continuous update"" on the Data to avoid slowing down the simulation but I'm not expert of the DataWidget.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3484#issuecomment-1315484258
https://github.com/sofa-framework/sofa/issues/3484#issuecomment-1315489270:30,Deployability,update,update,30,"No, clicking refresh does not update the values. :(",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3484#issuecomment-1315489270
https://github.com/sofa-framework/sofa/issues/3485#issuecomment-1326853997:78,Deployability,integrat,integrated,78,yeah sorry @jnbrunet (good to hear from you as always!) this fix has not been integrated into v22.06 and regarding to the timing we might very probably wait for the v22.12 (at least for having the fix in the binary version),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3485#issuecomment-1326853997
https://github.com/sofa-framework/sofa/issues/3485#issuecomment-1326853997:78,Integrability,integrat,integrated,78,yeah sorry @jnbrunet (good to hear from you as always!) this fix has not been integrated into v22.06 and regarding to the timing we might very probably wait for the v22.12 (at least for having the fix in the binary version),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3485#issuecomment-1326853997
https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315400680:195,Deployability,configurat,configuration,195,"Hello @rodriguesvinay ,. It seems it comes from the fact that Qt could not connect to the display (`Warning [Qt] could not connect to display`).; And xcb is linked to X11, so I think your docker configuration cannot connect to your X server (if existing).; Whats your system you are trying to launch the docker on ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315400680
https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315400680:195,Modifiability,config,configuration,195,"Hello @rodriguesvinay ,. It seems it comes from the fact that Qt could not connect to the display (`Warning [Qt] could not connect to display`).; And xcb is linked to X11, so I think your docker configuration cannot connect to your X server (if existing).; Whats your system you are trying to launch the docker on ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315400680
https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315420671:349,Availability,error,error,349,"hi @fredroy, thanks for getting back. I am using Ubuntu 18.04.6 LTS. In `sofaframework/sofabuilder_ubuntu`, I clone the repo `git clone -b v22.06.00 https://github.com/sofa-framework/sofa.git sofa/src` and followed the procedure for `build SOFA on [Linux](https://www.sofa-framework.org/community/doc/getting-started/build/linux/)` and got the same error while running ./runSofa. while using `sofaframework/sofa_nightly_ubuntu:v22.06-full`, I first directly run ./runSofa without building sofa and then with building as earlier but again same error. ; Please also guide me if I have even have to build in second case `(sofaframework/sofa_nightly_ubuntu:v22.06-full)`",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315420671
https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315420671:543,Availability,error,error,543,"hi @fredroy, thanks for getting back. I am using Ubuntu 18.04.6 LTS. In `sofaframework/sofabuilder_ubuntu`, I clone the repo `git clone -b v22.06.00 https://github.com/sofa-framework/sofa.git sofa/src` and followed the procedure for `build SOFA on [Linux](https://www.sofa-framework.org/community/doc/getting-started/build/linux/)` and got the same error while running ./runSofa. while using `sofaframework/sofa_nightly_ubuntu:v22.06-full`, I first directly run ./runSofa without building sofa and then with building as earlier but again same error. ; Please also guide me if I have even have to build in second case `(sofaframework/sofa_nightly_ubuntu:v22.06-full)`",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315420671
https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315420671:564,Usability,guid,guide,564,"hi @fredroy, thanks for getting back. I am using Ubuntu 18.04.6 LTS. In `sofaframework/sofabuilder_ubuntu`, I clone the repo `git clone -b v22.06.00 https://github.com/sofa-framework/sofa.git sofa/src` and followed the procedure for `build SOFA on [Linux](https://www.sofa-framework.org/community/doc/getting-started/build/linux/)` and got the same error while running ./runSofa. while using `sofaframework/sofa_nightly_ubuntu:v22.06-full`, I first directly run ./runSofa without building sofa and then with building as earlier but again same error. ; Please also guide me if I have even have to build in second case `(sofaframework/sofa_nightly_ubuntu:v22.06-full)`",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315420671
https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315521495:67,Deployability,install,installation,67,"Actually, I dont even know if anybody uses the GUI with the docker installation üòÖ. I think it is a matter of configuration of docker to access the local X server. You may try setting some environment variables; https://stackoverflow.com/questions/69872788/docker-could-not-connect-to-any-x-display",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315521495
https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315521495:109,Deployability,configurat,configuration,109,"Actually, I dont even know if anybody uses the GUI with the docker installation üòÖ. I think it is a matter of configuration of docker to access the local X server. You may try setting some environment variables; https://stackoverflow.com/questions/69872788/docker-could-not-connect-to-any-x-display",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315521495
https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315521495:109,Modifiability,config,configuration,109,"Actually, I dont even know if anybody uses the GUI with the docker installation üòÖ. I think it is a matter of configuration of docker to access the local X server. You may try setting some environment variables; https://stackoverflow.com/questions/69872788/docker-could-not-connect-to-any-x-display",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315521495
https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315521495:200,Modifiability,variab,variables,200,"Actually, I dont even know if anybody uses the GUI with the docker installation üòÖ. I think it is a matter of configuration of docker to access the local X server. You may try setting some environment variables; https://stackoverflow.com/questions/69872788/docker-could-not-connect-to-any-x-display",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315521495
https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315521495:136,Security,access,access,136,"Actually, I dont even know if anybody uses the GUI with the docker installation üòÖ. I think it is a matter of configuration of docker to access the local X server. You may try setting some environment variables; https://stackoverflow.com/questions/69872788/docker-could-not-connect-to-any-x-display",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315521495
https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315525997:68,Deployability,install,installation,68,"`Actually, I dont even know if anybody uses the GUI with the docker installation ` why so? ; don't we need the gui for the sofa? how did we launch sofa then?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315525997
https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315531153:12,Deployability,install,installation,12,with normal installation there was problem in the configuring step where we choose unix /ninja and assign C & C++ compilers. it was not able to locate the compilers even though I browsed that. I also tried with gcc/g++. ; which procedure should I follow? I am frustrated. ; Is Unbuntu 18.04 causing problem?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315531153
https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315531153:50,Modifiability,config,configuring,50,with normal installation there was problem in the configuring step where we choose unix /ninja and assign C & C++ compilers. it was not able to locate the compilers even though I browsed that. I also tried with gcc/g++. ; which procedure should I follow? I am frustrated. ; Is Unbuntu 18.04 causing problem?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315531153
https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315549538:70,Deployability,install,installation,70,"> `Actually, I dont even know if anybody uses the GUI with the docker installation ` why so?; > don't we need the gui for the sofa? how did we launch sofa then?. Just a thought, as for me, I use docker to build SOFA but I execute the resulting compilation into the bare-metal system (out of docker)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315549538
https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1316629510:172,Availability,down,download,172,"Actually, I got confused, I thought you were using docker to build SOFA, with https://hub.docker.com/r/sofaframework/sofabuilder_ubuntu. Anyway, my advice would be to just download the archive on the website, and directly use the binaries (instead of going through the containerisation of docker) ; in your case for Ubuntu, it would be https://github.com/sofa-framework/sofa/releases/download/v22.06.00/SOFA_v22.06.00_Linux.zip",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1316629510
https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1316629510:384,Availability,down,download,384,"Actually, I got confused, I thought you were using docker to build SOFA, with https://hub.docker.com/r/sofaframework/sofabuilder_ubuntu. Anyway, my advice would be to just download the archive on the website, and directly use the binaries (instead of going through the containerisation of docker) ; in your case for Ubuntu, it would be https://github.com/sofa-framework/sofa/releases/download/v22.06.00/SOFA_v22.06.00_Linux.zip",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1316629510
https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1316629510:375,Deployability,release,releases,375,"Actually, I got confused, I thought you were using docker to build SOFA, with https://hub.docker.com/r/sofaframework/sofabuilder_ubuntu. Anyway, my advice would be to just download the archive on the website, and directly use the binaries (instead of going through the containerisation of docker) ; in your case for Ubuntu, it would be https://github.com/sofa-framework/sofa/releases/download/v22.06.00/SOFA_v22.06.00_Linux.zip",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1316629510
https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1316778833:120,Availability,down,download,120,"@fredroy thanks for the link. Also please correct me for the steps that will follow so that I will not kill myself:; 1. download https://github.com/sofa-framework/sofa/releases/download/v22.06.00/SOFA_v22.06.00_Linux.zip. 2. download dependencies; - Qt (>= 5.12.0) with Charts and WebEngine ; - OpenGL `sudo apt install libopengl0`; - Boost (>= 1.65.1) `sudo apt install libboost-all-dev`; - Python 3.8 + pip + numpy + scipy `sudo apt install python3.8-dev`; - Additional libraries: libPNG, libJPEG, libTIFF, Glew, Zlib `sudo apt install libpng-dev libjpeg-dev libtiff-dev libglew-dev zlib1g-dev`; - SOFA v20.06 and newer also need Eigen (>= 3.2.10) `sudo apt install libeigen3-dev`. 3. run ./bin/runSofa from https://github.com/sofa-framework/sofa/releases/download/v22.06.00/SOFA_v22.06.00_Linux.zip folder. There is no need for building in this case right?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1316778833
https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1316778833:177,Availability,down,download,177,"@fredroy thanks for the link. Also please correct me for the steps that will follow so that I will not kill myself:; 1. download https://github.com/sofa-framework/sofa/releases/download/v22.06.00/SOFA_v22.06.00_Linux.zip. 2. download dependencies; - Qt (>= 5.12.0) with Charts and WebEngine ; - OpenGL `sudo apt install libopengl0`; - Boost (>= 1.65.1) `sudo apt install libboost-all-dev`; - Python 3.8 + pip + numpy + scipy `sudo apt install python3.8-dev`; - Additional libraries: libPNG, libJPEG, libTIFF, Glew, Zlib `sudo apt install libpng-dev libjpeg-dev libtiff-dev libglew-dev zlib1g-dev`; - SOFA v20.06 and newer also need Eigen (>= 3.2.10) `sudo apt install libeigen3-dev`. 3. run ./bin/runSofa from https://github.com/sofa-framework/sofa/releases/download/v22.06.00/SOFA_v22.06.00_Linux.zip folder. There is no need for building in this case right?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1316778833
https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1316778833:225,Availability,down,download,225,"@fredroy thanks for the link. Also please correct me for the steps that will follow so that I will not kill myself:; 1. download https://github.com/sofa-framework/sofa/releases/download/v22.06.00/SOFA_v22.06.00_Linux.zip. 2. download dependencies; - Qt (>= 5.12.0) with Charts and WebEngine ; - OpenGL `sudo apt install libopengl0`; - Boost (>= 1.65.1) `sudo apt install libboost-all-dev`; - Python 3.8 + pip + numpy + scipy `sudo apt install python3.8-dev`; - Additional libraries: libPNG, libJPEG, libTIFF, Glew, Zlib `sudo apt install libpng-dev libjpeg-dev libtiff-dev libglew-dev zlib1g-dev`; - SOFA v20.06 and newer also need Eigen (>= 3.2.10) `sudo apt install libeigen3-dev`. 3. run ./bin/runSofa from https://github.com/sofa-framework/sofa/releases/download/v22.06.00/SOFA_v22.06.00_Linux.zip folder. There is no need for building in this case right?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1316778833
https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1316778833:758,Availability,down,download,758,"@fredroy thanks for the link. Also please correct me for the steps that will follow so that I will not kill myself:; 1. download https://github.com/sofa-framework/sofa/releases/download/v22.06.00/SOFA_v22.06.00_Linux.zip. 2. download dependencies; - Qt (>= 5.12.0) with Charts and WebEngine ; - OpenGL `sudo apt install libopengl0`; - Boost (>= 1.65.1) `sudo apt install libboost-all-dev`; - Python 3.8 + pip + numpy + scipy `sudo apt install python3.8-dev`; - Additional libraries: libPNG, libJPEG, libTIFF, Glew, Zlib `sudo apt install libpng-dev libjpeg-dev libtiff-dev libglew-dev zlib1g-dev`; - SOFA v20.06 and newer also need Eigen (>= 3.2.10) `sudo apt install libeigen3-dev`. 3. run ./bin/runSofa from https://github.com/sofa-framework/sofa/releases/download/v22.06.00/SOFA_v22.06.00_Linux.zip folder. There is no need for building in this case right?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1316778833
https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1316778833:168,Deployability,release,releases,168,"@fredroy thanks for the link. Also please correct me for the steps that will follow so that I will not kill myself:; 1. download https://github.com/sofa-framework/sofa/releases/download/v22.06.00/SOFA_v22.06.00_Linux.zip. 2. download dependencies; - Qt (>= 5.12.0) with Charts and WebEngine ; - OpenGL `sudo apt install libopengl0`; - Boost (>= 1.65.1) `sudo apt install libboost-all-dev`; - Python 3.8 + pip + numpy + scipy `sudo apt install python3.8-dev`; - Additional libraries: libPNG, libJPEG, libTIFF, Glew, Zlib `sudo apt install libpng-dev libjpeg-dev libtiff-dev libglew-dev zlib1g-dev`; - SOFA v20.06 and newer also need Eigen (>= 3.2.10) `sudo apt install libeigen3-dev`. 3. run ./bin/runSofa from https://github.com/sofa-framework/sofa/releases/download/v22.06.00/SOFA_v22.06.00_Linux.zip folder. There is no need for building in this case right?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1316778833
https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1316778833:312,Deployability,install,install,312,"@fredroy thanks for the link. Also please correct me for the steps that will follow so that I will not kill myself:; 1. download https://github.com/sofa-framework/sofa/releases/download/v22.06.00/SOFA_v22.06.00_Linux.zip. 2. download dependencies; - Qt (>= 5.12.0) with Charts and WebEngine ; - OpenGL `sudo apt install libopengl0`; - Boost (>= 1.65.1) `sudo apt install libboost-all-dev`; - Python 3.8 + pip + numpy + scipy `sudo apt install python3.8-dev`; - Additional libraries: libPNG, libJPEG, libTIFF, Glew, Zlib `sudo apt install libpng-dev libjpeg-dev libtiff-dev libglew-dev zlib1g-dev`; - SOFA v20.06 and newer also need Eigen (>= 3.2.10) `sudo apt install libeigen3-dev`. 3. run ./bin/runSofa from https://github.com/sofa-framework/sofa/releases/download/v22.06.00/SOFA_v22.06.00_Linux.zip folder. There is no need for building in this case right?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1316778833
https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1316778833:363,Deployability,install,install,363,"@fredroy thanks for the link. Also please correct me for the steps that will follow so that I will not kill myself:; 1. download https://github.com/sofa-framework/sofa/releases/download/v22.06.00/SOFA_v22.06.00_Linux.zip. 2. download dependencies; - Qt (>= 5.12.0) with Charts and WebEngine ; - OpenGL `sudo apt install libopengl0`; - Boost (>= 1.65.1) `sudo apt install libboost-all-dev`; - Python 3.8 + pip + numpy + scipy `sudo apt install python3.8-dev`; - Additional libraries: libPNG, libJPEG, libTIFF, Glew, Zlib `sudo apt install libpng-dev libjpeg-dev libtiff-dev libglew-dev zlib1g-dev`; - SOFA v20.06 and newer also need Eigen (>= 3.2.10) `sudo apt install libeigen3-dev`. 3. run ./bin/runSofa from https://github.com/sofa-framework/sofa/releases/download/v22.06.00/SOFA_v22.06.00_Linux.zip folder. There is no need for building in this case right?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1316778833
https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1316778833:435,Deployability,install,install,435,"@fredroy thanks for the link. Also please correct me for the steps that will follow so that I will not kill myself:; 1. download https://github.com/sofa-framework/sofa/releases/download/v22.06.00/SOFA_v22.06.00_Linux.zip. 2. download dependencies; - Qt (>= 5.12.0) with Charts and WebEngine ; - OpenGL `sudo apt install libopengl0`; - Boost (>= 1.65.1) `sudo apt install libboost-all-dev`; - Python 3.8 + pip + numpy + scipy `sudo apt install python3.8-dev`; - Additional libraries: libPNG, libJPEG, libTIFF, Glew, Zlib `sudo apt install libpng-dev libjpeg-dev libtiff-dev libglew-dev zlib1g-dev`; - SOFA v20.06 and newer also need Eigen (>= 3.2.10) `sudo apt install libeigen3-dev`. 3. run ./bin/runSofa from https://github.com/sofa-framework/sofa/releases/download/v22.06.00/SOFA_v22.06.00_Linux.zip folder. There is no need for building in this case right?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1316778833
https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1316778833:530,Deployability,install,install,530,"@fredroy thanks for the link. Also please correct me for the steps that will follow so that I will not kill myself:; 1. download https://github.com/sofa-framework/sofa/releases/download/v22.06.00/SOFA_v22.06.00_Linux.zip. 2. download dependencies; - Qt (>= 5.12.0) with Charts and WebEngine ; - OpenGL `sudo apt install libopengl0`; - Boost (>= 1.65.1) `sudo apt install libboost-all-dev`; - Python 3.8 + pip + numpy + scipy `sudo apt install python3.8-dev`; - Additional libraries: libPNG, libJPEG, libTIFF, Glew, Zlib `sudo apt install libpng-dev libjpeg-dev libtiff-dev libglew-dev zlib1g-dev`; - SOFA v20.06 and newer also need Eigen (>= 3.2.10) `sudo apt install libeigen3-dev`. 3. run ./bin/runSofa from https://github.com/sofa-framework/sofa/releases/download/v22.06.00/SOFA_v22.06.00_Linux.zip folder. There is no need for building in this case right?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1316778833
https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1316778833:660,Deployability,install,install,660,"@fredroy thanks for the link. Also please correct me for the steps that will follow so that I will not kill myself:; 1. download https://github.com/sofa-framework/sofa/releases/download/v22.06.00/SOFA_v22.06.00_Linux.zip. 2. download dependencies; - Qt (>= 5.12.0) with Charts and WebEngine ; - OpenGL `sudo apt install libopengl0`; - Boost (>= 1.65.1) `sudo apt install libboost-all-dev`; - Python 3.8 + pip + numpy + scipy `sudo apt install python3.8-dev`; - Additional libraries: libPNG, libJPEG, libTIFF, Glew, Zlib `sudo apt install libpng-dev libjpeg-dev libtiff-dev libglew-dev zlib1g-dev`; - SOFA v20.06 and newer also need Eigen (>= 3.2.10) `sudo apt install libeigen3-dev`. 3. run ./bin/runSofa from https://github.com/sofa-framework/sofa/releases/download/v22.06.00/SOFA_v22.06.00_Linux.zip folder. There is no need for building in this case right?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1316778833
https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1316778833:749,Deployability,release,releases,749,"@fredroy thanks for the link. Also please correct me for the steps that will follow so that I will not kill myself:; 1. download https://github.com/sofa-framework/sofa/releases/download/v22.06.00/SOFA_v22.06.00_Linux.zip. 2. download dependencies; - Qt (>= 5.12.0) with Charts and WebEngine ; - OpenGL `sudo apt install libopengl0`; - Boost (>= 1.65.1) `sudo apt install libboost-all-dev`; - Python 3.8 + pip + numpy + scipy `sudo apt install python3.8-dev`; - Additional libraries: libPNG, libJPEG, libTIFF, Glew, Zlib `sudo apt install libpng-dev libjpeg-dev libtiff-dev libglew-dev zlib1g-dev`; - SOFA v20.06 and newer also need Eigen (>= 3.2.10) `sudo apt install libeigen3-dev`. 3. run ./bin/runSofa from https://github.com/sofa-framework/sofa/releases/download/v22.06.00/SOFA_v22.06.00_Linux.zip folder. There is no need for building in this case right?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1316778833
https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1316778833:234,Integrability,depend,dependencies,234,"@fredroy thanks for the link. Also please correct me for the steps that will follow so that I will not kill myself:; 1. download https://github.com/sofa-framework/sofa/releases/download/v22.06.00/SOFA_v22.06.00_Linux.zip. 2. download dependencies; - Qt (>= 5.12.0) with Charts and WebEngine ; - OpenGL `sudo apt install libopengl0`; - Boost (>= 1.65.1) `sudo apt install libboost-all-dev`; - Python 3.8 + pip + numpy + scipy `sudo apt install python3.8-dev`; - Additional libraries: libPNG, libJPEG, libTIFF, Glew, Zlib `sudo apt install libpng-dev libjpeg-dev libtiff-dev libglew-dev zlib1g-dev`; - SOFA v20.06 and newer also need Eigen (>= 3.2.10) `sudo apt install libeigen3-dev`. 3. run ./bin/runSofa from https://github.com/sofa-framework/sofa/releases/download/v22.06.00/SOFA_v22.06.00_Linux.zip folder. There is no need for building in this case right?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1316778833
https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1318634630:35,Deployability,install,installation,35,"Hi @guparan, I saw your comment on installation from this link https://github.com/sofa-framework/sofa/issues/2485#issuecomment-971462092. I have been struggling with the installation for a quite some time now. can you please check my comment for the procedure I have mentioned here at https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1316778833? or from what you mentioned do I only need those 4 lines to install on ubuntu?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1318634630
https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1318634630:170,Deployability,install,installation,170,"Hi @guparan, I saw your comment on installation from this link https://github.com/sofa-framework/sofa/issues/2485#issuecomment-971462092. I have been struggling with the installation for a quite some time now. can you please check my comment for the procedure I have mentioned here at https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1316778833? or from what you mentioned do I only need those 4 lines to install on ubuntu?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1318634630
https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1318634630:420,Deployability,install,install,420,"Hi @guparan, I saw your comment on installation from this link https://github.com/sofa-framework/sofa/issues/2485#issuecomment-971462092. I have been struggling with the installation for a quite some time now. can you please check my comment for the procedure I have mentioned here at https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1316778833? or from what you mentioned do I only need those 4 lines to install on ubuntu?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1318634630
https://github.com/sofa-framework/sofa/pull/3491#issuecomment-1316698699:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3491#issuecomment-1316698699
https://github.com/sofa-framework/sofa/pull/3491#issuecomment-1332049529:47,Modifiability,variab,variable,47,@hugtalbot For me the term global applied on a variable is not appropriate for a static class member. Is it?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3491#issuecomment-1332049529
https://github.com/sofa-framework/sofa/pull/3491#issuecomment-1340783077:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3491#issuecomment-1340783077
https://github.com/sofa-framework/sofa/pull/3492#issuecomment-1317232055:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3492#issuecomment-1317232055
https://github.com/sofa-framework/sofa/pull/3495#issuecomment-1319923446:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3495#issuecomment-1319923446
https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1322280580:38,Modifiability,plugin,plugin,38,"Hi @Iwillsd ,. I am sorry to hear the plugin does not work for you. Could you share your scene or try the example scene in the latest commit on the master branch? You can also use the version of the plugin from the master branch, it uses the static version of the library, so, in principle, there should not be problems with linking. Best regards,; Vlad",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1322280580
https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1322280580:199,Modifiability,plugin,plugin,199,"Hi @Iwillsd ,. I am sorry to hear the plugin does not work for you. Could you share your scene or try the example scene in the latest commit on the master branch? You can also use the version of the plugin from the master branch, it uses the static version of the library, so, in principle, there should not be problems with linking. Best regards,; Vlad",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1322280580
https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:1824,Availability,ERROR,ERROR,1824,"raid/hx/sigma7_hx/sdk-3.14.0/lib/release/lin-x86_64-gcc/libdhd.a(dhdComUSB-libusb.o)Ôºöin function‚ÄòdhdUSBGetDeviceCountList(int*, int*, int*, int)‚ÄôÔºö; dhdComUSB-libusb.cpp:(.text+0x215)Ôºöundefined reference to ‚Äòlibusb_init‚Äô; dhdComUSB-libusb.cpp:(.text+0x24e)Ôºöundefined reference to ‚Äòlibusb_get_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0x297)Ôºöundefined reference to ‚Äòlibusb_get_device_descriptor‚Äô; dhdComUSB-libusb.cpp:(.text+0x2eb)Ôºöundefined reference to ‚Äòlibusb_free_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0x30c)Ôºöundefined reference to ‚Äòlibusb_exit‚Äô; ```. So I switched to using the dynamic linking SDK/lib/release/lin-x86_64-gcc/libdhd.so.3.14.0 for compilation, which compiled successfully, but the import of the plugin failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions] Plugin loading failed (/home/dell/raid/hx/sigma7",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229
https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:2016,Availability,ERROR,ERROR,2016,"e to ‚Äòlibusb_init‚Äô; dhdComUSB-libusb.cpp:(.text+0x24e)Ôºöundefined reference to ‚Äòlibusb_get_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0x297)Ôºöundefined reference to ‚Äòlibusb_get_device_descriptor‚Äô; dhdComUSB-libusb.cpp:(.text+0x2eb)Ôºöundefined reference to ‚Äòlibusb_free_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0x30c)Ôºöundefined reference to ‚Äòlibusb_exit‚Äô; ```. So I switched to using the dynamic linking SDK/lib/release/lin-x86_64-gcc/libdhd.so.3.14.0 for compilation, which compiled successfully, but the import of the plugin failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory. Failed to load: [""ForceDimensions""]; [WARNING] [SceneCheckMissingRequiredPlugin] T",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229
https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:2265,Availability,ERROR,ERROR,2265,")Ôºöundefined reference to ‚Äòlibusb_free_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0x30c)Ôºöundefined reference to ‚Äòlibusb_exit‚Äô; ```. So I switched to using the dynamic linking SDK/lib/release/lin-x86_64-gcc/libdhd.so.3.14.0 for compilation, which compiled successfully, but the import of the plugin failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory. Failed to load: [""ForceDimensions""]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; ```. When I modify the force dimension lib file libdhd.3.14.0 to libdhd.so.3, it runs. However, when running the scene, the device only",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229
https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:2396,Availability,ERROR,ERROR,2396,"busb_exit‚Äô; ```. So I switched to using the dynamic linking SDK/lib/release/lin-x86_64-gcc/libdhd.so.3.14.0 for compilation, which compiled successfully, but the import of the plugin failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory. Failed to load: [""ForceDimensions""]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; ```. When I modify the force dimension lib file libdhd.3.14.0 to libdhd.so.3, it runs. However, when running the scene, the device only recovers to a certain position on its own and then does not respond. So I want to know if the effect of this plu",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229
https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:2599,Availability,ERROR,ERROR,2599,"e import of the plugin failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory. Failed to load: [""ForceDimensions""]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; ```. When I modify the force dimension lib file libdhd.3.14.0 to libdhd.so.3, it runs. However, when running the scene, the device only recovers to a certain position on its own and then does not respond. So I want to know if the effect of this plugin is only initializing the position or can be manipulated by humans, but I have not implemented this function yet. I would be very grateful if you could help ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229
https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:2791,Availability,ERROR,ERROR,2791,"n failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory. Failed to load: [""ForceDimensions""]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; ```. When I modify the force dimension lib file libdhd.3.14.0 to libdhd.so.3, it runs. However, when running the scene, the device only recovers to a certain position on its own and then does not respond. So I want to know if the effect of this plugin is only initializing the position or can be manipulated by humans, but I have not implemented this function yet. I would be very grateful if you could help meÔºÅ. Thanks so muchÔºÅ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229
https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:3309,Availability,recover,recovers,3309,"n failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory. Failed to load: [""ForceDimensions""]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; ```. When I modify the force dimension lib file libdhd.3.14.0 to libdhd.so.3, it runs. However, when running the scene, the device only recovers to a certain position on its own and then does not respond. So I want to know if the effect of this plugin is only initializing the position or can be manipulated by humans, but I have not implemented this function yet. I would be very grateful if you could help meÔºÅ. Thanks so muchÔºÅ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229
https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:58,Deployability,release,release,58,"Hi @polyakovkrylo,. When I call the plugin of the SDK/lib/release/lin-x86_64-gcc/libdhd.a version to compile, I encounter an undefined reference issue.; ``` bash; lib/libSofa.Type.so.20.12.99 lib/libSofa.Compat.so.20.12.99 lib/libSofa.Config.so.20.12.99 -Wl,-rpath-link,/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib && :; /home/dell/raid/hx/sigma7_hx/sdk-3.14.0/lib/release/lin-x86_64-gcc/libdhd.a(dhdComUSB-libusb.o)Ôºöin function‚ÄòdhdUSBGetDeviceCount(int, int)‚ÄôÔºö; dhdComUSB-libusb.cpp:(.text+0x9d)Ôºöundefined reference to ‚Äòlibusb_init‚Äô; dhdComUSB-libusb.cpp:(.text+0xba)Ôºöundefined reference to ‚Äòlibusb_get_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0xed)Ôºöundefined reference to ‚Äòlibusb_get_device_descriptor‚Äô; dhdComUSB-libusb.cpp:(.text+0x120)Ôºöundefined reference to ‚Äòlibusb_free_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0x141)Ôºöundefined reference to ‚Äòlibusb_exit‚Äô; /home/dell/raid/hx/sigma7_hx/sdk-3.14.0/lib/release/lin-x86_64-gcc/libdhd.a(dhdComUSB-libusb.o)Ôºöin function‚ÄòdhdUSBGetDeviceCountList(int*, int*, int*, int)‚ÄôÔºö; dhdComUSB-libusb.cpp:(.text+0x215)Ôºöundefined reference to ‚Äòlibusb_init‚Äô; dhdComUSB-libusb.cpp:(.text+0x24e)Ôºöundefined reference to ‚Äòlibusb_get_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0x297)Ôºöundefined reference to ‚Äòlibusb_get_device_descriptor‚Äô; dhdComUSB-libusb.cpp:(.text+0x2eb)Ôºöundefined reference to ‚Äòlibusb_free_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0x30c)Ôºöundefined reference to ‚Äòlibusb_exit‚Äô; ```. So I switched to using the dynamic linking SDK/lib/release/lin-x86_64-gcc/libdhd.so.3.14.0 for compilation, which compiled successfully, but the import of the plugin failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file o",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229
https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:368,Deployability,release,release,368,"Hi @polyakovkrylo,. When I call the plugin of the SDK/lib/release/lin-x86_64-gcc/libdhd.a version to compile, I encounter an undefined reference issue.; ``` bash; lib/libSofa.Type.so.20.12.99 lib/libSofa.Compat.so.20.12.99 lib/libSofa.Config.so.20.12.99 -Wl,-rpath-link,/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib && :; /home/dell/raid/hx/sigma7_hx/sdk-3.14.0/lib/release/lin-x86_64-gcc/libdhd.a(dhdComUSB-libusb.o)Ôºöin function‚ÄòdhdUSBGetDeviceCount(int, int)‚ÄôÔºö; dhdComUSB-libusb.cpp:(.text+0x9d)Ôºöundefined reference to ‚Äòlibusb_init‚Äô; dhdComUSB-libusb.cpp:(.text+0xba)Ôºöundefined reference to ‚Äòlibusb_get_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0xed)Ôºöundefined reference to ‚Äòlibusb_get_device_descriptor‚Äô; dhdComUSB-libusb.cpp:(.text+0x120)Ôºöundefined reference to ‚Äòlibusb_free_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0x141)Ôºöundefined reference to ‚Äòlibusb_exit‚Äô; /home/dell/raid/hx/sigma7_hx/sdk-3.14.0/lib/release/lin-x86_64-gcc/libdhd.a(dhdComUSB-libusb.o)Ôºöin function‚ÄòdhdUSBGetDeviceCountList(int*, int*, int*, int)‚ÄôÔºö; dhdComUSB-libusb.cpp:(.text+0x215)Ôºöundefined reference to ‚Äòlibusb_init‚Äô; dhdComUSB-libusb.cpp:(.text+0x24e)Ôºöundefined reference to ‚Äòlibusb_get_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0x297)Ôºöundefined reference to ‚Äòlibusb_get_device_descriptor‚Äô; dhdComUSB-libusb.cpp:(.text+0x2eb)Ôºöundefined reference to ‚Äòlibusb_free_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0x30c)Ôºöundefined reference to ‚Äòlibusb_exit‚Äô; ```. So I switched to using the dynamic linking SDK/lib/release/lin-x86_64-gcc/libdhd.so.3.14.0 for compilation, which compiled successfully, but the import of the plugin failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file o",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229
https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:912,Deployability,release,release,912,"Hi @polyakovkrylo,. When I call the plugin of the SDK/lib/release/lin-x86_64-gcc/libdhd.a version to compile, I encounter an undefined reference issue.; ``` bash; lib/libSofa.Type.so.20.12.99 lib/libSofa.Compat.so.20.12.99 lib/libSofa.Config.so.20.12.99 -Wl,-rpath-link,/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib && :; /home/dell/raid/hx/sigma7_hx/sdk-3.14.0/lib/release/lin-x86_64-gcc/libdhd.a(dhdComUSB-libusb.o)Ôºöin function‚ÄòdhdUSBGetDeviceCount(int, int)‚ÄôÔºö; dhdComUSB-libusb.cpp:(.text+0x9d)Ôºöundefined reference to ‚Äòlibusb_init‚Äô; dhdComUSB-libusb.cpp:(.text+0xba)Ôºöundefined reference to ‚Äòlibusb_get_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0xed)Ôºöundefined reference to ‚Äòlibusb_get_device_descriptor‚Äô; dhdComUSB-libusb.cpp:(.text+0x120)Ôºöundefined reference to ‚Äòlibusb_free_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0x141)Ôºöundefined reference to ‚Äòlibusb_exit‚Äô; /home/dell/raid/hx/sigma7_hx/sdk-3.14.0/lib/release/lin-x86_64-gcc/libdhd.a(dhdComUSB-libusb.o)Ôºöin function‚ÄòdhdUSBGetDeviceCountList(int*, int*, int*, int)‚ÄôÔºö; dhdComUSB-libusb.cpp:(.text+0x215)Ôºöundefined reference to ‚Äòlibusb_init‚Äô; dhdComUSB-libusb.cpp:(.text+0x24e)Ôºöundefined reference to ‚Äòlibusb_get_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0x297)Ôºöundefined reference to ‚Äòlibusb_get_device_descriptor‚Äô; dhdComUSB-libusb.cpp:(.text+0x2eb)Ôºöundefined reference to ‚Äòlibusb_free_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0x30c)Ôºöundefined reference to ‚Äòlibusb_exit‚Äô; ```. So I switched to using the dynamic linking SDK/lib/release/lin-x86_64-gcc/libdhd.so.3.14.0 for compilation, which compiled successfully, but the import of the plugin failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file o",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229
https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:1488,Deployability,release,release,1488,"ibusb.cpp:(.text+0x9d)Ôºöundefined reference to ‚Äòlibusb_init‚Äô; dhdComUSB-libusb.cpp:(.text+0xba)Ôºöundefined reference to ‚Äòlibusb_get_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0xed)Ôºöundefined reference to ‚Äòlibusb_get_device_descriptor‚Äô; dhdComUSB-libusb.cpp:(.text+0x120)Ôºöundefined reference to ‚Äòlibusb_free_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0x141)Ôºöundefined reference to ‚Äòlibusb_exit‚Äô; /home/dell/raid/hx/sigma7_hx/sdk-3.14.0/lib/release/lin-x86_64-gcc/libdhd.a(dhdComUSB-libusb.o)Ôºöin function‚ÄòdhdUSBGetDeviceCountList(int*, int*, int*, int)‚ÄôÔºö; dhdComUSB-libusb.cpp:(.text+0x215)Ôºöundefined reference to ‚Äòlibusb_init‚Äô; dhdComUSB-libusb.cpp:(.text+0x24e)Ôºöundefined reference to ‚Äòlibusb_get_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0x297)Ôºöundefined reference to ‚Äòlibusb_get_device_descriptor‚Äô; dhdComUSB-libusb.cpp:(.text+0x2eb)Ôºöundefined reference to ‚Äòlibusb_free_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0x30c)Ôºöundefined reference to ‚Äòlibusb_exit‚Äô; ```. So I switched to using the dynamic linking SDK/lib/release/lin-x86_64-gcc/libdhd.so.3.14.0 for compilation, which compiled successfully, but the import of the plugin failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229
https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:1733,Integrability,Message,Message,1733,"x120)Ôºöundefined reference to ‚Äòlibusb_free_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0x141)Ôºöundefined reference to ‚Äòlibusb_exit‚Äô; /home/dell/raid/hx/sigma7_hx/sdk-3.14.0/lib/release/lin-x86_64-gcc/libdhd.a(dhdComUSB-libusb.o)Ôºöin function‚ÄòdhdUSBGetDeviceCountList(int*, int*, int*, int)‚ÄôÔºö; dhdComUSB-libusb.cpp:(.text+0x215)Ôºöundefined reference to ‚Äòlibusb_init‚Äô; dhdComUSB-libusb.cpp:(.text+0x24e)Ôºöundefined reference to ‚Äòlibusb_get_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0x297)Ôºöundefined reference to ‚Äòlibusb_get_device_descriptor‚Äô; dhdComUSB-libusb.cpp:(.text+0x2eb)Ôºöundefined reference to ‚Äòlibusb_free_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0x30c)Ôºöundefined reference to ‚Äòlibusb_exit‚Äô; ```. So I switched to using the dynamic linking SDK/lib/release/lin-x86_64-gcc/libdhd.so.3.14.0 for compilation, which compiled successfully, but the import of the plugin failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot ope",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229
https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:36,Modifiability,plugin,plugin,36,"Hi @polyakovkrylo,. When I call the plugin of the SDK/lib/release/lin-x86_64-gcc/libdhd.a version to compile, I encounter an undefined reference issue.; ``` bash; lib/libSofa.Type.so.20.12.99 lib/libSofa.Compat.so.20.12.99 lib/libSofa.Config.so.20.12.99 -Wl,-rpath-link,/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib && :; /home/dell/raid/hx/sigma7_hx/sdk-3.14.0/lib/release/lin-x86_64-gcc/libdhd.a(dhdComUSB-libusb.o)Ôºöin function‚ÄòdhdUSBGetDeviceCount(int, int)‚ÄôÔºö; dhdComUSB-libusb.cpp:(.text+0x9d)Ôºöundefined reference to ‚Äòlibusb_init‚Äô; dhdComUSB-libusb.cpp:(.text+0xba)Ôºöundefined reference to ‚Äòlibusb_get_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0xed)Ôºöundefined reference to ‚Äòlibusb_get_device_descriptor‚Äô; dhdComUSB-libusb.cpp:(.text+0x120)Ôºöundefined reference to ‚Äòlibusb_free_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0x141)Ôºöundefined reference to ‚Äòlibusb_exit‚Äô; /home/dell/raid/hx/sigma7_hx/sdk-3.14.0/lib/release/lin-x86_64-gcc/libdhd.a(dhdComUSB-libusb.o)Ôºöin function‚ÄòdhdUSBGetDeviceCountList(int*, int*, int*, int)‚ÄôÔºö; dhdComUSB-libusb.cpp:(.text+0x215)Ôºöundefined reference to ‚Äòlibusb_init‚Äô; dhdComUSB-libusb.cpp:(.text+0x24e)Ôºöundefined reference to ‚Äòlibusb_get_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0x297)Ôºöundefined reference to ‚Äòlibusb_get_device_descriptor‚Äô; dhdComUSB-libusb.cpp:(.text+0x2eb)Ôºöundefined reference to ‚Äòlibusb_free_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0x30c)Ôºöundefined reference to ‚Äòlibusb_exit‚Äô; ```. So I switched to using the dynamic linking SDK/lib/release/lin-x86_64-gcc/libdhd.so.3.14.0 for compilation, which compiled successfully, but the import of the plugin failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file o",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229
https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:235,Modifiability,Config,Config,235,"Hi @polyakovkrylo,. When I call the plugin of the SDK/lib/release/lin-x86_64-gcc/libdhd.a version to compile, I encounter an undefined reference issue.; ``` bash; lib/libSofa.Type.so.20.12.99 lib/libSofa.Compat.so.20.12.99 lib/libSofa.Config.so.20.12.99 -Wl,-rpath-link,/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib && :; /home/dell/raid/hx/sigma7_hx/sdk-3.14.0/lib/release/lin-x86_64-gcc/libdhd.a(dhdComUSB-libusb.o)Ôºöin function‚ÄòdhdUSBGetDeviceCount(int, int)‚ÄôÔºö; dhdComUSB-libusb.cpp:(.text+0x9d)Ôºöundefined reference to ‚Äòlibusb_init‚Äô; dhdComUSB-libusb.cpp:(.text+0xba)Ôºöundefined reference to ‚Äòlibusb_get_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0xed)Ôºöundefined reference to ‚Äòlibusb_get_device_descriptor‚Äô; dhdComUSB-libusb.cpp:(.text+0x120)Ôºöundefined reference to ‚Äòlibusb_free_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0x141)Ôºöundefined reference to ‚Äòlibusb_exit‚Äô; /home/dell/raid/hx/sigma7_hx/sdk-3.14.0/lib/release/lin-x86_64-gcc/libdhd.a(dhdComUSB-libusb.o)Ôºöin function‚ÄòdhdUSBGetDeviceCountList(int*, int*, int*, int)‚ÄôÔºö; dhdComUSB-libusb.cpp:(.text+0x215)Ôºöundefined reference to ‚Äòlibusb_init‚Äô; dhdComUSB-libusb.cpp:(.text+0x24e)Ôºöundefined reference to ‚Äòlibusb_get_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0x297)Ôºöundefined reference to ‚Äòlibusb_get_device_descriptor‚Äô; dhdComUSB-libusb.cpp:(.text+0x2eb)Ôºöundefined reference to ‚Äòlibusb_free_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0x30c)Ôºöundefined reference to ‚Äòlibusb_exit‚Äô; ```. So I switched to using the dynamic linking SDK/lib/release/lin-x86_64-gcc/libdhd.so.3.14.0 for compilation, which compiled successfully, but the import of the plugin failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file o",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229
https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:1596,Modifiability,plugin,plugin,1596,"device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0xed)Ôºöundefined reference to ‚Äòlibusb_get_device_descriptor‚Äô; dhdComUSB-libusb.cpp:(.text+0x120)Ôºöundefined reference to ‚Äòlibusb_free_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0x141)Ôºöundefined reference to ‚Äòlibusb_exit‚Äô; /home/dell/raid/hx/sigma7_hx/sdk-3.14.0/lib/release/lin-x86_64-gcc/libdhd.a(dhdComUSB-libusb.o)Ôºöin function‚ÄòdhdUSBGetDeviceCountList(int*, int*, int*, int)‚ÄôÔºö; dhdComUSB-libusb.cpp:(.text+0x215)Ôºöundefined reference to ‚Äòlibusb_init‚Äô; dhdComUSB-libusb.cpp:(.text+0x24e)Ôºöundefined reference to ‚Äòlibusb_get_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0x297)Ôºöundefined reference to ‚Äòlibusb_get_device_descriptor‚Äô; dhdComUSB-libusb.cpp:(.text+0x2eb)Ôºöundefined reference to ‚Äòlibusb_free_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0x30c)Ôºöundefined reference to ‚Äòlibusb_exit‚Äô; ```. So I switched to using the dynamic linking SDK/lib/release/lin-x86_64-gcc/libdhd.so.3.14.0 for compilation, which compiled successfully, but the import of the plugin failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229
https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:1665,Modifiability,plugin,plugin,1665,"device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0xed)Ôºöundefined reference to ‚Äòlibusb_get_device_descriptor‚Äô; dhdComUSB-libusb.cpp:(.text+0x120)Ôºöundefined reference to ‚Äòlibusb_free_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0x141)Ôºöundefined reference to ‚Äòlibusb_exit‚Äô; /home/dell/raid/hx/sigma7_hx/sdk-3.14.0/lib/release/lin-x86_64-gcc/libdhd.a(dhdComUSB-libusb.o)Ôºöin function‚ÄòdhdUSBGetDeviceCountList(int*, int*, int*, int)‚ÄôÔºö; dhdComUSB-libusb.cpp:(.text+0x215)Ôºöundefined reference to ‚Äòlibusb_init‚Äô; dhdComUSB-libusb.cpp:(.text+0x24e)Ôºöundefined reference to ‚Äòlibusb_get_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0x297)Ôºöundefined reference to ‚Äòlibusb_get_device_descriptor‚Äô; dhdComUSB-libusb.cpp:(.text+0x2eb)Ôºöundefined reference to ‚Äòlibusb_free_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0x30c)Ôºöundefined reference to ‚Äòlibusb_exit‚Äô; ```. So I switched to using the dynamic linking SDK/lib/release/lin-x86_64-gcc/libdhd.so.3.14.0 for compilation, which compiled successfully, but the import of the plugin failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229
https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:1832,Modifiability,Plugin,PluginManager,1832,"raid/hx/sigma7_hx/sdk-3.14.0/lib/release/lin-x86_64-gcc/libdhd.a(dhdComUSB-libusb.o)Ôºöin function‚ÄòdhdUSBGetDeviceCountList(int*, int*, int*, int)‚ÄôÔºö; dhdComUSB-libusb.cpp:(.text+0x215)Ôºöundefined reference to ‚Äòlibusb_init‚Äô; dhdComUSB-libusb.cpp:(.text+0x24e)Ôºöundefined reference to ‚Äòlibusb_get_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0x297)Ôºöundefined reference to ‚Äòlibusb_get_device_descriptor‚Äô; dhdComUSB-libusb.cpp:(.text+0x2eb)Ôºöundefined reference to ‚Äòlibusb_free_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0x30c)Ôºöundefined reference to ‚Äòlibusb_exit‚Äô; ```. So I switched to using the dynamic linking SDK/lib/release/lin-x86_64-gcc/libdhd.so.3.14.0 for compilation, which compiled successfully, but the import of the plugin failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions] Plugin loading failed (/home/dell/raid/hx/sigma7",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229
https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:1847,Modifiability,Plugin,Plugin,1847,"raid/hx/sigma7_hx/sdk-3.14.0/lib/release/lin-x86_64-gcc/libdhd.a(dhdComUSB-libusb.o)Ôºöin function‚ÄòdhdUSBGetDeviceCountList(int*, int*, int*, int)‚ÄôÔºö; dhdComUSB-libusb.cpp:(.text+0x215)Ôºöundefined reference to ‚Äòlibusb_init‚Äô; dhdComUSB-libusb.cpp:(.text+0x24e)Ôºöundefined reference to ‚Äòlibusb_get_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0x297)Ôºöundefined reference to ‚Äòlibusb_get_device_descriptor‚Äô; dhdComUSB-libusb.cpp:(.text+0x2eb)Ôºöundefined reference to ‚Äòlibusb_free_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0x30c)Ôºöundefined reference to ‚Äòlibusb_exit‚Äô; ```. So I switched to using the dynamic linking SDK/lib/release/lin-x86_64-gcc/libdhd.so.3.14.0 for compilation, which compiled successfully, but the import of the plugin failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions] Plugin loading failed (/home/dell/raid/hx/sigma7",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229
https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:2057,Modifiability,Plugin,Plugin,2057,"e to ‚Äòlibusb_init‚Äô; dhdComUSB-libusb.cpp:(.text+0x24e)Ôºöundefined reference to ‚Äòlibusb_get_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0x297)Ôºöundefined reference to ‚Äòlibusb_get_device_descriptor‚Äô; dhdComUSB-libusb.cpp:(.text+0x2eb)Ôºöundefined reference to ‚Äòlibusb_free_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0x30c)Ôºöundefined reference to ‚Äòlibusb_exit‚Äô; ```. So I switched to using the dynamic linking SDK/lib/release/lin-x86_64-gcc/libdhd.so.3.14.0 for compilation, which compiled successfully, but the import of the plugin failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory. Failed to load: [""ForceDimensions""]; [WARNING] [SceneCheckMissingRequiredPlugin] T",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229
https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:2607,Modifiability,Plugin,PluginManager,2607,"e import of the plugin failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory. Failed to load: [""ForceDimensions""]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; ```. When I modify the force dimension lib file libdhd.3.14.0 to libdhd.so.3, it runs. However, when running the scene, the device only recovers to a certain position on its own and then does not respond. So I want to know if the effect of this plugin is only initializing the position or can be manipulated by humans, but I have not implemented this function yet. I would be very grateful if you could help ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229
https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:2622,Modifiability,Plugin,Plugin,2622,"e import of the plugin failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory. Failed to load: [""ForceDimensions""]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; ```. When I modify the force dimension lib file libdhd.3.14.0 to libdhd.so.3, it runs. However, when running the scene, the device only recovers to a certain position on its own and then does not respond. So I want to know if the effect of this plugin is only initializing the position or can be manipulated by humans, but I have not implemented this function yet. I would be very grateful if you could help ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229
https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:2831,Modifiability,Plugin,Plugin,2831,"n failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory. Failed to load: [""ForceDimensions""]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; ```. When I modify the force dimension lib file libdhd.3.14.0 to libdhd.so.3, it runs. However, when running the scene, the device only recovers to a certain position on its own and then does not respond. So I want to know if the effect of this plugin is only initializing the position or can be manipulated by humans, but I have not implemented this function yet. I would be very grateful if you could help meÔºÅ. Thanks so muchÔºÅ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229
https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:3120,Modifiability,plugin,plugins,3120,"n failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory. Failed to load: [""ForceDimensions""]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; ```. When I modify the force dimension lib file libdhd.3.14.0 to libdhd.so.3, it runs. However, when running the scene, the device only recovers to a certain position on its own and then does not respond. So I want to know if the effect of this plugin is only initializing the position or can be manipulated by humans, but I have not implemented this function yet. I would be very grateful if you could help meÔºÅ. Thanks so muchÔºÅ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229
https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:3162,Modifiability,plugin,plugins,3162,"n failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory. Failed to load: [""ForceDimensions""]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; ```. When I modify the force dimension lib file libdhd.3.14.0 to libdhd.so.3, it runs. However, when running the scene, the device only recovers to a certain position on its own and then does not respond. So I want to know if the effect of this plugin is only initializing the position or can be manipulated by humans, but I have not implemented this function yet. I would be very grateful if you could help meÔºÅ. Thanks so muchÔºÅ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229
https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:3418,Modifiability,plugin,plugin,3418,"n failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory. Failed to load: [""ForceDimensions""]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; ```. When I modify the force dimension lib file libdhd.3.14.0 to libdhd.so.3, it runs. However, when running the scene, the device only recovers to a certain position on its own and then does not respond. So I want to know if the effect of this plugin is only initializing the position or can be manipulated by humans, but I have not implemented this function yet. I would be very grateful if you could help meÔºÅ. Thanks so muchÔºÅ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229
https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:1854,Performance,load,loading,1854,"raid/hx/sigma7_hx/sdk-3.14.0/lib/release/lin-x86_64-gcc/libdhd.a(dhdComUSB-libusb.o)Ôºöin function‚ÄòdhdUSBGetDeviceCountList(int*, int*, int*, int)‚ÄôÔºö; dhdComUSB-libusb.cpp:(.text+0x215)Ôºöundefined reference to ‚Äòlibusb_init‚Äô; dhdComUSB-libusb.cpp:(.text+0x24e)Ôºöundefined reference to ‚Äòlibusb_get_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0x297)Ôºöundefined reference to ‚Äòlibusb_get_device_descriptor‚Äô; dhdComUSB-libusb.cpp:(.text+0x2eb)Ôºöundefined reference to ‚Äòlibusb_free_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0x30c)Ôºöundefined reference to ‚Äòlibusb_exit‚Äô; ```. So I switched to using the dynamic linking SDK/lib/release/lin-x86_64-gcc/libdhd.so.3.14.0 for compilation, which compiled successfully, but the import of the plugin failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions] Plugin loading failed (/home/dell/raid/hx/sigma7",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229
https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:2064,Performance,load,loading,2064,"e to ‚Äòlibusb_init‚Äô; dhdComUSB-libusb.cpp:(.text+0x24e)Ôºöundefined reference to ‚Äòlibusb_get_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0x297)Ôºöundefined reference to ‚Äòlibusb_get_device_descriptor‚Äô; dhdComUSB-libusb.cpp:(.text+0x2eb)Ôºöundefined reference to ‚Äòlibusb_free_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0x30c)Ôºöundefined reference to ‚Äòlibusb_exit‚Äô; ```. So I switched to using the dynamic linking SDK/lib/release/lin-x86_64-gcc/libdhd.so.3.14.0 for compilation, which compiled successfully, but the import of the plugin failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory. Failed to load: [""ForceDimensions""]; [WARNING] [SceneCheckMissingRequiredPlugin] T",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229
https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:2237,Performance,load,load,2237,")Ôºöundefined reference to ‚Äòlibusb_free_device_list‚Äô; dhdComUSB-libusb.cpp:(.text+0x30c)Ôºöundefined reference to ‚Äòlibusb_exit‚Äô; ```. So I switched to using the dynamic linking SDK/lib/release/lin-x86_64-gcc/libdhd.so.3.14.0 for compilation, which compiled successfully, but the import of the plugin failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory. Failed to load: [""ForceDimensions""]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; ```. When I modify the force dimension lib file libdhd.3.14.0 to libdhd.so.3, it runs. However, when running the scene, the device only",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229
https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:2629,Performance,load,loading,2629,"e import of the plugin failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory. Failed to load: [""ForceDimensions""]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; ```. When I modify the force dimension lib file libdhd.3.14.0 to libdhd.so.3, it runs. However, when running the scene, the device only recovers to a certain position on its own and then does not respond. So I want to know if the effect of this plugin is only initializing the position or can be manipulated by humans, but I have not implemented this function yet. I would be very grateful if you could help ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229
https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:2838,Performance,load,loading,2838,"n failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory. Failed to load: [""ForceDimensions""]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; ```. When I modify the force dimension lib file libdhd.3.14.0 to libdhd.so.3, it runs. However, when running the scene, the device only recovers to a certain position on its own and then does not respond. So I want to know if the effect of this plugin is only initializing the position or can be manipulated by humans, but I have not implemented this function yet. I would be very grateful if you could help meÔºÅ. Thanks so muchÔºÅ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229
https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:3008,Performance,load,load,3008,"n failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory. Failed to load: [""ForceDimensions""]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; ```. When I modify the force dimension lib file libdhd.3.14.0 to libdhd.so.3, it runs. However, when running the scene, the device only recovers to a certain position on its own and then does not respond. So I want to know if the effect of this plugin is only initializing the position or can be manipulated by humans, but I have not implemented this function yet. I would be very grateful if you could help meÔºÅ. Thanks so muchÔºÅ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229
https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:3309,Safety,recover,recovers,3309,"n failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory. Failed to load: [""ForceDimensions""]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; ```. When I modify the force dimension lib file libdhd.3.14.0 to libdhd.so.3, it runs. However, when running the scene, the device only recovers to a certain position on its own and then does not respond. So I want to know if the effect of this plugin is only initializing the position or can be manipulated by humans, but I have not implemented this function yet. I would be very grateful if you could help meÔºÅ. Thanks so muchÔºÅ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229
https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:2479,Security,Validat,Validating,2479,"e import of the plugin failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory. Failed to load: [""ForceDimensions""]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; ```. When I modify the force dimension lib file libdhd.3.14.0 to libdhd.so.3, it runs. However, when running the scene, the device only recovers to a certain position on its own and then does not respond. So I want to know if the effect of this plugin is only initializing the position or can be manipulated by humans, but I have not implemented this function yet. I would be very grateful if you could help ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229
https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1327495038:71,Availability,error,errors,71,"Hi @Iwillsd! Sorry for the late response. By any chance, are there any errors when you create the OmegaDriver object? Does ForceDimension SDK examples work for you?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1327495038
https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1328008865:99,Availability,error,errors,99,"Hi, @polyakovkrylo! Thank you for your reply. When I run the scene with lindhd.so.3, there were no errors, but there was a warning; `Gtk-Message: 16:20:05.799: GtkDialog mapped without a transient parent. This is discouraged.; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [WARNING] [SceneCheckUsingAlias] This scene is using hard coded aliases. Aliases can be very confusing, use with caution. ; - DefaultContactManager: 1 created with alias ""CollisionResponse"" ; - DefaultPipeline: 1 created with alias ""CollisionPipeline"" ; - EulerImplicitSolver: 1 created with alias ""EulerImplicit""; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; `. I was able to use the ForceDimension SDK examples as normal, and when I run the sceneÔºå the device was already connected but couldn't do anything, which confused me.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1328008865
https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1328008865:137,Integrability,Message,Message,137,"Hi, @polyakovkrylo! Thank you for your reply. When I run the scene with lindhd.so.3, there were no errors, but there was a warning; `Gtk-Message: 16:20:05.799: GtkDialog mapped without a transient parent. This is discouraged.; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [WARNING] [SceneCheckUsingAlias] This scene is using hard coded aliases. Aliases can be very confusing, use with caution. ; - DefaultContactManager: 1 created with alias ""CollisionResponse"" ; - DefaultPipeline: 1 created with alias ""CollisionPipeline"" ; - EulerImplicitSolver: 1 created with alias ""EulerImplicit""; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; `. I was able to use the ForceDimension SDK examples as normal, and when I run the sceneÔºå the device was already connected but couldn't do anything, which confused me.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1328008865
https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1328008865:256,Security,Validat,Validating,256,"Hi, @polyakovkrylo! Thank you for your reply. When I run the scene with lindhd.so.3, there were no errors, but there was a warning; `Gtk-Message: 16:20:05.799: GtkDialog mapped without a transient parent. This is discouraged.; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [WARNING] [SceneCheckUsingAlias] This scene is using hard coded aliases. Aliases can be very confusing, use with caution. ; - DefaultContactManager: 1 created with alias ""CollisionResponse"" ; - DefaultPipeline: 1 created with alias ""CollisionPipeline"" ; - EulerImplicitSolver: 1 created with alias ""EulerImplicit""; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; `. I was able to use the ForceDimension SDK examples as normal, and when I run the sceneÔºå the device was already connected but couldn't do anything, which confused me.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1328008865
https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1328008865:728,Security,validat,validating,728,"Hi, @polyakovkrylo! Thank you for your reply. When I run the scene with lindhd.so.3, there were no errors, but there was a warning; `Gtk-Message: 16:20:05.799: GtkDialog mapped without a transient parent. This is discouraged.; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [WARNING] [SceneCheckUsingAlias] This scene is using hard coded aliases. Aliases can be very confusing, use with caution. ; - DefaultContactManager: 1 created with alias ""CollisionResponse"" ; - DefaultPipeline: 1 created with alias ""CollisionPipeline"" ; - EulerImplicitSolver: 1 created with alias ""EulerImplicit""; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; `. I was able to use the ForceDimension SDK examples as normal, and when I run the sceneÔºå the device was already connected but couldn't do anything, which confused me.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1328008865
https://github.com/sofa-framework/sofa/pull/3498#issuecomment-1323210444:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3498#issuecomment-1323210444
https://github.com/sofa-framework/sofa/pull/3498#issuecomment-1324849532:269,Integrability,depend,depends,269,"> In which case is a Mat1x1 used instead of a Real?. [Here](https://github.com/sofa-framework/sofa/blob/9234b0885ae2686660f1ae737f7ff0a387134ba6/Sofa/Component/SolidMechanics/Spring/src/sofa/component/solidmechanics/spring/StiffSpringForceField.h#L71). The size of Mat depends on DataTypes, which can be Vec1d.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3498#issuecomment-1324849532
https://github.com/sofa-framework/sofa/pull/3498#issuecomment-1324869308:277,Integrability,depend,depends,277,"> > In which case is a Mat1x1 used instead of a Real?; > ; > [Here](https://github.com/sofa-framework/sofa/blob/9234b0885ae2686660f1ae737f7ff0a387134ba6/Sofa/Component/SolidMechanics/Spring/src/sofa/component/solidmechanics/spring/StiffSpringForceField.h#L71). The size of Mat depends on DataTypes, which can be Vec1d. ok why not... üöÄ üßë‚Äçüî¨ ; as we said it is: üçÜ ü™∞",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3498#issuecomment-1324869308
https://github.com/sofa-framework/sofa/issues/3499#issuecomment-1322609102:115,Integrability,depend,depend,115,"> It's not a very common situation, so thanks for the report. Many of the scenes I am working on right now kind of depend on that. :sweat_smile: ; Do you already have an idea where to look for the difference between the solvers that might cause the behavior?; I would love to create a PR, but I have no idea how solvers work in SOFA. :D . Cheers,; Paul",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3499#issuecomment-1322609102
https://github.com/sofa-framework/sofa/issues/3499#issuecomment-1323257851:22,Testability,test,tests,22,"Hi Paul,. I made some tests on basic scenes and it seems empty systems are supported (in the sense it does not crash). See https://github.com/sofa-framework/sofa/pull/3500. The factorization is supposed to stop here: https://github.com/sofa-framework/sofa/blob/master/Sofa/Component/LinearSolver/Direct/src/sofa/component/linearsolver/direct/SparseLDLSolver.inl#L93. Can you debug your scene around this line to investigate why this condition is not reached?. Alex",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3499#issuecomment-1323257851
https://github.com/sofa-framework/sofa/issues/3499#issuecomment-1327688688:918,Availability,error,error,918,"Hi @alxbilger thanks for the tip! :); Adding this check does not fix the segfault in my scene.; The call that segfaults is `Mfiltered.getColsIndex()` of the solver's `sofa::linearalgebra::CompressedRowSparseMatrix`. I then tried moving the check up, just to make sure that's the issue; ```; int n = M.colSize();. if(n == 0); {; msg_warning() << ""Invalid Linear System to solve. Please insure that there is enough constraints (not rank deficient)."" ;; return true;; }. int * M_colptr = (int *) &Mfiltered.getRowBegin()[0];; int * M_rowind = (int *) &Mfiltered.getColsIndex()[0];; Real * M_values = (Real *) &Mfiltered.getColsValue()[0];. if(M_colptr==nullptr || M_rowind==nullptr || M_values==nullptr || Mfiltered.getRowBegin().size() < (size_t)n ); {; msg_warning() << ""Invalid Linear System to solve. Please insure that there is enough constraints (not rank deficient)."" ;; return true;; }; ```. But ran into another error that follows; ```; [WARNING] [SparseLDLSolver(SparseLDLSolver)] Invalid Linear System to solve. Please insure that there is enough constraints (not rank deficient).; [ERROR] [FullVector] in vector<FullVector<double>> 0x5595582fbf00 size 0 : invalid index 0; sofa::linearalgebra::FullVector<double>::checkIndex(int) const; sofa::linearalgebra::FullVector<double>::operator[](int); sofa::component::linearsolver::direct::SparseLDLSolver<sofa::linearalgebra::CompressedRowSparseMatrix<sofa::type::Mat<3u, 3u, double>, sofa::type::vector<sofa::type::Mat<3u, 3u, double>, sofa::type::CPUMemoryManager<sofa::type::Mat<3u, 3u, double> > >, sofa::type::vector<unsigned int, sofa::type::CPUMemoryManager<unsigned int> > >, sofa::linearalgebra::FullVector<double>, sofa::component::linearsolver::NoThreadManager>::solve(sofa::linearalgebra::CompressedRowSparseMatrix<sofa::type::Mat<3u, 3u, double>, sofa::type::vector<sofa::type::Mat<3u, 3u, double>, sofa::type::CPUMemoryManager<sofa::type::Mat<3u, 3u, double> > >, sofa::type::vector<unsigned int, sofa::type::CPUMemoryManager<unsigne",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3499#issuecomment-1327688688
https://github.com/sofa-framework/sofa/issues/3499#issuecomment-1327688688:1091,Availability,ERROR,ERROR,1091,"; [ERROR] [FullVector] in vector<FullVector<double>> 0x5595582fbf00 size 0 : invalid index 0; sofa::linearalgebra::FullVector<double>::checkIndex(int) const; sofa::linearalgebra::FullVector<double>::operator[](int); sofa::component::linearsolver::direct::SparseLDLSolver<sofa::linearalgebra::CompressedRowSparseMatrix<sofa::type::Mat<3u, 3u, double>, sofa::type::vector<sofa::type::Mat<3u, 3u, double>, sofa::type::CPUMemoryManager<sofa::type::Mat<3u, 3u, double> > >, sofa::type::vector<unsigned int, sofa::type::CPUMemoryManager<unsigned int> > >, sofa::linearalgebra::FullVector<double>, sofa::component::linearsolver::NoThreadManager>::solve(sofa::linearalgebra::CompressedRowSparseMatrix<sofa::type::Mat<3u, 3u, double>, sofa::type::vector<sofa::type::Mat<3u, 3u, double>, sofa::type::CPUMemoryManager<sofa::type::Mat<3u, 3u, double> > >, sofa::type::vector<unsigned int, sofa::type::CPUMemoryManager<unsigne",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3499#issuecomment-1327688688
https://github.com/sofa-framework/sofa/issues/3499#issuecomment-1327722611:874,Availability,error,error,874,"The new crash you have is in the `solve` function, trying to access an element of an empty vector (either the solution vector, or the right-hand side vector). The solve function is [here](https://github.com/sofa-framework/sofa/blob/41a88c16b6e5d9660a306b8faa7a12d79c0d0a57/Sofa/Component/LinearSolver/Direct/src/sofa/component/linearsolver/direct/SparseLDLSolver.inl#L74), called from [here](https://github.com/sofa-framework/sofa/blob/41a88c16b6e5d9660a306b8faa7a12d79c0d0a57/Sofa/Component/LinearSolver/Iterative/src/sofa/component/linearsolver/iterative/MatrixLinearSolver.inl#L199). . The solveSystem function works in 2 steps: 1) factorize the matrix into LDL, 2) solve the system based on the factorization. As far as I can see, the solving process runs even if the factorization fails. It's probably why you have the crash. A modification to do could be to catch the error in the solveSystem function and not perform the solving. In the meantime, as a quick fix, you can try to set `invertData->n = n;` before leaving the function:. ```cpp; int n = M.colSize();; invertData->n = n;; ```. `invertData->n` would be `=0`, then the [solve function](https://github.com/sofa-framework/sofa/blob/41a88c16b6e5d9660a306b8faa7a12d79c0d0a57/Sofa/Component/LinearSolver/Direct/src/sofa/component/linearsolver/direct/SparseLDLSolverImpl.h#L160) may run safely.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3499#issuecomment-1327722611
https://github.com/sofa-framework/sofa/issues/3499#issuecomment-1327722611:916,Performance,perform,perform,916,"The new crash you have is in the `solve` function, trying to access an element of an empty vector (either the solution vector, or the right-hand side vector). The solve function is [here](https://github.com/sofa-framework/sofa/blob/41a88c16b6e5d9660a306b8faa7a12d79c0d0a57/Sofa/Component/LinearSolver/Direct/src/sofa/component/linearsolver/direct/SparseLDLSolver.inl#L74), called from [here](https://github.com/sofa-framework/sofa/blob/41a88c16b6e5d9660a306b8faa7a12d79c0d0a57/Sofa/Component/LinearSolver/Iterative/src/sofa/component/linearsolver/iterative/MatrixLinearSolver.inl#L199). . The solveSystem function works in 2 steps: 1) factorize the matrix into LDL, 2) solve the system based on the factorization. As far as I can see, the solving process runs even if the factorization fails. It's probably why you have the crash. A modification to do could be to catch the error in the solveSystem function and not perform the solving. In the meantime, as a quick fix, you can try to set `invertData->n = n;` before leaving the function:. ```cpp; int n = M.colSize();; invertData->n = n;; ```. `invertData->n` would be `=0`, then the [solve function](https://github.com/sofa-framework/sofa/blob/41a88c16b6e5d9660a306b8faa7a12d79c0d0a57/Sofa/Component/LinearSolver/Direct/src/sofa/component/linearsolver/direct/SparseLDLSolverImpl.h#L160) may run safely.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3499#issuecomment-1327722611
https://github.com/sofa-framework/sofa/issues/3499#issuecomment-1327722611:1347,Safety,safe,safely,1347,"The new crash you have is in the `solve` function, trying to access an element of an empty vector (either the solution vector, or the right-hand side vector). The solve function is [here](https://github.com/sofa-framework/sofa/blob/41a88c16b6e5d9660a306b8faa7a12d79c0d0a57/Sofa/Component/LinearSolver/Direct/src/sofa/component/linearsolver/direct/SparseLDLSolver.inl#L74), called from [here](https://github.com/sofa-framework/sofa/blob/41a88c16b6e5d9660a306b8faa7a12d79c0d0a57/Sofa/Component/LinearSolver/Iterative/src/sofa/component/linearsolver/iterative/MatrixLinearSolver.inl#L199). . The solveSystem function works in 2 steps: 1) factorize the matrix into LDL, 2) solve the system based on the factorization. As far as I can see, the solving process runs even if the factorization fails. It's probably why you have the crash. A modification to do could be to catch the error in the solveSystem function and not perform the solving. In the meantime, as a quick fix, you can try to set `invertData->n = n;` before leaving the function:. ```cpp; int n = M.colSize();; invertData->n = n;; ```. `invertData->n` would be `=0`, then the [solve function](https://github.com/sofa-framework/sofa/blob/41a88c16b6e5d9660a306b8faa7a12d79c0d0a57/Sofa/Component/LinearSolver/Direct/src/sofa/component/linearsolver/direct/SparseLDLSolverImpl.h#L160) may run safely.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3499#issuecomment-1327722611
https://github.com/sofa-framework/sofa/issues/3499#issuecomment-1327722611:61,Security,access,access,61,"The new crash you have is in the `solve` function, trying to access an element of an empty vector (either the solution vector, or the right-hand side vector). The solve function is [here](https://github.com/sofa-framework/sofa/blob/41a88c16b6e5d9660a306b8faa7a12d79c0d0a57/Sofa/Component/LinearSolver/Direct/src/sofa/component/linearsolver/direct/SparseLDLSolver.inl#L74), called from [here](https://github.com/sofa-framework/sofa/blob/41a88c16b6e5d9660a306b8faa7a12d79c0d0a57/Sofa/Component/LinearSolver/Iterative/src/sofa/component/linearsolver/iterative/MatrixLinearSolver.inl#L199). . The solveSystem function works in 2 steps: 1) factorize the matrix into LDL, 2) solve the system based on the factorization. As far as I can see, the solving process runs even if the factorization fails. It's probably why you have the crash. A modification to do could be to catch the error in the solveSystem function and not perform the solving. In the meantime, as a quick fix, you can try to set `invertData->n = n;` before leaving the function:. ```cpp; int n = M.colSize();; invertData->n = n;; ```. `invertData->n` would be `=0`, then the [solve function](https://github.com/sofa-framework/sofa/blob/41a88c16b6e5d9660a306b8faa7a12d79c0d0a57/Sofa/Component/LinearSolver/Direct/src/sofa/component/linearsolver/direct/SparseLDLSolverImpl.h#L160) may run safely.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3499#issuecomment-1327722611
https://github.com/sofa-framework/sofa/issues/3499#issuecomment-1327786743:250,Availability,ERROR,ERROR,250,"Hi @alxbilger ,; Ah, I see... Setting `invertData->n = n;` sadly does not prevent the segfault.; ```; [WARNING] [SparseLDLSolver(SparseLDLSolver)] Invalid Linear System to solve. Please insure that there is enough constraints (not rank deficient).; [ERROR] [FullVector] in vector<FullVector<double>> 0x555d8bdcea90 size 0 : invalid index 0; sofa::linearalgebra::FullVector<double>::checkIndex(int) const; sofa::linearalgebra::FullVector<double>::operator[](int); sofa::component::linearsolver::direct::SparseLDLSolver<sofa::linearalgebra::CompressedRowSparseMatrix<sofa::type::Mat<3u, 3u, double>, sofa::type::vector<sofa::type::Mat<3u, 3u, double>, sofa::type::CPUMemoryManager<sofa::type::Mat<3u, 3u, double> > >, sofa::type::vector<unsigned int, sofa::type::CPUMemoryManager<unsigned int> > >, sofa::linearalgebra::FullVector<double>, sofa::component::linearsolver::NoThreadManager>::solve(sofa::linearalgebra::CompressedRowSparseMatrix<sofa::type::Mat<3u, 3u, double>, sofa::type::vector<sofa::type::Mat<3u, 3u, double>, sofa::type::CPUMemoryManager<sofa::type::Mat<3u, 3u, double> > >, sofa::type::vector<unsigned int, sofa::type::CPUMemoryManager<unsigned int> > >&, sofa::linearalgebra::FullVector<double>&, sofa::linearalgebra::FullVector<double>&); sofa::component::linearsolver::MatrixLinearSolver<sofa::linearalgebra::CompressedRowSparseMatrix<sofa::type::Mat<3u, 3u, double>, sofa::type::vector<sofa::type::Mat<3u, 3u, double>, sofa::type::CPUMemoryManager<sofa::type::Mat<3u, 3u, double> > >, sofa::type::vector<unsigned int, sofa::type::CPUMemoryManager<unsigned int> > >, sofa::linearalgebra::FullVector<double>, sofa::component::linearsolver::NoThreadManager>::solveSystem(); ```. So the proper way would be changing `invert` from a `void` to `bool` return type and then checking that in `solveSystem`, right?; Is there a way to do that, without having to change the return type for all the solvers in `linearsolver.direct` ? :D",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3499#issuecomment-1327786743
https://github.com/sofa-framework/sofa/issues/3499#issuecomment-1333942912:28,Availability,error,error,28,"At least, it's not the same error üòÜ ; Did you try to add the `n==0` condition in addition to the code in the PR https://github.com/sofa-framework/sofa/pull/3512 ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3499#issuecomment-1333942912
https://github.com/sofa-framework/sofa/issues/3499#issuecomment-1337325939:181,Testability,test,test,181,"https://github.com/sofa-framework/sofa/pull/3512 is already merged.; But you could try to add your changes on https://github.com/sofa-framework/sofa/pull/3501. According to my unit test, a simple; ```cpp; if (n == 0); {; return true;; }; ```; makes the job",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3499#issuecomment-1337325939
https://github.com/sofa-framework/sofa/issues/3499#issuecomment-1337325939:189,Usability,simpl,simple,189,"https://github.com/sofa-framework/sofa/pull/3512 is already merged.; But you could try to add your changes on https://github.com/sofa-framework/sofa/pull/3501. According to my unit test, a simple; ```cpp; if (n == 0); {; return true;; }; ```; makes the job",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3499#issuecomment-1337325939
https://github.com/sofa-framework/sofa/pull/3503#issuecomment-1325242993:123,Security,access,accessor,123,"In term of easy task for newcommers, ; finding excessive calls to getValue() is clearly one of them (same for begin/end vs accessor).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3503#issuecomment-1325242993
https://github.com/sofa-framework/sofa/pull/3503#issuecomment-1325242993:80,Usability,clear,clearly,80,"In term of easy task for newcommers, ; finding excessive calls to getValue() is clearly one of them (same for begin/end vs accessor).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3503#issuecomment-1325242993
https://github.com/sofa-framework/sofa/pull/3505#issuecomment-1328629157:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3505#issuecomment-1328629157
https://github.com/sofa-framework/sofa/pull/3505#issuecomment-1328698963:126,Energy Efficiency,allocate,allocates,126,"The problem with this function is that you cannot trust the returned value forever due to pointer invalidation. `std::vector` allocates dynamically the memory depending of the need. At creation, it allocates a small chunk of memory. If the memory is full when you try to insert an element, it will allocate a bigger chunk of memory and move everything in this new memory space. Everything that was in the previous memory space is invalidated. It stills points to something, but it is invalid. And using it leads to a crash. I made a small example on godbolt of this situation: https://godbolt.org/z/aqec8Krzo. You can see that the result of `data()` is invalidated after elements insertions. Conclusion: your solution is better than the previous. But this function must be used appropriately.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3505#issuecomment-1328698963
https://github.com/sofa-framework/sofa/pull/3505#issuecomment-1328698963:198,Energy Efficiency,allocate,allocates,198,"The problem with this function is that you cannot trust the returned value forever due to pointer invalidation. `std::vector` allocates dynamically the memory depending of the need. At creation, it allocates a small chunk of memory. If the memory is full when you try to insert an element, it will allocate a bigger chunk of memory and move everything in this new memory space. Everything that was in the previous memory space is invalidated. It stills points to something, but it is invalid. And using it leads to a crash. I made a small example on godbolt of this situation: https://godbolt.org/z/aqec8Krzo. You can see that the result of `data()` is invalidated after elements insertions. Conclusion: your solution is better than the previous. But this function must be used appropriately.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3505#issuecomment-1328698963
https://github.com/sofa-framework/sofa/pull/3505#issuecomment-1328698963:298,Energy Efficiency,allocate,allocate,298,"The problem with this function is that you cannot trust the returned value forever due to pointer invalidation. `std::vector` allocates dynamically the memory depending of the need. At creation, it allocates a small chunk of memory. If the memory is full when you try to insert an element, it will allocate a bigger chunk of memory and move everything in this new memory space. Everything that was in the previous memory space is invalidated. It stills points to something, but it is invalid. And using it leads to a crash. I made a small example on godbolt of this situation: https://godbolt.org/z/aqec8Krzo. You can see that the result of `data()` is invalidated after elements insertions. Conclusion: your solution is better than the previous. But this function must be used appropriately.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3505#issuecomment-1328698963
https://github.com/sofa-framework/sofa/pull/3505#issuecomment-1328698963:159,Integrability,depend,depending,159,"The problem with this function is that you cannot trust the returned value forever due to pointer invalidation. `std::vector` allocates dynamically the memory depending of the need. At creation, it allocates a small chunk of memory. If the memory is full when you try to insert an element, it will allocate a bigger chunk of memory and move everything in this new memory space. Everything that was in the previous memory space is invalidated. It stills points to something, but it is invalid. And using it leads to a crash. I made a small example on godbolt of this situation: https://godbolt.org/z/aqec8Krzo. You can see that the result of `data()` is invalidated after elements insertions. Conclusion: your solution is better than the previous. But this function must be used appropriately.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3505#issuecomment-1328698963
https://github.com/sofa-framework/sofa/pull/3505#issuecomment-1329331227:307,Modifiability,plugin,plugins,307,"Thanks @alxbilger for the explanation and the perfect illustration :+1:; I understand the issue, although I don't know if the ""appropriate use"" of this method (`getValuePtr`) should be left to the user, or if additional safeguards should be put in the code. I did a quick search in the code of SOFA + a few plugins that I'm using, and I found a call to this particular method only in the `DataHelper` component in SofaPython3. I added a quick safeguard in this case, in the [PR](https://github.com/sofa-framework/SofaPython3/pull/318) I'm referring to in the description above. However the modification I suggested doesn't solve the type of problem you are describing here (so it would be left to the user to check data buffer coherence whenever the underlying data is modified...). Apart from that, I saw that the initial code I replaced (`return &data[0]`) is also used in two others `getValuePtr` methods : in `FixedArrayTypeInfo.h` and `TypeInfo_Text.h`. As I didn't find any other call to these methods, I would say this doesn't change much, but maybe the PR could be extended to these as well. I can do the modification if someone can confirm it is a good idea.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3505#issuecomment-1329331227
https://github.com/sofa-framework/sofa/pull/3505#issuecomment-1329331227:1073,Modifiability,extend,extended,1073,"Thanks @alxbilger for the explanation and the perfect illustration :+1:; I understand the issue, although I don't know if the ""appropriate use"" of this method (`getValuePtr`) should be left to the user, or if additional safeguards should be put in the code. I did a quick search in the code of SOFA + a few plugins that I'm using, and I found a call to this particular method only in the `DataHelper` component in SofaPython3. I added a quick safeguard in this case, in the [PR](https://github.com/sofa-framework/SofaPython3/pull/318) I'm referring to in the description above. However the modification I suggested doesn't solve the type of problem you are describing here (so it would be left to the user to check data buffer coherence whenever the underlying data is modified...). Apart from that, I saw that the initial code I replaced (`return &data[0]`) is also used in two others `getValuePtr` methods : in `FixedArrayTypeInfo.h` and `TypeInfo_Text.h`. As I didn't find any other call to these methods, I would say this doesn't change much, but maybe the PR could be extended to these as well. I can do the modification if someone can confirm it is a good idea.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3505#issuecomment-1329331227
https://github.com/sofa-framework/sofa/pull/3505#issuecomment-1329331227:220,Safety,safe,safeguards,220,"Thanks @alxbilger for the explanation and the perfect illustration :+1:; I understand the issue, although I don't know if the ""appropriate use"" of this method (`getValuePtr`) should be left to the user, or if additional safeguards should be put in the code. I did a quick search in the code of SOFA + a few plugins that I'm using, and I found a call to this particular method only in the `DataHelper` component in SofaPython3. I added a quick safeguard in this case, in the [PR](https://github.com/sofa-framework/SofaPython3/pull/318) I'm referring to in the description above. However the modification I suggested doesn't solve the type of problem you are describing here (so it would be left to the user to check data buffer coherence whenever the underlying data is modified...). Apart from that, I saw that the initial code I replaced (`return &data[0]`) is also used in two others `getValuePtr` methods : in `FixedArrayTypeInfo.h` and `TypeInfo_Text.h`. As I didn't find any other call to these methods, I would say this doesn't change much, but maybe the PR could be extended to these as well. I can do the modification if someone can confirm it is a good idea.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3505#issuecomment-1329331227
https://github.com/sofa-framework/sofa/pull/3505#issuecomment-1329331227:443,Safety,safe,safeguard,443,"Thanks @alxbilger for the explanation and the perfect illustration :+1:; I understand the issue, although I don't know if the ""appropriate use"" of this method (`getValuePtr`) should be left to the user, or if additional safeguards should be put in the code. I did a quick search in the code of SOFA + a few plugins that I'm using, and I found a call to this particular method only in the `DataHelper` component in SofaPython3. I added a quick safeguard in this case, in the [PR](https://github.com/sofa-framework/SofaPython3/pull/318) I'm referring to in the description above. However the modification I suggested doesn't solve the type of problem you are describing here (so it would be left to the user to check data buffer coherence whenever the underlying data is modified...). Apart from that, I saw that the initial code I replaced (`return &data[0]`) is also used in two others `getValuePtr` methods : in `FixedArrayTypeInfo.h` and `TypeInfo_Text.h`. As I didn't find any other call to these methods, I would say this doesn't change much, but maybe the PR could be extended to these as well. I can do the modification if someone can confirm it is a good idea.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3505#issuecomment-1329331227
https://github.com/sofa-framework/sofa/pull/3505#issuecomment-1329533975:217,Availability,error,error,217,"I did the modification in `TypeInfo_Text.h`, but build fails if I extend it to `FixedArrayTypeInfo.h`, apparently because of the template specialisations on Rigid types, for instance :; ```; FixedArrayTypeInfo.h:195: error: ‚Äòconst DataType‚Äô {aka ‚Äòconst class sofa::defaulttype::RigidDeriv<2, double>‚Äô} has no member named ‚Äòdata‚Äô; 195 | return data.data();; | ~~~~~^~~~; ```; (which makes sense).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3505#issuecomment-1329533975
https://github.com/sofa-framework/sofa/pull/3505#issuecomment-1329533975:66,Modifiability,extend,extend,66,"I did the modification in `TypeInfo_Text.h`, but build fails if I extend it to `FixedArrayTypeInfo.h`, apparently because of the template specialisations on Rigid types, for instance :; ```; FixedArrayTypeInfo.h:195: error: ‚Äòconst DataType‚Äô {aka ‚Äòconst class sofa::defaulttype::RigidDeriv<2, double>‚Äô} has no member named ‚Äòdata‚Äô; 195 | return data.data();; | ~~~~~^~~~; ```; (which makes sense).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3505#issuecomment-1329533975
https://github.com/sofa-framework/sofa/pull/3508#issuecomment-1331766967:60,Usability,simpl,simple,60,"Indeed, no example of the component was found, so I added a simple one: a beam under gravity",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3508#issuecomment-1331766967
https://github.com/sofa-framework/sofa/pull/3508#issuecomment-1332431242:93,Testability,test,tests,93,"Since there is new scene, I force the execution on the CI to be sure.; [ci-build][with-scene-tests]",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3508#issuecomment-1332431242
https://github.com/sofa-framework/sofa/issues/3510#issuecomment-1332408866:308,Deployability,update,updated,308,"Thanks for the tip! It's been some time since I've used `git bisect`, so I might be mistaking, but for me the only way to judge if a commit is 'good', is to recompile and test the scene I was mentioning at each iteration of bisect, right ? In which case the process could take a bit of time... I'll keep you updated if I go through !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3510#issuecomment-1332408866
https://github.com/sofa-framework/sofa/issues/3510#issuecomment-1332408866:171,Testability,test,test,171,"Thanks for the tip! It's been some time since I've used `git bisect`, so I might be mistaking, but for me the only way to judge if a commit is 'good', is to recompile and test the scene I was mentioning at each iteration of bisect, right ? In which case the process could take a bit of time... I'll keep you updated if I go through !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3510#issuecomment-1332408866
https://github.com/sofa-framework/sofa/issues/3510#issuecomment-1332413084:193,Modifiability,plugin,plugins,193,"Yes you're right. It can take some time, but if you really have no idea what commit is the guilty one, it is the fastest method. If you go with this process, disable the compilation of useless plugins and tests.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3510#issuecomment-1332413084
https://github.com/sofa-framework/sofa/issues/3510#issuecomment-1332413084:205,Testability,test,tests,205,"Yes you're right. It can take some time, but if you really have no idea what commit is the guilty one, it is the fastest method. If you go with this process, disable the compilation of useless plugins and tests.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3510#issuecomment-1332413084
https://github.com/sofa-framework/sofa/issues/3510#issuecomment-1332895974:319,Deployability,update,updated,319,"Hi, I'm working with SOFA through SofaPython3 and I've been experiencing the same change in behavior on Ubuntu 20.04 after I (re)built SOFA from the master branch on November 25th.; I didn't have this issue with a previous SOFA build from October 11th at commit ae42db86fbfc9ff70682b46dc8a2279de25361bd .; Since I also updated some Ubuntu packages and SofaPython3 in the meantime, I'm not sure what is causing this change in behavior as well.; However, `git bisect` led me to #3299, i.e. commit 18149f4407fd78359eead7b64ae23470687c40c4 from October 28th, which modified some Qt/GUI-related files like [QtGLViewer](https://github.com/sofa-framework/sofa/blob/18149f4407fd78359eead7b64ae23470687c40c4/Sofa/GUI/Qt/src/sofa/gui/qt/viewer/qgl/QtGLViewer.cpp#L826).; I'm not familiar with the code base enough to investigate further, but I also built SOFA at commit 58d37e9726187f4f8662fe4786c039443b306bd1 which is the one before #3299 and the change in interactive control behavior does not seem to be present there for me.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3510#issuecomment-1332895974
https://github.com/sofa-framework/sofa/issues/3510#issuecomment-1333567910:629,Integrability,rout,routine,629,"Thanks a lot @chhas for the investigation :raised_hands:; I'm no specialist either, but, although most changes in the commit are simply `Vector3 -> Vec3`, there are two things that seem suspicious to me, in `SofaViewer.cpp` (l.256-295) and `QtGLViewer.cpp`(l.823-860) (sorry, I can't find an easy way to link to a specific line in a commit diff view).; In both, there is a change of condition from :; ```; if( isControlPressed() ); ```; to; ```; if (!isControlPressed() && !e->isAutoRepeat()); ```; before calling a `propagateEvent` method on the `QKeyEvent` being processed.; I had a brief look: `isAutoRepeat` seems to be a Qt routine always returning an `autor` variable being set to 1 in `qevent.h`. And `isControlPressed()` refers to an internal variable `m_isControlPressed` in `SofaViewer.h`, which does what its name suggests. At this point, it seems that these modifications could very well explain the two changes of behaviour I was describing above.; @damienmarchal, could you give us some input on this ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3510#issuecomment-1333567910
https://github.com/sofa-framework/sofa/issues/3510#issuecomment-1333567910:665,Modifiability,variab,variable,665,"Thanks a lot @chhas for the investigation :raised_hands:; I'm no specialist either, but, although most changes in the commit are simply `Vector3 -> Vec3`, there are two things that seem suspicious to me, in `SofaViewer.cpp` (l.256-295) and `QtGLViewer.cpp`(l.823-860) (sorry, I can't find an easy way to link to a specific line in a commit diff view).; In both, there is a change of condition from :; ```; if( isControlPressed() ); ```; to; ```; if (!isControlPressed() && !e->isAutoRepeat()); ```; before calling a `propagateEvent` method on the `QKeyEvent` being processed.; I had a brief look: `isAutoRepeat` seems to be a Qt routine always returning an `autor` variable being set to 1 in `qevent.h`. And `isControlPressed()` refers to an internal variable `m_isControlPressed` in `SofaViewer.h`, which does what its name suggests. At this point, it seems that these modifications could very well explain the two changes of behaviour I was describing above.; @damienmarchal, could you give us some input on this ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3510#issuecomment-1333567910
https://github.com/sofa-framework/sofa/issues/3510#issuecomment-1333567910:751,Modifiability,variab,variable,751,"Thanks a lot @chhas for the investigation :raised_hands:; I'm no specialist either, but, although most changes in the commit are simply `Vector3 -> Vec3`, there are two things that seem suspicious to me, in `SofaViewer.cpp` (l.256-295) and `QtGLViewer.cpp`(l.823-860) (sorry, I can't find an easy way to link to a specific line in a commit diff view).; In both, there is a change of condition from :; ```; if( isControlPressed() ); ```; to; ```; if (!isControlPressed() && !e->isAutoRepeat()); ```; before calling a `propagateEvent` method on the `QKeyEvent` being processed.; I had a brief look: `isAutoRepeat` seems to be a Qt routine always returning an `autor` variable being set to 1 in `qevent.h`. And `isControlPressed()` refers to an internal variable `m_isControlPressed` in `SofaViewer.h`, which does what its name suggests. At this point, it seems that these modifications could very well explain the two changes of behaviour I was describing above.; @damienmarchal, could you give us some input on this ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3510#issuecomment-1333567910
https://github.com/sofa-framework/sofa/issues/3510#issuecomment-1333567910:129,Usability,simpl,simply,129,"Thanks a lot @chhas for the investigation :raised_hands:; I'm no specialist either, but, although most changes in the commit are simply `Vector3 -> Vec3`, there are two things that seem suspicious to me, in `SofaViewer.cpp` (l.256-295) and `QtGLViewer.cpp`(l.823-860) (sorry, I can't find an easy way to link to a specific line in a commit diff view).; In both, there is a change of condition from :; ```; if( isControlPressed() ); ```; to; ```; if (!isControlPressed() && !e->isAutoRepeat()); ```; before calling a `propagateEvent` method on the `QKeyEvent` being processed.; I had a brief look: `isAutoRepeat` seems to be a Qt routine always returning an `autor` variable being set to 1 in `qevent.h`. And `isControlPressed()` refers to an internal variable `m_isControlPressed` in `SofaViewer.h`, which does what its name suggests. At this point, it seems that these modifications could very well explain the two changes of behaviour I was describing above.; @damienmarchal, could you give us some input on this ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3510#issuecomment-1333567910
https://github.com/sofa-framework/sofa/issues/3510#issuecomment-1339023892:409,Deployability,integrat,integrated,409,Hello @Camille-K and @chhas thanks for very well done and helpfull analysis. . At first sight I would say that this change has nothing to do with the vector3 to vec3 change so it must be removed asap.; I will do that. That says the change is in fact this change was for a separated PR fixing this issue ttps://github.com/sofa-framework/sofa/issues/3384 ; But as the fix was breaking it was not supposed to be integrated that way;,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3510#issuecomment-1339023892
https://github.com/sofa-framework/sofa/issues/3510#issuecomment-1339023892:409,Integrability,integrat,integrated,409,Hello @Camille-K and @chhas thanks for very well done and helpfull analysis. . At first sight I would say that this change has nothing to do with the vector3 to vec3 change so it must be removed asap.; I will do that. That says the change is in fact this change was for a separated PR fixing this issue ttps://github.com/sofa-framework/sofa/issues/3384 ; But as the fix was breaking it was not supposed to be integrated that way;,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3510#issuecomment-1339023892
https://github.com/sofa-framework/sofa/pull/3512#issuecomment-1332428383:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3512#issuecomment-1332428383
https://github.com/sofa-framework/sofa/pull/3514#issuecomment-1333215217:51,Modifiability,plugin,plugins,51,"(not the PR itself) ; I am wondering why does the `plugins/` dir CMakefile tests the presence of Sofa.GL ?; IMO it should be in the CMakefile of the plugin itself, where it does ` find_package()`",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3514#issuecomment-1333215217
https://github.com/sofa-framework/sofa/pull/3514#issuecomment-1333215217:149,Modifiability,plugin,plugin,149,"(not the PR itself) ; I am wondering why does the `plugins/` dir CMakefile tests the presence of Sofa.GL ?; IMO it should be in the CMakefile of the plugin itself, where it does ` find_package()`",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3514#issuecomment-1333215217
https://github.com/sofa-framework/sofa/pull/3514#issuecomment-1333215217:75,Testability,test,tests,75,"(not the PR itself) ; I am wondering why does the `plugins/` dir CMakefile tests the presence of Sofa.GL ?; IMO it should be in the CMakefile of the plugin itself, where it does ` find_package()`",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3514#issuecomment-1333215217
https://github.com/sofa-framework/sofa/pull/3515#issuecomment-1333400066:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3515#issuecomment-1333400066
https://github.com/sofa-framework/sofa/pull/3515#issuecomment-1333575575:33,Deployability,integrat,integrate,33,"I am not sure it is necessary to integrate the logger. It makes the code more complex, and IMO nobody will use it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3515#issuecomment-1333575575
https://github.com/sofa-framework/sofa/pull/3515#issuecomment-1333575575:33,Integrability,integrat,integrate,33,"I am not sure it is necessary to integrate the logger. It makes the code more complex, and IMO nobody will use it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3515#issuecomment-1333575575
https://github.com/sofa-framework/sofa/pull/3515#issuecomment-1333575575:47,Testability,log,logger,47,"I am not sure it is necessary to integrate the logger. It makes the code more complex, and IMO nobody will use it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3515#issuecomment-1333575575
https://github.com/sofa-framework/sofa/pull/3515#issuecomment-1352594212:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3515#issuecomment-1352594212
https://github.com/sofa-framework/sofa/pull/3515#issuecomment-1352711002:32,Testability,test,tests,32,[ci-build][full-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3515#issuecomment-1352711002
https://github.com/sofa-framework/sofa/pull/3515#issuecomment-1369306389:32,Testability,test,tests,32,[ci-build][full-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3515#issuecomment-1369306389
https://github.com/sofa-framework/sofa/pull/3515#issuecomment-1369434658:32,Testability,test,tests,32,[ci-build][full-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3515#issuecomment-1369434658
https://github.com/sofa-framework/sofa/pull/3515#issuecomment-1378385271:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3515#issuecomment-1378385271
https://github.com/sofa-framework/sofa/pull/3515#issuecomment-1507838794:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3515#issuecomment-1507838794
https://github.com/sofa-framework/sofa/pull/3515#issuecomment-1532312485:32,Testability,test,tests,32,[ci-build][full-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3515#issuecomment-1532312485
https://github.com/sofa-framework/sofa/pull/3515#issuecomment-1532704807:9,Testability,test,tests,9,Are more tests provided in InSimo's repo? I would like to make sure that you get the same results if you change specific parameters of the policy.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3515#issuecomment-1532704807
https://github.com/sofa-framework/sofa/pull/3515#issuecomment-1532915092:75,Testability,test,test,75,Does https://github.com/sofa-framework/sofa/pull/3832 fix the failing unit test?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3515#issuecomment-1532915092
https://github.com/sofa-framework/sofa/pull/3515#issuecomment-1533956692:34,Testability,test,test,34,> Does #3832 fix the failing unit test?. It does üëç,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3515#issuecomment-1533956692
https://github.com/sofa-framework/sofa/pull/3515#issuecomment-1534077944:11,Testability,test,tests,11,> Are more tests provided in InSimo's repo? I would like to make sure that you get the same results if you change specific parameters of the policy. I see there are tests for CRSConstraintMatrix (and the eigenutils) but not for the generic and mechanicals one; https://github.com/InSimo/ISSofa/tree/issofa/framework/framework_test/defaulttype,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3515#issuecomment-1534077944
https://github.com/sofa-framework/sofa/pull/3515#issuecomment-1534077944:165,Testability,test,tests,165,> Are more tests provided in InSimo's repo? I would like to make sure that you get the same results if you change specific parameters of the policy. I see there are tests for CRSConstraintMatrix (and the eigenutils) but not for the generic and mechanicals one; https://github.com/InSimo/ISSofa/tree/issofa/framework/framework_test/defaulttype,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3515#issuecomment-1534077944
https://github.com/sofa-framework/sofa/pull/3515#issuecomment-1558744958:32,Testability,test,tests,32,[ci-build][full-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3515#issuecomment-1558744958
https://github.com/sofa-framework/sofa/issues/3517#issuecomment-1333867314:0,Availability,Error,Error,0,"Error, mistakenly duplicated #3516",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3517#issuecomment-1333867314
https://github.com/sofa-framework/sofa/pull/3518#issuecomment-1336961622:62,Deployability,release,releases,62,.. and [tag v22.06.01](https://github.com/sofa-framework/sofa/releases/tag/v22.06.01) created without binary release,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3518#issuecomment-1336961622
https://github.com/sofa-framework/sofa/pull/3518#issuecomment-1336961622:109,Deployability,release,release,109,.. and [tag v22.06.01](https://github.com/sofa-framework/sofa/releases/tag/v22.06.01) created without binary release,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3518#issuecomment-1336961622
https://github.com/sofa-framework/sofa/pull/3519#issuecomment-1335005868:225,Integrability,interface,interface,225,"> And by curiosity, why are the methods of the SofaPhysicsAPI class not defined in SofaPhysicAPI.cpp?. Very good question... I'm not sure, I think it was done so SofaPhysicsAPI can be shipped/share easily? or to look like an interface ?; @fredroy any idea?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3519#issuecomment-1335005868
https://github.com/sofa-framework/sofa/pull/3519#issuecomment-1336769813:233,Integrability,interface,interface,233,"> > And by curiosity, why are the methods of the SofaPhysicsAPI class not defined in SofaPhysicAPI.cpp?; > ; > Very good question... I'm not sure, I think it was done so SofaPhysicsAPI can be shipped/share easily? or to look like an interface ? @fredroy any idea?. At that time, it was to give a public API to any external program using SOFA as a lib (no exposition whatsoever to any SOFA code).; You just needed this .h and the compiled libs.; ; Note that because of the config.h stuff, this is not the case anymore üôä",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3519#issuecomment-1336769813
https://github.com/sofa-framework/sofa/pull/3519#issuecomment-1336769813:472,Modifiability,config,config,472,"> > And by curiosity, why are the methods of the SofaPhysicsAPI class not defined in SofaPhysicAPI.cpp?; > ; > Very good question... I'm not sure, I think it was done so SofaPhysicsAPI can be shipped/share easily? or to look like an interface ? @fredroy any idea?. At that time, it was to give a public API to any external program using SOFA as a lib (no exposition whatsoever to any SOFA code).; You just needed this .h and the compiled libs.; ; Note that because of the config.h stuff, this is not the case anymore üôä",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3519#issuecomment-1336769813
https://github.com/sofa-framework/sofa/pull/3519#issuecomment-1337525238:43,Deployability,release,release,43,do you want to milestone it for the v22.12 release or for 23.06 @epernod ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3519#issuecomment-1337525238
https://github.com/sofa-framework/sofa/pull/3520#issuecomment-1337525175:43,Deployability,release,release,43,do you want to milestone it for the v22.12 release or for 23.06 @epernod ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3520#issuecomment-1337525175
https://github.com/sofa-framework/sofa/pull/3520#issuecomment-1341260840:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3520#issuecomment-1341260840
https://github.com/sofa-framework/sofa/pull/3526#issuecomment-1336469455:44,Availability,error,errors,44,@hugtalbot not sure to understand where the errors are coming from..,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3526#issuecomment-1336469455
https://github.com/sofa-framework/sofa/pull/3526#issuecomment-1336496906:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3526#issuecomment-1336496906
https://github.com/sofa-framework/sofa/pull/3526#issuecomment-1337905823:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3526#issuecomment-1337905823
https://github.com/sofa-framework/sofa/pull/3526#issuecomment-1387495411:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3526#issuecomment-1387495411
https://github.com/sofa-framework/sofa/pull/3526#issuecomment-1396561819:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3526#issuecomment-1396561819
https://github.com/sofa-framework/sofa/pull/3529#issuecomment-1337529119:38,Testability,test,tests,38,Note that this PR should fix the unit tests introduced in https://github.com/sofa-framework/sofa/pull/3501,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3529#issuecomment-1337529119
https://github.com/sofa-framework/sofa/pull/3529#issuecomment-1340647498:51,Testability,test,tests,51,The branch is already up-to-date. The failing unit tests are legit. They have to be fixed,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3529#issuecomment-1340647498
https://github.com/sofa-framework/sofa/pull/3529#issuecomment-1340841032:46,Testability,test,test,46,"Meh... it was just a missing warning that the test expected. :D ; I wanted to leave out the warning to not flood the output, once all points are gone. :P",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3529#issuecomment-1340841032
https://github.com/sofa-framework/sofa/pull/3529#issuecomment-1341375305:123,Testability,test,tests,123,@ScheiklP your case (topological changes) where you have `n==0` seems to be legit. So I would not emit a warning. The unit tests are probably to be changed,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3529#issuecomment-1341375305
https://github.com/sofa-framework/sofa/pull/3529#issuecomment-1341494734:20,Testability,TEST,TEST,20,"@alxbilger is that `TEST(SparseLDLSolver, EmptyMState)` and `TEST(SparseLDLSolver, EmptySystem)`?; Just removing the `EXPECT_MSG_EMIT(Warning);` is probably also not what we want, right?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3529#issuecomment-1341494734
https://github.com/sofa-framework/sofa/pull/3529#issuecomment-1341494734:61,Testability,TEST,TEST,61,"@alxbilger is that `TEST(SparseLDLSolver, EmptyMState)` and `TEST(SparseLDLSolver, EmptySystem)`?; Just removing the `EXPECT_MSG_EMIT(Warning);` is probably also not what we want, right?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3529#issuecomment-1341494734
https://github.com/sofa-framework/sofa/issues/3531#issuecomment-1562518690:21,Testability,test,test,21,@hugtalbot could you test it on linux?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3531#issuecomment-1562518690
https://github.com/sofa-framework/sofa/issues/3533#issuecomment-1353410838:2308,Availability,toler,tolerance,2308,"iredPlugin name=""Sofa.Component.SolidMechanics.Spring""/> <!-- Needed to use components [TriangularBendingSprings] -->; <RequiredPlugin name=""Sofa.Component.StateContainer""/> <!-- Needed to use components [MechanicalObject] -->; <RequiredPlugin name=""Sofa.Component.Topology.Container.Dynamic""/> <!-- Needed to use components [TriangleSetGeometryAlgorithms TriangleSetTopologyContainer TriangleSetTopologyModifier] -->; <RequiredPlugin name=""Sofa.Component.Topology.Container.Grid""/> <!-- Needed to use components [RegularGridTopology] -->; <RequiredPlugin name=""Sofa.Component.Topology.Mapping""/> <!-- Needed to use components [Quad2TriangleTopologicalMapping] -->; <RequiredPlugin name=""Sofa.GL.Component.Rendering3D""/> <!-- Needed to use components [OglModel] -->; <RequiredPlugin name=""SofaDistanceGrid""/> <!-- Needed to use components [RigidDistanceGridCollisionModel] -->; <DefaultPipeline name=""pipeline"" depth=""6"" verbose=""0"" />. <LCPConstraintSolver maxIt=""1000"" tolerance=""1e-6"" initial_guess=""false"" build_lcp=""true"" multi_grid=""false"" printLog=""0"" mu=""0.000000000000000001""/>; <FreeMotionAnimationLoop />. <BruteForceBroadPhase/>; <BVHNarrowPhase/>; <DefaultContactManager name=""response"" response=""FrictionContactConstraint"" />; <DiscreteIntersection name=""proximity"" />. <Node name=""RigidLiver"">; <MeshOBJLoader name=""meshLoader_0"" filename=""mesh/liver-smooth.obj"" handleSeams=""1"" />; <OglModel name=""VisualModel"" src=""@meshLoader_0"" color=""white"" />; <RigidDistanceGridCollisionModel fileRigidDistanceGrid=""mesh/liver-smooth.obj"" scale=""1.0"" usePoints=""0"" proximity=""0.1"" contactStiffness=""5.0"" contactFriction=""0.0"" />; </Node>; ; <Node name=""Cloth"">; ; <EulerImplicitSolver name=""cg_odesolver"" printLog=""false"" rayleighStiffness=""0.1"" rayleighMass=""0.1"" />; <CGLinearSolver iterations=""25"" name=""linear solver"" tolerance=""1.0e-9"" threshold=""1.0e-9"" />. <RegularGridTopology nx=""50"" ny=""1"" nz=""50"" xmin=""-9"" xmax=""5"" ymin=""7"" ymax=""7"" zmin=""-7"" zmax=""7"" name=""Container"" />; <Mechanical",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3533#issuecomment-1353410838
https://github.com/sofa-framework/sofa/issues/3533#issuecomment-1353410838:3164,Availability,toler,tolerance,3164,"id""/> <!-- Needed to use components [RigidDistanceGridCollisionModel] -->; <DefaultPipeline name=""pipeline"" depth=""6"" verbose=""0"" />. <LCPConstraintSolver maxIt=""1000"" tolerance=""1e-6"" initial_guess=""false"" build_lcp=""true"" multi_grid=""false"" printLog=""0"" mu=""0.000000000000000001""/>; <FreeMotionAnimationLoop />. <BruteForceBroadPhase/>; <BVHNarrowPhase/>; <DefaultContactManager name=""response"" response=""FrictionContactConstraint"" />; <DiscreteIntersection name=""proximity"" />. <Node name=""RigidLiver"">; <MeshOBJLoader name=""meshLoader_0"" filename=""mesh/liver-smooth.obj"" handleSeams=""1"" />; <OglModel name=""VisualModel"" src=""@meshLoader_0"" color=""white"" />; <RigidDistanceGridCollisionModel fileRigidDistanceGrid=""mesh/liver-smooth.obj"" scale=""1.0"" usePoints=""0"" proximity=""0.1"" contactStiffness=""5.0"" contactFriction=""0.0"" />; </Node>; ; <Node name=""Cloth"">; ; <EulerImplicitSolver name=""cg_odesolver"" printLog=""false"" rayleighStiffness=""0.1"" rayleighMass=""0.1"" />; <CGLinearSolver iterations=""25"" name=""linear solver"" tolerance=""1.0e-9"" threshold=""1.0e-9"" />. <RegularGridTopology nx=""50"" ny=""1"" nz=""50"" xmin=""-9"" xmax=""5"" ymin=""7"" ymax=""7"" zmin=""-7"" zmax=""7"" name=""Container"" />; <MechanicalObject name=""dofs"" />; <UniformMass totalMass=""100"" />; <UncoupledConstraintCorrection />; <Node name=""T"">; <include href=""Objects/TriangleSetTopology.xml"" />; <Quad2TriangleTopologicalMapping input=""@../Container"" output=""@Container"" />; <TriangularFEMForceField name=""FEM"" youngModulus=""60"" poissonRatio=""0.3"" method=""large"" />; <TriangularBendingSprings name=""FEM-Bend"" stiffness=""300"" damping=""1.0"" />; <TriangleCollisionModel contactStiffness=""20.0""/>; <PointCollisionModel />; <Node name=""Visu"">; <OglModel name=""Visual"" material=""mat1 Diffuse 1 0.5 1.0 0.75 0.8 Ambient 1 0.2 0.2 0.2 1 Specular 1 0.6 0.6 0.6 0.6 Emissive 0 0 0 0 0 Shininess 0 45"" />; <IdentityMapping input=""@../../dofs"" output=""@Visual"" />; </Node>; </Node>; </Node>; </Node>. ```. For some reasons, the free position and veloc",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3533#issuecomment-1353410838
https://github.com/sofa-framework/sofa/issues/3533#issuecomment-1353410838:2238,Deployability,pipeline,pipeline,2238," to use components [EulerImplicitSolver] -->; <RequiredPlugin name=""Sofa.Component.SolidMechanics.FEM.Elastic""/> <!-- Needed to use components [TriangularFEMForceField] -->; <RequiredPlugin name=""Sofa.Component.SolidMechanics.Spring""/> <!-- Needed to use components [TriangularBendingSprings] -->; <RequiredPlugin name=""Sofa.Component.StateContainer""/> <!-- Needed to use components [MechanicalObject] -->; <RequiredPlugin name=""Sofa.Component.Topology.Container.Dynamic""/> <!-- Needed to use components [TriangleSetGeometryAlgorithms TriangleSetTopologyContainer TriangleSetTopologyModifier] -->; <RequiredPlugin name=""Sofa.Component.Topology.Container.Grid""/> <!-- Needed to use components [RegularGridTopology] -->; <RequiredPlugin name=""Sofa.Component.Topology.Mapping""/> <!-- Needed to use components [Quad2TriangleTopologicalMapping] -->; <RequiredPlugin name=""Sofa.GL.Component.Rendering3D""/> <!-- Needed to use components [OglModel] -->; <RequiredPlugin name=""SofaDistanceGrid""/> <!-- Needed to use components [RigidDistanceGridCollisionModel] -->; <DefaultPipeline name=""pipeline"" depth=""6"" verbose=""0"" />. <LCPConstraintSolver maxIt=""1000"" tolerance=""1e-6"" initial_guess=""false"" build_lcp=""true"" multi_grid=""false"" printLog=""0"" mu=""0.000000000000000001""/>; <FreeMotionAnimationLoop />. <BruteForceBroadPhase/>; <BVHNarrowPhase/>; <DefaultContactManager name=""response"" response=""FrictionContactConstraint"" />; <DiscreteIntersection name=""proximity"" />. <Node name=""RigidLiver"">; <MeshOBJLoader name=""meshLoader_0"" filename=""mesh/liver-smooth.obj"" handleSeams=""1"" />; <OglModel name=""VisualModel"" src=""@meshLoader_0"" color=""white"" />; <RigidDistanceGridCollisionModel fileRigidDistanceGrid=""mesh/liver-smooth.obj"" scale=""1.0"" usePoints=""0"" proximity=""0.1"" contactStiffness=""5.0"" contactFriction=""0.0"" />; </Node>; ; <Node name=""Cloth"">; ; <EulerImplicitSolver name=""cg_odesolver"" printLog=""false"" rayleighStiffness=""0.1"" rayleighMass=""0.1"" />; <CGLinearSolver iterations=""25"" name=""linear so",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3533#issuecomment-1353410838
https://github.com/sofa-framework/sofa/issues/3533#issuecomment-1353410838:4182,Energy Efficiency,allocate,allocated,4182,""" tolerance=""1e-6"" initial_guess=""false"" build_lcp=""true"" multi_grid=""false"" printLog=""0"" mu=""0.000000000000000001""/>; <FreeMotionAnimationLoop />. <BruteForceBroadPhase/>; <BVHNarrowPhase/>; <DefaultContactManager name=""response"" response=""FrictionContactConstraint"" />; <DiscreteIntersection name=""proximity"" />. <Node name=""RigidLiver"">; <MeshOBJLoader name=""meshLoader_0"" filename=""mesh/liver-smooth.obj"" handleSeams=""1"" />; <OglModel name=""VisualModel"" src=""@meshLoader_0"" color=""white"" />; <RigidDistanceGridCollisionModel fileRigidDistanceGrid=""mesh/liver-smooth.obj"" scale=""1.0"" usePoints=""0"" proximity=""0.1"" contactStiffness=""5.0"" contactFriction=""0.0"" />; </Node>; ; <Node name=""Cloth"">; ; <EulerImplicitSolver name=""cg_odesolver"" printLog=""false"" rayleighStiffness=""0.1"" rayleighMass=""0.1"" />; <CGLinearSolver iterations=""25"" name=""linear solver"" tolerance=""1.0e-9"" threshold=""1.0e-9"" />. <RegularGridTopology nx=""50"" ny=""1"" nz=""50"" xmin=""-9"" xmax=""5"" ymin=""7"" ymax=""7"" zmin=""-7"" zmax=""7"" name=""Container"" />; <MechanicalObject name=""dofs"" />; <UniformMass totalMass=""100"" />; <UncoupledConstraintCorrection />; <Node name=""T"">; <include href=""Objects/TriangleSetTopology.xml"" />; <Quad2TriangleTopologicalMapping input=""@../Container"" output=""@Container"" />; <TriangularFEMForceField name=""FEM"" youngModulus=""60"" poissonRatio=""0.3"" method=""large"" />; <TriangularBendingSprings name=""FEM-Bend"" stiffness=""300"" damping=""1.0"" />; <TriangleCollisionModel contactStiffness=""20.0""/>; <PointCollisionModel />; <Node name=""Visu"">; <OglModel name=""Visual"" material=""mat1 Diffuse 1 0.5 1.0 0.75 0.8 Ambient 1 0.2 0.2 0.2 1 Specular 1 0.6 0.6 0.6 0.6 Emissive 0 0 0 0 0 Shininess 0 45"" />; <IdentityMapping input=""@../../dofs"" output=""@Visual"" />; </Node>; </Node>; </Node>; </Node>. ```. For some reasons, the free position and velocity of a second mechanical object is not allocated. So, when we want to access an element of this vector, it crashes. I need more time to debug it. I'll let you know",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3533#issuecomment-1353410838
https://github.com/sofa-framework/sofa/issues/3533#issuecomment-1353410838:164,Safety,Detect,Detection,164,"Ok, I reproduce the crash with:. ```xml. <?xml version=""1.0""?>; <Node name=""root"" dt=""0.005"" gravity=""0.0 -9.81 0"">; <RequiredPlugin name=""Sofa.Component.Collision.Detection.Algorithm""/> <!-- Needed to use components [BVHNarrowPhase BruteForceBroadPhase DefaultPipeline] -->; <RequiredPlugin name=""Sofa.Component.Collision.Detection.Intersection""/> <!-- Needed to use components [DiscreteIntersection] -->; <RequiredPlugin name=""Sofa.Component.Collision.Geometry""/> <!-- Needed to use components [PointCollisionModel TriangleCollisionModel] -->; <RequiredPlugin name=""Sofa.Component.Collision.Response.Contact""/> <!-- Needed to use components [DefaultContactManager] -->; <RequiredPlugin name=""Sofa.Component.IO.Mesh""/> <!-- Needed to use components [MeshOBJLoader] -->; <RequiredPlugin name=""Sofa.Component.LinearSolver.Iterative""/> <!-- Needed to use components [CGLinearSolver] -->; <RequiredPlugin name=""Sofa.Component.Mapping.Linear""/> <!-- Needed to use components [IdentityMapping] -->; <RequiredPlugin name=""Sofa.Component.Mass""/> <!-- Needed to use components [UniformMass] -->; <RequiredPlugin name=""Sofa.Component.ODESolver.Backward""/> <!-- Needed to use components [EulerImplicitSolver] -->; <RequiredPlugin name=""Sofa.Component.SolidMechanics.FEM.Elastic""/> <!-- Needed to use components [TriangularFEMForceField] -->; <RequiredPlugin name=""Sofa.Component.SolidMechanics.Spring""/> <!-- Needed to use components [TriangularBendingSprings] -->; <RequiredPlugin name=""Sofa.Component.StateContainer""/> <!-- Needed to use components [MechanicalObject] -->; <RequiredPlugin name=""Sofa.Component.Topology.Container.Dynamic""/> <!-- Needed to use components [TriangleSetGeometryAlgorithms TriangleSetTopologyContainer TriangleSetTopologyModifier] -->; <RequiredPlugin name=""Sofa.Component.Topology.Container.Grid""/> <!-- Needed to use components [RegularGridTopology] -->; <RequiredPlugin name=""Sofa.Component.Topology.Mapping""/> <!-- Needed to use components [Quad2TriangleTopologicalMapping] -->",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3533#issuecomment-1353410838
https://github.com/sofa-framework/sofa/issues/3533#issuecomment-1353410838:323,Safety,Detect,Detection,323,"Ok, I reproduce the crash with:. ```xml. <?xml version=""1.0""?>; <Node name=""root"" dt=""0.005"" gravity=""0.0 -9.81 0"">; <RequiredPlugin name=""Sofa.Component.Collision.Detection.Algorithm""/> <!-- Needed to use components [BVHNarrowPhase BruteForceBroadPhase DefaultPipeline] -->; <RequiredPlugin name=""Sofa.Component.Collision.Detection.Intersection""/> <!-- Needed to use components [DiscreteIntersection] -->; <RequiredPlugin name=""Sofa.Component.Collision.Geometry""/> <!-- Needed to use components [PointCollisionModel TriangleCollisionModel] -->; <RequiredPlugin name=""Sofa.Component.Collision.Response.Contact""/> <!-- Needed to use components [DefaultContactManager] -->; <RequiredPlugin name=""Sofa.Component.IO.Mesh""/> <!-- Needed to use components [MeshOBJLoader] -->; <RequiredPlugin name=""Sofa.Component.LinearSolver.Iterative""/> <!-- Needed to use components [CGLinearSolver] -->; <RequiredPlugin name=""Sofa.Component.Mapping.Linear""/> <!-- Needed to use components [IdentityMapping] -->; <RequiredPlugin name=""Sofa.Component.Mass""/> <!-- Needed to use components [UniformMass] -->; <RequiredPlugin name=""Sofa.Component.ODESolver.Backward""/> <!-- Needed to use components [EulerImplicitSolver] -->; <RequiredPlugin name=""Sofa.Component.SolidMechanics.FEM.Elastic""/> <!-- Needed to use components [TriangularFEMForceField] -->; <RequiredPlugin name=""Sofa.Component.SolidMechanics.Spring""/> <!-- Needed to use components [TriangularBendingSprings] -->; <RequiredPlugin name=""Sofa.Component.StateContainer""/> <!-- Needed to use components [MechanicalObject] -->; <RequiredPlugin name=""Sofa.Component.Topology.Container.Dynamic""/> <!-- Needed to use components [TriangleSetGeometryAlgorithms TriangleSetTopologyContainer TriangleSetTopologyModifier] -->; <RequiredPlugin name=""Sofa.Component.Topology.Container.Grid""/> <!-- Needed to use components [RegularGridTopology] -->; <RequiredPlugin name=""Sofa.Component.Topology.Mapping""/> <!-- Needed to use components [Quad2TriangleTopologicalMapping] -->",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3533#issuecomment-1353410838
https://github.com/sofa-framework/sofa/issues/3533#issuecomment-1353410838:4213,Security,access,access,4213,""" tolerance=""1e-6"" initial_guess=""false"" build_lcp=""true"" multi_grid=""false"" printLog=""0"" mu=""0.000000000000000001""/>; <FreeMotionAnimationLoop />. <BruteForceBroadPhase/>; <BVHNarrowPhase/>; <DefaultContactManager name=""response"" response=""FrictionContactConstraint"" />; <DiscreteIntersection name=""proximity"" />. <Node name=""RigidLiver"">; <MeshOBJLoader name=""meshLoader_0"" filename=""mesh/liver-smooth.obj"" handleSeams=""1"" />; <OglModel name=""VisualModel"" src=""@meshLoader_0"" color=""white"" />; <RigidDistanceGridCollisionModel fileRigidDistanceGrid=""mesh/liver-smooth.obj"" scale=""1.0"" usePoints=""0"" proximity=""0.1"" contactStiffness=""5.0"" contactFriction=""0.0"" />; </Node>; ; <Node name=""Cloth"">; ; <EulerImplicitSolver name=""cg_odesolver"" printLog=""false"" rayleighStiffness=""0.1"" rayleighMass=""0.1"" />; <CGLinearSolver iterations=""25"" name=""linear solver"" tolerance=""1.0e-9"" threshold=""1.0e-9"" />. <RegularGridTopology nx=""50"" ny=""1"" nz=""50"" xmin=""-9"" xmax=""5"" ymin=""7"" ymax=""7"" zmin=""-7"" zmax=""7"" name=""Container"" />; <MechanicalObject name=""dofs"" />; <UniformMass totalMass=""100"" />; <UncoupledConstraintCorrection />; <Node name=""T"">; <include href=""Objects/TriangleSetTopology.xml"" />; <Quad2TriangleTopologicalMapping input=""@../Container"" output=""@Container"" />; <TriangularFEMForceField name=""FEM"" youngModulus=""60"" poissonRatio=""0.3"" method=""large"" />; <TriangularBendingSprings name=""FEM-Bend"" stiffness=""300"" damping=""1.0"" />; <TriangleCollisionModel contactStiffness=""20.0""/>; <PointCollisionModel />; <Node name=""Visu"">; <OglModel name=""Visual"" material=""mat1 Diffuse 1 0.5 1.0 0.75 0.8 Ambient 1 0.2 0.2 0.2 1 Specular 1 0.6 0.6 0.6 0.6 Emissive 0 0 0 0 0 Shininess 0 45"" />; <IdentityMapping input=""@../../dofs"" output=""@Visual"" />; </Node>; </Node>; </Node>; </Node>. ```. For some reasons, the free position and velocity of a second mechanical object is not allocated. So, when we want to access an element of this vector, it crashes. I need more time to debug it. I'll let you know",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3533#issuecomment-1353410838
https://github.com/sofa-framework/sofa/issues/3533#issuecomment-1354430876:92,Safety,avoid,avoid,92,"It seems a mechanical object must be associated to the `RigidDistanceGridCollisionModel` to avoid the crash. In the scene `DistanceGridCollisionModel.scn`, the Node `RigidLiver` is transformed from. ```xml; <Node name=""RigidLiver"">; <MeshOBJLoader name=""meshLoader_0"" filename=""mesh/liver-smooth.obj"" handleSeams=""1"" />; <OglModel name=""VisualModel"" src=""@meshLoader_0"" color=""white"" />; <RigidDistanceGridCollisionModel fileRigidDistanceGrid=""mesh/liver-smooth.obj"" scale=""1.0"" usePoints=""0"" proximity=""0.1"" contactStiffness=""5.0"" contactFriction=""0.0"" />; </Node>; ```. to:. ```xml; <Node name=""RigidLiver"">; <MeshOBJLoader name=""meshLoader_0"" filename=""mesh/liver-smooth.obj"" handleSeams=""1"" />; <OglModel name=""VisualModel"" src=""@meshLoader_0"" color=""white"" />; <MechanicalObject template=""Rigid3"" />; <RigidDistanceGridCollisionModel fileRigidDistanceGrid=""mesh/liver-smooth.obj"" scale=""1.0"" usePoints=""0"" proximity=""0.1"" contactStiffness=""5.0"" contactFriction=""0.0"" />; </Node>; ```. Let me know if it works in your own simulation. I don't know enough this part of the code to fix it so it works with or without MechanicalObject. At least it should warn the user that it cannot work.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3533#issuecomment-1354430876
https://github.com/sofa-framework/sofa/issues/3533#issuecomment-1573276801:153,Availability,error,error,153,@hugtalbot `UnilateralInteractionConstraint` inherits from `PairStateAccessor` which checks at init that it has valid links to mechanical objects. So an error should normally trigger...,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3533#issuecomment-1573276801
https://github.com/sofa-framework/sofa/issues/3533#issuecomment-1573276801:45,Modifiability,inherit,inherits,45,@hugtalbot `UnilateralInteractionConstraint` inherits from `PairStateAccessor` which checks at init that it has valid links to mechanical objects. So an error should normally trigger...,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3533#issuecomment-1573276801
https://github.com/sofa-framework/sofa/pull/3534#issuecomment-1339918506:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3534#issuecomment-1339918506
https://github.com/sofa-framework/sofa/pull/3534#issuecomment-1373861836:16,Availability,error,error,16,hmm compilation error .. :thinking: ; ```; /usr/bin/ld: applications/plugins/Geomagic/CMakeFiles/Geomagic.dir/src/Geomagic/GeomagicEmulator.cpp.o:(.bss+0x4): multiple definition of `sofa::component::io::mesh::MeshObjLoader'; applications/plugins/Geomagic/CMakeFiles/Geomagic.dir/src/Geomagic/GeomagicDriver.cpp.o:(.bss+0x4): first defined here; /usr/bin/ld: applications/plugins/Geomagic/CMakeFiles/Geomagic.dir/src/Geomagic/GeomagicVisualModel.cpp.o:(.bss+0x0): multiple definition of `sofa::component::io::mesh::MeshObjLoader'; applications/plugins/Geomagic/CMakeFiles/Geomagic.dir/src/Geomagic/GeomagicDriver.cpp.o:(.bss+0x4): first defined here; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3534#issuecomment-1373861836
https://github.com/sofa-framework/sofa/pull/3534#issuecomment-1373861836:69,Modifiability,plugin,plugins,69,hmm compilation error .. :thinking: ; ```; /usr/bin/ld: applications/plugins/Geomagic/CMakeFiles/Geomagic.dir/src/Geomagic/GeomagicEmulator.cpp.o:(.bss+0x4): multiple definition of `sofa::component::io::mesh::MeshObjLoader'; applications/plugins/Geomagic/CMakeFiles/Geomagic.dir/src/Geomagic/GeomagicDriver.cpp.o:(.bss+0x4): first defined here; /usr/bin/ld: applications/plugins/Geomagic/CMakeFiles/Geomagic.dir/src/Geomagic/GeomagicVisualModel.cpp.o:(.bss+0x0): multiple definition of `sofa::component::io::mesh::MeshObjLoader'; applications/plugins/Geomagic/CMakeFiles/Geomagic.dir/src/Geomagic/GeomagicDriver.cpp.o:(.bss+0x4): first defined here; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3534#issuecomment-1373861836
https://github.com/sofa-framework/sofa/pull/3534#issuecomment-1373861836:238,Modifiability,plugin,plugins,238,hmm compilation error .. :thinking: ; ```; /usr/bin/ld: applications/plugins/Geomagic/CMakeFiles/Geomagic.dir/src/Geomagic/GeomagicEmulator.cpp.o:(.bss+0x4): multiple definition of `sofa::component::io::mesh::MeshObjLoader'; applications/plugins/Geomagic/CMakeFiles/Geomagic.dir/src/Geomagic/GeomagicDriver.cpp.o:(.bss+0x4): first defined here; /usr/bin/ld: applications/plugins/Geomagic/CMakeFiles/Geomagic.dir/src/Geomagic/GeomagicVisualModel.cpp.o:(.bss+0x0): multiple definition of `sofa::component::io::mesh::MeshObjLoader'; applications/plugins/Geomagic/CMakeFiles/Geomagic.dir/src/Geomagic/GeomagicDriver.cpp.o:(.bss+0x4): first defined here; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3534#issuecomment-1373861836
https://github.com/sofa-framework/sofa/pull/3534#issuecomment-1373861836:371,Modifiability,plugin,plugins,371,hmm compilation error .. :thinking: ; ```; /usr/bin/ld: applications/plugins/Geomagic/CMakeFiles/Geomagic.dir/src/Geomagic/GeomagicEmulator.cpp.o:(.bss+0x4): multiple definition of `sofa::component::io::mesh::MeshObjLoader'; applications/plugins/Geomagic/CMakeFiles/Geomagic.dir/src/Geomagic/GeomagicDriver.cpp.o:(.bss+0x4): first defined here; /usr/bin/ld: applications/plugins/Geomagic/CMakeFiles/Geomagic.dir/src/Geomagic/GeomagicVisualModel.cpp.o:(.bss+0x0): multiple definition of `sofa::component::io::mesh::MeshObjLoader'; applications/plugins/Geomagic/CMakeFiles/Geomagic.dir/src/Geomagic/GeomagicDriver.cpp.o:(.bss+0x4): first defined here; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3534#issuecomment-1373861836
https://github.com/sofa-framework/sofa/pull/3534#issuecomment-1373861836:543,Modifiability,plugin,plugins,543,hmm compilation error .. :thinking: ; ```; /usr/bin/ld: applications/plugins/Geomagic/CMakeFiles/Geomagic.dir/src/Geomagic/GeomagicEmulator.cpp.o:(.bss+0x4): multiple definition of `sofa::component::io::mesh::MeshObjLoader'; applications/plugins/Geomagic/CMakeFiles/Geomagic.dir/src/Geomagic/GeomagicDriver.cpp.o:(.bss+0x4): first defined here; /usr/bin/ld: applications/plugins/Geomagic/CMakeFiles/Geomagic.dir/src/Geomagic/GeomagicVisualModel.cpp.o:(.bss+0x0): multiple definition of `sofa::component::io::mesh::MeshObjLoader'; applications/plugins/Geomagic/CMakeFiles/Geomagic.dir/src/Geomagic/GeomagicDriver.cpp.o:(.bss+0x4): first defined here; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3534#issuecomment-1373861836
https://github.com/sofa-framework/sofa/pull/3535#issuecomment-1339926450:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3535#issuecomment-1339926450
https://github.com/sofa-framework/sofa/pull/3535#issuecomment-1370623456:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3535#issuecomment-1370623456
https://github.com/sofa-framework/sofa/pull/3535#issuecomment-1422640876:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3535#issuecomment-1422640876
https://github.com/sofa-framework/sofa/pull/3536#issuecomment-1344154266:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3536#issuecomment-1344154266
https://github.com/sofa-framework/sofa/pull/3539#issuecomment-1342394898:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3539#issuecomment-1342394898
https://github.com/sofa-framework/sofa/pull/3541#issuecomment-1343722154:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3541#issuecomment-1343722154
https://github.com/sofa-framework/sofa/pull/3543#issuecomment-1345557081:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3543#issuecomment-1345557081
https://github.com/sofa-framework/sofa/pull/3548#issuecomment-1354197276:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3548#issuecomment-1354197276
https://github.com/sofa-framework/sofa/pull/3548#issuecomment-1370411383:159,Performance,perform,performance,159,"I tried this feature with BeamAdapter, replacing the parallel std::for_each() on https://github.com/sofa-framework/BeamAdapter/pull/50; On a custom scene, the performance is the same, which is a good news by itself. The regression test did not report any discrepancy either.; And at least there is no special case (compiler not supporting std::execution, etc) to handle üëç",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3548#issuecomment-1370411383
https://github.com/sofa-framework/sofa/pull/3548#issuecomment-1370411383:231,Testability,test,test,231,"I tried this feature with BeamAdapter, replacing the parallel std::for_each() on https://github.com/sofa-framework/BeamAdapter/pull/50; On a custom scene, the performance is the same, which is a good news by itself. The regression test did not report any discrepancy either.; And at least there is no special case (compiler not supporting std::execution, etc) to handle üëç",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3548#issuecomment-1370411383
https://github.com/sofa-framework/sofa/pull/3550#issuecomment-1354196917:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3550#issuecomment-1354196917
https://github.com/sofa-framework/sofa/pull/3551#issuecomment-1356906363:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3551#issuecomment-1356906363
https://github.com/sofa-framework/sofa/pull/3552#issuecomment-1359606433:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3552#issuecomment-1359606433
https://github.com/sofa-framework/sofa/pull/3552#issuecomment-1359694003:0,Testability,Benchmark,Benchmark,0,"Benchmark on the provided example. # Matrix-free CG:. Sequential:; `[INFO] [BatchGUI] 1000 iterations done in 4.1899 s ( 238.669 FPS).`; `CG-Solve 3.21 ms` (mean). Parallel:; `[INFO] [BatchGUI] 1000 iterations done in 2.82476 s ( 354.012 FPS).`; `CG-Solve 1.85 ms` (mean). # Assembled CG; (CG with `template=""CompressedRowSparseMatrixMat3x3d""`. Sequential:; `[INFO] [BatchGUI] 1000 iterations done in 6.65858 s ( 150.182 FPS).`; `CG-setSystemMBKMatrix 2.34 ms` (mean). Parallel:; `[INFO] [BatchGUI] 1000 iterations done in 4.1272 s ( 242.295 FPS).`; `CG-setSystemMBKMatrix 4.94 ms` (mean)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3552#issuecomment-1359694003
https://github.com/sofa-framework/sofa/pull/3556#issuecomment-1362496630:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3556#issuecomment-1362496630
https://github.com/sofa-framework/sofa/pull/3556#issuecomment-1378487718:40,Modifiability,plugin,plugins,40,"This might be used in some CUDA private plugins, could you confirm this to us @ziqiu-zeng @courtecuisse ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3556#issuecomment-1378487718
https://github.com/sofa-framework/sofa/pull/3556#issuecomment-1386675840:101,Usability,feedback,feedback,101,"Parse function should warn when using the removed Data `blockSize` :pray: ; Then, without additional feedback, will be merged",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3556#issuecomment-1386675840
https://github.com/sofa-framework/sofa/pull/3559#issuecomment-1368686558:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3559#issuecomment-1368686558
https://github.com/sofa-framework/sofa/pull/3559#issuecomment-1369615492:100,Performance,optimiz,optimizing,100,"> At first, I thought the compiler (msvc in my case) would be smart enough to do it by itself while optimizing, but apparently not. Maybe because `phi` isn't const",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3559#issuecomment-1369615492
https://github.com/sofa-framework/sofa/pull/3559#issuecomment-1378492853:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3559#issuecomment-1378492853
https://github.com/sofa-framework/sofa/pull/3562#issuecomment-1370738211:20,Deployability,release,release,20,@hugtalbot In which release do we merge this PR?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3562#issuecomment-1370738211
https://github.com/sofa-framework/sofa/pull/3562#issuecomment-1372729092:27,Deployability,release,release,27,I would say for the v22.12 release @alxbilger ; It would suit @Camille-K @fredroy,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3562#issuecomment-1372729092
https://github.com/sofa-framework/sofa/pull/3563#issuecomment-1375161416:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3563#issuecomment-1375161416
https://github.com/sofa-framework/sofa/pull/3565#issuecomment-1370550723:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3565#issuecomment-1370550723
https://github.com/sofa-framework/sofa/pull/3566#issuecomment-1371908147:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3566#issuecomment-1371908147
https://github.com/sofa-framework/sofa/pull/3566#issuecomment-1373581055:217,Performance,perform,performed,217,VERY Interesting work @alxbilger :+1: . I would be glad to discuss it further : a domain solver was investigated between InSimo (@fjourdes ) and Mimesis (Riad working with @StephaneCotin ). The implementation was not performed at ForceField level but at the linear system resolution level. Do you have also an idea of the time taken by the decomposition step?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3566#issuecomment-1373581055
https://github.com/sofa-framework/sofa/pull/3566#issuecomment-1373932415:186,Performance,perform,performances,186,"This implementation is at the force field level because its goal is to parallelize the matrix-free CG.; Unfortunately, the benchmarks were measured with a bug. Now the bug is fixed, the performances are disappointing. It requires more investigation.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3566#issuecomment-1373932415
https://github.com/sofa-framework/sofa/pull/3566#issuecomment-1373932415:123,Testability,benchmark,benchmarks,123,"This implementation is at the force field level because its goal is to parallelize the matrix-free CG.; Unfortunately, the benchmarks were measured with a bug. Now the bug is fixed, the performances are disappointing. It requires more investigation.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3566#issuecomment-1373932415
https://github.com/sofa-framework/sofa/pull/3572#issuecomment-1376772049:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3572#issuecomment-1376772049
https://github.com/sofa-framework/sofa/pull/3573#issuecomment-1398031828:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3573#issuecomment-1398031828
https://github.com/sofa-framework/sofa/pull/3573#issuecomment-1400962682:219,Availability,avail,available,219,"So it's done. That answers my question. On Mon, Jan 23, 2023, 21:14 Hugo ***@***.***> wrote:. > Sorry I do not get the question @alxbilger <https://github.com/alxbilger>; > Here it's the ChangeLog for v22.06 is already available here :; > https://github.com/sofa-framework/sofa/blob/master/CHANGELOG.md#v220600; >; > ‚Äî; > Reply to this email directly, view it on GitHub; > <https://github.com/sofa-framework/sofa/pull/3573#issuecomment-1400919780>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ACQVHUB5KC7PSWLPY7AYYSTWT3RBZANCNFSM6AAAAAATVQHW2U>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3573#issuecomment-1400962682
https://github.com/sofa-framework/sofa/pull/3573#issuecomment-1400962682:631,Integrability,Message,Message,631,"So it's done. That answers my question. On Mon, Jan 23, 2023, 21:14 Hugo ***@***.***> wrote:. > Sorry I do not get the question @alxbilger <https://github.com/alxbilger>; > Here it's the ChangeLog for v22.06 is already available here :; > https://github.com/sofa-framework/sofa/blob/master/CHANGELOG.md#v220600; >; > ‚Äî; > Reply to this email directly, view it on GitHub; > <https://github.com/sofa-framework/sofa/pull/3573#issuecomment-1400919780>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ACQVHUB5KC7PSWLPY7AYYSTWT3RBZANCNFSM6AAAAAATVQHW2U>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3573#issuecomment-1400962682
https://github.com/sofa-framework/sofa/pull/3574#issuecomment-1376771902:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3574#issuecomment-1376771902
https://github.com/sofa-framework/sofa/pull/3575#issuecomment-1377606171:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3575#issuecomment-1377606171
https://github.com/sofa-framework/sofa/pull/3575#issuecomment-1383854873:78,Integrability,interface,interface,78,"Wouldn't it be better if implemented in VisualStyle which is kind of our user interface instead of DisplayFlag ? ; This would also allow to use msg_error() instead of msg_error(""Blahblah)...(independently, i would say that msg_error(""String) version should always print something, unless the logging backend is not registerd).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3575#issuecomment-1383854873
https://github.com/sofa-framework/sofa/pull/3575#issuecomment-1383854873:292,Testability,log,logging,292,"Wouldn't it be better if implemented in VisualStyle which is kind of our user interface instead of DisplayFlag ? ; This would also allow to use msg_error() instead of msg_error(""Blahblah)...(independently, i would say that msg_error(""String) version should always print something, unless the logging backend is not registerd).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3575#issuecomment-1383854873
https://github.com/sofa-framework/sofa/pull/3575#issuecomment-1384990414:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3575#issuecomment-1384990414
https://github.com/sofa-framework/sofa/pull/3575#issuecomment-1384992721:66,Availability,error,error,66,"Now, each class has its own file. A unit test has been added. The error message is managed by a `Data<DisplayFlags>` (only if you include `Data[DisplayFlags].h`.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3575#issuecomment-1384992721
https://github.com/sofa-framework/sofa/pull/3575#issuecomment-1384992721:72,Integrability,message,message,72,"Now, each class has its own file. A unit test has been added. The error message is managed by a `Data<DisplayFlags>` (only if you include `Data[DisplayFlags].h`.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3575#issuecomment-1384992721
https://github.com/sofa-framework/sofa/pull/3575#issuecomment-1384992721:41,Testability,test,test,41,"Now, each class has its own file. A unit test has been added. The error message is managed by a `Data<DisplayFlags>` (only if you include `Data[DisplayFlags].h`.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3575#issuecomment-1384992721
https://github.com/sofa-framework/sofa/pull/3575#issuecomment-1385224169:166,Availability,error,error,166,"The file `DisplayFlags.h` contained 3 classes. Now each class has its own specific file. Unit tests on DisplayFlags are added. In my previous proposition, I added an error message when a flag was unknown, and giving suggestions for closest matches. This error message was put directly when reading the flags as a string in the `FlagTreeItem` class. Now, the `FlagTreeItem` triggers the error message, but the function to trigger, including the code for the message, is now in `Data<DisplayFlags>`. Since `Data<DisplayFlags>` is a template specialization that is put in `Data[DisplayFlags].h`, you need to include `Data[DisplayFlags.h]`. If you do that, the owner of the `Data<DisplayFlags>` will know an error happened. Therefore, it will have an error icon in the GUI and the user can consult the errors in the GUI. Before, the component was not aware.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3575#issuecomment-1385224169
https://github.com/sofa-framework/sofa/pull/3575#issuecomment-1385224169:254,Availability,error,error,254,"The file `DisplayFlags.h` contained 3 classes. Now each class has its own specific file. Unit tests on DisplayFlags are added. In my previous proposition, I added an error message when a flag was unknown, and giving suggestions for closest matches. This error message was put directly when reading the flags as a string in the `FlagTreeItem` class. Now, the `FlagTreeItem` triggers the error message, but the function to trigger, including the code for the message, is now in `Data<DisplayFlags>`. Since `Data<DisplayFlags>` is a template specialization that is put in `Data[DisplayFlags].h`, you need to include `Data[DisplayFlags.h]`. If you do that, the owner of the `Data<DisplayFlags>` will know an error happened. Therefore, it will have an error icon in the GUI and the user can consult the errors in the GUI. Before, the component was not aware.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3575#issuecomment-1385224169
https://github.com/sofa-framework/sofa/pull/3575#issuecomment-1385224169:386,Availability,error,error,386,"The file `DisplayFlags.h` contained 3 classes. Now each class has its own specific file. Unit tests on DisplayFlags are added. In my previous proposition, I added an error message when a flag was unknown, and giving suggestions for closest matches. This error message was put directly when reading the flags as a string in the `FlagTreeItem` class. Now, the `FlagTreeItem` triggers the error message, but the function to trigger, including the code for the message, is now in `Data<DisplayFlags>`. Since `Data<DisplayFlags>` is a template specialization that is put in `Data[DisplayFlags].h`, you need to include `Data[DisplayFlags.h]`. If you do that, the owner of the `Data<DisplayFlags>` will know an error happened. Therefore, it will have an error icon in the GUI and the user can consult the errors in the GUI. Before, the component was not aware.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3575#issuecomment-1385224169
https://github.com/sofa-framework/sofa/pull/3575#issuecomment-1385224169:704,Availability,error,error,704,"The file `DisplayFlags.h` contained 3 classes. Now each class has its own specific file. Unit tests on DisplayFlags are added. In my previous proposition, I added an error message when a flag was unknown, and giving suggestions for closest matches. This error message was put directly when reading the flags as a string in the `FlagTreeItem` class. Now, the `FlagTreeItem` triggers the error message, but the function to trigger, including the code for the message, is now in `Data<DisplayFlags>`. Since `Data<DisplayFlags>` is a template specialization that is put in `Data[DisplayFlags].h`, you need to include `Data[DisplayFlags.h]`. If you do that, the owner of the `Data<DisplayFlags>` will know an error happened. Therefore, it will have an error icon in the GUI and the user can consult the errors in the GUI. Before, the component was not aware.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3575#issuecomment-1385224169
https://github.com/sofa-framework/sofa/pull/3575#issuecomment-1385224169:747,Availability,error,error,747,"The file `DisplayFlags.h` contained 3 classes. Now each class has its own specific file. Unit tests on DisplayFlags are added. In my previous proposition, I added an error message when a flag was unknown, and giving suggestions for closest matches. This error message was put directly when reading the flags as a string in the `FlagTreeItem` class. Now, the `FlagTreeItem` triggers the error message, but the function to trigger, including the code for the message, is now in `Data<DisplayFlags>`. Since `Data<DisplayFlags>` is a template specialization that is put in `Data[DisplayFlags].h`, you need to include `Data[DisplayFlags.h]`. If you do that, the owner of the `Data<DisplayFlags>` will know an error happened. Therefore, it will have an error icon in the GUI and the user can consult the errors in the GUI. Before, the component was not aware.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3575#issuecomment-1385224169
https://github.com/sofa-framework/sofa/pull/3575#issuecomment-1385224169:798,Availability,error,errors,798,"The file `DisplayFlags.h` contained 3 classes. Now each class has its own specific file. Unit tests on DisplayFlags are added. In my previous proposition, I added an error message when a flag was unknown, and giving suggestions for closest matches. This error message was put directly when reading the flags as a string in the `FlagTreeItem` class. Now, the `FlagTreeItem` triggers the error message, but the function to trigger, including the code for the message, is now in `Data<DisplayFlags>`. Since `Data<DisplayFlags>` is a template specialization that is put in `Data[DisplayFlags].h`, you need to include `Data[DisplayFlags.h]`. If you do that, the owner of the `Data<DisplayFlags>` will know an error happened. Therefore, it will have an error icon in the GUI and the user can consult the errors in the GUI. Before, the component was not aware.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3575#issuecomment-1385224169
https://github.com/sofa-framework/sofa/pull/3575#issuecomment-1385224169:172,Integrability,message,message,172,"The file `DisplayFlags.h` contained 3 classes. Now each class has its own specific file. Unit tests on DisplayFlags are added. In my previous proposition, I added an error message when a flag was unknown, and giving suggestions for closest matches. This error message was put directly when reading the flags as a string in the `FlagTreeItem` class. Now, the `FlagTreeItem` triggers the error message, but the function to trigger, including the code for the message, is now in `Data<DisplayFlags>`. Since `Data<DisplayFlags>` is a template specialization that is put in `Data[DisplayFlags].h`, you need to include `Data[DisplayFlags.h]`. If you do that, the owner of the `Data<DisplayFlags>` will know an error happened. Therefore, it will have an error icon in the GUI and the user can consult the errors in the GUI. Before, the component was not aware.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3575#issuecomment-1385224169
https://github.com/sofa-framework/sofa/pull/3575#issuecomment-1385224169:260,Integrability,message,message,260,"The file `DisplayFlags.h` contained 3 classes. Now each class has its own specific file. Unit tests on DisplayFlags are added. In my previous proposition, I added an error message when a flag was unknown, and giving suggestions for closest matches. This error message was put directly when reading the flags as a string in the `FlagTreeItem` class. Now, the `FlagTreeItem` triggers the error message, but the function to trigger, including the code for the message, is now in `Data<DisplayFlags>`. Since `Data<DisplayFlags>` is a template specialization that is put in `Data[DisplayFlags].h`, you need to include `Data[DisplayFlags.h]`. If you do that, the owner of the `Data<DisplayFlags>` will know an error happened. Therefore, it will have an error icon in the GUI and the user can consult the errors in the GUI. Before, the component was not aware.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3575#issuecomment-1385224169
https://github.com/sofa-framework/sofa/pull/3575#issuecomment-1385224169:392,Integrability,message,message,392,"The file `DisplayFlags.h` contained 3 classes. Now each class has its own specific file. Unit tests on DisplayFlags are added. In my previous proposition, I added an error message when a flag was unknown, and giving suggestions for closest matches. This error message was put directly when reading the flags as a string in the `FlagTreeItem` class. Now, the `FlagTreeItem` triggers the error message, but the function to trigger, including the code for the message, is now in `Data<DisplayFlags>`. Since `Data<DisplayFlags>` is a template specialization that is put in `Data[DisplayFlags].h`, you need to include `Data[DisplayFlags.h]`. If you do that, the owner of the `Data<DisplayFlags>` will know an error happened. Therefore, it will have an error icon in the GUI and the user can consult the errors in the GUI. Before, the component was not aware.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3575#issuecomment-1385224169
https://github.com/sofa-framework/sofa/pull/3575#issuecomment-1385224169:457,Integrability,message,message,457,"The file `DisplayFlags.h` contained 3 classes. Now each class has its own specific file. Unit tests on DisplayFlags are added. In my previous proposition, I added an error message when a flag was unknown, and giving suggestions for closest matches. This error message was put directly when reading the flags as a string in the `FlagTreeItem` class. Now, the `FlagTreeItem` triggers the error message, but the function to trigger, including the code for the message, is now in `Data<DisplayFlags>`. Since `Data<DisplayFlags>` is a template specialization that is put in `Data[DisplayFlags].h`, you need to include `Data[DisplayFlags.h]`. If you do that, the owner of the `Data<DisplayFlags>` will know an error happened. Therefore, it will have an error icon in the GUI and the user can consult the errors in the GUI. Before, the component was not aware.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3575#issuecomment-1385224169
https://github.com/sofa-framework/sofa/pull/3575#issuecomment-1385224169:94,Testability,test,tests,94,"The file `DisplayFlags.h` contained 3 classes. Now each class has its own specific file. Unit tests on DisplayFlags are added. In my previous proposition, I added an error message when a flag was unknown, and giving suggestions for closest matches. This error message was put directly when reading the flags as a string in the `FlagTreeItem` class. Now, the `FlagTreeItem` triggers the error message, but the function to trigger, including the code for the message, is now in `Data<DisplayFlags>`. Since `Data<DisplayFlags>` is a template specialization that is put in `Data[DisplayFlags].h`, you need to include `Data[DisplayFlags.h]`. If you do that, the owner of the `Data<DisplayFlags>` will know an error happened. Therefore, it will have an error icon in the GUI and the user can consult the errors in the GUI. Before, the component was not aware.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3575#issuecomment-1385224169
https://github.com/sofa-framework/sofa/pull/3584#issuecomment-1384214056:31,Availability,error,error,31,"Strange there is still a gtest error @alxbilger ; ```; gtest.h:1527:11: error: no match for 'operator==' (operand types are 'const sofa::type::Mat<1, 1, int>' and 'const int'); 1527 | if (lhs == rhs) {; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3584#issuecomment-1384214056
https://github.com/sofa-framework/sofa/pull/3584#issuecomment-1384214056:72,Availability,error,error,72,"Strange there is still a gtest error @alxbilger ; ```; gtest.h:1527:11: error: no match for 'operator==' (operand types are 'const sofa::type::Mat<1, 1, int>' and 'const int'); 1527 | if (lhs == rhs) {; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3584#issuecomment-1384214056
https://github.com/sofa-framework/sofa/pull/3584#issuecomment-1384332365:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3584#issuecomment-1384332365
https://github.com/sofa-framework/sofa/pull/3584#issuecomment-1385001387:103,Usability,simpl,simply,103,"Strangely, gcc cannot find the operator for the implicit conversion from `Mat<1,1,int>` to `int`. So I simply made the conversion explicit and it's working.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3584#issuecomment-1385001387
https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1385042274:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1385042274
https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1385379128:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1385379128
https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1385379242:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3588/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/38**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 55a3a25a1ff9e35af9f5e5b0eeecfa3358dbc025_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1385379242
https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1385379242:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3588/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/38**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 55a3a25a1ff9e35af9f5e5b0eeecfa3358dbc025_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1385379242
https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1386021150:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3588/7/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/38**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 55a3a25a1ff9e35af9f5e5b0eeecfa3358dbc025_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1386021150
https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1386021150:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3588/7/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/38**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 55a3a25a1ff9e35af9f5e5b0eeecfa3358dbc025_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1386021150
https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1386078133:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3588/8/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/38**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 55a3a25a1ff9e35af9f5e5b0eeecfa3358dbc025_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1386078133
https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1386078133:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3588/8/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/38**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 55a3a25a1ff9e35af9f5e5b0eeecfa3358dbc025_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1386078133
https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1386940677:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3588/9/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/38**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 55a3a25a1ff9e35af9f5e5b0eeecfa3358dbc025_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1386940677
https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1386940677:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3588/9/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/38**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 55a3a25a1ff9e35af9f5e5b0eeecfa3358dbc025_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1386940677
https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1386941204:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1386941204
https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1386941374:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3588/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/38**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 55a3a25a1ff9e35af9f5e5b0eeecfa3358dbc025_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1386941374
https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1386941374:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3588/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/38**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 55a3a25a1ff9e35af9f5e5b0eeecfa3358dbc025_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1386941374
https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1386994988:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3588/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/38**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 55a3a25a1ff9e35af9f5e5b0eeecfa3358dbc025_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1386994988
https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1386994988:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3588/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/38**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 55a3a25a1ff9e35af9f5e5b0eeecfa3358dbc025_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1386994988
https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1387495245:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3588/12/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/38**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 55a3a25a1ff9e35af9f5e5b0eeecfa3358dbc025_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1387495245
https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1387495245:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3588/12/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/38**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 55a3a25a1ff9e35af9f5e5b0eeecfa3358dbc025_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1387495245
https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1399331346:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3588/13/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/38**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 55a3a25a1ff9e35af9f5e5b0eeecfa3358dbc025_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1399331346
https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1399331346:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3588/13/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/38**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 55a3a25a1ff9e35af9f5e5b0eeecfa3358dbc025_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1399331346
https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1403518300:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3588/14/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/38**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 55a3a25a1ff9e35af9f5e5b0eeecfa3358dbc025_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1403518300
https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1403518300:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3588/14/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/38**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 55a3a25a1ff9e35af9f5e5b0eeecfa3358dbc025_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1403518300
https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1405080951:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #15](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3588/15/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1405080951
https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1405080951:123,Integrability,depend,dependencies,123,**[ci-depends-on]** detected during [build #15](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3588/15/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1405080951
https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1405080951:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #15](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3588/15/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1405080951
https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1405268948:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1405268948
https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1405269121:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #16](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3588/16/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1405269121
https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1405269121:123,Integrability,depend,dependencies,123,**[ci-depends-on]** detected during [build #16](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3588/16/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1405269121
https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1405269121:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #16](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3588/16/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1405269121
https://github.com/sofa-framework/sofa/pull/3590#issuecomment-1386001712:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3590#issuecomment-1386001712
https://github.com/sofa-framework/sofa/pull/3590#issuecomment-1386645313:33,Deployability,pipeline,pipeline,33,Do you know if another collision pipeline ever existed?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3590#issuecomment-1386645313
https://github.com/sofa-framework/sofa/pull/3590#issuecomment-1386940899:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3590#issuecomment-1386940899
https://github.com/sofa-framework/sofa/pull/3590#issuecomment-1396560105:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3590#issuecomment-1396560105
https://github.com/sofa-framework/sofa/pull/3590#issuecomment-1397631042:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3590#issuecomment-1397631042
https://github.com/sofa-framework/sofa/pull/3590#issuecomment-1409242810:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3590#issuecomment-1409242810
https://github.com/sofa-framework/sofa/pull/3590#issuecomment-1411231752:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3590#issuecomment-1411231752
https://github.com/sofa-framework/sofa/pull/3590#issuecomment-1415614015:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3590#issuecomment-1415614015
https://github.com/sofa-framework/sofa/pull/3592#issuecomment-1387218270:70,Modifiability,refactor,refactoring,70,Is this PR a fix for a breaks because of the merge of the NameDecoder refactoring ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3592#issuecomment-1387218270
https://github.com/sofa-framework/sofa/pull/3592#issuecomment-1387264272:72,Modifiability,refactor,refactoring,72,"> Is this PR a fix for a breaks because of the merge of the NameDecoder refactoring ?. No, it's to apply the idea to matrices that `Vec3` corresponds to `Vec3d` if `SReal` is a double, and `Vec3f` if it is a `float`.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3592#issuecomment-1387264272
https://github.com/sofa-framework/sofa/pull/3592#issuecomment-1396686681:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3592#issuecomment-1396686681
https://github.com/sofa-framework/sofa/pull/3593#issuecomment-1396591868:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3593#issuecomment-1396591868
https://github.com/sofa-framework/sofa/pull/3594#issuecomment-1387444137:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3594#issuecomment-1387444137
https://github.com/sofa-framework/sofa/pull/3596#issuecomment-1397220103:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3596#issuecomment-1397220103
https://github.com/sofa-framework/sofa/pull/3596#issuecomment-1398171369:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3596#issuecomment-1398171369
https://github.com/sofa-framework/sofa/pull/3596#issuecomment-1403795194:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3596#issuecomment-1403795194
https://github.com/sofa-framework/sofa/pull/3596#issuecomment-1411233079:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3596#issuecomment-1411233079
https://github.com/sofa-framework/sofa/pull/3597#issuecomment-1397220475:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3597#issuecomment-1397220475
https://github.com/sofa-framework/sofa/pull/3598#issuecomment-1400063806:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3598#issuecomment-1400063806
https://github.com/sofa-framework/sofa/pull/3598#issuecomment-1405907373:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3598#issuecomment-1405907373
https://github.com/sofa-framework/sofa/pull/3599#issuecomment-1401608114:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3599#issuecomment-1401608114
https://github.com/sofa-framework/sofa/pull/3601#issuecomment-1402334616:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3601#issuecomment-1402334616
https://github.com/sofa-framework/sofa/pull/3601#issuecomment-1403751883:211,Availability,redundant,redundant,211,"Retrospectively, I would prefer the following structure:; ```; SofaCUDA; | - component; | - mapping; | - linear; | - nonlinear; ```. I find that the intermediate directories `sofa/gpu/cuda` are superfluous, and redundant with the name of the plugin. It is also in the prevision of changing the namespaces (which is not done in this PR).; What do you think @hugtalbot @epernod @damienmarchal @fredroy ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3601#issuecomment-1403751883
https://github.com/sofa-framework/sofa/pull/3601#issuecomment-1403751883:242,Modifiability,plugin,plugin,242,"Retrospectively, I would prefer the following structure:; ```; SofaCUDA; | - component; | - mapping; | - linear; | - nonlinear; ```. I find that the intermediate directories `sofa/gpu/cuda` are superfluous, and redundant with the name of the plugin. It is also in the prevision of changing the namespaces (which is not done in this PR).; What do you think @hugtalbot @epernod @damienmarchal @fredroy ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3601#issuecomment-1403751883
https://github.com/sofa-framework/sofa/pull/3601#issuecomment-1403751883:211,Safety,redund,redundant,211,"Retrospectively, I would prefer the following structure:; ```; SofaCUDA; | - component; | - mapping; | - linear; | - nonlinear; ```. I find that the intermediate directories `sofa/gpu/cuda` are superfluous, and redundant with the name of the plugin. It is also in the prevision of changing the namespaces (which is not done in this PR).; What do you think @hugtalbot @epernod @damienmarchal @fredroy ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3601#issuecomment-1403751883
https://github.com/sofa-framework/sofa/pull/3601#issuecomment-1406181444:114,Modifiability,plugin,plugin,114,"I agree. Sofa/gpu/cuda only make sens if we have sofa/gpu/opencl or sofa/multithread.... but it would be in other plugin. So if you keep the SofaCuda as first level in your namespace/hierarchy, it will work.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3601#issuecomment-1406181444
https://github.com/sofa-framework/sofa/pull/3601#issuecomment-1406189525:116,Modifiability,plugin,plugin,116,"> I agree. Sofa/gpu/cuda only make sens if we have sofa/gpu/opencl or sofa/multithread.... but it would be in other plugin. So if you keep the SofaCuda as first level in your namespace/hierarchy, it will work. It's also what I think. Thanks @epernod",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3601#issuecomment-1406189525
https://github.com/sofa-framework/sofa/pull/3601#issuecomment-1411679270:78,Availability,redundant,redundant,78,"> I find that the intermediate directories sofa/gpu/cuda are superfluous, and redundant with the name of the plugin. It is also in the prevision of changing the namespaces (which is not done in this PR).; > What do you think @hugtalbot @epernod @damienmarchal @fredroy ?. agreed @alxbilger !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3601#issuecomment-1411679270
https://github.com/sofa-framework/sofa/pull/3601#issuecomment-1411679270:109,Modifiability,plugin,plugin,109,"> I find that the intermediate directories sofa/gpu/cuda are superfluous, and redundant with the name of the plugin. It is also in the prevision of changing the namespaces (which is not done in this PR).; > What do you think @hugtalbot @epernod @damienmarchal @fredroy ?. agreed @alxbilger !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3601#issuecomment-1411679270
https://github.com/sofa-framework/sofa/pull/3601#issuecomment-1411679270:78,Safety,redund,redundant,78,"> I find that the intermediate directories sofa/gpu/cuda are superfluous, and redundant with the name of the plugin. It is also in the prevision of changing the namespaces (which is not done in this PR).; > What do you think @hugtalbot @epernod @damienmarchal @fredroy ?. agreed @alxbilger !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3601#issuecomment-1411679270
https://github.com/sofa-framework/sofa/pull/3603#issuecomment-1402334855:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3603#issuecomment-1402334855
https://github.com/sofa-framework/sofa/pull/3605#issuecomment-1422635772:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3605#issuecomment-1422635772
https://github.com/sofa-framework/sofa/pull/3607#issuecomment-1411703008:761,Availability,error,error,761,"Nice! The CI says no though:. ```; 25 | SOFA_DEPRECATED_HEADER_NOT_REPLACED(""v23.06"", ""v23.12""); | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ; In file included from include/Sofa.Config/sofa/config.h:24,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/config.h:25,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:24,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.cpp:22:; include/Sofa.Config/sofa/config/sharedlibrary_defines.h:26:38: error: expected identifier before '__attribute__'; 26 | # define SOFA_EXPORT_DYNAMIC_LIBRARY __attribute__ ((visibility (""default""))); | ^~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/config.h:29:42: note: in expansion of macro 'SOFA_EXPORT_DYNAMIC_LIBRARY'; 29 | # define SOFA_MULTITHREADING_PLUGIN_API SOFA_EXPORT_DYNAMIC_LIBRARY; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:40:1: note: in expansion of macro 'SOFA_MULTITHREADING_PLUGIN_API'; 40 | SOFA_MULTITHREADING_PLUGIN_API StepTask : public sofa::simulation::CpuTask; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.cpp:22:; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:40:41: error: expected initializer before ':' token; 40 | SOFA_MULTITHREADING_PLUGI",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3607#issuecomment-1411703008
https://github.com/sofa-framework/sofa/pull/3607#issuecomment-1411703008:1925,Availability,error,error,1925,"_HEADER_NOT_REPLACED(""v23.06"", ""v23.12""); | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ; In file included from include/Sofa.Config/sofa/config.h:24,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/config.h:25,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:24,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.cpp:22:; include/Sofa.Config/sofa/config/sharedlibrary_defines.h:26:38: error: expected identifier before '__attribute__'; 26 | # define SOFA_EXPORT_DYNAMIC_LIBRARY __attribute__ ((visibility (""default""))); | ^~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/config.h:29:42: note: in expansion of macro 'SOFA_EXPORT_DYNAMIC_LIBRARY'; 29 | # define SOFA_MULTITHREADING_PLUGIN_API SOFA_EXPORT_DYNAMIC_LIBRARY; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:40:1: note: in expansion of macro 'SOFA_MULTITHREADING_PLUGIN_API'; 40 | SOFA_MULTITHREADING_PLUGIN_API StepTask : public sofa::simulation::CpuTask; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.cpp:22:; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:40:41: error: expected initializer before ':' token; 40 | SOFA_MULTITHREADING_PLUGIN_API StepTask : public sofa::simulation::CpuTask; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3607#issuecomment-1411703008
https://github.com/sofa-framework/sofa/pull/3607#issuecomment-1411703008:180,Modifiability,Config,Config,180,"Nice! The CI says no though:. ```; 25 | SOFA_DEPRECATED_HEADER_NOT_REPLACED(""v23.06"", ""v23.12""); | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ; In file included from include/Sofa.Config/sofa/config.h:24,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/config.h:25,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:24,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.cpp:22:; include/Sofa.Config/sofa/config/sharedlibrary_defines.h:26:38: error: expected identifier before '__attribute__'; 26 | # define SOFA_EXPORT_DYNAMIC_LIBRARY __attribute__ ((visibility (""default""))); | ^~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/config.h:29:42: note: in expansion of macro 'SOFA_EXPORT_DYNAMIC_LIBRARY'; 29 | # define SOFA_MULTITHREADING_PLUGIN_API SOFA_EXPORT_DYNAMIC_LIBRARY; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:40:1: note: in expansion of macro 'SOFA_MULTITHREADING_PLUGIN_API'; 40 | SOFA_MULTITHREADING_PLUGIN_API StepTask : public sofa::simulation::CpuTask; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.cpp:22:; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:40:41: error: expected initializer before ':' token; 40 | SOFA_MULTITHREADING_PLUGI",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3607#issuecomment-1411703008
https://github.com/sofa-framework/sofa/pull/3607#issuecomment-1411703008:192,Modifiability,config,config,192,"Nice! The CI says no though:. ```; 25 | SOFA_DEPRECATED_HEADER_NOT_REPLACED(""v23.06"", ""v23.12""); | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ; In file included from include/Sofa.Config/sofa/config.h:24,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/config.h:25,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:24,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.cpp:22:; include/Sofa.Config/sofa/config/sharedlibrary_defines.h:26:38: error: expected identifier before '__attribute__'; 26 | # define SOFA_EXPORT_DYNAMIC_LIBRARY __attribute__ ((visibility (""default""))); | ^~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/config.h:29:42: note: in expansion of macro 'SOFA_EXPORT_DYNAMIC_LIBRARY'; 29 | # define SOFA_MULTITHREADING_PLUGIN_API SOFA_EXPORT_DYNAMIC_LIBRARY; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:40:1: note: in expansion of macro 'SOFA_MULTITHREADING_PLUGIN_API'; 40 | SOFA_MULTITHREADING_PLUGIN_API StepTask : public sofa::simulation::CpuTask; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.cpp:22:; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:40:41: error: expected initializer before ':' token; 40 | SOFA_MULTITHREADING_PLUGI",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3607#issuecomment-1411703008
https://github.com/sofa-framework/sofa/pull/3607#issuecomment-1411703008:296,Modifiability,plugin,plugins,296,"Nice! The CI says no though:. ```; 25 | SOFA_DEPRECATED_HEADER_NOT_REPLACED(""v23.06"", ""v23.12""); | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ; In file included from include/Sofa.Config/sofa/config.h:24,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/config.h:25,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:24,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.cpp:22:; include/Sofa.Config/sofa/config/sharedlibrary_defines.h:26:38: error: expected identifier before '__attribute__'; 26 | # define SOFA_EXPORT_DYNAMIC_LIBRARY __attribute__ ((visibility (""default""))); | ^~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/config.h:29:42: note: in expansion of macro 'SOFA_EXPORT_DYNAMIC_LIBRARY'; 29 | # define SOFA_MULTITHREADING_PLUGIN_API SOFA_EXPORT_DYNAMIC_LIBRARY; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:40:1: note: in expansion of macro 'SOFA_MULTITHREADING_PLUGIN_API'; 40 | SOFA_MULTITHREADING_PLUGIN_API StepTask : public sofa::simulation::CpuTask; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.cpp:22:; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:40:41: error: expected initializer before ':' token; 40 | SOFA_MULTITHREADING_PLUGI",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3607#issuecomment-1411703008
https://github.com/sofa-framework/sofa/pull/3607#issuecomment-1411703008:338,Modifiability,config,config,338,"Nice! The CI says no though:. ```; 25 | SOFA_DEPRECATED_HEADER_NOT_REPLACED(""v23.06"", ""v23.12""); | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ; In file included from include/Sofa.Config/sofa/config.h:24,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/config.h:25,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:24,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.cpp:22:; include/Sofa.Config/sofa/config/sharedlibrary_defines.h:26:38: error: expected identifier before '__attribute__'; 26 | # define SOFA_EXPORT_DYNAMIC_LIBRARY __attribute__ ((visibility (""default""))); | ^~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/config.h:29:42: note: in expansion of macro 'SOFA_EXPORT_DYNAMIC_LIBRARY'; 29 | # define SOFA_MULTITHREADING_PLUGIN_API SOFA_EXPORT_DYNAMIC_LIBRARY; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:40:1: note: in expansion of macro 'SOFA_MULTITHREADING_PLUGIN_API'; 40 | SOFA_MULTITHREADING_PLUGIN_API StepTask : public sofa::simulation::CpuTask; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.cpp:22:; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:40:41: error: expected initializer before ':' token; 40 | SOFA_MULTITHREADING_PLUGI",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3607#issuecomment-1411703008
https://github.com/sofa-framework/sofa/pull/3607#issuecomment-1411703008:442,Modifiability,plugin,plugins,442,"Nice! The CI says no though:. ```; 25 | SOFA_DEPRECATED_HEADER_NOT_REPLACED(""v23.06"", ""v23.12""); | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ; In file included from include/Sofa.Config/sofa/config.h:24,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/config.h:25,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:24,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.cpp:22:; include/Sofa.Config/sofa/config/sharedlibrary_defines.h:26:38: error: expected identifier before '__attribute__'; 26 | # define SOFA_EXPORT_DYNAMIC_LIBRARY __attribute__ ((visibility (""default""))); | ^~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/config.h:29:42: note: in expansion of macro 'SOFA_EXPORT_DYNAMIC_LIBRARY'; 29 | # define SOFA_MULTITHREADING_PLUGIN_API SOFA_EXPORT_DYNAMIC_LIBRARY; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:40:1: note: in expansion of macro 'SOFA_MULTITHREADING_PLUGIN_API'; 40 | SOFA_MULTITHREADING_PLUGIN_API StepTask : public sofa::simulation::CpuTask; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.cpp:22:; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:40:41: error: expected initializer before ':' token; 40 | SOFA_MULTITHREADING_PLUGI",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3607#issuecomment-1411703008
https://github.com/sofa-framework/sofa/pull/3607#issuecomment-1411703008:614,Modifiability,plugin,plugins,614,"Nice! The CI says no though:. ```; 25 | SOFA_DEPRECATED_HEADER_NOT_REPLACED(""v23.06"", ""v23.12""); | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ; In file included from include/Sofa.Config/sofa/config.h:24,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/config.h:25,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:24,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.cpp:22:; include/Sofa.Config/sofa/config/sharedlibrary_defines.h:26:38: error: expected identifier before '__attribute__'; 26 | # define SOFA_EXPORT_DYNAMIC_LIBRARY __attribute__ ((visibility (""default""))); | ^~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/config.h:29:42: note: in expansion of macro 'SOFA_EXPORT_DYNAMIC_LIBRARY'; 29 | # define SOFA_MULTITHREADING_PLUGIN_API SOFA_EXPORT_DYNAMIC_LIBRARY; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:40:1: note: in expansion of macro 'SOFA_MULTITHREADING_PLUGIN_API'; 40 | SOFA_MULTITHREADING_PLUGIN_API StepTask : public sofa::simulation::CpuTask; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.cpp:22:; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:40:41: error: expected initializer before ':' token; 40 | SOFA_MULTITHREADING_PLUGI",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3607#issuecomment-1411703008
https://github.com/sofa-framework/sofa/pull/3607#issuecomment-1411703008:711,Modifiability,Config,Config,711,"Nice! The CI says no though:. ```; 25 | SOFA_DEPRECATED_HEADER_NOT_REPLACED(""v23.06"", ""v23.12""); | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ; In file included from include/Sofa.Config/sofa/config.h:24,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/config.h:25,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:24,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.cpp:22:; include/Sofa.Config/sofa/config/sharedlibrary_defines.h:26:38: error: expected identifier before '__attribute__'; 26 | # define SOFA_EXPORT_DYNAMIC_LIBRARY __attribute__ ((visibility (""default""))); | ^~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/config.h:29:42: note: in expansion of macro 'SOFA_EXPORT_DYNAMIC_LIBRARY'; 29 | # define SOFA_MULTITHREADING_PLUGIN_API SOFA_EXPORT_DYNAMIC_LIBRARY; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:40:1: note: in expansion of macro 'SOFA_MULTITHREADING_PLUGIN_API'; 40 | SOFA_MULTITHREADING_PLUGIN_API StepTask : public sofa::simulation::CpuTask; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.cpp:22:; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:40:41: error: expected initializer before ':' token; 40 | SOFA_MULTITHREADING_PLUGI",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3607#issuecomment-1411703008
https://github.com/sofa-framework/sofa/pull/3607#issuecomment-1411703008:723,Modifiability,config,config,723,"Nice! The CI says no though:. ```; 25 | SOFA_DEPRECATED_HEADER_NOT_REPLACED(""v23.06"", ""v23.12""); | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ; In file included from include/Sofa.Config/sofa/config.h:24,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/config.h:25,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:24,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.cpp:22:; include/Sofa.Config/sofa/config/sharedlibrary_defines.h:26:38: error: expected identifier before '__attribute__'; 26 | # define SOFA_EXPORT_DYNAMIC_LIBRARY __attribute__ ((visibility (""default""))); | ^~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/config.h:29:42: note: in expansion of macro 'SOFA_EXPORT_DYNAMIC_LIBRARY'; 29 | # define SOFA_MULTITHREADING_PLUGIN_API SOFA_EXPORT_DYNAMIC_LIBRARY; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:40:1: note: in expansion of macro 'SOFA_MULTITHREADING_PLUGIN_API'; 40 | SOFA_MULTITHREADING_PLUGIN_API StepTask : public sofa::simulation::CpuTask; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.cpp:22:; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:40:41: error: expected initializer before ':' token; 40 | SOFA_MULTITHREADING_PLUGI",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3607#issuecomment-1411703008
https://github.com/sofa-framework/sofa/pull/3607#issuecomment-1411703008:998,Modifiability,plugin,plugins,998,"Nice! The CI says no though:. ```; 25 | SOFA_DEPRECATED_HEADER_NOT_REPLACED(""v23.06"", ""v23.12""); | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ; In file included from include/Sofa.Config/sofa/config.h:24,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/config.h:25,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:24,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.cpp:22:; include/Sofa.Config/sofa/config/sharedlibrary_defines.h:26:38: error: expected identifier before '__attribute__'; 26 | # define SOFA_EXPORT_DYNAMIC_LIBRARY __attribute__ ((visibility (""default""))); | ^~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/config.h:29:42: note: in expansion of macro 'SOFA_EXPORT_DYNAMIC_LIBRARY'; 29 | # define SOFA_MULTITHREADING_PLUGIN_API SOFA_EXPORT_DYNAMIC_LIBRARY; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:40:1: note: in expansion of macro 'SOFA_MULTITHREADING_PLUGIN_API'; 40 | SOFA_MULTITHREADING_PLUGIN_API StepTask : public sofa::simulation::CpuTask; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.cpp:22:; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:40:41: error: expected initializer before ':' token; 40 | SOFA_MULTITHREADING_PLUGI",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3607#issuecomment-1411703008
https://github.com/sofa-framework/sofa/pull/3607#issuecomment-1411703008:1040,Modifiability,config,config,1040,"Nice! The CI says no though:. ```; 25 | SOFA_DEPRECATED_HEADER_NOT_REPLACED(""v23.06"", ""v23.12""); | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ; In file included from include/Sofa.Config/sofa/config.h:24,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/config.h:25,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:24,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.cpp:22:; include/Sofa.Config/sofa/config/sharedlibrary_defines.h:26:38: error: expected identifier before '__attribute__'; 26 | # define SOFA_EXPORT_DYNAMIC_LIBRARY __attribute__ ((visibility (""default""))); | ^~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/config.h:29:42: note: in expansion of macro 'SOFA_EXPORT_DYNAMIC_LIBRARY'; 29 | # define SOFA_MULTITHREADING_PLUGIN_API SOFA_EXPORT_DYNAMIC_LIBRARY; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:40:1: note: in expansion of macro 'SOFA_MULTITHREADING_PLUGIN_API'; 40 | SOFA_MULTITHREADING_PLUGIN_API StepTask : public sofa::simulation::CpuTask; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.cpp:22:; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:40:41: error: expected initializer before ':' token; 40 | SOFA_MULTITHREADING_PLUGI",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3607#issuecomment-1411703008
https://github.com/sofa-framework/sofa/pull/3607#issuecomment-1411703008:1305,Modifiability,plugin,plugins,1305,"_HEADER_NOT_REPLACED(""v23.06"", ""v23.12""); | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ; In file included from include/Sofa.Config/sofa/config.h:24,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/config.h:25,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:24,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.cpp:22:; include/Sofa.Config/sofa/config/sharedlibrary_defines.h:26:38: error: expected identifier before '__attribute__'; 26 | # define SOFA_EXPORT_DYNAMIC_LIBRARY __attribute__ ((visibility (""default""))); | ^~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/config.h:29:42: note: in expansion of macro 'SOFA_EXPORT_DYNAMIC_LIBRARY'; 29 | # define SOFA_MULTITHREADING_PLUGIN_API SOFA_EXPORT_DYNAMIC_LIBRARY; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:40:1: note: in expansion of macro 'SOFA_MULTITHREADING_PLUGIN_API'; 40 | SOFA_MULTITHREADING_PLUGIN_API StepTask : public sofa::simulation::CpuTask; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.cpp:22:; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:40:41: error: expected initializer before ':' token; 40 | SOFA_MULTITHREADING_PLUGIN_API StepTask : public sofa::simulation::CpuTask; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3607#issuecomment-1411703008
https://github.com/sofa-framework/sofa/pull/3607#issuecomment-1411703008:1672,Modifiability,plugin,plugins,1672,"_HEADER_NOT_REPLACED(""v23.06"", ""v23.12""); | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ; In file included from include/Sofa.Config/sofa/config.h:24,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/config.h:25,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:24,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.cpp:22:; include/Sofa.Config/sofa/config/sharedlibrary_defines.h:26:38: error: expected identifier before '__attribute__'; 26 | # define SOFA_EXPORT_DYNAMIC_LIBRARY __attribute__ ((visibility (""default""))); | ^~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/config.h:29:42: note: in expansion of macro 'SOFA_EXPORT_DYNAMIC_LIBRARY'; 29 | # define SOFA_MULTITHREADING_PLUGIN_API SOFA_EXPORT_DYNAMIC_LIBRARY; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:40:1: note: in expansion of macro 'SOFA_MULTITHREADING_PLUGIN_API'; 40 | SOFA_MULTITHREADING_PLUGIN_API StepTask : public sofa::simulation::CpuTask; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.cpp:22:; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:40:41: error: expected initializer before ':' token; 40 | SOFA_MULTITHREADING_PLUGIN_API StepTask : public sofa::simulation::CpuTask; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3607#issuecomment-1411703008
https://github.com/sofa-framework/sofa/pull/3607#issuecomment-1411703008:1841,Modifiability,plugin,plugins,1841,"_HEADER_NOT_REPLACED(""v23.06"", ""v23.12""); | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ; In file included from include/Sofa.Config/sofa/config.h:24,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/config.h:25,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:24,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.cpp:22:; include/Sofa.Config/sofa/config/sharedlibrary_defines.h:26:38: error: expected identifier before '__attribute__'; 26 | # define SOFA_EXPORT_DYNAMIC_LIBRARY __attribute__ ((visibility (""default""))); | ^~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/config.h:29:42: note: in expansion of macro 'SOFA_EXPORT_DYNAMIC_LIBRARY'; 29 | # define SOFA_MULTITHREADING_PLUGIN_API SOFA_EXPORT_DYNAMIC_LIBRARY; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:40:1: note: in expansion of macro 'SOFA_MULTITHREADING_PLUGIN_API'; 40 | SOFA_MULTITHREADING_PLUGIN_API StepTask : public sofa::simulation::CpuTask; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.cpp:22:; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:40:41: error: expected initializer before ':' token; 40 | SOFA_MULTITHREADING_PLUGIN_API StepTask : public sofa::simulation::CpuTask; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3607#issuecomment-1411703008
https://github.com/sofa-framework/sofa/pull/3607#issuecomment-1419332427:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3607#issuecomment-1419332427
https://github.com/sofa-framework/sofa/issues/3614#issuecomment-2263809050:121,Availability,error,error,121,"Hi, just wanted to add something here, I am now facing with a similar issue related Background setting object, with same error as above(object not in factory). I am using a .py file for scene creation. I can run it using runSofa, but not able to run it with python3 for integrating with gym. You can find the implementation here https://github.com/ScheiklP/sofa_env; the file I am trying to run : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/scenes/reach/reach_env.py",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3614#issuecomment-2263809050
https://github.com/sofa-framework/sofa/issues/3614#issuecomment-2263809050:270,Deployability,integrat,integrating,270,"Hi, just wanted to add something here, I am now facing with a similar issue related Background setting object, with same error as above(object not in factory). I am using a .py file for scene creation. I can run it using runSofa, but not able to run it with python3 for integrating with gym. You can find the implementation here https://github.com/ScheiklP/sofa_env; the file I am trying to run : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/scenes/reach/reach_env.py",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3614#issuecomment-2263809050
https://github.com/sofa-framework/sofa/issues/3614#issuecomment-2263809050:270,Integrability,integrat,integrating,270,"Hi, just wanted to add something here, I am now facing with a similar issue related Background setting object, with same error as above(object not in factory). I am using a .py file for scene creation. I can run it using runSofa, but not able to run it with python3 for integrating with gym. You can find the implementation here https://github.com/ScheiklP/sofa_env; the file I am trying to run : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/scenes/reach/reach_env.py",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3614#issuecomment-2263809050
https://github.com/sofa-framework/sofa/pull/3620#issuecomment-1418680053:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3620#issuecomment-1418680053
https://github.com/sofa-framework/sofa/pull/3622#issuecomment-1419147431:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3622#issuecomment-1419147431
https://github.com/sofa-framework/sofa/pull/3624#issuecomment-1420096440:8,Availability,error,error,8,` fatal error: 'SofaGui/initSofaGui.h'` ; I am afraid it is not as easy as only changing the CMakeFiles @hugtalbot üòÖ,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3624#issuecomment-1420096440
https://github.com/sofa-framework/sofa/pull/3626#issuecomment-1419339520:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3626#issuecomment-1419339520
https://github.com/sofa-framework/sofa/pull/3627#issuecomment-1421975620:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3627#issuecomment-1421975620
https://github.com/sofa-framework/sofa/pull/3627#issuecomment-1423384347:218,Deployability,release,releases,218,"About the `[[maybe_unused]]` :; this is triggered only with clang(15), not with gcc and it seems to be because of :; `-Wunused-but-set-variable now also warns if the variable is only used by unary operators.` (https://releases.llvm.org/15.0.0/tools/clang/docs/ReleaseNotes.html); So all the added `[[maybe_unused]]` are used with variables because of the `++` later on, which is a bit weird to me too.ü§ì. I can just revert https://github.com/sofa-framework/sofa/pull/3627/commits/c168efba2f0ff912c3ace3ffe81c179f9712e02d if needed",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3627#issuecomment-1423384347
https://github.com/sofa-framework/sofa/pull/3627#issuecomment-1423384347:260,Deployability,Release,ReleaseNotes,260,"About the `[[maybe_unused]]` :; this is triggered only with clang(15), not with gcc and it seems to be because of :; `-Wunused-but-set-variable now also warns if the variable is only used by unary operators.` (https://releases.llvm.org/15.0.0/tools/clang/docs/ReleaseNotes.html); So all the added `[[maybe_unused]]` are used with variables because of the `++` later on, which is a bit weird to me too.ü§ì. I can just revert https://github.com/sofa-framework/sofa/pull/3627/commits/c168efba2f0ff912c3ace3ffe81c179f9712e02d if needed",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3627#issuecomment-1423384347
https://github.com/sofa-framework/sofa/pull/3627#issuecomment-1423384347:135,Modifiability,variab,variable,135,"About the `[[maybe_unused]]` :; this is triggered only with clang(15), not with gcc and it seems to be because of :; `-Wunused-but-set-variable now also warns if the variable is only used by unary operators.` (https://releases.llvm.org/15.0.0/tools/clang/docs/ReleaseNotes.html); So all the added `[[maybe_unused]]` are used with variables because of the `++` later on, which is a bit weird to me too.ü§ì. I can just revert https://github.com/sofa-framework/sofa/pull/3627/commits/c168efba2f0ff912c3ace3ffe81c179f9712e02d if needed",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3627#issuecomment-1423384347
https://github.com/sofa-framework/sofa/pull/3627#issuecomment-1423384347:166,Modifiability,variab,variable,166,"About the `[[maybe_unused]]` :; this is triggered only with clang(15), not with gcc and it seems to be because of :; `-Wunused-but-set-variable now also warns if the variable is only used by unary operators.` (https://releases.llvm.org/15.0.0/tools/clang/docs/ReleaseNotes.html); So all the added `[[maybe_unused]]` are used with variables because of the `++` later on, which is a bit weird to me too.ü§ì. I can just revert https://github.com/sofa-framework/sofa/pull/3627/commits/c168efba2f0ff912c3ace3ffe81c179f9712e02d if needed",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3627#issuecomment-1423384347
https://github.com/sofa-framework/sofa/pull/3627#issuecomment-1423384347:330,Modifiability,variab,variables,330,"About the `[[maybe_unused]]` :; this is triggered only with clang(15), not with gcc and it seems to be because of :; `-Wunused-but-set-variable now also warns if the variable is only used by unary operators.` (https://releases.llvm.org/15.0.0/tools/clang/docs/ReleaseNotes.html); So all the added `[[maybe_unused]]` are used with variables because of the `++` later on, which is a bit weird to me too.ü§ì. I can just revert https://github.com/sofa-framework/sofa/pull/3627/commits/c168efba2f0ff912c3ace3ffe81c179f9712e02d if needed",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3627#issuecomment-1423384347
https://github.com/sofa-framework/sofa/pull/3627#issuecomment-1424757631:37,Modifiability,variab,variable,37,"did you fix all the ` unused-but-set-variable` warnings @fredroy ?; if yes, then we could keep the commit. If it's just a partial fix, I would vote for reverting it",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3627#issuecomment-1424757631
https://github.com/sofa-framework/sofa/pull/3627#issuecomment-1424993650:39,Modifiability,variab,variable,39,> did you fix all the ` unused-but-set-variable` warnings @fredroy ?. Yep (but only for the set I mentioned),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3627#issuecomment-1424993650
https://github.com/sofa-framework/sofa/pull/3628#issuecomment-1422129463:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3628#issuecomment-1422129463
https://github.com/sofa-framework/sofa/pull/3629#issuecomment-1422174522:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3629#issuecomment-1422174522
https://github.com/sofa-framework/sofa/pull/3632#issuecomment-1423492544:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3632#issuecomment-1423492544
https://github.com/sofa-framework/sofa/pull/3633#issuecomment-1423493872:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3633#issuecomment-1423493872
https://github.com/sofa-framework/sofa/pull/3634#issuecomment-1429664407:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3634/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/OptiTrackNatNet/pull/2**; _For this build, OptiTrackNatNet/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/OptiTrackNatNet; GIT_TAG ed648c9c2acc997228eca729a17fb7c490efad71_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3634#issuecomment-1429664407
https://github.com/sofa-framework/sofa/pull/3634#issuecomment-1429664407:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3634/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/OptiTrackNatNet/pull/2**; _For this build, OptiTrackNatNet/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/OptiTrackNatNet; GIT_TAG ed648c9c2acc997228eca729a17fb7c490efad71_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3634#issuecomment-1429664407
https://github.com/sofa-framework/sofa/pull/3634#issuecomment-1429668553:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3634/7/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/OptiTrackNatNet/pull/2**; _For this build, OptiTrackNatNet/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/OptiTrackNatNet; GIT_TAG 6ed981088badeed632e0c7179e79ce408abd4e93_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3634#issuecomment-1429668553
https://github.com/sofa-framework/sofa/pull/3634#issuecomment-1429668553:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3634/7/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/OptiTrackNatNet/pull/2**; _For this build, OptiTrackNatNet/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/OptiTrackNatNet; GIT_TAG 6ed981088badeed632e0c7179e79ce408abd4e93_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3634#issuecomment-1429668553
https://github.com/sofa-framework/sofa/pull/3634#issuecomment-1429726014:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3634/8/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/OptiTrackNatNet/pull/2**; _For this build, OptiTrackNatNet/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/OptiTrackNatNet; GIT_TAG 15c81dbd9b84f80f9f4fc8a48f9a077f16190e8c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3634#issuecomment-1429726014
https://github.com/sofa-framework/sofa/pull/3634#issuecomment-1429726014:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3634/8/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/OptiTrackNatNet/pull/2**; _For this build, OptiTrackNatNet/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/OptiTrackNatNet; GIT_TAG 15c81dbd9b84f80f9f4fc8a48f9a077f16190e8c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3634#issuecomment-1429726014
https://github.com/sofa-framework/sofa/pull/3634#issuecomment-1429754911:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3634/9/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/OptiTrackNatNet/pull/2**; _For this build, OptiTrackNatNet/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/OptiTrackNatNet; GIT_TAG 30b463128985a76fdb4a8a28dec3c2c80cff8310_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3634#issuecomment-1429754911
https://github.com/sofa-framework/sofa/pull/3634#issuecomment-1429754911:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3634/9/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/OptiTrackNatNet/pull/2**; _For this build, OptiTrackNatNet/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/OptiTrackNatNet; GIT_TAG 30b463128985a76fdb4a8a28dec3c2c80cff8310_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3634#issuecomment-1429754911
https://github.com/sofa-framework/sofa/pull/3634#issuecomment-1429789161:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3634/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/OptiTrackNatNet/pull/2**; _For this build, OptiTrackNatNet/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/OptiTrackNatNet; GIT_TAG 30b463128985a76fdb4a8a28dec3c2c80cff8310_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3634#issuecomment-1429789161
https://github.com/sofa-framework/sofa/pull/3634#issuecomment-1429789161:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3634/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/OptiTrackNatNet/pull/2**; _For this build, OptiTrackNatNet/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/OptiTrackNatNet; GIT_TAG 30b463128985a76fdb4a8a28dec3c2c80cff8310_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3634#issuecomment-1429789161
https://github.com/sofa-framework/sofa/pull/3634#issuecomment-1429790795:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3634#issuecomment-1429790795
https://github.com/sofa-framework/sofa/pull/3634#issuecomment-1429790999:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3634/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/OptiTrackNatNet/pull/2**; _For this build, OptiTrackNatNet/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/OptiTrackNatNet; GIT_TAG 30b463128985a76fdb4a8a28dec3c2c80cff8310_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3634#issuecomment-1429790999
https://github.com/sofa-framework/sofa/pull/3634#issuecomment-1429790999:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3634/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/OptiTrackNatNet/pull/2**; _For this build, OptiTrackNatNet/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/OptiTrackNatNet; GIT_TAG 30b463128985a76fdb4a8a28dec3c2c80cff8310_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3634#issuecomment-1429790999
https://github.com/sofa-framework/sofa/pull/3634#issuecomment-1430990554:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3634#issuecomment-1430990554
https://github.com/sofa-framework/sofa/pull/3635#issuecomment-1423520721:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3635#issuecomment-1423520721
https://github.com/sofa-framework/sofa/pull/3635#issuecomment-1424753936:34,Energy Efficiency,green,green,34,If CI and Alex approved it sounds green,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3635#issuecomment-1424753936
https://github.com/sofa-framework/sofa/pull/3636#issuecomment-1425294892:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3636#issuecomment-1425294892
https://github.com/sofa-framework/sofa/pull/3640#issuecomment-1425295050:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3640#issuecomment-1425295050
https://github.com/sofa-framework/sofa/pull/3640#issuecomment-1427103805:62,Modifiability,refactor,refactor,62,"@fredroy I worked on this problem too, but my approach was to refactor texture references by using texture objects. It is not trivial. It's not working yet. I'll try again in the week, otherwise I suggest to simply remove the usage of textures. I'd use simply raw GPU pointers. This alternative is easier than the texture objects approach (but it may cost a bit of performances (perhaps negligible)).; My point is, don't merge this PR right now, unless is super urgent.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3640#issuecomment-1427103805
https://github.com/sofa-framework/sofa/pull/3640#issuecomment-1427103805:365,Performance,perform,performances,365,"@fredroy I worked on this problem too, but my approach was to refactor texture references by using texture objects. It is not trivial. It's not working yet. I'll try again in the week, otherwise I suggest to simply remove the usage of textures. I'd use simply raw GPU pointers. This alternative is easier than the texture objects approach (but it may cost a bit of performances (perhaps negligible)).; My point is, don't merge this PR right now, unless is super urgent.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3640#issuecomment-1427103805
https://github.com/sofa-framework/sofa/pull/3640#issuecomment-1427103805:208,Usability,simpl,simply,208,"@fredroy I worked on this problem too, but my approach was to refactor texture references by using texture objects. It is not trivial. It's not working yet. I'll try again in the week, otherwise I suggest to simply remove the usage of textures. I'd use simply raw GPU pointers. This alternative is easier than the texture objects approach (but it may cost a bit of performances (perhaps negligible)).; My point is, don't merge this PR right now, unless is super urgent.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3640#issuecomment-1427103805
https://github.com/sofa-framework/sofa/pull/3640#issuecomment-1427103805:253,Usability,simpl,simply,253,"@fredroy I worked on this problem too, but my approach was to refactor texture references by using texture objects. It is not trivial. It's not working yet. I'll try again in the week, otherwise I suggest to simply remove the usage of textures. I'd use simply raw GPU pointers. This alternative is easier than the texture objects approach (but it may cost a bit of performances (perhaps negligible)).; My point is, don't merge this PR right now, unless is super urgent.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3640#issuecomment-1427103805
https://github.com/sofa-framework/sofa/pull/3640#issuecomment-1427168232:64,Modifiability,refactor,refactor,64,"> @fredroy I worked on this problem too, but my approach was to refactor texture references by using texture objects. It is not trivial. It's not working yet. I'll try again in the week, otherwise I suggest to simply remove the usage of textures. I'd use simply raw GPU pointers. This alternative is easier than the texture objects approach (but it may cost a bit of performances (perhaps negligible)). My point is, don't merge this PR right now, unless is super urgent. Of course, it would be much better to effectively fix the problem than to ignore it. This PR was just providing a quick but brainless solution for a (hopefully) temporary fix.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3640#issuecomment-1427168232
https://github.com/sofa-framework/sofa/pull/3640#issuecomment-1427168232:367,Performance,perform,performances,367,"> @fredroy I worked on this problem too, but my approach was to refactor texture references by using texture objects. It is not trivial. It's not working yet. I'll try again in the week, otherwise I suggest to simply remove the usage of textures. I'd use simply raw GPU pointers. This alternative is easier than the texture objects approach (but it may cost a bit of performances (perhaps negligible)). My point is, don't merge this PR right now, unless is super urgent. Of course, it would be much better to effectively fix the problem than to ignore it. This PR was just providing a quick but brainless solution for a (hopefully) temporary fix.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3640#issuecomment-1427168232
https://github.com/sofa-framework/sofa/pull/3640#issuecomment-1427168232:210,Usability,simpl,simply,210,"> @fredroy I worked on this problem too, but my approach was to refactor texture references by using texture objects. It is not trivial. It's not working yet. I'll try again in the week, otherwise I suggest to simply remove the usage of textures. I'd use simply raw GPU pointers. This alternative is easier than the texture objects approach (but it may cost a bit of performances (perhaps negligible)). My point is, don't merge this PR right now, unless is super urgent. Of course, it would be much better to effectively fix the problem than to ignore it. This PR was just providing a quick but brainless solution for a (hopefully) temporary fix.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3640#issuecomment-1427168232
https://github.com/sofa-framework/sofa/pull/3640#issuecomment-1427168232:255,Usability,simpl,simply,255,"> @fredroy I worked on this problem too, but my approach was to refactor texture references by using texture objects. It is not trivial. It's not working yet. I'll try again in the week, otherwise I suggest to simply remove the usage of textures. I'd use simply raw GPU pointers. This alternative is easier than the texture objects approach (but it may cost a bit of performances (perhaps negligible)). My point is, don't merge this PR right now, unless is super urgent. Of course, it would be much better to effectively fix the problem than to ignore it. This PR was just providing a quick but brainless solution for a (hopefully) temporary fix.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3640#issuecomment-1427168232
https://github.com/sofa-framework/sofa/pull/3643#issuecomment-1427521995:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3643#issuecomment-1427521995
https://github.com/sofa-framework/sofa/pull/3643#issuecomment-1428898636:591,Energy Efficiency,allocate,allocated,591,"> I don't understand the differences here. That's the problem, this is supposed to do the same thing : either calling the delete operator with size or not size, because in this end both of them call the same code in the StdTaskAllocator https://github.com/sofa-framework/sofa/blob/d855365c71b4b83190ca4af3ce412bd4dbdc1b2f/Sofa/framework/Simulation/Core/src/sofa/simulation/DefaultTaskScheduler.cpp#L47. But in the end calling the version without size fixes the leak üò∂‚Äçüå´Ô∏è; caduceus.scn with 1000steps: ; Before: (operator delete with size); ```; Direct leak of 63936 byte(s) in 999 object(s) allocated from:; #0 0x7fdeaeac0488 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cpp:95; #1 0x7fdea4253138 in _M_create<sofa::component::animationloop::FreeMotionAnimationLoop::FreeMotionAndCollisionDetection(const sofa::core::ExecParams*, const sofa::core::ConstraintParams&, SReal, sofa::core::MultiVecId, sofa::core::MultiVecId, sofa::core::MultiVecDerivId, sofa::simulation::common::MechanicalOperations*)::<lambda()> > /usr/include/c++/12/bits/std_function.h:161; #2 0x7fdea4253138 in _M_init_functor<const sofa::component::animationloop::FreeMotionAnimationLoop::FreeMotionAndCollisionDetection(const sofa::core::ExecParams*, const sofa::core::ConstraintParams&, SReal, sofa::core::MultiVecId, sofa::core::MultiVecId, sofa::core::MultiVecDerivId, sofa::simulation::common::MechanicalOperations*)::<lambda()>&> /usr/include/c++/12/bits/std_function.h:215; #3 0x7fdea4253138 in _M_manager /usr/include/c++/12/bits/std_function.h:198; #4 0x7fdea4253138 in _M_manager /usr/include/c++/12/bits/std_function.h:282; #5 0x7fdea81a4486 in std::function<void ()>::function(std::function<void ()> const&) /usr/include/c++/12/bits/std_function.h:391; #6 0x7fdea81a4486 in sofa::simulation::TaskScheduler::addTask; <lots and lots of other leaks...>; ...; SUMMARY: AddressSanitizer: 808967 byte(s) leaked in 15938 allocation(s).; ```; After: (operator delete without size); ```; <no ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3643#issuecomment-1428898636
https://github.com/sofa-framework/sofa/pull/3646#issuecomment-1428148398:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3646#issuecomment-1428148398
https://github.com/sofa-framework/sofa/pull/3649#issuecomment-1430365117:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3649#issuecomment-1430365117
https://github.com/sofa-framework/sofa/pull/3649#issuecomment-1430365297:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3649/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/PluginExample/pull/3**; _For this build, PluginExample/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/PluginExample; GIT_TAG 91e19c464e875daf9598bd31953655a7a84aef86_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3649#issuecomment-1430365297
https://github.com/sofa-framework/sofa/pull/3649#issuecomment-1430365297:208,Modifiability,Plugin,PluginExample,208,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3649/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/PluginExample/pull/3**; _For this build, PluginExample/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/PluginExample; GIT_TAG 91e19c464e875daf9598bd31953655a7a84aef86_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3649#issuecomment-1430365297
https://github.com/sofa-framework/sofa/pull/3649#issuecomment-1430365297:249,Modifiability,Plugin,PluginExample,249,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3649/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/PluginExample/pull/3**; _For this build, PluginExample/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/PluginExample; GIT_TAG 91e19c464e875daf9598bd31953655a7a84aef86_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3649#issuecomment-1430365297
https://github.com/sofa-framework/sofa/pull/3649#issuecomment-1430365297:376,Modifiability,Plugin,PluginExample,376,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3649/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/PluginExample/pull/3**; _For this build, PluginExample/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/PluginExample; GIT_TAG 91e19c464e875daf9598bd31953655a7a84aef86_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3649#issuecomment-1430365297
https://github.com/sofa-framework/sofa/pull/3649#issuecomment-1430365297:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3649/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/PluginExample/pull/3**; _For this build, PluginExample/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/PluginExample; GIT_TAG 91e19c464e875daf9598bd31953655a7a84aef86_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3649#issuecomment-1430365297
https://github.com/sofa-framework/sofa/pull/3649#issuecomment-1438551052:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3649/7/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3649#issuecomment-1438551052
https://github.com/sofa-framework/sofa/pull/3649#issuecomment-1438551052:121,Integrability,depend,dependencies,121,**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3649/7/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3649#issuecomment-1438551052
https://github.com/sofa-framework/sofa/pull/3649#issuecomment-1438551052:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3649/7/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3649#issuecomment-1438551052
https://github.com/sofa-framework/sofa/pull/3649#issuecomment-1439233970:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3649#issuecomment-1439233970
https://github.com/sofa-framework/sofa/pull/3649#issuecomment-1439234036:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3649/8/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3649#issuecomment-1439234036
https://github.com/sofa-framework/sofa/pull/3649#issuecomment-1439234036:121,Integrability,depend,dependencies,121,**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3649/8/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3649#issuecomment-1439234036
https://github.com/sofa-framework/sofa/pull/3649#issuecomment-1439234036:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3649/8/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3649#issuecomment-1439234036
https://github.com/sofa-framework/sofa/pull/3650#issuecomment-1432673313:24,Testability,test,test,24,Ok thanks a lot for the test,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3650#issuecomment-1432673313
https://github.com/sofa-framework/sofa/pull/3650#issuecomment-1438444604:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3650#issuecomment-1438444604
https://github.com/sofa-framework/sofa/pull/3654#issuecomment-1439533863:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3654#issuecomment-1439533863
https://github.com/sofa-framework/sofa/pull/3655#issuecomment-1439583026:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3655#issuecomment-1439583026
https://github.com/sofa-framework/sofa/pull/3658#issuecomment-1433788701:138,Usability,clear,clearly,138,"cool @fredroy . > Note that you need to do one step before being able to see the boxes (dont know if it is on purpose or not). this might clearly be computed at first step, but I do not see why it could not be done at init..",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3658#issuecomment-1433788701
https://github.com/sofa-framework/sofa/pull/3660#issuecomment-1438444009:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3660#issuecomment-1438444009
https://github.com/sofa-framework/sofa/pull/3664#issuecomment-1436364316:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3664#issuecomment-1436364316
https://github.com/sofa-framework/sofa/pull/3664#issuecomment-1445357553:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build] to check further to https://github.com/sofa-framework/sofa/pull/3672,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3664#issuecomment-1445357553
https://github.com/sofa-framework/sofa/pull/3665#issuecomment-1436364584:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3665#issuecomment-1436364584
https://github.com/sofa-framework/sofa/pull/3665#issuecomment-1445357212:20,Testability,test,tests,20,[ci-build][with-all-tests] to check further to #3672,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3665#issuecomment-1445357212
https://github.com/sofa-framework/sofa/pull/3665#issuecomment-1446007326:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3665#issuecomment-1446007326
https://github.com/sofa-framework/sofa/pull/3666#issuecomment-1438440181:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3666#issuecomment-1438440181
https://github.com/sofa-framework/sofa/pull/3666#issuecomment-1445357485:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build] to check further to https://github.com/sofa-framework/sofa/pull/3672,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3666#issuecomment-1445357485
https://github.com/sofa-framework/sofa/pull/3668#issuecomment-1437069457:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3668#issuecomment-1437069457
https://github.com/sofa-framework/sofa/pull/3668#issuecomment-1445357324:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build] to check further to #3672,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3668#issuecomment-1445357324
https://github.com/sofa-framework/sofa/pull/3670#issuecomment-1438213277:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3670#issuecomment-1438213277
https://github.com/sofa-framework/sofa/pull/3670#issuecomment-1439925080:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3670#issuecomment-1439925080
https://github.com/sofa-framework/sofa/pull/3671#issuecomment-1439406351:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3671#issuecomment-1439406351
https://github.com/sofa-framework/sofa/pull/3671#issuecomment-1445357375:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build] to check further to https://github.com/sofa-framework/sofa/pull/3672,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3671#issuecomment-1445357375
https://github.com/sofa-framework/sofa/pull/3672#issuecomment-1439615595:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3672#issuecomment-1439615595
https://github.com/sofa-framework/sofa/pull/3674#issuecomment-1441136072:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3674#issuecomment-1441136072
https://github.com/sofa-framework/sofa/pull/3675#issuecomment-1441140166:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3675#issuecomment-1441140166
https://github.com/sofa-framework/sofa/pull/3676#issuecomment-1441185327:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3676#issuecomment-1441185327
https://github.com/sofa-framework/sofa/pull/3677#issuecomment-1441439123:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3677#issuecomment-1441439123
https://github.com/sofa-framework/sofa/pull/3680#issuecomment-1449551286:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3680#issuecomment-1449551286
https://github.com/sofa-framework/sofa/pull/3680#issuecomment-1453155623:497,Testability,log,logical,497,"I don't think the minus operator should behave differently. The Rigid is just a container of a Vec3d and a Quaternion. Doing a subtraction element by element is something natural and quite expected when doing so. What is done here is equivalent to a Transform multiplication by the inverse (T1*T2^{-1}) , which attach more meaning to the rigid than just a container. So, this is just a different use-case I guess, maybe this could be added to the rigid as the operator/, it would be somewhat more logical...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3680#issuecomment-1453155623
https://github.com/sofa-framework/sofa/pull/3680#issuecomment-1479115587:125,Usability,clear,clear,125,"Hi @EulalieCoevoet, @hugtalbot, @bakpaul . We discussed this PR today and agree this is nice work to merge... but it was not clear which part of the discussion still hold or not. Can you make a short summary and flag discussion as resolved.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3680#issuecomment-1479115587
https://github.com/sofa-framework/sofa/pull/3680#issuecomment-1494246219:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3680#issuecomment-1494246219
https://github.com/sofa-framework/sofa/pull/3680#issuecomment-1496864717:38,Testability,test,tests,38,[ci-build][force-full-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3680#issuecomment-1496864717
https://github.com/sofa-framework/sofa/pull/3680#issuecomment-1503982594:37,Availability,fault,fault,37,Damned sorry @EulalieCoevoet it's my fault if this PR is not yet merged!; I was supposed to complete my review which I did not successfully take the time to do!,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3680#issuecomment-1503982594
https://github.com/sofa-framework/sofa/pull/3680#issuecomment-1504308000:39,Availability,fault,fault,39,"> Damned sorry @EulalieCoevoet it's my fault if this PR is not yet merged! I was supposed to complete my review which I did not successfully take the time to do!. Actually @hugtalbot your last comment makes me think that RigidMapping is broken,for cases where the Out template parameter for the mapping is templated on CudaVec3Types.; In your comment you mention RigidMappingCuda3f_applyJ which takes const void* for `out` (and `rotated`).; The cuda kernel code just cast them later on with `const float*` will be obviously a problem ü§ê.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3680#issuecomment-1504308000
https://github.com/sofa-framework/sofa/pull/3680#issuecomment-1506101769:38,Testability,test,tests,38,[ci-build][force-full-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3680#issuecomment-1506101769
https://github.com/sofa-framework/sofa/pull/3682#issuecomment-1443953117:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3682#issuecomment-1443953117
https://github.com/sofa-framework/sofa/pull/3683#issuecomment-1443953628:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3683#issuecomment-1443953628
https://github.com/sofa-framework/sofa/pull/3684#issuecomment-1443954117:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3684#issuecomment-1443954117
https://github.com/sofa-framework/sofa/pull/3685#issuecomment-1444206828:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3685#issuecomment-1444206828
https://github.com/sofa-framework/sofa/pull/3686#issuecomment-1444273972:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3686#issuecomment-1444273972
https://github.com/sofa-framework/sofa/pull/3687#issuecomment-1445634986:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3687#issuecomment-1445634986
https://github.com/sofa-framework/sofa/pull/3687#issuecomment-1445913597:201,Integrability,depend,depending,201,"Congratulations @fredroy for finding this problem. If I understand correctly, the problem comes from the fact that two equivalent cubes (in terms of the comparison predicate) are not in the same order depending on the platform (compiler). In my opinion, it creates collision responses that are also ordered differently. And the order in collision responses is important (see https://github.com/sofa-framework/sofa/pull/2067). But I also wonder how two cubes can be equivalent. We compare two floating-point types, more specifically, the center of a cube along the largest dimension. I suspect that both cubes are perfectly aligned in an orthogonal dimension. It is probably due to the construction of the scene (torus are aligned along the X axis), or the symmetry of the geometry. @fredroy do you know when the discrepancy happens? Is it at the very beginning?. If we don't want to use `stable_sort` because it is slower, maybe we can make a smarter comparison predicate? For example, if the largest dimension is equivalent, let's compare the second largest dimension etc.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3687#issuecomment-1445913597
https://github.com/sofa-framework/sofa/pull/3687#issuecomment-1447335507:152,Integrability,depend,depending,152,"> If I understand correctly, the problem comes from the fact that two equivalent cubes (in terms of the comparison predicate) are not in the same order depending on the platform (compiler). In my opinion, it creates collision responses that are also ordered differently. And the order in collision responses is important (see #2067). Yes, but a small precision in this case the determinism is set across the different compilers (and more precisely the different implementations of the STL). A priori the same compiler/libstd will create the same result. > But I also wonder how two cubes can be equivalent. We compare two floating-point types, more specifically, the center of a cube along the largest dimension. I suspect that both cubes are perfectly aligned in an orthogonal dimension. It is probably due to the construction of the scene (torus are aligned along the X axis), or the symmetry of the geometry. @fredroy do you know when the discrepancy happens? Is it at the very beginning?. Yes, at the very beginning.; Here is a dump of the container being sorted (left linux/gcc and right windows/msvc), after running 1 step ; showing { minBBox maxBBox } for each element. ![diff_gcc_msvc](https://user-images.githubusercontent.com/11028016/221719424-3d8e3a07-23cc-47ce-b277-08673889b83e.png). It is trying to sort according to the axis X and you can see the highlighted lines have the same X. > ; > If we don't want to use `stable_sort` because it is slower, maybe we can make a smarter comparison predicate? For example, if the largest dimension is equivalent, let's compare the second largest dimension etc. Yes, it could be an other solution, but in this end, does `sort() + multiple_test_axis_predicate < stable_sort() + oneaxis_predicate` ? not so sure and it would need more benchmarks. And I am sure it will also depend on the data itself...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3687#issuecomment-1447335507
https://github.com/sofa-framework/sofa/pull/3687#issuecomment-1447335507:1825,Integrability,depend,depend,1825,"> If I understand correctly, the problem comes from the fact that two equivalent cubes (in terms of the comparison predicate) are not in the same order depending on the platform (compiler). In my opinion, it creates collision responses that are also ordered differently. And the order in collision responses is important (see #2067). Yes, but a small precision in this case the determinism is set across the different compilers (and more precisely the different implementations of the STL). A priori the same compiler/libstd will create the same result. > But I also wonder how two cubes can be equivalent. We compare two floating-point types, more specifically, the center of a cube along the largest dimension. I suspect that both cubes are perfectly aligned in an orthogonal dimension. It is probably due to the construction of the scene (torus are aligned along the X axis), or the symmetry of the geometry. @fredroy do you know when the discrepancy happens? Is it at the very beginning?. Yes, at the very beginning.; Here is a dump of the container being sorted (left linux/gcc and right windows/msvc), after running 1 step ; showing { minBBox maxBBox } for each element. ![diff_gcc_msvc](https://user-images.githubusercontent.com/11028016/221719424-3d8e3a07-23cc-47ce-b277-08673889b83e.png). It is trying to sort according to the axis X and you can see the highlighted lines have the same X. > ; > If we don't want to use `stable_sort` because it is slower, maybe we can make a smarter comparison predicate? For example, if the largest dimension is equivalent, let's compare the second largest dimension etc. Yes, it could be an other solution, but in this end, does `sort() + multiple_test_axis_predicate < stable_sort() + oneaxis_predicate` ? not so sure and it would need more benchmarks. And I am sure it will also depend on the data itself...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3687#issuecomment-1447335507
https://github.com/sofa-framework/sofa/pull/3687#issuecomment-1447335507:1786,Testability,benchmark,benchmarks,1786,"> If I understand correctly, the problem comes from the fact that two equivalent cubes (in terms of the comparison predicate) are not in the same order depending on the platform (compiler). In my opinion, it creates collision responses that are also ordered differently. And the order in collision responses is important (see #2067). Yes, but a small precision in this case the determinism is set across the different compilers (and more precisely the different implementations of the STL). A priori the same compiler/libstd will create the same result. > But I also wonder how two cubes can be equivalent. We compare two floating-point types, more specifically, the center of a cube along the largest dimension. I suspect that both cubes are perfectly aligned in an orthogonal dimension. It is probably due to the construction of the scene (torus are aligned along the X axis), or the symmetry of the geometry. @fredroy do you know when the discrepancy happens? Is it at the very beginning?. Yes, at the very beginning.; Here is a dump of the container being sorted (left linux/gcc and right windows/msvc), after running 1 step ; showing { minBBox maxBBox } for each element. ![diff_gcc_msvc](https://user-images.githubusercontent.com/11028016/221719424-3d8e3a07-23cc-47ce-b277-08673889b83e.png). It is trying to sort according to the axis X and you can see the highlighted lines have the same X. > ; > If we don't want to use `stable_sort` because it is slower, maybe we can make a smarter comparison predicate? For example, if the largest dimension is equivalent, let's compare the second largest dimension etc. Yes, it could be an other solution, but in this end, does `sort() + multiple_test_axis_predicate < stable_sort() + oneaxis_predicate` ? not so sure and it would need more benchmarks. And I am sure it will also depend on the data itself...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3687#issuecomment-1447335507
https://github.com/sofa-framework/sofa/pull/3687#issuecomment-1461084621:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3687#issuecomment-1461084621
https://github.com/sofa-framework/sofa/pull/3687#issuecomment-1461084716:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3687/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/39**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG cce0053f17acac0eed749911e242b555d918ff9b_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3687#issuecomment-1461084716
https://github.com/sofa-framework/sofa/pull/3687#issuecomment-1461084716:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3687/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/39**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG cce0053f17acac0eed749911e242b555d918ff9b_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3687#issuecomment-1461084716
https://github.com/sofa-framework/sofa/pull/3687#issuecomment-1461484210:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3687/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/39**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG cce0053f17acac0eed749911e242b555d918ff9b_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3687#issuecomment-1461484210
https://github.com/sofa-framework/sofa/pull/3687#issuecomment-1461484210:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3687/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/39**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG cce0053f17acac0eed749911e242b555d918ff9b_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3687#issuecomment-1461484210
https://github.com/sofa-framework/sofa/pull/3687#issuecomment-1469615227:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3687/6/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3687#issuecomment-1469615227
https://github.com/sofa-framework/sofa/pull/3687#issuecomment-1469615227:121,Integrability,depend,dependencies,121,**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3687/6/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3687#issuecomment-1469615227
https://github.com/sofa-framework/sofa/pull/3687#issuecomment-1469615227:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3687/6/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3687#issuecomment-1469615227
https://github.com/sofa-framework/sofa/pull/3688#issuecomment-1446296714:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3688#issuecomment-1446296714
https://github.com/sofa-framework/sofa/pull/3689#issuecomment-1446296117:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3689#issuecomment-1446296117
https://github.com/sofa-framework/sofa/pull/3690#issuecomment-1446298433:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3690#issuecomment-1446298433
https://github.com/sofa-framework/sofa/pull/3691#issuecomment-1446316847:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3691#issuecomment-1446316847
https://github.com/sofa-framework/sofa/pull/3693#issuecomment-1447924517:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3693#issuecomment-1447924517
https://github.com/sofa-framework/sofa/pull/3700#issuecomment-1453369552:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3700#issuecomment-1453369552
https://github.com/sofa-framework/sofa/pull/3701#issuecomment-1453524385:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3701#issuecomment-1453524385
https://github.com/sofa-framework/sofa/pull/3702#issuecomment-1453521407:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3702#issuecomment-1453521407
https://github.com/sofa-framework/sofa/pull/3702#issuecomment-1453521553:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3702/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/337**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 7957a69c147b5cae97293d4a57ae7e7c7d802cb1_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3702#issuecomment-1453521553
https://github.com/sofa-framework/sofa/pull/3702#issuecomment-1453521553:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3702/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/337**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 7957a69c147b5cae97293d4a57ae7e7c7d802cb1_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3702#issuecomment-1453521553
https://github.com/sofa-framework/sofa/pull/3702#issuecomment-1459845157:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3702/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/337**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 7957a69c147b5cae97293d4a57ae7e7c7d802cb1_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3702#issuecomment-1459845157
https://github.com/sofa-framework/sofa/pull/3702#issuecomment-1459845157:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3702/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/337**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 7957a69c147b5cae97293d4a57ae7e7c7d802cb1_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3702#issuecomment-1459845157
https://github.com/sofa-framework/sofa/pull/3702#issuecomment-1459968627:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3702#issuecomment-1459968627
https://github.com/sofa-framework/sofa/pull/3702#issuecomment-1459968751:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3702/4/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3702#issuecomment-1459968751
https://github.com/sofa-framework/sofa/pull/3702#issuecomment-1459968751:121,Integrability,depend,dependencies,121,**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3702/4/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3702#issuecomment-1459968751
https://github.com/sofa-framework/sofa/pull/3702#issuecomment-1459968751:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3702/4/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3702#issuecomment-1459968751
https://github.com/sofa-framework/sofa/pull/3703#issuecomment-1453742166:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3703#issuecomment-1453742166
https://github.com/sofa-framework/sofa/issues/3705#issuecomment-1457371112:325,Availability,down,down,325,"Hello,; would it be possible to provide a simple test?; It seems there is no unit/scene/regression tests which are using Multi2Mapping and its `input2` apparently.; And by just looking at the code, I cannot see why `input2` would be impacted by #3665 as there is no `validator` for input2 üòÖ; It would be much easier to track down the bug, thanks !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3705#issuecomment-1457371112
https://github.com/sofa-framework/sofa/issues/3705#issuecomment-1457371112:267,Security,validat,validator,267,"Hello,; would it be possible to provide a simple test?; It seems there is no unit/scene/regression tests which are using Multi2Mapping and its `input2` apparently.; And by just looking at the code, I cannot see why `input2` would be impacted by #3665 as there is no `validator` for input2 üòÖ; It would be much easier to track down the bug, thanks !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3705#issuecomment-1457371112
https://github.com/sofa-framework/sofa/issues/3705#issuecomment-1457371112:49,Testability,test,test,49,"Hello,; would it be possible to provide a simple test?; It seems there is no unit/scene/regression tests which are using Multi2Mapping and its `input2` apparently.; And by just looking at the code, I cannot see why `input2` would be impacted by #3665 as there is no `validator` for input2 üòÖ; It would be much easier to track down the bug, thanks !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3705#issuecomment-1457371112
https://github.com/sofa-framework/sofa/issues/3705#issuecomment-1457371112:99,Testability,test,tests,99,"Hello,; would it be possible to provide a simple test?; It seems there is no unit/scene/regression tests which are using Multi2Mapping and its `input2` apparently.; And by just looking at the code, I cannot see why `input2` would be impacted by #3665 as there is no `validator` for input2 üòÖ; It would be much easier to track down the bug, thanks !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3705#issuecomment-1457371112
https://github.com/sofa-framework/sofa/issues/3705#issuecomment-1457371112:42,Usability,simpl,simple,42,"Hello,; would it be possible to provide a simple test?; It seems there is no unit/scene/regression tests which are using Multi2Mapping and its `input2` apparently.; And by just looking at the code, I cannot see why `input2` would be impacted by #3665 as there is no `validator` for input2 üòÖ; It would be much easier to track down the bug, thanks !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3705#issuecomment-1457371112
https://github.com/sofa-framework/sofa/pull/3707#issuecomment-1457961088:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3707#issuecomment-1457961088
https://github.com/sofa-framework/sofa/pull/3711#issuecomment-1461503997:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3711#issuecomment-1461503997
https://github.com/sofa-framework/sofa/pull/3714#issuecomment-1463725301:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3714#issuecomment-1463725301
https://github.com/sofa-framework/sofa/pull/3714#issuecomment-1476407555:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3714#issuecomment-1476407555
https://github.com/sofa-framework/sofa/issues/3726#issuecomment-1468328518:120,Testability,test,test,120,Thanks for reporting the issue. It should be fixed in https://github.com/sofa-framework/sofa/pull/3727. Are you able to test the branch to confirm?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3726#issuecomment-1468328518
https://github.com/sofa-framework/sofa/issues/3726#issuecomment-1468384088:16,Testability,test,tested,16,"Amazing, I have tested the branch and it compiles fine. Thank you for your prompt response. ; Please feel free to close the issue when #3727 is merged.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3726#issuecomment-1468384088
https://github.com/sofa-framework/sofa/pull/3737#issuecomment-1478050924:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3737#issuecomment-1478050924
https://github.com/sofa-framework/sofa/pull/3737#issuecomment-1479260603:15,Availability,failure,failure,15,"The unit tests failure came from the fact that the order of the files changed in the CMakeLists.txt. It highlights the facts that `EXPECT_MSG_EMIT` works only if `MainGtestMessageHandler` is added to the `MessageDispatcher`. But `logging_test.cpp` calls `clearHandlers`. Since `logging_test.cpp` is now sorted before `FileSystem_test.cpp`, it clears the message handler required by `FileSystem_test.cpp`. The message handler must be added in any case, and not relying on the fact that it might have been added earlier.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3737#issuecomment-1479260603
https://github.com/sofa-framework/sofa/pull/3737#issuecomment-1479260603:205,Integrability,Message,MessageDispatcher,205,"The unit tests failure came from the fact that the order of the files changed in the CMakeLists.txt. It highlights the facts that `EXPECT_MSG_EMIT` works only if `MainGtestMessageHandler` is added to the `MessageDispatcher`. But `logging_test.cpp` calls `clearHandlers`. Since `logging_test.cpp` is now sorted before `FileSystem_test.cpp`, it clears the message handler required by `FileSystem_test.cpp`. The message handler must be added in any case, and not relying on the fact that it might have been added earlier.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3737#issuecomment-1479260603
https://github.com/sofa-framework/sofa/pull/3737#issuecomment-1479260603:354,Integrability,message,message,354,"The unit tests failure came from the fact that the order of the files changed in the CMakeLists.txt. It highlights the facts that `EXPECT_MSG_EMIT` works only if `MainGtestMessageHandler` is added to the `MessageDispatcher`. But `logging_test.cpp` calls `clearHandlers`. Since `logging_test.cpp` is now sorted before `FileSystem_test.cpp`, it clears the message handler required by `FileSystem_test.cpp`. The message handler must be added in any case, and not relying on the fact that it might have been added earlier.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3737#issuecomment-1479260603
https://github.com/sofa-framework/sofa/pull/3737#issuecomment-1479260603:409,Integrability,message,message,409,"The unit tests failure came from the fact that the order of the files changed in the CMakeLists.txt. It highlights the facts that `EXPECT_MSG_EMIT` works only if `MainGtestMessageHandler` is added to the `MessageDispatcher`. But `logging_test.cpp` calls `clearHandlers`. Since `logging_test.cpp` is now sorted before `FileSystem_test.cpp`, it clears the message handler required by `FileSystem_test.cpp`. The message handler must be added in any case, and not relying on the fact that it might have been added earlier.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3737#issuecomment-1479260603
https://github.com/sofa-framework/sofa/pull/3737#issuecomment-1479260603:9,Testability,test,tests,9,"The unit tests failure came from the fact that the order of the files changed in the CMakeLists.txt. It highlights the facts that `EXPECT_MSG_EMIT` works only if `MainGtestMessageHandler` is added to the `MessageDispatcher`. But `logging_test.cpp` calls `clearHandlers`. Since `logging_test.cpp` is now sorted before `FileSystem_test.cpp`, it clears the message handler required by `FileSystem_test.cpp`. The message handler must be added in any case, and not relying on the fact that it might have been added earlier.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3737#issuecomment-1479260603
https://github.com/sofa-framework/sofa/pull/3737#issuecomment-1479260603:255,Usability,clear,clearHandlers,255,"The unit tests failure came from the fact that the order of the files changed in the CMakeLists.txt. It highlights the facts that `EXPECT_MSG_EMIT` works only if `MainGtestMessageHandler` is added to the `MessageDispatcher`. But `logging_test.cpp` calls `clearHandlers`. Since `logging_test.cpp` is now sorted before `FileSystem_test.cpp`, it clears the message handler required by `FileSystem_test.cpp`. The message handler must be added in any case, and not relying on the fact that it might have been added earlier.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3737#issuecomment-1479260603
https://github.com/sofa-framework/sofa/pull/3737#issuecomment-1479260603:343,Usability,clear,clears,343,"The unit tests failure came from the fact that the order of the files changed in the CMakeLists.txt. It highlights the facts that `EXPECT_MSG_EMIT` works only if `MainGtestMessageHandler` is added to the `MessageDispatcher`. But `logging_test.cpp` calls `clearHandlers`. Since `logging_test.cpp` is now sorted before `FileSystem_test.cpp`, it clears the message handler required by `FileSystem_test.cpp`. The message handler must be added in any case, and not relying on the fact that it might have been added earlier.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3737#issuecomment-1479260603
https://github.com/sofa-framework/sofa/pull/3737#issuecomment-1480398997:17,Availability,failure,failure,17,"> The unit tests failure came from the fact that the order of the files changed in the CMakeLists.txt. It highlights the facts that `EXPECT_MSG_EMIT` works only if `MainGtestMessageHandler` is added to the `MessageDispatcher`. But `logging_test.cpp` calls `clearHandlers`. Since `logging_test.cpp` is now sorted before `FileSystem_test.cpp`, it clears the message handler required by `FileSystem_test.cpp`. The message handler must be added in any case, and not relying on the fact that it might have been added earlier. Well done!; I have added the `breaking` flag due to the change of some signatures for some methods",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3737#issuecomment-1480398997
https://github.com/sofa-framework/sofa/pull/3737#issuecomment-1480398997:207,Integrability,Message,MessageDispatcher,207,"> The unit tests failure came from the fact that the order of the files changed in the CMakeLists.txt. It highlights the facts that `EXPECT_MSG_EMIT` works only if `MainGtestMessageHandler` is added to the `MessageDispatcher`. But `logging_test.cpp` calls `clearHandlers`. Since `logging_test.cpp` is now sorted before `FileSystem_test.cpp`, it clears the message handler required by `FileSystem_test.cpp`. The message handler must be added in any case, and not relying on the fact that it might have been added earlier. Well done!; I have added the `breaking` flag due to the change of some signatures for some methods",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3737#issuecomment-1480398997
https://github.com/sofa-framework/sofa/pull/3737#issuecomment-1480398997:356,Integrability,message,message,356,"> The unit tests failure came from the fact that the order of the files changed in the CMakeLists.txt. It highlights the facts that `EXPECT_MSG_EMIT` works only if `MainGtestMessageHandler` is added to the `MessageDispatcher`. But `logging_test.cpp` calls `clearHandlers`. Since `logging_test.cpp` is now sorted before `FileSystem_test.cpp`, it clears the message handler required by `FileSystem_test.cpp`. The message handler must be added in any case, and not relying on the fact that it might have been added earlier. Well done!; I have added the `breaking` flag due to the change of some signatures for some methods",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3737#issuecomment-1480398997
https://github.com/sofa-framework/sofa/pull/3737#issuecomment-1480398997:411,Integrability,message,message,411,"> The unit tests failure came from the fact that the order of the files changed in the CMakeLists.txt. It highlights the facts that `EXPECT_MSG_EMIT` works only if `MainGtestMessageHandler` is added to the `MessageDispatcher`. But `logging_test.cpp` calls `clearHandlers`. Since `logging_test.cpp` is now sorted before `FileSystem_test.cpp`, it clears the message handler required by `FileSystem_test.cpp`. The message handler must be added in any case, and not relying on the fact that it might have been added earlier. Well done!; I have added the `breaking` flag due to the change of some signatures for some methods",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3737#issuecomment-1480398997
https://github.com/sofa-framework/sofa/pull/3737#issuecomment-1480398997:11,Testability,test,tests,11,"> The unit tests failure came from the fact that the order of the files changed in the CMakeLists.txt. It highlights the facts that `EXPECT_MSG_EMIT` works only if `MainGtestMessageHandler` is added to the `MessageDispatcher`. But `logging_test.cpp` calls `clearHandlers`. Since `logging_test.cpp` is now sorted before `FileSystem_test.cpp`, it clears the message handler required by `FileSystem_test.cpp`. The message handler must be added in any case, and not relying on the fact that it might have been added earlier. Well done!; I have added the `breaking` flag due to the change of some signatures for some methods",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3737#issuecomment-1480398997
https://github.com/sofa-framework/sofa/pull/3737#issuecomment-1480398997:257,Usability,clear,clearHandlers,257,"> The unit tests failure came from the fact that the order of the files changed in the CMakeLists.txt. It highlights the facts that `EXPECT_MSG_EMIT` works only if `MainGtestMessageHandler` is added to the `MessageDispatcher`. But `logging_test.cpp` calls `clearHandlers`. Since `logging_test.cpp` is now sorted before `FileSystem_test.cpp`, it clears the message handler required by `FileSystem_test.cpp`. The message handler must be added in any case, and not relying on the fact that it might have been added earlier. Well done!; I have added the `breaking` flag due to the change of some signatures for some methods",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3737#issuecomment-1480398997
https://github.com/sofa-framework/sofa/pull/3737#issuecomment-1480398997:345,Usability,clear,clears,345,"> The unit tests failure came from the fact that the order of the files changed in the CMakeLists.txt. It highlights the facts that `EXPECT_MSG_EMIT` works only if `MainGtestMessageHandler` is added to the `MessageDispatcher`. But `logging_test.cpp` calls `clearHandlers`. Since `logging_test.cpp` is now sorted before `FileSystem_test.cpp`, it clears the message handler required by `FileSystem_test.cpp`. The message handler must be added in any case, and not relying on the fact that it might have been added earlier. Well done!; I have added the `breaking` flag due to the change of some signatures for some methods",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3737#issuecomment-1480398997
https://github.com/sofa-framework/sofa/pull/3740#issuecomment-1479513307:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3740#issuecomment-1479513307
https://github.com/sofa-framework/sofa/pull/3741#issuecomment-1479514022:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3741#issuecomment-1479514022
https://github.com/sofa-framework/sofa/pull/3742#issuecomment-1479794668:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3742#issuecomment-1479794668
https://github.com/sofa-framework/sofa/pull/3742#issuecomment-1481341479:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3742#issuecomment-1481341479
https://github.com/sofa-framework/sofa/pull/3742#issuecomment-1481341804:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3742/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/40**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 355d9f06109015a3a030591cb1393330890f83ac_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3742#issuecomment-1481341804
https://github.com/sofa-framework/sofa/pull/3742#issuecomment-1481341804:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3742/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/40**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 355d9f06109015a3a030591cb1393330890f83ac_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3742#issuecomment-1481341804
https://github.com/sofa-framework/sofa/pull/3742#issuecomment-1482069576:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3742#issuecomment-1482069576
https://github.com/sofa-framework/sofa/pull/3742#issuecomment-1482069705:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3742/4/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3742#issuecomment-1482069705
https://github.com/sofa-framework/sofa/pull/3742#issuecomment-1482069705:121,Integrability,depend,dependencies,121,**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3742/4/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3742#issuecomment-1482069705
https://github.com/sofa-framework/sofa/pull/3742#issuecomment-1482069705:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3742/4/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3742#issuecomment-1482069705
https://github.com/sofa-framework/sofa/pull/3749#issuecomment-1486763744:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3749#issuecomment-1486763744
https://github.com/sofa-framework/sofa/pull/3751#issuecomment-1489671600:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3751#issuecomment-1489671600
https://github.com/sofa-framework/sofa/pull/3751#issuecomment-1489730917:325,Deployability,release,release,325,"@EulalieCoevoet apparently one of the change does change something, some (all?) scenes using this plugin) crashes:; ```; [SceneTests.applications/plugins/ArticulatedSystemPlugin/examples/ArticulatedArm.robot.py](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3751/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/SceneTests/applications_plugins_ArticulatedSystemPlugin_examples_ArticulatedArm/robot_py/); [SceneTests.applications/plugins/ArticulatedSystemPlugin/examples.ArticulatedHierarchyBVHController.scn](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3751/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/SceneTests/applications_plugins_ArticulatedSystemPlugin_examples/ArticulatedHierarchyBVHController_scn/); [SceneTests.applications/plugins/ArticulatedSystemPlugin/examples.ArticulatedSystemMapping.scn](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3751/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/SceneTests/applications_plugins_ArticulatedSystemPlugin_examples/ArticulatedSystemMapping_scn/); ```; The trace tells it crashes here:; ```; sofa::component::mapping::ArticulatedSystemMapping<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<1u, double>, sofa::type::Vec<1u, double>, double>, sofa::defaulttype::StdRigidTypes<3u, double>, sofa::defaulttype::StdRigidTypes<3u, double> >::applyJT(sofa::defaulttype::MapMapSparseMatrix<sofa::type::Vec<1u, double> >&, sofa::defaulttype::MapMapSparseMatrix<sofa::defaulttype::RigidDeriv<3u, double> > const&, sofa::defaulttype::MapMapSparseMatrix<sofa::defaulttype::RigidDeriv<3u, double> >*); ```; so maybe the typo was not one... üßêüòÖ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3751#issuecomment-1489730917
https://github.com/sofa-framework/sofa/pull/3751#issuecomment-1489730917:662,Deployability,release,release,662,"@EulalieCoevoet apparently one of the change does change something, some (all?) scenes using this plugin) crashes:; ```; [SceneTests.applications/plugins/ArticulatedSystemPlugin/examples/ArticulatedArm.robot.py](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3751/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/SceneTests/applications_plugins_ArticulatedSystemPlugin_examples_ArticulatedArm/robot_py/); [SceneTests.applications/plugins/ArticulatedSystemPlugin/examples.ArticulatedHierarchyBVHController.scn](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3751/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/SceneTests/applications_plugins_ArticulatedSystemPlugin_examples/ArticulatedHierarchyBVHController_scn/); [SceneTests.applications/plugins/ArticulatedSystemPlugin/examples.ArticulatedSystemMapping.scn](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3751/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/SceneTests/applications_plugins_ArticulatedSystemPlugin_examples/ArticulatedSystemMapping_scn/); ```; The trace tells it crashes here:; ```; sofa::component::mapping::ArticulatedSystemMapping<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<1u, double>, sofa::type::Vec<1u, double>, double>, sofa::defaulttype::StdRigidTypes<3u, double>, sofa::defaulttype::StdRigidTypes<3u, double> >::applyJT(sofa::defaulttype::MapMapSparseMatrix<sofa::type::Vec<1u, double> >&, sofa::defaulttype::MapMapSparseMatrix<sofa::defaulttype::RigidDeriv<3u, double> > const&, sofa::defaulttype::MapMapSparseMatrix<sofa::defaulttype::RigidDeriv<3u, double> >*); ```; so maybe the typo was not one... üßêüòÖ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3751#issuecomment-1489730917
https://github.com/sofa-framework/sofa/pull/3751#issuecomment-1489730917:1004,Deployability,release,release,1004,"@EulalieCoevoet apparently one of the change does change something, some (all?) scenes using this plugin) crashes:; ```; [SceneTests.applications/plugins/ArticulatedSystemPlugin/examples/ArticulatedArm.robot.py](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3751/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/SceneTests/applications_plugins_ArticulatedSystemPlugin_examples_ArticulatedArm/robot_py/); [SceneTests.applications/plugins/ArticulatedSystemPlugin/examples.ArticulatedHierarchyBVHController.scn](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3751/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/SceneTests/applications_plugins_ArticulatedSystemPlugin_examples/ArticulatedHierarchyBVHController_scn/); [SceneTests.applications/plugins/ArticulatedSystemPlugin/examples.ArticulatedSystemMapping.scn](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3751/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/SceneTests/applications_plugins_ArticulatedSystemPlugin_examples/ArticulatedSystemMapping_scn/); ```; The trace tells it crashes here:; ```; sofa::component::mapping::ArticulatedSystemMapping<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<1u, double>, sofa::type::Vec<1u, double>, double>, sofa::defaulttype::StdRigidTypes<3u, double>, sofa::defaulttype::StdRigidTypes<3u, double> >::applyJT(sofa::defaulttype::MapMapSparseMatrix<sofa::type::Vec<1u, double> >&, sofa::defaulttype::MapMapSparseMatrix<sofa::defaulttype::RigidDeriv<3u, double> > const&, sofa::defaulttype::MapMapSparseMatrix<sofa::defaulttype::RigidDeriv<3u, double> >*); ```; so maybe the typo was not one... üßêüòÖ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3751#issuecomment-1489730917
https://github.com/sofa-framework/sofa/pull/3751#issuecomment-1489730917:98,Modifiability,plugin,plugin,98,"@EulalieCoevoet apparently one of the change does change something, some (all?) scenes using this plugin) crashes:; ```; [SceneTests.applications/plugins/ArticulatedSystemPlugin/examples/ArticulatedArm.robot.py](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3751/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/SceneTests/applications_plugins_ArticulatedSystemPlugin_examples_ArticulatedArm/robot_py/); [SceneTests.applications/plugins/ArticulatedSystemPlugin/examples.ArticulatedHierarchyBVHController.scn](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3751/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/SceneTests/applications_plugins_ArticulatedSystemPlugin_examples/ArticulatedHierarchyBVHController_scn/); [SceneTests.applications/plugins/ArticulatedSystemPlugin/examples.ArticulatedSystemMapping.scn](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3751/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/SceneTests/applications_plugins_ArticulatedSystemPlugin_examples/ArticulatedSystemMapping_scn/); ```; The trace tells it crashes here:; ```; sofa::component::mapping::ArticulatedSystemMapping<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<1u, double>, sofa::type::Vec<1u, double>, double>, sofa::defaulttype::StdRigidTypes<3u, double>, sofa::defaulttype::StdRigidTypes<3u, double> >::applyJT(sofa::defaulttype::MapMapSparseMatrix<sofa::type::Vec<1u, double> >&, sofa::defaulttype::MapMapSparseMatrix<sofa::defaulttype::RigidDeriv<3u, double> > const&, sofa::defaulttype::MapMapSparseMatrix<sofa::defaulttype::RigidDeriv<3u, double> >*); ```; so maybe the typo was not one... üßêüòÖ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3751#issuecomment-1489730917
https://github.com/sofa-framework/sofa/pull/3751#issuecomment-1489730917:146,Modifiability,plugin,plugins,146,"@EulalieCoevoet apparently one of the change does change something, some (all?) scenes using this plugin) crashes:; ```; [SceneTests.applications/plugins/ArticulatedSystemPlugin/examples/ArticulatedArm.robot.py](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3751/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/SceneTests/applications_plugins_ArticulatedSystemPlugin_examples_ArticulatedArm/robot_py/); [SceneTests.applications/plugins/ArticulatedSystemPlugin/examples.ArticulatedHierarchyBVHController.scn](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3751/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/SceneTests/applications_plugins_ArticulatedSystemPlugin_examples/ArticulatedHierarchyBVHController_scn/); [SceneTests.applications/plugins/ArticulatedSystemPlugin/examples.ArticulatedSystemMapping.scn](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3751/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/SceneTests/applications_plugins_ArticulatedSystemPlugin_examples/ArticulatedSystemMapping_scn/); ```; The trace tells it crashes here:; ```; sofa::component::mapping::ArticulatedSystemMapping<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<1u, double>, sofa::type::Vec<1u, double>, double>, sofa::defaulttype::StdRigidTypes<3u, double>, sofa::defaulttype::StdRigidTypes<3u, double> >::applyJT(sofa::defaulttype::MapMapSparseMatrix<sofa::type::Vec<1u, double> >&, sofa::defaulttype::MapMapSparseMatrix<sofa::defaulttype::RigidDeriv<3u, double> > const&, sofa::defaulttype::MapMapSparseMatrix<sofa::defaulttype::RigidDeriv<3u, double> >*); ```; so maybe the typo was not one... üßêüòÖ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3751#issuecomment-1489730917
https://github.com/sofa-framework/sofa/pull/3751#issuecomment-1489730917:469,Modifiability,plugin,plugins,469,"@EulalieCoevoet apparently one of the change does change something, some (all?) scenes using this plugin) crashes:; ```; [SceneTests.applications/plugins/ArticulatedSystemPlugin/examples/ArticulatedArm.robot.py](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3751/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/SceneTests/applications_plugins_ArticulatedSystemPlugin_examples_ArticulatedArm/robot_py/); [SceneTests.applications/plugins/ArticulatedSystemPlugin/examples.ArticulatedHierarchyBVHController.scn](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3751/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/SceneTests/applications_plugins_ArticulatedSystemPlugin_examples/ArticulatedHierarchyBVHController_scn/); [SceneTests.applications/plugins/ArticulatedSystemPlugin/examples.ArticulatedSystemMapping.scn](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3751/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/SceneTests/applications_plugins_ArticulatedSystemPlugin_examples/ArticulatedSystemMapping_scn/); ```; The trace tells it crashes here:; ```; sofa::component::mapping::ArticulatedSystemMapping<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<1u, double>, sofa::type::Vec<1u, double>, double>, sofa::defaulttype::StdRigidTypes<3u, double>, sofa::defaulttype::StdRigidTypes<3u, double> >::applyJT(sofa::defaulttype::MapMapSparseMatrix<sofa::type::Vec<1u, double> >&, sofa::defaulttype::MapMapSparseMatrix<sofa::defaulttype::RigidDeriv<3u, double> > const&, sofa::defaulttype::MapMapSparseMatrix<sofa::defaulttype::RigidDeriv<3u, double> >*); ```; so maybe the typo was not one... üßêüòÖ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3751#issuecomment-1489730917
https://github.com/sofa-framework/sofa/pull/3751#issuecomment-1489730917:820,Modifiability,plugin,plugins,820,"@EulalieCoevoet apparently one of the change does change something, some (all?) scenes using this plugin) crashes:; ```; [SceneTests.applications/plugins/ArticulatedSystemPlugin/examples/ArticulatedArm.robot.py](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3751/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/SceneTests/applications_plugins_ArticulatedSystemPlugin_examples_ArticulatedArm/robot_py/); [SceneTests.applications/plugins/ArticulatedSystemPlugin/examples.ArticulatedHierarchyBVHController.scn](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3751/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/SceneTests/applications_plugins_ArticulatedSystemPlugin_examples/ArticulatedHierarchyBVHController_scn/); [SceneTests.applications/plugins/ArticulatedSystemPlugin/examples.ArticulatedSystemMapping.scn](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3751/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/SceneTests/applications_plugins_ArticulatedSystemPlugin_examples/ArticulatedSystemMapping_scn/); ```; The trace tells it crashes here:; ```; sofa::component::mapping::ArticulatedSystemMapping<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<1u, double>, sofa::type::Vec<1u, double>, double>, sofa::defaulttype::StdRigidTypes<3u, double>, sofa::defaulttype::StdRigidTypes<3u, double> >::applyJT(sofa::defaulttype::MapMapSparseMatrix<sofa::type::Vec<1u, double> >&, sofa::defaulttype::MapMapSparseMatrix<sofa::defaulttype::RigidDeriv<3u, double> > const&, sofa::defaulttype::MapMapSparseMatrix<sofa::defaulttype::RigidDeriv<3u, double> >*); ```; so maybe the typo was not one... üßêüòÖ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3751#issuecomment-1489730917
https://github.com/sofa-framework/sofa/pull/3751#issuecomment-1489730917:335,Testability,test,testReport,335,"@EulalieCoevoet apparently one of the change does change something, some (all?) scenes using this plugin) crashes:; ```; [SceneTests.applications/plugins/ArticulatedSystemPlugin/examples/ArticulatedArm.robot.py](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3751/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/SceneTests/applications_plugins_ArticulatedSystemPlugin_examples_ArticulatedArm/robot_py/); [SceneTests.applications/plugins/ArticulatedSystemPlugin/examples.ArticulatedHierarchyBVHController.scn](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3751/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/SceneTests/applications_plugins_ArticulatedSystemPlugin_examples/ArticulatedHierarchyBVHController_scn/); [SceneTests.applications/plugins/ArticulatedSystemPlugin/examples.ArticulatedSystemMapping.scn](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3751/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/SceneTests/applications_plugins_ArticulatedSystemPlugin_examples/ArticulatedSystemMapping_scn/); ```; The trace tells it crashes here:; ```; sofa::component::mapping::ArticulatedSystemMapping<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<1u, double>, sofa::type::Vec<1u, double>, double>, sofa::defaulttype::StdRigidTypes<3u, double>, sofa::defaulttype::StdRigidTypes<3u, double> >::applyJT(sofa::defaulttype::MapMapSparseMatrix<sofa::type::Vec<1u, double> >&, sofa::defaulttype::MapMapSparseMatrix<sofa::defaulttype::RigidDeriv<3u, double> > const&, sofa::defaulttype::MapMapSparseMatrix<sofa::defaulttype::RigidDeriv<3u, double> >*); ```; so maybe the typo was not one... üßêüòÖ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3751#issuecomment-1489730917
https://github.com/sofa-framework/sofa/pull/3751#issuecomment-1489730917:672,Testability,test,testReport,672,"@EulalieCoevoet apparently one of the change does change something, some (all?) scenes using this plugin) crashes:; ```; [SceneTests.applications/plugins/ArticulatedSystemPlugin/examples/ArticulatedArm.robot.py](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3751/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/SceneTests/applications_plugins_ArticulatedSystemPlugin_examples_ArticulatedArm/robot_py/); [SceneTests.applications/plugins/ArticulatedSystemPlugin/examples.ArticulatedHierarchyBVHController.scn](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3751/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/SceneTests/applications_plugins_ArticulatedSystemPlugin_examples/ArticulatedHierarchyBVHController_scn/); [SceneTests.applications/plugins/ArticulatedSystemPlugin/examples.ArticulatedSystemMapping.scn](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3751/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/SceneTests/applications_plugins_ArticulatedSystemPlugin_examples/ArticulatedSystemMapping_scn/); ```; The trace tells it crashes here:; ```; sofa::component::mapping::ArticulatedSystemMapping<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<1u, double>, sofa::type::Vec<1u, double>, double>, sofa::defaulttype::StdRigidTypes<3u, double>, sofa::defaulttype::StdRigidTypes<3u, double> >::applyJT(sofa::defaulttype::MapMapSparseMatrix<sofa::type::Vec<1u, double> >&, sofa::defaulttype::MapMapSparseMatrix<sofa::defaulttype::RigidDeriv<3u, double> > const&, sofa::defaulttype::MapMapSparseMatrix<sofa::defaulttype::RigidDeriv<3u, double> >*); ```; so maybe the typo was not one... üßêüòÖ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3751#issuecomment-1489730917
https://github.com/sofa-framework/sofa/pull/3751#issuecomment-1489730917:1014,Testability,test,testReport,1014,"@EulalieCoevoet apparently one of the change does change something, some (all?) scenes using this plugin) crashes:; ```; [SceneTests.applications/plugins/ArticulatedSystemPlugin/examples/ArticulatedArm.robot.py](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3751/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/SceneTests/applications_plugins_ArticulatedSystemPlugin_examples_ArticulatedArm/robot_py/); [SceneTests.applications/plugins/ArticulatedSystemPlugin/examples.ArticulatedHierarchyBVHController.scn](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3751/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/SceneTests/applications_plugins_ArticulatedSystemPlugin_examples/ArticulatedHierarchyBVHController_scn/); [SceneTests.applications/plugins/ArticulatedSystemPlugin/examples.ArticulatedSystemMapping.scn](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3751/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/SceneTests/applications_plugins_ArticulatedSystemPlugin_examples/ArticulatedSystemMapping_scn/); ```; The trace tells it crashes here:; ```; sofa::component::mapping::ArticulatedSystemMapping<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<1u, double>, sofa::type::Vec<1u, double>, double>, sofa::defaulttype::StdRigidTypes<3u, double>, sofa::defaulttype::StdRigidTypes<3u, double> >::applyJT(sofa::defaulttype::MapMapSparseMatrix<sofa::type::Vec<1u, double> >&, sofa::defaulttype::MapMapSparseMatrix<sofa::defaulttype::RigidDeriv<3u, double> > const&, sofa::defaulttype::MapMapSparseMatrix<sofa::defaulttype::RigidDeriv<3u, double> >*); ```; so maybe the typo was not one... üßêüòÖ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3751#issuecomment-1489730917
https://github.com/sofa-framework/sofa/pull/3751#issuecomment-1490409382:100,Modifiability,plugin,plugin,100,"> @EulalieCoevoet apparently one of the change does change something, some (all?) scenes using this plugin) crashes:; > so maybe the typo was not one... Oops I forgot that `input2` was an option. ; The problem should be fixed now : in `applyJT()` I moved the `m_fromRootModel->read()` after the check that it is not a nullptr.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3751#issuecomment-1490409382
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486037146:27,Availability,error,error,27,"Hello,; I think the actual error is in the output of the Cmake Gui(bottom part), could you copy-paste it ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486037146
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062:83,Availability,error,error,83,"Thank you for your response. Yesterday I tried with my home PC and it occured that error. Today I'm trying with my office PC and it occurs another error but still in the same process. Here is the log:. ```; -- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).; Install prefix: /home/giangnguyen/sofa/build/install; Adding library Sofa.Config; Using legacy headers is enabled.; Headers from v21.12 are usable, but it is advised to change your code to use the new headers introduced in v22.06.; Adding library Sofa.Compat; Adding library Sofa.Component.Compat; Adding library Sofa.Type; Adding library Sofa.Geometry; Adding library Sofa.Topology; Adding library Sofa.Helper; Adding library Sofa.LinearAlgebra; Adding library Sofa.DefaultType; Adding library Sofa.Core; Adding library Sofa.Simulation; Adding library Sofa.Simulation.Core; Adding library Sofa.Simulation.Common; Adding library Sofa.Simulation.Graph; Adding library Sofa.Testing; Found PythonInterp: /usr/bin/python3.8 (found version ""3.8.10"") ; Adding library Sofa.Framework; Adding module Sofa.Component; Adding module Sofa.Component.ODESolver; Adding module Sofa.Component.ODESolver.Forward; Adding module Sofa.Component.ODESolver.Backward; Adding module Sofa.Component.IO; Adding module Sofa.Component.IO.Mesh; Adding module Sofa.Component.Playback; Adding module Sofa.Component.SceneUtility; Adding module Sofa.Component.Topology; Adding module Sofa.Component.Topology.Container; Adding module Sofa.Component.Topology.Container.Constant; Adding module Sofa.Component.Topology.Container.Dynamic; Adding module Sofa.Component.Topology.Container.Grid; Adding module Sofa.Component.Topology.Mapping; Adding module Sofa.Component.Topology.Utility; Adding module Sofa.Component.Visual; Adding module Sofa.Component.LinearSolver; Adding module Sofa.Component.LinearSolver.Iterative; Adding module Sofa.Component.LinearSolver.Direct; Sofa.Component.LinearSolver.Direct: using built-in metis library; Adding m",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062:147,Availability,error,error,147,"Thank you for your response. Yesterday I tried with my home PC and it occured that error. Today I'm trying with my office PC and it occurs another error but still in the same process. Here is the log:. ```; -- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).; Install prefix: /home/giangnguyen/sofa/build/install; Adding library Sofa.Config; Using legacy headers is enabled.; Headers from v21.12 are usable, but it is advised to change your code to use the new headers introduced in v22.06.; Adding library Sofa.Compat; Adding library Sofa.Component.Compat; Adding library Sofa.Type; Adding library Sofa.Geometry; Adding library Sofa.Topology; Adding library Sofa.Helper; Adding library Sofa.LinearAlgebra; Adding library Sofa.DefaultType; Adding library Sofa.Core; Adding library Sofa.Simulation; Adding library Sofa.Simulation.Core; Adding library Sofa.Simulation.Common; Adding library Sofa.Simulation.Graph; Adding library Sofa.Testing; Found PythonInterp: /usr/bin/python3.8 (found version ""3.8.10"") ; Adding library Sofa.Framework; Adding module Sofa.Component; Adding module Sofa.Component.ODESolver; Adding module Sofa.Component.ODESolver.Forward; Adding module Sofa.Component.ODESolver.Backward; Adding module Sofa.Component.IO; Adding module Sofa.Component.IO.Mesh; Adding module Sofa.Component.Playback; Adding module Sofa.Component.SceneUtility; Adding module Sofa.Component.Topology; Adding module Sofa.Component.Topology.Container; Adding module Sofa.Component.Topology.Container.Constant; Adding module Sofa.Component.Topology.Container.Dynamic; Adding module Sofa.Component.Topology.Container.Grid; Adding module Sofa.Component.Topology.Mapping; Adding module Sofa.Component.Topology.Utility; Adding module Sofa.Component.Visual; Adding module Sofa.Component.LinearSolver; Adding module Sofa.Component.LinearSolver.Iterative; Adding module Sofa.Component.LinearSolver.Direct; Sofa.Component.LinearSolver.Direct: using built-in metis library; Adding m",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062:6887,Availability,Error,Error,6887," Adding collection SofaGeneralRigid; Adding collection SofaGeneralSimpleFem; Adding collection SofaGeneralTopology; Adding collection SofaTopologyMapping; Adding collection SofaUserInteraction; Adding collection SofaConstraint; Adding collection SofaGeneralLoader; Adding collection SofaExporter; Adding collection SofaSparseSolver; Adding collection SofaPreconditioner; Adding collection SofaDenseSolver; Adding collection SofaNonUniformFem; Adding collection SofaOpenglVisual; Adding collection SofaMiscTopology; Adding collection SofaMiscExtra; Adding collection SofaMiscForceField; Adding collection SofaMiscEngine; Adding collection SofaMiscSolver; Adding collection SofaMiscFem; Adding collection SofaMiscMapping; Adding collection SofaMiscCollision; Adding collection SofaHaptics; Adding plugin SofaValidation; Adding collection SofaGeneralObjectInteraction; Adding collection SofaCommon; Adding collection SofaGeneral; Adding collection SofaAdvanced; Adding collection SofaMisc; Adding collection SofaComponentAll; Adding plugin SceneCreator; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin ArticulatedSystemPlugin; SofaPython3 is compiled as a subproject to the external project 'Sofa'.; Adding plugin SofaPython3; CMake Error at applications/plugins/SofaPython3/CMakeLists.txt:114 (find_package):; Could not find a package configuration file provided by ""pybind11""; (requested version 2.3) with any of the following names:. pybind11Config.cmake; pybind11-config.cmake. Add the installation prefix of ""pybind11"" to CMAKE_PREFIX_PATH or set; ""pybind11_DIR"" to a directory containing one of the above files. If; ""pybind11"" provides a separate development package or SDK, be sure it has; been installed. Configuring incomplete, errors occurred!; See also ""/home/giangnguyen/sofa/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/giangnguyen/sofa/build/CMakeFiles/CMakeError.log"".; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062:7391,Availability,error,errors,7391," Adding collection SofaGeneralRigid; Adding collection SofaGeneralSimpleFem; Adding collection SofaGeneralTopology; Adding collection SofaTopologyMapping; Adding collection SofaUserInteraction; Adding collection SofaConstraint; Adding collection SofaGeneralLoader; Adding collection SofaExporter; Adding collection SofaSparseSolver; Adding collection SofaPreconditioner; Adding collection SofaDenseSolver; Adding collection SofaNonUniformFem; Adding collection SofaOpenglVisual; Adding collection SofaMiscTopology; Adding collection SofaMiscExtra; Adding collection SofaMiscForceField; Adding collection SofaMiscEngine; Adding collection SofaMiscSolver; Adding collection SofaMiscFem; Adding collection SofaMiscMapping; Adding collection SofaMiscCollision; Adding collection SofaHaptics; Adding plugin SofaValidation; Adding collection SofaGeneralObjectInteraction; Adding collection SofaCommon; Adding collection SofaGeneral; Adding collection SofaAdvanced; Adding collection SofaMisc; Adding collection SofaComponentAll; Adding plugin SceneCreator; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin ArticulatedSystemPlugin; SofaPython3 is compiled as a subproject to the external project 'Sofa'.; Adding plugin SofaPython3; CMake Error at applications/plugins/SofaPython3/CMakeLists.txt:114 (find_package):; Could not find a package configuration file provided by ""pybind11""; (requested version 2.3) with any of the following names:. pybind11Config.cmake; pybind11-config.cmake. Add the installation prefix of ""pybind11"" to CMAKE_PREFIX_PATH or set; ""pybind11_DIR"" to a directory containing one of the above files. If; ""pybind11"" provides a separate development package or SDK, be sure it has; been installed. Configuring incomplete, errors occurred!; See also ""/home/giangnguyen/sofa/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/giangnguyen/sofa/build/CMakeFiles/CMakeError.log"".; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062:295,Deployability,Install,Install,295,"Thank you for your response. Yesterday I tried with my home PC and it occured that error. Today I'm trying with my office PC and it occurs another error but still in the same process. Here is the log:. ```; -- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).; Install prefix: /home/giangnguyen/sofa/build/install; Adding library Sofa.Config; Using legacy headers is enabled.; Headers from v21.12 are usable, but it is advised to change your code to use the new headers introduced in v22.06.; Adding library Sofa.Compat; Adding library Sofa.Component.Compat; Adding library Sofa.Type; Adding library Sofa.Geometry; Adding library Sofa.Topology; Adding library Sofa.Helper; Adding library Sofa.LinearAlgebra; Adding library Sofa.DefaultType; Adding library Sofa.Core; Adding library Sofa.Simulation; Adding library Sofa.Simulation.Core; Adding library Sofa.Simulation.Common; Adding library Sofa.Simulation.Graph; Adding library Sofa.Testing; Found PythonInterp: /usr/bin/python3.8 (found version ""3.8.10"") ; Adding library Sofa.Framework; Adding module Sofa.Component; Adding module Sofa.Component.ODESolver; Adding module Sofa.Component.ODESolver.Forward; Adding module Sofa.Component.ODESolver.Backward; Adding module Sofa.Component.IO; Adding module Sofa.Component.IO.Mesh; Adding module Sofa.Component.Playback; Adding module Sofa.Component.SceneUtility; Adding module Sofa.Component.Topology; Adding module Sofa.Component.Topology.Container; Adding module Sofa.Component.Topology.Container.Constant; Adding module Sofa.Component.Topology.Container.Dynamic; Adding module Sofa.Component.Topology.Container.Grid; Adding module Sofa.Component.Topology.Mapping; Adding module Sofa.Component.Topology.Utility; Adding module Sofa.Component.Visual; Adding module Sofa.Component.LinearSolver; Adding module Sofa.Component.LinearSolver.Iterative; Adding module Sofa.Component.LinearSolver.Direct; Sofa.Component.LinearSolver.Direct: using built-in metis library; Adding m",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062:340,Deployability,install,install,340,"Thank you for your response. Yesterday I tried with my home PC and it occured that error. Today I'm trying with my office PC and it occurs another error but still in the same process. Here is the log:. ```; -- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).; Install prefix: /home/giangnguyen/sofa/build/install; Adding library Sofa.Config; Using legacy headers is enabled.; Headers from v21.12 are usable, but it is advised to change your code to use the new headers introduced in v22.06.; Adding library Sofa.Compat; Adding library Sofa.Component.Compat; Adding library Sofa.Type; Adding library Sofa.Geometry; Adding library Sofa.Topology; Adding library Sofa.Helper; Adding library Sofa.LinearAlgebra; Adding library Sofa.DefaultType; Adding library Sofa.Core; Adding library Sofa.Simulation; Adding library Sofa.Simulation.Core; Adding library Sofa.Simulation.Common; Adding library Sofa.Simulation.Graph; Adding library Sofa.Testing; Found PythonInterp: /usr/bin/python3.8 (found version ""3.8.10"") ; Adding library Sofa.Framework; Adding module Sofa.Component; Adding module Sofa.Component.ODESolver; Adding module Sofa.Component.ODESolver.Forward; Adding module Sofa.Component.ODESolver.Backward; Adding module Sofa.Component.IO; Adding module Sofa.Component.IO.Mesh; Adding module Sofa.Component.Playback; Adding module Sofa.Component.SceneUtility; Adding module Sofa.Component.Topology; Adding module Sofa.Component.Topology.Container; Adding module Sofa.Component.Topology.Container.Constant; Adding module Sofa.Component.Topology.Container.Dynamic; Adding module Sofa.Component.Topology.Container.Grid; Adding module Sofa.Component.Topology.Mapping; Adding module Sofa.Component.Topology.Utility; Adding module Sofa.Component.Visual; Adding module Sofa.Component.LinearSolver; Adding module Sofa.Component.LinearSolver.Iterative; Adding module Sofa.Component.LinearSolver.Direct; Sofa.Component.LinearSolver.Direct: using built-in metis library; Adding m",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062:6990,Deployability,configurat,configuration,6990," Adding collection SofaGeneralRigid; Adding collection SofaGeneralSimpleFem; Adding collection SofaGeneralTopology; Adding collection SofaTopologyMapping; Adding collection SofaUserInteraction; Adding collection SofaConstraint; Adding collection SofaGeneralLoader; Adding collection SofaExporter; Adding collection SofaSparseSolver; Adding collection SofaPreconditioner; Adding collection SofaDenseSolver; Adding collection SofaNonUniformFem; Adding collection SofaOpenglVisual; Adding collection SofaMiscTopology; Adding collection SofaMiscExtra; Adding collection SofaMiscForceField; Adding collection SofaMiscEngine; Adding collection SofaMiscSolver; Adding collection SofaMiscFem; Adding collection SofaMiscMapping; Adding collection SofaMiscCollision; Adding collection SofaHaptics; Adding plugin SofaValidation; Adding collection SofaGeneralObjectInteraction; Adding collection SofaCommon; Adding collection SofaGeneral; Adding collection SofaAdvanced; Adding collection SofaMisc; Adding collection SofaComponentAll; Adding plugin SceneCreator; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin ArticulatedSystemPlugin; SofaPython3 is compiled as a subproject to the external project 'Sofa'.; Adding plugin SofaPython3; CMake Error at applications/plugins/SofaPython3/CMakeLists.txt:114 (find_package):; Could not find a package configuration file provided by ""pybind11""; (requested version 2.3) with any of the following names:. pybind11Config.cmake; pybind11-config.cmake. Add the installation prefix of ""pybind11"" to CMAKE_PREFIX_PATH or set; ""pybind11_DIR"" to a directory containing one of the above files. If; ""pybind11"" provides a separate development package or SDK, be sure it has; been installed. Configuring incomplete, errors occurred!; See also ""/home/giangnguyen/sofa/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/giangnguyen/sofa/build/CMakeFiles/CMakeError.log"".; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062:7144,Deployability,install,installation,7144," Adding collection SofaGeneralRigid; Adding collection SofaGeneralSimpleFem; Adding collection SofaGeneralTopology; Adding collection SofaTopologyMapping; Adding collection SofaUserInteraction; Adding collection SofaConstraint; Adding collection SofaGeneralLoader; Adding collection SofaExporter; Adding collection SofaSparseSolver; Adding collection SofaPreconditioner; Adding collection SofaDenseSolver; Adding collection SofaNonUniformFem; Adding collection SofaOpenglVisual; Adding collection SofaMiscTopology; Adding collection SofaMiscExtra; Adding collection SofaMiscForceField; Adding collection SofaMiscEngine; Adding collection SofaMiscSolver; Adding collection SofaMiscFem; Adding collection SofaMiscMapping; Adding collection SofaMiscCollision; Adding collection SofaHaptics; Adding plugin SofaValidation; Adding collection SofaGeneralObjectInteraction; Adding collection SofaCommon; Adding collection SofaGeneral; Adding collection SofaAdvanced; Adding collection SofaMisc; Adding collection SofaComponentAll; Adding plugin SceneCreator; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin ArticulatedSystemPlugin; SofaPython3 is compiled as a subproject to the external project 'Sofa'.; Adding plugin SofaPython3; CMake Error at applications/plugins/SofaPython3/CMakeLists.txt:114 (find_package):; Could not find a package configuration file provided by ""pybind11""; (requested version 2.3) with any of the following names:. pybind11Config.cmake; pybind11-config.cmake. Add the installation prefix of ""pybind11"" to CMAKE_PREFIX_PATH or set; ""pybind11_DIR"" to a directory containing one of the above files. If; ""pybind11"" provides a separate development package or SDK, be sure it has; been installed. Configuring incomplete, errors occurred!; See also ""/home/giangnguyen/sofa/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/giangnguyen/sofa/build/CMakeFiles/CMakeError.log"".; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062:7356,Deployability,install,installed,7356," Adding collection SofaGeneralRigid; Adding collection SofaGeneralSimpleFem; Adding collection SofaGeneralTopology; Adding collection SofaTopologyMapping; Adding collection SofaUserInteraction; Adding collection SofaConstraint; Adding collection SofaGeneralLoader; Adding collection SofaExporter; Adding collection SofaSparseSolver; Adding collection SofaPreconditioner; Adding collection SofaDenseSolver; Adding collection SofaNonUniformFem; Adding collection SofaOpenglVisual; Adding collection SofaMiscTopology; Adding collection SofaMiscExtra; Adding collection SofaMiscForceField; Adding collection SofaMiscEngine; Adding collection SofaMiscSolver; Adding collection SofaMiscFem; Adding collection SofaMiscMapping; Adding collection SofaMiscCollision; Adding collection SofaHaptics; Adding plugin SofaValidation; Adding collection SofaGeneralObjectInteraction; Adding collection SofaCommon; Adding collection SofaGeneral; Adding collection SofaAdvanced; Adding collection SofaMisc; Adding collection SofaComponentAll; Adding plugin SceneCreator; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin ArticulatedSystemPlugin; SofaPython3 is compiled as a subproject to the external project 'Sofa'.; Adding plugin SofaPython3; CMake Error at applications/plugins/SofaPython3/CMakeLists.txt:114 (find_package):; Could not find a package configuration file provided by ""pybind11""; (requested version 2.3) with any of the following names:. pybind11Config.cmake; pybind11-config.cmake. Add the installation prefix of ""pybind11"" to CMAKE_PREFIX_PATH or set; ""pybind11_DIR"" to a directory containing one of the above files. If; ""pybind11"" provides a separate development package or SDK, be sure it has; been installed. Configuring incomplete, errors occurred!; See also ""/home/giangnguyen/sofa/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/giangnguyen/sofa/build/CMakeFiles/CMakeError.log"".; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062:4252,Integrability,depend,dependent,4252,"t.Collision.Detection; Adding module Sofa.Component.Collision.Detection.Algorithm; Adding module Sofa.Component.Collision.Detection.Intersection; Adding module Sofa.Component.Collision.Response; Adding module Sofa.Component.Collision.Response.Mapper; Adding module Sofa.Component.Collision.Response.Contact; Adding module Sofa.Component.Setting; Adding module Sofa.Component.Controller; Adding module Sofa.Component.Engine; Adding module Sofa.Component.Engine.Analyze; Adding module Sofa.Component.Engine.Generate; Adding module Sofa.Component.Engine.Select; Adding module Sofa.Component.Engine.Transform; Adding module Sofa.Component.Haptics; Adding library Sofa.GL; Adding module Sofa.GL.Component; Adding module Sofa.GL.Component.Rendering2D; Adding module Sofa.GL.Component.Rendering3D; Adding module Sofa.GL.Component.Engine; Adding module Sofa.GL.Component.Shader; Adding module Sofa.GUI.Component; Adding library Sofa.GUI.Common; cxxopts version 2.2.0; -- Sofa.GUI.Common: Sofa.GL dependent features enabled.; Adding library Sofa.GUI.Batch; Adding library Sofa.GUI.Qt; Sofa.GUI.Qt: will use Qt5; Sofa.GUI.Qt: Qt5Charts not found. No chart nor Profile will be compiled; -- FFmpeg executable was found /usr/bin/ffmpeg; Sofa.GUI.Qt: QtCharts not found, SofaWindowProfiler will not be built.; Sofa.GUI.Qt: Qt5WebEngine not found, QDocBrowser will not be built.; Adding collection SofaGui; Adding collection SofaGuiCommon; Adding collection SofaGuiQt; Adding collection SofaFramework; Adding collection SofaSimulation; Adding collection SofaBase; Adding collection SofaSimpleFem; Adding collection SofaRigid; Adding collection SofaDeformable; Adding collection SofaObjectInteraction; Adding collection SofaMeshCollision; Adding collection SofaEngine; Adding collection SofaExplicitOdeSolver; Adding collection SofaImplicitOdeSolver; Adding collection SofaLoader; Adding collection SofaGeneralVisual; Adding collection SofaGraphComponent; Adding collection SofaGeneralMeshCollision; Adding collectio",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062:369,Modifiability,Config,Config,369,"Thank you for your response. Yesterday I tried with my home PC and it occured that error. Today I'm trying with my office PC and it occurs another error but still in the same process. Here is the log:. ```; -- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).; Install prefix: /home/giangnguyen/sofa/build/install; Adding library Sofa.Config; Using legacy headers is enabled.; Headers from v21.12 are usable, but it is advised to change your code to use the new headers introduced in v22.06.; Adding library Sofa.Compat; Adding library Sofa.Component.Compat; Adding library Sofa.Type; Adding library Sofa.Geometry; Adding library Sofa.Topology; Adding library Sofa.Helper; Adding library Sofa.LinearAlgebra; Adding library Sofa.DefaultType; Adding library Sofa.Core; Adding library Sofa.Simulation; Adding library Sofa.Simulation.Core; Adding library Sofa.Simulation.Common; Adding library Sofa.Simulation.Graph; Adding library Sofa.Testing; Found PythonInterp: /usr/bin/python3.8 (found version ""3.8.10"") ; Adding library Sofa.Framework; Adding module Sofa.Component; Adding module Sofa.Component.ODESolver; Adding module Sofa.Component.ODESolver.Forward; Adding module Sofa.Component.ODESolver.Backward; Adding module Sofa.Component.IO; Adding module Sofa.Component.IO.Mesh; Adding module Sofa.Component.Playback; Adding module Sofa.Component.SceneUtility; Adding module Sofa.Component.Topology; Adding module Sofa.Component.Topology.Container; Adding module Sofa.Component.Topology.Container.Constant; Adding module Sofa.Component.Topology.Container.Dynamic; Adding module Sofa.Component.Topology.Container.Grid; Adding module Sofa.Component.Topology.Mapping; Adding module Sofa.Component.Topology.Utility; Adding module Sofa.Component.Visual; Adding module Sofa.Component.LinearSolver; Adding module Sofa.Component.LinearSolver.Iterative; Adding module Sofa.Component.LinearSolver.Direct; Sofa.Component.LinearSolver.Direct: using built-in metis library; Adding m",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062:6344,Modifiability,plugin,plugin,6344,g collection SofaRigid; Adding collection SofaDeformable; Adding collection SofaObjectInteraction; Adding collection SofaMeshCollision; Adding collection SofaEngine; Adding collection SofaExplicitOdeSolver; Adding collection SofaImplicitOdeSolver; Adding collection SofaLoader; Adding collection SofaGeneralVisual; Adding collection SofaGraphComponent; Adding collection SofaGeneralMeshCollision; Adding collection SofaBoundaryCondition; Adding collection SofaGeneralAnimationLoop; Adding collection SofaGeneralDeformable; Adding collection SofaGeneralEngine; Adding collection SofaGeneralExplicitOdeSolver; Adding collection SofaGeneralImplicitOdeSolver; Adding collection SofaGeneralLinearSolver; Adding collection SofaGeneralRigid; Adding collection SofaGeneralSimpleFem; Adding collection SofaGeneralTopology; Adding collection SofaTopologyMapping; Adding collection SofaUserInteraction; Adding collection SofaConstraint; Adding collection SofaGeneralLoader; Adding collection SofaExporter; Adding collection SofaSparseSolver; Adding collection SofaPreconditioner; Adding collection SofaDenseSolver; Adding collection SofaNonUniformFem; Adding collection SofaOpenglVisual; Adding collection SofaMiscTopology; Adding collection SofaMiscExtra; Adding collection SofaMiscForceField; Adding collection SofaMiscEngine; Adding collection SofaMiscSolver; Adding collection SofaMiscFem; Adding collection SofaMiscMapping; Adding collection SofaMiscCollision; Adding collection SofaHaptics; Adding plugin SofaValidation; Adding collection SofaGeneralObjectInteraction; Adding collection SofaCommon; Adding collection SofaGeneral; Adding collection SofaAdvanced; Adding collection SofaMisc; Adding collection SofaComponentAll; Adding plugin SceneCreator; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin ArticulatedSystemPlugin; SofaPython3 is compiled as a subproject to the external project 'Sofa'.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062:6579,Modifiability,plugin,plugin,6579,g collection SofaRigid; Adding collection SofaDeformable; Adding collection SofaObjectInteraction; Adding collection SofaMeshCollision; Adding collection SofaEngine; Adding collection SofaExplicitOdeSolver; Adding collection SofaImplicitOdeSolver; Adding collection SofaLoader; Adding collection SofaGeneralVisual; Adding collection SofaGraphComponent; Adding collection SofaGeneralMeshCollision; Adding collection SofaBoundaryCondition; Adding collection SofaGeneralAnimationLoop; Adding collection SofaGeneralDeformable; Adding collection SofaGeneralEngine; Adding collection SofaGeneralExplicitOdeSolver; Adding collection SofaGeneralImplicitOdeSolver; Adding collection SofaGeneralLinearSolver; Adding collection SofaGeneralRigid; Adding collection SofaGeneralSimpleFem; Adding collection SofaGeneralTopology; Adding collection SofaTopologyMapping; Adding collection SofaUserInteraction; Adding collection SofaConstraint; Adding collection SofaGeneralLoader; Adding collection SofaExporter; Adding collection SofaSparseSolver; Adding collection SofaPreconditioner; Adding collection SofaDenseSolver; Adding collection SofaNonUniformFem; Adding collection SofaOpenglVisual; Adding collection SofaMiscTopology; Adding collection SofaMiscExtra; Adding collection SofaMiscForceField; Adding collection SofaMiscEngine; Adding collection SofaMiscSolver; Adding collection SofaMiscFem; Adding collection SofaMiscMapping; Adding collection SofaMiscCollision; Adding collection SofaHaptics; Adding plugin SofaValidation; Adding collection SofaGeneralObjectInteraction; Adding collection SofaCommon; Adding collection SofaGeneral; Adding collection SofaAdvanced; Adding collection SofaMisc; Adding collection SofaComponentAll; Adding plugin SceneCreator; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin ArticulatedSystemPlugin; SofaPython3 is compiled as a subproject to the external project 'Sofa'.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062:6607,Modifiability,plugin,plugin,6607,g collection SofaRigid; Adding collection SofaDeformable; Adding collection SofaObjectInteraction; Adding collection SofaMeshCollision; Adding collection SofaEngine; Adding collection SofaExplicitOdeSolver; Adding collection SofaImplicitOdeSolver; Adding collection SofaLoader; Adding collection SofaGeneralVisual; Adding collection SofaGraphComponent; Adding collection SofaGeneralMeshCollision; Adding collection SofaBoundaryCondition; Adding collection SofaGeneralAnimationLoop; Adding collection SofaGeneralDeformable; Adding collection SofaGeneralEngine; Adding collection SofaGeneralExplicitOdeSolver; Adding collection SofaGeneralImplicitOdeSolver; Adding collection SofaGeneralLinearSolver; Adding collection SofaGeneralRigid; Adding collection SofaGeneralSimpleFem; Adding collection SofaGeneralTopology; Adding collection SofaTopologyMapping; Adding collection SofaUserInteraction; Adding collection SofaConstraint; Adding collection SofaGeneralLoader; Adding collection SofaExporter; Adding collection SofaSparseSolver; Adding collection SofaPreconditioner; Adding collection SofaDenseSolver; Adding collection SofaNonUniformFem; Adding collection SofaOpenglVisual; Adding collection SofaMiscTopology; Adding collection SofaMiscExtra; Adding collection SofaMiscForceField; Adding collection SofaMiscEngine; Adding collection SofaMiscSolver; Adding collection SofaMiscFem; Adding collection SofaMiscMapping; Adding collection SofaMiscCollision; Adding collection SofaHaptics; Adding plugin SofaValidation; Adding collection SofaGeneralObjectInteraction; Adding collection SofaCommon; Adding collection SofaGeneral; Adding collection SofaAdvanced; Adding collection SofaMisc; Adding collection SofaComponentAll; Adding plugin SceneCreator; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin ArticulatedSystemPlugin; SofaPython3 is compiled as a subproject to the external project 'Sofa'.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062:6749,Modifiability,plugin,plugin,6749,g collection SofaRigid; Adding collection SofaDeformable; Adding collection SofaObjectInteraction; Adding collection SofaMeshCollision; Adding collection SofaEngine; Adding collection SofaExplicitOdeSolver; Adding collection SofaImplicitOdeSolver; Adding collection SofaLoader; Adding collection SofaGeneralVisual; Adding collection SofaGraphComponent; Adding collection SofaGeneralMeshCollision; Adding collection SofaBoundaryCondition; Adding collection SofaGeneralAnimationLoop; Adding collection SofaGeneralDeformable; Adding collection SofaGeneralEngine; Adding collection SofaGeneralExplicitOdeSolver; Adding collection SofaGeneralImplicitOdeSolver; Adding collection SofaGeneralLinearSolver; Adding collection SofaGeneralRigid; Adding collection SofaGeneralSimpleFem; Adding collection SofaGeneralTopology; Adding collection SofaTopologyMapping; Adding collection SofaUserInteraction; Adding collection SofaConstraint; Adding collection SofaGeneralLoader; Adding collection SofaExporter; Adding collection SofaSparseSolver; Adding collection SofaPreconditioner; Adding collection SofaDenseSolver; Adding collection SofaNonUniformFem; Adding collection SofaOpenglVisual; Adding collection SofaMiscTopology; Adding collection SofaMiscExtra; Adding collection SofaMiscForceField; Adding collection SofaMiscEngine; Adding collection SofaMiscSolver; Adding collection SofaMiscFem; Adding collection SofaMiscMapping; Adding collection SofaMiscCollision; Adding collection SofaHaptics; Adding plugin SofaValidation; Adding collection SofaGeneralObjectInteraction; Adding collection SofaCommon; Adding collection SofaGeneral; Adding collection SofaAdvanced; Adding collection SofaMisc; Adding collection SofaComponentAll; Adding plugin SceneCreator; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin ArticulatedSystemPlugin; SofaPython3 is compiled as a subproject to the external project 'Sofa'.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062:6861,Modifiability,plugin,plugin,6861," Adding collection SofaGeneralRigid; Adding collection SofaGeneralSimpleFem; Adding collection SofaGeneralTopology; Adding collection SofaTopologyMapping; Adding collection SofaUserInteraction; Adding collection SofaConstraint; Adding collection SofaGeneralLoader; Adding collection SofaExporter; Adding collection SofaSparseSolver; Adding collection SofaPreconditioner; Adding collection SofaDenseSolver; Adding collection SofaNonUniformFem; Adding collection SofaOpenglVisual; Adding collection SofaMiscTopology; Adding collection SofaMiscExtra; Adding collection SofaMiscForceField; Adding collection SofaMiscEngine; Adding collection SofaMiscSolver; Adding collection SofaMiscFem; Adding collection SofaMiscMapping; Adding collection SofaMiscCollision; Adding collection SofaHaptics; Adding plugin SofaValidation; Adding collection SofaGeneralObjectInteraction; Adding collection SofaCommon; Adding collection SofaGeneral; Adding collection SofaAdvanced; Adding collection SofaMisc; Adding collection SofaComponentAll; Adding plugin SceneCreator; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin ArticulatedSystemPlugin; SofaPython3 is compiled as a subproject to the external project 'Sofa'.; Adding plugin SofaPython3; CMake Error at applications/plugins/SofaPython3/CMakeLists.txt:114 (find_package):; Could not find a package configuration file provided by ""pybind11""; (requested version 2.3) with any of the following names:. pybind11Config.cmake; pybind11-config.cmake. Add the installation prefix of ""pybind11"" to CMAKE_PREFIX_PATH or set; ""pybind11_DIR"" to a directory containing one of the above files. If; ""pybind11"" provides a separate development package or SDK, be sure it has; been installed. Configuring incomplete, errors occurred!; See also ""/home/giangnguyen/sofa/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/giangnguyen/sofa/build/CMakeFiles/CMakeError.log"".; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062:6909,Modifiability,plugin,plugins,6909," Adding collection SofaGeneralRigid; Adding collection SofaGeneralSimpleFem; Adding collection SofaGeneralTopology; Adding collection SofaTopologyMapping; Adding collection SofaUserInteraction; Adding collection SofaConstraint; Adding collection SofaGeneralLoader; Adding collection SofaExporter; Adding collection SofaSparseSolver; Adding collection SofaPreconditioner; Adding collection SofaDenseSolver; Adding collection SofaNonUniformFem; Adding collection SofaOpenglVisual; Adding collection SofaMiscTopology; Adding collection SofaMiscExtra; Adding collection SofaMiscForceField; Adding collection SofaMiscEngine; Adding collection SofaMiscSolver; Adding collection SofaMiscFem; Adding collection SofaMiscMapping; Adding collection SofaMiscCollision; Adding collection SofaHaptics; Adding plugin SofaValidation; Adding collection SofaGeneralObjectInteraction; Adding collection SofaCommon; Adding collection SofaGeneral; Adding collection SofaAdvanced; Adding collection SofaMisc; Adding collection SofaComponentAll; Adding plugin SceneCreator; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin ArticulatedSystemPlugin; SofaPython3 is compiled as a subproject to the external project 'Sofa'.; Adding plugin SofaPython3; CMake Error at applications/plugins/SofaPython3/CMakeLists.txt:114 (find_package):; Could not find a package configuration file provided by ""pybind11""; (requested version 2.3) with any of the following names:. pybind11Config.cmake; pybind11-config.cmake. Add the installation prefix of ""pybind11"" to CMAKE_PREFIX_PATH or set; ""pybind11_DIR"" to a directory containing one of the above files. If; ""pybind11"" provides a separate development package or SDK, be sure it has; been installed. Configuring incomplete, errors occurred!; See also ""/home/giangnguyen/sofa/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/giangnguyen/sofa/build/CMakeFiles/CMakeError.log"".; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062:6990,Modifiability,config,configuration,6990," Adding collection SofaGeneralRigid; Adding collection SofaGeneralSimpleFem; Adding collection SofaGeneralTopology; Adding collection SofaTopologyMapping; Adding collection SofaUserInteraction; Adding collection SofaConstraint; Adding collection SofaGeneralLoader; Adding collection SofaExporter; Adding collection SofaSparseSolver; Adding collection SofaPreconditioner; Adding collection SofaDenseSolver; Adding collection SofaNonUniformFem; Adding collection SofaOpenglVisual; Adding collection SofaMiscTopology; Adding collection SofaMiscExtra; Adding collection SofaMiscForceField; Adding collection SofaMiscEngine; Adding collection SofaMiscSolver; Adding collection SofaMiscFem; Adding collection SofaMiscMapping; Adding collection SofaMiscCollision; Adding collection SofaHaptics; Adding plugin SofaValidation; Adding collection SofaGeneralObjectInteraction; Adding collection SofaCommon; Adding collection SofaGeneral; Adding collection SofaAdvanced; Adding collection SofaMisc; Adding collection SofaComponentAll; Adding plugin SceneCreator; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin ArticulatedSystemPlugin; SofaPython3 is compiled as a subproject to the external project 'Sofa'.; Adding plugin SofaPython3; CMake Error at applications/plugins/SofaPython3/CMakeLists.txt:114 (find_package):; Could not find a package configuration file provided by ""pybind11""; (requested version 2.3) with any of the following names:. pybind11Config.cmake; pybind11-config.cmake. Add the installation prefix of ""pybind11"" to CMAKE_PREFIX_PATH or set; ""pybind11_DIR"" to a directory containing one of the above files. If; ""pybind11"" provides a separate development package or SDK, be sure it has; been installed. Configuring incomplete, errors occurred!; See also ""/home/giangnguyen/sofa/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/giangnguyen/sofa/build/CMakeFiles/CMakeError.log"".; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062:7122,Modifiability,config,config,7122," Adding collection SofaGeneralRigid; Adding collection SofaGeneralSimpleFem; Adding collection SofaGeneralTopology; Adding collection SofaTopologyMapping; Adding collection SofaUserInteraction; Adding collection SofaConstraint; Adding collection SofaGeneralLoader; Adding collection SofaExporter; Adding collection SofaSparseSolver; Adding collection SofaPreconditioner; Adding collection SofaDenseSolver; Adding collection SofaNonUniformFem; Adding collection SofaOpenglVisual; Adding collection SofaMiscTopology; Adding collection SofaMiscExtra; Adding collection SofaMiscForceField; Adding collection SofaMiscEngine; Adding collection SofaMiscSolver; Adding collection SofaMiscFem; Adding collection SofaMiscMapping; Adding collection SofaMiscCollision; Adding collection SofaHaptics; Adding plugin SofaValidation; Adding collection SofaGeneralObjectInteraction; Adding collection SofaCommon; Adding collection SofaGeneral; Adding collection SofaAdvanced; Adding collection SofaMisc; Adding collection SofaComponentAll; Adding plugin SceneCreator; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin ArticulatedSystemPlugin; SofaPython3 is compiled as a subproject to the external project 'Sofa'.; Adding plugin SofaPython3; CMake Error at applications/plugins/SofaPython3/CMakeLists.txt:114 (find_package):; Could not find a package configuration file provided by ""pybind11""; (requested version 2.3) with any of the following names:. pybind11Config.cmake; pybind11-config.cmake. Add the installation prefix of ""pybind11"" to CMAKE_PREFIX_PATH or set; ""pybind11_DIR"" to a directory containing one of the above files. If; ""pybind11"" provides a separate development package or SDK, be sure it has; been installed. Configuring incomplete, errors occurred!; See also ""/home/giangnguyen/sofa/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/giangnguyen/sofa/build/CMakeFiles/CMakeError.log"".; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062:7367,Modifiability,Config,Configuring,7367," Adding collection SofaGeneralRigid; Adding collection SofaGeneralSimpleFem; Adding collection SofaGeneralTopology; Adding collection SofaTopologyMapping; Adding collection SofaUserInteraction; Adding collection SofaConstraint; Adding collection SofaGeneralLoader; Adding collection SofaExporter; Adding collection SofaSparseSolver; Adding collection SofaPreconditioner; Adding collection SofaDenseSolver; Adding collection SofaNonUniformFem; Adding collection SofaOpenglVisual; Adding collection SofaMiscTopology; Adding collection SofaMiscExtra; Adding collection SofaMiscForceField; Adding collection SofaMiscEngine; Adding collection SofaMiscSolver; Adding collection SofaMiscFem; Adding collection SofaMiscMapping; Adding collection SofaMiscCollision; Adding collection SofaHaptics; Adding plugin SofaValidation; Adding collection SofaGeneralObjectInteraction; Adding collection SofaCommon; Adding collection SofaGeneral; Adding collection SofaAdvanced; Adding collection SofaMisc; Adding collection SofaComponentAll; Adding plugin SceneCreator; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin ArticulatedSystemPlugin; SofaPython3 is compiled as a subproject to the external project 'Sofa'.; Adding plugin SofaPython3; CMake Error at applications/plugins/SofaPython3/CMakeLists.txt:114 (find_package):; Could not find a package configuration file provided by ""pybind11""; (requested version 2.3) with any of the following names:. pybind11Config.cmake; pybind11-config.cmake. Add the installation prefix of ""pybind11"" to CMAKE_PREFIX_PATH or set; ""pybind11_DIR"" to a directory containing one of the above files. If; ""pybind11"" provides a separate development package or SDK, be sure it has; been installed. Configuring incomplete, errors occurred!; See also ""/home/giangnguyen/sofa/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/giangnguyen/sofa/build/CMakeFiles/CMakeError.log"".; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062:3276,Safety,Detect,Detection,3276,ng.MappedMatrix; Adding module Sofa.Component.SolidMechanics; Adding module Sofa.Component.SolidMechanics.Spring; Adding module Sofa.Component.SolidMechanics.FEM; Adding module Sofa.Component.SolidMechanics.FEM.Elastic; Adding module Sofa.Component.SolidMechanics.FEM.HyperElastic; Adding module Sofa.Component.SolidMechanics.FEM.NonUniform; Adding module Sofa.Component.SolidMechanics.TensorMass; Adding module Sofa.Component.StateContainer; Adding module Sofa.Component.Constraint; Adding module Sofa.Component.Constraint.Lagrangian; Adding module Sofa.Component.Constraint.Lagrangian.Model; Adding module Sofa.Component.Constraint.Lagrangian.Correction; Adding module Sofa.Component.Constraint.Lagrangian.Solver; Adding module Sofa.Component.Constraint.Projective; Adding module Sofa.Component.AnimationLoop; Adding module Sofa.Component.MechanicalLoad; Adding module Sofa.Component.Collision; Adding module Sofa.Component.Collision.Geometry; Adding module Sofa.Component.Collision.Detection; Adding module Sofa.Component.Collision.Detection.Algorithm; Adding module Sofa.Component.Collision.Detection.Intersection; Adding module Sofa.Component.Collision.Response; Adding module Sofa.Component.Collision.Response.Mapper; Adding module Sofa.Component.Collision.Response.Contact; Adding module Sofa.Component.Setting; Adding module Sofa.Component.Controller; Adding module Sofa.Component.Engine; Adding module Sofa.Component.Engine.Analyze; Adding module Sofa.Component.Engine.Generate; Adding module Sofa.Component.Engine.Select; Adding module Sofa.Component.Engine.Transform; Adding module Sofa.Component.Haptics; Adding library Sofa.GL; Adding module Sofa.GL.Component; Adding module Sofa.GL.Component.Rendering2D; Adding module Sofa.GL.Component.Rendering3D; Adding module Sofa.GL.Component.Engine; Adding module Sofa.GL.Component.Shader; Adding module Sofa.GUI.Component; Adding library Sofa.GUI.Common; cxxopts version 2.2.0; -- Sofa.GUI.Common: Sofa.GL dependent features enabled.; Adding lib,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062:3326,Safety,Detect,Detection,3326,onent.SolidMechanics; Adding module Sofa.Component.SolidMechanics.Spring; Adding module Sofa.Component.SolidMechanics.FEM; Adding module Sofa.Component.SolidMechanics.FEM.Elastic; Adding module Sofa.Component.SolidMechanics.FEM.HyperElastic; Adding module Sofa.Component.SolidMechanics.FEM.NonUniform; Adding module Sofa.Component.SolidMechanics.TensorMass; Adding module Sofa.Component.StateContainer; Adding module Sofa.Component.Constraint; Adding module Sofa.Component.Constraint.Lagrangian; Adding module Sofa.Component.Constraint.Lagrangian.Model; Adding module Sofa.Component.Constraint.Lagrangian.Correction; Adding module Sofa.Component.Constraint.Lagrangian.Solver; Adding module Sofa.Component.Constraint.Projective; Adding module Sofa.Component.AnimationLoop; Adding module Sofa.Component.MechanicalLoad; Adding module Sofa.Component.Collision; Adding module Sofa.Component.Collision.Geometry; Adding module Sofa.Component.Collision.Detection; Adding module Sofa.Component.Collision.Detection.Algorithm; Adding module Sofa.Component.Collision.Detection.Intersection; Adding module Sofa.Component.Collision.Response; Adding module Sofa.Component.Collision.Response.Mapper; Adding module Sofa.Component.Collision.Response.Contact; Adding module Sofa.Component.Setting; Adding module Sofa.Component.Controller; Adding module Sofa.Component.Engine; Adding module Sofa.Component.Engine.Analyze; Adding module Sofa.Component.Engine.Generate; Adding module Sofa.Component.Engine.Select; Adding module Sofa.Component.Engine.Transform; Adding module Sofa.Component.Haptics; Adding library Sofa.GL; Adding module Sofa.GL.Component; Adding module Sofa.GL.Component.Rendering2D; Adding module Sofa.GL.Component.Rendering3D; Adding module Sofa.GL.Component.Engine; Adding module Sofa.GL.Component.Shader; Adding module Sofa.GUI.Component; Adding library Sofa.GUI.Common; cxxopts version 2.2.0; -- Sofa.GUI.Common: Sofa.GL dependent features enabled.; Adding library Sofa.GUI.Batch; Adding library Sofa,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062:3386,Safety,Detect,Detection,3386,anics.Spring; Adding module Sofa.Component.SolidMechanics.FEM; Adding module Sofa.Component.SolidMechanics.FEM.Elastic; Adding module Sofa.Component.SolidMechanics.FEM.HyperElastic; Adding module Sofa.Component.SolidMechanics.FEM.NonUniform; Adding module Sofa.Component.SolidMechanics.TensorMass; Adding module Sofa.Component.StateContainer; Adding module Sofa.Component.Constraint; Adding module Sofa.Component.Constraint.Lagrangian; Adding module Sofa.Component.Constraint.Lagrangian.Model; Adding module Sofa.Component.Constraint.Lagrangian.Correction; Adding module Sofa.Component.Constraint.Lagrangian.Solver; Adding module Sofa.Component.Constraint.Projective; Adding module Sofa.Component.AnimationLoop; Adding module Sofa.Component.MechanicalLoad; Adding module Sofa.Component.Collision; Adding module Sofa.Component.Collision.Geometry; Adding module Sofa.Component.Collision.Detection; Adding module Sofa.Component.Collision.Detection.Algorithm; Adding module Sofa.Component.Collision.Detection.Intersection; Adding module Sofa.Component.Collision.Response; Adding module Sofa.Component.Collision.Response.Mapper; Adding module Sofa.Component.Collision.Response.Contact; Adding module Sofa.Component.Setting; Adding module Sofa.Component.Controller; Adding module Sofa.Component.Engine; Adding module Sofa.Component.Engine.Analyze; Adding module Sofa.Component.Engine.Generate; Adding module Sofa.Component.Engine.Select; Adding module Sofa.Component.Engine.Transform; Adding module Sofa.Component.Haptics; Adding library Sofa.GL; Adding module Sofa.GL.Component; Adding module Sofa.GL.Component.Rendering2D; Adding module Sofa.GL.Component.Rendering3D; Adding module Sofa.GL.Component.Engine; Adding module Sofa.GL.Component.Shader; Adding module Sofa.GUI.Component; Adding library Sofa.GUI.Common; cxxopts version 2.2.0; -- Sofa.GUI.Common: Sofa.GL dependent features enabled.; Adding library Sofa.GUI.Batch; Adding library Sofa.GUI.Qt; Sofa.GUI.Qt: will use Qt5; Sofa.GUI.Qt: Qt5Charts n,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062:196,Testability,log,log,196,"Thank you for your response. Yesterday I tried with my home PC and it occured that error. Today I'm trying with my office PC and it occurs another error but still in the same process. Here is the log:. ```; -- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).; Install prefix: /home/giangnguyen/sofa/build/install; Adding library Sofa.Config; Using legacy headers is enabled.; Headers from v21.12 are usable, but it is advised to change your code to use the new headers introduced in v22.06.; Adding library Sofa.Compat; Adding library Sofa.Component.Compat; Adding library Sofa.Type; Adding library Sofa.Geometry; Adding library Sofa.Topology; Adding library Sofa.Helper; Adding library Sofa.LinearAlgebra; Adding library Sofa.DefaultType; Adding library Sofa.Core; Adding library Sofa.Simulation; Adding library Sofa.Simulation.Core; Adding library Sofa.Simulation.Common; Adding library Sofa.Simulation.Graph; Adding library Sofa.Testing; Found PythonInterp: /usr/bin/python3.8 (found version ""3.8.10"") ; Adding library Sofa.Framework; Adding module Sofa.Component; Adding module Sofa.Component.ODESolver; Adding module Sofa.Component.ODESolver.Forward; Adding module Sofa.Component.ODESolver.Backward; Adding module Sofa.Component.IO; Adding module Sofa.Component.IO.Mesh; Adding module Sofa.Component.Playback; Adding module Sofa.Component.SceneUtility; Adding module Sofa.Component.Topology; Adding module Sofa.Component.Topology.Container; Adding module Sofa.Component.Topology.Container.Constant; Adding module Sofa.Component.Topology.Container.Dynamic; Adding module Sofa.Component.Topology.Container.Grid; Adding module Sofa.Component.Topology.Mapping; Adding module Sofa.Component.Topology.Utility; Adding module Sofa.Component.Visual; Adding module Sofa.Component.LinearSolver; Adding module Sofa.Component.LinearSolver.Iterative; Adding module Sofa.Component.LinearSolver.Direct; Sofa.Component.LinearSolver.Direct: using built-in metis library; Adding m",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062:967,Testability,Test,Testing,967,"Thank you for your response. Yesterday I tried with my home PC and it occured that error. Today I'm trying with my office PC and it occurs another error but still in the same process. Here is the log:. ```; -- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).; Install prefix: /home/giangnguyen/sofa/build/install; Adding library Sofa.Config; Using legacy headers is enabled.; Headers from v21.12 are usable, but it is advised to change your code to use the new headers introduced in v22.06.; Adding library Sofa.Compat; Adding library Sofa.Component.Compat; Adding library Sofa.Type; Adding library Sofa.Geometry; Adding library Sofa.Topology; Adding library Sofa.Helper; Adding library Sofa.LinearAlgebra; Adding library Sofa.DefaultType; Adding library Sofa.Core; Adding library Sofa.Simulation; Adding library Sofa.Simulation.Core; Adding library Sofa.Simulation.Common; Adding library Sofa.Simulation.Graph; Adding library Sofa.Testing; Found PythonInterp: /usr/bin/python3.8 (found version ""3.8.10"") ; Adding library Sofa.Framework; Adding module Sofa.Component; Adding module Sofa.Component.ODESolver; Adding module Sofa.Component.ODESolver.Forward; Adding module Sofa.Component.ODESolver.Backward; Adding module Sofa.Component.IO; Adding module Sofa.Component.IO.Mesh; Adding module Sofa.Component.Playback; Adding module Sofa.Component.SceneUtility; Adding module Sofa.Component.Topology; Adding module Sofa.Component.Topology.Container; Adding module Sofa.Component.Topology.Container.Constant; Adding module Sofa.Component.Topology.Container.Dynamic; Adding module Sofa.Component.Topology.Container.Grid; Adding module Sofa.Component.Topology.Mapping; Adding module Sofa.Component.Topology.Utility; Adding module Sofa.Component.Visual; Adding module Sofa.Component.LinearSolver; Adding module Sofa.Component.LinearSolver.Iterative; Adding module Sofa.Component.LinearSolver.Direct; Sofa.Component.LinearSolver.Direct: using built-in metis library; Adding m",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062:7471,Testability,log,log,7471," Adding collection SofaGeneralRigid; Adding collection SofaGeneralSimpleFem; Adding collection SofaGeneralTopology; Adding collection SofaTopologyMapping; Adding collection SofaUserInteraction; Adding collection SofaConstraint; Adding collection SofaGeneralLoader; Adding collection SofaExporter; Adding collection SofaSparseSolver; Adding collection SofaPreconditioner; Adding collection SofaDenseSolver; Adding collection SofaNonUniformFem; Adding collection SofaOpenglVisual; Adding collection SofaMiscTopology; Adding collection SofaMiscExtra; Adding collection SofaMiscForceField; Adding collection SofaMiscEngine; Adding collection SofaMiscSolver; Adding collection SofaMiscFem; Adding collection SofaMiscMapping; Adding collection SofaMiscCollision; Adding collection SofaHaptics; Adding plugin SofaValidation; Adding collection SofaGeneralObjectInteraction; Adding collection SofaCommon; Adding collection SofaGeneral; Adding collection SofaAdvanced; Adding collection SofaMisc; Adding collection SofaComponentAll; Adding plugin SceneCreator; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin ArticulatedSystemPlugin; SofaPython3 is compiled as a subproject to the external project 'Sofa'.; Adding plugin SofaPython3; CMake Error at applications/plugins/SofaPython3/CMakeLists.txt:114 (find_package):; Could not find a package configuration file provided by ""pybind11""; (requested version 2.3) with any of the following names:. pybind11Config.cmake; pybind11-config.cmake. Add the installation prefix of ""pybind11"" to CMAKE_PREFIX_PATH or set; ""pybind11_DIR"" to a directory containing one of the above files. If; ""pybind11"" provides a separate development package or SDK, be sure it has; been installed. Configuring incomplete, errors occurred!; See also ""/home/giangnguyen/sofa/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/giangnguyen/sofa/build/CMakeFiles/CMakeError.log"".; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062:7539,Testability,log,log,7539," Adding collection SofaGeneralRigid; Adding collection SofaGeneralSimpleFem; Adding collection SofaGeneralTopology; Adding collection SofaTopologyMapping; Adding collection SofaUserInteraction; Adding collection SofaConstraint; Adding collection SofaGeneralLoader; Adding collection SofaExporter; Adding collection SofaSparseSolver; Adding collection SofaPreconditioner; Adding collection SofaDenseSolver; Adding collection SofaNonUniformFem; Adding collection SofaOpenglVisual; Adding collection SofaMiscTopology; Adding collection SofaMiscExtra; Adding collection SofaMiscForceField; Adding collection SofaMiscEngine; Adding collection SofaMiscSolver; Adding collection SofaMiscFem; Adding collection SofaMiscMapping; Adding collection SofaMiscCollision; Adding collection SofaHaptics; Adding plugin SofaValidation; Adding collection SofaGeneralObjectInteraction; Adding collection SofaCommon; Adding collection SofaGeneral; Adding collection SofaAdvanced; Adding collection SofaMisc; Adding collection SofaComponentAll; Adding plugin SceneCreator; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin ArticulatedSystemPlugin; SofaPython3 is compiled as a subproject to the external project 'Sofa'.; Adding plugin SofaPython3; CMake Error at applications/plugins/SofaPython3/CMakeLists.txt:114 (find_package):; Could not find a package configuration file provided by ""pybind11""; (requested version 2.3) with any of the following names:. pybind11Config.cmake; pybind11-config.cmake. Add the installation prefix of ""pybind11"" to CMAKE_PREFIX_PATH or set; ""pybind11_DIR"" to a directory containing one of the above files. If; ""pybind11"" provides a separate development package or SDK, be sure it has; been installed. Configuring incomplete, errors occurred!; See also ""/home/giangnguyen/sofa/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/giangnguyen/sofa/build/CMakeFiles/CMakeError.log"".; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062:435,Usability,usab,usable,435,"Thank you for your response. Yesterday I tried with my home PC and it occured that error. Today I'm trying with my office PC and it occurs another error but still in the same process. Here is the log:. ```; -- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).; Install prefix: /home/giangnguyen/sofa/build/install; Adding library Sofa.Config; Using legacy headers is enabled.; Headers from v21.12 are usable, but it is advised to change your code to use the new headers introduced in v22.06.; Adding library Sofa.Compat; Adding library Sofa.Component.Compat; Adding library Sofa.Type; Adding library Sofa.Geometry; Adding library Sofa.Topology; Adding library Sofa.Helper; Adding library Sofa.LinearAlgebra; Adding library Sofa.DefaultType; Adding library Sofa.Core; Adding library Sofa.Simulation; Adding library Sofa.Simulation.Core; Adding library Sofa.Simulation.Common; Adding library Sofa.Simulation.Graph; Adding library Sofa.Testing; Found PythonInterp: /usr/bin/python3.8 (found version ""3.8.10"") ; Adding library Sofa.Framework; Adding module Sofa.Component; Adding module Sofa.Component.ODESolver; Adding module Sofa.Component.ODESolver.Forward; Adding module Sofa.Component.ODESolver.Backward; Adding module Sofa.Component.IO; Adding module Sofa.Component.IO.Mesh; Adding module Sofa.Component.Playback; Adding module Sofa.Component.SceneUtility; Adding module Sofa.Component.Topology; Adding module Sofa.Component.Topology.Container; Adding module Sofa.Component.Topology.Container.Constant; Adding module Sofa.Component.Topology.Container.Dynamic; Adding module Sofa.Component.Topology.Container.Grid; Adding module Sofa.Component.Topology.Mapping; Adding module Sofa.Component.Topology.Utility; Adding module Sofa.Component.Visual; Adding module Sofa.Component.LinearSolver; Adding module Sofa.Component.LinearSolver.Iterative; Adding module Sofa.Component.LinearSolver.Direct; Sofa.Component.LinearSolver.Direct: using built-in metis library; Adding m",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486749758:276,Deployability,install,install,276,"The problem comes from the compilation of SofaPython3. In particular, it is related to one of its dependency `pybind11`. It is missing from your computer.; I recommend you to read the documentation: https://sofapython3.readthedocs.io/en/latest/menu/Compilation.html. You must install pybind11.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486749758
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486749758:98,Integrability,depend,dependency,98,"The problem comes from the compilation of SofaPython3. In particular, it is related to one of its dependency `pybind11`. It is missing from your computer.; I recommend you to read the documentation: https://sofapython3.readthedocs.io/en/latest/menu/Compilation.html. You must install pybind11.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486749758
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:41,Availability,error,error,41,"@alxbilger . > Hello, I think the actual error is in the output of the Cmake Gui(bottom part), could you copy-paste it ?. Sorry for the delay, here is the log output:; ```; The C compiler identification is Clang 10.0.0; The CXX compiler identification is Clang 10.0.0; Check for working C compiler: /usr/bin/clang; Check for working C compiler: /usr/bin/clang -- works; Detecting C compiler ABI info; Detecting C compiler ABI info - done; Detecting C compile features; Detecting C compile features - done; Check for working CXX compiler: /usr/bin/clang++; Check for working CXX compiler: /usr/bin/clang++ -- works; Detecting CXX compiler ABI info; Detecting CXX compiler ABI info - done; Detecting CXX compile features; Detecting CXX compile features - done; Setting build type to Release as none was specified.; -- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).; Install prefix: /home/giang/sofa/build/install; Adding library Sofa.Config; Using legacy headers is enabled.; Headers from v21.12 are usable, but it is advised to change your code to use the new headers introduced in v22.06.; Adding library Sofa.Compat; Adding library Sofa.Component.Compat; Adding library Sofa.Type; Adding library Sofa.Geometry; Adding library Sofa.Topology; Adding library Sofa.Helper; Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; Found Json: /home/giang/sofa/src/extlibs/json (Required is at least version ""3.1.2"") ; Found STB: /home/giang/sofa/src/extlibs/stb ; Found DIFFLIB: /home/giang/sofa/src/extlibs/difflib ; Adding library Sofa.LinearAlgebra; Adding library Sofa.DefaultType; Adding library Sofa.Core; Adding library Sofa.Simulation; Adding library Sofa.Simulation.Core; Adding library Sofa.Simulation.Common; Adding library Sofa.Simulation.Graph; Adding library Sofa.Testing; Found PythonInterp: /usr/bin/python (found version ""3.8.10"") ; Looking for pthread.h; Looking for pthread.h - found; Performing Test CMAKE_HAVE_LIBC_PTHREAD; Perf",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:8177,Availability,Error,Error,8177,; Adding collection SofaDeformable; Adding collection SofaObjectInteraction; Adding collection SofaMeshCollision; Adding collection SofaEngine; Adding collection SofaExplicitOdeSolver; Adding collection SofaImplicitOdeSolver; Adding collection SofaLoader; Adding collection SofaGeneralVisual; Adding collection SofaGraphComponent; Adding collection SofaGeneralMeshCollision; Adding collection SofaBoundaryCondition; Adding collection SofaGeneralAnimationLoop; Adding collection SofaGeneralDeformable; Adding collection SofaGeneralEngine; Adding collection SofaGeneralExplicitOdeSolver; Adding collection SofaGeneralImplicitOdeSolver; Adding collection SofaGeneralLinearSolver; Adding collection SofaGeneralRigid; Adding collection SofaGeneralSimpleFem; Adding collection SofaGeneralTopology; Adding collection SofaTopologyMapping; Adding collection SofaUserInteraction; Adding collection SofaConstraint; Adding collection SofaGeneralLoader; Adding collection SofaExporter; Adding collection SofaSparseSolver; Adding collection SofaPreconditioner; Adding collection SofaDenseSolver; Adding collection SofaNonUniformFem; Adding collection SofaOpenglVisual; Adding collection SofaMiscTopology; Adding collection SofaMiscExtra; Adding collection SofaMiscForceField; Adding collection SofaMiscEngine; Adding collection SofaMiscSolver; Adding collection SofaMiscFem; Adding collection SofaMiscMapping; Adding collection SofaMiscCollision; Adding collection SofaHaptics; Adding plugin SofaValidation; Adding collection SofaGeneralObjectInteraction; Adding collection SofaCommon; Adding collection SofaGeneral; Adding collection SofaAdvanced; Adding collection SofaMisc; Adding collection SofaComponentAll; Adding plugin SceneCreator; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin ArticulatedSystemPlugin; CMake Error: File /home/giang/sofa/src/applications/plugins/SofaPython/ExternalProjectConfig.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:8296,Availability,Error,Error,8296,"lection SofaDenseSolver; Adding collection SofaNonUniformFem; Adding collection SofaOpenglVisual; Adding collection SofaMiscTopology; Adding collection SofaMiscExtra; Adding collection SofaMiscForceField; Adding collection SofaMiscEngine; Adding collection SofaMiscSolver; Adding collection SofaMiscFem; Adding collection SofaMiscMapping; Adding collection SofaMiscCollision; Adding collection SofaHaptics; Adding plugin SofaValidation; Adding collection SofaGeneralObjectInteraction; Adding collection SofaCommon; Adding collection SofaGeneral; Adding collection SofaAdvanced; Adding collection SofaMisc; Adding collection SofaComponentAll; Adding plugin SceneCreator; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin ArticulatedSystemPlugin; CMake Error: File /home/giang/sofa/src/applications/plugins/SofaPython/ExternalProjectConfig.cmake.in does not exist.; CMake Error at Sofa/framework/Config/cmake/SofaMacrosConfigure.cmake:266 (configure_file):; configure_file Problem configuring file; Call Stack (most recent call first):; Sofa/framework/Config/cmake/SofaMacrosConfigure.cmake:295 (sofa_add_generic_external); applications/plugins/CMakeLists.txt:22 (sofa_add_subdirectory). SofaPython3 is compiled as a subproject to the external project 'Sofa'.; Adding plugin SofaPython3; CMake Error at /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:146 (message):; Could NOT find Python (missing: Python_LIBRARIES Python_INCLUDE_DIRS; Development) (found suitable version ""3.9.5"", minimum required is ""3.7""); Call Stack (most recent call first):; /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:393 (_FPHSA_FAILURE_MESSAGE); /usr/share/cmake-3.16/Modules/FindPython/Support.cmake:2214 (find_package_handle_standard_args); /usr/share/cmake-3.16/Modules/FindPython.cmake:304 (include); applications/plugins/SofaPython3/CMakeLists.txt:86 (find_package). Configur",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:8718,Availability,Error,Error,8718,"ra; Adding collection SofaMiscForceField; Adding collection SofaMiscEngine; Adding collection SofaMiscSolver; Adding collection SofaMiscFem; Adding collection SofaMiscMapping; Adding collection SofaMiscCollision; Adding collection SofaHaptics; Adding plugin SofaValidation; Adding collection SofaGeneralObjectInteraction; Adding collection SofaCommon; Adding collection SofaGeneral; Adding collection SofaAdvanced; Adding collection SofaMisc; Adding collection SofaComponentAll; Adding plugin SceneCreator; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin ArticulatedSystemPlugin; CMake Error: File /home/giang/sofa/src/applications/plugins/SofaPython/ExternalProjectConfig.cmake.in does not exist.; CMake Error at Sofa/framework/Config/cmake/SofaMacrosConfigure.cmake:266 (configure_file):; configure_file Problem configuring file; Call Stack (most recent call first):; Sofa/framework/Config/cmake/SofaMacrosConfigure.cmake:295 (sofa_add_generic_external); applications/plugins/CMakeLists.txt:22 (sofa_add_subdirectory). SofaPython3 is compiled as a subproject to the external project 'Sofa'.; Adding plugin SofaPython3; CMake Error at /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:146 (message):; Could NOT find Python (missing: Python_LIBRARIES Python_INCLUDE_DIRS; Development) (found suitable version ""3.9.5"", minimum required is ""3.7""); Call Stack (most recent call first):; /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:393 (_FPHSA_FAILURE_MESSAGE); /usr/share/cmake-3.16/Modules/FindPython/Support.cmake:2214 (find_package_handle_standard_args); /usr/share/cmake-3.16/Modules/FindPython.cmake:304 (include); applications/plugins/SofaPython3/CMakeLists.txt:86 (find_package). Configuring incomplete, errors occurred!; See also ""/home/giang/sofa/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/giang/sofa/build/CMakeFiles/CMakeError.log"".; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:9337,Availability,error,errors,9337,"ra; Adding collection SofaMiscForceField; Adding collection SofaMiscEngine; Adding collection SofaMiscSolver; Adding collection SofaMiscFem; Adding collection SofaMiscMapping; Adding collection SofaMiscCollision; Adding collection SofaHaptics; Adding plugin SofaValidation; Adding collection SofaGeneralObjectInteraction; Adding collection SofaCommon; Adding collection SofaGeneral; Adding collection SofaAdvanced; Adding collection SofaMisc; Adding collection SofaComponentAll; Adding plugin SceneCreator; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin ArticulatedSystemPlugin; CMake Error: File /home/giang/sofa/src/applications/plugins/SofaPython/ExternalProjectConfig.cmake.in does not exist.; CMake Error at Sofa/framework/Config/cmake/SofaMacrosConfigure.cmake:266 (configure_file):; configure_file Problem configuring file; Call Stack (most recent call first):; Sofa/framework/Config/cmake/SofaMacrosConfigure.cmake:295 (sofa_add_generic_external); applications/plugins/CMakeLists.txt:22 (sofa_add_subdirectory). SofaPython3 is compiled as a subproject to the external project 'Sofa'.; Adding plugin SofaPython3; CMake Error at /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:146 (message):; Could NOT find Python (missing: Python_LIBRARIES Python_INCLUDE_DIRS; Development) (found suitable version ""3.9.5"", minimum required is ""3.7""); Call Stack (most recent call first):; /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:393 (_FPHSA_FAILURE_MESSAGE); /usr/share/cmake-3.16/Modules/FindPython/Support.cmake:2214 (find_package_handle_standard_args); /usr/share/cmake-3.16/Modules/FindPython.cmake:304 (include); applications/plugins/SofaPython3/CMakeLists.txt:86 (find_package). Configuring incomplete, errors occurred!; See also ""/home/giang/sofa/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/giang/sofa/build/CMakeFiles/CMakeError.log"".; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:781,Deployability,Release,Release,781,"@alxbilger . > Hello, I think the actual error is in the output of the Cmake Gui(bottom part), could you copy-paste it ?. Sorry for the delay, here is the log output:; ```; The C compiler identification is Clang 10.0.0; The CXX compiler identification is Clang 10.0.0; Check for working C compiler: /usr/bin/clang; Check for working C compiler: /usr/bin/clang -- works; Detecting C compiler ABI info; Detecting C compiler ABI info - done; Detecting C compile features; Detecting C compile features - done; Check for working CXX compiler: /usr/bin/clang++; Check for working CXX compiler: /usr/bin/clang++ -- works; Detecting CXX compiler ABI info; Detecting CXX compiler ABI info - done; Detecting CXX compile features; Detecting CXX compile features - done; Setting build type to Release as none was specified.; -- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).; Install prefix: /home/giang/sofa/build/install; Adding library Sofa.Config; Using legacy headers is enabled.; Headers from v21.12 are usable, but it is advised to change your code to use the new headers introduced in v22.06.; Adding library Sofa.Compat; Adding library Sofa.Component.Compat; Adding library Sofa.Type; Adding library Sofa.Geometry; Adding library Sofa.Topology; Adding library Sofa.Helper; Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; Found Json: /home/giang/sofa/src/extlibs/json (Required is at least version ""3.1.2"") ; Found STB: /home/giang/sofa/src/extlibs/stb ; Found DIFFLIB: /home/giang/sofa/src/extlibs/difflib ; Adding library Sofa.LinearAlgebra; Adding library Sofa.DefaultType; Adding library Sofa.Core; Adding library Sofa.Simulation; Adding library Sofa.Simulation.Core; Adding library Sofa.Simulation.Common; Adding library Sofa.Simulation.Graph; Adding library Sofa.Testing; Found PythonInterp: /usr/bin/python (found version ""3.8.10"") ; Looking for pthread.h; Looking for pthread.h - found; Performing Test CMAKE_HAVE_LIBC_PTHREAD; Perf",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:901,Deployability,Install,Install,901,"@alxbilger . > Hello, I think the actual error is in the output of the Cmake Gui(bottom part), could you copy-paste it ?. Sorry for the delay, here is the log output:; ```; The C compiler identification is Clang 10.0.0; The CXX compiler identification is Clang 10.0.0; Check for working C compiler: /usr/bin/clang; Check for working C compiler: /usr/bin/clang -- works; Detecting C compiler ABI info; Detecting C compiler ABI info - done; Detecting C compile features; Detecting C compile features - done; Check for working CXX compiler: /usr/bin/clang++; Check for working CXX compiler: /usr/bin/clang++ -- works; Detecting CXX compiler ABI info; Detecting CXX compiler ABI info - done; Detecting CXX compile features; Detecting CXX compile features - done; Setting build type to Release as none was specified.; -- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).; Install prefix: /home/giang/sofa/build/install; Adding library Sofa.Config; Using legacy headers is enabled.; Headers from v21.12 are usable, but it is advised to change your code to use the new headers introduced in v22.06.; Adding library Sofa.Compat; Adding library Sofa.Component.Compat; Adding library Sofa.Type; Adding library Sofa.Geometry; Adding library Sofa.Topology; Adding library Sofa.Helper; Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; Found Json: /home/giang/sofa/src/extlibs/json (Required is at least version ""3.1.2"") ; Found STB: /home/giang/sofa/src/extlibs/stb ; Found DIFFLIB: /home/giang/sofa/src/extlibs/difflib ; Adding library Sofa.LinearAlgebra; Adding library Sofa.DefaultType; Adding library Sofa.Core; Adding library Sofa.Simulation; Adding library Sofa.Simulation.Core; Adding library Sofa.Simulation.Common; Adding library Sofa.Simulation.Graph; Adding library Sofa.Testing; Found PythonInterp: /usr/bin/python (found version ""3.8.10"") ; Looking for pthread.h; Looking for pthread.h - found; Performing Test CMAKE_HAVE_LIBC_PTHREAD; Perf",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:940,Deployability,install,install,940,"@alxbilger . > Hello, I think the actual error is in the output of the Cmake Gui(bottom part), could you copy-paste it ?. Sorry for the delay, here is the log output:; ```; The C compiler identification is Clang 10.0.0; The CXX compiler identification is Clang 10.0.0; Check for working C compiler: /usr/bin/clang; Check for working C compiler: /usr/bin/clang -- works; Detecting C compiler ABI info; Detecting C compiler ABI info - done; Detecting C compile features; Detecting C compile features - done; Check for working CXX compiler: /usr/bin/clang++; Check for working CXX compiler: /usr/bin/clang++ -- works; Detecting CXX compiler ABI info; Detecting CXX compiler ABI info - done; Detecting CXX compile features; Detecting CXX compile features - done; Setting build type to Release as none was specified.; -- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).; Install prefix: /home/giang/sofa/build/install; Adding library Sofa.Config; Using legacy headers is enabled.; Headers from v21.12 are usable, but it is advised to change your code to use the new headers introduced in v22.06.; Adding library Sofa.Compat; Adding library Sofa.Component.Compat; Adding library Sofa.Type; Adding library Sofa.Geometry; Adding library Sofa.Topology; Adding library Sofa.Helper; Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; Found Json: /home/giang/sofa/src/extlibs/json (Required is at least version ""3.1.2"") ; Found STB: /home/giang/sofa/src/extlibs/stb ; Found DIFFLIB: /home/giang/sofa/src/extlibs/difflib ; Adding library Sofa.LinearAlgebra; Adding library Sofa.DefaultType; Adding library Sofa.Core; Adding library Sofa.Simulation; Adding library Sofa.Simulation.Core; Adding library Sofa.Simulation.Common; Adding library Sofa.Simulation.Graph; Adding library Sofa.Testing; Found PythonInterp: /usr/bin/python (found version ""3.8.10"") ; Looking for pthread.h; Looking for pthread.h - found; Performing Test CMAKE_HAVE_LIBC_PTHREAD; Perf",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:5642,Integrability,depend,dependent,5642,"onent.Collision.Detection.Intersection; Adding module Sofa.Component.Collision.Response; Adding module Sofa.Component.Collision.Response.Mapper; Adding module Sofa.Component.Collision.Response.Contact; Adding module Sofa.Component.Setting; Adding module Sofa.Component.Controller; Adding module Sofa.Component.Engine; Adding module Sofa.Component.Engine.Analyze; Adding module Sofa.Component.Engine.Generate; Adding module Sofa.Component.Engine.Select; Adding module Sofa.Component.Engine.Transform; Adding module Sofa.Component.Haptics; Adding library Sofa.GL; Found OpenGL: /usr/lib/x86_64-linux-gnu/libOpenGL.so ; Found GLEW: /usr/include (found version ""2.1.0"") ; Adding module Sofa.GL.Component; Adding module Sofa.GL.Component.Rendering2D; Adding module Sofa.GL.Component.Rendering3D; Adding module Sofa.GL.Component.Engine; Adding module Sofa.GL.Component.Shader; Adding module Sofa.GUI.Component; Adding library Sofa.GUI.Common; cxxopts version 2.2.0; -- Sofa.GUI.Common: Sofa.GL dependent features enabled.; Adding library Sofa.GUI.Batch; Adding library Sofa.GUI.Qt; Sofa.GUI.Qt: will use Qt5; Sofa.GUI.Qt: Qt5Charts not found. No chart nor Profile will be compiled; -- FFmpeg executable was found /usr/bin/ffmpeg; Sofa.GUI.Qt: QtCharts not found, SofaWindowProfiler will not be built.; Sofa.GUI.Qt: Qt5WebEngine not found, QDocBrowser will not be built.; Adding collection SofaGui; Adding collection SofaGuiCommon; Adding collection SofaGuiQt; Adding collection SofaFramework; Adding collection SofaSimulation; Adding collection SofaBase; Adding collection SofaSimpleFem; Adding collection SofaRigid; Adding collection SofaDeformable; Adding collection SofaObjectInteraction; Adding collection SofaMeshCollision; Adding collection SofaEngine; Adding collection SofaExplicitOdeSolver; Adding collection SofaImplicitOdeSolver; Adding collection SofaLoader; Adding collection SofaGeneralVisual; Adding collection SofaGraphComponent; Adding collection SofaGeneralMeshCollision; Adding collectio",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:8798,Integrability,message,message,8798,"ra; Adding collection SofaMiscForceField; Adding collection SofaMiscEngine; Adding collection SofaMiscSolver; Adding collection SofaMiscFem; Adding collection SofaMiscMapping; Adding collection SofaMiscCollision; Adding collection SofaHaptics; Adding plugin SofaValidation; Adding collection SofaGeneralObjectInteraction; Adding collection SofaCommon; Adding collection SofaGeneral; Adding collection SofaAdvanced; Adding collection SofaMisc; Adding collection SofaComponentAll; Adding plugin SceneCreator; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin ArticulatedSystemPlugin; CMake Error: File /home/giang/sofa/src/applications/plugins/SofaPython/ExternalProjectConfig.cmake.in does not exist.; CMake Error at Sofa/framework/Config/cmake/SofaMacrosConfigure.cmake:266 (configure_file):; configure_file Problem configuring file; Call Stack (most recent call first):; Sofa/framework/Config/cmake/SofaMacrosConfigure.cmake:295 (sofa_add_generic_external); applications/plugins/CMakeLists.txt:22 (sofa_add_subdirectory). SofaPython3 is compiled as a subproject to the external project 'Sofa'.; Adding plugin SofaPython3; CMake Error at /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:146 (message):; Could NOT find Python (missing: Python_LIBRARIES Python_INCLUDE_DIRS; Development) (found suitable version ""3.9.5"", minimum required is ""3.7""); Call Stack (most recent call first):; /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:393 (_FPHSA_FAILURE_MESSAGE); /usr/share/cmake-3.16/Modules/FindPython/Support.cmake:2214 (find_package_handle_standard_args); /usr/share/cmake-3.16/Modules/FindPython.cmake:304 (include); applications/plugins/SofaPython3/CMakeLists.txt:86 (find_package). Configuring incomplete, errors occurred!; See also ""/home/giang/sofa/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/giang/sofa/build/CMakeFiles/CMakeError.log"".; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:969,Modifiability,Config,Config,969,"@alxbilger . > Hello, I think the actual error is in the output of the Cmake Gui(bottom part), could you copy-paste it ?. Sorry for the delay, here is the log output:; ```; The C compiler identification is Clang 10.0.0; The CXX compiler identification is Clang 10.0.0; Check for working C compiler: /usr/bin/clang; Check for working C compiler: /usr/bin/clang -- works; Detecting C compiler ABI info; Detecting C compiler ABI info - done; Detecting C compile features; Detecting C compile features - done; Check for working CXX compiler: /usr/bin/clang++; Check for working CXX compiler: /usr/bin/clang++ -- works; Detecting CXX compiler ABI info; Detecting CXX compiler ABI info - done; Detecting CXX compile features; Detecting CXX compile features - done; Setting build type to Release as none was specified.; -- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).; Install prefix: /home/giang/sofa/build/install; Adding library Sofa.Config; Using legacy headers is enabled.; Headers from v21.12 are usable, but it is advised to change your code to use the new headers introduced in v22.06.; Adding library Sofa.Compat; Adding library Sofa.Component.Compat; Adding library Sofa.Type; Adding library Sofa.Geometry; Adding library Sofa.Topology; Adding library Sofa.Helper; Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; Found Json: /home/giang/sofa/src/extlibs/json (Required is at least version ""3.1.2"") ; Found STB: /home/giang/sofa/src/extlibs/stb ; Found DIFFLIB: /home/giang/sofa/src/extlibs/difflib ; Adding library Sofa.LinearAlgebra; Adding library Sofa.DefaultType; Adding library Sofa.Core; Adding library Sofa.Simulation; Adding library Sofa.Simulation.Core; Adding library Sofa.Simulation.Common; Adding library Sofa.Simulation.Graph; Adding library Sofa.Testing; Found PythonInterp: /usr/bin/python (found version ""3.8.10"") ; Looking for pthread.h; Looking for pthread.h - found; Performing Test CMAKE_HAVE_LIBC_PTHREAD; Perf",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:7734,Modifiability,plugin,plugin,7734,; Adding collection SofaDeformable; Adding collection SofaObjectInteraction; Adding collection SofaMeshCollision; Adding collection SofaEngine; Adding collection SofaExplicitOdeSolver; Adding collection SofaImplicitOdeSolver; Adding collection SofaLoader; Adding collection SofaGeneralVisual; Adding collection SofaGraphComponent; Adding collection SofaGeneralMeshCollision; Adding collection SofaBoundaryCondition; Adding collection SofaGeneralAnimationLoop; Adding collection SofaGeneralDeformable; Adding collection SofaGeneralEngine; Adding collection SofaGeneralExplicitOdeSolver; Adding collection SofaGeneralImplicitOdeSolver; Adding collection SofaGeneralLinearSolver; Adding collection SofaGeneralRigid; Adding collection SofaGeneralSimpleFem; Adding collection SofaGeneralTopology; Adding collection SofaTopologyMapping; Adding collection SofaUserInteraction; Adding collection SofaConstraint; Adding collection SofaGeneralLoader; Adding collection SofaExporter; Adding collection SofaSparseSolver; Adding collection SofaPreconditioner; Adding collection SofaDenseSolver; Adding collection SofaNonUniformFem; Adding collection SofaOpenglVisual; Adding collection SofaMiscTopology; Adding collection SofaMiscExtra; Adding collection SofaMiscForceField; Adding collection SofaMiscEngine; Adding collection SofaMiscSolver; Adding collection SofaMiscFem; Adding collection SofaMiscMapping; Adding collection SofaMiscCollision; Adding collection SofaHaptics; Adding plugin SofaValidation; Adding collection SofaGeneralObjectInteraction; Adding collection SofaCommon; Adding collection SofaGeneral; Adding collection SofaAdvanced; Adding collection SofaMisc; Adding collection SofaComponentAll; Adding plugin SceneCreator; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin ArticulatedSystemPlugin; CMake Error: File /home/giang/sofa/src/applications/plugins/SofaPython/ExternalProjectConfig.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:7969,Modifiability,plugin,plugin,7969,; Adding collection SofaDeformable; Adding collection SofaObjectInteraction; Adding collection SofaMeshCollision; Adding collection SofaEngine; Adding collection SofaExplicitOdeSolver; Adding collection SofaImplicitOdeSolver; Adding collection SofaLoader; Adding collection SofaGeneralVisual; Adding collection SofaGraphComponent; Adding collection SofaGeneralMeshCollision; Adding collection SofaBoundaryCondition; Adding collection SofaGeneralAnimationLoop; Adding collection SofaGeneralDeformable; Adding collection SofaGeneralEngine; Adding collection SofaGeneralExplicitOdeSolver; Adding collection SofaGeneralImplicitOdeSolver; Adding collection SofaGeneralLinearSolver; Adding collection SofaGeneralRigid; Adding collection SofaGeneralSimpleFem; Adding collection SofaGeneralTopology; Adding collection SofaTopologyMapping; Adding collection SofaUserInteraction; Adding collection SofaConstraint; Adding collection SofaGeneralLoader; Adding collection SofaExporter; Adding collection SofaSparseSolver; Adding collection SofaPreconditioner; Adding collection SofaDenseSolver; Adding collection SofaNonUniformFem; Adding collection SofaOpenglVisual; Adding collection SofaMiscTopology; Adding collection SofaMiscExtra; Adding collection SofaMiscForceField; Adding collection SofaMiscEngine; Adding collection SofaMiscSolver; Adding collection SofaMiscFem; Adding collection SofaMiscMapping; Adding collection SofaMiscCollision; Adding collection SofaHaptics; Adding plugin SofaValidation; Adding collection SofaGeneralObjectInteraction; Adding collection SofaCommon; Adding collection SofaGeneral; Adding collection SofaAdvanced; Adding collection SofaMisc; Adding collection SofaComponentAll; Adding plugin SceneCreator; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin ArticulatedSystemPlugin; CMake Error: File /home/giang/sofa/src/applications/plugins/SofaPython/ExternalProjectConfig.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:7997,Modifiability,plugin,plugin,7997,; Adding collection SofaDeformable; Adding collection SofaObjectInteraction; Adding collection SofaMeshCollision; Adding collection SofaEngine; Adding collection SofaExplicitOdeSolver; Adding collection SofaImplicitOdeSolver; Adding collection SofaLoader; Adding collection SofaGeneralVisual; Adding collection SofaGraphComponent; Adding collection SofaGeneralMeshCollision; Adding collection SofaBoundaryCondition; Adding collection SofaGeneralAnimationLoop; Adding collection SofaGeneralDeformable; Adding collection SofaGeneralEngine; Adding collection SofaGeneralExplicitOdeSolver; Adding collection SofaGeneralImplicitOdeSolver; Adding collection SofaGeneralLinearSolver; Adding collection SofaGeneralRigid; Adding collection SofaGeneralSimpleFem; Adding collection SofaGeneralTopology; Adding collection SofaTopologyMapping; Adding collection SofaUserInteraction; Adding collection SofaConstraint; Adding collection SofaGeneralLoader; Adding collection SofaExporter; Adding collection SofaSparseSolver; Adding collection SofaPreconditioner; Adding collection SofaDenseSolver; Adding collection SofaNonUniformFem; Adding collection SofaOpenglVisual; Adding collection SofaMiscTopology; Adding collection SofaMiscExtra; Adding collection SofaMiscForceField; Adding collection SofaMiscEngine; Adding collection SofaMiscSolver; Adding collection SofaMiscFem; Adding collection SofaMiscMapping; Adding collection SofaMiscCollision; Adding collection SofaHaptics; Adding plugin SofaValidation; Adding collection SofaGeneralObjectInteraction; Adding collection SofaCommon; Adding collection SofaGeneral; Adding collection SofaAdvanced; Adding collection SofaMisc; Adding collection SofaComponentAll; Adding plugin SceneCreator; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin ArticulatedSystemPlugin; CMake Error: File /home/giang/sofa/src/applications/plugins/SofaPython/ExternalProjectConfig.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:8139,Modifiability,plugin,plugin,8139,; Adding collection SofaDeformable; Adding collection SofaObjectInteraction; Adding collection SofaMeshCollision; Adding collection SofaEngine; Adding collection SofaExplicitOdeSolver; Adding collection SofaImplicitOdeSolver; Adding collection SofaLoader; Adding collection SofaGeneralVisual; Adding collection SofaGraphComponent; Adding collection SofaGeneralMeshCollision; Adding collection SofaBoundaryCondition; Adding collection SofaGeneralAnimationLoop; Adding collection SofaGeneralDeformable; Adding collection SofaGeneralEngine; Adding collection SofaGeneralExplicitOdeSolver; Adding collection SofaGeneralImplicitOdeSolver; Adding collection SofaGeneralLinearSolver; Adding collection SofaGeneralRigid; Adding collection SofaGeneralSimpleFem; Adding collection SofaGeneralTopology; Adding collection SofaTopologyMapping; Adding collection SofaUserInteraction; Adding collection SofaConstraint; Adding collection SofaGeneralLoader; Adding collection SofaExporter; Adding collection SofaSparseSolver; Adding collection SofaPreconditioner; Adding collection SofaDenseSolver; Adding collection SofaNonUniformFem; Adding collection SofaOpenglVisual; Adding collection SofaMiscTopology; Adding collection SofaMiscExtra; Adding collection SofaMiscForceField; Adding collection SofaMiscEngine; Adding collection SofaMiscSolver; Adding collection SofaMiscFem; Adding collection SofaMiscMapping; Adding collection SofaMiscCollision; Adding collection SofaHaptics; Adding plugin SofaValidation; Adding collection SofaGeneralObjectInteraction; Adding collection SofaCommon; Adding collection SofaGeneral; Adding collection SofaAdvanced; Adding collection SofaMisc; Adding collection SofaComponentAll; Adding plugin SceneCreator; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin ArticulatedSystemPlugin; CMake Error: File /home/giang/sofa/src/applications/plugins/SofaPython/ExternalProjectConfig.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:8223,Modifiability,plugin,plugins,8223,; Adding collection SofaDeformable; Adding collection SofaObjectInteraction; Adding collection SofaMeshCollision; Adding collection SofaEngine; Adding collection SofaExplicitOdeSolver; Adding collection SofaImplicitOdeSolver; Adding collection SofaLoader; Adding collection SofaGeneralVisual; Adding collection SofaGraphComponent; Adding collection SofaGeneralMeshCollision; Adding collection SofaBoundaryCondition; Adding collection SofaGeneralAnimationLoop; Adding collection SofaGeneralDeformable; Adding collection SofaGeneralEngine; Adding collection SofaGeneralExplicitOdeSolver; Adding collection SofaGeneralImplicitOdeSolver; Adding collection SofaGeneralLinearSolver; Adding collection SofaGeneralRigid; Adding collection SofaGeneralSimpleFem; Adding collection SofaGeneralTopology; Adding collection SofaTopologyMapping; Adding collection SofaUserInteraction; Adding collection SofaConstraint; Adding collection SofaGeneralLoader; Adding collection SofaExporter; Adding collection SofaSparseSolver; Adding collection SofaPreconditioner; Adding collection SofaDenseSolver; Adding collection SofaNonUniformFem; Adding collection SofaOpenglVisual; Adding collection SofaMiscTopology; Adding collection SofaMiscExtra; Adding collection SofaMiscForceField; Adding collection SofaMiscEngine; Adding collection SofaMiscSolver; Adding collection SofaMiscFem; Adding collection SofaMiscMapping; Adding collection SofaMiscCollision; Adding collection SofaHaptics; Adding plugin SofaValidation; Adding collection SofaGeneralObjectInteraction; Adding collection SofaCommon; Adding collection SofaGeneral; Adding collection SofaAdvanced; Adding collection SofaMisc; Adding collection SofaComponentAll; Adding plugin SceneCreator; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin ArticulatedSystemPlugin; CMake Error: File /home/giang/sofa/src/applications/plugins/SofaPython/ExternalProjectConfig.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:8320,Modifiability,Config,Config,8320,"lection SofaDenseSolver; Adding collection SofaNonUniformFem; Adding collection SofaOpenglVisual; Adding collection SofaMiscTopology; Adding collection SofaMiscExtra; Adding collection SofaMiscForceField; Adding collection SofaMiscEngine; Adding collection SofaMiscSolver; Adding collection SofaMiscFem; Adding collection SofaMiscMapping; Adding collection SofaMiscCollision; Adding collection SofaHaptics; Adding plugin SofaValidation; Adding collection SofaGeneralObjectInteraction; Adding collection SofaCommon; Adding collection SofaGeneral; Adding collection SofaAdvanced; Adding collection SofaMisc; Adding collection SofaComponentAll; Adding plugin SceneCreator; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin ArticulatedSystemPlugin; CMake Error: File /home/giang/sofa/src/applications/plugins/SofaPython/ExternalProjectConfig.cmake.in does not exist.; CMake Error at Sofa/framework/Config/cmake/SofaMacrosConfigure.cmake:266 (configure_file):; configure_file Problem configuring file; Call Stack (most recent call first):; Sofa/framework/Config/cmake/SofaMacrosConfigure.cmake:295 (sofa_add_generic_external); applications/plugins/CMakeLists.txt:22 (sofa_add_subdirectory). SofaPython3 is compiled as a subproject to the external project 'Sofa'.; Adding plugin SofaPython3; CMake Error at /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:146 (message):; Could NOT find Python (missing: Python_LIBRARIES Python_INCLUDE_DIRS; Development) (found suitable version ""3.9.5"", minimum required is ""3.7""); Call Stack (most recent call first):; /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:393 (_FPHSA_FAILURE_MESSAGE); /usr/share/cmake-3.16/Modules/FindPython/Support.cmake:2214 (find_package_handle_standard_args); /usr/share/cmake-3.16/Modules/FindPython.cmake:304 (include); applications/plugins/SofaPython3/CMakeLists.txt:86 (find_package). Configur",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:8405,Modifiability,config,configuring,8405,"tion SofaMiscTopology; Adding collection SofaMiscExtra; Adding collection SofaMiscForceField; Adding collection SofaMiscEngine; Adding collection SofaMiscSolver; Adding collection SofaMiscFem; Adding collection SofaMiscMapping; Adding collection SofaMiscCollision; Adding collection SofaHaptics; Adding plugin SofaValidation; Adding collection SofaGeneralObjectInteraction; Adding collection SofaCommon; Adding collection SofaGeneral; Adding collection SofaAdvanced; Adding collection SofaMisc; Adding collection SofaComponentAll; Adding plugin SceneCreator; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin ArticulatedSystemPlugin; CMake Error: File /home/giang/sofa/src/applications/plugins/SofaPython/ExternalProjectConfig.cmake.in does not exist.; CMake Error at Sofa/framework/Config/cmake/SofaMacrosConfigure.cmake:266 (configure_file):; configure_file Problem configuring file; Call Stack (most recent call first):; Sofa/framework/Config/cmake/SofaMacrosConfigure.cmake:295 (sofa_add_generic_external); applications/plugins/CMakeLists.txt:22 (sofa_add_subdirectory). SofaPython3 is compiled as a subproject to the external project 'Sofa'.; Adding plugin SofaPython3; CMake Error at /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:146 (message):; Could NOT find Python (missing: Python_LIBRARIES Python_INCLUDE_DIRS; Development) (found suitable version ""3.9.5"", minimum required is ""3.7""); Call Stack (most recent call first):; /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:393 (_FPHSA_FAILURE_MESSAGE); /usr/share/cmake-3.16/Modules/FindPython/Support.cmake:2214 (find_package_handle_standard_args); /usr/share/cmake-3.16/Modules/FindPython.cmake:304 (include); applications/plugins/SofaPython3/CMakeLists.txt:86 (find_package). Configuring incomplete, errors occurred!; See also ""/home/giang/sofa/build/CMakeFiles/CMakeOutput.log"".; See also ""/ho",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:8476,Modifiability,Config,Config,8476,"tion SofaMiscTopology; Adding collection SofaMiscExtra; Adding collection SofaMiscForceField; Adding collection SofaMiscEngine; Adding collection SofaMiscSolver; Adding collection SofaMiscFem; Adding collection SofaMiscMapping; Adding collection SofaMiscCollision; Adding collection SofaHaptics; Adding plugin SofaValidation; Adding collection SofaGeneralObjectInteraction; Adding collection SofaCommon; Adding collection SofaGeneral; Adding collection SofaAdvanced; Adding collection SofaMisc; Adding collection SofaComponentAll; Adding plugin SceneCreator; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin ArticulatedSystemPlugin; CMake Error: File /home/giang/sofa/src/applications/plugins/SofaPython/ExternalProjectConfig.cmake.in does not exist.; CMake Error at Sofa/framework/Config/cmake/SofaMacrosConfigure.cmake:266 (configure_file):; configure_file Problem configuring file; Call Stack (most recent call first):; Sofa/framework/Config/cmake/SofaMacrosConfigure.cmake:295 (sofa_add_generic_external); applications/plugins/CMakeLists.txt:22 (sofa_add_subdirectory). SofaPython3 is compiled as a subproject to the external project 'Sofa'.; Adding plugin SofaPython3; CMake Error at /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:146 (message):; Could NOT find Python (missing: Python_LIBRARIES Python_INCLUDE_DIRS; Development) (found suitable version ""3.9.5"", minimum required is ""3.7""); Call Stack (most recent call first):; /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:393 (_FPHSA_FAILURE_MESSAGE); /usr/share/cmake-3.16/Modules/FindPython/Support.cmake:2214 (find_package_handle_standard_args); /usr/share/cmake-3.16/Modules/FindPython.cmake:304 (include); applications/plugins/SofaPython3/CMakeLists.txt:86 (find_package). Configuring incomplete, errors occurred!; See also ""/home/giang/sofa/build/CMakeFiles/CMakeOutput.log"".; See also ""/ho",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:8561,Modifiability,plugin,plugins,8561,"ra; Adding collection SofaMiscForceField; Adding collection SofaMiscEngine; Adding collection SofaMiscSolver; Adding collection SofaMiscFem; Adding collection SofaMiscMapping; Adding collection SofaMiscCollision; Adding collection SofaHaptics; Adding plugin SofaValidation; Adding collection SofaGeneralObjectInteraction; Adding collection SofaCommon; Adding collection SofaGeneral; Adding collection SofaAdvanced; Adding collection SofaMisc; Adding collection SofaComponentAll; Adding plugin SceneCreator; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin ArticulatedSystemPlugin; CMake Error: File /home/giang/sofa/src/applications/plugins/SofaPython/ExternalProjectConfig.cmake.in does not exist.; CMake Error at Sofa/framework/Config/cmake/SofaMacrosConfigure.cmake:266 (configure_file):; configure_file Problem configuring file; Call Stack (most recent call first):; Sofa/framework/Config/cmake/SofaMacrosConfigure.cmake:295 (sofa_add_generic_external); applications/plugins/CMakeLists.txt:22 (sofa_add_subdirectory). SofaPython3 is compiled as a subproject to the external project 'Sofa'.; Adding plugin SofaPython3; CMake Error at /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:146 (message):; Could NOT find Python (missing: Python_LIBRARIES Python_INCLUDE_DIRS; Development) (found suitable version ""3.9.5"", minimum required is ""3.7""); Call Stack (most recent call first):; /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:393 (_FPHSA_FAILURE_MESSAGE); /usr/share/cmake-3.16/Modules/FindPython/Support.cmake:2214 (find_package_handle_standard_args); /usr/share/cmake-3.16/Modules/FindPython.cmake:304 (include); applications/plugins/SofaPython3/CMakeLists.txt:86 (find_package). Configuring incomplete, errors occurred!; See also ""/home/giang/sofa/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/giang/sofa/build/CMakeFiles/CMakeError.log"".; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:8692,Modifiability,plugin,plugin,8692,"ra; Adding collection SofaMiscForceField; Adding collection SofaMiscEngine; Adding collection SofaMiscSolver; Adding collection SofaMiscFem; Adding collection SofaMiscMapping; Adding collection SofaMiscCollision; Adding collection SofaHaptics; Adding plugin SofaValidation; Adding collection SofaGeneralObjectInteraction; Adding collection SofaCommon; Adding collection SofaGeneral; Adding collection SofaAdvanced; Adding collection SofaMisc; Adding collection SofaComponentAll; Adding plugin SceneCreator; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin ArticulatedSystemPlugin; CMake Error: File /home/giang/sofa/src/applications/plugins/SofaPython/ExternalProjectConfig.cmake.in does not exist.; CMake Error at Sofa/framework/Config/cmake/SofaMacrosConfigure.cmake:266 (configure_file):; configure_file Problem configuring file; Call Stack (most recent call first):; Sofa/framework/Config/cmake/SofaMacrosConfigure.cmake:295 (sofa_add_generic_external); applications/plugins/CMakeLists.txt:22 (sofa_add_subdirectory). SofaPython3 is compiled as a subproject to the external project 'Sofa'.; Adding plugin SofaPython3; CMake Error at /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:146 (message):; Could NOT find Python (missing: Python_LIBRARIES Python_INCLUDE_DIRS; Development) (found suitable version ""3.9.5"", minimum required is ""3.7""); Call Stack (most recent call first):; /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:393 (_FPHSA_FAILURE_MESSAGE); /usr/share/cmake-3.16/Modules/FindPython/Support.cmake:2214 (find_package_handle_standard_args); /usr/share/cmake-3.16/Modules/FindPython.cmake:304 (include); applications/plugins/SofaPython3/CMakeLists.txt:86 (find_package). Configuring incomplete, errors occurred!; See also ""/home/giang/sofa/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/giang/sofa/build/CMakeFiles/CMakeError.log"".; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:9259,Modifiability,plugin,plugins,9259,"ra; Adding collection SofaMiscForceField; Adding collection SofaMiscEngine; Adding collection SofaMiscSolver; Adding collection SofaMiscFem; Adding collection SofaMiscMapping; Adding collection SofaMiscCollision; Adding collection SofaHaptics; Adding plugin SofaValidation; Adding collection SofaGeneralObjectInteraction; Adding collection SofaCommon; Adding collection SofaGeneral; Adding collection SofaAdvanced; Adding collection SofaMisc; Adding collection SofaComponentAll; Adding plugin SceneCreator; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin ArticulatedSystemPlugin; CMake Error: File /home/giang/sofa/src/applications/plugins/SofaPython/ExternalProjectConfig.cmake.in does not exist.; CMake Error at Sofa/framework/Config/cmake/SofaMacrosConfigure.cmake:266 (configure_file):; configure_file Problem configuring file; Call Stack (most recent call first):; Sofa/framework/Config/cmake/SofaMacrosConfigure.cmake:295 (sofa_add_generic_external); applications/plugins/CMakeLists.txt:22 (sofa_add_subdirectory). SofaPython3 is compiled as a subproject to the external project 'Sofa'.; Adding plugin SofaPython3; CMake Error at /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:146 (message):; Could NOT find Python (missing: Python_LIBRARIES Python_INCLUDE_DIRS; Development) (found suitable version ""3.9.5"", minimum required is ""3.7""); Call Stack (most recent call first):; /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:393 (_FPHSA_FAILURE_MESSAGE); /usr/share/cmake-3.16/Modules/FindPython/Support.cmake:2214 (find_package_handle_standard_args); /usr/share/cmake-3.16/Modules/FindPython.cmake:304 (include); applications/plugins/SofaPython3/CMakeLists.txt:86 (find_package). Configuring incomplete, errors occurred!; See also ""/home/giang/sofa/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/giang/sofa/build/CMakeFiles/CMakeError.log"".; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:9313,Modifiability,Config,Configuring,9313,"ra; Adding collection SofaMiscForceField; Adding collection SofaMiscEngine; Adding collection SofaMiscSolver; Adding collection SofaMiscFem; Adding collection SofaMiscMapping; Adding collection SofaMiscCollision; Adding collection SofaHaptics; Adding plugin SofaValidation; Adding collection SofaGeneralObjectInteraction; Adding collection SofaCommon; Adding collection SofaGeneral; Adding collection SofaAdvanced; Adding collection SofaMisc; Adding collection SofaComponentAll; Adding plugin SceneCreator; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin ArticulatedSystemPlugin; CMake Error: File /home/giang/sofa/src/applications/plugins/SofaPython/ExternalProjectConfig.cmake.in does not exist.; CMake Error at Sofa/framework/Config/cmake/SofaMacrosConfigure.cmake:266 (configure_file):; configure_file Problem configuring file; Call Stack (most recent call first):; Sofa/framework/Config/cmake/SofaMacrosConfigure.cmake:295 (sofa_add_generic_external); applications/plugins/CMakeLists.txt:22 (sofa_add_subdirectory). SofaPython3 is compiled as a subproject to the external project 'Sofa'.; Adding plugin SofaPython3; CMake Error at /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:146 (message):; Could NOT find Python (missing: Python_LIBRARIES Python_INCLUDE_DIRS; Development) (found suitable version ""3.9.5"", minimum required is ""3.7""); Call Stack (most recent call first):; /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:393 (_FPHSA_FAILURE_MESSAGE); /usr/share/cmake-3.16/Modules/FindPython/Support.cmake:2214 (find_package_handle_standard_args); /usr/share/cmake-3.16/Modules/FindPython.cmake:304 (include); applications/plugins/SofaPython3/CMakeLists.txt:86 (find_package). Configuring incomplete, errors occurred!; See also ""/home/giang/sofa/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/giang/sofa/build/CMakeFiles/CMakeError.log"".; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:1956,Performance,Perform,Performing,1956,"ised to change your code to use the new headers introduced in v22.06.; Adding library Sofa.Compat; Adding library Sofa.Component.Compat; Adding library Sofa.Type; Adding library Sofa.Geometry; Adding library Sofa.Topology; Adding library Sofa.Helper; Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; Found Json: /home/giang/sofa/src/extlibs/json (Required is at least version ""3.1.2"") ; Found STB: /home/giang/sofa/src/extlibs/stb ; Found DIFFLIB: /home/giang/sofa/src/extlibs/difflib ; Adding library Sofa.LinearAlgebra; Adding library Sofa.DefaultType; Adding library Sofa.Core; Adding library Sofa.Simulation; Adding library Sofa.Simulation.Core; Adding library Sofa.Simulation.Common; Adding library Sofa.Simulation.Graph; Adding library Sofa.Testing; Found PythonInterp: /usr/bin/python (found version ""3.8.10"") ; Looking for pthread.h; Looking for pthread.h - found; Performing Test CMAKE_HAVE_LIBC_PTHREAD; Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; Check if compiler accepts -pthread; Check if compiler accepts -pthread - yes; Found Threads: TRUE ; Adding library Sofa.Framework; Adding module Sofa.Component; Adding module Sofa.Component.ODESolver; Adding module Sofa.Component.ODESolver.Forward; Adding module Sofa.Component.ODESolver.Backward; Adding module Sofa.Component.IO; Adding module Sofa.Component.IO.Mesh; Found ZLIB: /usr/lib/x86_64-linux-gnu/libz.so (found version ""1.2.11"") ; Adding module Sofa.Component.Playback; Adding module Sofa.Component.SceneUtility; Adding module Sofa.Component.Topology; Adding module Sofa.Component.Topology.Container; Adding module Sofa.Component.Topology.Container.Constant; Adding module Sofa.Component.Topology.Container.Dynamic; Adding module Sofa.Component.Topology.Container.Grid; Adding module Sofa.Component.Topology.Mapping; Adding module Sofa.Component.Topology.Utility; Adding module Sofa.Component.Visual; Adding module Sofa.Component.LinearSolver; Adding module Sofa.Component.LinearSolver.Iterative; A",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:1997,Performance,Perform,Performing,1997,"ised to change your code to use the new headers introduced in v22.06.; Adding library Sofa.Compat; Adding library Sofa.Component.Compat; Adding library Sofa.Type; Adding library Sofa.Geometry; Adding library Sofa.Topology; Adding library Sofa.Helper; Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; Found Json: /home/giang/sofa/src/extlibs/json (Required is at least version ""3.1.2"") ; Found STB: /home/giang/sofa/src/extlibs/stb ; Found DIFFLIB: /home/giang/sofa/src/extlibs/difflib ; Adding library Sofa.LinearAlgebra; Adding library Sofa.DefaultType; Adding library Sofa.Core; Adding library Sofa.Simulation; Adding library Sofa.Simulation.Core; Adding library Sofa.Simulation.Common; Adding library Sofa.Simulation.Graph; Adding library Sofa.Testing; Found PythonInterp: /usr/bin/python (found version ""3.8.10"") ; Looking for pthread.h; Looking for pthread.h - found; Performing Test CMAKE_HAVE_LIBC_PTHREAD; Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; Check if compiler accepts -pthread; Check if compiler accepts -pthread - yes; Found Threads: TRUE ; Adding library Sofa.Framework; Adding module Sofa.Component; Adding module Sofa.Component.ODESolver; Adding module Sofa.Component.ODESolver.Forward; Adding module Sofa.Component.ODESolver.Backward; Adding module Sofa.Component.IO; Adding module Sofa.Component.IO.Mesh; Found ZLIB: /usr/lib/x86_64-linux-gnu/libz.so (found version ""1.2.11"") ; Adding module Sofa.Component.Playback; Adding module Sofa.Component.SceneUtility; Adding module Sofa.Component.Topology; Adding module Sofa.Component.Topology.Container; Adding module Sofa.Component.Topology.Container.Constant; Adding module Sofa.Component.Topology.Container.Dynamic; Adding module Sofa.Component.Topology.Container.Grid; Adding module Sofa.Component.Topology.Mapping; Adding module Sofa.Component.Topology.Utility; Adding module Sofa.Component.Visual; Adding module Sofa.Component.LinearSolver; Adding module Sofa.Component.LinearSolver.Iterative; A",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:370,Safety,Detect,Detecting,370,"@alxbilger . > Hello, I think the actual error is in the output of the Cmake Gui(bottom part), could you copy-paste it ?. Sorry for the delay, here is the log output:; ```; The C compiler identification is Clang 10.0.0; The CXX compiler identification is Clang 10.0.0; Check for working C compiler: /usr/bin/clang; Check for working C compiler: /usr/bin/clang -- works; Detecting C compiler ABI info; Detecting C compiler ABI info - done; Detecting C compile features; Detecting C compile features - done; Check for working CXX compiler: /usr/bin/clang++; Check for working CXX compiler: /usr/bin/clang++ -- works; Detecting CXX compiler ABI info; Detecting CXX compiler ABI info - done; Detecting CXX compile features; Detecting CXX compile features - done; Setting build type to Release as none was specified.; -- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).; Install prefix: /home/giang/sofa/build/install; Adding library Sofa.Config; Using legacy headers is enabled.; Headers from v21.12 are usable, but it is advised to change your code to use the new headers introduced in v22.06.; Adding library Sofa.Compat; Adding library Sofa.Component.Compat; Adding library Sofa.Type; Adding library Sofa.Geometry; Adding library Sofa.Topology; Adding library Sofa.Helper; Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; Found Json: /home/giang/sofa/src/extlibs/json (Required is at least version ""3.1.2"") ; Found STB: /home/giang/sofa/src/extlibs/stb ; Found DIFFLIB: /home/giang/sofa/src/extlibs/difflib ; Adding library Sofa.LinearAlgebra; Adding library Sofa.DefaultType; Adding library Sofa.Core; Adding library Sofa.Simulation; Adding library Sofa.Simulation.Core; Adding library Sofa.Simulation.Common; Adding library Sofa.Simulation.Graph; Adding library Sofa.Testing; Found PythonInterp: /usr/bin/python (found version ""3.8.10"") ; Looking for pthread.h; Looking for pthread.h - found; Performing Test CMAKE_HAVE_LIBC_PTHREAD; Perf",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:401,Safety,Detect,Detecting,401,"@alxbilger . > Hello, I think the actual error is in the output of the Cmake Gui(bottom part), could you copy-paste it ?. Sorry for the delay, here is the log output:; ```; The C compiler identification is Clang 10.0.0; The CXX compiler identification is Clang 10.0.0; Check for working C compiler: /usr/bin/clang; Check for working C compiler: /usr/bin/clang -- works; Detecting C compiler ABI info; Detecting C compiler ABI info - done; Detecting C compile features; Detecting C compile features - done; Check for working CXX compiler: /usr/bin/clang++; Check for working CXX compiler: /usr/bin/clang++ -- works; Detecting CXX compiler ABI info; Detecting CXX compiler ABI info - done; Detecting CXX compile features; Detecting CXX compile features - done; Setting build type to Release as none was specified.; -- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).; Install prefix: /home/giang/sofa/build/install; Adding library Sofa.Config; Using legacy headers is enabled.; Headers from v21.12 are usable, but it is advised to change your code to use the new headers introduced in v22.06.; Adding library Sofa.Compat; Adding library Sofa.Component.Compat; Adding library Sofa.Type; Adding library Sofa.Geometry; Adding library Sofa.Topology; Adding library Sofa.Helper; Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; Found Json: /home/giang/sofa/src/extlibs/json (Required is at least version ""3.1.2"") ; Found STB: /home/giang/sofa/src/extlibs/stb ; Found DIFFLIB: /home/giang/sofa/src/extlibs/difflib ; Adding library Sofa.LinearAlgebra; Adding library Sofa.DefaultType; Adding library Sofa.Core; Adding library Sofa.Simulation; Adding library Sofa.Simulation.Core; Adding library Sofa.Simulation.Common; Adding library Sofa.Simulation.Graph; Adding library Sofa.Testing; Found PythonInterp: /usr/bin/python (found version ""3.8.10"") ; Looking for pthread.h; Looking for pthread.h - found; Performing Test CMAKE_HAVE_LIBC_PTHREAD; Perf",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:439,Safety,Detect,Detecting,439,"@alxbilger . > Hello, I think the actual error is in the output of the Cmake Gui(bottom part), could you copy-paste it ?. Sorry for the delay, here is the log output:; ```; The C compiler identification is Clang 10.0.0; The CXX compiler identification is Clang 10.0.0; Check for working C compiler: /usr/bin/clang; Check for working C compiler: /usr/bin/clang -- works; Detecting C compiler ABI info; Detecting C compiler ABI info - done; Detecting C compile features; Detecting C compile features - done; Check for working CXX compiler: /usr/bin/clang++; Check for working CXX compiler: /usr/bin/clang++ -- works; Detecting CXX compiler ABI info; Detecting CXX compiler ABI info - done; Detecting CXX compile features; Detecting CXX compile features - done; Setting build type to Release as none was specified.; -- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).; Install prefix: /home/giang/sofa/build/install; Adding library Sofa.Config; Using legacy headers is enabled.; Headers from v21.12 are usable, but it is advised to change your code to use the new headers introduced in v22.06.; Adding library Sofa.Compat; Adding library Sofa.Component.Compat; Adding library Sofa.Type; Adding library Sofa.Geometry; Adding library Sofa.Topology; Adding library Sofa.Helper; Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; Found Json: /home/giang/sofa/src/extlibs/json (Required is at least version ""3.1.2"") ; Found STB: /home/giang/sofa/src/extlibs/stb ; Found DIFFLIB: /home/giang/sofa/src/extlibs/difflib ; Adding library Sofa.LinearAlgebra; Adding library Sofa.DefaultType; Adding library Sofa.Core; Adding library Sofa.Simulation; Adding library Sofa.Simulation.Core; Adding library Sofa.Simulation.Common; Adding library Sofa.Simulation.Graph; Adding library Sofa.Testing; Found PythonInterp: /usr/bin/python (found version ""3.8.10"") ; Looking for pthread.h; Looking for pthread.h - found; Performing Test CMAKE_HAVE_LIBC_PTHREAD; Perf",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:469,Safety,Detect,Detecting,469,"@alxbilger . > Hello, I think the actual error is in the output of the Cmake Gui(bottom part), could you copy-paste it ?. Sorry for the delay, here is the log output:; ```; The C compiler identification is Clang 10.0.0; The CXX compiler identification is Clang 10.0.0; Check for working C compiler: /usr/bin/clang; Check for working C compiler: /usr/bin/clang -- works; Detecting C compiler ABI info; Detecting C compiler ABI info - done; Detecting C compile features; Detecting C compile features - done; Check for working CXX compiler: /usr/bin/clang++; Check for working CXX compiler: /usr/bin/clang++ -- works; Detecting CXX compiler ABI info; Detecting CXX compiler ABI info - done; Detecting CXX compile features; Detecting CXX compile features - done; Setting build type to Release as none was specified.; -- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).; Install prefix: /home/giang/sofa/build/install; Adding library Sofa.Config; Using legacy headers is enabled.; Headers from v21.12 are usable, but it is advised to change your code to use the new headers introduced in v22.06.; Adding library Sofa.Compat; Adding library Sofa.Component.Compat; Adding library Sofa.Type; Adding library Sofa.Geometry; Adding library Sofa.Topology; Adding library Sofa.Helper; Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; Found Json: /home/giang/sofa/src/extlibs/json (Required is at least version ""3.1.2"") ; Found STB: /home/giang/sofa/src/extlibs/stb ; Found DIFFLIB: /home/giang/sofa/src/extlibs/difflib ; Adding library Sofa.LinearAlgebra; Adding library Sofa.DefaultType; Adding library Sofa.Core; Adding library Sofa.Simulation; Adding library Sofa.Simulation.Core; Adding library Sofa.Simulation.Common; Adding library Sofa.Simulation.Graph; Adding library Sofa.Testing; Found PythonInterp: /usr/bin/python (found version ""3.8.10"") ; Looking for pthread.h; Looking for pthread.h - found; Performing Test CMAKE_HAVE_LIBC_PTHREAD; Perf",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:615,Safety,Detect,Detecting,615,"@alxbilger . > Hello, I think the actual error is in the output of the Cmake Gui(bottom part), could you copy-paste it ?. Sorry for the delay, here is the log output:; ```; The C compiler identification is Clang 10.0.0; The CXX compiler identification is Clang 10.0.0; Check for working C compiler: /usr/bin/clang; Check for working C compiler: /usr/bin/clang -- works; Detecting C compiler ABI info; Detecting C compiler ABI info - done; Detecting C compile features; Detecting C compile features - done; Check for working CXX compiler: /usr/bin/clang++; Check for working CXX compiler: /usr/bin/clang++ -- works; Detecting CXX compiler ABI info; Detecting CXX compiler ABI info - done; Detecting CXX compile features; Detecting CXX compile features - done; Setting build type to Release as none was specified.; -- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).; Install prefix: /home/giang/sofa/build/install; Adding library Sofa.Config; Using legacy headers is enabled.; Headers from v21.12 are usable, but it is advised to change your code to use the new headers introduced in v22.06.; Adding library Sofa.Compat; Adding library Sofa.Component.Compat; Adding library Sofa.Type; Adding library Sofa.Geometry; Adding library Sofa.Topology; Adding library Sofa.Helper; Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; Found Json: /home/giang/sofa/src/extlibs/json (Required is at least version ""3.1.2"") ; Found STB: /home/giang/sofa/src/extlibs/stb ; Found DIFFLIB: /home/giang/sofa/src/extlibs/difflib ; Adding library Sofa.LinearAlgebra; Adding library Sofa.DefaultType; Adding library Sofa.Core; Adding library Sofa.Simulation; Adding library Sofa.Simulation.Core; Adding library Sofa.Simulation.Common; Adding library Sofa.Simulation.Graph; Adding library Sofa.Testing; Found PythonInterp: /usr/bin/python (found version ""3.8.10"") ; Looking for pthread.h; Looking for pthread.h - found; Performing Test CMAKE_HAVE_LIBC_PTHREAD; Perf",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:648,Safety,Detect,Detecting,648,"@alxbilger . > Hello, I think the actual error is in the output of the Cmake Gui(bottom part), could you copy-paste it ?. Sorry for the delay, here is the log output:; ```; The C compiler identification is Clang 10.0.0; The CXX compiler identification is Clang 10.0.0; Check for working C compiler: /usr/bin/clang; Check for working C compiler: /usr/bin/clang -- works; Detecting C compiler ABI info; Detecting C compiler ABI info - done; Detecting C compile features; Detecting C compile features - done; Check for working CXX compiler: /usr/bin/clang++; Check for working CXX compiler: /usr/bin/clang++ -- works; Detecting CXX compiler ABI info; Detecting CXX compiler ABI info - done; Detecting CXX compile features; Detecting CXX compile features - done; Setting build type to Release as none was specified.; -- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).; Install prefix: /home/giang/sofa/build/install; Adding library Sofa.Config; Using legacy headers is enabled.; Headers from v21.12 are usable, but it is advised to change your code to use the new headers introduced in v22.06.; Adding library Sofa.Compat; Adding library Sofa.Component.Compat; Adding library Sofa.Type; Adding library Sofa.Geometry; Adding library Sofa.Topology; Adding library Sofa.Helper; Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; Found Json: /home/giang/sofa/src/extlibs/json (Required is at least version ""3.1.2"") ; Found STB: /home/giang/sofa/src/extlibs/stb ; Found DIFFLIB: /home/giang/sofa/src/extlibs/difflib ; Adding library Sofa.LinearAlgebra; Adding library Sofa.DefaultType; Adding library Sofa.Core; Adding library Sofa.Simulation; Adding library Sofa.Simulation.Core; Adding library Sofa.Simulation.Common; Adding library Sofa.Simulation.Graph; Adding library Sofa.Testing; Found PythonInterp: /usr/bin/python (found version ""3.8.10"") ; Looking for pthread.h; Looking for pthread.h - found; Performing Test CMAKE_HAVE_LIBC_PTHREAD; Perf",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:688,Safety,Detect,Detecting,688,"@alxbilger . > Hello, I think the actual error is in the output of the Cmake Gui(bottom part), could you copy-paste it ?. Sorry for the delay, here is the log output:; ```; The C compiler identification is Clang 10.0.0; The CXX compiler identification is Clang 10.0.0; Check for working C compiler: /usr/bin/clang; Check for working C compiler: /usr/bin/clang -- works; Detecting C compiler ABI info; Detecting C compiler ABI info - done; Detecting C compile features; Detecting C compile features - done; Check for working CXX compiler: /usr/bin/clang++; Check for working CXX compiler: /usr/bin/clang++ -- works; Detecting CXX compiler ABI info; Detecting CXX compiler ABI info - done; Detecting CXX compile features; Detecting CXX compile features - done; Setting build type to Release as none was specified.; -- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).; Install prefix: /home/giang/sofa/build/install; Adding library Sofa.Config; Using legacy headers is enabled.; Headers from v21.12 are usable, but it is advised to change your code to use the new headers introduced in v22.06.; Adding library Sofa.Compat; Adding library Sofa.Component.Compat; Adding library Sofa.Type; Adding library Sofa.Geometry; Adding library Sofa.Topology; Adding library Sofa.Helper; Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; Found Json: /home/giang/sofa/src/extlibs/json (Required is at least version ""3.1.2"") ; Found STB: /home/giang/sofa/src/extlibs/stb ; Found DIFFLIB: /home/giang/sofa/src/extlibs/difflib ; Adding library Sofa.LinearAlgebra; Adding library Sofa.DefaultType; Adding library Sofa.Core; Adding library Sofa.Simulation; Adding library Sofa.Simulation.Core; Adding library Sofa.Simulation.Common; Adding library Sofa.Simulation.Graph; Adding library Sofa.Testing; Found PythonInterp: /usr/bin/python (found version ""3.8.10"") ; Looking for pthread.h; Looking for pthread.h - found; Performing Test CMAKE_HAVE_LIBC_PTHREAD; Perf",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:720,Safety,Detect,Detecting,720,"@alxbilger . > Hello, I think the actual error is in the output of the Cmake Gui(bottom part), could you copy-paste it ?. Sorry for the delay, here is the log output:; ```; The C compiler identification is Clang 10.0.0; The CXX compiler identification is Clang 10.0.0; Check for working C compiler: /usr/bin/clang; Check for working C compiler: /usr/bin/clang -- works; Detecting C compiler ABI info; Detecting C compiler ABI info - done; Detecting C compile features; Detecting C compile features - done; Check for working CXX compiler: /usr/bin/clang++; Check for working CXX compiler: /usr/bin/clang++ -- works; Detecting CXX compiler ABI info; Detecting CXX compiler ABI info - done; Detecting CXX compile features; Detecting CXX compile features - done; Setting build type to Release as none was specified.; -- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).; Install prefix: /home/giang/sofa/build/install; Adding library Sofa.Config; Using legacy headers is enabled.; Headers from v21.12 are usable, but it is advised to change your code to use the new headers introduced in v22.06.; Adding library Sofa.Compat; Adding library Sofa.Component.Compat; Adding library Sofa.Type; Adding library Sofa.Geometry; Adding library Sofa.Topology; Adding library Sofa.Helper; Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; Found Json: /home/giang/sofa/src/extlibs/json (Required is at least version ""3.1.2"") ; Found STB: /home/giang/sofa/src/extlibs/stb ; Found DIFFLIB: /home/giang/sofa/src/extlibs/difflib ; Adding library Sofa.LinearAlgebra; Adding library Sofa.DefaultType; Adding library Sofa.Core; Adding library Sofa.Simulation; Adding library Sofa.Simulation.Core; Adding library Sofa.Simulation.Common; Adding library Sofa.Simulation.Graph; Adding library Sofa.Testing; Found PythonInterp: /usr/bin/python (found version ""3.8.10"") ; Looking for pthread.h; Looking for pthread.h - found; Performing Test CMAKE_HAVE_LIBC_PTHREAD; Perf",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:4560,Safety,Detect,Detection,4560,"ng.MappedMatrix; Adding module Sofa.Component.SolidMechanics; Adding module Sofa.Component.SolidMechanics.Spring; Adding module Sofa.Component.SolidMechanics.FEM; Adding module Sofa.Component.SolidMechanics.FEM.Elastic; Adding module Sofa.Component.SolidMechanics.FEM.HyperElastic; Adding module Sofa.Component.SolidMechanics.FEM.NonUniform; Adding module Sofa.Component.SolidMechanics.TensorMass; Adding module Sofa.Component.StateContainer; Adding module Sofa.Component.Constraint; Adding module Sofa.Component.Constraint.Lagrangian; Adding module Sofa.Component.Constraint.Lagrangian.Model; Adding module Sofa.Component.Constraint.Lagrangian.Correction; Adding module Sofa.Component.Constraint.Lagrangian.Solver; Adding module Sofa.Component.Constraint.Projective; Adding module Sofa.Component.AnimationLoop; Adding module Sofa.Component.MechanicalLoad; Adding module Sofa.Component.Collision; Adding module Sofa.Component.Collision.Geometry; Adding module Sofa.Component.Collision.Detection; Adding module Sofa.Component.Collision.Detection.Algorithm; Adding module Sofa.Component.Collision.Detection.Intersection; Adding module Sofa.Component.Collision.Response; Adding module Sofa.Component.Collision.Response.Mapper; Adding module Sofa.Component.Collision.Response.Contact; Adding module Sofa.Component.Setting; Adding module Sofa.Component.Controller; Adding module Sofa.Component.Engine; Adding module Sofa.Component.Engine.Analyze; Adding module Sofa.Component.Engine.Generate; Adding module Sofa.Component.Engine.Select; Adding module Sofa.Component.Engine.Transform; Adding module Sofa.Component.Haptics; Adding library Sofa.GL; Found OpenGL: /usr/lib/x86_64-linux-gnu/libOpenGL.so ; Found GLEW: /usr/include (found version ""2.1.0"") ; Adding module Sofa.GL.Component; Adding module Sofa.GL.Component.Rendering2D; Adding module Sofa.GL.Component.Rendering3D; Adding module Sofa.GL.Component.Engine; Adding module Sofa.GL.Component.Shader; Adding module Sofa.GUI.Component; Adding library S",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:4610,Safety,Detect,Detection,4610,"onent.SolidMechanics; Adding module Sofa.Component.SolidMechanics.Spring; Adding module Sofa.Component.SolidMechanics.FEM; Adding module Sofa.Component.SolidMechanics.FEM.Elastic; Adding module Sofa.Component.SolidMechanics.FEM.HyperElastic; Adding module Sofa.Component.SolidMechanics.FEM.NonUniform; Adding module Sofa.Component.SolidMechanics.TensorMass; Adding module Sofa.Component.StateContainer; Adding module Sofa.Component.Constraint; Adding module Sofa.Component.Constraint.Lagrangian; Adding module Sofa.Component.Constraint.Lagrangian.Model; Adding module Sofa.Component.Constraint.Lagrangian.Correction; Adding module Sofa.Component.Constraint.Lagrangian.Solver; Adding module Sofa.Component.Constraint.Projective; Adding module Sofa.Component.AnimationLoop; Adding module Sofa.Component.MechanicalLoad; Adding module Sofa.Component.Collision; Adding module Sofa.Component.Collision.Geometry; Adding module Sofa.Component.Collision.Detection; Adding module Sofa.Component.Collision.Detection.Algorithm; Adding module Sofa.Component.Collision.Detection.Intersection; Adding module Sofa.Component.Collision.Response; Adding module Sofa.Component.Collision.Response.Mapper; Adding module Sofa.Component.Collision.Response.Contact; Adding module Sofa.Component.Setting; Adding module Sofa.Component.Controller; Adding module Sofa.Component.Engine; Adding module Sofa.Component.Engine.Analyze; Adding module Sofa.Component.Engine.Generate; Adding module Sofa.Component.Engine.Select; Adding module Sofa.Component.Engine.Transform; Adding module Sofa.Component.Haptics; Adding library Sofa.GL; Found OpenGL: /usr/lib/x86_64-linux-gnu/libOpenGL.so ; Found GLEW: /usr/include (found version ""2.1.0"") ; Adding module Sofa.GL.Component; Adding module Sofa.GL.Component.Rendering2D; Adding module Sofa.GL.Component.Rendering3D; Adding module Sofa.GL.Component.Engine; Adding module Sofa.GL.Component.Shader; Adding module Sofa.GUI.Component; Adding library Sofa.GUI.Common; cxxopts version 2.2.0; -",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:4670,Safety,Detect,Detection,4670,"anics.Spring; Adding module Sofa.Component.SolidMechanics.FEM; Adding module Sofa.Component.SolidMechanics.FEM.Elastic; Adding module Sofa.Component.SolidMechanics.FEM.HyperElastic; Adding module Sofa.Component.SolidMechanics.FEM.NonUniform; Adding module Sofa.Component.SolidMechanics.TensorMass; Adding module Sofa.Component.StateContainer; Adding module Sofa.Component.Constraint; Adding module Sofa.Component.Constraint.Lagrangian; Adding module Sofa.Component.Constraint.Lagrangian.Model; Adding module Sofa.Component.Constraint.Lagrangian.Correction; Adding module Sofa.Component.Constraint.Lagrangian.Solver; Adding module Sofa.Component.Constraint.Projective; Adding module Sofa.Component.AnimationLoop; Adding module Sofa.Component.MechanicalLoad; Adding module Sofa.Component.Collision; Adding module Sofa.Component.Collision.Geometry; Adding module Sofa.Component.Collision.Detection; Adding module Sofa.Component.Collision.Detection.Algorithm; Adding module Sofa.Component.Collision.Detection.Intersection; Adding module Sofa.Component.Collision.Response; Adding module Sofa.Component.Collision.Response.Mapper; Adding module Sofa.Component.Collision.Response.Contact; Adding module Sofa.Component.Setting; Adding module Sofa.Component.Controller; Adding module Sofa.Component.Engine; Adding module Sofa.Component.Engine.Analyze; Adding module Sofa.Component.Engine.Generate; Adding module Sofa.Component.Engine.Select; Adding module Sofa.Component.Engine.Transform; Adding module Sofa.Component.Haptics; Adding library Sofa.GL; Found OpenGL: /usr/lib/x86_64-linux-gnu/libOpenGL.so ; Found GLEW: /usr/include (found version ""2.1.0"") ; Adding module Sofa.GL.Component; Adding module Sofa.GL.Component.Rendering2D; Adding module Sofa.GL.Component.Rendering3D; Adding module Sofa.GL.Component.Engine; Adding module Sofa.GL.Component.Shader; Adding module Sofa.GUI.Component; Adding library Sofa.GUI.Common; cxxopts version 2.2.0; -- Sofa.GUI.Common: Sofa.GL dependent features enabled.; Addi",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:155,Testability,log,log,155,"@alxbilger . > Hello, I think the actual error is in the output of the Cmake Gui(bottom part), could you copy-paste it ?. Sorry for the delay, here is the log output:; ```; The C compiler identification is Clang 10.0.0; The CXX compiler identification is Clang 10.0.0; Check for working C compiler: /usr/bin/clang; Check for working C compiler: /usr/bin/clang -- works; Detecting C compiler ABI info; Detecting C compiler ABI info - done; Detecting C compile features; Detecting C compile features - done; Check for working CXX compiler: /usr/bin/clang++; Check for working CXX compiler: /usr/bin/clang++ -- works; Detecting CXX compiler ABI info; Detecting CXX compiler ABI info - done; Detecting CXX compile features; Detecting CXX compile features - done; Setting build type to Release as none was specified.; -- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).; Install prefix: /home/giang/sofa/build/install; Adding library Sofa.Config; Using legacy headers is enabled.; Headers from v21.12 are usable, but it is advised to change your code to use the new headers introduced in v22.06.; Adding library Sofa.Compat; Adding library Sofa.Component.Compat; Adding library Sofa.Type; Adding library Sofa.Geometry; Adding library Sofa.Topology; Adding library Sofa.Helper; Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; Found Json: /home/giang/sofa/src/extlibs/json (Required is at least version ""3.1.2"") ; Found STB: /home/giang/sofa/src/extlibs/stb ; Found DIFFLIB: /home/giang/sofa/src/extlibs/difflib ; Adding library Sofa.LinearAlgebra; Adding library Sofa.DefaultType; Adding library Sofa.Core; Adding library Sofa.Simulation; Adding library Sofa.Simulation.Core; Adding library Sofa.Simulation.Common; Adding library Sofa.Simulation.Graph; Adding library Sofa.Testing; Found PythonInterp: /usr/bin/python (found version ""3.8.10"") ; Looking for pthread.h; Looking for pthread.h - found; Performing Test CMAKE_HAVE_LIBC_PTHREAD; Perf",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:1830,Testability,Test,Testing,1830,"H_PCH_ENABLED is OFF or CMake < 3.16).; Install prefix: /home/giang/sofa/build/install; Adding library Sofa.Config; Using legacy headers is enabled.; Headers from v21.12 are usable, but it is advised to change your code to use the new headers introduced in v22.06.; Adding library Sofa.Compat; Adding library Sofa.Component.Compat; Adding library Sofa.Type; Adding library Sofa.Geometry; Adding library Sofa.Topology; Adding library Sofa.Helper; Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; Found Json: /home/giang/sofa/src/extlibs/json (Required is at least version ""3.1.2"") ; Found STB: /home/giang/sofa/src/extlibs/stb ; Found DIFFLIB: /home/giang/sofa/src/extlibs/difflib ; Adding library Sofa.LinearAlgebra; Adding library Sofa.DefaultType; Adding library Sofa.Core; Adding library Sofa.Simulation; Adding library Sofa.Simulation.Core; Adding library Sofa.Simulation.Common; Adding library Sofa.Simulation.Graph; Adding library Sofa.Testing; Found PythonInterp: /usr/bin/python (found version ""3.8.10"") ; Looking for pthread.h; Looking for pthread.h - found; Performing Test CMAKE_HAVE_LIBC_PTHREAD; Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; Check if compiler accepts -pthread; Check if compiler accepts -pthread - yes; Found Threads: TRUE ; Adding library Sofa.Framework; Adding module Sofa.Component; Adding module Sofa.Component.ODESolver; Adding module Sofa.Component.ODESolver.Forward; Adding module Sofa.Component.ODESolver.Backward; Adding module Sofa.Component.IO; Adding module Sofa.Component.IO.Mesh; Found ZLIB: /usr/lib/x86_64-linux-gnu/libz.so (found version ""1.2.11"") ; Adding module Sofa.Component.Playback; Adding module Sofa.Component.SceneUtility; Adding module Sofa.Component.Topology; Adding module Sofa.Component.Topology.Container; Adding module Sofa.Component.Topology.Container.Constant; Adding module Sofa.Component.Topology.Container.Dynamic; Adding module Sofa.Component.Topology.Container.Grid; Adding module Sofa.Component.Topol",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:1967,Testability,Test,Test,1967,"ised to change your code to use the new headers introduced in v22.06.; Adding library Sofa.Compat; Adding library Sofa.Component.Compat; Adding library Sofa.Type; Adding library Sofa.Geometry; Adding library Sofa.Topology; Adding library Sofa.Helper; Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; Found Json: /home/giang/sofa/src/extlibs/json (Required is at least version ""3.1.2"") ; Found STB: /home/giang/sofa/src/extlibs/stb ; Found DIFFLIB: /home/giang/sofa/src/extlibs/difflib ; Adding library Sofa.LinearAlgebra; Adding library Sofa.DefaultType; Adding library Sofa.Core; Adding library Sofa.Simulation; Adding library Sofa.Simulation.Core; Adding library Sofa.Simulation.Common; Adding library Sofa.Simulation.Graph; Adding library Sofa.Testing; Found PythonInterp: /usr/bin/python (found version ""3.8.10"") ; Looking for pthread.h; Looking for pthread.h - found; Performing Test CMAKE_HAVE_LIBC_PTHREAD; Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; Check if compiler accepts -pthread; Check if compiler accepts -pthread - yes; Found Threads: TRUE ; Adding library Sofa.Framework; Adding module Sofa.Component; Adding module Sofa.Component.ODESolver; Adding module Sofa.Component.ODESolver.Forward; Adding module Sofa.Component.ODESolver.Backward; Adding module Sofa.Component.IO; Adding module Sofa.Component.IO.Mesh; Found ZLIB: /usr/lib/x86_64-linux-gnu/libz.so (found version ""1.2.11"") ; Adding module Sofa.Component.Playback; Adding module Sofa.Component.SceneUtility; Adding module Sofa.Component.Topology; Adding module Sofa.Component.Topology.Container; Adding module Sofa.Component.Topology.Container.Constant; Adding module Sofa.Component.Topology.Container.Dynamic; Adding module Sofa.Component.Topology.Container.Grid; Adding module Sofa.Component.Topology.Mapping; Adding module Sofa.Component.Topology.Utility; Adding module Sofa.Component.Visual; Adding module Sofa.Component.LinearSolver; Adding module Sofa.Component.LinearSolver.Iterative; A",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:2008,Testability,Test,Test,2008,"ised to change your code to use the new headers introduced in v22.06.; Adding library Sofa.Compat; Adding library Sofa.Component.Compat; Adding library Sofa.Type; Adding library Sofa.Geometry; Adding library Sofa.Topology; Adding library Sofa.Helper; Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; Found Json: /home/giang/sofa/src/extlibs/json (Required is at least version ""3.1.2"") ; Found STB: /home/giang/sofa/src/extlibs/stb ; Found DIFFLIB: /home/giang/sofa/src/extlibs/difflib ; Adding library Sofa.LinearAlgebra; Adding library Sofa.DefaultType; Adding library Sofa.Core; Adding library Sofa.Simulation; Adding library Sofa.Simulation.Core; Adding library Sofa.Simulation.Common; Adding library Sofa.Simulation.Graph; Adding library Sofa.Testing; Found PythonInterp: /usr/bin/python (found version ""3.8.10"") ; Looking for pthread.h; Looking for pthread.h - found; Performing Test CMAKE_HAVE_LIBC_PTHREAD; Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; Check if compiler accepts -pthread; Check if compiler accepts -pthread - yes; Found Threads: TRUE ; Adding library Sofa.Framework; Adding module Sofa.Component; Adding module Sofa.Component.ODESolver; Adding module Sofa.Component.ODESolver.Forward; Adding module Sofa.Component.ODESolver.Backward; Adding module Sofa.Component.IO; Adding module Sofa.Component.IO.Mesh; Found ZLIB: /usr/lib/x86_64-linux-gnu/libz.so (found version ""1.2.11"") ; Adding module Sofa.Component.Playback; Adding module Sofa.Component.SceneUtility; Adding module Sofa.Component.Topology; Adding module Sofa.Component.Topology.Container; Adding module Sofa.Component.Topology.Container.Constant; Adding module Sofa.Component.Topology.Container.Dynamic; Adding module Sofa.Component.Topology.Container.Grid; Adding module Sofa.Component.Topology.Mapping; Adding module Sofa.Component.Topology.Utility; Adding module Sofa.Component.Visual; Adding module Sofa.Component.LinearSolver; Adding module Sofa.Component.LinearSolver.Iterative; A",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:9411,Testability,log,log,9411,"ra; Adding collection SofaMiscForceField; Adding collection SofaMiscEngine; Adding collection SofaMiscSolver; Adding collection SofaMiscFem; Adding collection SofaMiscMapping; Adding collection SofaMiscCollision; Adding collection SofaHaptics; Adding plugin SofaValidation; Adding collection SofaGeneralObjectInteraction; Adding collection SofaCommon; Adding collection SofaGeneral; Adding collection SofaAdvanced; Adding collection SofaMisc; Adding collection SofaComponentAll; Adding plugin SceneCreator; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin ArticulatedSystemPlugin; CMake Error: File /home/giang/sofa/src/applications/plugins/SofaPython/ExternalProjectConfig.cmake.in does not exist.; CMake Error at Sofa/framework/Config/cmake/SofaMacrosConfigure.cmake:266 (configure_file):; configure_file Problem configuring file; Call Stack (most recent call first):; Sofa/framework/Config/cmake/SofaMacrosConfigure.cmake:295 (sofa_add_generic_external); applications/plugins/CMakeLists.txt:22 (sofa_add_subdirectory). SofaPython3 is compiled as a subproject to the external project 'Sofa'.; Adding plugin SofaPython3; CMake Error at /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:146 (message):; Could NOT find Python (missing: Python_LIBRARIES Python_INCLUDE_DIRS; Development) (found suitable version ""3.9.5"", minimum required is ""3.7""); Call Stack (most recent call first):; /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:393 (_FPHSA_FAILURE_MESSAGE); /usr/share/cmake-3.16/Modules/FindPython/Support.cmake:2214 (find_package_handle_standard_args); /usr/share/cmake-3.16/Modules/FindPython.cmake:304 (include); applications/plugins/SofaPython3/CMakeLists.txt:86 (find_package). Configuring incomplete, errors occurred!; See also ""/home/giang/sofa/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/giang/sofa/build/CMakeFiles/CMakeError.log"".; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:9473,Testability,log,log,9473,"ra; Adding collection SofaMiscForceField; Adding collection SofaMiscEngine; Adding collection SofaMiscSolver; Adding collection SofaMiscFem; Adding collection SofaMiscMapping; Adding collection SofaMiscCollision; Adding collection SofaHaptics; Adding plugin SofaValidation; Adding collection SofaGeneralObjectInteraction; Adding collection SofaCommon; Adding collection SofaGeneral; Adding collection SofaAdvanced; Adding collection SofaMisc; Adding collection SofaComponentAll; Adding plugin SceneCreator; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin ArticulatedSystemPlugin; CMake Error: File /home/giang/sofa/src/applications/plugins/SofaPython/ExternalProjectConfig.cmake.in does not exist.; CMake Error at Sofa/framework/Config/cmake/SofaMacrosConfigure.cmake:266 (configure_file):; configure_file Problem configuring file; Call Stack (most recent call first):; Sofa/framework/Config/cmake/SofaMacrosConfigure.cmake:295 (sofa_add_generic_external); applications/plugins/CMakeLists.txt:22 (sofa_add_subdirectory). SofaPython3 is compiled as a subproject to the external project 'Sofa'.; Adding plugin SofaPython3; CMake Error at /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:146 (message):; Could NOT find Python (missing: Python_LIBRARIES Python_INCLUDE_DIRS; Development) (found suitable version ""3.9.5"", minimum required is ""3.7""); Call Stack (most recent call first):; /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:393 (_FPHSA_FAILURE_MESSAGE); /usr/share/cmake-3.16/Modules/FindPython/Support.cmake:2214 (find_package_handle_standard_args); /usr/share/cmake-3.16/Modules/FindPython.cmake:304 (include); applications/plugins/SofaPython3/CMakeLists.txt:86 (find_package). Configuring incomplete, errors occurred!; See also ""/home/giang/sofa/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/giang/sofa/build/CMakeFiles/CMakeError.log"".; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:1035,Usability,usab,usable,1035,"e Gui(bottom part), could you copy-paste it ?. Sorry for the delay, here is the log output:; ```; The C compiler identification is Clang 10.0.0; The CXX compiler identification is Clang 10.0.0; Check for working C compiler: /usr/bin/clang; Check for working C compiler: /usr/bin/clang -- works; Detecting C compiler ABI info; Detecting C compiler ABI info - done; Detecting C compile features; Detecting C compile features - done; Check for working CXX compiler: /usr/bin/clang++; Check for working CXX compiler: /usr/bin/clang++ -- works; Detecting CXX compiler ABI info; Detecting CXX compiler ABI info - done; Detecting CXX compile features; Detecting CXX compile features - done; Setting build type to Release as none was specified.; -- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).; Install prefix: /home/giang/sofa/build/install; Adding library Sofa.Config; Using legacy headers is enabled.; Headers from v21.12 are usable, but it is advised to change your code to use the new headers introduced in v22.06.; Adding library Sofa.Compat; Adding library Sofa.Component.Compat; Adding library Sofa.Type; Adding library Sofa.Geometry; Adding library Sofa.Topology; Adding library Sofa.Helper; Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; Found Json: /home/giang/sofa/src/extlibs/json (Required is at least version ""3.1.2"") ; Found STB: /home/giang/sofa/src/extlibs/stb ; Found DIFFLIB: /home/giang/sofa/src/extlibs/difflib ; Adding library Sofa.LinearAlgebra; Adding library Sofa.DefaultType; Adding library Sofa.Core; Adding library Sofa.Simulation; Adding library Sofa.Simulation.Core; Adding library Sofa.Simulation.Common; Adding library Sofa.Simulation.Graph; Adding library Sofa.Testing; Found PythonInterp: /usr/bin/python (found version ""3.8.10"") ; Looking for pthread.h; Looking for pthread.h - found; Performing Test CMAKE_HAVE_LIBC_PTHREAD; Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; Check if compiler accepts -p",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489531612:14,Availability,error,errors,14,"I can see two errors:; - one is that it seems you switched on SOFA_FETCH_PYTHON, which was the plugin related to python2 and which is not supported anymore -> just switch `SOFA_FETCH_PYTHON` off, and disable `PLUGIN_SOFAPYTHON` if it is present; - `Could NOT find Python (missing: Python_LIBRARIES Python_INCLUDE_DIRS` it seems you did not install the package developement for python3 ; did your execute `sudo apt-get install python3-dev` (or `sudo apt-get install python3.8-dev`) ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489531612
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489531612:340,Deployability,install,install,340,"I can see two errors:; - one is that it seems you switched on SOFA_FETCH_PYTHON, which was the plugin related to python2 and which is not supported anymore -> just switch `SOFA_FETCH_PYTHON` off, and disable `PLUGIN_SOFAPYTHON` if it is present; - `Could NOT find Python (missing: Python_LIBRARIES Python_INCLUDE_DIRS` it seems you did not install the package developement for python3 ; did your execute `sudo apt-get install python3-dev` (or `sudo apt-get install python3.8-dev`) ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489531612
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489531612:418,Deployability,install,install,418,"I can see two errors:; - one is that it seems you switched on SOFA_FETCH_PYTHON, which was the plugin related to python2 and which is not supported anymore -> just switch `SOFA_FETCH_PYTHON` off, and disable `PLUGIN_SOFAPYTHON` if it is present; - `Could NOT find Python (missing: Python_LIBRARIES Python_INCLUDE_DIRS` it seems you did not install the package developement for python3 ; did your execute `sudo apt-get install python3-dev` (or `sudo apt-get install python3.8-dev`) ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489531612
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489531612:457,Deployability,install,install,457,"I can see two errors:; - one is that it seems you switched on SOFA_FETCH_PYTHON, which was the plugin related to python2 and which is not supported anymore -> just switch `SOFA_FETCH_PYTHON` off, and disable `PLUGIN_SOFAPYTHON` if it is present; - `Could NOT find Python (missing: Python_LIBRARIES Python_INCLUDE_DIRS` it seems you did not install the package developement for python3 ; did your execute `sudo apt-get install python3-dev` (or `sudo apt-get install python3.8-dev`) ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489531612
https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489531612:95,Modifiability,plugin,plugin,95,"I can see two errors:; - one is that it seems you switched on SOFA_FETCH_PYTHON, which was the plugin related to python2 and which is not supported anymore -> just switch `SOFA_FETCH_PYTHON` off, and disable `PLUGIN_SOFAPYTHON` if it is present; - `Could NOT find Python (missing: Python_LIBRARIES Python_INCLUDE_DIRS` it seems you did not install the package developement for python3 ; did your execute `sudo apt-get install python3-dev` (or `sudo apt-get install python3.8-dev`) ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489531612
https://github.com/sofa-framework/sofa/pull/3754#issuecomment-1488689315:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3754#issuecomment-1488689315
https://github.com/sofa-framework/sofa/pull/3756#issuecomment-1489792756:71,Testability,test,tests,71,hey @alxbilger top :+1: :+1: ; could you add the associated regression tests please?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3756#issuecomment-1489792756
https://github.com/sofa-framework/sofa/pull/3756#issuecomment-1490378854:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3756/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/43**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 59f0984523a441538eb4330c003eabc6592934f9_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3756#issuecomment-1490378854
https://github.com/sofa-framework/sofa/pull/3756#issuecomment-1490378854:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3756/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/43**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 59f0984523a441538eb4330c003eabc6592934f9_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3756#issuecomment-1490378854
https://github.com/sofa-framework/sofa/pull/3756#issuecomment-1496152614:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3756/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/43**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 59f0984523a441538eb4330c003eabc6592934f9_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3756#issuecomment-1496152614
https://github.com/sofa-framework/sofa/pull/3756#issuecomment-1496152614:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3756/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/43**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 59f0984523a441538eb4330c003eabc6592934f9_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3756#issuecomment-1496152614
https://github.com/sofa-framework/sofa/pull/3756#issuecomment-1496172261:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3756#issuecomment-1496172261
https://github.com/sofa-framework/sofa/pull/3756#issuecomment-1496172482:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3756/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/43**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 59f0984523a441538eb4330c003eabc6592934f9_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3756#issuecomment-1496172482
https://github.com/sofa-framework/sofa/pull/3756#issuecomment-1496172482:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3756/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/43**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 59f0984523a441538eb4330c003eabc6592934f9_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3756#issuecomment-1496172482
https://github.com/sofa-framework/sofa/pull/3756#issuecomment-1498302072:38,Testability,test,tests,38,[ci-build][force-full-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3756#issuecomment-1498302072
https://github.com/sofa-framework/sofa/pull/3756#issuecomment-1498302146:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3756/5/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3756#issuecomment-1498302146
https://github.com/sofa-framework/sofa/pull/3756#issuecomment-1498302146:121,Integrability,depend,dependencies,121,**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3756/5/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3756#issuecomment-1498302146
https://github.com/sofa-framework/sofa/pull/3756#issuecomment-1498302146:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3756/5/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3756#issuecomment-1498302146
https://github.com/sofa-framework/sofa/pull/3757#issuecomment-1488285615:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #1](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3757/1/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/41**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 0ffb20e4f73dc3ecd0db23840cf902c420222d06_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3757#issuecomment-1488285615
https://github.com/sofa-framework/sofa/pull/3757#issuecomment-1488285615:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #1](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3757/1/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/41**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 0ffb20e4f73dc3ecd0db23840cf902c420222d06_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3757#issuecomment-1488285615
https://github.com/sofa-framework/sofa/pull/3757#issuecomment-1488693412:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3757#issuecomment-1488693412
https://github.com/sofa-framework/sofa/pull/3757#issuecomment-1488693610:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3757/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/41**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 0ffb20e4f73dc3ecd0db23840cf902c420222d06_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3757#issuecomment-1488693610
https://github.com/sofa-framework/sofa/pull/3757#issuecomment-1488693610:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3757/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/41**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 0ffb20e4f73dc3ecd0db23840cf902c420222d06_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3757#issuecomment-1488693610
https://github.com/sofa-framework/sofa/pull/3757#issuecomment-1496171516:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3757/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/41**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 0ffb20e4f73dc3ecd0db23840cf902c420222d06_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3757#issuecomment-1496171516
https://github.com/sofa-framework/sofa/pull/3757#issuecomment-1496171516:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3757/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/41**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 0ffb20e4f73dc3ecd0db23840cf902c420222d06_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3757#issuecomment-1496171516
https://github.com/sofa-framework/sofa/pull/3757#issuecomment-1498302223:38,Testability,test,tests,38,[ci-build][force-full-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3757#issuecomment-1498302223
https://github.com/sofa-framework/sofa/pull/3757#issuecomment-1498302334:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3757/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/41**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 0ffb20e4f73dc3ecd0db23840cf902c420222d06_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3757#issuecomment-1498302334
https://github.com/sofa-framework/sofa/pull/3757#issuecomment-1498302334:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3757/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/41**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 0ffb20e4f73dc3ecd0db23840cf902c420222d06_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3757#issuecomment-1498302334
https://github.com/sofa-framework/sofa/pull/3757#issuecomment-1498652393:38,Testability,test,tests,38,[ci-build][force-full-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3757#issuecomment-1498652393
https://github.com/sofa-framework/sofa/pull/3757#issuecomment-1498652549:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3757/5/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3757#issuecomment-1498652549
https://github.com/sofa-framework/sofa/pull/3757#issuecomment-1498652549:121,Integrability,depend,dependencies,121,**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3757/5/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3757#issuecomment-1498652549
https://github.com/sofa-framework/sofa/pull/3757#issuecomment-1498652549:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3757/5/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3757#issuecomment-1498652549
https://github.com/sofa-framework/sofa/pull/3758#issuecomment-1489731572:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3758#issuecomment-1489731572
https://github.com/sofa-framework/sofa/pull/3760#issuecomment-1493492413:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3760#issuecomment-1493492413
https://github.com/sofa-framework/sofa/pull/3761#issuecomment-1494229220:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3761#issuecomment-1494229220
https://github.com/sofa-framework/sofa/pull/3763#issuecomment-1496747879:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3763#issuecomment-1496747879
https://github.com/sofa-framework/sofa/issues/3764#issuecomment-1582191183:358,Availability,down,download,358,Feedback from @damienmarchal : [PoC working here]([hugtalbot (Hugo)](https://matrix.to/#/@hugtalbot-5a840cffd73408ce4f8d167a:gitter.im): https://sofapython3.readthedocs.io/en/xp-readthedocs/). - The fastest would be to have a ci process like the generate-doxygen which generate an artifact with the build documentation; - Then in readthedocs we just have to download that artifact and copy it to the right location (this what I did in the xp-readthedoc); - The only missing part is make the ci script (which shouldn't be super hard for anyone that know how our jenkins ci is operating),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3764#issuecomment-1582191183
https://github.com/sofa-framework/sofa/issues/3764#issuecomment-1582191183:0,Usability,Feedback,Feedback,0,Feedback from @damienmarchal : [PoC working here]([hugtalbot (Hugo)](https://matrix.to/#/@hugtalbot-5a840cffd73408ce4f8d167a:gitter.im): https://sofapython3.readthedocs.io/en/xp-readthedocs/). - The fastest would be to have a ci process like the generate-doxygen which generate an artifact with the build documentation; - Then in readthedocs we just have to download that artifact and copy it to the right location (this what I did in the xp-readthedoc); - The only missing part is make the ci script (which shouldn't be super hard for anyone that know how our jenkins ci is operating),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3764#issuecomment-1582191183
https://github.com/sofa-framework/sofa/pull/3768#issuecomment-1498781646:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3768#issuecomment-1498781646
https://github.com/sofa-framework/sofa/pull/3768#issuecomment-1504805313:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3768#issuecomment-1504805313
https://github.com/sofa-framework/sofa/issues/3769#issuecomment-1839453152:2,Performance,perform,performance,2,A performance improvement has been observed in https://github.com/sofa-framework/sofa/pull/4255 and https://github.com/sofa-framework/sofa/pull/3986,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3769#issuecomment-1839453152
https://github.com/sofa-framework/sofa/issues/3770#issuecomment-1562520621:26,Modifiability,refactor,refactor,26,"An other big singleton to refactor is ObjectFactory.; Especially bothering because its getInstance() is called in the RegisterObject function, which is called when the library is loaded.; One solution would be to move those RegisterObject() into the plugin initialisation (where it has been given a pointer to the ObjectFactory). The drawbacks are:; - cumbersome; - the init's plugin file would need all the headers of the components it need to register.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3770#issuecomment-1562520621
https://github.com/sofa-framework/sofa/issues/3770#issuecomment-1562520621:250,Modifiability,plugin,plugin,250,"An other big singleton to refactor is ObjectFactory.; Especially bothering because its getInstance() is called in the RegisterObject function, which is called when the library is loaded.; One solution would be to move those RegisterObject() into the plugin initialisation (where it has been given a pointer to the ObjectFactory). The drawbacks are:; - cumbersome; - the init's plugin file would need all the headers of the components it need to register.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3770#issuecomment-1562520621
https://github.com/sofa-framework/sofa/issues/3770#issuecomment-1562520621:377,Modifiability,plugin,plugin,377,"An other big singleton to refactor is ObjectFactory.; Especially bothering because its getInstance() is called in the RegisterObject function, which is called when the library is loaded.; One solution would be to move those RegisterObject() into the plugin initialisation (where it has been given a pointer to the ObjectFactory). The drawbacks are:; - cumbersome; - the init's plugin file would need all the headers of the components it need to register.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3770#issuecomment-1562520621
https://github.com/sofa-framework/sofa/issues/3770#issuecomment-1562520621:179,Performance,load,loaded,179,"An other big singleton to refactor is ObjectFactory.; Especially bothering because its getInstance() is called in the RegisterObject function, which is called when the library is loaded.; One solution would be to move those RegisterObject() into the plugin initialisation (where it has been given a pointer to the ObjectFactory). The drawbacks are:; - cumbersome; - the init's plugin file would need all the headers of the components it need to register.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3770#issuecomment-1562520621
https://github.com/sofa-framework/sofa/issues/3770#issuecomment-1562569604:140,Energy Efficiency,schedul,scheduling,140,"Other significant singletons:; - message mechanism (dispatchers/handlers),; - idFactory from timers; - Factories (contact, intersectors); - scheduling (TaskScheduler, registry); - scene loaders",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3770#issuecomment-1562569604
https://github.com/sofa-framework/sofa/issues/3770#issuecomment-1562569604:33,Integrability,message,message,33,"Other significant singletons:; - message mechanism (dispatchers/handlers),; - idFactory from timers; - Factories (contact, intersectors); - scheduling (TaskScheduler, registry); - scene loaders",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3770#issuecomment-1562569604
https://github.com/sofa-framework/sofa/issues/3770#issuecomment-1562569604:186,Performance,load,loaders,186,"Other significant singletons:; - message mechanism (dispatchers/handlers),; - idFactory from timers; - Factories (contact, intersectors); - scheduling (TaskScheduler, registry); - scene loaders",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3770#issuecomment-1562569604
https://github.com/sofa-framework/sofa/pull/3771#issuecomment-1499134807:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3771#issuecomment-1499134807
https://github.com/sofa-framework/sofa/pull/3771#issuecomment-1504923576:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3771#issuecomment-1504923576
https://github.com/sofa-framework/sofa/pull/3775#issuecomment-1500307191:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3775#issuecomment-1500307191
https://github.com/sofa-framework/sofa/pull/3776#issuecomment-1500307358:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3776#issuecomment-1500307358
https://github.com/sofa-framework/sofa/pull/3780#issuecomment-1503402443:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3780#issuecomment-1503402443
https://github.com/sofa-framework/sofa/pull/3782#issuecomment-1504879823:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3782#issuecomment-1504879823
https://github.com/sofa-framework/sofa/pull/3783#issuecomment-1506201398:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3783#issuecomment-1506201398
https://github.com/sofa-framework/sofa/pull/3783#issuecomment-1534324585:343,Modifiability,Refactor,Refactoring,343,> I did not check but I thought it was using `addData` here:; > ; > https://github.com/sofa-framework/sofa/blob/9096c3eed599622ec9eb77a3d8a61bf3932a81a7/Sofa/Component/StateContainer/src/sofa/component/statecontainer/MechanicalObject.inl#L1310. Not necessarily there is another codepath that initialize the state vectors and registe the data. Refactoring the whole part would be interesting to make that clear but it is far outside the scope of this PR.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3783#issuecomment-1534324585
https://github.com/sofa-framework/sofa/pull/3783#issuecomment-1534324585:404,Usability,clear,clear,404,> I did not check but I thought it was using `addData` here:; > ; > https://github.com/sofa-framework/sofa/blob/9096c3eed599622ec9eb77a3d8a61bf3932a81a7/Sofa/Component/StateContainer/src/sofa/component/statecontainer/MechanicalObject.inl#L1310. Not necessarily there is another codepath that initialize the state vectors and registe the data. Refactoring the whole part would be interesting to make that clear but it is far outside the scope of this PR.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3783#issuecomment-1534324585
https://github.com/sofa-framework/sofa/pull/3783#issuecomment-1551107805:36,Availability,error,error,36,"@hugtalbot , I added a test with an error message;",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3783#issuecomment-1551107805
https://github.com/sofa-framework/sofa/pull/3783#issuecomment-1551107805:42,Integrability,message,message,42,"@hugtalbot , I added a test with an error message;",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3783#issuecomment-1551107805
https://github.com/sofa-framework/sofa/pull/3783#issuecomment-1551107805:23,Testability,test,test,23,"@hugtalbot , I added a test with an error message;",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3783#issuecomment-1551107805
https://github.com/sofa-framework/sofa/pull/3785#issuecomment-1506103157:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3785#issuecomment-1506103157
https://github.com/sofa-framework/sofa/pull/3791#issuecomment-1506837196:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3791#issuecomment-1506837196
https://github.com/sofa-framework/sofa/pull/3792#issuecomment-1508021356:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3792#issuecomment-1508021356
https://github.com/sofa-framework/sofa/issues/3793#issuecomment-1541510463:60,Energy Efficiency,adapt,adaptive,60,"It's a topic I wanted to get back, so that we could support adaptive time step solvers.; Do you remember what on a theoretical standpoint makes it not supported? I do not recall",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3793#issuecomment-1541510463
https://github.com/sofa-framework/sofa/issues/3793#issuecomment-1541510463:60,Modifiability,adapt,adaptive,60,"It's a topic I wanted to get back, so that we could support adaptive time step solvers.; Do you remember what on a theoretical standpoint makes it not supported? I do not recall",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3793#issuecomment-1541510463
https://github.com/sofa-framework/sofa/issues/3793#issuecomment-1564497074:321,Deployability,configurat,configuration,321,I think - except by implementing a complicated check on time step change in both of the above components - we are good here. Only one thing remain TMO as discussed with @alxbilger : we could create a test scene inspired from caduceus using a python controller decreasing progressively the time step to check that in this configuration the simulation smoothly handles the change of time step. Anything else?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3793#issuecomment-1564497074
https://github.com/sofa-framework/sofa/issues/3793#issuecomment-1564497074:321,Modifiability,config,configuration,321,I think - except by implementing a complicated check on time step change in both of the above components - we are good here. Only one thing remain TMO as discussed with @alxbilger : we could create a test scene inspired from caduceus using a python controller decreasing progressively the time step to check that in this configuration the simulation smoothly handles the change of time step. Anything else?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3793#issuecomment-1564497074
https://github.com/sofa-framework/sofa/issues/3793#issuecomment-1564497074:200,Testability,test,test,200,I think - except by implementing a complicated check on time step change in both of the above components - we are good here. Only one thing remain TMO as discussed with @alxbilger : we could create a test scene inspired from caduceus using a python controller decreasing progressively the time step to check that in this configuration the simulation smoothly handles the change of time step. Anything else?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3793#issuecomment-1564497074
https://github.com/sofa-framework/sofa/issues/3793#issuecomment-1582140408:2,Testability,test,test,2,"A test I did using contact and another one sliding constraints seems to work nicely:; [Scenes-TimeStepChanging.zip](https://github.com/sofa-framework/sofa/files/11685794/Scenes-TimeStepChanging.zip). To start with, I used the caduceus scene, but it's a mess.; To be noted: the `UncoupledConstraintCorrection` using the data `useOdeSolverIntegrationFactors=False` will not use the time step info from the solver anymore, therefore it will not support time step changes neither; ; I suggest we close this issue as long as no issue is actually reported.; Fine for you @alxbilger ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3793#issuecomment-1582140408
https://github.com/sofa-framework/sofa/pull/3795#issuecomment-1508181541:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3795#issuecomment-1508181541
https://github.com/sofa-framework/sofa/pull/3796#issuecomment-1514842626:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3796#issuecomment-1514842626
https://github.com/sofa-framework/sofa/pull/3798#issuecomment-1514843742:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3798#issuecomment-1514843742
https://github.com/sofa-framework/sofa/pull/3799#issuecomment-1514361305:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3799#issuecomment-1514361305
https://github.com/sofa-framework/sofa/pull/3803#issuecomment-1531176710:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3803#issuecomment-1531176710
https://github.com/sofa-framework/sofa/pull/3806#issuecomment-1541600321:23,Modifiability,inherit,inheriting,23,Include of inl classes inheriting from ForceField should be done. Another PR will be open .; ‚Üí closed,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3806#issuecomment-1541600321
https://github.com/sofa-framework/sofa/pull/3807#issuecomment-1519348704:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3807#issuecomment-1519348704
https://github.com/sofa-framework/sofa/issues/3808#issuecomment-1517410385:132,Deployability,install,installed,132,"In terminal, I check the cmake version is 3.26 using ""cmake --version"". But I don't know why the cmake 3.16 is used by cmake-gui (I installed it with `sudo apt-get install cmake-gui` which is mentioned in sofa build website documentation)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3808#issuecomment-1517410385
https://github.com/sofa-framework/sofa/issues/3808#issuecomment-1517410385:164,Deployability,install,install,164,"In terminal, I check the cmake version is 3.26 using ""cmake --version"". But I don't know why the cmake 3.16 is used by cmake-gui (I installed it with `sudo apt-get install cmake-gui` which is mentioned in sofa build website documentation)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3808#issuecomment-1517410385
https://github.com/sofa-framework/sofa/issues/3808#issuecomment-1517523369:53,Deployability,install,installed,53,"I solved this problem with remove the cmake which is installed with apt, and re-install it with source file. Thanks for your information",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3808#issuecomment-1517523369
https://github.com/sofa-framework/sofa/issues/3808#issuecomment-1517523369:80,Deployability,install,install,80,"I solved this problem with remove the cmake which is installed with apt, and re-install it with source file. Thanks for your information",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3808#issuecomment-1517523369
https://github.com/sofa-framework/sofa/pull/3815#issuecomment-1519552174:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3815#issuecomment-1519552174
https://github.com/sofa-framework/sofa/pull/3822#issuecomment-1521317892:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3822#issuecomment-1521317892
https://github.com/sofa-framework/sofa/pull/3823#issuecomment-1521317678:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3823#issuecomment-1521317678
https://github.com/sofa-framework/sofa/pull/3823#issuecomment-1526848398:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3823#issuecomment-1526848398
https://github.com/sofa-framework/sofa/issues/3829#issuecomment-1539235154:11,Availability,down,downloaded,11,"The Qt you downloaded (and you set in CMAKE_PREFIX_PATH) is not the same as the ones detected by CMake.; CMake auto-detected the one you downloaded through anaconda through other packages.; So I suppose the compiler is using the headers of the Qt in /home/hri/Qt and the linker is using the libs in /home/hri/anaconda, hence the symbols error about glibc. 2 choices:; - you only use the one installed by anaconda (and remove all reference from the one you installed); - you force cmake to detect the Qt you installed",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3829#issuecomment-1539235154
https://github.com/sofa-framework/sofa/issues/3829#issuecomment-1539235154:137,Availability,down,downloaded,137,"The Qt you downloaded (and you set in CMAKE_PREFIX_PATH) is not the same as the ones detected by CMake.; CMake auto-detected the one you downloaded through anaconda through other packages.; So I suppose the compiler is using the headers of the Qt in /home/hri/Qt and the linker is using the libs in /home/hri/anaconda, hence the symbols error about glibc. 2 choices:; - you only use the one installed by anaconda (and remove all reference from the one you installed); - you force cmake to detect the Qt you installed",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3829#issuecomment-1539235154
https://github.com/sofa-framework/sofa/issues/3829#issuecomment-1539235154:337,Availability,error,error,337,"The Qt you downloaded (and you set in CMAKE_PREFIX_PATH) is not the same as the ones detected by CMake.; CMake auto-detected the one you downloaded through anaconda through other packages.; So I suppose the compiler is using the headers of the Qt in /home/hri/Qt and the linker is using the libs in /home/hri/anaconda, hence the symbols error about glibc. 2 choices:; - you only use the one installed by anaconda (and remove all reference from the one you installed); - you force cmake to detect the Qt you installed",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3829#issuecomment-1539235154
https://github.com/sofa-framework/sofa/issues/3829#issuecomment-1539235154:391,Deployability,install,installed,391,"The Qt you downloaded (and you set in CMAKE_PREFIX_PATH) is not the same as the ones detected by CMake.; CMake auto-detected the one you downloaded through anaconda through other packages.; So I suppose the compiler is using the headers of the Qt in /home/hri/Qt and the linker is using the libs in /home/hri/anaconda, hence the symbols error about glibc. 2 choices:; - you only use the one installed by anaconda (and remove all reference from the one you installed); - you force cmake to detect the Qt you installed",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3829#issuecomment-1539235154
https://github.com/sofa-framework/sofa/issues/3829#issuecomment-1539235154:456,Deployability,install,installed,456,"The Qt you downloaded (and you set in CMAKE_PREFIX_PATH) is not the same as the ones detected by CMake.; CMake auto-detected the one you downloaded through anaconda through other packages.; So I suppose the compiler is using the headers of the Qt in /home/hri/Qt and the linker is using the libs in /home/hri/anaconda, hence the symbols error about glibc. 2 choices:; - you only use the one installed by anaconda (and remove all reference from the one you installed); - you force cmake to detect the Qt you installed",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3829#issuecomment-1539235154
https://github.com/sofa-framework/sofa/issues/3829#issuecomment-1539235154:507,Deployability,install,installed,507,"The Qt you downloaded (and you set in CMAKE_PREFIX_PATH) is not the same as the ones detected by CMake.; CMake auto-detected the one you downloaded through anaconda through other packages.; So I suppose the compiler is using the headers of the Qt in /home/hri/Qt and the linker is using the libs in /home/hri/anaconda, hence the symbols error about glibc. 2 choices:; - you only use the one installed by anaconda (and remove all reference from the one you installed); - you force cmake to detect the Qt you installed",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3829#issuecomment-1539235154
https://github.com/sofa-framework/sofa/issues/3829#issuecomment-1539235154:85,Safety,detect,detected,85,"The Qt you downloaded (and you set in CMAKE_PREFIX_PATH) is not the same as the ones detected by CMake.; CMake auto-detected the one you downloaded through anaconda through other packages.; So I suppose the compiler is using the headers of the Qt in /home/hri/Qt and the linker is using the libs in /home/hri/anaconda, hence the symbols error about glibc. 2 choices:; - you only use the one installed by anaconda (and remove all reference from the one you installed); - you force cmake to detect the Qt you installed",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3829#issuecomment-1539235154
https://github.com/sofa-framework/sofa/issues/3829#issuecomment-1539235154:116,Safety,detect,detected,116,"The Qt you downloaded (and you set in CMAKE_PREFIX_PATH) is not the same as the ones detected by CMake.; CMake auto-detected the one you downloaded through anaconda through other packages.; So I suppose the compiler is using the headers of the Qt in /home/hri/Qt and the linker is using the libs in /home/hri/anaconda, hence the symbols error about glibc. 2 choices:; - you only use the one installed by anaconda (and remove all reference from the one you installed); - you force cmake to detect the Qt you installed",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3829#issuecomment-1539235154
https://github.com/sofa-framework/sofa/issues/3829#issuecomment-1539235154:489,Safety,detect,detect,489,"The Qt you downloaded (and you set in CMAKE_PREFIX_PATH) is not the same as the ones detected by CMake.; CMake auto-detected the one you downloaded through anaconda through other packages.; So I suppose the compiler is using the headers of the Qt in /home/hri/Qt and the linker is using the libs in /home/hri/anaconda, hence the symbols error about glibc. 2 choices:; - you only use the one installed by anaconda (and remove all reference from the one you installed); - you force cmake to detect the Qt you installed",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3829#issuecomment-1539235154
https://github.com/sofa-framework/sofa/pull/3833#issuecomment-1533090146:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3833#issuecomment-1533090146
https://github.com/sofa-framework/sofa/pull/3833#issuecomment-1537570935:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3833#issuecomment-1537570935
https://github.com/sofa-framework/sofa/pull/3833#issuecomment-1537570954:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3833/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/42**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 49538a6a4ce44bd297568df74dca9d162c6a6359_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3833#issuecomment-1537570954
https://github.com/sofa-framework/sofa/pull/3833#issuecomment-1537570954:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3833/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/42**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 49538a6a4ce44bd297568df74dca9d162c6a6359_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3833#issuecomment-1537570954
https://github.com/sofa-framework/sofa/pull/3833#issuecomment-1541582457:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3833#issuecomment-1541582457
https://github.com/sofa-framework/sofa/pull/3833#issuecomment-1541582677:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3833/4/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3833#issuecomment-1541582677
https://github.com/sofa-framework/sofa/pull/3833#issuecomment-1541582677:121,Integrability,depend,dependencies,121,**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3833/4/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3833#issuecomment-1541582677
https://github.com/sofa-framework/sofa/pull/3833#issuecomment-1541582677:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3833/4/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3833#issuecomment-1541582677
https://github.com/sofa-framework/sofa/pull/3834#issuecomment-1543594349:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3834#issuecomment-1543594349
https://github.com/sofa-framework/sofa/pull/3838#issuecomment-1541606500:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3838#issuecomment-1541606500
https://github.com/sofa-framework/sofa/pull/3843#issuecomment-1543410373:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3843#issuecomment-1543410373
https://github.com/sofa-framework/sofa/pull/3843#issuecomment-1543476543:9,Testability,test,test,9,"One unit test is failing, but it does not seem to be related to this pull request. Could you just make sure of it?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3843#issuecomment-1543476543
https://github.com/sofa-framework/sofa/pull/3846#issuecomment-1543408266:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3846#issuecomment-1543408266
https://github.com/sofa-framework/sofa/pull/3850#issuecomment-1545831841:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3850#issuecomment-1545831841
https://github.com/sofa-framework/sofa/pull/3850#issuecomment-1556742232:345,Deployability,update,update,345,"Hello @alxbilger . Nice PR. . This is outside of the scope of the PR but the use of the very intrusive; ```cpp; if (this->d_componentState.getValue() != sofa::core::objectmodel::ComponentState::Valid); return;; ```; makes me thing one day we will have to do something. The way to go is probably to make clear when the component state validation/update issupposed to happen. The two choice are: ""everytime/everywhere"", update all the time including ""in-between"" timestep or only once at beginning of timestep (with visitor in the BeginAnimationStep event ?).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3850#issuecomment-1556742232
https://github.com/sofa-framework/sofa/pull/3850#issuecomment-1556742232:418,Deployability,update,update,418,"Hello @alxbilger . Nice PR. . This is outside of the scope of the PR but the use of the very intrusive; ```cpp; if (this->d_componentState.getValue() != sofa::core::objectmodel::ComponentState::Valid); return;; ```; makes me thing one day we will have to do something. The way to go is probably to make clear when the component state validation/update issupposed to happen. The two choice are: ""everytime/everywhere"", update all the time including ""in-between"" timestep or only once at beginning of timestep (with visitor in the BeginAnimationStep event ?).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3850#issuecomment-1556742232
https://github.com/sofa-framework/sofa/pull/3850#issuecomment-1556742232:334,Security,validat,validation,334,"Hello @alxbilger . Nice PR. . This is outside of the scope of the PR but the use of the very intrusive; ```cpp; if (this->d_componentState.getValue() != sofa::core::objectmodel::ComponentState::Valid); return;; ```; makes me thing one day we will have to do something. The way to go is probably to make clear when the component state validation/update issupposed to happen. The two choice are: ""everytime/everywhere"", update all the time including ""in-between"" timestep or only once at beginning of timestep (with visitor in the BeginAnimationStep event ?).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3850#issuecomment-1556742232
https://github.com/sofa-framework/sofa/pull/3850#issuecomment-1556742232:303,Usability,clear,clear,303,"Hello @alxbilger . Nice PR. . This is outside of the scope of the PR but the use of the very intrusive; ```cpp; if (this->d_componentState.getValue() != sofa::core::objectmodel::ComponentState::Valid); return;; ```; makes me thing one day we will have to do something. The way to go is probably to make clear when the component state validation/update issupposed to happen. The two choice are: ""everytime/everywhere"", update all the time including ""in-between"" timestep or only once at beginning of timestep (with visitor in the BeginAnimationStep event ?).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3850#issuecomment-1556742232
https://github.com/sofa-framework/sofa/pull/3851#issuecomment-1544686998:58,Modifiability,refactor,refactoring,58,"@alxbilger, @fredroy, @hugtalbot I welcome some nameing & refactoring suggestion here.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3851#issuecomment-1544686998
https://github.com/sofa-framework/sofa/pull/3851#issuecomment-1545409905:266,Integrability,interface,interface,266,"@alxbilger . Thanks for your relevant question, actually this is why the PR is in wip. . So more details. ; Fundamentally the TypeInfo system is a strange beast compose of two things. One is a type-traits API designed to be used in compile time code, one is dynamic interface API. AbstractTypeInfo is the dynamic interface (with the virtual function). The AbstractTypeInfoDynamicWrapper is a fa√ßade to ""wrap"" the compile time TypeInfo type-traits into the virtual one. . The TypeInfo type-traits API has several consistancy issues (probably dating back to pre-c++17 area) mixing a lot of different behavior into a single dynamic API... making things very fuzzy. . In the current status of the PR I just wanted to draft something to have a gimplse of the look and feel of a more modern code architecture (without breaking everything). . Regarding your question about insertion in a vector... the problem is that insert is not a push_back... it means inserting ""somewhere"" which could of course be implemented on vector. But it would requires a serious work on the AbstractTypeInfo API to make all that consistent. ; ¬† | set | map | vector | fixed_array; -- | -- | -- | -- | --; clear() | X | X | X | ¬†; insert(A) | X | ¬† | ¬† | ¬†; insert(std::pair<key, B>) | ¬† | X | Y | ¬†; size() | X | X | X | X; resize() | ¬† | ¬† | X | ¬†; empty() | X | X | X | X. So in short:; ! IsFixedSizeContainer => clear(), resize(); isContainer => empty(), size(); isSet => insert(A) and !insert(std::pair<>). I drafted the general implementation, to illustrate what the current TypeInfo is really doing and how to refactor it: https://godbolt.org/z/srsq3ExPq; extract:; ```cpp. template<class Info>; class AbstractTypeInfoDynamicWrapper : public BaseAbstractTypeInfo; {; public:; bool size() override ; { ; if constexpr(; Info::IsContainer && ; Info::Properties::IsContainer); return Info::clear();; throw std::runtime_error(""Invalid operation"");; }. bool empty() override ; { ; if constexpr(; Info::IsContainer && ; Info::Prop",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3851#issuecomment-1545409905
https://github.com/sofa-framework/sofa/pull/3851#issuecomment-1545409905:313,Integrability,interface,interface,313,"@alxbilger . Thanks for your relevant question, actually this is why the PR is in wip. . So more details. ; Fundamentally the TypeInfo system is a strange beast compose of two things. One is a type-traits API designed to be used in compile time code, one is dynamic interface API. AbstractTypeInfo is the dynamic interface (with the virtual function). The AbstractTypeInfoDynamicWrapper is a fa√ßade to ""wrap"" the compile time TypeInfo type-traits into the virtual one. . The TypeInfo type-traits API has several consistancy issues (probably dating back to pre-c++17 area) mixing a lot of different behavior into a single dynamic API... making things very fuzzy. . In the current status of the PR I just wanted to draft something to have a gimplse of the look and feel of a more modern code architecture (without breaking everything). . Regarding your question about insertion in a vector... the problem is that insert is not a push_back... it means inserting ""somewhere"" which could of course be implemented on vector. But it would requires a serious work on the AbstractTypeInfo API to make all that consistent. ; ¬† | set | map | vector | fixed_array; -- | -- | -- | -- | --; clear() | X | X | X | ¬†; insert(A) | X | ¬† | ¬† | ¬†; insert(std::pair<key, B>) | ¬† | X | Y | ¬†; size() | X | X | X | X; resize() | ¬† | ¬† | X | ¬†; empty() | X | X | X | X. So in short:; ! IsFixedSizeContainer => clear(), resize(); isContainer => empty(), size(); isSet => insert(A) and !insert(std::pair<>). I drafted the general implementation, to illustrate what the current TypeInfo is really doing and how to refactor it: https://godbolt.org/z/srsq3ExPq; extract:; ```cpp. template<class Info>; class AbstractTypeInfoDynamicWrapper : public BaseAbstractTypeInfo; {; public:; bool size() override ; { ; if constexpr(; Info::IsContainer && ; Info::Properties::IsContainer); return Info::clear();; throw std::runtime_error(""Invalid operation"");; }. bool empty() override ; { ; if constexpr(; Info::IsContainer && ; Info::Prop",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3851#issuecomment-1545409905
https://github.com/sofa-framework/sofa/pull/3851#issuecomment-1545409905:403,Integrability,wrap,wrap,403,"@alxbilger . Thanks for your relevant question, actually this is why the PR is in wip. . So more details. ; Fundamentally the TypeInfo system is a strange beast compose of two things. One is a type-traits API designed to be used in compile time code, one is dynamic interface API. AbstractTypeInfo is the dynamic interface (with the virtual function). The AbstractTypeInfoDynamicWrapper is a fa√ßade to ""wrap"" the compile time TypeInfo type-traits into the virtual one. . The TypeInfo type-traits API has several consistancy issues (probably dating back to pre-c++17 area) mixing a lot of different behavior into a single dynamic API... making things very fuzzy. . In the current status of the PR I just wanted to draft something to have a gimplse of the look and feel of a more modern code architecture (without breaking everything). . Regarding your question about insertion in a vector... the problem is that insert is not a push_back... it means inserting ""somewhere"" which could of course be implemented on vector. But it would requires a serious work on the AbstractTypeInfo API to make all that consistent. ; ¬† | set | map | vector | fixed_array; -- | -- | -- | -- | --; clear() | X | X | X | ¬†; insert(A) | X | ¬† | ¬† | ¬†; insert(std::pair<key, B>) | ¬† | X | Y | ¬†; size() | X | X | X | X; resize() | ¬† | ¬† | X | ¬†; empty() | X | X | X | X. So in short:; ! IsFixedSizeContainer => clear(), resize(); isContainer => empty(), size(); isSet => insert(A) and !insert(std::pair<>). I drafted the general implementation, to illustrate what the current TypeInfo is really doing and how to refactor it: https://godbolt.org/z/srsq3ExPq; extract:; ```cpp. template<class Info>; class AbstractTypeInfoDynamicWrapper : public BaseAbstractTypeInfo; {; public:; bool size() override ; { ; if constexpr(; Info::IsContainer && ; Info::Properties::IsContainer); return Info::clear();; throw std::runtime_error(""Invalid operation"");; }. bool empty() override ; { ; if constexpr(; Info::IsContainer && ; Info::Prop",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3851#issuecomment-1545409905
https://github.com/sofa-framework/sofa/pull/3851#issuecomment-1545409905:1588,Modifiability,refactor,refactor,1588,"AbstractTypeInfoDynamicWrapper is a fa√ßade to ""wrap"" the compile time TypeInfo type-traits into the virtual one. . The TypeInfo type-traits API has several consistancy issues (probably dating back to pre-c++17 area) mixing a lot of different behavior into a single dynamic API... making things very fuzzy. . In the current status of the PR I just wanted to draft something to have a gimplse of the look and feel of a more modern code architecture (without breaking everything). . Regarding your question about insertion in a vector... the problem is that insert is not a push_back... it means inserting ""somewhere"" which could of course be implemented on vector. But it would requires a serious work on the AbstractTypeInfo API to make all that consistent. ; ¬† | set | map | vector | fixed_array; -- | -- | -- | -- | --; clear() | X | X | X | ¬†; insert(A) | X | ¬† | ¬† | ¬†; insert(std::pair<key, B>) | ¬† | X | Y | ¬†; size() | X | X | X | X; resize() | ¬† | ¬† | X | ¬†; empty() | X | X | X | X. So in short:; ! IsFixedSizeContainer => clear(), resize(); isContainer => empty(), size(); isSet => insert(A) and !insert(std::pair<>). I drafted the general implementation, to illustrate what the current TypeInfo is really doing and how to refactor it: https://godbolt.org/z/srsq3ExPq; extract:; ```cpp. template<class Info>; class AbstractTypeInfoDynamicWrapper : public BaseAbstractTypeInfo; {; public:; bool size() override ; { ; if constexpr(; Info::IsContainer && ; Info::Properties::IsContainer); return Info::clear();; throw std::runtime_error(""Invalid operation"");; }. bool empty() override ; { ; if constexpr(; Info::IsContainer && ; Info::Properties::IsContainer); return Info::empty();; throw std::runtime_error(""Invalid operation"");; }. void setValueInteger(int index, int value) override ; { ; if constexpr(; !Info::Properties::IsSetContainer && ; Info::Properties::Type == DataType::Integer); return Info::setAt(index, value);; throw std::runtime_error(""Invalid operation"");; }; /// ...; }; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3851#issuecomment-1545409905
https://github.com/sofa-framework/sofa/pull/3851#issuecomment-1545409905:1177,Usability,clear,clear,1177,"in compile time code, one is dynamic interface API. AbstractTypeInfo is the dynamic interface (with the virtual function). The AbstractTypeInfoDynamicWrapper is a fa√ßade to ""wrap"" the compile time TypeInfo type-traits into the virtual one. . The TypeInfo type-traits API has several consistancy issues (probably dating back to pre-c++17 area) mixing a lot of different behavior into a single dynamic API... making things very fuzzy. . In the current status of the PR I just wanted to draft something to have a gimplse of the look and feel of a more modern code architecture (without breaking everything). . Regarding your question about insertion in a vector... the problem is that insert is not a push_back... it means inserting ""somewhere"" which could of course be implemented on vector. But it would requires a serious work on the AbstractTypeInfo API to make all that consistent. ; ¬† | set | map | vector | fixed_array; -- | -- | -- | -- | --; clear() | X | X | X | ¬†; insert(A) | X | ¬† | ¬† | ¬†; insert(std::pair<key, B>) | ¬† | X | Y | ¬†; size() | X | X | X | X; resize() | ¬† | ¬† | X | ¬†; empty() | X | X | X | X. So in short:; ! IsFixedSizeContainer => clear(), resize(); isContainer => empty(), size(); isSet => insert(A) and !insert(std::pair<>). I drafted the general implementation, to illustrate what the current TypeInfo is really doing and how to refactor it: https://godbolt.org/z/srsq3ExPq; extract:; ```cpp. template<class Info>; class AbstractTypeInfoDynamicWrapper : public BaseAbstractTypeInfo; {; public:; bool size() override ; { ; if constexpr(; Info::IsContainer && ; Info::Properties::IsContainer); return Info::clear();; throw std::runtime_error(""Invalid operation"");; }. bool empty() override ; { ; if constexpr(; Info::IsContainer && ; Info::Properties::IsContainer); return Info::empty();; throw std::runtime_error(""Invalid operation"");; }. void setValueInteger(int index, int value) override ; { ; if constexpr(; !Info::Properties::IsSetContainer && ; Info::Properties::Ty",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3851#issuecomment-1545409905
https://github.com/sofa-framework/sofa/pull/3851#issuecomment-1545409905:1387,Usability,clear,clear,1387,"AbstractTypeInfoDynamicWrapper is a fa√ßade to ""wrap"" the compile time TypeInfo type-traits into the virtual one. . The TypeInfo type-traits API has several consistancy issues (probably dating back to pre-c++17 area) mixing a lot of different behavior into a single dynamic API... making things very fuzzy. . In the current status of the PR I just wanted to draft something to have a gimplse of the look and feel of a more modern code architecture (without breaking everything). . Regarding your question about insertion in a vector... the problem is that insert is not a push_back... it means inserting ""somewhere"" which could of course be implemented on vector. But it would requires a serious work on the AbstractTypeInfo API to make all that consistent. ; ¬† | set | map | vector | fixed_array; -- | -- | -- | -- | --; clear() | X | X | X | ¬†; insert(A) | X | ¬† | ¬† | ¬†; insert(std::pair<key, B>) | ¬† | X | Y | ¬†; size() | X | X | X | X; resize() | ¬† | ¬† | X | ¬†; empty() | X | X | X | X. So in short:; ! IsFixedSizeContainer => clear(), resize(); isContainer => empty(), size(); isSet => insert(A) and !insert(std::pair<>). I drafted the general implementation, to illustrate what the current TypeInfo is really doing and how to refactor it: https://godbolt.org/z/srsq3ExPq; extract:; ```cpp. template<class Info>; class AbstractTypeInfoDynamicWrapper : public BaseAbstractTypeInfo; {; public:; bool size() override ; { ; if constexpr(; Info::IsContainer && ; Info::Properties::IsContainer); return Info::clear();; throw std::runtime_error(""Invalid operation"");; }. bool empty() override ; { ; if constexpr(; Info::IsContainer && ; Info::Properties::IsContainer); return Info::empty();; throw std::runtime_error(""Invalid operation"");; }. void setValueInteger(int index, int value) override ; { ; if constexpr(; !Info::Properties::IsSetContainer && ; Info::Properties::Type == DataType::Integer); return Info::setAt(index, value);; throw std::runtime_error(""Invalid operation"");; }; /// ...; }; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3851#issuecomment-1545409905
https://github.com/sofa-framework/sofa/pull/3851#issuecomment-1545409905:1864,Usability,clear,clear,1864,"AbstractTypeInfoDynamicWrapper is a fa√ßade to ""wrap"" the compile time TypeInfo type-traits into the virtual one. . The TypeInfo type-traits API has several consistancy issues (probably dating back to pre-c++17 area) mixing a lot of different behavior into a single dynamic API... making things very fuzzy. . In the current status of the PR I just wanted to draft something to have a gimplse of the look and feel of a more modern code architecture (without breaking everything). . Regarding your question about insertion in a vector... the problem is that insert is not a push_back... it means inserting ""somewhere"" which could of course be implemented on vector. But it would requires a serious work on the AbstractTypeInfo API to make all that consistent. ; ¬† | set | map | vector | fixed_array; -- | -- | -- | -- | --; clear() | X | X | X | ¬†; insert(A) | X | ¬† | ¬† | ¬†; insert(std::pair<key, B>) | ¬† | X | Y | ¬†; size() | X | X | X | X; resize() | ¬† | ¬† | X | ¬†; empty() | X | X | X | X. So in short:; ! IsFixedSizeContainer => clear(), resize(); isContainer => empty(), size(); isSet => insert(A) and !insert(std::pair<>). I drafted the general implementation, to illustrate what the current TypeInfo is really doing and how to refactor it: https://godbolt.org/z/srsq3ExPq; extract:; ```cpp. template<class Info>; class AbstractTypeInfoDynamicWrapper : public BaseAbstractTypeInfo; {; public:; bool size() override ; { ; if constexpr(; Info::IsContainer && ; Info::Properties::IsContainer); return Info::clear();; throw std::runtime_error(""Invalid operation"");; }. bool empty() override ; { ; if constexpr(; Info::IsContainer && ; Info::Properties::IsContainer); return Info::empty();; throw std::runtime_error(""Invalid operation"");; }. void setValueInteger(int index, int value) override ; { ; if constexpr(; !Info::Properties::IsSetContainer && ; Info::Properties::Type == DataType::Integer); return Info::setAt(index, value);; throw std::runtime_error(""Invalid operation"");; }; /// ...; }; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3851#issuecomment-1545409905
https://github.com/sofa-framework/sofa/pull/3855#issuecomment-1545470894:36,Deployability,update,updated,36,I'm ok to deprecate PSL until it is updated to SofaPython3 :),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3855#issuecomment-1545470894
https://github.com/sofa-framework/sofa/pull/3855#issuecomment-1545691436:103,Availability,avail,available,103,"Well, this PR does not change the status of `SofaPython`. It is still a deprecated external plugin and available on GitHub. This PR just remove the possibility to fetch it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3855#issuecomment-1545691436
https://github.com/sofa-framework/sofa/pull/3855#issuecomment-1545691436:92,Modifiability,plugin,plugin,92,"Well, this PR does not change the status of `SofaPython`. It is still a deprecated external plugin and available on GitHub. This PR just remove the possibility to fetch it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3855#issuecomment-1545691436
https://github.com/sofa-framework/sofa/pull/3857#issuecomment-1550930401:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3857#issuecomment-1550930401
https://github.com/sofa-framework/sofa/pull/3858#issuecomment-1547452259:46,Availability,error,error,46,"Hello, if it is dangerous, shouldn't it be an error instead of a warning ? ; (people don't read warnings)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3858#issuecomment-1547452259
https://github.com/sofa-framework/sofa/pull/3861#issuecomment-1550942421:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3861#issuecomment-1550942421
https://github.com/sofa-framework/sofa/pull/3868#issuecomment-1557228526:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3868#issuecomment-1557228526
https://github.com/sofa-framework/sofa/pull/3868#issuecomment-1569702789:54,Testability,test,tested,54,"The added scene is failing because CUDA scene are not tested on the CI. Add the scene to the ignore list, then rebase, then ready",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3868#issuecomment-1569702789
https://github.com/sofa-framework/sofa/pull/3869#issuecomment-1559742961:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3869#issuecomment-1559742961
https://github.com/sofa-framework/sofa/pull/3871#issuecomment-1549702192:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3871#issuecomment-1549702192
https://github.com/sofa-framework/sofa/pull/3871#issuecomment-1556707923:169,Deployability,update,updates,169,"Hello @alxbilger,. Thanks for the PR, removing that ""verbose"" looks fine to. ; As a deprecation worklfow I recommand:; - deprecate the data field (as done in the PR); - updates all call points that are using d_verbose: either replace them with msg_info or remove the message depending on the situation ? ; - in the parse method () (or init() method), detect that the verbose argument is used and print a deprecation indicating to the user that the field is either removed or replace by ""printLog"".",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3871#issuecomment-1556707923
https://github.com/sofa-framework/sofa/pull/3871#issuecomment-1556707923:267,Integrability,message,message,267,"Hello @alxbilger,. Thanks for the PR, removing that ""verbose"" looks fine to. ; As a deprecation worklfow I recommand:; - deprecate the data field (as done in the PR); - updates all call points that are using d_verbose: either replace them with msg_info or remove the message depending on the situation ? ; - in the parse method () (or init() method), detect that the verbose argument is used and print a deprecation indicating to the user that the field is either removed or replace by ""printLog"".",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3871#issuecomment-1556707923
https://github.com/sofa-framework/sofa/pull/3871#issuecomment-1556707923:275,Integrability,depend,depending,275,"Hello @alxbilger,. Thanks for the PR, removing that ""verbose"" looks fine to. ; As a deprecation worklfow I recommand:; - deprecate the data field (as done in the PR); - updates all call points that are using d_verbose: either replace them with msg_info or remove the message depending on the situation ? ; - in the parse method () (or init() method), detect that the verbose argument is used and print a deprecation indicating to the user that the field is either removed or replace by ""printLog"".",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3871#issuecomment-1556707923
https://github.com/sofa-framework/sofa/pull/3871#issuecomment-1556707923:351,Safety,detect,detect,351,"Hello @alxbilger,. Thanks for the PR, removing that ""verbose"" looks fine to. ; As a deprecation worklfow I recommand:; - deprecate the data field (as done in the PR); - updates all call points that are using d_verbose: either replace them with msg_info or remove the message depending on the situation ? ; - in the parse method () (or init() method), detect that the verbose argument is used and print a deprecation indicating to the user that the field is either removed or replace by ""printLog"".",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3871#issuecomment-1556707923
https://github.com/sofa-framework/sofa/pull/3871#issuecomment-1556742205:183,Deployability,update,updates,183,"> Hello @alxbilger,; > ; > Thanks for the PR, removing that ""verbose"" looks fine to. As a deprecation worklfow I recommand:; > ; > * deprecate the data field (as done in the PR); > * updates all call points that are using d_verbose: either replace them with msg_info or remove the message depending on the situation ?. I agree but in the case of this PR, the Data `d_verbose` was really not used at all. So no need to do anything.; > * in the parse method () (or init() method), detect that the verbose argument is used and print a deprecation indicating to the user that the field is either removed or replace by ""printLog"". Yes, I will do it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3871#issuecomment-1556742205
https://github.com/sofa-framework/sofa/pull/3871#issuecomment-1556742205:281,Integrability,message,message,281,"> Hello @alxbilger,; > ; > Thanks for the PR, removing that ""verbose"" looks fine to. As a deprecation worklfow I recommand:; > ; > * deprecate the data field (as done in the PR); > * updates all call points that are using d_verbose: either replace them with msg_info or remove the message depending on the situation ?. I agree but in the case of this PR, the Data `d_verbose` was really not used at all. So no need to do anything.; > * in the parse method () (or init() method), detect that the verbose argument is used and print a deprecation indicating to the user that the field is either removed or replace by ""printLog"". Yes, I will do it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3871#issuecomment-1556742205
https://github.com/sofa-framework/sofa/pull/3871#issuecomment-1556742205:289,Integrability,depend,depending,289,"> Hello @alxbilger,; > ; > Thanks for the PR, removing that ""verbose"" looks fine to. As a deprecation worklfow I recommand:; > ; > * deprecate the data field (as done in the PR); > * updates all call points that are using d_verbose: either replace them with msg_info or remove the message depending on the situation ?. I agree but in the case of this PR, the Data `d_verbose` was really not used at all. So no need to do anything.; > * in the parse method () (or init() method), detect that the verbose argument is used and print a deprecation indicating to the user that the field is either removed or replace by ""printLog"". Yes, I will do it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3871#issuecomment-1556742205
https://github.com/sofa-framework/sofa/pull/3871#issuecomment-1556742205:479,Safety,detect,detect,479,"> Hello @alxbilger,; > ; > Thanks for the PR, removing that ""verbose"" looks fine to. As a deprecation worklfow I recommand:; > ; > * deprecate the data field (as done in the PR); > * updates all call points that are using d_verbose: either replace them with msg_info or remove the message depending on the situation ?. I agree but in the case of this PR, the Data `d_verbose` was really not used at all. So no need to do anything.; > * in the parse method () (or init() method), detect that the verbose argument is used and print a deprecation indicating to the user that the field is either removed or replace by ""printLog"". Yes, I will do it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3871#issuecomment-1556742205
https://github.com/sofa-framework/sofa/pull/3871#issuecomment-1556745945:42,Deployability,update,updated,42,"Ok, i was actually not sure if it was not updated... or not used at all :) ; So maybe we can move faster on that one by already DeprecatedAndRemove d_verbose ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3871#issuecomment-1556745945
https://github.com/sofa-framework/sofa/pull/3871#issuecomment-1556779609:62,Modifiability,variab,variable,62,@damienmarchal I am not so sure. It is not excluded that this variable is actually used in a CUDA-based template specialization of the linear solvers (in a private plugin).,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3871#issuecomment-1556779609
https://github.com/sofa-framework/sofa/pull/3871#issuecomment-1556779609:164,Modifiability,plugin,plugin,164,@damienmarchal I am not so sure. It is not excluded that this variable is actually used in a CUDA-based template specialization of the linear solvers (in a private plugin).,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3871#issuecomment-1556779609
https://github.com/sofa-framework/sofa/pull/3871#issuecomment-1557197650:11,Modifiability,variab,variable,11,anyway the variable to be used should be the inherited `f_printLog` right @damienmarchal @alxbilger ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3871#issuecomment-1557197650
https://github.com/sofa-framework/sofa/pull/3871#issuecomment-1557197650:45,Modifiability,inherit,inherited,45,anyway the variable to be used should be the inherited `f_printLog` right @damienmarchal @alxbilger ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3871#issuecomment-1557197650
https://github.com/sofa-framework/sofa/pull/3871#issuecomment-1557202278:14,Integrability,depend,depends,14,"@hugtalbot it depends. In some other libraries, there are different levels of verbosity. We have only one. Adding an extra Data `d_verbose` could be a way to simulate a second level of verbosity. But it is not clean :). I think for now we just stick to `f_printLog`",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3871#issuecomment-1557202278
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1561094376:38,Testability,test,tests,38,[ci-build][force-full-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1561094376
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1569299565:78,Modifiability,Plugin,Plugin,78,FYI: unit tests are OK; there are no scene tests or regression however.; ```; Plugin SoftRobots: built (found libSoftRobots.so libSoftRobots.so.1.0); Plugin SoftRobots: no examples/ nor scenes/ directories.; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1569299565
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1569299565:150,Modifiability,Plugin,Plugin,150,FYI: unit tests are OK; there are no scene tests or regression however.; ```; Plugin SoftRobots: built (found libSoftRobots.so libSoftRobots.so.1.0); Plugin SoftRobots: no examples/ nor scenes/ directories.; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1569299565
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1569299565:10,Testability,test,tests,10,FYI: unit tests are OK; there are no scene tests or regression however.; ```; Plugin SoftRobots: built (found libSoftRobots.so libSoftRobots.so.1.0); Plugin SoftRobots: no examples/ nor scenes/ directories.; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1569299565
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1569299565:43,Testability,test,tests,43,FYI: unit tests are OK; there are no scene tests or regression however.; ```; Plugin SoftRobots: built (found libSoftRobots.so libSoftRobots.so.1.0); Plugin SoftRobots: no examples/ nor scenes/ directories.; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1569299565
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1569622345:141,Testability,test,tests,141,Arf the scene directories are hard-coded... https://github.com/sofa-framework/ci/blob/5fdd611c1c6190c170e41b84a0e5cbe6b0f76e65/scripts/scene-tests.sh#L175,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1569622345
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1580172464:38,Testability,test,tests,38,[ci-build][force-full-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1580172464
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1580175136:15,Modifiability,plugin,plugin,15,"Now SoftRobots plugin have a repository `examples/`. Force full build triggered, let's wait CI.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1580175136
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1582410252:38,Testability,test,tests,38,[ci-build][force-full-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1582410252
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1586383704:180,Availability,error,errors,180,"`FIXME: 0 unit, 757 scenes, 0 regression `; I guess something went wrong üòÖ. it seems that the destination of the lib is wrong, so the CI and runSofa cannot find the lib (hence the errors)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1586383704
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1586889744:38,Testability,test,tests,38,[ci-build][force-full-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1586889744
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1586890032:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/STLIB/pull/106**; _For this build, STLIB/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/STLIB; GIT_TAG d8f277e29d0376ec1e6979fb8bea1d52b6a16e09_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1586890032
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1586890032:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/STLIB/pull/106**; _For this build, STLIB/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/STLIB; GIT_TAG d8f277e29d0376ec1e6979fb8bea1d52b6a16e09_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1586890032
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1587571126:38,Testability,test,tests,38,[ci-build][force-full-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1587571126
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1587571335:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/7/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/STLIB/pull/106**; _For this build, STLIB/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/STLIB; GIT_TAG 9ec7355493c218cbbf8af4b299e0f0a2a3e3d9cb_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1587571335
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1587571335:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/7/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/STLIB/pull/106**; _For this build, STLIB/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/STLIB; GIT_TAG 9ec7355493c218cbbf8af4b299e0f0a2a3e3d9cb_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1587571335
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1589168069:38,Testability,test,tests,38,[ci-build][force-full-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1589168069
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1589168452:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/8/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/354**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG aec36b40c24e58d9e9616293bf3740b5aaafb777_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1589168452
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1589168452:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/8/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/354**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG aec36b40c24e58d9e9616293bf3740b5aaafb777_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1589168452
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1589212492:38,Testability,test,tests,38,[ci-build][force-full-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1589212492
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1589248228:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1589248228
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1589248708:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/9/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/354**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG aec36b40c24e58d9e9616293bf3740b5aaafb777_; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/222**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG c9f3cb28d44741fbd7af3f3db0fa0acd1e23e7a4_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1589248708
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1589248708:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/9/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/354**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG aec36b40c24e58d9e9616293bf3740b5aaafb777_; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/222**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG c9f3cb28d44741fbd7af3f3db0fa0acd1e23e7a4_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1589248708
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1589519002:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1589519002
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1589519335:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/354**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG aec36b40c24e58d9e9616293bf3740b5aaafb777_; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/222**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG e37db0bdc037abbb339f6e371d60df26fc391b83_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1589519335
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1589519335:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/354**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG aec36b40c24e58d9e9616293bf3740b5aaafb777_; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/222**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG e37db0bdc037abbb339f6e371d60df26fc391b83_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1589519335
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1589541850:45,Availability,error,error,45,@epernod @damienmarchal I have the following error in several scenes of SoftRobots:. ```; [ERROR] [UniformMass(mass)] TopologyData: indices already has a TopologyDataHandler. createTopologyHandler should only be called once at init of the TopologyData.; ```. I think it is due to the fact that a Node is initialized twice. What is your recommendation?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1589541850
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1589541850:91,Availability,ERROR,ERROR,91,@epernod @damienmarchal I have the following error in several scenes of SoftRobots:. ```; [ERROR] [UniformMass(mass)] TopologyData: indices already has a TopologyDataHandler. createTopologyHandler should only be called once at init of the TopologyData.; ```. I think it is due to the fact that a Node is initialized twice. What is your recommendation?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1589541850
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1590748119:47,Availability,error,error,47,"> @epernod @damienmarchal I have the following error in several scenes of SoftRobots:; > ; > ```; > [ERROR] [UniformMass(mass)] TopologyData: indices already has a TopologyDataHandler. createTopologyHandler should only be called once at init of the TopologyData.; > ```; > ; > I think it is due to the fact that a Node is initialized twice. What is your recommendation?. Quickly: this error is fired because init is not called only once. A ""TopologyDataHandler"" is created in the UniformMass init method. Creating 2 trackers could create real bugs if topologicalChanges are applied (basically changes will be applied twice); I see several options:; - init should not be applied several times in those examples; - If we decide init could be applied several times, we need to change the code to check tracker are not created twice. This should be possible but not as simple as ```tracker != null```. As a quick workaround: replace the `TetrahedronSetTopologyContainer ` by a `MeshTopology ` here : https://github.com/SofaDefrost/SoftRobots/blob/4acf28248278106c2855206f1751dcba41268039/examples/tutorials/Tripod/details/elasticbody.py#L20; This should solve all the tripod tutorials scenes. TopologyDataHandler are not created if the topology is using static containers.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1590748119
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1590748119:101,Availability,ERROR,ERROR,101,"> @epernod @damienmarchal I have the following error in several scenes of SoftRobots:; > ; > ```; > [ERROR] [UniformMass(mass)] TopologyData: indices already has a TopologyDataHandler. createTopologyHandler should only be called once at init of the TopologyData.; > ```; > ; > I think it is due to the fact that a Node is initialized twice. What is your recommendation?. Quickly: this error is fired because init is not called only once. A ""TopologyDataHandler"" is created in the UniformMass init method. Creating 2 trackers could create real bugs if topologicalChanges are applied (basically changes will be applied twice); I see several options:; - init should not be applied several times in those examples; - If we decide init could be applied several times, we need to change the code to check tracker are not created twice. This should be possible but not as simple as ```tracker != null```. As a quick workaround: replace the `TetrahedronSetTopologyContainer ` by a `MeshTopology ` here : https://github.com/SofaDefrost/SoftRobots/blob/4acf28248278106c2855206f1751dcba41268039/examples/tutorials/Tripod/details/elasticbody.py#L20; This should solve all the tripod tutorials scenes. TopologyDataHandler are not created if the topology is using static containers.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1590748119
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1590748119:385,Availability,error,error,385,"> @epernod @damienmarchal I have the following error in several scenes of SoftRobots:; > ; > ```; > [ERROR] [UniformMass(mass)] TopologyData: indices already has a TopologyDataHandler. createTopologyHandler should only be called once at init of the TopologyData.; > ```; > ; > I think it is due to the fact that a Node is initialized twice. What is your recommendation?. Quickly: this error is fired because init is not called only once. A ""TopologyDataHandler"" is created in the UniformMass init method. Creating 2 trackers could create real bugs if topologicalChanges are applied (basically changes will be applied twice); I see several options:; - init should not be applied several times in those examples; - If we decide init could be applied several times, we need to change the code to check tracker are not created twice. This should be possible but not as simple as ```tracker != null```. As a quick workaround: replace the `TetrahedronSetTopologyContainer ` by a `MeshTopology ` here : https://github.com/SofaDefrost/SoftRobots/blob/4acf28248278106c2855206f1751dcba41268039/examples/tutorials/Tripod/details/elasticbody.py#L20; This should solve all the tripod tutorials scenes. TopologyDataHandler are not created if the topology is using static containers.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1590748119
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1590748119:865,Usability,simpl,simple,865,"> @epernod @damienmarchal I have the following error in several scenes of SoftRobots:; > ; > ```; > [ERROR] [UniformMass(mass)] TopologyData: indices already has a TopologyDataHandler. createTopologyHandler should only be called once at init of the TopologyData.; > ```; > ; > I think it is due to the fact that a Node is initialized twice. What is your recommendation?. Quickly: this error is fired because init is not called only once. A ""TopologyDataHandler"" is created in the UniformMass init method. Creating 2 trackers could create real bugs if topologicalChanges are applied (basically changes will be applied twice); I see several options:; - init should not be applied several times in those examples; - If we decide init could be applied several times, we need to change the code to check tracker are not created twice. This should be possible but not as simple as ```tracker != null```. As a quick workaround: replace the `TetrahedronSetTopologyContainer ` by a `MeshTopology ` here : https://github.com/SofaDefrost/SoftRobots/blob/4acf28248278106c2855206f1751dcba41268039/examples/tutorials/Tripod/details/elasticbody.py#L20; This should solve all the tripod tutorials scenes. TopologyDataHandler are not created if the topology is using static containers.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1590748119
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1590846893:287,Deployability,update,update,287,"> I confirm that having a `MeshTopology` solves the issues. @epernod You call it a workaround. Does it mean I should not do that for some reasons?. MeshTopology -> static containers in the sense, not possible to change it during simulation, XXSetTopologyContainer have lot of methods to update their content.; But if I remember well, they are both using vector",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1590846893
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1590847999:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/354**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG aec36b40c24e58d9e9616293bf3740b5aaafb777_; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/222**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 1f4bc22558fcf26b998c9f31b82723c33bf0f9f7_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1590847999
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1590847999:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/354**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG aec36b40c24e58d9e9616293bf3740b5aaafb777_; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/222**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 1f4bc22558fcf26b998c9f31b82723c33bf0f9f7_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1590847999
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1604337991:38,Testability,test,tests,38,[ci-build][force-full-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1604337991
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1604338261:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/12/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/354**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 030e1d89dd26deeedae60c40c109138a59ec1f3d_; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/222**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG a2ebbd6e68e9cea086e5f365651f9b24d6b283af_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1604338261
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1604338261:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/12/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/354**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 030e1d89dd26deeedae60c40c109138a59ec1f3d_; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/222**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG a2ebbd6e68e9cea086e5f365651f9b24d6b283af_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1604338261
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1620005178:38,Testability,test,tests,38,[ci-build][force-full-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1620005178
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1620005425:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/13/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/354**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 7b22ab5eccbe128bad20b9b68c4e2c7c3aaa0236_; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/222**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 57d081401afdf553ec167d03d213b8a4074309c5_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1620005425
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1620005425:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/13/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/354**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 7b22ab5eccbe128bad20b9b68c4e2c7c3aaa0236_; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/222**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 57d081401afdf553ec167d03d213b8a4074309c5_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1620005425
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1620294045:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1620294045
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1620294324:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/14/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/354**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 7b22ab5eccbe128bad20b9b68c4e2c7c3aaa0236_; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/222**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 1c5f59c1f1809038f087f994e5f6ddba4999824c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1620294324
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1620294324:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/14/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/354**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 7b22ab5eccbe128bad20b9b68c4e2c7c3aaa0236_; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/222**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 1c5f59c1f1809038f087f994e5f6ddba4999824c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1620294324
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1620562227:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1620562227
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1620562359:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #15](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/15/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/354**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 7a990b6ba0c3227736a072e7c36880f88b613967_; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/222**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 1c5f59c1f1809038f087f994e5f6ddba4999824c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1620562359
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1620562359:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #15](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/15/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/354**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 7a990b6ba0c3227736a072e7c36880f88b613967_; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/222**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 1c5f59c1f1809038f087f994e5f6ddba4999824c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1620562359
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1620834830:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1620834830
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1620834958:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #16](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/16/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/354**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 7a990b6ba0c3227736a072e7c36880f88b613967_; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/222**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 1c5f59c1f1809038f087f994e5f6ddba4999824c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1620834958
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1620834958:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #16](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/16/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/354**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 7a990b6ba0c3227736a072e7c36880f88b613967_; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/222**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 1c5f59c1f1809038f087f994e5f6ddba4999824c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1620834958
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1623126197:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1623126197
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1623126475:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #17](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/17/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1623126475
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1623126475:123,Integrability,depend,dependencies,123,**[ci-depends-on]** detected during [build #17](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/17/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1623126475
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1623126475:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #17](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/17/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1623126475
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1624946275:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #18](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/18/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1624946275
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1624946275:123,Integrability,depend,dependencies,123,**[ci-depends-on]** detected during [build #18](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/18/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1624946275
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1624946275:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #18](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/18/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1624946275
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1629891813:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1629891813
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1629891942:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #19](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/19/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1629891942
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1629891942:123,Integrability,depend,dependencies,123,**[ci-depends-on]** detected during [build #19](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/19/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1629891942
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1629891942:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #19](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/19/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1629891942
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1630092082:23,Availability,failure,failures,23,ü•π; ```; Test Result¬†(2 failures / +1); SceneTests.applications/plugins/SoftRobots/examples/tutorials/Tripod/myproject.elasticbody.py; SceneTests.applications/plugins/SoftRobots/examples/tutorials/Tripod/myproject.step6.py; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1630092082
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1630092082:63,Modifiability,plugin,plugins,63,ü•π; ```; Test Result¬†(2 failures / +1); SceneTests.applications/plugins/SoftRobots/examples/tutorials/Tripod/myproject.elasticbody.py; SceneTests.applications/plugins/SoftRobots/examples/tutorials/Tripod/myproject.step6.py; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1630092082
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1630092082:158,Modifiability,plugin,plugins,158,ü•π; ```; Test Result¬†(2 failures / +1); SceneTests.applications/plugins/SoftRobots/examples/tutorials/Tripod/myproject.elasticbody.py; SceneTests.applications/plugins/SoftRobots/examples/tutorials/Tripod/myproject.step6.py; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1630092082
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1630092082:8,Testability,Test,Test,8,ü•π; ```; Test Result¬†(2 failures / +1); SceneTests.applications/plugins/SoftRobots/examples/tutorials/Tripod/myproject.elasticbody.py; SceneTests.applications/plugins/SoftRobots/examples/tutorials/Tripod/myproject.step6.py; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1630092082
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1631986653:38,Testability,test,tests,38,[ci-build][force-full-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1631986653
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1631986903:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #20](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/20/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1631986903
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1631986903:123,Integrability,depend,dependencies,123,**[ci-depends-on]** detected during [build #20](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/20/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1631986903
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1631986903:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #20](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/20/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1631986903
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1637282462:38,Testability,test,tests,38,[ci-build][force-full-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1637282462
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1637282534:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #21](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/21/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1637282534
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1637282534:123,Integrability,depend,dependencies,123,**[ci-depends-on]** detected during [build #21](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/21/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1637282534
https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1637282534:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #21](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/21/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1637282534
https://github.com/sofa-framework/sofa/pull/3884#issuecomment-1567656501:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3884#issuecomment-1567656501
https://github.com/sofa-framework/sofa/pull/3886#issuecomment-1563077960:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3886#issuecomment-1563077960
https://github.com/sofa-framework/sofa/pull/3887#issuecomment-1569730450:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3887#issuecomment-1569730450
https://github.com/sofa-framework/sofa/pull/3888#issuecomment-1569733049:22,Testability,test,tests,22,[ci-build][with-scene-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3888#issuecomment-1569733049
https://github.com/sofa-framework/sofa/pull/3888#issuecomment-1569740293:30,Usability,feedback,feedback,30,It would be nice to have some feedback from @EtienneMenager @fjourdes @alxbilger @courtecuisse,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3888#issuecomment-1569740293
https://github.com/sofa-framework/sofa/pull/3888#issuecomment-1569747933:85,Usability,Feedback,Feedback,85,"Proof of concept further to STC#15 discussions but so far, no use of this mechanism. Feedback from the community requested. A usecase could be to warn the user in LCPConstraintSolver when adding BilateralInteractionConstraint while this constraint solver does not support it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3888#issuecomment-1569747933
https://github.com/sofa-framework/sofa/pull/3888#issuecomment-1580181835:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3888#issuecomment-1580181835
https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1563118642:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1563118642
https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1564100229:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3889/8/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/350**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG d53251cd082e3984221487478946830aab65ae1c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1564100229
https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1564100229:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3889/8/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/350**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG d53251cd082e3984221487478946830aab65ae1c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1564100229
https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1564266575:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3889/9/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/350**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ef6854426ef5fd28319ef5fc258fe2a94b1a7f04_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1564266575
https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1564266575:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3889/9/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/350**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ef6854426ef5fd28319ef5fc258fe2a94b1a7f04_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1564266575
https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1564882829:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3889/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/350**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ef6854426ef5fd28319ef5fc258fe2a94b1a7f04_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1564882829
https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1564882829:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3889/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/350**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ef6854426ef5fd28319ef5fc258fe2a94b1a7f04_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1564882829
https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1567657315:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1567657315
https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1567657374:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3889/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/350**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ef6854426ef5fd28319ef5fc258fe2a94b1a7f04_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1567657374
https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1567657374:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3889/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/350**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ef6854426ef5fd28319ef5fc258fe2a94b1a7f04_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1567657374
https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1568403041:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3889/12/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/350**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ef6854426ef5fd28319ef5fc258fe2a94b1a7f04_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1568403041
https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1568403041:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3889/12/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/350**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ef6854426ef5fd28319ef5fc258fe2a94b1a7f04_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1568403041
https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1568439978:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3889/13/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/350**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ef6854426ef5fd28319ef5fc258fe2a94b1a7f04_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1568439978
https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1568439978:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3889/13/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/350**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ef6854426ef5fd28319ef5fc258fe2a94b1a7f04_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1568439978
https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1582400008:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3889/14/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/350**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ef6854426ef5fd28319ef5fc258fe2a94b1a7f04_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1582400008
https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1582400008:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3889/14/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/350**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ef6854426ef5fd28319ef5fc258fe2a94b1a7f04_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1582400008
https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1591004678:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #15](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3889/15/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/350**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ef6854426ef5fd28319ef5fc258fe2a94b1a7f04_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1591004678
https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1591004678:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #15](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3889/15/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/350**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ef6854426ef5fd28319ef5fc258fe2a94b1a7f04_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1591004678
https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1600084486:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #16](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3889/16/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/350**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 227bf080aa6d7dd166d4329f8fbbb06c5ae0de70_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1600084486
https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1600084486:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #16](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3889/16/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/350**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 227bf080aa6d7dd166d4329f8fbbb06c5ae0de70_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1600084486
https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1609415322:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1609415322
https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1609415551:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #17](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3889/17/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/350**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 227bf080aa6d7dd166d4329f8fbbb06c5ae0de70_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1609415551
https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1609415551:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #17](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3889/17/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/350**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 227bf080aa6d7dd166d4329f8fbbb06c5ae0de70_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1609415551
https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1616999542:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1616999542
https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1616999675:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #18](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3889/18/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1616999675
https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1616999675:123,Integrability,depend,dependencies,123,**[ci-depends-on]** detected during [build #18](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3889/18/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1616999675
https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1616999675:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #18](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3889/18/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1616999675
https://github.com/sofa-framework/sofa/pull/3891#issuecomment-1563454307:36,Energy Efficiency,green,green,36,[ci-build][with-all-tests]. yes all green :muscle: :green_circle:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3891#issuecomment-1563454307
https://github.com/sofa-framework/sofa/pull/3891#issuecomment-1563454307:20,Testability,test,tests,20,[ci-build][with-all-tests]. yes all green :muscle: :green_circle:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3891#issuecomment-1563454307
https://github.com/sofa-framework/sofa/pull/3891#issuecomment-1563481310:10,Deployability,update,update,10,~~Need to update all scenes~~; done :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3891#issuecomment-1563481310
https://github.com/sofa-framework/sofa/pull/3894#issuecomment-1563972276:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3894#issuecomment-1563972276
https://github.com/sofa-framework/sofa/pull/3894#issuecomment-1590483514:304,Usability,simpl,simplified,304,"> I don't understand why we have so much complexity around `projectResponseT`. It seems we don't need the template since we call it only once. Same for the lambda. Not everywhere, sometimes the templated projectResponseT is called with VecDeriv (aka Vec\<Deriv>) and MatrixDeriv (aka CRS)); But it could simplified where this statement does not apply though.; EDIT: some (e.g FixedTranslationConstraint) are useless IMO",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3894#issuecomment-1590483514
https://github.com/sofa-framework/sofa/issues/3901#issuecomment-1564272355:29,Performance,perform,performance,29,Could be useful to check the performance between e.g HexahedronFEMForceFieldAndMass and HexahedronFEMForceField + (one) Mass,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3901#issuecomment-1564272355
https://github.com/sofa-framework/sofa/pull/3902#issuecomment-1569301569:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3902#issuecomment-1569301569
https://github.com/sofa-framework/sofa/pull/3903#issuecomment-1568253488:33,Usability,user experience,user experience,33,"I'm always in favor of improving user experience and renaming coder's name by something with a mechanical meaning fit in this :) . For the PR, i suggest to first rename the class and filename, then adding an alias ""RestShapeSpringForceField"". So users are warned when using RestShapeSFF to use SpringConstraint.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3903#issuecomment-1568253488
https://github.com/sofa-framework/sofa/pull/3903#issuecomment-1569685468:321,Availability,down,down,321,"A naming convention should be found on such components to distinguish:; - projective constraints (physicless, forceless); - weak force constraints (physicless with forces); - Lagrange-based constraints (taking into account the physics and applying forces). @bakpaul @alxbilger @damienmarchal . Some proposals can be done down here :point_down:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3903#issuecomment-1569685468
https://github.com/sofa-framework/sofa/pull/3903#issuecomment-1569866405:96,Usability,simpl,simple,96,"I Agree with Alex, the first two ones are ok, but the third one is not good. Why not keeping it simple and call it XXXLagrangianConstraint",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3903#issuecomment-1569866405
https://github.com/sofa-framework/sofa/pull/3904#issuecomment-1575689728:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3904#issuecomment-1575689728
https://github.com/sofa-framework/sofa/pull/3905#issuecomment-1569402561:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #1](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3905/1/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/47**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG a4361abc7f83624b838e8f7327d7aa51413fc8b3_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3905#issuecomment-1569402561
https://github.com/sofa-framework/sofa/pull/3905#issuecomment-1569402561:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #1](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3905/1/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/47**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG a4361abc7f83624b838e8f7327d7aa51413fc8b3_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3905#issuecomment-1569402561
https://github.com/sofa-framework/sofa/pull/3905#issuecomment-1569419704:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3905/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/47**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG a4361abc7f83624b838e8f7327d7aa51413fc8b3_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3905#issuecomment-1569419704
https://github.com/sofa-framework/sofa/pull/3905#issuecomment-1569419704:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3905/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/47**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG a4361abc7f83624b838e8f7327d7aa51413fc8b3_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3905#issuecomment-1569419704
https://github.com/sofa-framework/sofa/pull/3905#issuecomment-1569493398:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3905#issuecomment-1569493398
https://github.com/sofa-framework/sofa/pull/3905#issuecomment-1569493478:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3905/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/47**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG a4361abc7f83624b838e8f7327d7aa51413fc8b3_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3905#issuecomment-1569493478
https://github.com/sofa-framework/sofa/pull/3905#issuecomment-1569493478:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3905/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/47**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG a4361abc7f83624b838e8f7327d7aa51413fc8b3_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3905#issuecomment-1569493478
https://github.com/sofa-framework/sofa/pull/3905#issuecomment-1575922657:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3905/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/47**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG a4361abc7f83624b838e8f7327d7aa51413fc8b3_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3905#issuecomment-1575922657
https://github.com/sofa-framework/sofa/pull/3905#issuecomment-1575922657:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3905/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/47**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG a4361abc7f83624b838e8f7327d7aa51413fc8b3_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3905#issuecomment-1575922657
https://github.com/sofa-framework/sofa/pull/3905#issuecomment-1594679365:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3905#issuecomment-1594679365
https://github.com/sofa-framework/sofa/pull/3905#issuecomment-1594679527:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3905/5/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3905#issuecomment-1594679527
https://github.com/sofa-framework/sofa/pull/3905#issuecomment-1594679527:121,Integrability,depend,dependencies,121,**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3905/5/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3905#issuecomment-1594679527
https://github.com/sofa-framework/sofa/pull/3905#issuecomment-1594679527:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3905/5/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3905#issuecomment-1594679527
https://github.com/sofa-framework/sofa/pull/3911#issuecomment-1573316517:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3911#issuecomment-1573316517
https://github.com/sofa-framework/sofa/pull/3911#issuecomment-1597260095:80,Availability,error,error,80,"@fredroy you labelled this PR as to backport.; However, it leads to compilation error due to another PR which is only in master and not v23.06 :; ```; BarycentricMapper.inl:33:19: error: 'sofa::component::mapping::linear::_barycentricmapper_::BarycentricMapper<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3, double>, sofa::type::Vec<3, double>, double>, sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3, double>, sofa::type::Vec<3, double>, double> >::MatrixType' {aka 'class sofa::linearalgebra::CompressedRowSparseMatrix<sofa::type::Mat<3, 3, double> >'} has no member named 'wblock'; did you mean 'wbloc'?; ```. I will have to remove the commit from v23.06",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3911#issuecomment-1597260095
https://github.com/sofa-framework/sofa/pull/3911#issuecomment-1597260095:180,Availability,error,error,180,"@fredroy you labelled this PR as to backport.; However, it leads to compilation error due to another PR which is only in master and not v23.06 :; ```; BarycentricMapper.inl:33:19: error: 'sofa::component::mapping::linear::_barycentricmapper_::BarycentricMapper<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3, double>, sofa::type::Vec<3, double>, double>, sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3, double>, sofa::type::Vec<3, double>, double> >::MatrixType' {aka 'class sofa::linearalgebra::CompressedRowSparseMatrix<sofa::type::Mat<3, 3, double> >'} has no member named 'wblock'; did you mean 'wbloc'?; ```. I will have to remove the commit from v23.06",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3911#issuecomment-1597260095
https://github.com/sofa-framework/sofa/pull/3911#issuecomment-1597880749:81,Availability,error,error,81,"> @fredroy you labelled this PR as to backport. However, it leads to compilation error due to another PR which is only in master and not v23.06 :; > ; > ```; > BarycentricMapper.inl:33:19: error: 'sofa::component::mapping::linear::_barycentricmapper_::BarycentricMapper<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3, double>, sofa::type::Vec<3, double>, double>, sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3, double>, sofa::type::Vec<3, double>, double> >::MatrixType' {aka 'class sofa::linearalgebra::CompressedRowSparseMatrix<sofa::type::Mat<3, 3, double> >'} has no member named 'wblock'; did you mean 'wbloc'?; > ```; > ; > I will have to remove the commit from v23.06. No worries, this warning only ""makes sense"" with v23.12 and the integration of the CRSM anyway",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3911#issuecomment-1597880749
https://github.com/sofa-framework/sofa/pull/3911#issuecomment-1597880749:189,Availability,error,error,189,"> @fredroy you labelled this PR as to backport. However, it leads to compilation error due to another PR which is only in master and not v23.06 :; > ; > ```; > BarycentricMapper.inl:33:19: error: 'sofa::component::mapping::linear::_barycentricmapper_::BarycentricMapper<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3, double>, sofa::type::Vec<3, double>, double>, sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3, double>, sofa::type::Vec<3, double>, double> >::MatrixType' {aka 'class sofa::linearalgebra::CompressedRowSparseMatrix<sofa::type::Mat<3, 3, double> >'} has no member named 'wblock'; did you mean 'wbloc'?; > ```; > ; > I will have to remove the commit from v23.06. No worries, this warning only ""makes sense"" with v23.12 and the integration of the CRSM anyway",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3911#issuecomment-1597880749
https://github.com/sofa-framework/sofa/pull/3911#issuecomment-1597880749:751,Deployability,integrat,integration,751,"> @fredroy you labelled this PR as to backport. However, it leads to compilation error due to another PR which is only in master and not v23.06 :; > ; > ```; > BarycentricMapper.inl:33:19: error: 'sofa::component::mapping::linear::_barycentricmapper_::BarycentricMapper<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3, double>, sofa::type::Vec<3, double>, double>, sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3, double>, sofa::type::Vec<3, double>, double> >::MatrixType' {aka 'class sofa::linearalgebra::CompressedRowSparseMatrix<sofa::type::Mat<3, 3, double> >'} has no member named 'wblock'; did you mean 'wbloc'?; > ```; > ; > I will have to remove the commit from v23.06. No worries, this warning only ""makes sense"" with v23.12 and the integration of the CRSM anyway",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3911#issuecomment-1597880749
https://github.com/sofa-framework/sofa/pull/3911#issuecomment-1597880749:751,Integrability,integrat,integration,751,"> @fredroy you labelled this PR as to backport. However, it leads to compilation error due to another PR which is only in master and not v23.06 :; > ; > ```; > BarycentricMapper.inl:33:19: error: 'sofa::component::mapping::linear::_barycentricmapper_::BarycentricMapper<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3, double>, sofa::type::Vec<3, double>, double>, sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3, double>, sofa::type::Vec<3, double>, double> >::MatrixType' {aka 'class sofa::linearalgebra::CompressedRowSparseMatrix<sofa::type::Mat<3, 3, double> >'} has no member named 'wblock'; did you mean 'wbloc'?; > ```; > ; > I will have to remove the commit from v23.06. No worries, this warning only ""makes sense"" with v23.12 and the integration of the CRSM anyway",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3911#issuecomment-1597880749
https://github.com/sofa-framework/sofa/pull/3912#issuecomment-1576139257:249,Performance,perform,performances,249,"@hugtalbot thanks for the suggestion of this PR. Unfortunately, it does not compile on the CI. How bad is it to drop the support of DiagonalMass for rigids? Should we keep it anyway? Can MeshMatrixMass support rigids?. We should also have a look on performances. How MeshMatrixMass compare to DiagonalMass? My guess is that the difference will be significant for highly-detailed meshes.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3912#issuecomment-1576139257
https://github.com/sofa-framework/sofa/pull/3912#issuecomment-1576777259:292,Performance,perform,performances,292,"> How bad is it to drop the support of DiagonalMass for rigids? Should we keep it anyway? Can MeshMatrixMass support rigids?. @alxbilger I actually hardy can reply .. I need Christian for this, I will ask tomorrow further to the team meeting, would you join?. > We should also have a look on performances. Already done by @fredroy, very very very close! Here: https://github.com/sofa-framework/sofa/issues/2452#issuecomment-982735834; But I do not know about the mesh size used for the test.. maybe to re-investigate",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3912#issuecomment-1576777259
https://github.com/sofa-framework/sofa/pull/3912#issuecomment-1576777259:486,Testability,test,test,486,"> How bad is it to drop the support of DiagonalMass for rigids? Should we keep it anyway? Can MeshMatrixMass support rigids?. @alxbilger I actually hardy can reply .. I need Christian for this, I will ask tomorrow further to the team meeting, would you join?. > We should also have a look on performances. Already done by @fredroy, very very very close! Here: https://github.com/sofa-framework/sofa/issues/2452#issuecomment-982735834; But I do not know about the mesh size used for the test.. maybe to re-investigate",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3912#issuecomment-1576777259
https://github.com/sofa-framework/sofa/pull/3912#issuecomment-2286314000:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3912#issuecomment-2286314000
https://github.com/sofa-framework/sofa/pull/3912#issuecomment-2288730287:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3912#issuecomment-2288730287
https://github.com/sofa-framework/sofa/pull/3912#issuecomment-2289907099:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3912#issuecomment-2289907099
https://github.com/sofa-framework/sofa/pull/3912#issuecomment-2289917798:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3912#issuecomment-2289917798
https://github.com/sofa-framework/sofa/pull/3912#issuecomment-2349126472:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3912#issuecomment-2349126472
https://github.com/sofa-framework/sofa/pull/3912#issuecomment-2349327447:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3912#issuecomment-2349327447
https://github.com/sofa-framework/sofa/pull/3912#issuecomment-2349499716:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3912#issuecomment-2349499716
https://github.com/sofa-framework/sofa/pull/3914#issuecomment-1573757731:7,Usability,UX,UX,7,+1 for UX improvement of such importance.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3914#issuecomment-1573757731
https://github.com/sofa-framework/sofa/pull/3914#issuecomment-1573759432:118,Integrability,message,message,118,"I would also recommand using a more ""reddish"" color for deprecation.; And move all deprecation warning as deprecation message :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3914#issuecomment-1573759432
https://github.com/sofa-framework/sofa/pull/3914#issuecomment-1575027962:100,Usability,simpl,simple,100,"I'm actually a bit uncertain regarding your proposal @damienmarchal, I thought about it before this simple PR; My conclusion was the following: the more colors, the more confusing it can be for the users. On our hand, we want users to actually fix their scene for in both cases: deprecation and warnings. Having a single color for this purpose makes sense to me: simpler to read and simpler to understand for the user -> there is something to fix in the scene !. Maybe there is cases of warnings not requiring a scene fix which I am not thinking about..",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3914#issuecomment-1575027962
https://github.com/sofa-framework/sofa/pull/3914#issuecomment-1575027962:363,Usability,simpl,simpler,363,"I'm actually a bit uncertain regarding your proposal @damienmarchal, I thought about it before this simple PR; My conclusion was the following: the more colors, the more confusing it can be for the users. On our hand, we want users to actually fix their scene for in both cases: deprecation and warnings. Having a single color for this purpose makes sense to me: simpler to read and simpler to understand for the user -> there is something to fix in the scene !. Maybe there is cases of warnings not requiring a scene fix which I am not thinking about..",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3914#issuecomment-1575027962
https://github.com/sofa-framework/sofa/pull/3914#issuecomment-1575027962:383,Usability,simpl,simpler,383,"I'm actually a bit uncertain regarding your proposal @damienmarchal, I thought about it before this simple PR; My conclusion was the following: the more colors, the more confusing it can be for the users. On our hand, we want users to actually fix their scene for in both cases: deprecation and warnings. Having a single color for this purpose makes sense to me: simpler to read and simpler to understand for the user -> there is something to fix in the scene !. Maybe there is cases of warnings not requiring a scene fix which I am not thinking about..",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3914#issuecomment-1575027962
https://github.com/sofa-framework/sofa/pull/3914#issuecomment-1576298426:68,Energy Efficiency,green,green,68,"@hugtalbot ; Normally color scales for ""importance"" are always from green to red passing by yellow and orange. So blue is bad because it is just out of scale :); So yellow and orange are probably better ones as they convey ""importance"". But, now on the readability side, some colors are very visible on a dark theme but not at all on very poorly on white one. On that side cyan (the blue that was used) and yellow (you are suggesting in this PR) perform poorly. Some orange may work well in both cases. I found this which could help https://www.thoughtco.com/contrasting-foreground-background-colors-4061363 to find color scheme that work good enough.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3914#issuecomment-1576298426
https://github.com/sofa-framework/sofa/pull/3914#issuecomment-1576298426:446,Performance,perform,perform,446,"@hugtalbot ; Normally color scales for ""importance"" are always from green to red passing by yellow and orange. So blue is bad because it is just out of scale :); So yellow and orange are probably better ones as they convey ""importance"". But, now on the readability side, some colors are very visible on a dark theme but not at all on very poorly on white one. On that side cyan (the blue that was used) and yellow (you are suggesting in this PR) perform poorly. Some orange may work well in both cases. I found this which could help https://www.thoughtco.com/contrasting-foreground-background-colors-4061363 to find color scheme that work good enough.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3914#issuecomment-1576298426
https://github.com/sofa-framework/sofa/pull/3915#issuecomment-1576129847:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3915#issuecomment-1576129847
https://github.com/sofa-framework/sofa/pull/3915#issuecomment-1579638820:115,Deployability,configurat,configuration,115,"> > Did you try to compile with `SReal=float` ? üôä; > ; > Nope, I don't like to hurt myself. I did ü§ê with a minimal configuration and it *compiles* well",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3915#issuecomment-1579638820
https://github.com/sofa-framework/sofa/pull/3915#issuecomment-1579638820:115,Modifiability,config,configuration,115,"> > Did you try to compile with `SReal=float` ? üôä; > ; > Nope, I don't like to hurt myself. I did ü§ê with a minimal configuration and it *compiles* well",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3915#issuecomment-1579638820
https://github.com/sofa-framework/sofa/pull/3918#issuecomment-1577259093:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3918#issuecomment-1577259093
https://github.com/sofa-framework/sofa/pull/3921#issuecomment-1578579132:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3921#issuecomment-1578579132
https://github.com/sofa-framework/sofa/pull/3924#issuecomment-1580066145:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3924#issuecomment-1580066145
https://github.com/sofa-framework/sofa/pull/3924#issuecomment-1625471509:202,Security,Access,Accessors,202,PR passes now and includes:; - use function isComponentStateValid(); - Create separate addUpdateCallback and created dedicated separate functions; - remove call to trackData for doUpdateInternal; - use Accessors (remove beginEdit),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3924#issuecomment-1625471509
https://github.com/sofa-framework/sofa/pull/3925#issuecomment-1580913119:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3925#issuecomment-1580913119
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-1588589293:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-1588589293
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2034213815:311,Availability,robust,robust,311,"Similar feature is merged for the ConstantForceField in [#3924](https://github.com/sofa-framework/sofa/pull/3924). It adds separate callbacks for each data but a hacky flag allows to avoid data cross-dependency by de-activating all inputs non-set at the initialization. It could be done here as well but a more robust implementation (Data, callback) could be found. Add a unit test to make sure that no data cross-dependency is triggered. Manual test as well.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2034213815
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2034213815:200,Integrability,depend,dependency,200,"Similar feature is merged for the ConstantForceField in [#3924](https://github.com/sofa-framework/sofa/pull/3924). It adds separate callbacks for each data but a hacky flag allows to avoid data cross-dependency by de-activating all inputs non-set at the initialization. It could be done here as well but a more robust implementation (Data, callback) could be found. Add a unit test to make sure that no data cross-dependency is triggered. Manual test as well.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2034213815
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2034213815:414,Integrability,depend,dependency,414,"Similar feature is merged for the ConstantForceField in [#3924](https://github.com/sofa-framework/sofa/pull/3924). It adds separate callbacks for each data but a hacky flag allows to avoid data cross-dependency by de-activating all inputs non-set at the initialization. It could be done here as well but a more robust implementation (Data, callback) could be found. Add a unit test to make sure that no data cross-dependency is triggered. Manual test as well.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2034213815
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2034213815:183,Safety,avoid,avoid,183,"Similar feature is merged for the ConstantForceField in [#3924](https://github.com/sofa-framework/sofa/pull/3924). It adds separate callbacks for each data but a hacky flag allows to avoid data cross-dependency by de-activating all inputs non-set at the initialization. It could be done here as well but a more robust implementation (Data, callback) could be found. Add a unit test to make sure that no data cross-dependency is triggered. Manual test as well.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2034213815
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2034213815:377,Testability,test,test,377,"Similar feature is merged for the ConstantForceField in [#3924](https://github.com/sofa-framework/sofa/pull/3924). It adds separate callbacks for each data but a hacky flag allows to avoid data cross-dependency by de-activating all inputs non-set at the initialization. It could be done here as well but a more robust implementation (Data, callback) could be found. Add a unit test to make sure that no data cross-dependency is triggered. Manual test as well.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2034213815
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2034213815:446,Testability,test,test,446,"Similar feature is merged for the ConstantForceField in [#3924](https://github.com/sofa-framework/sofa/pull/3924). It adds separate callbacks for each data but a hacky flag allows to avoid data cross-dependency by de-activating all inputs non-set at the initialization. It could be done here as well but a more robust implementation (Data, callback) could be found. Add a unit test to make sure that no data cross-dependency is triggered. Manual test as well.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2034213815
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2037429819:31,Testability,test,tests,31,it seems from the CI that many tests and scene examples are using UniformMass without any input mass info .. ; :clown_face: :japanese_goblin:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2037429819
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2039257985:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2039257985
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2041929561:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2041929561
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2041929699:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/13/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/272**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 255fb151774d9480fe30bb16fb0d4bbefbd5b3c7_; - **Merge or close https://github.com/sofa-framework/Registration/pull/14**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 65188decc71b7d49e792415b6f3e6cdf058744f9_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2041929699
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2041929699:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/13/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/272**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 255fb151774d9480fe30bb16fb0d4bbefbd5b3c7_; - **Merge or close https://github.com/sofa-framework/Registration/pull/14**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 65188decc71b7d49e792415b6f3e6cdf058744f9_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2041929699
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2042006856:50,Availability,error,errors,50,@hugtalbot Could you explain why this PR triggers errors when the mass does define any parameter?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2042006856
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2042130212:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/14/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/272**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 255fb151774d9480fe30bb16fb0d4bbefbd5b3c7_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2042130212
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2042130212:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/14/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/272**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 255fb151774d9480fe30bb16fb0d4bbefbd5b3c7_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2042130212
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2046851262:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #15](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/15/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/272**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 255fb151774d9480fe30bb16fb0d4bbefbd5b3c7_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2046851262
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2046851262:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #15](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/15/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/272**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 255fb151774d9480fe30bb16fb0d4bbefbd5b3c7_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2046851262
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2046851876:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #16](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/16/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/272**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 6a73e1e775929a09bee2f4aafe49f01cdf3970be_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2046851876
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2046851876:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #16](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/16/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/272**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 6a73e1e775929a09bee2f4aafe49f01cdf3970be_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2046851876
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2054240655:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #17](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/17/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/272**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 6a73e1e775929a09bee2f4aafe49f01cdf3970be_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2054240655
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2054240655:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #17](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/17/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/272**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 6a73e1e775929a09bee2f4aafe49f01cdf3970be_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2054240655
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2062737454:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #18](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/18/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/272**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 6a73e1e775929a09bee2f4aafe49f01cdf3970be_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2062737454
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2062737454:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #18](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/18/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/272**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 6a73e1e775929a09bee2f4aafe49f01cdf3970be_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2062737454
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2068488120:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #19](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/19/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2068488120
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2068488120:123,Integrability,depend,dependencies,123,**[ci-depends-on]** detected during [build #19](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/19/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2068488120
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2068488120:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #19](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/19/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2068488120
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2284361785:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #20](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/20/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2284361785
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2284361785:123,Integrability,depend,dependencies,123,**[ci-depends-on]** detected during [build #20](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/20/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2284361785
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2284361785:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #20](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/20/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2284361785
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2284477135:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #21](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/21/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2284477135
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2284477135:123,Integrability,depend,dependencies,123,**[ci-depends-on]** detected during [build #21](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/21/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2284477135
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2284477135:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #21](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/21/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2284477135
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2284490173:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #22](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/22/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2284490173
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2284490173:123,Integrability,depend,dependencies,123,**[ci-depends-on]** detected during [build #22](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/22/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2284490173
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2284490173:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #22](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/22/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2284490173
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2284490323:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2284490323
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2284490588:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #23](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/23/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2284490588
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2284490588:123,Integrability,depend,dependencies,123,**[ci-depends-on]** detected during [build #23](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/23/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2284490588
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2284490588:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #23](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/23/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2284490588
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2287027581:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #24](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/24/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2287027581
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2287027581:123,Integrability,depend,dependencies,123,**[ci-depends-on]** detected during [build #24](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/24/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2287027581
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2287027581:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #24](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/24/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2287027581
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2288820642:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2288820642
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2288820861:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #25](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/25/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2288820861
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2288820861:123,Integrability,depend,dependencies,123,**[ci-depends-on]** detected during [build #25](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/25/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2288820861
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2288820861:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #25](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/25/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2288820861
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2288820973:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #26](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/26/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2288820973
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2288820973:123,Integrability,depend,dependencies,123,**[ci-depends-on]** detected during [build #26](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/26/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2288820973
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2288820973:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #26](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/26/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2288820973
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2301389979:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2301389979
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2301390371:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #27](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/27/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2301390371
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2301390371:123,Integrability,depend,dependencies,123,**[ci-depends-on]** detected during [build #27](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/27/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2301390371
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2301390371:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #27](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/27/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2301390371
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2348266261:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #28](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/28/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2348266261
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2348266261:123,Integrability,depend,dependencies,123,**[ci-depends-on]** detected during [build #28](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/28/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2348266261
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2348266261:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #28](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/28/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2348266261
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2349470825:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #29](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/29/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2349470825
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2349470825:123,Integrability,depend,dependencies,123,**[ci-depends-on]** detected during [build #29](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/29/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2349470825
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2349470825:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #29](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/29/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2349470825
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2349471798:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2349471798
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2349472417:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #30](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/30/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2349472417
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2349472417:123,Integrability,depend,dependencies,123,**[ci-depends-on]** detected during [build #30](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/30/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2349472417
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2349472417:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #30](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/30/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2349472417
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2349747394:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #31](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/31/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2349747394
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2349747394:123,Integrability,depend,dependencies,123,**[ci-depends-on]** detected during [build #31](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/31/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2349747394
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2349747394:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #31](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/31/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2349747394
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2349752089:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #32](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/32/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2349752089
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2349752089:123,Integrability,depend,dependencies,123,**[ci-depends-on]** detected during [build #32](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/32/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2349752089
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2349752089:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #32](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/32/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2349752089
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2370616428:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #33](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/33/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2370616428
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2370616428:123,Integrability,depend,dependencies,123,**[ci-depends-on]** detected during [build #33](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/33/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2370616428
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2370616428:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #33](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/33/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2370616428
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2413217697:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #34](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/34/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2413217697
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2413217697:123,Integrability,depend,dependencies,123,**[ci-depends-on]** detected during [build #34](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/34/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2413217697
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2413217697:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #34](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/34/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2413217697
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2413777592:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2413777592
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2413777947:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #35](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/35/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2413777947
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2413777947:123,Integrability,depend,dependencies,123,**[ci-depends-on]** detected during [build #35](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/35/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2413777947
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2413777947:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #35](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/35/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2413777947
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2414596799:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2414596799
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2415575691:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #38](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/38/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2415575691
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2415575691:123,Integrability,depend,dependencies,123,**[ci-depends-on]** detected during [build #38](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/38/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2415575691
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2415575691:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #38](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/38/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2415575691
https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2415641890:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2415641890
https://github.com/sofa-framework/sofa/pull/3928#issuecomment-1588601656:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3928#issuecomment-1588601656
https://github.com/sofa-framework/sofa/pull/3928#issuecomment-2034213330:311,Availability,robust,robust,311,"Similar feature is merged for the ConstantForceField in [#3924](https://github.com/sofa-framework/sofa/pull/3924). It adds separate callbacks for each data but a hacky flag allows to avoid data cross-dependency by de-activating all inputs non-set at the initialization. It could be done here as well but a more robust implementation (Data, callback) could be found. Add a unit test to make sure that no data cross-dependency is triggered. Manual test as well.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3928#issuecomment-2034213330
https://github.com/sofa-framework/sofa/pull/3928#issuecomment-2034213330:200,Integrability,depend,dependency,200,"Similar feature is merged for the ConstantForceField in [#3924](https://github.com/sofa-framework/sofa/pull/3924). It adds separate callbacks for each data but a hacky flag allows to avoid data cross-dependency by de-activating all inputs non-set at the initialization. It could be done here as well but a more robust implementation (Data, callback) could be found. Add a unit test to make sure that no data cross-dependency is triggered. Manual test as well.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3928#issuecomment-2034213330
https://github.com/sofa-framework/sofa/pull/3928#issuecomment-2034213330:414,Integrability,depend,dependency,414,"Similar feature is merged for the ConstantForceField in [#3924](https://github.com/sofa-framework/sofa/pull/3924). It adds separate callbacks for each data but a hacky flag allows to avoid data cross-dependency by de-activating all inputs non-set at the initialization. It could be done here as well but a more robust implementation (Data, callback) could be found. Add a unit test to make sure that no data cross-dependency is triggered. Manual test as well.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3928#issuecomment-2034213330
https://github.com/sofa-framework/sofa/pull/3928#issuecomment-2034213330:183,Safety,avoid,avoid,183,"Similar feature is merged for the ConstantForceField in [#3924](https://github.com/sofa-framework/sofa/pull/3924). It adds separate callbacks for each data but a hacky flag allows to avoid data cross-dependency by de-activating all inputs non-set at the initialization. It could be done here as well but a more robust implementation (Data, callback) could be found. Add a unit test to make sure that no data cross-dependency is triggered. Manual test as well.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3928#issuecomment-2034213330
https://github.com/sofa-framework/sofa/pull/3928#issuecomment-2034213330:377,Testability,test,test,377,"Similar feature is merged for the ConstantForceField in [#3924](https://github.com/sofa-framework/sofa/pull/3924). It adds separate callbacks for each data but a hacky flag allows to avoid data cross-dependency by de-activating all inputs non-set at the initialization. It could be done here as well but a more robust implementation (Data, callback) could be found. Add a unit test to make sure that no data cross-dependency is triggered. Manual test as well.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3928#issuecomment-2034213330
https://github.com/sofa-framework/sofa/pull/3928#issuecomment-2034213330:446,Testability,test,test,446,"Similar feature is merged for the ConstantForceField in [#3924](https://github.com/sofa-framework/sofa/pull/3924). It adds separate callbacks for each data but a hacky flag allows to avoid data cross-dependency by de-activating all inputs non-set at the initialization. It could be done here as well but a more robust implementation (Data, callback) could be found. Add a unit test to make sure that no data cross-dependency is triggered. Manual test as well.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3928#issuecomment-2034213330
https://github.com/sofa-framework/sofa/pull/3928#issuecomment-2285632593:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3928#issuecomment-2285632593
https://github.com/sofa-framework/sofa/pull/3928#issuecomment-2289834622:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3928#issuecomment-2289834622
https://github.com/sofa-framework/sofa/pull/3928#issuecomment-2302004185:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3928#issuecomment-2302004185
https://github.com/sofa-framework/sofa/pull/3928#issuecomment-2360652988:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3928#issuecomment-2360652988
https://github.com/sofa-framework/sofa/pull/3928#issuecomment-2370312668:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3928#issuecomment-2370312668
https://github.com/sofa-framework/sofa/pull/3928#issuecomment-2370314650:277,Deployability,release,release,277,I do not get why the regression on the scene [EulerExplicitSolver.scn](https://github.com/sofa-framework/sofa/pull/3928/files#diff-9816efcdf2c6953cfaef9ddaf0ed1ad8614a6527e33b2989ffa0ed956a3ffaa2) .. ever worked. It seems to diverge on both my current SOFA master and the SOFA release v24.06,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3928#issuecomment-2370314650
https://github.com/sofa-framework/sofa/pull/3928#issuecomment-2401339860:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3928#issuecomment-2401339860
https://github.com/sofa-framework/sofa/pull/3928#issuecomment-2413778230:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3928#issuecomment-2413778230
https://github.com/sofa-framework/sofa/pull/3929#issuecomment-1585095112:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3929#issuecomment-1585095112
https://github.com/sofa-framework/sofa/pull/3929#issuecomment-1598005930:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3929#issuecomment-1598005930
https://github.com/sofa-framework/sofa/pull/3929#issuecomment-1600062022:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3929#issuecomment-1600062022
https://github.com/sofa-framework/sofa/pull/3929#issuecomment-1610416009:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3929#issuecomment-1610416009
https://github.com/sofa-framework/sofa/pull/3931#issuecomment-1592550546:274,Integrability,interface,interface,274,Do everyone agrees on having the conditions I moved up into the NVI VisualModel::drawVisual() and with the one I added into the VisualVisitor ? . Eg: ; ```cpp; void VisualModel::drawVisual(const VisualParams* vparams); {; // don't draw if specified not to do so in the user interface; if (!vparams->displayFlags().getShowVisualModels()); return;. // don't draw if the component is not in valid state (we can change the condition so Loading/Unknow states are drawn differently) ; if( d_componentState.getValue() == sofa::core::objectmodel::ComponentState::Invalid ); return;. // don't draw if this component is specifically configured to be disabled (It is questionnable to have a data for that). ; // having a d_enable on Base would be better. ; if (!d_draw.getValue()); return;. // RAI to be sure the states changed during the rendering don't leaks ; const auto stateLifeCycle = vparams->drawTool()->makeStateLifeCycle();. doDrawVisual(vparams);; }; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3931#issuecomment-1592550546
https://github.com/sofa-framework/sofa/pull/3931#issuecomment-1592550546:623,Modifiability,config,configured,623,Do everyone agrees on having the conditions I moved up into the NVI VisualModel::drawVisual() and with the one I added into the VisualVisitor ? . Eg: ; ```cpp; void VisualModel::drawVisual(const VisualParams* vparams); {; // don't draw if specified not to do so in the user interface; if (!vparams->displayFlags().getShowVisualModels()); return;. // don't draw if the component is not in valid state (we can change the condition so Loading/Unknow states are drawn differently) ; if( d_componentState.getValue() == sofa::core::objectmodel::ComponentState::Invalid ); return;. // don't draw if this component is specifically configured to be disabled (It is questionnable to have a data for that). ; // having a d_enable on Base would be better. ; if (!d_draw.getValue()); return;. // RAI to be sure the states changed during the rendering don't leaks ; const auto stateLifeCycle = vparams->drawTool()->makeStateLifeCycle();. doDrawVisual(vparams);; }; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3931#issuecomment-1592550546
https://github.com/sofa-framework/sofa/pull/3931#issuecomment-1592550546:432,Performance,Load,Loading,432,Do everyone agrees on having the conditions I moved up into the NVI VisualModel::drawVisual() and with the one I added into the VisualVisitor ? . Eg: ; ```cpp; void VisualModel::drawVisual(const VisualParams* vparams); {; // don't draw if specified not to do so in the user interface; if (!vparams->displayFlags().getShowVisualModels()); return;. // don't draw if the component is not in valid state (we can change the condition so Loading/Unknow states are drawn differently) ; if( d_componentState.getValue() == sofa::core::objectmodel::ComponentState::Invalid ); return;. // don't draw if this component is specifically configured to be disabled (It is questionnable to have a data for that). ; // having a d_enable on Base would be better. ; if (!d_draw.getValue()); return;. // RAI to be sure the states changed during the rendering don't leaks ; const auto stateLifeCycle = vparams->drawTool()->makeStateLifeCycle();. doDrawVisual(vparams);; }; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3931#issuecomment-1592550546
https://github.com/sofa-framework/sofa/pull/3931#issuecomment-1610928574:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3931#issuecomment-1610928574
https://github.com/sofa-framework/sofa/pull/3931#issuecomment-1623270919:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3931#issuecomment-1623270919
https://github.com/sofa-framework/sofa/pull/3932#issuecomment-1584251230:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3932#issuecomment-1584251230
https://github.com/sofa-framework/sofa/pull/3933#issuecomment-1584251374:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3933#issuecomment-1584251374
https://github.com/sofa-framework/sofa/pull/3934#issuecomment-1594841162:16,Testability,test,tests,16,[ci-build][with-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3934#issuecomment-1594841162
https://github.com/sofa-framework/sofa/pull/3934#issuecomment-1596320952:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3934#issuecomment-1596320952
https://github.com/sofa-framework/sofa/pull/3934#issuecomment-1600428420:84,Availability,Error,Error,84,2 tests are considered as failing since the message of RemovedData is thrown as an `Error`,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3934#issuecomment-1600428420
https://github.com/sofa-framework/sofa/pull/3934#issuecomment-1600428420:44,Integrability,message,message,44,2 tests are considered as failing since the message of RemovedData is thrown as an `Error`,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3934#issuecomment-1600428420
https://github.com/sofa-framework/sofa/pull/3934#issuecomment-1600428420:2,Testability,test,tests,2,2 tests are considered as failing since the message of RemovedData is thrown as an `Error`,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3934#issuecomment-1600428420
https://github.com/sofa-framework/sofa/pull/3934#issuecomment-1608577471:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3934#issuecomment-1608577471
https://github.com/sofa-framework/sofa/pull/3935#issuecomment-1585094652:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3935#issuecomment-1585094652
https://github.com/sofa-framework/sofa/pull/3937#issuecomment-1585094318:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3937#issuecomment-1585094318
https://github.com/sofa-framework/sofa/pull/3938#issuecomment-1590796190:288,Usability,clear,clear,288,"> So, if I understand correctly, you implemented 2 methods to deduce the template: 1) a static method in the component, 2) an additional line when registering in the object factory. Yes, despite it is possible to have only the system with the static method I find the explict method more clear despite it does not allow to cover the same set of feature. We may remove it if needed.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3938#issuecomment-1590796190
https://github.com/sofa-framework/sofa/pull/3938#issuecomment-1592525285:22,Testability,test,tests,22,[ci-build][with-scene-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3938#issuecomment-1592525285
https://github.com/sofa-framework/sofa/pull/3938#issuecomment-1594710107:32,Modifiability,refactor,refactoring,32,"Not exactly, the first is about refactoring canCreate and create while the other is about providing a system for template deduction. ; It seems connected because canCreate is widely used to implement template deduction (but it is not its sole purpose). If template deduction is merged this will remove a lot of canCreate... but some may still. So some ideas in #3309 may still have values independently of #3938.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3938#issuecomment-1594710107
https://github.com/sofa-framework/sofa/pull/3938#issuecomment-1610972873:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3938#issuecomment-1610972873
https://github.com/sofa-framework/sofa/pull/3938#issuecomment-1651456950:30,Energy Efficiency,schedul,schedule,30,"@damienmarchal yes, we should schedule a discussion between you, alex, us (Hugo and/or me) and anyone interested, but outside the sofa dev meeting to come to a solution.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3938#issuecomment-1651456950
https://github.com/sofa-framework/sofa/pull/3938#issuecomment-1708524747:63,Modifiability,refactor,refactoring,63,"I may also add two related old pr to the list, they are on the refactoring of create and canCreate methods :; - #3309; - #3311",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3938#issuecomment-1708524747
https://github.com/sofa-framework/sofa/pull/3942#issuecomment-1596790145:46,Testability,test,test,46,"As it involve removing/deleting things during test phase, would be good to wait for mac to be back and run all tests on the ci.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3942#issuecomment-1596790145
https://github.com/sofa-framework/sofa/pull/3942#issuecomment-1596790145:111,Testability,test,tests,111,"As it involve removing/deleting things during test phase, would be good to wait for mac to be back and run all tests on the ci.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3942#issuecomment-1596790145
https://github.com/sofa-framework/sofa/pull/3942#issuecomment-1606853491:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3942#issuecomment-1606853491
https://github.com/sofa-framework/sofa/issues/3943#issuecomment-1587255019:87,Deployability,update,updated,87,"I have created a pull request with an initial working solution to this problem. I have updated the references to the unknown library _std::filesystem_ and rewrite them as namespace _fs_. Additionally, I have include the old headers for this library from its experimental version at **gcc-8**, so there is a possibility to use the correct ones depending on the compiler version it is used. I have created a pull request [#3994](https://github.com/sofa-framework/sofa/pull/3944).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3943#issuecomment-1587255019
https://github.com/sofa-framework/sofa/issues/3943#issuecomment-1587255019:343,Integrability,depend,depending,343,"I have created a pull request with an initial working solution to this problem. I have updated the references to the unknown library _std::filesystem_ and rewrite them as namespace _fs_. Additionally, I have include the old headers for this library from its experimental version at **gcc-8**, so there is a possibility to use the correct ones depending on the compiler version it is used. I have created a pull request [#3994](https://github.com/sofa-framework/sofa/pull/3944).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3943#issuecomment-1587255019
https://github.com/sofa-framework/sofa/issues/3943#issuecomment-1587255019:155,Modifiability,rewrite,rewrite,155,"I have created a pull request with an initial working solution to this problem. I have updated the references to the unknown library _std::filesystem_ and rewrite them as namespace _fs_. Additionally, I have include the old headers for this library from its experimental version at **gcc-8**, so there is a possibility to use the correct ones depending on the compiler version it is used. I have created a pull request [#3994](https://github.com/sofa-framework/sofa/pull/3944).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3943#issuecomment-1587255019
https://github.com/sofa-framework/sofa/pull/3944#issuecomment-1594642256:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3944#issuecomment-1594642256
https://github.com/sofa-framework/sofa/pull/3944#issuecomment-1598530028:62,Availability,error,error,62,"I have corrected the test scripts as they were retrieving and error with the class definition from the previous definition. Now it compiles succesfully and passes all the tests. Sorry for using multiple accounts for commiting, but I had to change PC in the last days and I did not realize that the one I was using already had a linked account.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3944#issuecomment-1598530028
https://github.com/sofa-framework/sofa/pull/3944#issuecomment-1598530028:21,Testability,test,test,21,"I have corrected the test scripts as they were retrieving and error with the class definition from the previous definition. Now it compiles succesfully and passes all the tests. Sorry for using multiple accounts for commiting, but I had to change PC in the last days and I did not realize that the one I was using already had a linked account.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3944#issuecomment-1598530028
https://github.com/sofa-framework/sofa/pull/3944#issuecomment-1598530028:171,Testability,test,tests,171,"I have corrected the test scripts as they were retrieving and error with the class definition from the previous definition. Now it compiles succesfully and passes all the tests. Sorry for using multiple accounts for commiting, but I had to change PC in the last days and I did not realize that the one I was using already had a linked account.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3944#issuecomment-1598530028
https://github.com/sofa-framework/sofa/pull/3945#issuecomment-1594533394:22,Testability,test,tests,22,[ci-build][with-scene-tests][with-regression-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3945#issuecomment-1594533394
https://github.com/sofa-framework/sofa/pull/3945#issuecomment-1594533394:45,Testability,test,tests,45,[ci-build][with-scene-tests][with-regression-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3945#issuecomment-1594533394
https://github.com/sofa-framework/sofa/pull/3945#issuecomment-1611060978:16,Testability,test,tests,16,[ci-build][with-tests][with-scene-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3945#issuecomment-1611060978
https://github.com/sofa-framework/sofa/pull/3945#issuecomment-1611060978:34,Testability,test,tests,34,[ci-build][with-tests][with-scene-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3945#issuecomment-1611060978
https://github.com/sofa-framework/sofa/pull/3945#issuecomment-1619727150:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3945#issuecomment-1619727150
https://github.com/sofa-framework/sofa/pull/3945#issuecomment-1623446633:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3945#issuecomment-1623446633
https://github.com/sofa-framework/sofa/pull/3945#issuecomment-1647983282:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3945#issuecomment-1647983282
https://github.com/sofa-framework/sofa/pull/3946#issuecomment-1592136205:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3946#issuecomment-1592136205
https://github.com/sofa-framework/sofa/pull/3948#issuecomment-1594650572:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3948#issuecomment-1594650572
https://github.com/sofa-framework/sofa/pull/3948#issuecomment-1617404053:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3948#issuecomment-1617404053
https://github.com/sofa-framework/sofa/pull/3954#issuecomment-1592162788:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3954#issuecomment-1592162788
https://github.com/sofa-framework/sofa/pull/3954#issuecomment-1592523781:22,Testability,test,tested,22,For the record I just tested if I totally remove the conditionnal management... and nothing bad happens. @alxbilger Do you have any idea if bad things could happen (in term of building numerical system/solving/animation loop).,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3954#issuecomment-1592523781
https://github.com/sofa-framework/sofa/pull/3955#issuecomment-1592565882:439,Deployability,update,updated,439,"Hi @fredroy,. I fully support removing the dependency to SceneCreator. Thanks for the effort. . Small comment: ; I think that using simpleapi is a better option for scene creation than using the raw c++one:; - it reduce the need for c++ includes (so the dependency graph (aka ""the giant spaggheti bowl"") pressure). ; - it reduce the compilation time,; - in theory simple and consistant API aligned with the python one (but It haven't been updated so it match with SofaPython3... but doing such a thing is worth the effort).; ; ; EDIT: I just try how would look a modernize simpleapi (https://godbolt.org/z/9EW9dbnvn)... and think I'm going to like doing things like that (thanks to c++ std::any):; ```cpp; mo = createObject(""MechanicalObject"",; {{""name"", std::string{""myMo""}}, ; {""position"", {{1,2,3},{4,5,6}}},; {""enable"", true}});; node.addObject(mo);; ```; The syntax is nice and there is no more this ugly data to string to data creation using ""BaseObjectDescription"" and its parse method.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3955#issuecomment-1592565882
https://github.com/sofa-framework/sofa/pull/3955#issuecomment-1592565882:213,Energy Efficiency,reduce,reduce,213,"Hi @fredroy,. I fully support removing the dependency to SceneCreator. Thanks for the effort. . Small comment: ; I think that using simpleapi is a better option for scene creation than using the raw c++one:; - it reduce the need for c++ includes (so the dependency graph (aka ""the giant spaggheti bowl"") pressure). ; - it reduce the compilation time,; - in theory simple and consistant API aligned with the python one (but It haven't been updated so it match with SofaPython3... but doing such a thing is worth the effort).; ; ; EDIT: I just try how would look a modernize simpleapi (https://godbolt.org/z/9EW9dbnvn)... and think I'm going to like doing things like that (thanks to c++ std::any):; ```cpp; mo = createObject(""MechanicalObject"",; {{""name"", std::string{""myMo""}}, ; {""position"", {{1,2,3},{4,5,6}}},; {""enable"", true}});; node.addObject(mo);; ```; The syntax is nice and there is no more this ugly data to string to data creation using ""BaseObjectDescription"" and its parse method.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3955#issuecomment-1592565882
https://github.com/sofa-framework/sofa/pull/3955#issuecomment-1592565882:322,Energy Efficiency,reduce,reduce,322,"Hi @fredroy,. I fully support removing the dependency to SceneCreator. Thanks for the effort. . Small comment: ; I think that using simpleapi is a better option for scene creation than using the raw c++one:; - it reduce the need for c++ includes (so the dependency graph (aka ""the giant spaggheti bowl"") pressure). ; - it reduce the compilation time,; - in theory simple and consistant API aligned with the python one (but It haven't been updated so it match with SofaPython3... but doing such a thing is worth the effort).; ; ; EDIT: I just try how would look a modernize simpleapi (https://godbolt.org/z/9EW9dbnvn)... and think I'm going to like doing things like that (thanks to c++ std::any):; ```cpp; mo = createObject(""MechanicalObject"",; {{""name"", std::string{""myMo""}}, ; {""position"", {{1,2,3},{4,5,6}}},; {""enable"", true}});; node.addObject(mo);; ```; The syntax is nice and there is no more this ugly data to string to data creation using ""BaseObjectDescription"" and its parse method.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3955#issuecomment-1592565882
https://github.com/sofa-framework/sofa/pull/3955#issuecomment-1592565882:43,Integrability,depend,dependency,43,"Hi @fredroy,. I fully support removing the dependency to SceneCreator. Thanks for the effort. . Small comment: ; I think that using simpleapi is a better option for scene creation than using the raw c++one:; - it reduce the need for c++ includes (so the dependency graph (aka ""the giant spaggheti bowl"") pressure). ; - it reduce the compilation time,; - in theory simple and consistant API aligned with the python one (but It haven't been updated so it match with SofaPython3... but doing such a thing is worth the effort).; ; ; EDIT: I just try how would look a modernize simpleapi (https://godbolt.org/z/9EW9dbnvn)... and think I'm going to like doing things like that (thanks to c++ std::any):; ```cpp; mo = createObject(""MechanicalObject"",; {{""name"", std::string{""myMo""}}, ; {""position"", {{1,2,3},{4,5,6}}},; {""enable"", true}});; node.addObject(mo);; ```; The syntax is nice and there is no more this ugly data to string to data creation using ""BaseObjectDescription"" and its parse method.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3955#issuecomment-1592565882
https://github.com/sofa-framework/sofa/pull/3955#issuecomment-1592565882:254,Integrability,depend,dependency,254,"Hi @fredroy,. I fully support removing the dependency to SceneCreator. Thanks for the effort. . Small comment: ; I think that using simpleapi is a better option for scene creation than using the raw c++one:; - it reduce the need for c++ includes (so the dependency graph (aka ""the giant spaggheti bowl"") pressure). ; - it reduce the compilation time,; - in theory simple and consistant API aligned with the python one (but It haven't been updated so it match with SofaPython3... but doing such a thing is worth the effort).; ; ; EDIT: I just try how would look a modernize simpleapi (https://godbolt.org/z/9EW9dbnvn)... and think I'm going to like doing things like that (thanks to c++ std::any):; ```cpp; mo = createObject(""MechanicalObject"",; {{""name"", std::string{""myMo""}}, ; {""position"", {{1,2,3},{4,5,6}}},; {""enable"", true}});; node.addObject(mo);; ```; The syntax is nice and there is no more this ugly data to string to data creation using ""BaseObjectDescription"" and its parse method.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3955#issuecomment-1592565882
https://github.com/sofa-framework/sofa/pull/3955#issuecomment-1592565882:132,Usability,simpl,simpleapi,132,"Hi @fredroy,. I fully support removing the dependency to SceneCreator. Thanks for the effort. . Small comment: ; I think that using simpleapi is a better option for scene creation than using the raw c++one:; - it reduce the need for c++ includes (so the dependency graph (aka ""the giant spaggheti bowl"") pressure). ; - it reduce the compilation time,; - in theory simple and consistant API aligned with the python one (but It haven't been updated so it match with SofaPython3... but doing such a thing is worth the effort).; ; ; EDIT: I just try how would look a modernize simpleapi (https://godbolt.org/z/9EW9dbnvn)... and think I'm going to like doing things like that (thanks to c++ std::any):; ```cpp; mo = createObject(""MechanicalObject"",; {{""name"", std::string{""myMo""}}, ; {""position"", {{1,2,3},{4,5,6}}},; {""enable"", true}});; node.addObject(mo);; ```; The syntax is nice and there is no more this ugly data to string to data creation using ""BaseObjectDescription"" and its parse method.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3955#issuecomment-1592565882
https://github.com/sofa-framework/sofa/pull/3955#issuecomment-1592565882:364,Usability,simpl,simple,364,"Hi @fredroy,. I fully support removing the dependency to SceneCreator. Thanks for the effort. . Small comment: ; I think that using simpleapi is a better option for scene creation than using the raw c++one:; - it reduce the need for c++ includes (so the dependency graph (aka ""the giant spaggheti bowl"") pressure). ; - it reduce the compilation time,; - in theory simple and consistant API aligned with the python one (but It haven't been updated so it match with SofaPython3... but doing such a thing is worth the effort).; ; ; EDIT: I just try how would look a modernize simpleapi (https://godbolt.org/z/9EW9dbnvn)... and think I'm going to like doing things like that (thanks to c++ std::any):; ```cpp; mo = createObject(""MechanicalObject"",; {{""name"", std::string{""myMo""}}, ; {""position"", {{1,2,3},{4,5,6}}},; {""enable"", true}});; node.addObject(mo);; ```; The syntax is nice and there is no more this ugly data to string to data creation using ""BaseObjectDescription"" and its parse method.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3955#issuecomment-1592565882
https://github.com/sofa-framework/sofa/pull/3955#issuecomment-1592565882:573,Usability,simpl,simpleapi,573,"Hi @fredroy,. I fully support removing the dependency to SceneCreator. Thanks for the effort. . Small comment: ; I think that using simpleapi is a better option for scene creation than using the raw c++one:; - it reduce the need for c++ includes (so the dependency graph (aka ""the giant spaggheti bowl"") pressure). ; - it reduce the compilation time,; - in theory simple and consistant API aligned with the python one (but It haven't been updated so it match with SofaPython3... but doing such a thing is worth the effort).; ; ; EDIT: I just try how would look a modernize simpleapi (https://godbolt.org/z/9EW9dbnvn)... and think I'm going to like doing things like that (thanks to c++ std::any):; ```cpp; mo = createObject(""MechanicalObject"",; {{""name"", std::string{""myMo""}}, ; {""position"", {{1,2,3},{4,5,6}}},; {""enable"", true}});; node.addObject(mo);; ```; The syntax is nice and there is no more this ugly data to string to data creation using ""BaseObjectDescription"" and its parse method.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3955#issuecomment-1592565882
https://github.com/sofa-framework/sofa/pull/3956#issuecomment-1592870118:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3956#issuecomment-1592870118
https://github.com/sofa-framework/sofa/pull/3956#issuecomment-1638353746:1612,Modifiability,variab,variables,1612," https://godbolt.org/z/xr56hnex6. ```cpp; struct BehaviorModel {};; struct BaseMapping {};; struct OdeSolver {};. template<class... T>; struct Identifier; {};. template <>; struct Identifier<BehaviorModel>; {; using type = std::set<BehaviorModel*>;; type behaviorModel;; void addBehaviorModel(BehaviorModel* o) { behaviorModel.insert(o); }; void removeBehaviorModel(BehaviorModel* o) { behaviorModel.erase(o);}; };. template <>; struct Identifier<BaseMapping>; {; using type = std::vector<BaseMapping*>;; type mapping;; void addMapping(BaseMapping* obj) { mapping.push_back(obj); }; void removeMapping(BaseMapping* obj) { }; };. template <>; struct Identifier<OdeSolver>; {; using type = std::vector<OdeSolver*>;; type solver;; void addOdeSolver(OdeSolver* obj) { solver.push_back(obj); }; void removeOdeSolver(OdeSolver* obj) { }; };. template<class T, class... Rest>; struct Identifier<T, Rest...> : public Identifier<T>, public Identifier<Rest...>; {};. template<class T, class... Rest>; auto get(const Identifier<T, Rest...>& i); {; return *(typename Identifier<T>::type*)&static_cast<const Identifier<T>&>(i);; }. using NodeComponentsContainer =; Identifier<BehaviorModel, BaseMapping, OdeSolver>;. int main(); {; NodeComponentsContainer n{};; n.solver.push_back(nullptr);; n.mapping.push_back(nullptr);; n.solver.push_back(nullptr);. n.addOdeSolver(nullptr);. get<BaseMapping>(n).push_back(nullptr);. return 0;; }; ```. This is very similar to a `std::tuple` except that the identifiers of the variables is maintained, as well as the added function (such as `addBehaviorModel` and `removeBehaviorModel`). There is a ""universal"" getter (you can equivalently do `n.mapping.push_back(nullptr);` or `get<BaseMapping>(n).push_back(nullptr);` or `n.addMapping(nullptr);`). If we decide to go to this direction, there is difficulty to implement it due to the inhertiance between `Node` and `BaseNode`. It's quite complex for not a big feature, so maybe it does not worth spending more time on this PR.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3956#issuecomment-1638353746
https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1594585982:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1594585982
https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1596325731:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1596325731
https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1597234048:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1597234048
https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1599092992:8,Testability,benchmark,benchmark,8,Another benchmark: `examples/Demos/chainAll.scn`. With parallelism; ```; 1000 iterations done in 41.8915 s ( 23.8712 FPS).; ```. Without parallelism:; ```; 1000 iterations done in 91.9302 s ( 10.8778 FPS).; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1599092992
https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1609598300:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1609598300
https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1613074434:20,Testability,test,tests,20,[ci-build][with-all-tests] (check for MacOS),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1613074434
https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1632012852:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1632012852
https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1641591222:28,Availability,error,error,28,CI sees apparently twice an error in advancedtimer .. strange; ```; [ERROR] [AdvancedTimer::end] timer[Animate] does not correspond to last call to begin(cg_timer); ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1641591222
https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1641591222:69,Availability,ERROR,ERROR,69,CI sees apparently twice an error in advancedtimer .. strange; ```; [ERROR] [AdvancedTimer::end] timer[Animate] does not correspond to last call to begin(cg_timer); ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1641591222
https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1645543718:12,Availability,error,error,12,There is an error in the test because timer ids changed in this PR,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1645543718
https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1645543718:25,Testability,test,test,25,There is an error in the test because timer ids changed in this PR,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1645543718
https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1647500211:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3959/13/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/362**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 51a2a5bfb15a74c930ab28b24e64eadc0a1752c8_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1647500211
https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1647500211:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3959/13/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/362**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 51a2a5bfb15a74c930ab28b24e64eadc0a1752c8_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1647500211
https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1653271576:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3959/14/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/362**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 2d5f82603ca0ff8a45abe813e9908b1b2944cd43_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1653271576
https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1653271576:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3959/14/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/362**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 2d5f82603ca0ff8a45abe813e9908b1b2944cd43_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1653271576
https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1653274458:152,Deployability,release,release,152,"The [crash that happened on Windows](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3959/CI_CONFIG=windows_vs2019,CI_PLUGINS=options,CI_TYPE=release/13/testReport/SceneTests/applications_plugins_SofaSphFluid_examples/SpatialGridPointModel_scn/) also happens on the master branch on my computer. But I don't understand how it is not detected by the CI",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1653274458
https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1653274458:343,Safety,detect,detected,343,"The [crash that happened on Windows](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3959/CI_CONFIG=windows_vs2019,CI_PLUGINS=options,CI_TYPE=release/13/testReport/SceneTests/applications_plugins_SofaSphFluid_examples/SpatialGridPointModel_scn/) also happens on the master branch on my computer. But I don't understand how it is not detected by the CI",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1653274458
https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1653274458:163,Testability,test,testReport,163,"The [crash that happened on Windows](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3959/CI_CONFIG=windows_vs2019,CI_PLUGINS=options,CI_TYPE=release/13/testReport/SceneTests/applications_plugins_SofaSphFluid_examples/SpatialGridPointModel_scn/) also happens on the master branch on my computer. But I don't understand how it is not detected by the CI",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1653274458
https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1657297421:154,Deployability,release,release,154,"> The [crash that happened on Windows](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3959/CI_CONFIG=windows_vs2019,CI_PLUGINS=options,CI_TYPE=release/13/testReport/SceneTests/applications_plugins_SofaSphFluid_examples/SpatialGridPointModel_scn/) also happens on the master branch on my computer. But I don't understand how it is not detected by the CI. Maybe it is random, it does not crash on mine (but I only tried like 2, 3 times) on msvc; Nevertheless, I dont think this scene is working as intended anyway.... (the particules do not interact with the static mesh)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1657297421
https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1657297421:345,Safety,detect,detected,345,"> The [crash that happened on Windows](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3959/CI_CONFIG=windows_vs2019,CI_PLUGINS=options,CI_TYPE=release/13/testReport/SceneTests/applications_plugins_SofaSphFluid_examples/SpatialGridPointModel_scn/) also happens on the master branch on my computer. But I don't understand how it is not detected by the CI. Maybe it is random, it does not crash on mine (but I only tried like 2, 3 times) on msvc; Nevertheless, I dont think this scene is working as intended anyway.... (the particules do not interact with the static mesh)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1657297421
https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1657297421:165,Testability,test,testReport,165,"> The [crash that happened on Windows](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3959/CI_CONFIG=windows_vs2019,CI_PLUGINS=options,CI_TYPE=release/13/testReport/SceneTests/applications_plugins_SofaSphFluid_examples/SpatialGridPointModel_scn/) also happens on the master branch on my computer. But I don't understand how it is not detected by the CI. Maybe it is random, it does not crash on mine (but I only tried like 2, 3 times) on msvc; Nevertheless, I dont think this scene is working as intended anyway.... (the particules do not interact with the static mesh)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1657297421
https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1693065084:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1693065084
https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1693065320:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #15](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3959/15/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/362**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG c0dfe37b6e7605a5a09c589a540e6296dd660d25_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1693065320
https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1693065320:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #15](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3959/15/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/362**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG c0dfe37b6e7605a5a09c589a540e6296dd660d25_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1693065320
https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1693393879:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1693393879
https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1693394079:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #16](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3959/16/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1693394079
https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1693394079:123,Integrability,depend,dependencies,123,**[ci-depends-on]** detected during [build #16](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3959/16/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1693394079
https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1693394079:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #16](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3959/16/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1693394079
https://github.com/sofa-framework/sofa/pull/3961#issuecomment-1597234580:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3961#issuecomment-1597234580
https://github.com/sofa-framework/sofa/pull/3962#issuecomment-1598406683:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3962#issuecomment-1598406683
https://github.com/sofa-framework/sofa/pull/3962#issuecomment-1600807973:101,Testability,test,tests,101,"@epernod Can you have a look on my changes in TopologyChecker. I had to add this to satisfy the unit tests in TopologyChecker_test. Otherwise, it crashes.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3962#issuecomment-1600807973
https://github.com/sofa-framework/sofa/pull/3969#issuecomment-1604304066:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3969#issuecomment-1604304066
https://github.com/sofa-framework/sofa/pull/3969#issuecomment-1609597658:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3969#issuecomment-1609597658
https://github.com/sofa-framework/sofa/pull/3970#issuecomment-1604303804:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3970#issuecomment-1604303804
https://github.com/sofa-framework/sofa/pull/3972#issuecomment-1606840092:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3972#issuecomment-1606840092
https://github.com/sofa-framework/sofa/pull/3973#issuecomment-1606516790:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3973#issuecomment-1606516790
https://github.com/sofa-framework/sofa/pull/3973#issuecomment-1608943790:55,Integrability,depend,dependent,55,"@damienmarchal Actually, the force formulation is time-dependent. It does not vary with positions. Therefore, its derivative with respect to positions is null.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3973#issuecomment-1608943790
https://github.com/sofa-framework/sofa/pull/3973#issuecomment-1610382334:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3973#issuecomment-1610382334
https://github.com/sofa-framework/sofa/pull/3974#issuecomment-1607304531:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3974#issuecomment-1607304531
https://github.com/sofa-framework/sofa/pull/3974#issuecomment-1620840288:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3974#issuecomment-1620840288
https://github.com/sofa-framework/sofa/pull/3976#issuecomment-1607303741:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3976#issuecomment-1607303741
https://github.com/sofa-framework/sofa/pull/3977#issuecomment-1621222004:74,Safety,Detect,DetectionOuput,74,"In addition to Alex's comment, a new flag could be created displaying the DetectionOuput to visualize contact points whether you are using Penalities or Langrangian",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3977#issuecomment-1621222004
https://github.com/sofa-framework/sofa/pull/3978#issuecomment-1607304091:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3978#issuecomment-1607304091
https://github.com/sofa-framework/sofa/pull/3981#issuecomment-1609196036:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3981#issuecomment-1609196036
https://github.com/sofa-framework/sofa/pull/3982#issuecomment-1619621078:20,Testability,test,tests,20,```; [----------] 2 tests from TetrahedronFEMForceField_stepTest/0; [ OK ] TetrahedronFEMForceField_stepTest/0.extension (2 ms); [ OK ] TetrahedronFEMForceField_stepTest/0.checkGracefullHandlingWhenTopologyIsMissing (1 ms); [----------] 2 tests from TetrahedronFEMForceField_stepTest/0 (3 ms total); ```; (CI did execute the 2 tests),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3982#issuecomment-1619621078
https://github.com/sofa-framework/sofa/pull/3982#issuecomment-1619621078:239,Testability,test,tests,239,```; [----------] 2 tests from TetrahedronFEMForceField_stepTest/0; [ OK ] TetrahedronFEMForceField_stepTest/0.extension (2 ms); [ OK ] TetrahedronFEMForceField_stepTest/0.checkGracefullHandlingWhenTopologyIsMissing (1 ms); [----------] 2 tests from TetrahedronFEMForceField_stepTest/0 (3 ms total); ```; (CI did execute the 2 tests),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3982#issuecomment-1619621078
https://github.com/sofa-framework/sofa/pull/3982#issuecomment-1619621078:327,Testability,test,tests,327,```; [----------] 2 tests from TetrahedronFEMForceField_stepTest/0; [ OK ] TetrahedronFEMForceField_stepTest/0.extension (2 ms); [ OK ] TetrahedronFEMForceField_stepTest/0.checkGracefullHandlingWhenTopologyIsMissing (1 ms); [----------] 2 tests from TetrahedronFEMForceField_stepTest/0 (3 ms total); ```; (CI did execute the 2 tests),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3982#issuecomment-1619621078
https://github.com/sofa-framework/sofa/pull/3983#issuecomment-1609196304:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3983#issuecomment-1609196304
https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1611339021:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1611339021
https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1632077224:279,Performance,perform,performance,279,"> I did some benches on TorusFall.scnü§ê master `5000 iterations done in 41.7616 s ( 119.727 FPS)`; > ; > pr `5000 iterations done in 36.09 s ( 138.543 FPS)`. Thank you for the benchmark. In the PR, did you activated the parallel computation? I would like to know that there is no performance regression in the single-threaded implementation.; I did not parallelize the third loop: I would like to test that to speed up more.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1632077224
https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1632077224:175,Testability,benchmark,benchmark,175,"> I did some benches on TorusFall.scnü§ê master `5000 iterations done in 41.7616 s ( 119.727 FPS)`; > ; > pr `5000 iterations done in 36.09 s ( 138.543 FPS)`. Thank you for the benchmark. In the PR, did you activated the parallel computation? I would like to know that there is no performance regression in the single-threaded implementation.; I did not parallelize the third loop: I would like to test that to speed up more.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1632077224
https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1632077224:396,Testability,test,test,396,"> I did some benches on TorusFall.scnü§ê master `5000 iterations done in 41.7616 s ( 119.727 FPS)`; > ; > pr `5000 iterations done in 36.09 s ( 138.543 FPS)`. Thank you for the benchmark. In the PR, did you activated the parallel computation? I would like to know that there is no performance regression in the single-threaded implementation.; I did not parallelize the third loop: I would like to test that to speed up more.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1632077224
https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1632643547:15,Testability,benchmark,benchmark,15,"So I've made a benchmark on my side too, it is a rectangular beam falling on a cube. Little specs : . ![ezgif com-video-to-gif](https://github.com/sofa-framework/sofa/assets/30337881/d7a812f8-5127-4e3b-b177-ee9bee793516). Beam : ; - 625 points; - 2304 tetra. Constraints : ; - 276 constraints; - 200 CG iteration; ; -----; Synchronous inverse product; - BuildSystem step took a mean of 66.25 ms (75% of the time step); - Simulation fps : ~ 11 FPS. ----; Asynchronous inverse product; - BuildSystem step took a mean of 49.81 ms (69% of the time step); - Simulation fps : ~ 14 FPS",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1632643547
https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1632825342:256,Testability,test,tests,256,"Ok, I've just realized that the strange tetra crushing that appears on the top of the beam doesn't appear before your pr (on the commit from which your branch has been created). So there might be something wrong going on... Do you want my scene to do some tests on your side ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1632825342
https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1633694721:105,Performance,perform,performances,105,"@bakpaul thanks for the benchmark. Yes, I would like your scene to investigate both the behavior and the performances (I am a bit disappointed so far).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1633694721
https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1633694721:24,Testability,benchmark,benchmark,24,"@bakpaul thanks for the benchmark. Yes, I would like your scene to investigate both the behavior and the performances (I am a bit disappointed so far).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1633694721
https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1640372331:46,Deployability,update,updated,46,"@bakpaul I used your scene for benchmarks and updated the PR description accordingly. However, I don't observe the artefact your mention, even when going step by step.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1640372331
https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1640372331:31,Testability,benchmark,benchmarks,31,"@bakpaul I used your scene for benchmarks and updated the PR description accordingly. However, I don't observe the artefact your mention, even when going step by step.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1640372331
https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1640447331:417,Deployability,configurat,configurations,417,"Nice job, it is indeed faster on my computer too. ; For the artifact, it still appears at the top of the beam on the contact, at step 46 (see image) event with your modified scene (I saw only the ShewchukPCGLinearSolver that was different). . ![image](https://github.com/sofa-framework/sofa/assets/30337881/45010585-c1e3-4f89-9e9b-f201bd700a29). Would be great to know what are the difference between our compilation configurations.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1640447331
https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1640447331:417,Modifiability,config,configurations,417,"Nice job, it is indeed faster on my computer too. ; For the artifact, it still appears at the top of the beam on the contact, at step 46 (see image) event with your modified scene (I saw only the ShewchukPCGLinearSolver that was different). . ![image](https://github.com/sofa-framework/sofa/assets/30337881/45010585-c1e3-4f89-9e9b-f201bd700a29). Would be great to know what are the difference between our compilation configurations.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1640447331
https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1641710748:214,Testability,benchmark,benchmark,214,"@bakpaul Strange, I checked again (with and without parallelization) and I don't have the artefact you have. `ShewchukPCGLinearSolver` is not a difference because you use an alias of it (`PCGLinearSolver`). In the benchmark I translated the beam to measure mainly the contacts and skip the falling part. But I still don't see the artefact when I remove the translation.; @fredroy @hugtalbot would you like to test this branch with the scene provided by @bakpaul ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1641710748
https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1641710748:409,Testability,test,test,409,"@bakpaul Strange, I checked again (with and without parallelization) and I don't have the artefact you have. `ShewchukPCGLinearSolver` is not a difference because you use an alias of it (`PCGLinearSolver`). In the benchmark I translated the beam to measure mainly the contacts and skip the falling part. But I still don't see the artefact when I remove the translation.; @fredroy @hugtalbot would you like to test this branch with the scene provided by @bakpaul ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1641710748
https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1643181408:216,Testability,benchmark,benchmark,216,"> @bakpaul Strange, I checked again (with and without parallelization) and I don't have the artefact you have. `ShewchukPCGLinearSolver` is not a difference because you use an alias of it (`PCGLinearSolver`). In the benchmark I translated the beam to measure mainly the contacts and skip the falling part. But I still don't see the artefact when I remove the translation. @fredroy @hugtalbot would you like to test this branch with the scene provided by @bakpaul ?. I tested the scene of @bakpaul and I get the same artefact on ubuntu 23.04/gcc12.2; EDIT: and I dont have the artefact on Windows/MSVC2022 üò∂‚Äçüå´Ô∏è",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1643181408
https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1643181408:410,Testability,test,test,410,"> @bakpaul Strange, I checked again (with and without parallelization) and I don't have the artefact you have. `ShewchukPCGLinearSolver` is not a difference because you use an alias of it (`PCGLinearSolver`). In the benchmark I translated the beam to measure mainly the contacts and skip the falling part. But I still don't see the artefact when I remove the translation. @fredroy @hugtalbot would you like to test this branch with the scene provided by @bakpaul ?. I tested the scene of @bakpaul and I get the same artefact on ubuntu 23.04/gcc12.2; EDIT: and I dont have the artefact on Windows/MSVC2022 üò∂‚Äçüå´Ô∏è",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1643181408
https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1643181408:468,Testability,test,tested,468,"> @bakpaul Strange, I checked again (with and without parallelization) and I don't have the artefact you have. `ShewchukPCGLinearSolver` is not a difference because you use an alias of it (`PCGLinearSolver`). In the benchmark I translated the beam to measure mainly the contacts and skip the falling part. But I still don't see the artefact when I remove the translation. @fredroy @hugtalbot would you like to test this branch with the scene provided by @bakpaul ?. I tested the scene of @bakpaul and I get the same artefact on ubuntu 23.04/gcc12.2; EDIT: and I dont have the artefact on Windows/MSVC2022 üò∂‚Äçüå´Ô∏è",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1643181408
https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1643591728:47,Integrability,depend,depends,47,@fredroy Thanks for trying.; So the regression depends on the OS. Great!; I added a regression test for this scene in https://github.com/sofa-framework/sofa/pull/4055,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1643591728
https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1643591728:95,Testability,test,test,95,@fredroy Thanks for trying.; So the regression depends on the OS. Great!; I added a regression test for this scene in https://github.com/sofa-framework/sofa/pull/4055,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1643591728
https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1651921504:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1651921504
https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1653112403:459,Availability,error,errors,459,"Some notes:. - It was extremely hard to understand why L^T was used in the first step of the solve, and not L. I hope it's clearer now with the comment I added. Anyway, it requires to have the knowledge of the CSR and CSC formats, and how they relates to the transpose.; - I would like to use C++20 `std::span` in some functions such as `solveLowerUnitriangularSystemCSR`.; - Regression tests threshold are usually set to 1e-4. IMO it's not enough to capture errors happening on a single DOF because it's an average",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1653112403
https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1653112403:387,Testability,test,tests,387,"Some notes:. - It was extremely hard to understand why L^T was used in the first step of the solve, and not L. I hope it's clearer now with the comment I added. Anyway, it requires to have the knowledge of the CSR and CSC formats, and how they relates to the transpose.; - I would like to use C++20 `std::span` in some functions such as `solveLowerUnitriangularSystemCSR`.; - Regression tests threshold are usually set to 1e-4. IMO it's not enough to capture errors happening on a single DOF because it's an average",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1653112403
https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1653112403:123,Usability,clear,clearer,123,"Some notes:. - It was extremely hard to understand why L^T was used in the first step of the solve, and not L. I hope it's clearer now with the comment I added. Anyway, it requires to have the knowledge of the CSR and CSC formats, and how they relates to the transpose.; - I would like to use C++20 `std::span` in some functions such as `solveLowerUnitriangularSystemCSR`.; - Regression tests threshold are usually set to 1e-4. IMO it's not enough to capture errors happening on a single DOF because it's an average",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1653112403
https://github.com/sofa-framework/sofa/pull/3987#issuecomment-1717177305:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3987#issuecomment-1717177305
https://github.com/sofa-framework/sofa/pull/3989#issuecomment-1611478704:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3989#issuecomment-1611478704
https://github.com/sofa-framework/sofa/pull/3990#issuecomment-1612133411:22,Testability,test,tests,22,[ci-build][with-scene-tests][with-regression-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3990#issuecomment-1612133411
https://github.com/sofa-framework/sofa/pull/3990#issuecomment-1612133411:45,Testability,test,tests,45,[ci-build][with-scene-tests][with-regression-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3990#issuecomment-1612133411
https://github.com/sofa-framework/sofa/pull/3991#issuecomment-1611479193:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3991#issuecomment-1611479193
https://github.com/sofa-framework/sofa/pull/3991#issuecomment-1655449085:195,Testability,test,tests,195,> @epernod you mean that the scene you mentioned did not make a match between the force fields?. no this scene is working fine and both FEM have exactly the same behavior. ; I did a previous bad tests several weeks ago and it was not working... but now it is working nicely. wait for CI for triple check and go,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3991#issuecomment-1655449085
https://github.com/sofa-framework/sofa/pull/3992#issuecomment-1612133840:22,Testability,test,tests,22,[ci-build][with-scene-tests][with-regression-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3992#issuecomment-1612133840
https://github.com/sofa-framework/sofa/pull/3992#issuecomment-1612133840:45,Testability,test,tests,45,[ci-build][with-scene-tests][with-regression-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3992#issuecomment-1612133840
https://github.com/sofa-framework/sofa/pull/3992#issuecomment-1612792968:22,Testability,test,tests,22,[ci-build][with-scene-tests][with-regression-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3992#issuecomment-1612792968
https://github.com/sofa-framework/sofa/pull/3992#issuecomment-1612792968:45,Testability,test,tests,45,[ci-build][with-scene-tests][with-regression-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3992#issuecomment-1612792968
https://github.com/sofa-framework/sofa/pull/3993#issuecomment-1613399494:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3993#issuecomment-1613399494
https://github.com/sofa-framework/sofa/pull/3994#issuecomment-1613397890:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3994#issuecomment-1613397890
https://github.com/sofa-framework/sofa/pull/3997#issuecomment-1613786678:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3997#issuecomment-1613786678
https://github.com/sofa-framework/sofa/pull/3999#issuecomment-1614409516:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3999#issuecomment-1614409516
https://github.com/sofa-framework/sofa/pull/3999#issuecomment-1639111545:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3999#issuecomment-1639111545
https://github.com/sofa-framework/sofa/pull/3999#issuecomment-1639135316:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3999#issuecomment-1639135316
https://github.com/sofa-framework/sofa/pull/4000#issuecomment-1619760974:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4000#issuecomment-1619760974
https://github.com/sofa-framework/sofa/pull/4001#issuecomment-1614635385:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4001#issuecomment-1614635385
https://github.com/sofa-framework/sofa/pull/4001#issuecomment-1619582818:0,Testability,Test,Tested,0,Tested & Approved ü§©,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4001#issuecomment-1619582818
https://github.com/sofa-framework/sofa/pull/4001#issuecomment-1621242771:0,Performance,Optimiz,Optimize,0,Optimize the assembly of mapped ForceFields JtKJ by identifying the useful terms of the Jacobian matrix with regards to the K matrix shape. :arrow_right: a regression appeared on BeamFEMForceField and a scene test seems to fail SpatialGridPointModel.scn,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4001#issuecomment-1621242771
https://github.com/sofa-framework/sofa/pull/4001#issuecomment-1621242771:209,Testability,test,test,209,Optimize the assembly of mapped ForceFields JtKJ by identifying the useful terms of the Jacobian matrix with regards to the K matrix shape. :arrow_right: a regression appeared on BeamFEMForceField and a scene test seems to fail SpatialGridPointModel.scn,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4001#issuecomment-1621242771
https://github.com/sofa-framework/sofa/pull/4001#issuecomment-1623035475:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4001#issuecomment-1623035475
https://github.com/sofa-framework/sofa/pull/4001#issuecomment-1631971523:136,Performance,perform,performances,136,"At the matrix assembly, @fredroy noticed that the function `assembledMappedMatrix` --> `applytJT()` is called less often thus improving performances",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4001#issuecomment-1631971523
https://github.com/sofa-framework/sofa/pull/4001#issuecomment-1655298584:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4001#issuecomment-1655298584
https://github.com/sofa-framework/sofa/pull/4001#issuecomment-1655466999:7,Testability,benchmark,benchmark,7,Latest benchmark on the caduceus:. Before; ```; [BatchGUI] 10000 iterations done in 37.8088 s ( 264.489 FPS).; ```. After; ```; [BatchGUI] 10000 iterations done in 14.4789 s ( 690.661 FPS).; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4001#issuecomment-1655466999
https://github.com/sofa-framework/sofa/pull/4005#issuecomment-1627864720:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4005#issuecomment-1627864720
https://github.com/sofa-framework/sofa/pull/4005#issuecomment-1639628819:79,Availability,error,error,79,CI says no :crossed_swords: @alxbilger ; ; ```; EllipsoidForceField.cpp:40:50: error: deleted function '~EllipsoidForceField' cannot override a non-deleted function; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4005#issuecomment-1639628819
https://github.com/sofa-framework/sofa/pull/4005#issuecomment-1641625273:169,Deployability,update,update,169,"Is this fine as a new way to manage renaming of C++ data in SOFA @alxbilger ? does the need of overload of the destructor is fine ?; If so, the PR is fine and we should update the [deprecation documentation](https://www.sofa-framework.org/community/doc/contributing-to-sofa/lifecycle-mechanisms/#removing-a-datafield)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4005#issuecomment-1641625273
https://github.com/sofa-framework/sofa/pull/4005#issuecomment-1641669962:48,Safety,detect,detect,48,"Since the overload of the destructor is easy to detect and it makes a clean / smooth deprecation process, we rather like it.; I would go for it if you're fine with it as well. Fred suggested a macro for the destructor, but I am unsure about this",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4005#issuecomment-1641669962
https://github.com/sofa-framework/sofa/pull/4005#issuecomment-1644595776:8,Safety,risk,risky,8,I see.. risky then.. @alxbilger,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4005#issuecomment-1644595776
https://github.com/sofa-framework/sofa/pull/4006#issuecomment-1627864745:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4006#issuecomment-1627864745
https://github.com/sofa-framework/sofa/pull/4007#issuecomment-1622294332:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4007#issuecomment-1622294332
https://github.com/sofa-framework/sofa/pull/4009#issuecomment-1622293926:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4009#issuecomment-1622293926
https://github.com/sofa-framework/sofa/pull/4010#issuecomment-1622292928:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4010#issuecomment-1622292928
https://github.com/sofa-framework/sofa/pull/4010#issuecomment-1623097057:34,Safety,Timeout,Timeout,34,"Reasons for the failing tests:; - Timeout: simulations are way slower, but not necessarily different in terms of behavior; - `buildStiffnessMatrix` is not implemented: if it is not implemented, there is the backup of calling `addKToMatrix`, but it is not necessarily implemented.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4010#issuecomment-1623097057
https://github.com/sofa-framework/sofa/pull/4010#issuecomment-1623097057:24,Testability,test,tests,24,"Reasons for the failing tests:; - Timeout: simulations are way slower, but not necessarily different in terms of behavior; - `buildStiffnessMatrix` is not implemented: if it is not implemented, there is the backup of calling `addKToMatrix`, but it is not necessarily implemented.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4010#issuecomment-1623097057
https://github.com/sofa-framework/sofa/pull/4015#issuecomment-1623588743:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4015#issuecomment-1623588743
https://github.com/sofa-framework/sofa/pull/4015#issuecomment-1625645822:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4015#issuecomment-1625645822
https://github.com/sofa-framework/sofa/pull/4019#issuecomment-1639427337:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4019#issuecomment-1639427337
https://github.com/sofa-framework/sofa/pull/4019#issuecomment-1661877416:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4019#issuecomment-1661877416
https://github.com/sofa-framework/sofa/pull/4026#issuecomment-1637283214:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4026#issuecomment-1637283214
https://github.com/sofa-framework/sofa/pull/4027#issuecomment-1637247694:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4027#issuecomment-1637247694
https://github.com/sofa-framework/sofa/pull/4028#issuecomment-1637247150:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4028#issuecomment-1637247150
https://github.com/sofa-framework/sofa/pull/4028#issuecomment-1641657907:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4028#issuecomment-1641657907
https://github.com/sofa-framework/sofa/pull/4029#issuecomment-1637247275:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4029#issuecomment-1637247275
https://github.com/sofa-framework/sofa/pull/4029#issuecomment-1685446867:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4029#issuecomment-1685446867
https://github.com/sofa-framework/sofa/pull/4034#issuecomment-1633033407:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #1](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4034/1/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/101**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 43e5dba0246cd134fe7122d1e4a9d46909378fce_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4034#issuecomment-1633033407
https://github.com/sofa-framework/sofa/pull/4034#issuecomment-1633033407:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #1](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4034/1/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/101**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 43e5dba0246cd134fe7122d1e4a9d46909378fce_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4034#issuecomment-1633033407
https://github.com/sofa-framework/sofa/pull/4034#issuecomment-1633034743:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4034#issuecomment-1633034743
https://github.com/sofa-framework/sofa/pull/4034#issuecomment-1633034888:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4034/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/101**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 43e5dba0246cd134fe7122d1e4a9d46909378fce_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4034#issuecomment-1633034888
https://github.com/sofa-framework/sofa/pull/4034#issuecomment-1633034888:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4034/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/101**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 43e5dba0246cd134fe7122d1e4a9d46909378fce_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4034#issuecomment-1633034888
https://github.com/sofa-framework/sofa/pull/4034#issuecomment-1689674702:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4034/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/101**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 0107fb8b8c546126bc8732e551b5b6cba191efd6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4034#issuecomment-1689674702
https://github.com/sofa-framework/sofa/pull/4034#issuecomment-1689674702:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4034/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/101**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 0107fb8b8c546126bc8732e551b5b6cba191efd6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4034#issuecomment-1689674702
https://github.com/sofa-framework/sofa/pull/4034#issuecomment-1698680310:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4034/4/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4034#issuecomment-1698680310
https://github.com/sofa-framework/sofa/pull/4034#issuecomment-1698680310:121,Integrability,depend,dependencies,121,**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4034/4/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4034#issuecomment-1698680310
https://github.com/sofa-framework/sofa/pull/4034#issuecomment-1698680310:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4034/4/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4034#issuecomment-1698680310
https://github.com/sofa-framework/sofa/pull/4040#issuecomment-1644464446:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4040#issuecomment-1644464446
https://github.com/sofa-framework/sofa/pull/4040#issuecomment-1644464613:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4040/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/101**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 0107fb8b8c546126bc8732e551b5b6cba191efd6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4040#issuecomment-1644464613
https://github.com/sofa-framework/sofa/pull/4040#issuecomment-1644464613:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4040/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/101**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 0107fb8b8c546126bc8732e551b5b6cba191efd6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4040#issuecomment-1644464613
https://github.com/sofa-framework/sofa/pull/4040#issuecomment-1647467568:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4040/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/101**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 0107fb8b8c546126bc8732e551b5b6cba191efd6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4040#issuecomment-1647467568
https://github.com/sofa-framework/sofa/pull/4040#issuecomment-1647467568:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4040/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/101**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 0107fb8b8c546126bc8732e551b5b6cba191efd6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4040#issuecomment-1647467568
https://github.com/sofa-framework/sofa/pull/4040#issuecomment-1658014275:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4040#issuecomment-1658014275
https://github.com/sofa-framework/sofa/pull/4040#issuecomment-1658014380:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4040/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/101**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 0107fb8b8c546126bc8732e551b5b6cba191efd6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4040#issuecomment-1658014380
https://github.com/sofa-framework/sofa/pull/4040#issuecomment-1658014380:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4040/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/101**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 0107fb8b8c546126bc8732e551b5b6cba191efd6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4040#issuecomment-1658014380
https://github.com/sofa-framework/sofa/pull/4040#issuecomment-1658014435:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4040/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/101**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 0107fb8b8c546126bc8732e551b5b6cba191efd6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4040#issuecomment-1658014435
https://github.com/sofa-framework/sofa/pull/4040#issuecomment-1658014435:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4040/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/101**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 0107fb8b8c546126bc8732e551b5b6cba191efd6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4040#issuecomment-1658014435
https://github.com/sofa-framework/sofa/pull/4040#issuecomment-1700065913:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4040/6/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4040#issuecomment-1700065913
https://github.com/sofa-framework/sofa/pull/4040#issuecomment-1700065913:121,Integrability,depend,dependencies,121,**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4040/6/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4040#issuecomment-1700065913
https://github.com/sofa-framework/sofa/pull/4040#issuecomment-1700065913:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4040/6/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4040#issuecomment-1700065913
https://github.com/sofa-framework/sofa/pull/4041#issuecomment-1639143078:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4041#issuecomment-1639143078
https://github.com/sofa-framework/sofa/pull/4044#issuecomment-1636735864:64,Testability,test,tested,64,do you know why is this fixing the problem @fredroy ?. Anyway I tested and it works :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4044#issuecomment-1636735864
https://github.com/sofa-framework/sofa/pull/4044#issuecomment-1637217987:72,Testability,test,tested,72,> do you know why is this fixing the problem @fredroy ?; > ; > Anyway I tested and it works üëç. Because the VisualDrawVisitor is managing both the VisualModels' (drawVisual) and the BaseObject (draw()). ; In this case the added tests were bypassing the BaseObjects' draw(),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4044#issuecomment-1637217987
https://github.com/sofa-framework/sofa/pull/4044#issuecomment-1637217987:227,Testability,test,tests,227,> do you know why is this fixing the problem @fredroy ?; > ; > Anyway I tested and it works üëç. Because the VisualDrawVisitor is managing both the VisualModels' (drawVisual) and the BaseObject (draw()). ; In this case the added tests were bypassing the BaseObjects' draw(),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4044#issuecomment-1637217987
https://github.com/sofa-framework/sofa/pull/4046#issuecomment-1646993561:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4046#issuecomment-1646993561
https://github.com/sofa-framework/sofa/pull/4046#issuecomment-1698689077:27,Modifiability,variab,variable,27,Union may prevent to use a variable x if you wrote in y which is exactly our case here. Let's use the setParent() on Data.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4046#issuecomment-1698689077
https://github.com/sofa-framework/sofa/pull/4046#issuecomment-1701166244:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4046#issuecomment-1701166244
https://github.com/sofa-framework/sofa/pull/4046#issuecomment-1717638903:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4046#issuecomment-1717638903
https://github.com/sofa-framework/sofa/pull/4046#issuecomment-1727222829:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4046#issuecomment-1727222829
https://github.com/sofa-framework/sofa/pull/4046#issuecomment-1728375942:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4046#issuecomment-1728375942
https://github.com/sofa-framework/sofa/pull/4048#issuecomment-1640344065:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4048#issuecomment-1640344065
https://github.com/sofa-framework/sofa/pull/4048#issuecomment-1640703846:7,Testability,test,test,7,I will test your branch any way but would you have a visu of this feature @bakpaul ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4048#issuecomment-1640703846
https://github.com/sofa-framework/sofa/pull/4048#issuecomment-1680145018:5,Testability,test,test,5,Unit test failing due to the increased number of visual flag @bakpaul,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4048#issuecomment-1680145018
https://github.com/sofa-framework/sofa/issues/4051#issuecomment-1641655025:6,Testability,test,test,6,"So to test this scene, we have to change the LDL solver for a CG? Also, the mesh file is not provided",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4051#issuecomment-1641655025
https://github.com/sofa-framework/sofa/pull/4053#issuecomment-1647445073:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4053#issuecomment-1647445073
https://github.com/sofa-framework/sofa/pull/4055#issuecomment-1643565056:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #1](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4055/1/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/48**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 644cf81b3331268be797cf6079c5e2acce171c2c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4055#issuecomment-1643565056
https://github.com/sofa-framework/sofa/pull/4055#issuecomment-1643565056:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #1](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4055/1/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/48**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 644cf81b3331268be797cf6079c5e2acce171c2c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4055#issuecomment-1643565056
https://github.com/sofa-framework/sofa/pull/4055#issuecomment-1643793818:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4055#issuecomment-1643793818
https://github.com/sofa-framework/sofa/pull/4055#issuecomment-1643794027:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4055/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/48**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 644cf81b3331268be797cf6079c5e2acce171c2c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4055#issuecomment-1643794027
https://github.com/sofa-framework/sofa/pull/4055#issuecomment-1643794027:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4055/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/48**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 644cf81b3331268be797cf6079c5e2acce171c2c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4055#issuecomment-1643794027
https://github.com/sofa-framework/sofa/pull/4055#issuecomment-1643801563:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4055/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/48**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 644cf81b3331268be797cf6079c5e2acce171c2c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4055#issuecomment-1643801563
https://github.com/sofa-framework/sofa/pull/4055#issuecomment-1643801563:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4055/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/48**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 644cf81b3331268be797cf6079c5e2acce171c2c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4055#issuecomment-1643801563
https://github.com/sofa-framework/sofa/pull/4055#issuecomment-1644807248:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4055#issuecomment-1644807248
https://github.com/sofa-framework/sofa/pull/4055#issuecomment-1644807335:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4055/4/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4055#issuecomment-1644807335
https://github.com/sofa-framework/sofa/pull/4055#issuecomment-1644807335:121,Integrability,depend,dependencies,121,**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4055/4/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4055#issuecomment-1644807335
https://github.com/sofa-framework/sofa/pull/4055#issuecomment-1644807335:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4055/4/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4055#issuecomment-1644807335
https://github.com/sofa-framework/sofa/pull/4056#issuecomment-1644484506:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4056#issuecomment-1644484506
https://github.com/sofa-framework/sofa/pull/4056#issuecomment-1644484648:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4056/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/101**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 0107fb8b8c546126bc8732e551b5b6cba191efd6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4056#issuecomment-1644484648
https://github.com/sofa-framework/sofa/pull/4056#issuecomment-1644484648:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4056/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/101**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 0107fb8b8c546126bc8732e551b5b6cba191efd6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4056#issuecomment-1644484648
https://github.com/sofa-framework/sofa/pull/4056#issuecomment-1645131672:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4056/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/101**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 0107fb8b8c546126bc8732e551b5b6cba191efd6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4056#issuecomment-1645131672
https://github.com/sofa-framework/sofa/pull/4056#issuecomment-1645131672:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4056/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/101**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 0107fb8b8c546126bc8732e551b5b6cba191efd6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4056#issuecomment-1645131672
https://github.com/sofa-framework/sofa/pull/4056#issuecomment-1645854262:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4056#issuecomment-1645854262
https://github.com/sofa-framework/sofa/pull/4056#issuecomment-1645855538:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4056/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/101**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 0107fb8b8c546126bc8732e551b5b6cba191efd6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4056#issuecomment-1645855538
https://github.com/sofa-framework/sofa/pull/4056#issuecomment-1645855538:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4056/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/101**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 0107fb8b8c546126bc8732e551b5b6cba191efd6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4056#issuecomment-1645855538
https://github.com/sofa-framework/sofa/pull/4056#issuecomment-1658769138:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4056/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/101**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 0107fb8b8c546126bc8732e551b5b6cba191efd6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4056#issuecomment-1658769138
https://github.com/sofa-framework/sofa/pull/4056#issuecomment-1658769138:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4056/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/101**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 0107fb8b8c546126bc8732e551b5b6cba191efd6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4056#issuecomment-1658769138
https://github.com/sofa-framework/sofa/pull/4056#issuecomment-1700369588:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4056/6/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4056#issuecomment-1700369588
https://github.com/sofa-framework/sofa/pull/4056#issuecomment-1700369588:121,Integrability,depend,dependencies,121,**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4056/6/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4056#issuecomment-1700369588
https://github.com/sofa-framework/sofa/pull/4056#issuecomment-1700369588:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4056/6/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4056#issuecomment-1700369588
https://github.com/sofa-framework/sofa/pull/4056#issuecomment-1707745441:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4056/7/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4056#issuecomment-1707745441
https://github.com/sofa-framework/sofa/pull/4056#issuecomment-1707745441:121,Integrability,depend,dependencies,121,**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4056/7/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4056#issuecomment-1707745441
https://github.com/sofa-framework/sofa/pull/4056#issuecomment-1707745441:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4056/7/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4056#issuecomment-1707745441
https://github.com/sofa-framework/sofa/pull/4057#issuecomment-1663441056:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4057#issuecomment-1663441056
https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1645183301:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1645183301
https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1645183439:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4058/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/101**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 0107fb8b8c546126bc8732e551b5b6cba191efd6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1645183439
https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1645183439:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4058/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/101**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 0107fb8b8c546126bc8732e551b5b6cba191efd6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1645183439
https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1661614608:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4058/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/101**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 0107fb8b8c546126bc8732e551b5b6cba191efd6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1661614608
https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1661614608:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4058/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/101**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 0107fb8b8c546126bc8732e551b5b6cba191efd6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1661614608
https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1661655900:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4058/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/101**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 0107fb8b8c546126bc8732e551b5b6cba191efd6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1661655900
https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1661655900:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4058/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/101**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 0107fb8b8c546126bc8732e551b5b6cba191efd6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1661655900
https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1661655957:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1661655957
https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1661656099:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4058/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/101**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 0107fb8b8c546126bc8732e551b5b6cba191efd6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1661656099
https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1661656099:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4058/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/101**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 0107fb8b8c546126bc8732e551b5b6cba191efd6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1661656099
https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1713461547:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4058/6/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1713461547
https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1713461547:121,Integrability,depend,dependencies,121,**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4058/6/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1713461547
https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1713461547:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4058/6/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1713461547
https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1714747506:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4058/7/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1714747506
https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1714747506:121,Integrability,depend,dependencies,121,**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4058/7/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1714747506
https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1714747506:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4058/7/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1714747506
https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1714785977:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4058/8/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1714785977
https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1714785977:121,Integrability,depend,dependencies,121,**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4058/8/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1714785977
https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1714785977:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4058/8/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1714785977
https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1714795472:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1714795472
https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1714795529:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4058/9/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1714795529
https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1714795529:121,Integrability,depend,dependencies,121,**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4058/9/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1714795529
https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1714795529:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4058/9/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1714795529
https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1714805666:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4058/10/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1714805666
https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1714805666:123,Integrability,depend,dependencies,123,**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4058/10/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1714805666
https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1714805666:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4058/10/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1714805666
https://github.com/sofa-framework/sofa/pull/4059#issuecomment-1645565405:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4059#issuecomment-1645565405
https://github.com/sofa-framework/sofa/pull/4060#issuecomment-1645486908:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4060#issuecomment-1645486908
https://github.com/sofa-framework/sofa/pull/4061#issuecomment-1645487178:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4061#issuecomment-1645487178
https://github.com/sofa-framework/sofa/pull/4061#issuecomment-1645551046:104,Energy Efficiency,charge,charge,104,"The PR is obviously fine :+1: ; but it made me raise a question : which component should be actually in charge of the computation of the BBox ?; if this is the mstate which implements this feature, shouldn't it be the only one to trigger the computation at each time step ?. or is it a naive question?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4061#issuecomment-1645551046
https://github.com/sofa-framework/sofa/pull/4062#issuecomment-1645487334:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4062#issuecomment-1645487334
https://github.com/sofa-framework/sofa/pull/4063#issuecomment-1645487470:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4063#issuecomment-1645487470
https://github.com/sofa-framework/sofa/pull/4063#issuecomment-1645576537:135,Testability,log,logical,135,"thanks @alxbilger since it's a part of the code I am not familiar with, could you share some context with us?; anyway the change looks logical",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4063#issuecomment-1645576537
https://github.com/sofa-framework/sofa/pull/4063#issuecomment-1645661295:152,Testability,test,test,152,It's something I noticed when inspecting the values while debugging in https://github.com/sofa-framework/sofa/issues/4051. I would like to write a unit test if I find the time,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4063#issuecomment-1645661295
https://github.com/sofa-framework/sofa/pull/4063#issuecomment-1697518109:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4063#issuecomment-1697518109
https://github.com/sofa-framework/sofa/pull/4064#issuecomment-1647466030:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4064#issuecomment-1647466030
https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1646804051:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1646804051
https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1646804073:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4065/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/ManifoldTopologies/pull/7**; _For this build, ManifoldTopologies/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ManifoldTopologies; GIT_TAG 10cf9884208c68c6902d43a543324a7224fecbe7_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1646804073
https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1646804073:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4065/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/ManifoldTopologies/pull/7**; _For this build, ManifoldTopologies/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ManifoldTopologies; GIT_TAG 10cf9884208c68c6902d43a543324a7224fecbe7_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1646804073
https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1662943647:4,Availability,error,error,4,The error on the CI :. ```; J:\0\src\applications\plugins\SofaCUDA\sofa/gpu/cuda/CudaSphereModel.h(26): error: This header has been DISABLED since v23.12 after being deprecated on v23.06. To fix this error you must include SofaCUDA/component/collision/geometry/CudaSphereModel.h instead. ; J:\0\src\applications\plugins\SofaCUDA\sofa/gpu/cuda/CudaPointModel.h(26): error: This header has been DISABLED since v23.12 after being deprecated on v23.06. To fix this error you must include SofaCUDA/component/collision/geometry/CudaPointModel.h instead. ; ```. has been fixed in the PR suite Lifecycle.; This will should therefore be automatically be fixed when #4058 will be merged,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1662943647
https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1662943647:104,Availability,error,error,104,The error on the CI :. ```; J:\0\src\applications\plugins\SofaCUDA\sofa/gpu/cuda/CudaSphereModel.h(26): error: This header has been DISABLED since v23.12 after being deprecated on v23.06. To fix this error you must include SofaCUDA/component/collision/geometry/CudaSphereModel.h instead. ; J:\0\src\applications\plugins\SofaCUDA\sofa/gpu/cuda/CudaPointModel.h(26): error: This header has been DISABLED since v23.12 after being deprecated on v23.06. To fix this error you must include SofaCUDA/component/collision/geometry/CudaPointModel.h instead. ; ```. has been fixed in the PR suite Lifecycle.; This will should therefore be automatically be fixed when #4058 will be merged,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1662943647
https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1662943647:200,Availability,error,error,200,The error on the CI :. ```; J:\0\src\applications\plugins\SofaCUDA\sofa/gpu/cuda/CudaSphereModel.h(26): error: This header has been DISABLED since v23.12 after being deprecated on v23.06. To fix this error you must include SofaCUDA/component/collision/geometry/CudaSphereModel.h instead. ; J:\0\src\applications\plugins\SofaCUDA\sofa/gpu/cuda/CudaPointModel.h(26): error: This header has been DISABLED since v23.12 after being deprecated on v23.06. To fix this error you must include SofaCUDA/component/collision/geometry/CudaPointModel.h instead. ; ```. has been fixed in the PR suite Lifecycle.; This will should therefore be automatically be fixed when #4058 will be merged,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1662943647
https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1662943647:365,Availability,error,error,365,The error on the CI :. ```; J:\0\src\applications\plugins\SofaCUDA\sofa/gpu/cuda/CudaSphereModel.h(26): error: This header has been DISABLED since v23.12 after being deprecated on v23.06. To fix this error you must include SofaCUDA/component/collision/geometry/CudaSphereModel.h instead. ; J:\0\src\applications\plugins\SofaCUDA\sofa/gpu/cuda/CudaPointModel.h(26): error: This header has been DISABLED since v23.12 after being deprecated on v23.06. To fix this error you must include SofaCUDA/component/collision/geometry/CudaPointModel.h instead. ; ```. has been fixed in the PR suite Lifecycle.; This will should therefore be automatically be fixed when #4058 will be merged,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1662943647
https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1662943647:461,Availability,error,error,461,The error on the CI :. ```; J:\0\src\applications\plugins\SofaCUDA\sofa/gpu/cuda/CudaSphereModel.h(26): error: This header has been DISABLED since v23.12 after being deprecated on v23.06. To fix this error you must include SofaCUDA/component/collision/geometry/CudaSphereModel.h instead. ; J:\0\src\applications\plugins\SofaCUDA\sofa/gpu/cuda/CudaPointModel.h(26): error: This header has been DISABLED since v23.12 after being deprecated on v23.06. To fix this error you must include SofaCUDA/component/collision/geometry/CudaPointModel.h instead. ; ```. has been fixed in the PR suite Lifecycle.; This will should therefore be automatically be fixed when #4058 will be merged,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1662943647
https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1662943647:50,Modifiability,plugin,plugins,50,The error on the CI :. ```; J:\0\src\applications\plugins\SofaCUDA\sofa/gpu/cuda/CudaSphereModel.h(26): error: This header has been DISABLED since v23.12 after being deprecated on v23.06. To fix this error you must include SofaCUDA/component/collision/geometry/CudaSphereModel.h instead. ; J:\0\src\applications\plugins\SofaCUDA\sofa/gpu/cuda/CudaPointModel.h(26): error: This header has been DISABLED since v23.12 after being deprecated on v23.06. To fix this error you must include SofaCUDA/component/collision/geometry/CudaPointModel.h instead. ; ```. has been fixed in the PR suite Lifecycle.; This will should therefore be automatically be fixed when #4058 will be merged,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1662943647
https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1662943647:312,Modifiability,plugin,plugins,312,The error on the CI :. ```; J:\0\src\applications\plugins\SofaCUDA\sofa/gpu/cuda/CudaSphereModel.h(26): error: This header has been DISABLED since v23.12 after being deprecated on v23.06. To fix this error you must include SofaCUDA/component/collision/geometry/CudaSphereModel.h instead. ; J:\0\src\applications\plugins\SofaCUDA\sofa/gpu/cuda/CudaPointModel.h(26): error: This header has been DISABLED since v23.12 after being deprecated on v23.06. To fix this error you must include SofaCUDA/component/collision/geometry/CudaPointModel.h instead. ; ```. has been fixed in the PR suite Lifecycle.; This will should therefore be automatically be fixed when #4058 will be merged,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1662943647
https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1713473365:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4065/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/ManifoldTopologies/pull/7**; _For this build, ManifoldTopologies/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ManifoldTopologies; GIT_TAG 10cf9884208c68c6902d43a543324a7224fecbe7_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1713473365
https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1713473365:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4065/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/ManifoldTopologies/pull/7**; _For this build, ManifoldTopologies/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ManifoldTopologies; GIT_TAG 10cf9884208c68c6902d43a543324a7224fecbe7_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1713473365
https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1715708319:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1715708319
https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1715708549:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4065/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/ManifoldTopologies/pull/7**; _For this build, ManifoldTopologies/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ManifoldTopologies; GIT_TAG 10cf9884208c68c6902d43a543324a7224fecbe7_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1715708549
https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1715708549:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4065/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/ManifoldTopologies/pull/7**; _For this build, ManifoldTopologies/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ManifoldTopologies; GIT_TAG 10cf9884208c68c6902d43a543324a7224fecbe7_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1715708549
https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1716748555:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1716748555
https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1716748657:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4065/5/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1716748657
https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1716748657:121,Integrability,depend,dependencies,121,**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4065/5/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1716748657
https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1716748657:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4065/5/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1716748657
https://github.com/sofa-framework/sofa/pull/4067#issuecomment-1646992496:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4067#issuecomment-1646992496
https://github.com/sofa-framework/sofa/pull/4075#issuecomment-1664188564:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4075#issuecomment-1664188564
https://github.com/sofa-framework/sofa/pull/4075#issuecomment-1701154954:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4075#issuecomment-1701154954
https://github.com/sofa-framework/sofa/pull/4079#issuecomment-1701791951:29,Integrability,message,message,29,"It seems fine now.; Only the message does not appear yet, I get as long as the PR is not merged.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4079#issuecomment-1701791951
https://github.com/sofa-framework/sofa/pull/4097#issuecomment-1689540371:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4097#issuecomment-1689540371
https://github.com/sofa-framework/sofa/pull/4098#issuecomment-1689540793:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4098#issuecomment-1689540793
https://github.com/sofa-framework/sofa/pull/4099#issuecomment-1689541025:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4099#issuecomment-1689541025
https://github.com/sofa-framework/sofa/pull/4102#issuecomment-1689610452:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4102#issuecomment-1689610452
https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1689903904:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1689903904
https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1689904064:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4106/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/ShapeMatchingPlugin/pull/1**; _For this build, ShapeMatchingPlugin/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ShapeMatchingPlugin; GIT_TAG c16f4bc9f412aa60271349e78ac8a78cd4dc42c8_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1689904064
https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1689904064:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4106/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/ShapeMatchingPlugin/pull/1**; _For this build, ShapeMatchingPlugin/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ShapeMatchingPlugin; GIT_TAG c16f4bc9f412aa60271349e78ac8a78cd4dc42c8_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1689904064
https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1691322080:38,Testability,test,tests,38,[ci-build][force-full-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1691322080
https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1691322304:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4106/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/ShapeMatchingPlugin/pull/1**; _For this build, ShapeMatchingPlugin/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ShapeMatchingPlugin; GIT_TAG bed3e279c688c4697ec9837b833c544ea6bb7ca2_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1691322304
https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1691322304:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4106/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/ShapeMatchingPlugin/pull/1**; _For this build, ShapeMatchingPlugin/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ShapeMatchingPlugin; GIT_TAG bed3e279c688c4697ec9837b833c544ea6bb7ca2_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1691322304
https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1691340537:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4106/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/ShapeMatchingPlugin/pull/1**; _For this build, ShapeMatchingPlugin/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ShapeMatchingPlugin; GIT_TAG bed3e279c688c4697ec9837b833c544ea6bb7ca2_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1691340537
https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1691340537:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4106/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/ShapeMatchingPlugin/pull/1**; _For this build, ShapeMatchingPlugin/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ShapeMatchingPlugin; GIT_TAG bed3e279c688c4697ec9837b833c544ea6bb7ca2_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1691340537
https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1692874585:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4106/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/ShapeMatchingPlugin/pull/1**; _For this build, ShapeMatchingPlugin/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ShapeMatchingPlugin; GIT_TAG bed3e279c688c4697ec9837b833c544ea6bb7ca2_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1692874585
https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1692874585:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4106/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/ShapeMatchingPlugin/pull/1**; _For this build, ShapeMatchingPlugin/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ShapeMatchingPlugin; GIT_TAG bed3e279c688c4697ec9837b833c544ea6bb7ca2_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1692874585
https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1693010070:38,Testability,test,tests,38,[ci-build][force-full-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1693010070
https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1693010263:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4106/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/ShapeMatchingPlugin/pull/1**; _For this build, ShapeMatchingPlugin/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ShapeMatchingPlugin; GIT_TAG bed3e279c688c4697ec9837b833c544ea6bb7ca2_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1693010263
https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1693010263:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4106/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/ShapeMatchingPlugin/pull/1**; _For this build, ShapeMatchingPlugin/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ShapeMatchingPlugin; GIT_TAG bed3e279c688c4697ec9837b833c544ea6bb7ca2_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1693010263
https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1694802914:38,Testability,test,tests,38,[ci-build][force-full-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1694802914
https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1694802953:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4106/7/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/ShapeMatchingPlugin/pull/1**; _For this build, ShapeMatchingPlugin/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ShapeMatchingPlugin; GIT_TAG bed3e279c688c4697ec9837b833c544ea6bb7ca2_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1694802953
https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1694802953:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4106/7/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/ShapeMatchingPlugin/pull/1**; _For this build, ShapeMatchingPlugin/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ShapeMatchingPlugin; GIT_TAG bed3e279c688c4697ec9837b833c544ea6bb7ca2_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1694802953
https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1695000838:38,Testability,test,tests,38,[ci-build][force-full-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1695000838
https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1695000912:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4106/8/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/ShapeMatchingPlugin/pull/1**; _For this build, ShapeMatchingPlugin/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ShapeMatchingPlugin; GIT_TAG bed3e279c688c4697ec9837b833c544ea6bb7ca2_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1695000912
https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1695000912:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4106/8/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/ShapeMatchingPlugin/pull/1**; _For this build, ShapeMatchingPlugin/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ShapeMatchingPlugin; GIT_TAG bed3e279c688c4697ec9837b833c544ea6bb7ca2_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1695000912
https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1698459778:38,Testability,test,tests,38,[ci-build][force-full-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1698459778
https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1698459870:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4106/9/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1698459870
https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1698459870:121,Integrability,depend,dependencies,121,**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4106/9/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1698459870
https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1698459870:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4106/9/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1698459870
https://github.com/sofa-framework/sofa/pull/4108#issuecomment-1692872106:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4108#issuecomment-1692872106
https://github.com/sofa-framework/sofa/pull/4110#issuecomment-1693805791:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4110#issuecomment-1693805791
https://github.com/sofa-framework/sofa/pull/4111#issuecomment-1693390042:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4111#issuecomment-1693390042
https://github.com/sofa-framework/sofa/pull/4112#issuecomment-1693389859:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4112#issuecomment-1693389859
https://github.com/sofa-framework/sofa/pull/4115#issuecomment-1695501832:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4115#issuecomment-1695501832
https://github.com/sofa-framework/sofa/pull/4116#issuecomment-1695501644:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4116#issuecomment-1695501644
https://github.com/sofa-framework/sofa/pull/4117#issuecomment-1695711515:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4117#issuecomment-1695711515
https://github.com/sofa-framework/sofa/pull/4118#issuecomment-1696757812:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4118#issuecomment-1696757812
https://github.com/sofa-framework/sofa/pull/4122#issuecomment-1698867376:531,Modifiability,parameteriz,parameterizations,531,"Looks like this particular case falls under the Euler angles singularities. The initial quaternion `q0` converted to Roll-Pitch-Yaw Euler angles has a pitch of `pi / 2`, which corresponds to a singularity case, i.e. there is no global and smooth solutions to the inverse problem of converting the rotation to Euler angles. In this particular case, one DOF is lost (I found the explanations of this quite intuitive and clear here: http://lavalle.pl/vr/node83.html ).; When we can afford it, a good way would be to only allow global parameterizations of SO(3) and simply not use Euler angles, but I guess we have reasons to have them in SOFA and have to deal with them.; I would not go to change anything in the `createQuaterFromEuler` or `toEulerVector` conversions functions, as to me they are valid as it and it is left to the user of Euler angles to know that they have to be used as their are, locally, as it is a local parameterization, i.e. not close to their singularities.; I guess this is what happened also in the random rotations failing tests.; What do you think about simply fixing our tests by excluding cases where quaternion `q0` is leading to a Euler angles singularity (here checking that pitch is not `pi / 2`), prior to converting them back to queternion `q1` ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4122#issuecomment-1698867376
https://github.com/sofa-framework/sofa/pull/4122#issuecomment-1698867376:923,Modifiability,parameteriz,parameterization,923,"Looks like this particular case falls under the Euler angles singularities. The initial quaternion `q0` converted to Roll-Pitch-Yaw Euler angles has a pitch of `pi / 2`, which corresponds to a singularity case, i.e. there is no global and smooth solutions to the inverse problem of converting the rotation to Euler angles. In this particular case, one DOF is lost (I found the explanations of this quite intuitive and clear here: http://lavalle.pl/vr/node83.html ).; When we can afford it, a good way would be to only allow global parameterizations of SO(3) and simply not use Euler angles, but I guess we have reasons to have them in SOFA and have to deal with them.; I would not go to change anything in the `createQuaterFromEuler` or `toEulerVector` conversions functions, as to me they are valid as it and it is left to the user of Euler angles to know that they have to be used as their are, locally, as it is a local parameterization, i.e. not close to their singularities.; I guess this is what happened also in the random rotations failing tests.; What do you think about simply fixing our tests by excluding cases where quaternion `q0` is leading to a Euler angles singularity (here checking that pitch is not `pi / 2`), prior to converting them back to queternion `q1` ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4122#issuecomment-1698867376
https://github.com/sofa-framework/sofa/pull/4122#issuecomment-1698867376:1048,Testability,test,tests,1048,"Looks like this particular case falls under the Euler angles singularities. The initial quaternion `q0` converted to Roll-Pitch-Yaw Euler angles has a pitch of `pi / 2`, which corresponds to a singularity case, i.e. there is no global and smooth solutions to the inverse problem of converting the rotation to Euler angles. In this particular case, one DOF is lost (I found the explanations of this quite intuitive and clear here: http://lavalle.pl/vr/node83.html ).; When we can afford it, a good way would be to only allow global parameterizations of SO(3) and simply not use Euler angles, but I guess we have reasons to have them in SOFA and have to deal with them.; I would not go to change anything in the `createQuaterFromEuler` or `toEulerVector` conversions functions, as to me they are valid as it and it is left to the user of Euler angles to know that they have to be used as their are, locally, as it is a local parameterization, i.e. not close to their singularities.; I guess this is what happened also in the random rotations failing tests.; What do you think about simply fixing our tests by excluding cases where quaternion `q0` is leading to a Euler angles singularity (here checking that pitch is not `pi / 2`), prior to converting them back to queternion `q1` ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4122#issuecomment-1698867376
https://github.com/sofa-framework/sofa/pull/4122#issuecomment-1698867376:1098,Testability,test,tests,1098,"Looks like this particular case falls under the Euler angles singularities. The initial quaternion `q0` converted to Roll-Pitch-Yaw Euler angles has a pitch of `pi / 2`, which corresponds to a singularity case, i.e. there is no global and smooth solutions to the inverse problem of converting the rotation to Euler angles. In this particular case, one DOF is lost (I found the explanations of this quite intuitive and clear here: http://lavalle.pl/vr/node83.html ).; When we can afford it, a good way would be to only allow global parameterizations of SO(3) and simply not use Euler angles, but I guess we have reasons to have them in SOFA and have to deal with them.; I would not go to change anything in the `createQuaterFromEuler` or `toEulerVector` conversions functions, as to me they are valid as it and it is left to the user of Euler angles to know that they have to be used as their are, locally, as it is a local parameterization, i.e. not close to their singularities.; I guess this is what happened also in the random rotations failing tests.; What do you think about simply fixing our tests by excluding cases where quaternion `q0` is leading to a Euler angles singularity (here checking that pitch is not `pi / 2`), prior to converting them back to queternion `q1` ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4122#issuecomment-1698867376
https://github.com/sofa-framework/sofa/pull/4122#issuecomment-1698867376:404,Usability,intuit,intuitive,404,"Looks like this particular case falls under the Euler angles singularities. The initial quaternion `q0` converted to Roll-Pitch-Yaw Euler angles has a pitch of `pi / 2`, which corresponds to a singularity case, i.e. there is no global and smooth solutions to the inverse problem of converting the rotation to Euler angles. In this particular case, one DOF is lost (I found the explanations of this quite intuitive and clear here: http://lavalle.pl/vr/node83.html ).; When we can afford it, a good way would be to only allow global parameterizations of SO(3) and simply not use Euler angles, but I guess we have reasons to have them in SOFA and have to deal with them.; I would not go to change anything in the `createQuaterFromEuler` or `toEulerVector` conversions functions, as to me they are valid as it and it is left to the user of Euler angles to know that they have to be used as their are, locally, as it is a local parameterization, i.e. not close to their singularities.; I guess this is what happened also in the random rotations failing tests.; What do you think about simply fixing our tests by excluding cases where quaternion `q0` is leading to a Euler angles singularity (here checking that pitch is not `pi / 2`), prior to converting them back to queternion `q1` ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4122#issuecomment-1698867376
https://github.com/sofa-framework/sofa/pull/4122#issuecomment-1698867376:418,Usability,clear,clear,418,"Looks like this particular case falls under the Euler angles singularities. The initial quaternion `q0` converted to Roll-Pitch-Yaw Euler angles has a pitch of `pi / 2`, which corresponds to a singularity case, i.e. there is no global and smooth solutions to the inverse problem of converting the rotation to Euler angles. In this particular case, one DOF is lost (I found the explanations of this quite intuitive and clear here: http://lavalle.pl/vr/node83.html ).; When we can afford it, a good way would be to only allow global parameterizations of SO(3) and simply not use Euler angles, but I guess we have reasons to have them in SOFA and have to deal with them.; I would not go to change anything in the `createQuaterFromEuler` or `toEulerVector` conversions functions, as to me they are valid as it and it is left to the user of Euler angles to know that they have to be used as their are, locally, as it is a local parameterization, i.e. not close to their singularities.; I guess this is what happened also in the random rotations failing tests.; What do you think about simply fixing our tests by excluding cases where quaternion `q0` is leading to a Euler angles singularity (here checking that pitch is not `pi / 2`), prior to converting them back to queternion `q1` ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4122#issuecomment-1698867376
https://github.com/sofa-framework/sofa/pull/4122#issuecomment-1698867376:562,Usability,simpl,simply,562,"Looks like this particular case falls under the Euler angles singularities. The initial quaternion `q0` converted to Roll-Pitch-Yaw Euler angles has a pitch of `pi / 2`, which corresponds to a singularity case, i.e. there is no global and smooth solutions to the inverse problem of converting the rotation to Euler angles. In this particular case, one DOF is lost (I found the explanations of this quite intuitive and clear here: http://lavalle.pl/vr/node83.html ).; When we can afford it, a good way would be to only allow global parameterizations of SO(3) and simply not use Euler angles, but I guess we have reasons to have them in SOFA and have to deal with them.; I would not go to change anything in the `createQuaterFromEuler` or `toEulerVector` conversions functions, as to me they are valid as it and it is left to the user of Euler angles to know that they have to be used as their are, locally, as it is a local parameterization, i.e. not close to their singularities.; I guess this is what happened also in the random rotations failing tests.; What do you think about simply fixing our tests by excluding cases where quaternion `q0` is leading to a Euler angles singularity (here checking that pitch is not `pi / 2`), prior to converting them back to queternion `q1` ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4122#issuecomment-1698867376
https://github.com/sofa-framework/sofa/pull/4122#issuecomment-1698867376:1080,Usability,simpl,simply,1080,"Looks like this particular case falls under the Euler angles singularities. The initial quaternion `q0` converted to Roll-Pitch-Yaw Euler angles has a pitch of `pi / 2`, which corresponds to a singularity case, i.e. there is no global and smooth solutions to the inverse problem of converting the rotation to Euler angles. In this particular case, one DOF is lost (I found the explanations of this quite intuitive and clear here: http://lavalle.pl/vr/node83.html ).; When we can afford it, a good way would be to only allow global parameterizations of SO(3) and simply not use Euler angles, but I guess we have reasons to have them in SOFA and have to deal with them.; I would not go to change anything in the `createQuaterFromEuler` or `toEulerVector` conversions functions, as to me they are valid as it and it is left to the user of Euler angles to know that they have to be used as their are, locally, as it is a local parameterization, i.e. not close to their singularities.; I guess this is what happened also in the random rotations failing tests.; What do you think about simply fixing our tests by excluding cases where quaternion `q0` is leading to a Euler angles singularity (here checking that pitch is not `pi / 2`), prior to converting them back to queternion `q1` ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4122#issuecomment-1698867376
https://github.com/sofa-framework/sofa/pull/4122#issuecomment-1699077289:156,Testability,test,test,156,"@olivier-roussel thanks for your complete answer. I came to the same conclusion as you. I just wanted to be sure that the result of `toEulerVector` in this test is the right one. I just tried on matlab, and it ends up with one of the angle to be pi/2.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4122#issuecomment-1699077289
https://github.com/sofa-framework/sofa/pull/4126#issuecomment-1707896418:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4126#issuecomment-1707896418
https://github.com/sofa-framework/sofa/pull/4127#issuecomment-1700903301:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4127#issuecomment-1700903301
https://github.com/sofa-framework/sofa/pull/4128#issuecomment-1707899768:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4128#issuecomment-1707899768
https://github.com/sofa-framework/sofa/pull/4129#issuecomment-1704663299:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4129#issuecomment-1704663299
https://github.com/sofa-framework/sofa/pull/4129#issuecomment-1706322524:17,Safety,avoid,avoids,17,"See #4133, as it avoids to write the default value in the description, hence avoids the problem of this PR",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4129#issuecomment-1706322524
https://github.com/sofa-framework/sofa/pull/4129#issuecomment-1706322524:77,Safety,avoid,avoids,77,"See #4133, as it avoids to write the default value in the description, hence avoids the problem of this PR",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4129#issuecomment-1706322524
https://github.com/sofa-framework/sofa/pull/4132#issuecomment-1706001305:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4132#issuecomment-1706001305
https://github.com/sofa-framework/sofa/pull/4133#issuecomment-1707797662:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4133#issuecomment-1707797662
https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1708072020:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1708072020
https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717065958:1782,Deployability,Update,UpdateVAndX,1782,alizeSystem; 7 	 3.23	 1 	 0.15	 0.40	 0.19	 0.04	 0.19	 0.30	.......resizeSystem; 7 	 3.41	 1 	 0.07	 0.40	 0.11	 0.05	 0.11	 0.18	.......clearSystem; 7 	 3.53	 1 	 0.01	 0.02	 0.01	 0 	 0.01	 0.02	.......initializeLocalMatrices; 6 	 3.54	 1 	 50.34	 52.60	 50.89	 0.41	 50.89	 81.62	......AssembleSystem; 7 	 3.54	 1 	 50.31	 52.58	 50.87	 0.41	 50.87	 81.58	.......buildMatrices; 8 	 3.54	 1 	 50.03	 52.24	 50.56	 0.40	 50.56	 81.10	........buildStiffness; 8 	 54.11	 1 	 0.28	 0.45	 0.30	 0.03	 0.30	 0.48	........buildMass; 8 	 54.40	 1 	 0 	 0 	 0 	 0 	 0 	 0 	........buildDamping; 8 	 54.40	 1 	 0 	 0 	 0 	 0 	 0 	 0 	........buildGeometricStiffness; 7 	 54.41	 1 	 0 	 0 	 0 	 0 	 0 	 0 	.......projectMappedMatrices; 7 	 54.41	 1 	 0.02	 0.03	 0.02	 0 	 0.02	 0.03	.......applyProjectiveConstraint; 4 	 54.43	 1 	 7.47	 8.01	 7.68	 0.11	 7.68	 12.32	....MBKSolve; 5 	 54.57	 1 	 7.31	 7.85	 7.52	 0.11	 7.52	 12.06	.....CG-Solve; 4 	 62.12	 1 	 0.01	 0.02	 0.01	 0 	 0.01	 0.02	....UpdateVAndX. --- . Normal : 27.3678 FPS. 2 	 0.04	 1 	 37.97	 39.96	 38.38	 0.34	 38.38	 99.38	..solve; 3 	 0.04	 1 	 37.96	 39.95	 38.38	 0.34	 38.38	 99.37	...Mechanical; 4 	 0.06	 1 	 1.70	 2.24	 1.88	 0.12	 1.88	 4.88	....ComputeForce; 4 	 1.94	 1 	 0.94	 1.23	 1.04	 0.06	 1.04	 2.68	....ComputeRHTerm; 4 	 2.98	 1 	 22.20	 23.41	 22.47	 0.18	 22.47	 58.17	....MBKBuild; 5 	 2.98	 1 	 22.20	 23.40	 22.46	 0.18	 22.46	 58.16	.....CG-setSystemMBKMatrix; 6 	 2.98	 1 	 0.01	 0.03	 0.02	 0 	 0.02	 0.04	......getContributors; 6 	 3 	 1 	 0.01	 0.01	 0.01	 0 	 0.01	 0.02	......buildMappingGraph; 6 	 3.01	 1 	 0.25	 0.56	 0.30	 0.04	 0.30	 0.77	......InitializeSystem; 7 	 3.01	 1 	 0.13	 0.28	 0.16	 0.03	 0.16	 0.41	.......resizeSystem; 7 	 3.17	 1 	 0.09	 0.25	 0.12	 0.02	 0.12	 0.32	.......clearSystem; 7 	 3.29	 1 	 0.01	 0.02	 0.01	 0 	 0.01	 0.04	.......initializeLocalMatrices; 6 	 3.31	 1 	 21.92	 22.80	 22.13	 0.15	 22.13	 57.31	......AssembleSystem; 7 	 3.31	 1 	 21.90	 22.77	 22.11	 0.14	 ,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717065958
https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717065958:3440,Deployability,Update,UpdateVAndX,3440,nstraint; 4 	 54.43	 1 	 7.47	 8.01	 7.68	 0.11	 7.68	 12.32	....MBKSolve; 5 	 54.57	 1 	 7.31	 7.85	 7.52	 0.11	 7.52	 12.06	.....CG-Solve; 4 	 62.12	 1 	 0.01	 0.02	 0.01	 0 	 0.01	 0.02	....UpdateVAndX. --- . Normal : 27.3678 FPS. 2 	 0.04	 1 	 37.97	 39.96	 38.38	 0.34	 38.38	 99.38	..solve; 3 	 0.04	 1 	 37.96	 39.95	 38.38	 0.34	 38.38	 99.37	...Mechanical; 4 	 0.06	 1 	 1.70	 2.24	 1.88	 0.12	 1.88	 4.88	....ComputeForce; 4 	 1.94	 1 	 0.94	 1.23	 1.04	 0.06	 1.04	 2.68	....ComputeRHTerm; 4 	 2.98	 1 	 22.20	 23.41	 22.47	 0.18	 22.47	 58.17	....MBKBuild; 5 	 2.98	 1 	 22.20	 23.40	 22.46	 0.18	 22.46	 58.16	.....CG-setSystemMBKMatrix; 6 	 2.98	 1 	 0.01	 0.03	 0.02	 0 	 0.02	 0.04	......getContributors; 6 	 3 	 1 	 0.01	 0.01	 0.01	 0 	 0.01	 0.02	......buildMappingGraph; 6 	 3.01	 1 	 0.25	 0.56	 0.30	 0.04	 0.30	 0.77	......InitializeSystem; 7 	 3.01	 1 	 0.13	 0.28	 0.16	 0.03	 0.16	 0.41	.......resizeSystem; 7 	 3.17	 1 	 0.09	 0.25	 0.12	 0.02	 0.12	 0.32	.......clearSystem; 7 	 3.29	 1 	 0.01	 0.02	 0.01	 0 	 0.01	 0.04	.......initializeLocalMatrices; 6 	 3.31	 1 	 21.92	 22.80	 22.13	 0.15	 22.13	 57.31	......AssembleSystem; 7 	 3.31	 1 	 21.90	 22.77	 22.11	 0.14	 22.11	 57.25	.......buildMatrices; 8 	 3.31	 1 	 21.62	 22.44	 21.82	 0.14	 21.82	 56.50	........buildStiffness; 8 	 25.13	 1 	 0.27	 0.33	 0.28	 0.01	 0.29	 0.74	........buildMass; 8 	 25.42	 1 	 0 	 0 	 0 	 0 	 0 	 0 	........buildDamping; 8 	 25.42	 1 	 0 	 0 	 0 	 0 	 0 	 0 	........buildGeometricStiffness; 7 	 25.42	 1 	 0 	 0 	 0 	 0 	 0 	 0 	.......projectMappedMatrices; 7 	 25.42	 1 	 0.02	 0.02	 0.02	 0 	 0.02	 0.05	.......applyProjectiveConstraint; 4 	 25.45	 1 	 12.80	 13.57	 12.96	 0.12	 12.96	 33.55	....MBKSolve; 5 	 25.63	 1 	 12.61	 13.31	 12.75	 0.11	 12.75	 33 	.....CG-Solve; 4 	 38.41	 1 	 0.01	 0.02	 0.01	 0 	 0.01	 0.03	....UpdateVAndX; ```. Here is the scene. ; [4000-Cantilever-CG.scn.zip](https://github.com/sofa-framework/sofa/files/12594473/4000-Cantilever-CG.scn.zip),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717065958
https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717065958:927,Usability,clear,clearSystem,927,"I tried it with a tetrahedron beam with a TetrahedronFEMForcefield (not parallel) and I don't have a speed up, it is quite the contrary : . ```; Parallel : 14.7546 FPS. 2 	 0.04	 1 	 61.29	 64.18	 62.09	 0.56	 62.09	 99.59	..solve; 3 	 0.04	 1 	 61.29	 64.18	 62.09	 0.56	 62.09	 99.59	...Mechanical; 4 	 0.06	 1 	 1.78	 2.54	 1.93	 0.14	 1.93	 3.09	....ComputeForce; 4 	 1.99	 1 	 1.01	 1.63	 1.20	 0.11	 1.20	 1.93	....ComputeRHTerm; 4 	 3.20	 1 	 50.63	 52.92	 51.24	 0.43	 51.24	 82.18	....MBKBuild; 5 	 3.20	 1 	 50.63	 52.92	 51.24	 0.43	 51.24	 82.18	.....CG-setSystemMBKMatrix; 6 	 3.20	 1 	 0.02	 0.02	 0.02	 0 	 0.02	 0.03	......getContributors; 6 	 3.22	 1 	 0.01	 0.01	 0.01	 0 	 0.01	 0.02	......buildMappingGraph; 6 	 3.23	 1 	 0.25	 0.82	 0.31	 0.08	 0.31	 0.50	......InitializeSystem; 7 	 3.23	 1 	 0.15	 0.40	 0.19	 0.04	 0.19	 0.30	.......resizeSystem; 7 	 3.41	 1 	 0.07	 0.40	 0.11	 0.05	 0.11	 0.18	.......clearSystem; 7 	 3.53	 1 	 0.01	 0.02	 0.01	 0 	 0.01	 0.02	.......initializeLocalMatrices; 6 	 3.54	 1 	 50.34	 52.60	 50.89	 0.41	 50.89	 81.62	......AssembleSystem; 7 	 3.54	 1 	 50.31	 52.58	 50.87	 0.41	 50.87	 81.58	.......buildMatrices; 8 	 3.54	 1 	 50.03	 52.24	 50.56	 0.40	 50.56	 81.10	........buildStiffness; 8 	 54.11	 1 	 0.28	 0.45	 0.30	 0.03	 0.30	 0.48	........buildMass; 8 	 54.40	 1 	 0 	 0 	 0 	 0 	 0 	 0 	........buildDamping; 8 	 54.40	 1 	 0 	 0 	 0 	 0 	 0 	 0 	........buildGeometricStiffness; 7 	 54.41	 1 	 0 	 0 	 0 	 0 	 0 	 0 	.......projectMappedMatrices; 7 	 54.41	 1 	 0.02	 0.03	 0.02	 0 	 0.02	 0.03	.......applyProjectiveConstraint; 4 	 54.43	 1 	 7.47	 8.01	 7.68	 0.11	 7.68	 12.32	....MBKSolve; 5 	 54.57	 1 	 7.31	 7.85	 7.52	 0.11	 7.52	 12.06	.....CG-Solve; 4 	 62.12	 1 	 0.01	 0.02	 0.01	 0 	 0.01	 0.02	....UpdateVAndX. --- . Normal : 27.3678 FPS. 2 	 0.04	 1 	 37.97	 39.96	 38.38	 0.34	 38.38	 99.38	..solve; 3 	 0.04	 1 	 37.96	 39.95	 38.38	 0.34	 38.38	 99.37	...Mechanical; 4 	 0.06	 1 	 1.70	 2.24	 1.88	 0.12	 1.88	 4.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717065958
https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717065958:2579,Usability,clear,clearSystem,2579,onstraint; 4 	 54.43	 1 	 7.47	 8.01	 7.68	 0.11	 7.68	 12.32	....MBKSolve; 5 	 54.57	 1 	 7.31	 7.85	 7.52	 0.11	 7.52	 12.06	.....CG-Solve; 4 	 62.12	 1 	 0.01	 0.02	 0.01	 0 	 0.01	 0.02	....UpdateVAndX. --- . Normal : 27.3678 FPS. 2 	 0.04	 1 	 37.97	 39.96	 38.38	 0.34	 38.38	 99.38	..solve; 3 	 0.04	 1 	 37.96	 39.95	 38.38	 0.34	 38.38	 99.37	...Mechanical; 4 	 0.06	 1 	 1.70	 2.24	 1.88	 0.12	 1.88	 4.88	....ComputeForce; 4 	 1.94	 1 	 0.94	 1.23	 1.04	 0.06	 1.04	 2.68	....ComputeRHTerm; 4 	 2.98	 1 	 22.20	 23.41	 22.47	 0.18	 22.47	 58.17	....MBKBuild; 5 	 2.98	 1 	 22.20	 23.40	 22.46	 0.18	 22.46	 58.16	.....CG-setSystemMBKMatrix; 6 	 2.98	 1 	 0.01	 0.03	 0.02	 0 	 0.02	 0.04	......getContributors; 6 	 3 	 1 	 0.01	 0.01	 0.01	 0 	 0.01	 0.02	......buildMappingGraph; 6 	 3.01	 1 	 0.25	 0.56	 0.30	 0.04	 0.30	 0.77	......InitializeSystem; 7 	 3.01	 1 	 0.13	 0.28	 0.16	 0.03	 0.16	 0.41	.......resizeSystem; 7 	 3.17	 1 	 0.09	 0.25	 0.12	 0.02	 0.12	 0.32	.......clearSystem; 7 	 3.29	 1 	 0.01	 0.02	 0.01	 0 	 0.01	 0.04	.......initializeLocalMatrices; 6 	 3.31	 1 	 21.92	 22.80	 22.13	 0.15	 22.13	 57.31	......AssembleSystem; 7 	 3.31	 1 	 21.90	 22.77	 22.11	 0.14	 22.11	 57.25	.......buildMatrices; 8 	 3.31	 1 	 21.62	 22.44	 21.82	 0.14	 21.82	 56.50	........buildStiffness; 8 	 25.13	 1 	 0.27	 0.33	 0.28	 0.01	 0.29	 0.74	........buildMass; 8 	 25.42	 1 	 0 	 0 	 0 	 0 	 0 	 0 	........buildDamping; 8 	 25.42	 1 	 0 	 0 	 0 	 0 	 0 	 0 	........buildGeometricStiffness; 7 	 25.42	 1 	 0 	 0 	 0 	 0 	 0 	 0 	.......projectMappedMatrices; 7 	 25.42	 1 	 0.02	 0.02	 0.02	 0 	 0.02	 0.05	.......applyProjectiveConstraint; 4 	 25.45	 1 	 12.80	 13.57	 12.96	 0.12	 12.96	 33.55	....MBKSolve; 5 	 25.63	 1 	 12.61	 13.31	 12.75	 0.11	 12.75	 33 	.....CG-Solve; 4 	 38.41	 1 	 0.01	 0.02	 0.01	 0 	 0.01	 0.03	....UpdateVAndX; ```. Here is the scene. ; [4000-Cantilever-CG.scn.zip](https://github.com/sofa-framework/sofa/files/12594473/4000-Cantilever-CG.scn.zip),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717065958
https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717164532:591,Deployability,Update,UpdateInternalDataVisitor,591,"@bakpaul you were right, and it is fixed now in https://github.com/sofa-framework/sofa/pull/4138/commits/c349e111debbcb377c5bbb7ad68610c15f336c52. Here is my benchmark:. ```; CGLinearSolver template=""CompressedRowSparseMatrixMat3x3d"". [INFO] [BatchGUI] 1000 iterations done in 72.7944 s ( 13.7373 FPS). Steps Duration Statistics (in ms) :; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 40.29 110.35 72.73 8.91 72732.7 100 TOTAL; 1 0 1 40.29 110.32 72.73 8.91 72.73 100 .Simulation::animate; 2 0.01 1 0 0.07 0 0 0 0 ..BehaviorUpdatePositionVisitor; 2 0.01 1 0 0.03 0 0 0 0.01 ..UpdateInternalDataVisitor; 2 0.01 1 0 0.04 0.01 0 0.01 0.01 ..resetConstraint; 2 0.02 1 0 0.02 0 0 0 0 ..collision; 2 0.03 1 0 0.03 0 0 0 0 ..propagateIntegrateBeginEvent; 2 0.03 1 0 0.02 0 0 0 0 ..beginIntegration; 2 0.03 1 0 0.07 0 0 0 0 ..buildConstraintMatrix; 2 0.03 1 0 0.03 0.01 0 0.01 0.01 ..accumulateMatrixDeriv; 2 0.04 1 40.07 109.99 72.48 8.91 72.48 99.65 ..solve; 3 0.04 1 40.07 109.98 72.47 8.90 72.47 99.65 ...Mechanical; 4 0.07 1 2.07 4.47 2.45 0.33 2.45 3.37 ....ComputeForce; 4 2.52 1 1.11 3.14 1.37 0.29 1.37 1.89 ....ComputeRHTerm; 4 3.89 1 34.04 71.94 36.80 2.11 36.80 50.60 ....MBKBuild; 5 3.90 1 34.03 71.91 36.79 2.11 36.79 50.58 .....CG-setSystemMBKMatrix; 6 3.90 1 0.03 0.21 0.04 0.01 0.04 0.05 ......getContributors; 6 3.94 1 0.02 0.17 0.02 0.01 0.02 0.03 ......buildMappingGraph; 6 3.96 1 0.25 2.56 0.72 0.17 0.72 0.98 ......InitializeSystem; 7 3.97 1 0.06 1.35 0.36 0.10 0.36 0.50 .......resizeSystem; 7 4.33 1 0.01 1.22 0.32 0.08 0.32 0.44 .......clearSystem; 7 4.65 1 0.02 0.27 0.03 0.01 0.03 0.04 .......initializeLocalMatrices; 6 4.68 1 33.38 71.55 36 2.08 36 49.49 ......AssembleSystem; 7 4.68 1 33.35 49.36 35.94 1.80 35.94 49.41 .......buildMatrices; 8 4.68 1 32.79 49.09 35.44 1.78 35.44 48.72 ........buildStiffness; 8 40.13 1 0.25 1.33 0.49 0.12 0.49 0.67 ........buildMass; 8 40.61 1 0 0.02 0 0 0 0.01 ........buildDamping; 8 40.62 1 0 0.02 0 0 0 0 ........buildGeometri",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717164532
https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717164532:2304,Deployability,Update,UpdateVAndX,2304,"......getContributors; 6 3.94 1 0.02 0.17 0.02 0.01 0.02 0.03 ......buildMappingGraph; 6 3.96 1 0.25 2.56 0.72 0.17 0.72 0.98 ......InitializeSystem; 7 3.97 1 0.06 1.35 0.36 0.10 0.36 0.50 .......resizeSystem; 7 4.33 1 0.01 1.22 0.32 0.08 0.32 0.44 .......clearSystem; 7 4.65 1 0.02 0.27 0.03 0.01 0.03 0.04 .......initializeLocalMatrices; 6 4.68 1 33.38 71.55 36 2.08 36 49.49 ......AssembleSystem; 7 4.68 1 33.35 49.36 35.94 1.80 35.94 49.41 .......buildMatrices; 8 4.68 1 32.79 49.09 35.44 1.78 35.44 48.72 ........buildStiffness; 8 40.13 1 0.25 1.33 0.49 0.12 0.49 0.67 ........buildMass; 8 40.61 1 0 0.02 0 0 0 0.01 ........buildDamping; 8 40.62 1 0 0.02 0 0 0 0 ........buildGeometricStiffness; 7 40.62 1 0 0.02 0 0 0 0 .......projectMappedMatrices; 7 40.63 1 0.02 22.18 0.05 0.70 0.05 0.07 .......applyProjectiveConstraint; 4 40.69 1 1.38 43.66 31.78 8.31 31.78 43.69 ....MBKSolve; 5 41.19 1 0.92 43.15 31.20 8.30 31.20 42.90 .....CG-Solve; 4 72.48 1 0.02 0.15 0.03 0.01 0.03 0.04 ....UpdateVAndX; ```. ```; ParallelCGLinearSolver template=""ParallelCompressedRowSparseMatrixMat3x3d"". [INFO] [BatchGUI] 1000 iterations done in 53.883 s ( 18.5587 FPS). Steps Duration Statistics (in ms) :; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 39.40 89.65 53.81 3.72 53810.7 100 TOTAL; 1 0 1 39.40 89.63 53.81 3.72 53.81 99.99 .Simulation::animate; 2 0.01 1 0 0.02 0 0 0 0 ..BehaviorUpdatePositionVisitor; 2 0.01 1 0 0.02 0 0 0 0.01 ..UpdateInternalDataVisitor; 2 0.01 1 0 0.04 0.01 0 0.01 0.01 ..resetConstraint; 2 0.02 1 0 0.07 0 0 0 0 ..collision; 2 0.02 1 0 0 0 0 0 0 ..propagateIntegrateBeginEvent; 2 0.03 1 0 0.02 0 0 0 0 ..beginIntegration; 2 0.03 1 0 0.06 0 0 0 0 ..buildConstraintMatrix; 2 0.03 1 0 0.02 0 0 0 0.01 ..accumulateMatrixDeriv; 2 0.04 1 39.17 89.35 53.58 3.72 53.58 99.57 ..solve; 3 0.04 1 39.17 89.34 53.57 3.72 53.57 99.56 ...Mechanical; 4 0.07 1 2.11 3.55 2.36 0.14 2.36 4.38 ....ComputeForce; 4 2.42 1 1.14 3.35 1.30 0.18 1.30 2.41 ....ComputeRHTerm; 4 3.72 1 33.78",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717164532
https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717164532:2758,Deployability,Update,UpdateInternalDataVisitor,2758,"ces; 8 4.68 1 32.79 49.09 35.44 1.78 35.44 48.72 ........buildStiffness; 8 40.13 1 0.25 1.33 0.49 0.12 0.49 0.67 ........buildMass; 8 40.61 1 0 0.02 0 0 0 0.01 ........buildDamping; 8 40.62 1 0 0.02 0 0 0 0 ........buildGeometricStiffness; 7 40.62 1 0 0.02 0 0 0 0 .......projectMappedMatrices; 7 40.63 1 0.02 22.18 0.05 0.70 0.05 0.07 .......applyProjectiveConstraint; 4 40.69 1 1.38 43.66 31.78 8.31 31.78 43.69 ....MBKSolve; 5 41.19 1 0.92 43.15 31.20 8.30 31.20 42.90 .....CG-Solve; 4 72.48 1 0.02 0.15 0.03 0.01 0.03 0.04 ....UpdateVAndX; ```. ```; ParallelCGLinearSolver template=""ParallelCompressedRowSparseMatrixMat3x3d"". [INFO] [BatchGUI] 1000 iterations done in 53.883 s ( 18.5587 FPS). Steps Duration Statistics (in ms) :; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 39.40 89.65 53.81 3.72 53810.7 100 TOTAL; 1 0 1 39.40 89.63 53.81 3.72 53.81 99.99 .Simulation::animate; 2 0.01 1 0 0.02 0 0 0 0 ..BehaviorUpdatePositionVisitor; 2 0.01 1 0 0.02 0 0 0 0.01 ..UpdateInternalDataVisitor; 2 0.01 1 0 0.04 0.01 0 0.01 0.01 ..resetConstraint; 2 0.02 1 0 0.07 0 0 0 0 ..collision; 2 0.02 1 0 0 0 0 0 0 ..propagateIntegrateBeginEvent; 2 0.03 1 0 0.02 0 0 0 0 ..beginIntegration; 2 0.03 1 0 0.06 0 0 0 0 ..buildConstraintMatrix; 2 0.03 1 0 0.02 0 0 0 0.01 ..accumulateMatrixDeriv; 2 0.04 1 39.17 89.35 53.58 3.72 53.58 99.57 ..solve; 3 0.04 1 39.17 89.34 53.57 3.72 53.57 99.56 ...Mechanical; 4 0.07 1 2.11 3.55 2.36 0.14 2.36 4.38 ....ComputeForce; 4 2.42 1 1.14 3.35 1.30 0.18 1.30 2.41 ....ComputeRHTerm; 4 3.72 1 33.78 68.54 35.78 1.50 35.78 66.50 ....MBKBuild; 5 3.73 1 33.77 68.51 35.78 1.50 35.78 66.48 .....CG-setSystemMBKMatrix; 6 3.73 1 0.03 0.14 0.04 0.01 0.04 0.07 ......getContributors; 6 3.77 1 0.02 0.21 0.02 0.01 0.02 0.04 ......buildMappingGraph; 6 3.79 1 0.26 1.60 0.70 0.10 0.70 1.29 ......InitializeSystem; 7 3.79 1 0.09 1.18 0.36 0.06 0.36 0.67 .......resizeSystem; 7 4.16 1 0.01 0.69 0.30 0.04 0.30 0.56 .......clearSystem; 7 4.46 1 0.02 0.17 0.02 0.01 0.02 0.0",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717164532
https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717164532:4460,Deployability,Update,UpdateVAndX,4460,) :; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 39.40 89.65 53.81 3.72 53810.7 100 TOTAL; 1 0 1 39.40 89.63 53.81 3.72 53.81 99.99 .Simulation::animate; 2 0.01 1 0 0.02 0 0 0 0 ..BehaviorUpdatePositionVisitor; 2 0.01 1 0 0.02 0 0 0 0.01 ..UpdateInternalDataVisitor; 2 0.01 1 0 0.04 0.01 0 0.01 0.01 ..resetConstraint; 2 0.02 1 0 0.07 0 0 0 0 ..collision; 2 0.02 1 0 0 0 0 0 0 ..propagateIntegrateBeginEvent; 2 0.03 1 0 0.02 0 0 0 0 ..beginIntegration; 2 0.03 1 0 0.06 0 0 0 0 ..buildConstraintMatrix; 2 0.03 1 0 0.02 0 0 0 0.01 ..accumulateMatrixDeriv; 2 0.04 1 39.17 89.35 53.58 3.72 53.58 99.57 ..solve; 3 0.04 1 39.17 89.34 53.57 3.72 53.57 99.56 ...Mechanical; 4 0.07 1 2.11 3.55 2.36 0.14 2.36 4.38 ....ComputeForce; 4 2.42 1 1.14 3.35 1.30 0.18 1.30 2.41 ....ComputeRHTerm; 4 3.72 1 33.78 68.54 35.78 1.50 35.78 66.50 ....MBKBuild; 5 3.73 1 33.77 68.51 35.78 1.50 35.78 66.48 .....CG-setSystemMBKMatrix; 6 3.73 1 0.03 0.14 0.04 0.01 0.04 0.07 ......getContributors; 6 3.77 1 0.02 0.21 0.02 0.01 0.02 0.04 ......buildMappingGraph; 6 3.79 1 0.26 1.60 0.70 0.10 0.70 1.29 ......InitializeSystem; 7 3.79 1 0.09 1.18 0.36 0.06 0.36 0.67 .......resizeSystem; 7 4.16 1 0.01 0.69 0.30 0.04 0.30 0.56 .......clearSystem; 7 4.46 1 0.02 0.17 0.02 0.01 0.02 0.05 .......initializeLocalMatrices; 6 4.49 1 33.12 68.12 35.01 1.48 35.01 65.06 ......AssembleSystem; 7 4.49 1 33.09 47.99 34.95 1.13 34.95 64.95 .......buildMatrices; 8 4.49 1 32.71 47.75 34.52 1.10 34.52 64.16 ........buildStiffness; 8 39.02 1 0.23 1.13 0.41 0.08 0.41 0.77 ........buildMass; 8 39.43 1 0 0.02 0 0 0 0.01 ........buildDamping; 8 39.44 1 0 0.02 0 0 0 0 ........buildGeometricStiffness; 7 39.44 1 0 0 0 0 0 0 .......projectMappedMatrices; 7 39.44 1 0.02 20.12 0.05 0.63 0.05 0.09 .......applyProjectiveConstraint; 4 39.51 1 0.85 21.84 14.06 3.56 14.06 26.13 ....MBKSolve; 5 39.83 1 0.51 21.43 13.67 3.56 13.67 25.41 .....CG-Solve; 4 53.57 1 0.02 0.07 0.02 0 0.02 0.05 ....UpdateVAndX; ```. Thanks for having tried!,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717164532
https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717164532:158,Testability,benchmark,benchmark,158,"@bakpaul you were right, and it is fixed now in https://github.com/sofa-framework/sofa/pull/4138/commits/c349e111debbcb377c5bbb7ad68610c15f336c52. Here is my benchmark:. ```; CGLinearSolver template=""CompressedRowSparseMatrixMat3x3d"". [INFO] [BatchGUI] 1000 iterations done in 72.7944 s ( 13.7373 FPS). Steps Duration Statistics (in ms) :; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 40.29 110.35 72.73 8.91 72732.7 100 TOTAL; 1 0 1 40.29 110.32 72.73 8.91 72.73 100 .Simulation::animate; 2 0.01 1 0 0.07 0 0 0 0 ..BehaviorUpdatePositionVisitor; 2 0.01 1 0 0.03 0 0 0 0.01 ..UpdateInternalDataVisitor; 2 0.01 1 0 0.04 0.01 0 0.01 0.01 ..resetConstraint; 2 0.02 1 0 0.02 0 0 0 0 ..collision; 2 0.03 1 0 0.03 0 0 0 0 ..propagateIntegrateBeginEvent; 2 0.03 1 0 0.02 0 0 0 0 ..beginIntegration; 2 0.03 1 0 0.07 0 0 0 0 ..buildConstraintMatrix; 2 0.03 1 0 0.03 0.01 0 0.01 0.01 ..accumulateMatrixDeriv; 2 0.04 1 40.07 109.99 72.48 8.91 72.48 99.65 ..solve; 3 0.04 1 40.07 109.98 72.47 8.90 72.47 99.65 ...Mechanical; 4 0.07 1 2.07 4.47 2.45 0.33 2.45 3.37 ....ComputeForce; 4 2.52 1 1.11 3.14 1.37 0.29 1.37 1.89 ....ComputeRHTerm; 4 3.89 1 34.04 71.94 36.80 2.11 36.80 50.60 ....MBKBuild; 5 3.90 1 34.03 71.91 36.79 2.11 36.79 50.58 .....CG-setSystemMBKMatrix; 6 3.90 1 0.03 0.21 0.04 0.01 0.04 0.05 ......getContributors; 6 3.94 1 0.02 0.17 0.02 0.01 0.02 0.03 ......buildMappingGraph; 6 3.96 1 0.25 2.56 0.72 0.17 0.72 0.98 ......InitializeSystem; 7 3.97 1 0.06 1.35 0.36 0.10 0.36 0.50 .......resizeSystem; 7 4.33 1 0.01 1.22 0.32 0.08 0.32 0.44 .......clearSystem; 7 4.65 1 0.02 0.27 0.03 0.01 0.03 0.04 .......initializeLocalMatrices; 6 4.68 1 33.38 71.55 36 2.08 36 49.49 ......AssembleSystem; 7 4.68 1 33.35 49.36 35.94 1.80 35.94 49.41 .......buildMatrices; 8 4.68 1 32.79 49.09 35.44 1.78 35.44 48.72 ........buildStiffness; 8 40.13 1 0.25 1.33 0.49 0.12 0.49 0.67 ........buildMass; 8 40.61 1 0 0.02 0 0 0 0.01 ........buildDamping; 8 40.62 1 0 0.02 0 0 0 0 ........buildGeometri",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717164532
https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717164532:1568,Usability,clear,clearSystem,1568,"3 0 0 0 0.01 ..UpdateInternalDataVisitor; 2 0.01 1 0 0.04 0.01 0 0.01 0.01 ..resetConstraint; 2 0.02 1 0 0.02 0 0 0 0 ..collision; 2 0.03 1 0 0.03 0 0 0 0 ..propagateIntegrateBeginEvent; 2 0.03 1 0 0.02 0 0 0 0 ..beginIntegration; 2 0.03 1 0 0.07 0 0 0 0 ..buildConstraintMatrix; 2 0.03 1 0 0.03 0.01 0 0.01 0.01 ..accumulateMatrixDeriv; 2 0.04 1 40.07 109.99 72.48 8.91 72.48 99.65 ..solve; 3 0.04 1 40.07 109.98 72.47 8.90 72.47 99.65 ...Mechanical; 4 0.07 1 2.07 4.47 2.45 0.33 2.45 3.37 ....ComputeForce; 4 2.52 1 1.11 3.14 1.37 0.29 1.37 1.89 ....ComputeRHTerm; 4 3.89 1 34.04 71.94 36.80 2.11 36.80 50.60 ....MBKBuild; 5 3.90 1 34.03 71.91 36.79 2.11 36.79 50.58 .....CG-setSystemMBKMatrix; 6 3.90 1 0.03 0.21 0.04 0.01 0.04 0.05 ......getContributors; 6 3.94 1 0.02 0.17 0.02 0.01 0.02 0.03 ......buildMappingGraph; 6 3.96 1 0.25 2.56 0.72 0.17 0.72 0.98 ......InitializeSystem; 7 3.97 1 0.06 1.35 0.36 0.10 0.36 0.50 .......resizeSystem; 7 4.33 1 0.01 1.22 0.32 0.08 0.32 0.44 .......clearSystem; 7 4.65 1 0.02 0.27 0.03 0.01 0.03 0.04 .......initializeLocalMatrices; 6 4.68 1 33.38 71.55 36 2.08 36 49.49 ......AssembleSystem; 7 4.68 1 33.35 49.36 35.94 1.80 35.94 49.41 .......buildMatrices; 8 4.68 1 32.79 49.09 35.44 1.78 35.44 48.72 ........buildStiffness; 8 40.13 1 0.25 1.33 0.49 0.12 0.49 0.67 ........buildMass; 8 40.61 1 0 0.02 0 0 0 0.01 ........buildDamping; 8 40.62 1 0 0.02 0 0 0 0 ........buildGeometricStiffness; 7 40.62 1 0 0.02 0 0 0 0 .......projectMappedMatrices; 7 40.63 1 0.02 22.18 0.05 0.70 0.05 0.07 .......applyProjectiveConstraint; 4 40.69 1 1.38 43.66 31.78 8.31 31.78 43.69 ....MBKSolve; 5 41.19 1 0.92 43.15 31.20 8.30 31.20 42.90 .....CG-Solve; 4 72.48 1 0.02 0.15 0.03 0.01 0.03 0.04 ....UpdateVAndX; ```. ```; ParallelCGLinearSolver template=""ParallelCompressedRowSparseMatrixMat3x3d"". [INFO] [BatchGUI] 1000 iterations done in 53.883 s ( 18.5587 FPS). Steps Duration Statistics (in ms) :; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 39.40 89.6",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717164532
https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717164532:3724,Usability,clear,clearSystem,3724,) :; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 39.40 89.65 53.81 3.72 53810.7 100 TOTAL; 1 0 1 39.40 89.63 53.81 3.72 53.81 99.99 .Simulation::animate; 2 0.01 1 0 0.02 0 0 0 0 ..BehaviorUpdatePositionVisitor; 2 0.01 1 0 0.02 0 0 0 0.01 ..UpdateInternalDataVisitor; 2 0.01 1 0 0.04 0.01 0 0.01 0.01 ..resetConstraint; 2 0.02 1 0 0.07 0 0 0 0 ..collision; 2 0.02 1 0 0 0 0 0 0 ..propagateIntegrateBeginEvent; 2 0.03 1 0 0.02 0 0 0 0 ..beginIntegration; 2 0.03 1 0 0.06 0 0 0 0 ..buildConstraintMatrix; 2 0.03 1 0 0.02 0 0 0 0.01 ..accumulateMatrixDeriv; 2 0.04 1 39.17 89.35 53.58 3.72 53.58 99.57 ..solve; 3 0.04 1 39.17 89.34 53.57 3.72 53.57 99.56 ...Mechanical; 4 0.07 1 2.11 3.55 2.36 0.14 2.36 4.38 ....ComputeForce; 4 2.42 1 1.14 3.35 1.30 0.18 1.30 2.41 ....ComputeRHTerm; 4 3.72 1 33.78 68.54 35.78 1.50 35.78 66.50 ....MBKBuild; 5 3.73 1 33.77 68.51 35.78 1.50 35.78 66.48 .....CG-setSystemMBKMatrix; 6 3.73 1 0.03 0.14 0.04 0.01 0.04 0.07 ......getContributors; 6 3.77 1 0.02 0.21 0.02 0.01 0.02 0.04 ......buildMappingGraph; 6 3.79 1 0.26 1.60 0.70 0.10 0.70 1.29 ......InitializeSystem; 7 3.79 1 0.09 1.18 0.36 0.06 0.36 0.67 .......resizeSystem; 7 4.16 1 0.01 0.69 0.30 0.04 0.30 0.56 .......clearSystem; 7 4.46 1 0.02 0.17 0.02 0.01 0.02 0.05 .......initializeLocalMatrices; 6 4.49 1 33.12 68.12 35.01 1.48 35.01 65.06 ......AssembleSystem; 7 4.49 1 33.09 47.99 34.95 1.13 34.95 64.95 .......buildMatrices; 8 4.49 1 32.71 47.75 34.52 1.10 34.52 64.16 ........buildStiffness; 8 39.02 1 0.23 1.13 0.41 0.08 0.41 0.77 ........buildMass; 8 39.43 1 0 0.02 0 0 0 0.01 ........buildDamping; 8 39.44 1 0 0.02 0 0 0 0 ........buildGeometricStiffness; 7 39.44 1 0 0 0 0 0 0 .......projectMappedMatrices; 7 39.44 1 0.02 20.12 0.05 0.63 0.05 0.09 .......applyProjectiveConstraint; 4 39.51 1 0.85 21.84 14.06 3.56 14.06 26.13 ....MBKSolve; 5 39.83 1 0.51 21.43 13.67 3.56 13.67 25.41 .....CG-Solve; 4 53.57 1 0.02 0.07 0.02 0 0.02 0.05 ....UpdateVAndX; ```. Thanks for having tried!,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717164532
https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717174394:32,Testability,test,test,32,"Should we add a regression or a test for `ParallelCGLinearSolver.scn` to check the MT and the non-MT version, if they get both the same result ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717174394
https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717181731:29,Modifiability,plugin,plugin,29,@fredroy Is it possible in a plugin?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717181731
https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717186150:31,Modifiability,plugin,plugin,31,"> @fredroy Is it possible in a plugin?. Hum you are right, it is possible to do it in a plugin but the CI (jenkins) wont do it automatically I think üë∫",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717186150
https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717186150:88,Modifiability,plugin,plugin,88,"> @fredroy Is it possible in a plugin?. Hum you are right, it is possible to do it in a plugin but the CI (jenkins) wont do it automatically I think üë∫",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717186150
https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1719391944:13,Testability,test,test,13,A regression test must be added,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1719391944
https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1721271430:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4138/8/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/50**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 689caa304997f104a984cb8a58f8061f7aabeeeb_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1721271430
https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1721271430:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4138/8/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/50**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 689caa304997f104a984cb8a58f8061f7aabeeeb_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1721271430
https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1721274955:85,Testability,test,test,85,"To please both @hugtalbot and @fredroy, I did the following:; - I added a regression test on the introduced scene, keeping only one beam; - I generated the regression reference with the single threaded version => the scene runs with the multithreaded version but compare to the single threaded one",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1721274955
https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1722600205:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1722600205
https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1722600238:6,Integrability,depend,depends-on,6,"**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4138/9/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/50**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 689caa304997f104a984cb8a58f8061f7aabeeeb_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1722600238
https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1722600238:20,Safety,detect,detected,20,"**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4138/9/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/50**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 689caa304997f104a984cb8a58f8061f7aabeeeb_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1722600238
https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1725055024:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1725055024
https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1725055257:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4138/10/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1725055257
https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1725055257:123,Integrability,depend,dependencies,123,**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4138/10/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1725055257
https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1725055257:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4138/10/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1725055257
https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1736845464:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4138/11/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1736845464
https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1736845464:123,Integrability,depend,dependencies,123,**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4138/11/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1736845464
https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1736845464:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4138/11/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1736845464
https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1740905944:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4138/12/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1740905944
https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1740905944:123,Integrability,depend,dependencies,123,**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4138/12/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1740905944
https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1740905944:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4138/12/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1740905944
https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1744539037:6,Integrability,depend,depends-on,6,**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4138/13/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1744539037
https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1744539037:123,Integrability,depend,dependencies,123,**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4138/13/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1744539037
https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1744539037:20,Safety,detect,detected,20,**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4138/13/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1744539037
https://github.com/sofa-framework/sofa/pull/4142#issuecomment-1711588504:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4142#issuecomment-1711588504
https://github.com/sofa-framework/sofa/pull/4142#issuecomment-1716347718:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4142#issuecomment-1716347718
https://github.com/sofa-framework/sofa/pull/4144#issuecomment-1710085356:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4144#issuecomment-1710085356
https://github.com/sofa-framework/sofa/pull/4148#issuecomment-1711587898:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4148#issuecomment-1711587898
https://github.com/sofa-framework/sofa/pull/4148#issuecomment-1714750373:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4148#issuecomment-1714750373
https://github.com/sofa-framework/sofa/pull/4149#issuecomment-1711587552:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4149#issuecomment-1711587552
https://github.com/sofa-framework/sofa/pull/4149#issuecomment-1714752083:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4149#issuecomment-1714752083
https://github.com/sofa-framework/sofa/pull/4150#issuecomment-1711586659:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4150#issuecomment-1711586659
https://github.com/sofa-framework/sofa/pull/4150#issuecomment-1715047574:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4150#issuecomment-1715047574
https://github.com/sofa-framework/sofa/pull/4151#issuecomment-1711587256:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4151#issuecomment-1711587256
https://github.com/sofa-framework/sofa/pull/4151#issuecomment-1721208137:32,Deployability,update,updateOnResize,32,"@epernod it means the function `updateOnResize()` is called at init?; I fear that if we delete all DOFs during a simulation, when we add new DOFs again, `d_vertexMass` is set to zero therefore:; `d_totalMass.setValue(Real(newSize) * Real(d_vertexMass.getValue()));`. the total mass will always remain null",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4151#issuecomment-1721208137
https://github.com/sofa-framework/sofa/pull/4151#issuecomment-1721224696:34,Deployability,update,updateOnResize,34,"> @epernod it means the function `updateOnResize()` is called at init? I fear that if we delete all DOFs during a simulation, when we add new DOFs again, `d_vertexMass` is set to zero therefore: `d_totalMass.setValue(Real(newSize) * Real(d_vertexMass.getValue()));`; > ; > the total mass will always remain null. yes that is why I remove the d_vertexMax setValue(0). If you know you will add/remove dofs, you should rely on the d_vertexMax which doesn't change inside the code.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4151#issuecomment-1721224696
https://github.com/sofa-framework/sofa/pull/4151#issuecomment-1725491705:42,Security,access,access,42,"Have you checked then in the code that no access to vertexMass is done in any other function without checking the ""newSize"" ? @epernod",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4151#issuecomment-1725491705
https://github.com/sofa-framework/sofa/pull/4151#issuecomment-1726442647:208,Deployability,update,updateMassOnResize,208,"> Have you checked then in the code that no access to vertexMass is done in any other function without checking the ""newSize"" ? @epernod. sorry I'm not sure to understand the point. I'm modifying the method `updateMassOnResize` which is a callback called when the number of dof has changed. From my understanding the VertexMass value should not change when the number of dof change, only the totalMass. if we need to add more check in all method to check the size, this means the callback mechanism is useless no? and if it is.. what about us @hugtalbot üòÜ ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4151#issuecomment-1726442647
https://github.com/sofa-framework/sofa/pull/4151#issuecomment-1726442647:44,Security,access,access,44,"> Have you checked then in the code that no access to vertexMass is done in any other function without checking the ""newSize"" ? @epernod. sorry I'm not sure to understand the point. I'm modifying the method `updateMassOnResize` which is a callback called when the number of dof has changed. From my understanding the VertexMass value should not change when the number of dof change, only the totalMass. if we need to add more check in all method to check the size, this means the callback mechanism is useless no? and if it is.. what about us @hugtalbot üòÜ ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4151#issuecomment-1726442647
https://github.com/sofa-framework/sofa/pull/4158#issuecomment-1717185932:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4158#issuecomment-1717185932
https://github.com/sofa-framework/sofa/pull/4158#issuecomment-1725498861:39,Performance,Perform,Performance,39,It would be awesome to add this in the Performance documentation :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4158#issuecomment-1725498861
https://github.com/sofa-framework/sofa/pull/4158#issuecomment-1728994383:99,Testability,test,tests,99,"I'll check how difficult it is to write this component for BTD.; In the meantime, I also have unit tests to fix.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4158#issuecomment-1728994383
https://github.com/sofa-framework/sofa/pull/4158#issuecomment-1729507355:20,Testability,test,tests,20,[ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4158#issuecomment-1729507355
https://github.com/sofa-framework/sofa/issues/4159#issuecomment-1716050172:128,Deployability,Install,Installation,128,"Make sure you have Python 3.8.; Overall, read carefully the documentation: https://sofapython3.readthedocs.io/en/latest/content/Installation.html",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4159#issuecomment-1716050172
https://github.com/sofa-framework/sofa/pull/4160#issuecomment-1716368698:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4160#issuecomment-1716368698
https://github.com/sofa-framework/sofa/pull/4160#issuecomment-1728381443:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4160#issuecomment-1728381443
https://github.com/sofa-framework/sofa/pull/4163#issuecomment-1736877347:307,Performance,load,loaders,307,"This PR is removing some usefull mechanism (VTK and LightManager). In order to pass this PR, those two component would require to provide those controller and not just say ""you should code them"". One solution would be to remove them from the PR before merging it. ; (By the way, an issue regarding the mesh loaders and exporters will be created to be discussed and uniformised during the STC)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4163#issuecomment-1736877347
https://github.com/sofa-framework/sofa/pull/4163#issuecomment-1737430587:244,Integrability,interface,interfaces,244,"Hello thank you for the feedback,. I'm strongly reluctant to hard code in c++ trivial keyboard controller because there is a lot of boilerplate code and because this also encourage software obesity by having all the application specific's user interfaces in Sofa Core, think about just changing the keypress ""a"" to ""b"" without recompiling sofa. . But I'm ok to implement that in a python controllers, does it would be ok ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4163#issuecomment-1737430587
https://github.com/sofa-framework/sofa/pull/4163#issuecomment-1737430587:24,Usability,feedback,feedback,24,"Hello thank you for the feedback,. I'm strongly reluctant to hard code in c++ trivial keyboard controller because there is a lot of boilerplate code and because this also encourage software obesity by having all the application specific's user interfaces in Sofa Core, think about just changing the keypress ""a"" to ""b"" without recompiling sofa. . But I'm ok to implement that in a python controllers, does it would be ok ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4163#issuecomment-1737430587
https://github.com/sofa-framework/sofa/pull/4163#issuecomment-2068349946:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4163#issuecomment-2068349946
https://github.com/sofa-framework/sofa/pull/4164#issuecomment-1717332836:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4164#issuecomment-1717332836
https://github.com/sofa-framework/sofa/pull/4165#issuecomment-1717335803:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4165#issuecomment-1717335803
https://github.com/sofa-framework/sofa/pull/4165#issuecomment-1718441732:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4165#issuecomment-1718441732
https://github.com/sofa-framework/sofa/pull/4168#issuecomment-1721325089:58,Integrability,message,messages,58,"It's not perfect. The progress bar interacts with console messages (`msg_info`, `std::cout` etc), but it behaves well when the message is longer than the progress bar. Otherwise, both are mixed on a single line. It still does not behave correctly after a ctrl+c in a infinite loop (`runSofa -n infinite`). I also made some threading experiment in the case of infinite loop but no success. I wanted to add a command line option to hide the progress bar if needed. I wanted to add it only for BatchGUI, but it seems that parsing crashes for unkown arguments (the loading of the gui is after the parse). Maybe the help of @fredroy would be needed here (if we decide to go on).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4168#issuecomment-1721325089
https://github.com/sofa-framework/sofa/pull/4168#issuecomment-1721325089:127,Integrability,message,message,127,"It's not perfect. The progress bar interacts with console messages (`msg_info`, `std::cout` etc), but it behaves well when the message is longer than the progress bar. Otherwise, both are mixed on a single line. It still does not behave correctly after a ctrl+c in a infinite loop (`runSofa -n infinite`). I also made some threading experiment in the case of infinite loop but no success. I wanted to add a command line option to hide the progress bar if needed. I wanted to add it only for BatchGUI, but it seems that parsing crashes for unkown arguments (the loading of the gui is after the parse). Maybe the help of @fredroy would be needed here (if we decide to go on).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4168#issuecomment-1721325089
https://github.com/sofa-framework/sofa/pull/4168#issuecomment-1721325089:561,Performance,load,loading,561,"It's not perfect. The progress bar interacts with console messages (`msg_info`, `std::cout` etc), but it behaves well when the message is longer than the progress bar. Otherwise, both are mixed on a single line. It still does not behave correctly after a ctrl+c in a infinite loop (`runSofa -n infinite`). I also made some threading experiment in the case of infinite loop but no success. I wanted to add a command line option to hide the progress bar if needed. I wanted to add it only for BatchGUI, but it seems that parsing crashes for unkown arguments (the loading of the gui is after the parse). Maybe the help of @fredroy would be needed here (if we decide to go on).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4168#issuecomment-1721325089
https://github.com/sofa-framework/sofa/pull/4168#issuecomment-1721325089:22,Usability,progress bar,progress bar,22,"It's not perfect. The progress bar interacts with console messages (`msg_info`, `std::cout` etc), but it behaves well when the message is longer than the progress bar. Otherwise, both are mixed on a single line. It still does not behave correctly after a ctrl+c in a infinite loop (`runSofa -n infinite`). I also made some threading experiment in the case of infinite loop but no success. I wanted to add a command line option to hide the progress bar if needed. I wanted to add it only for BatchGUI, but it seems that parsing crashes for unkown arguments (the loading of the gui is after the parse). Maybe the help of @fredroy would be needed here (if we decide to go on).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4168#issuecomment-1721325089
https://github.com/sofa-framework/sofa/pull/4168#issuecomment-1721325089:154,Usability,progress bar,progress bar,154,"It's not perfect. The progress bar interacts with console messages (`msg_info`, `std::cout` etc), but it behaves well when the message is longer than the progress bar. Otherwise, both are mixed on a single line. It still does not behave correctly after a ctrl+c in a infinite loop (`runSofa -n infinite`). I also made some threading experiment in the case of infinite loop but no success. I wanted to add a command line option to hide the progress bar if needed. I wanted to add it only for BatchGUI, but it seems that parsing crashes for unkown arguments (the loading of the gui is after the parse). Maybe the help of @fredroy would be needed here (if we decide to go on).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4168#issuecomment-1721325089
https://github.com/sofa-framework/sofa/pull/4168#issuecomment-1721325089:439,Usability,progress bar,progress bar,439,"It's not perfect. The progress bar interacts with console messages (`msg_info`, `std::cout` etc), but it behaves well when the message is longer than the progress bar. Otherwise, both are mixed on a single line. It still does not behave correctly after a ctrl+c in a infinite loop (`runSofa -n infinite`). I also made some threading experiment in the case of infinite loop but no success. I wanted to add a command line option to hide the progress bar if needed. I wanted to add it only for BatchGUI, but it seems that parsing crashes for unkown arguments (the loading of the gui is after the parse). Maybe the help of @fredroy would be needed here (if we decide to go on).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4168#issuecomment-1721325089
https://github.com/sofa-framework/sofa/pull/4168#issuecomment-1736889249:13,Deployability,update,update,13,TODO:. - [x] update cxxopts version from 2.2.1 to 3.1.1; - [x] add command line argument (`hideProgressBar`); - [x] add lib license,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4168#issuecomment-1736889249
https://github.com/sofa-framework/sofa/pull/4168#issuecomment-1744540880:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4168#issuecomment-1744540880
https://github.com/sofa-framework/sofa/pull/4170#issuecomment-1718851675:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4170#issuecomment-1718851675
https://github.com/sofa-framework/sofa/pull/4170#issuecomment-1724639188:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4170#issuecomment-1724639188
https://github.com/sofa-framework/sofa/pull/4172#issuecomment-1727535531:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4172#issuecomment-1727535531
https://github.com/sofa-framework/sofa/pull/4172#issuecomment-1736893649:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4172#issuecomment-1736893649
https://github.com/sofa-framework/sofa/pull/4172#issuecomment-1746395138:57,Deployability,update,updated,57,Ready :+1: ; @alxbilger it would be cool to have the doc updated accordingly,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4172#issuecomment-1746395138
https://github.com/sofa-framework/sofa/pull/4177#issuecomment-1724638705:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4177#issuecomment-1724638705
https://github.com/sofa-framework/sofa/pull/4179#issuecomment-1723731877:86,Modifiability,plugin,plugin,86,"@fredroy a feedback from Hadrien from #3894. A crash is occuring from the SofaCUDALDI plugin, but it does concern SOFA.; The crash has been noticed when constraints are added on a ""non-mechanical"" object, aka a passive/non-moving object used for the collision detection (MechanicalObject with no solver). In the SofaCUDALDI plugin the following code is written : . ``` cpp; MatrixDerivRowConstIterator1 Re1= c1.readLine(c.myCId);; MatrixDerivRowConstIterator2 Re2= c2.readLine(c.myCId);; ; for (MatrixDerivColIterator1 it=Re1.begin(); it!=Re1.end();++it); {; //unsigned int dof = itSvd1->first;; dx1+= it.val(); //x1Free[dof] - x1[dof];; }; ```. while in CompressedRowSparseMatrixConstraint.h there is: ; ``` cpp; ColConstIterator begin() const; {; Range r = m_matrix->getRowRange(m_internal);; return ColConstIterator(m_internal, r.begin(), m_matrix);; }; ```. and in CompressedRowSparseMatrixGeneric.h :; ``` cpp ; Range getRowRange(Index id) const { return Range(rowBegin[id], rowBegin[id+1]); }. ``` . where rowBegin is empty. Hadrien explained that in a CRM structure, 2 values are required minimum in order to check whether the CRS is empty or not; Is this possible ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4179#issuecomment-1723731877
https://github.com/sofa-framework/sofa/pull/4179#issuecomment-1723731877:324,Modifiability,plugin,plugin,324,"@fredroy a feedback from Hadrien from #3894. A crash is occuring from the SofaCUDALDI plugin, but it does concern SOFA.; The crash has been noticed when constraints are added on a ""non-mechanical"" object, aka a passive/non-moving object used for the collision detection (MechanicalObject with no solver). In the SofaCUDALDI plugin the following code is written : . ``` cpp; MatrixDerivRowConstIterator1 Re1= c1.readLine(c.myCId);; MatrixDerivRowConstIterator2 Re2= c2.readLine(c.myCId);; ; for (MatrixDerivColIterator1 it=Re1.begin(); it!=Re1.end();++it); {; //unsigned int dof = itSvd1->first;; dx1+= it.val(); //x1Free[dof] - x1[dof];; }; ```. while in CompressedRowSparseMatrixConstraint.h there is: ; ``` cpp; ColConstIterator begin() const; {; Range r = m_matrix->getRowRange(m_internal);; return ColConstIterator(m_internal, r.begin(), m_matrix);; }; ```. and in CompressedRowSparseMatrixGeneric.h :; ``` cpp ; Range getRowRange(Index id) const { return Range(rowBegin[id], rowBegin[id+1]); }. ``` . where rowBegin is empty. Hadrien explained that in a CRM structure, 2 values are required minimum in order to check whether the CRS is empty or not; Is this possible ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4179#issuecomment-1723731877
https://github.com/sofa-framework/sofa/pull/4179#issuecomment-1723731877:260,Safety,detect,detection,260,"@fredroy a feedback from Hadrien from #3894. A crash is occuring from the SofaCUDALDI plugin, but it does concern SOFA.; The crash has been noticed when constraints are added on a ""non-mechanical"" object, aka a passive/non-moving object used for the collision detection (MechanicalObject with no solver). In the SofaCUDALDI plugin the following code is written : . ``` cpp; MatrixDerivRowConstIterator1 Re1= c1.readLine(c.myCId);; MatrixDerivRowConstIterator2 Re2= c2.readLine(c.myCId);; ; for (MatrixDerivColIterator1 it=Re1.begin(); it!=Re1.end();++it); {; //unsigned int dof = itSvd1->first;; dx1+= it.val(); //x1Free[dof] - x1[dof];; }; ```. while in CompressedRowSparseMatrixConstraint.h there is: ; ``` cpp; ColConstIterator begin() const; {; Range r = m_matrix->getRowRange(m_internal);; return ColConstIterator(m_internal, r.begin(), m_matrix);; }; ```. and in CompressedRowSparseMatrixGeneric.h :; ``` cpp ; Range getRowRange(Index id) const { return Range(rowBegin[id], rowBegin[id+1]); }. ``` . where rowBegin is empty. Hadrien explained that in a CRM structure, 2 values are required minimum in order to check whether the CRS is empty or not; Is this possible ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4179#issuecomment-1723731877
https://github.com/sofa-framework/sofa/pull/4179#issuecomment-1723731877:11,Usability,feedback,feedback,11,"@fredroy a feedback from Hadrien from #3894. A crash is occuring from the SofaCUDALDI plugin, but it does concern SOFA.; The crash has been noticed when constraints are added on a ""non-mechanical"" object, aka a passive/non-moving object used for the collision detection (MechanicalObject with no solver). In the SofaCUDALDI plugin the following code is written : . ``` cpp; MatrixDerivRowConstIterator1 Re1= c1.readLine(c.myCId);; MatrixDerivRowConstIterator2 Re2= c2.readLine(c.myCId);; ; for (MatrixDerivColIterator1 it=Re1.begin(); it!=Re1.end();++it); {; //unsigned int dof = itSvd1->first;; dx1+= it.val(); //x1Free[dof] - x1[dof];; }; ```. while in CompressedRowSparseMatrixConstraint.h there is: ; ``` cpp; ColConstIterator begin() const; {; Range r = m_matrix->getRowRange(m_internal);; return ColConstIterator(m_internal, r.begin(), m_matrix);; }; ```. and in CompressedRowSparseMatrixGeneric.h :; ``` cpp ; Range getRowRange(Index id) const { return Range(rowBegin[id], rowBegin[id+1]); }. ``` . where rowBegin is empty. Hadrien explained that in a CRM structure, 2 values are required minimum in order to check whether the CRS is empty or not; Is this possible ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4179#issuecomment-1723731877
https://github.com/sofa-framework/sofa/pull/4179#issuecomment-1724628724:20,Testability,test,tests,20,[ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4179#issuecomment-1724628724
https://github.com/sofa-framework/sofa/pull/4179#issuecomment-1724637659:283,Performance,perform,performance,283,"Well spotted @courtecuisse . - This fix reminds me that some bound checks (e.g type::vector) does only check in DEBUG mode/assertion https://github.com/sofa-framework/sofa/blob/649a41bf386b78c95264d9a6fb3125f4662c5a58/Sofa/framework/Type/src/sofa/type/vector_T.h#L108; obviously for performance reason. Should we do that here ? Thing is, many people do not run in debug so.... ü§ê. - I guess this is a far cry but @fjourdes you would want to get the fix ? (if you dont have it already...)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4179#issuecomment-1724637659
https://github.com/sofa-framework/sofa/pull/4179#issuecomment-1724637659:123,Testability,assert,assertion,123,"Well spotted @courtecuisse . - This fix reminds me that some bound checks (e.g type::vector) does only check in DEBUG mode/assertion https://github.com/sofa-framework/sofa/blob/649a41bf386b78c95264d9a6fb3125f4662c5a58/Sofa/framework/Type/src/sofa/type/vector_T.h#L108; obviously for performance reason. Should we do that here ? Thing is, many people do not run in debug so.... ü§ê. - I guess this is a far cry but @fjourdes you would want to get the fix ? (if you dont have it already...)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4179#issuecomment-1724637659
